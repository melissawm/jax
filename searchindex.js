Search.setIndex({"alltitles": {"(p)jit primitive": [[1441, "p-jit-primitive"]], "1. Automatic parallelism via jit": [[1500, "automatic-parallelism-via-jit"]], "1. Taking gradients with jax.grad": [[1350, "taking-gradients-with-jax-grad"]], "1. Tracing a function": [[1466, "tracing-a-function"]], "1D Convolutions": [[1469, "d-convolutions"]], "2. Computing gradients in a linear logistic regression": [[1350, "computing-gradients-in-a-linear-logistic-regression"]], "2. Evaluating a Jaxpr": [[1466, "evaluating-a-jaxpr"]], "2. Explicit sharding": [[1500, "explicit-sharding"]], "3. Differentiating with respect to nested lists, tuples, and dicts": [[1350, "differentiating-with-respect-to-nested-lists-tuples-and-dicts"]], "3. Manual parallelism with shard_map": [[1500, "manual-parallelism-with-shard-map"]], "3. Staging to an untyped IR": [[1349, "staging-to-an-untyped-ir"]], "3D Convolutions": [[1469, "id1"]], "4-way batch data parallelism and 2-way model tensor parallelism": [[1464, "way-batch-data-parallelism-and-2-way-model-tensor-parallelism"]], "4. Evaluating a function and its gradient using jax.value_and_grad": [[1350, "evaluating-a-function-and-its-gradient-using-jax-value-and-grad"]], "5. Checking against numerical differences": [[1350, "checking-against-numerical-differences"]], "8-way batch data parallelism": [[1464, "way-batch-data-parallelism"], [1474, "way-batch-data-parallelism"]], "8-way fully sharded data parallelism (FSDP)": [[1474, "way-fully-sharded-data-parallelism-fsdp"]], "8-way tensor parallelism (TP)": [[1474, "way-tensor-parallelism-tp"]], "A general strategy": [[1502, "a-general-strategy"]], "A modular stack": [[1341, "a-modular-stack"]], "A pluggable backend": [[1341, "a-pluggable-backend"]], "A realistic example": [[1445, "a-realistic-example"]], "A simple example": [[1378, "a-simple-example"]], "A simple example: Counter": [[1502, "a-simple-example-counter"]], "AMD GPU (Linux)": [[1384, "amd-gpu-linux"]], "AOT-compiled functions cannot be transformed": [[1344, "aot-compiled-functions-cannot-be-transformed"]], "API": [[1346, "api"], [1399, "api"], [1400, "api"], [1401, "api"], [1402, "api"], [1403, "api"], [1405, "api"], [1411, "api"], [1412, "api"], [1413, "api"], [1432, "api"], [1449, "api"]], "API Reference": [[1431, "api-reference"]], "API Specification": [[1445, "api-specification"], [1474, "api-specification"]], "API compatibility": [[1345, null]], "API policy": [[1416, "api-policy"]], "Ability to rematerialize constants, not just operations with data dependence on arguments": [[1443, "ability-to-rematerialize-constants-not-just-operations-with-data-dependence-on-arguments"]], "About the project": [[1341, null]], "Abstract evaluation rules": [[1390, "abstract-evaluation-rules"]], "Accessing memory": [[1489, "accessing-memory"]], "Achieving High Performance": [[1503, "achieving-high-performance"]], "Activation Offloading": [[1471, "activation-offloading"]], "Activation functions": [[1426, "activation-functions"]], "Adding compiler tokens": [[1442, "adding-compiler-tokens"]], "Adding cond": [[1348, "adding-cond"]], "Adding custom trace events": [[1496, "adding-custom-trace-events"]], "Additional Notes for Building jaxlib from source on Windows": [[1366, "additional-notes-for-building-jaxlib-from-source-on-windows"]], "Additional caching": [[1495, "additional-caching"]], "Additional notes for building a ROCM jaxlib for AMD GPUs": [[1366, "additional-notes-for-building-a-rocm-jaxlib-for-amd-gpus"]], "Advanced": [[1431, "advanced"]], "Advanced RNG configuration": [[1431, "advanced-rng-configuration"]], "Advanced Techniques": [[1490, "advanced-techniques"]], "Advanced automatic differentiation": [[1342, null]], "Advanced compilation": [[1335, null]], "Advanced configuration options": [[1496, "advanced-configuration-options"]], "Advanced debugging": [[1336, null]], "Advanced topics": [[1378, "advanced-topics"]], "Advanced: Recursive jax.checkpoint": [[1382, "advanced-recursive-jax-checkpoint"]], "Advanced: recursive jax.checkpoint": [[1468, "advanced-recursive-jax-checkpoint"]], "Ahead-of-time lowering and compilation": [[1344, null]], "Aliases": [[1408, "aliases"]], "All Configuration Options": [[1356, "all-configuration-options"]], "Allocating the accumulator": [[1484, "allocating-the-accumulator"]], "Allocating the accumulator / Using TMEM": [[1484, "allocating-the-accumulator-using-tmem"]], "Alternatives considered": [[1450, "alternatives-considered"]], "Analyzing the performance": [[1487, "analyzing-the-performance"]], "Annotate for intent": [[1444, "annotate-for-intent"]], "Appendix: Example Type Promotion Tables": [[1456, "appendix-example-type-promotion-tables"]], "Appendix: defining and motivating maps with unmapped inputs and outputs": [[1447, "appendix-defining-and-motivating-maps-with-unmapped-inputs-and-outputs"]], "Applying optional parameters to pytrees": [[1497, "applying-optional-parameters-to-pytrees"]], "Argument classes": [[1423, "argument-classes"], [1424, "argument-classes"]], "Array Garbage Collection Guard": [[1356, "jax_array_garbage_collection_guard"]], "Array Layouts": [[1489, "array-layouts"]], "Array Type Design Considerations": [[1444, "array-type-design-considerations"]], "Array constructors": [[1489, "array-constructors"]], "Array creation": [[1475, "array-creation"]], "Array devices and sharding": [[1475, "array-devices-and-sharding"]], "Array layouts": [[1484, "array-layouts"]], "Array layouts and memory reference transforms": [[1484, "array-layouts-and-memory-reference-transforms"]], "Array properties and methods": [[1388, "array-properties-and-methods"]], "Array updates with other operations": [[1462, "array-updates-with-other-operations"]], "Array updates: x.at[idx].set(y)": [[1462, "array-updates-x-at-idx-set-y"]], "ArrayRef: mutable arrays for data plumbing and memory control": [[1346, null]], "ArrayRefs and automatic differentiation": [[1346, "arrayrefs-and-automatic-differentiation"]], "ArrayRefs and performance": [[1346, "arrayrefs-and-performance"]], "Aside: forward-mode automatic differentiation": [[1349, "aside-forward-mode-automatic-differentiation"]], "Async Remote Copy Operation": [[1490, "async-remote-copy-operation"]], "Async ops inside kernels": [[1479, "async-ops-inside-kernels"]], "Asynchronous GMEM-to-SMEM copies": [[1484, "asynchronous-gmem-to-smem-copies"]], "Asynchronous callbacks": [[1363, "asynchronous-callbacks"]], "Asynchronous copies": [[1484, "asynchronous-copies"]], "Asynchronous dispatch": [[1347, null]], "Auto PGLE": [[1381, "auto-pgle"]], "Auto and manual PGLE": [[1381, "auto-and-manual-pgle"]], "Auto-batching predictions": [[1465, "auto-batching-predictions"], [1473, "auto-batching-predictions"]], "Auto-vectorization with jax.vmap": [[1475, "auto-vectorization-with-jax-vmap"]], "Autobatched with vmap": [[1476, "autobatched-with-vmap"]], "Autobatching for Bayesian inference": [[1476, null]], "Autodidax2, part 1: JAX from scratch, again": [[1349, null]], "Autodidax: JAX core from scratch": [[1348, null]], "Automatic differentiation": [[1343, null], [1350, null], [1388, "automatic-differentiation"]], "Automatic vectorization": [[1351, null], [1351, "id2"]], "Avoid unstable typing mechanisms": [[1444, "avoid-unstable-typing-mechanisms"]], "Awaiting tcgen05 TensorCore instructions": [[1484, "awaiting-tcgen05-tensorcore-instructions"]], "Axis 1: XLA alignment": [[1448, "axis-1-xla-alignment"]], "Axis 2: Array API Alignment": [[1448, "axis-2-array-api-alignment"]], "Axis 3: Existence of Downstream Implementations": [[1448, "axis-3-existence-of-downstream-implementations"]], "Axis 4: Complexity & Robustness of Implementation": [[1448, "axis-4-complexity-robustness-of-implementation"]], "Axis 5: Functional vs. Object-Oriented APIs": [[1448, "axis-5-functional-vs-object-oriented-apis"]], "Axis 6: General \u201cImportance\u201d to JAX Users & Stakeholders": [[1448, "axis-6-general-importance-to-jax-users-stakeholders"]], "BCOO Data Structure": [[1414, "bcoo-data-structure"]], "BCSR Data Structure": [[1414, "bcsr-data-structure"]], "Backend Target": [[1356, "jax_backend_target"]], "Backend code": [[1378, "backend-code"]], "Backends": [[1407, "backends"]], "Background": [[1442, "background"], [1444, "background"], [1448, "background"], [1479, "background"], [1492, "background"]], "Background + Motivation": [[1479, "background-motivation"]], "Barrier": [[1484, "barrier"]], "Barrier Semaphores": [[1490, "barrier-semaphores"]], "Basic Implementation": [[1471, "basic-implementation"]], "Basic N-dimensional convolution": [[1469, "basic-n-dimensional-convolution"]], "Basic one-dimensional convolution": [[1469, "basic-one-dimensional-convolution"]], "Basic usage": [[1431, "basic-usage"]], "Basic usage of jax.custom_jvp and jax.custom_vjp APIs": [[1342, "basic-usage-of-jax-custom-jvp-and-jax-custom-vjp-apis"], [1463, "basic-usage-of-jax-custom-jvp-and-jax-custom-vjp-apis"]], "Batched-coordinate (BCOO) sparse matrices": [[1414, "batched-coordinate-bcoo-sparse-matrices"]], "Batching": [[1390, "batching"]], "Batching with vmap": [[1378, "batching-with-vmap"]], "Bcoo Cusparse Lowering": [[1356, "jax_bcoo_cusparse_lowering"]], "Benchmarking JAX code": [[1377, "benchmarking-jax-code"]], "Bi-directional Communication": [[1490, "bi-directional-communication"]], "Blackwell (tcgen05)": [[1484, "blackwell-tcgen05"]], "Block Matrix Multiplication": [[1492, "block-matrix-multiplication"]], "Block specs by example": [[1488, "block-specs-by-example"]], "BlockSpec, a.k.a. how to chunk up inputs": [[1485, "blockspec-a-k-a-how-to-chunk-up-inputs"]], "BlockSpecs": [[1487, "blockspecs"]], "BlockSpecs and grid iteration": [[1489, "blockspecs-and-grid-iteration"]], "Blocking on output tokens": [[1442, "blocking-on-output-tokens"]], "Breaking change for pjit after switching to jax.Array for host local inputs": [[1440, "breaking-change-for-pjit-after-switching-to-jax-array-for-host-local-inputs"]], "Broadcasting": [[1489, "broadcasting"]], "Buffer Revisiting": [[1487, "buffer-revisiting"]], "Buffer donation": [[1377, "buffer-donation"]], "Building Blocks for Offloading": [[1471, "building-blocks-for-offloading"]], "Building JAX from source": [[1384, "building-jax-from-source"]], "Building and registering an FFI handler": [[1378, "building-and-registering-an-ffi-handler"]], "Building from source": [[1366, null]], "Building jaxlib from source": [[1366, "building-jaxlib-from-source"]], "Building jaxlib from source with a modified XLA repository.": [[1366, "building-jaxlib-from-source-with-a-modified-xla-repository"]], "Building jaxprs with tracing": [[1348, "building-jaxprs-with-tracing"]], "Building on JAX": [[1352, "building-on-jax"], [1353, null]], "Building or installing jaxlib": [[1366, "building-or-installing-jaxlib"]], "C++ interface": [[1378, "c-interface"]], "CPU": [[1384, "cpu"]], "Caching on multiple nodes": [[1495, "caching-on-multiple-nodes"]], "Caching thresholds": [[1495, "caching-thresholds"]], "Calendar versioning": [[1450, "calendar-versioning"]], "Callback overhead": [[1363, "callback-overhead"]], "Callbacks": [[1388, "callbacks"]], "Calling convention versions": [[1371, "calling-convention-versions"], [1371, "export-calling-convention-version"]], "Can this be improved?": [[1387, "can-this-be-improved"]], "Captured Constants Report Frames": [[1356, "jax_captured_constants_report_frames"]], "Captured Constants Warn Bytes": [[1356, "jax_captured_constants_warn_bytes"]], "Caveat for equality comparisons": [[1374, "caveat-for-equality-comparisons"]], "Caveats": [[1462, "caveats"]], "Challenge 1: pytype, mypy and developer friction": [[1444, "challenge-1-pytype-mypy-and-developer-friction"]], "Challenge 2: array duck-typing": [[1444, "challenge-2-array-duck-typing"]], "Challenge 3: transformations and decorators": [[1444, "challenge-3-transformations-and-decorators"]], "Challenge 4: array annotation lack of granularity": [[1444, "challenge-4-array-annotation-lack-of-granularity"]], "Challenge 5: imprecise APIs inherited from NumPy": [[1444, "challenge-5-imprecise-apis-inherited-from-numpy"]], "Change log": [[1354, null]], "Check Proxy Envs": [[1356, "jax_check_proxy_envs"]], "Check Tracer Leaks": [[1356, "jax_check_tracer_leaks"]], "Check Vma": [[1356, "check_vma"]], "Checking against numerical differences": [[1467, "checking-against-numerical-differences"]], "Checkpoint Names": [[1471, "checkpoint-names"]], "Checkpoint Policies": [[1471, "checkpoint-policies"]], "Classes": [[1407, "classes"], [1408, "classes"], [1409, "classes"], [1410, "classes"], [1415, "classes"], [1434, "classes"], [1435, "classes"]], "ClusterBarrier": [[1484, "clusterbarrier"]], "Code generation flags": [[1381, "code-generation-flags"]], "Collecting NVIDIA Nsight Systems profiles when using AutoPGLE": [[1381, "collecting-nvidia-nsight-systems-profiles-when-using-autopgle"]], "Collective MMA": [[1484, "collective-mma"]], "Collective allocations in pl.run_scoped": [[1484, "collective-allocations-in-pl-run-scoped"]], "Collectives tutorial": [[1474, "collectives-tutorial"]], "Combining Lattices": [[1456, "combining-lattices"]], "Combining transformations": [[1351, "combining-transformations"]], "Common Configuration Options": [[1356, "common-configuration-options"]], "Common Mistakes": [[1503, "common-mistakes"]], "Common causes of OOM failures": [[1380, "common-causes-of-oom-failures"]], "Common function: jax.tree.map": [[1506, "common-function-jax-tree-map"]], "Common pytree functions": [[1506, "common-pytree-functions"]], "Common pytree gotchas": [[1506, "common-pytree-gotchas"]], "Common pytree patterns": [[1506, "common-pytree-patterns"]], "Communication tips": [[1381, "communication-tips"]], "Comparing the three approaches": [[1500, "comparing-the-three-approaches"]], "Comparison of symbolic dimensions is partially supported": [[1374, "comparison-of-symbolic-dimensions-is-partially-supported"]], "Compatibility API using pl.pallas_call": [[1483, "compatibility-api-using-pl-pallas-call"]], "Compatibility guarantees": [[1371, "compatibility-guarantees"]], "Compatibility guarantees for custom calls": [[1371, "compatibility-guarantees-for-custom-calls"]], "Compilation Cache Dir": [[1356, "jax_compilation_cache_dir"]], "Compilation Cache Expect Pgle": [[1356, "jax_compilation_cache_expect_pgle"]], "Compilation Cache Include Metadata In Key": [[1356, "jax_compilation_cache_include_metadata_in_key"]], "Compilation Cache Max Size": [[1356, "jax_compilation_cache_max_size"]], "Compilation and execution": [[1385, "compilation-and-execution"]], "Compilation failure": [[1501, "compilation-failure"]], "Compiled prints and breakpoints": [[1363, null]], "Compiler Detailed Logging Min Ops": [[1356, "jax_compiler_detailed_logging_min_ops"]], "Compiler Enable Remat Pass": [[1356, "jax_compiler_enable_remat_pass"]], "Compiler parameters": [[1484, "compiler-parameters"]], "Complex numbers and differentiation": [[1342, "complex-numbers-and-differentiation"], [1467, "complex-numbers-and-differentiation"]], "Composable domain specific libraries with JAX exposed": [[1353, "composable-domain-specific-libraries-with-jax-exposed"]], "Composing VJPs, JVPs, and jax.vmap": [[1342, "composing-vjps-jvps-and-jax-vmap"]], "Composing VJPs, JVPs, and vmap": [[1467, "composing-vjps-jvps-and-vmap"]], "Computation follows data sharding and is automatically parallelized": [[1464, "computation-follows-data-sharding-and-is-automatically-parallelized"]], "Computation placement": [[1489, "computation-placement"]], "Computational speedup on a single core across multiple devices": [[1353, "computational-speedup-on-a-single-core-across-multiple-devices"]], "Computing with dimension variables": [[1374, "computing-with-dimension-variables"]], "Conclusion": [[1479, "conclusion"], [1492, "conclusion"]], "Concrete array shardings can mention Auto mesh axis": [[1470, "concrete-array-shardings-can-mention-auto-mesh-axis"]], "Concurrency": [[1355, null]], "Conda (community-supported)": [[1384, "conda-community-supported"]], "Conda installation": [[1384, "conda-installation"]], "Configuration": [[1388, "configuration"]], "Configuration Options": [[1356, null]], "Configuring XLA in Jax:": [[1507, "configuring-xla-in-jax"]], "Configuring profiler options": [[1496, "configuring-profiler-options"]], "Constant variables (vars)": [[1441, "constant-variables-vars"]], "Constants": [[1415, "constants"]], "Constraining intermediate layouts": [[1472, "constraining-intermediate-layouts"]], "Constraining shardings of intermediates in jitted code": [[1464, "constraining-shardings-of-intermediates-in-jitted-code"]], "Contents": [[1443, "contents"], [1449, "contents"], [1451, "contents"], [1454, "contents"]], "Contributing code using pull requests": [[1357, "contributing-code-using-pull-requests"]], "Contributing to JAX": [[1357, null]], "Contribution guides": [[1358, null]], "Control autodiff\u2019s saved values with jax.checkpoint (aka jax.remat)": [[1468, null]], "Control flow": [[1489, "control-flow"]], "Control flow and logical operators with JIT": [[1359, null]], "Control flow operators": [[1424, "control-flow-operators"]], "Controlling data and computation placement on devices": [[1377, "controlling-data-and-computation-placement-on-devices"]], "Controlling how each input is split (unconcatenated) and tiled with in_specs": [[1445, "controlling-how-each-input-is-split-unconcatenated-and-tiled-with-in-specs"], [1474, "controlling-how-each-input-is-split-unconcatenated-and-tiled-with-in-specs"]], "Controlling how each output assembled by concatenation, block transposition, and untiling using out_specs": [[1445, "controlling-how-each-output-assembled-by-concatenation-block-transposition-and-untiling-using-out-specs"], [1474, "controlling-how-each-output-assembled-by-concatenation-block-transposition-and-untiling-using-out-specs"]], "Controlling test behavior": [[1366, "controlling-test-behavior"]], "Copies with downstream ops": [[1479, "copies-with-downstream-ops"]], "Copying and Serialization": [[1428, "copying-and-serialization"]], "Correctness of shape polymorphism": [[1374, "correctness-of-shape-polymorphism"]], "Cpu Collectives Implementation": [[1356, "jax_cpu_collectives_implementation"]], "Cpu Enable Async Dispatch": [[1356, "jax_cpu_enable_async_dispatch"]], "Cpu Enable Gloo Collectives": [[1356, "jax_cpu_enable_gloo_collectives"]], "Cpu Get Global Topology Timeout Minutes": [[1356, "jax_cpu_get_global_topology_timeout_minutes"]], "Cpu Get Local Topology Timeout Minutes": [[1356, "jax_cpu_get_local_topology_timeout_minutes"]], "Creating jax.Array": [[1440, "creating-jax-array"]], "Creating new notebooks": [[1366, "creating-new-notebooks"]], "Cross Host Transfer Socket Address": [[1356, "jax_cross_host_transfer_socket_address"]], "Cross Host Transfer Timeout Seconds": [[1356, "jax_cross_host_transfer_timeout_seconds"]], "Cross Host Transfer Transfer Size": [[1356, "jax_cross_host_transfer_transfer_size"]], "Cross Host Transport Addresses": [[1356, "jax_cross_host_transport_addresses"]], "Cross-platform and multi-platform export": [[1371, "cross-platform-and-multi-platform-export"]], "Cuda Visible Devices": [[1356, "jax_cuda_visible_devices"]], "Custom JVP/VJP rules for JAX-transformable functions": [[1449, null]], "Custom JVPs with jax.custom_jvp": [[1463, "custom-jvps-with-jax-custom-jvp"]], "Custom PyTrees and Initialization": [[1497, "custom-pytrees-and-initialization"]], "Custom VJPs with jax.custom_vjp": [[1463, "custom-vjps-with-jax-custom-vjp"]], "Custom Vjp Disable Shape Check": [[1356, "jax_custom_vjp_disable_shape_check"]], "Custom derivative rules": [[1463, null]], "Custom derivative rules for JAX-transformable Python functions": [[1342, "custom-derivative-rules-for-jax-transformable-python-functions"]], "Custom gradient operators": [[1424, "custom-gradient-operators"]], "Custom hermetic Python examples": [[1366, "custom-hermetic-python-examples"]], "Custom inverse Jaxpr interpreter": [[1466, "custom-inverse-jaxpr-interpreter"]], "Custom policies for offload": [[1382, "custom-policies-for-offload"]], "Custom policies for what\u2019s saveable": [[1382, "custom-policies-for-what-s-saveable"], [1468, "custom-policies-for-what-s-saveable"]], "Custom pytree nodes": [[1506, "custom-pytree-nodes"]], "Custom pytrees and initialization with unexpected values": [[1506, "custom-pytrees-and-initialization-with-unexpected-values"]], "Customization": [[1388, "customization"]], "Customizing PRNG implementations": [[1455, "customizing-prng-implementations"]], "Customizing hermetic Python (Advanced Usage)": [[1366, "customizing-hermetic-python-advanced-usage"]], "DMA Semaphores": [[1490, "dma-semaphores"]], "Data + model parallelism": [[1369, "data-model-parallelism"]], "Data Loading": [[1503, "data-loading"]], "Data Parallel": [[1503, "data-parallel"]], "Data Placement with device_put": [[1471, "data-placement-with-device-put"]], "Data loading with PyTorch": [[1465, "data-loading-with-pytorch"]], "Data loading with tensorflow/datasets": [[1473, "data-loading-with-tensorflow-datasets"]], "Data parallelism": [[1369, "data-parallelism"]], "Debug Infs": [[1356, "jax_debug_infs"]], "Debug Key Reuse": [[1356, "jax_debug_key_reuse"]], "Debug Log Modules": [[1356, "jax_debug_log_modules"]], "Debug Nans": [[1356, "jax_debug_nans"]], "Debug information and analyses, when available": [[1344, "debug-information-and-analyses-when-available"]], "Debugging": [[1371, "debugging"], [1374, "debugging"], [1484, "debugging"]], "Debugging NaNs": [[1462, "debugging-nans"]], "Debugging memory leaks": [[1367, "debugging-memory-leaks"]], "Debugging with jax.debug.print and other debugging callbacks": [[1363, "debugging-with-jax-debug-print-and-other-debugging-callbacks"]], "Deep dives": [[1343, null]], "Default Device": [[1356, "jax_default_device"]], "Default Matmul Precision": [[1356, "jax_default_matmul_precision"]], "Default Prng Impl": [[1356, "jax_default_prng_impl"]], "Default dtypes and the X64 flag": [[1364, null]], "Default setting: 32-bits everywhere": [[1364, "default-setting-32-bits-everywhere"]], "Defensive copies": [[1479, "defensive-copies"]], "Define the ELBO and its gradient": [[1476, "define-the-elbo-and-its-gradient"]], "Defining new JAX primitives": [[1390, "defining-new-jax-primitives"]], "Dependence on JAX internal APIs that changed": [[1454, "dependence-on-jax-internal-apis-that-changed"]], "Deriving a Double-Buffered Pipeline": [[1487, "deriving-a-double-buffered-pipeline"]], "Design": [[1451, "design"], [1481, null]], "Design Notes": [[1486, null]], "Design and background": [[1431, "design-and-background"]], "Design and internals": [[1358, null]], "Design challenges": [[1452, "design-challenges"]], "Design of Type Promotion Semantics for JAX": [[1456, null]], "Design of typed PRNG keys": [[1455, "design-of-typed-prng-keys"]], "Detecting new-style typed keys": [[1455, "detecting-new-style-typed-keys"]], "Developer documentation": [[1371, "developer-documentation"]], "Developer information": [[1497, "developer-information"]], "Developer notes": [[1358, null]], "Device Mesh": [[1503, "device-mesh"]], "Device Mesh and Shardings": [[1503, "device-mesh-and-shardings"]], "Device Output Sharding": [[1471, "device-output-sharding"]], "Device memory profiling": [[1430, "device-memory-profiling"]], "Device-local array layout control": [[1472, null]], "Device-polymorphic export": [[1371, "device-polymorphic-export"]], "Different kinds of JAX values": [[1377, "different-kinds-of-jax-values"]], "Differentiating with respect to nested lists, tuples, and dicts": [[1467, "differentiating-with-respect-to-nested-lists-tuples-and-dicts"]], "Differentiation": [[1378, "differentiation"]], "Dimension Numbers define dimensional layout for conv_general_dilated": [[1469, "dimension-numbers-define-dimensional-layout-for-conv-general-dilated"]], "Dimension variables must be solvable from the input shapes": [[1374, "dimension-variables-must-be-solvable-from-the-input-shapes"]], "Direct usage": [[1353, "direct-usage"]], "Disable Jit": [[1356, "jax_disable_jit"]], "Disable Most Optimizations": [[1356, "jax_disable_most_optimizations"]], "Disable Vmap Shmap Error": [[1356, "jax_disable_vmap_shmap_error"]], "Disallow Mesh Context Manager": [[1356, "jax_disallow_mesh_context_manager"]], "Display the results": [[1476, "display-the-results"]], "Distributed Computing in Pallas for TPUs": [[1490, null]], "Distributed Debug": [[1356, "jax_distributed_debug"]], "Distributed arrays and automatic parallelization": [[1464, null]], "Distributed data loading": [[1369, null]], "Doctests": [[1366, "doctests"]], "Documentation building on readthedocs.io": [[1366, "documentation-building-on-readthedocs-io"]], "Double-buffering": [[1490, "double-buffering"]], "Dump Ir Modes": [[1356, "jax_dump_ir_modes"]], "Dump Ir To": [[1356, "jax_dump_ir_to"]], "Dynamic Block Indexing with Scalar Prefetch": [[1494, "dynamic-block-indexing-with-scalar-prefetch"]], "Dynamic Block Shapes": [[1493, "dynamic-block-shapes"]], "Dynamic Shapes": [[1356, "jax_dynamic_shapes"]], "Eager Constant Folding": [[1356, "eager_constant_folding"]], "Ecosystem": [[1383, "ecosystem"]], "Editing ipynb": [[1366, "editing-ipynb"]], "Editing md": [[1366, "editing-md"]], "Effects of Python operator dispatch": [[1505, "effects-of-python-operator-dispatch"]], "Efficiency via Asynchronous Dispatch": [[1503, "efficiency-via-asynchronous-dispatch"]], "Efficient transposition of replication-inducing collectives": [[1447, null]], "Elementwise operations": [[1489, "elementwise-operations"]], "Emulation mode": [[1480, "emulation-mode"]], "Enable Checks": [[1356, "jax_enable_checks"]], "Enable Compilation Cache": [[1356, "jax_enable_compilation_cache"]], "Enable Custom Prng": [[1356, "jax_enable_custom_prng"]], "Enable Custom Vjp By Custom Transpose": [[1356, "jax_enable_custom_vjp_by_custom_transpose"]], "Enable Pgle": [[1356, "jax_enable_pgle"]], "Enable Recoverability": [[1356, "jax_enable_recoverability"]], "Enable X64": [[1356, "jax_enable_x64"]], "Enabling new JAX features by simplifying internals": [[1443, "enabling-new-jax-features-by-simplifying-internals"]], "Enforcing a differentiation convention": [[1463, "enforcing-a-differentiation-convention"]], "Enforcing ordered effects": [[1442, "enforcing-ordered-effects"]], "Ensuring forward and backward compatibility": [[1371, "ensuring-forward-and-backward-compatibility"]], "Enter Python Scalars": [[1456, "enter-python-scalars"]], "Err toward simplicity": [[1444, "err-toward-simplicity"]], "Error Checking Behavior Divide": [[1356, "jax_error_checking_behavior_divide"]], "Error Checking Behavior Nan": [[1356, "jax_error_checking_behavior_nan"]], "Error Checking Behavior Oob": [[1356, "jax_error_checking_behavior_oob"]], "Error message": [[1454, "error-message"], [1454, "id2"]], "Errors": [[1370, null]], "Errors and debugging": [[1343, null]], "Errors in presence of shape polymorphism": [[1374, "errors-in-presence-of-shape-polymorphism"]], "Evaluate a function and its gradient using value_and_grad": [[1467, "evaluate-a-function-and-its-gradient-using-value-and-grad"]], "Evaluation": [[1444, "evaluation"]], "Evaluation Rubric": [[1448, "evaluation-rubric"]], "Evaluation interpreter": [[1348, "evaluation-interpreter"]], "Evaluation: what\u2019s in scope?": [[1448, "evaluation-whats-in-scope"]], "Examining cache misses": [[1495, "examining-cache-misses"]], "Example": [[1454, "example"], [1454, "id1"], [1503, null], [1503, null]], "Example - Elementwise Kernel revisited": [[1487, "example-elementwise-kernel-revisited"]], "Example 1: all-gather on one side": [[1474, "example-1-all-gather-on-one-side"]], "Example 2: psum_scatter the result": [[1474, "example-2-psum-scatter-the-result"]], "Example applications": [[1343, null]], "Example of jax.tree.map with ML model parameters": [[1506, "example-of-jax-tree-map-with-ml-model-parameters"]], "Example problems": [[1342, "example-problems"], [1463, "example-problems"]], "Example(s)": [[1362, "example-s"]], "Example: All-Reduce Sum (lax.psum)": [[1490, "example-all-reduce-sum-lax-psum"]], "Example: All-gather (lax.all_gather)": [[1490, "example-all-gather-lax-all-gather"]], "Example: Bi-directional Reduce-Scatter (lax.psum_scatter)": [[1490, "example-bi-directional-reduce-scatter-lax-psum-scatter"]], "Example: Block Dynamic Slice with Scalar Prefetch": [[1494, "example-block-dynamic-slice-with-scalar-prefetch"]], "Example: Dense @ Dense Matrix Multiplication with a Block-Sparse Output Mask": [[1494, "example-dense-dense-matrix-multiplication-with-a-block-sparse-output-mask"]], "Example: Enforcing a differentiation convention": [[1342, "example-enforcing-a-differentiation-convention"]], "Example: Gradient clipping": [[1342, "example-gradient-clipping"]], "Example: Implicit function differentiation of iterative implementations": [[1342, "example-implicit-function-differentiation-of-iterative-implementations"]], "Example: Matmul Kernel on Hopper GPUs": [[1483, "example-matmul-kernel-on-hopper-gpus"]], "Example: Matrix Multiplication with Warp Specialization": [[1483, "example-matrix-multiplication-with-warp-specialization"]], "Example: Numerical stability": [[1342, "example-numerical-stability"]], "Example: Python debugging": [[1342, "example-python-debugging"]], "Example: Reduce-Scatter with large HBM blocks": [[1490, "example-reduce-scatter-with-large-hbm-blocks"]], "Example: Right Permute (lax.ppermute)": [[1490, "example-right-permute-lax-ppermute"]], "Example: Sparse @ Dense Matrix Multiplication": [[1494, "example-sparse-dense-matrix-multiplication"]], "Example: Writing a simple neural network": [[1340, null]], "Example: pure_callback with custom_jvp": [[1376, "example-pure-callback-with-custom-jvp"]], "Example: sparse logistic regression": [[1414, "example-sparse-logistic-regression"]], "Examples": [[1362, "examples"], [1363, "examples"], [1369, "examples"]], "Examples: neural networks": [[1464, "examples-neural-networks"]], "Exec Time Optimization Effort": [[1356, "jax_exec_time_optimization_effort"]], "Executing Pallas kernels with pallas_call": [[1480, "executing-pallas-kernels-with-pallas-call"]], "Exercises for the reader": [[1466, "exercises-for-the-reader"]], "Experimental APIs": [[1398, "experimental-apis"]], "Experimental Key Reuse Checking": [[1404, "experimental-key-reuse-checking"]], "Experimental Modules": [[1398, "experimental-modules"]], "Experimental Unsafe Xla Runtime Errors": [[1356, "jax_experimental_unsafe_xla_runtime_errors"]], "Experimental and example libraries": [[1345, "experimental-and-example-libraries"]], "Experimental features": [[1380, "experimental-features"]], "Explain Cache Misses": [[1356, "jax_explain_cache_misses"]], "Explanation": [[1453, "explanation"], [1454, "explanation"], [1454, "id3"]], "Explicit arrival (cross-thread synchronization)": [[1484, "explicit-arrival-cross-thread-synchronization"]], "Explicit key paths": [[1506, "explicit-key-paths"]], "Explicit random state": [[1498, "explicit-random-state"]], "Explicit sharding (a.k.a. \u201csharding in types\u201d)": [[1470, null]], "Explicitly private APIs": [[1345, "explicitly-private-apis"]], "Exploring debug.callback": [[1376, "exploring-debug-callback"]], "Exploring io_callback": [[1376, "exploring-io-callback"]], "Exploring pure_callback": [[1376, "exploring-pure-callback"]], "Export Calling Convention Version": [[1356, "jax_export_calling_convention_version"]], "Export Ignore Forward Compatibility": [[1356, "jax_export_ignore_forward_compatibility"]], "Exporting and serialization": [[1372, null]], "Exporting and serializing staged-out computations": [[1371, null]], "Extended dtypes": [[1455, "extended-dtypes"]], "Extending JAX with new Pallas primitives": [[1480, "extending-jax-with-new-pallas-primitives"]], "Extending pytrees": [[1497, "extending-pytrees"]], "Extensible JAX internals": [[1375, null]], "Extension guides": [[1375, null]], "External Callbacks": [[1343, null]], "External callbacks": [[1376, null]], "FFI": [[1343, null]], "FFI calls on a GPU": [[1378, "ffi-calls-on-a-gpu"]], "FROM_GDA and jax.Array": [[1440, "from-gda-and-jax-array"]], "FSDP + TP, with shard_map at the top level": [[1474, "fsdp-tp-with-shard-map-at-the-top-level"]], "Failure modes": [[1490, "failure-modes"]], "Fin.": [[1462, "fin"]], "Final Notes": [[1490, "final-notes"]], "Final verification": [[1387, "final-verification"]], "Finding Help": [[1352, "finding-help"]], "Flags": [[1381, "flags"]], "Flavors of callback": [[1376, "flavors-of-callback"]], "Following NumPy\u2019s lead": [[1444, "following-numpy-s-lead"]], "Foreign function interface (FFI)": [[1378, null]], "Forward differentiation": [[1390, "forward-differentiation"]], "Forward-mode autodiff with jvp": [[1348, "forward-mode-autodiff-with-jvp"]], "Frequently asked questions (FAQ)": [[1377, null]], "Frontend code": [[1378, "frontend-code"]], "Full GitHub test suite": [[1357, "full-github-test-suite"]], "Full replication": [[1369, "full-replication"]], "Full solution: statically track device-varying vs device-invariant intermediates, plus new primitives": [[1447, "full-solution-statically-track-device-varying-vs-device-invariant-intermediates-plus-new-primitives"]], "Fully-Sharded Data Parallel (FSDP)": [[1503, "fully-sharded-data-parallel-fsdp"]], "Functional error checks with jax.experimental.checkify": [[1360, "functional-error-checks-with-jax-experimental-checkify"]], "Functionalizing checks": [[1361, "functionalizing-checks"]], "Functions": [[1407, "functions"], [1408, "functions"], [1409, "functions"], [1410, "functions"], [1415, "functions"]], "Functions related to shape polymorphism": [[1415, "functions-related-to-shape-polymorphism"]], "Fundamentals of jax.checkpoint": [[1468, "fundamentals-of-jax-checkpoint"]], "Fused activation function": [[1492, "fused-activation-function"]], "Fused right-hand-side transpose": [[1492, "fused-right-hand-side-transpose"]], "GDA\u2019s API name changes": [[1440, "gdas-api-name-changes"]], "GPU Example": [[1461, "gpu-example"]], "GPU Examples": [[1480, "gpu-examples"]], "GPU Memory Spaces": [[1483, "gpu-memory-spaces"]], "GPU memory allocation": [[1380, null]], "GPU performance tips": [[1381, null]], "GPU profiling": [[1496, "gpu-profiling"]], "General approach for loading a jax.Array": [[1369, "general-approach-for-loading-a-jax-array"]], "General convolutions": [[1469, "general-convolutions"]], "General options": [[1496, "general-options"]], "Generalized convolutions in JAX": [[1469, null]], "Generate a fake binary classification dataset": [[1476, "generate-a-fake-binary-classification-dataset"]], "Getting Started with JAX": [[1352, null]], "Glossary of terms": [[1379, null]], "Goals": [[1449, "goals"]], "Goals of JAX Type Promotion": [[1456, "goals-of-jax-type-promotion"]], "Google Cloud": [[1495, "google-cloud"]], "Google Cloud TPU": [[1384, "google-cloud-tpu"]], "Google contributor license agreement": [[1357, "google-contributor-license-agreement"]], "Gradient and Optimizer Update": [[1503, "gradient-and-optimizer-update"]], "Gradient checkpointing with jax.checkpoint (jax.remat)": [[1382, null]], "Gradient clipping": [[1463, "gradient-clipping"]], "Gradient computation": [[1353, "gradient-computation"]], "Gradients": [[1467, "gradients"]], "Gradients contain NaN where using where": [[1377, "gradients-contain-nan-where-using-where"]], "Grid": [[1487, "grid"]], "Grid semantics": [[1488, "grid-semantics"]], "Grids and BlockSpecs": [[1485, null]], "Grids by example": [[1488, "grids-by-example"]], "Guides": [[1372, null], [1486, null], [1491, null]], "Guiding Principles": [[1444, "guiding-principles"]], "Handling  non-differentiable arguments": [[1342, "handling-non-differentiable-arguments"], [1463, "handling-non-differentiable-arguments"]], "Handling of None by jax.tree_util": [[1506, "handling-of-none-by-jax-tree-util"]], "Handling of closed-over constants": [[1385, null]], "Handling of host local inputs to pjit like batch, etc": [[1440, "handling-of-host-local-inputs-to-pjit-like-batch-etc"]], "Handling pytrees": [[1441, "handling-pytrees"]], "Hello world in Pallas": [[1488, "hello-world-in-pallas"]], "Hessian-vector products using both forward- and reverse-mode": [[1342, "hessian-vector-products-using-both-forward-and-reverse-mode"], [1467, "hessian-vector-products-using-both-forward-and-reverse-mode"]], "Hessian-vector products with grad-of-grad": [[1467, "hessian-vector-products-with-grad-of-grad"]], "Hessian-vector products with jax.grad-of-jax.grad": [[1342, "hessian-vector-products-with-jax-grad-of-jax-grad"]], "High Dynamic Range Gumbel": [[1356, "jax_high_dynamic_range_gumbel"]], "Higher-order JAX primitives": [[1441, "higher-order-jax-primitives"]], "Higher-order derivatives": [[1342, "higher-order-derivatives"]], "Higher-order optimization": [[1342, "higher-order-optimization"]], "Hlo Source File Canonicalization Regex": [[1356, "jax_hlo_source_file_canonicalization_regex"]], "Hopper (wgmma)": [[1484, "hopper-wgmma"]], "Host Output Sharding": [[1471, "host-output-sharding"]], "Hourly investigation": [[1387, "hourly-investigation"]], "How JAX transformations work": [[1459, "how-jax-transformations-work"]], "How are jax and jaxlib versioned?": [[1457, "how-are-jax-and-jaxlib-versioned"]], "How can I convert a JAX Tracer to a NumPy array?": [[1377, "how-can-i-convert-a-jax-tracer-to-a-numpy-array"]], "How can I disable Shardy for now?": [[1501, "how-can-i-disable-shardy-for-now"]], "How can I disable jax.Array for now?": [[1440, "how-can-i-disable-jax-array-for-now"]], "How can I disable omnistaging for now?": [[1454, "how-can-i-disable-omnistaging-for-now"]], "How can I disable the change, and go back to the old behavior for now?": [[1443, "how-can-i-disable-the-change-and-go-back-to-the-old-behavior-for-now"]], "How can I safely make changes to the API of jaxlib?": [[1457, "how-can-i-safely-make-changes-to-the-api-of-jaxlib"]], "How do I fix bugs exposed by omnistaging?": [[1454, "how-do-i-fix-bugs-exposed-by-omnistaging"]], "How do I know if Shardy broke my code?": [[1501, "how-do-i-know-if-shardy-broke-my-code"]], "How do I know if jax.Array broke my code?": [[1440, "how-do-i-know-if-jax-array-broke-my-code"]], "How do I know if omnistaging broke my code?": [[1454, "how-do-i-know-if-omnistaging-broke-my-code"]], "How do I prepare for Shardy being enabled in March 2026 permanently?": [[1501, "how-do-i-prepare-for-shardy-being-enabled-in-march-2026-permanently"]], "How do we implement decomposed Pallas async operations (on TPU)?": [[1479, "how-do-we-implement-decomposed-pallas-async-operations-on-tpu"]], "How do we make changes across the jax and jaxlib boundary between releases?": [[1457, "how-do-we-make-changes-across-the-jax-and-jaxlib-boundary-between-releases"]], "How is the source to jaxlib laid out?": [[1457, "how-is-the-source-to-jaxlib-laid-out"]], "How it works": [[1495, "how-it-works"]], "How it\u2019s made: Two foundational autodiff functions": [[1342, "how-it-s-made-two-foundational-autodiff-functions"]], "How it\u2019s made: two foundational autodiff functions": [[1467, "how-it-s-made-two-foundational-autodiff-functions"]], "How this system solves the inefficient transpose examples": [[1447, "how-this-system-solves-the-inefficient-transpose-examples"]], "How to Use Configuration Options": [[1356, "how-to-use-configuration-options"]], "How to enable jax.Array?": [[1440, "how-to-enable-jax-array"]], "How to handle uint64?": [[1456, "how-to-handle-uint64"]], "How to implement the solution": [[1447, "how-to-implement-the-solution"]], "How to make the API convenient for users (and backward compatible)": [[1447, "how-to-make-the-api-convenient-for-users-and-backward-compatible"]], "How to start a JEP": [[1458, "how-to-start-a-jep"]], "How to use jit with methods?": [[1377, "how-to-use-jit-with-methods"]], "Hyperparameters": [[1465, "hyperparameters"], [1473, "hyperparameters"]], "Hypothesis tests": [[1366, "hypothesis-tests"]], "Image manipulation functions": [[1423, "image-manipulation-functions"]], "Immediate benefits of Pallas as a front-end": [[1480, "immediate-benefits-of-pallas-as-a-front-end"]], "Implementation": [[1452, "implementation"]], "Implementation Plan": [[1444, "implementation-plan"]], "Implementation notes": [[1449, "implementation-notes"]], "Implicit function differentiation of iterative implementations": [[1463, "implicit-function-differentiation-of-iterative-implementations"]], "Important trick about data parallelism": [[1369, "important-trick-about-data-parallelism"]], "In-order execution & using multiple hardware units": [[1484, "in-order-execution-using-multiple-hardware-units"]], "Inadvertent transposing of key buffers": [[1455, "inadvertent-transposing-of-key-buffers"]], "Include Debug Info In Dumps": [[1356, "jax_include_debug_info_in_dumps"]], "Include Full Tracebacks In Locations": [[1356, "jax_include_full_tracebacks_in_locations"]], "Inconsistent value of the use Shardy flag": [[1501, "inconsistent-value-of-the-use-shardy-flag"]], "Incorporating JAX code into your, or your users, workflows": [[1353, "incorporating-jax-code-into-your-or-your-users-workflows"]], "Initializers": [[1427, "initializers"]], "Inline Mosaic GPU": [[1484, "inline-mosaic-gpu"]], "Innocuous numerical changes": [[1443, "innocuous-numerical-changes"]], "Inputs should be permissively-typed": [[1444, "inputs-should-be-permissively-typed"]], "Installation": [[1367, "installation"], [1384, null], [1475, "installation"], [1496, "installation"]], "Installing jax": [[1366, "installing-jax"]], "Installing jaxlib with pip": [[1366, "installing-jaxlib-with-pip"]], "Installing older jaxlib wheels": [[1384, "installing-older-jaxlib-wheels"]], "Intel GPU": [[1384, "intel-gpu"]], "Interaction with XLA": [[1490, "interaction-with-xla"]], "Interactive inspection with jax.debug.breakpoint()": [[1363, "interactive-inspection-with-jax-debug-breakpoint"]], "Internal pytree handling": [[1497, "internal-pytree-handling"]], "Interoperation with TensorFlow": [[1373, null]], "Interrupting the accelerator": [[1503, "interrupting-the-accelerator"]], "Intro and a quick example": [[1464, "intro-and-a-quick-example"]], "Introduction": [[1480, "introduction"], [1507, "introduction"]], "Introduction to JAX primitives": [[1390, "introduction-to-jax-primitives"]], "Introduction to debugging": [[1360, null]], "Introduction to multi-controller JAX (aka multi-process/multi-host JAX)": [[1461, null]], "Introduction to parallel programming": [[1500, null]], "Investigating a regression": [[1387, null]], "Is JAX faster than NumPy?": [[1377, "is-jax-faster-than-numpy"]], "Issuing the operation": [[1484, "issuing-the-operation"], [1484, "id2"]], "Iterative development": [[1446, "iterative-development"]], "JAX 0.6.0 (April 16, 2025)": [[1354, "jax-0-6-0-april-16-2025"]], "JAX 0.6.1 (May 21, 2025)": [[1354, "jax-0-6-1-may-21-2025"]], "JAX 0.6.2 (June 17, 2025)": [[1354, "jax-0-6-2-june-17-2025"]], "JAX 0.7.0 (July 22, 2025)": [[1354, "jax-0-7-0-july-22-2025"]], "JAX 0.7.1 (August 20, 2025)": [[1354, "jax-0-7-1-august-20-2025"]], "JAX 101": [[1337, "jax-101"], [1352, "jax-101"], [1389, null]], "JAX 201": [[1337, "jax-201"]], "JAX 301": [[1337, "jax-301"]], "JAX API layering: NumPy, lax & XLA": [[1460, "jax-api-layering-numpy-lax-xla"]], "JAX Array": [[1428, "jax-array"]], "JAX Enhancement Proposals (JEPs)": [[1458, null]], "JAX Internal Implementation Notes": [[1386, null]], "JAX Internals: primitives": [[1390, null]], "JAX Memories and Host Offloading": [[1471, null]], "JAX PRNG Design": [[1451, null]], "JAX Type Promotion: jax.lax": [[1456, "jax-type-promotion-jax-lax"]], "JAX Type Promotion: jax.numpy": [[1456, "jax-type-promotion-jax-numpy"]], "JAX Typing Best Practices": [[1439, "jax-typing-best-practices"]], "JAX Versioning": [[1345, "jax-versioning"]], "JAX arrays (jax.Array)": [[1475, "jax-arrays-jax-array"]], "JAX core machinery": [[1348, "jax-core-machinery"]], "JAX debugging flags": [[1362, null]], "JAX direct linearize": [[1368, null]], "JAX export backwards compatibility": [[1501, "jax-export-backwards-compatibility"]], "JAX extend": [[1345, "jax-extend"]], "JAX internals: The jaxpr language": [[1441, null]], "JAX nightly installation": [[1384, "jax-nightly-installation"]], "JAX pull request checklist": [[1357, "jax-pull-request-checklist"]], "JAX totally hidden from users": [[1353, "jax-totally-hidden-from-users"]], "JAX transformations and higher-order functions": [[1470, "jax-transformations-and-higher-order-functions"]], "JAX tutorials draft": [[1337, null]], "JAX type annotation roadmap": [[1444, "jax-type-annotation-roadmap"]], "JAX vs. NumPy": [[1475, "jax-vs-numpy"]], "JAX: High performance array computing": [[1383, null]], "JEP 18137: Scope of JAX NumPy & SciPy Wrappers": [[1448, null]], "JEP 25516: Effort-based versioning for JAX": [[1450, null]], "JEP 28661: Supporting the __jax_array__ protocol": [[1452, null]], "JEP 9263: Typed keys & pluggable RNGs": [[1455, null]], "JIT and caching": [[1459, "jit-and-caching"]], "JIT compiling a function": [[1459, "jit-compiling-a-function"]], "JIT mechanics: tracing and static variables": [[1475, "jit-mechanics-tracing-and-static-variables"]], "JIT of batching": [[1390, "jit-of-batching"]], "JIT of forward differentiation": [[1390, "jit-of-forward-differentiation"]], "JIT of reverse differentiation": [[1390, "jit-of-reverse-differentiation"]], "JVP Interpreter": [[1349, "jvp-interpreter"]], "JVPs in JAX code": [[1342, "jvps-in-jax-code"], [1467, "jvps-in-jax-code"]], "JVPs in math": [[1342, "jvps-in-math"], [1467, "jvps-in-math"]], "Jacobian-Matrix and Matrix-Jacobian products": [[1342, "jacobian-matrix-and-matrix-jacobian-products"], [1467, "jacobian-matrix-and-matrix-jacobian-products"]], "Jacobian-Vector products (JVPs, a.k.a. forward-mode autodiff)": [[1342, "jacobian-vector-products-jvps-a-k-a-forward-mode-autodiff"]], "Jacobian-Vector products (JVPs, aka forward-mode autodiff)": [[1467, "jacobian-vector-products-jvps-aka-forward-mode-autodiff"]], "Jacobians and Hessians using jacfwd and jacrev": [[1467, "jacobians-and-hessians-using-jacfwd-and-jacrev"]], "Jacobians and Hessians using jax.jacfwd and jax.jacrev": [[1342, "jacobians-and-hessians-using-jax-jacfwd-and-jax-jacrev"]], "Jax and Jaxlib versioning": [[1457, null]], "Jax2Tf Associative Scan Reductions": [[1356, "jax2tf_associative_scan_reductions"]], "Jax2Tf Default Native Serialization": [[1356, "jax2tf_default_native_serialization"]], "Jaxpr data structures": [[1348, "jaxpr-data-structures"]], "Jaxpr tracer": [[1466, "jaxpr-tracer"]], "Jaxprs": [[1460, "jaxprs"]], "Just-in-time compilation": [[1459, null]], "Just-in-time compilation (jit)": [[1388, "just-in-time-compilation-jit"]], "Just-in-time compilation with jax.jit": [[1475, "just-in-time-compilation-with-jax-jit"]], "Kernel": [[1487, "kernel"]], "Key Creation & Manipulation": [[1431, "key-creation-manipulation"]], "Key Optimizations": [[1471, "key-optimizations"]], "Key arithmetic": [[1455, "key-arithmetic"]], "Key buffer indexing": [[1455, "key-buffer-indexing"]], "Key concept: Data sharding": [[1500, "key-concept-data-sharding"]], "Key concepts": [[1460, null]], "Key features of EffVer": [[1450, "key-features-of-effver"]], "Key reuse": [[1455, "key-reuse"]], "Kubernetes Example": [[1461, "kubernetes-example"]], "Lack of sequential equivalence": [[1498, "lack-of-sequential-equivalence"]], "Legacy APIs": [[1438, "legacy-apis"]], "Legacy Prng Key": [[1356, "jax_legacy_prng_key"]], "Legacy internal APIs": [[1345, "legacy-internal-apis"]], "Let\u2019s think step by step": [[1382, "let-s-think-step-by-step"], [1468, "let-s-think-step-by-step"]], "Level 1 Extensibility: polymorphic inputs": [[1452, "level-1-extensibility-polymorphic-inputs"]], "Level 1: Annotations as documentation": [[1444, "level-1-annotations-as-documentation"]], "Level 2 extensibility: polymorphic outputs": [[1452, "level-2-extensibility-polymorphic-outputs"]], "Level 2: Annotations for intelligent autocomplete": [[1444, "level-2-annotations-for-intelligent-autocomplete"]], "Level 3 extensibility: subclassing Array": [[1452, "level-3-extensibility-subclassing-array"]], "Level 3: Annotations for static type-checking": [[1444, "level-3-annotations-for-static-type-checking"]], "Levels of array extensibility": [[1452, "levels-of-array-extensibility"]], "Libraries and extensions": [[1375, null]], "Libraries built on JAX": [[1341, "libraries-built-on-jax"]], "Lifetimes": [[1479, "lifetimes"]], "Limitations": [[1361, "limitations"], [1362, "limitations"], [1362, "id3"], [1363, "limitations"], [1363, "id3"]], "Limitations of Parameter Offloading": [[1471, "limitations-of-parameter-offloading"]], "Linear algebra operators (jax.lax.linalg)": [[1424, "module-jax.lax.linalg"]], "Linting": [[1366, "linting"]], "Linting and type-checking": [[1357, "linting-and-type-checking"]], "List of Functions": [[1422, "list-of-functions"], [1436, "list-of-functions"], [1437, "list-of-functions"], [1438, "list-of-functions"]], "List of Members": [[1439, "list-of-members"]], "List of policies": [[1382, "list-of-policies"]], "Loads": [[1484, "loads"]], "Log Checkpoint Residuals": [[1356, "jax_log_checkpoint_residuals"]], "Log Compiles": [[1356, "jax_log_compiles"]], "Logging Level": [[1356, "jax_logging_level"]], "Logging cache activity": [[1495, "logging-cache-activity"]], "Logical operators": [[1359, "logical-operators"]], "Lookahead Prefetch": [[1493, "lookahead-prefetch"]], "Loop aliasing": [[1479, "loop-aliasing"]], "Lowering": [[1385, "lowering"]], "Lowering Pallas": [[1480, "lowering-pallas"]], "Lowering Pallas to Mosaic for TPU": [[1480, "lowering-pallas-to-mosaic-for-tpu"]], "Lowering Pallas to Triton for GPU": [[1480, "lowering-pallas-to-triton-for-gpu"]], "MMA (TensorCore)": [[1484, "mma-tensorcore"]], "Mac GPU": [[1384, "mac-gpu"]], "Machine learning": [[1343, null]], "Main idea: context-sensitive interpretation": [[1349, "main-idea-context-sensitive-interpretation"]], "Main problem descriptions": [[1449, "main-problem-descriptions"]], "Making process-spanning arrays from external data": [[1461, "making-process-spanning-arrays-from-external-data"]], "Managing hermetic Python": [[1366, "managing-hermetic-python"]], "Managing runtime tokens": [[1442, "managing-runtime-tokens"]], "Manual PGLE": [[1381, "manual-pgle"]], "Manual capture": [[1496, "manual-capture"]], "Manual capture via XProf": [[1496, "manual-capture-via-xprof"]], "Manual parallelism with shard_map": [[1474, null]], "Manual vectorization": [[1351, "manual-vectorization"]], "Manually batched": [[1476, "manually-batched"]], "Marking arguments as static": [[1459, "marking-arguments-as-static"]], "Matmul precision": [[1381, "matmul-precision"]], "Matrix Multiplication": [[1492, null]], "Matrix multiplication": [[1489, "matrix-multiplication"]], "Matrix multiplication performance": [[1492, "matrix-multiplication-performance"]], "Matrix multiplies": [[1474, "matrix-multiplies"]], "Megacore": [[1490, "megacore"]], "Memory Analysis": [[1471, "memory-analysis"]], "Memory Fitting Effort": [[1356, "jax_memory_fitting_effort"]], "Memory Fitting Level": [[1356, "jax_memory_fitting_level"]], "Memory Hierarchies": [[1487, "memory-hierarchies"]], "Memory reference transforms": [[1484, "memory-reference-transforms"]], "Memory space of A and B operands": [[1484, "memory-space-of-a-and-b-operands"]], "Memory spaces": [[1484, "memory-spaces"]], "Meshes, shardings, and computations can span processes and hosts": [[1461, "meshes-shardings-and-computations-can-span-processes-and-hosts"]], "Migration guide from jax.experimental.export": [[1371, "migration-guide-from-jax-experimental-export"]], "Miscellaneous": [[1388, "miscellaneous"]], "Mistaking pytree nodes for leaves": [[1506, "mistaking-pytree-nodes-for-leaves"]], "Mixed Promotion: Float and Complex": [[1456, "mixed-promotion-float-and-complex"]], "Mixed Promotion: Integer and Floating": [[1456, "mixed-promotion-integer-and-floating"]], "Mixed Promotion: Signed & Unsigned Integers": [[1456, "mixed-promotion-signed-unsigned-integers"]], "Mock Gpu Topology": [[1356, "jax_mock_gpu_topology"]], "Mock Num Gpu Processes": [[1356, "mock_num_gpu_processes"]], "Model Forward Pass": [[1503, "model-forward-pass"]], "Model and Training Step Implementation": [[1471, "model-and-training-step-implementation"]], "Model parallelism across processes": [[1369, "model-parallelism-across-processes"]], "Model parallelism within a process": [[1369, "model-parallelism-within-a-process"]], "Modeling workflows": [[1343, null]], "Module calling convention": [[1371, "module-calling-convention"]], "Modules": [[1416, "modules"]], "More advanced autodiff": [[1467, "more-advanced-autodiff"]], "More control with jax.debug.callback": [[1363, "more-control-with-jax-debug-callback"]], "More examples of jax.debug.print": [[1363, "more-examples-of-jax-debug-print"]], "More features and details": [[1342, "more-features-and-details"], [1463, "more-features-and-details"]], "More flexible front end": [[1480, "more-flexible-front-end"]], "More realistic example user programs": [[1451, "more-realistic-example-user-programs"]], "Mosaic Allow Hlo": [[1356, "jax_mosaic_allow_hlo"]], "Mosaic GPU Pipelining": [[1483, null]], "Mosaic GPU backend guide": [[1486, null]], "Motivation": [[1442, "motivation"], [1445, "motivation"], [1447, "motivation"], [1455, "motivation"]], "Multi-Process": [[1381, "multi-process"]], "Multicore TPU configurations": [[1489, "multicore-tpu-configurations"]], "Multihost Utils API Reference": [[1406, "multihost-utils-api-reference"]], "Multiple Buffering": [[1493, "multiple-buffering"]], "Multiple TensorBoard installs": [[1496, "multiple-tensorboard-installs"]], "Mutable Array Checks": [[1356, "jax_mutable_array_checks"]], "NCCL flags": [[1381, "nccl-flags"]], "NVIDIA GPU": [[1384, "nvidia-gpu"]], "NVIDIA GPU Docker containers": [[1384, "nvidia-gpu-docker-containers"]], "NamedSharding and Memory Kinds": [[1471, "namedsharding-and-memory-kinds"]], "Nested Remote and Local DMA Pipelines": [[1490, "nested-remote-and-local-dma-pipelines"]], "Neural networks": [[1474, "neural-networks"]], "New public type named jax.Array": [[1440, "new-public-type-named-jax-array"]], "New way to use the JAX jax.experimental.custom_partitioning API": [[1501, "new-way-to-use-the-jax-jax-experimental-custom-partitioning-api"]], "Next Steps": [[1490, "next-steps"], [1498, "next-steps"]], "Next steps": [[1342, "next-steps"], [1350, "next-steps"], [1360, "next-steps"], [1500, "next-steps"]], "Nightly investigation": [[1387, "nightly-investigation"]], "No Tracing": [[1356, "jax_no_tracing"]], "No compatibility policy": [[1446, "no-compatibility-policy"]], "Non-batched": [[1476, "non-batched"]], "Non-functional programming": [[1343, null]], "Non-goals": [[1449, "non-goals"]], "Non-semantic versioning (status quo)": [[1450, "non-semantic-versioning-status-quo"]], "Notable bug fixes": [[1354, "notable-bug-fixes"]], "Notebooks within the Sphinx build": [[1366, "notebooks-within-the-sphinx-build"]], "Notes": [[1477, null]], "Notes for JAX library authors": [[1455, "notes-for-jax-library-authors"]], "Noteworthy properties and restrictions": [[1489, "noteworthy-properties-and-restrictions"]], "Nsight": [[1496, "nsight"]], "Num Cpu Devices": [[1356, "jax_num_cpu_devices"]], "NumPy APIs": [[1448, "numpy-apis"]], "NumPy Type Promotion": [[1456, "numpy-type-promotion"]], "Numerical stability": [[1463, "numerical-stability"]], "Numerics and randomness": [[1345, "numerics-and-randomness"]], "Numpy Dtype Promotion": [[1356, "jax_numpy_dtype_promotion"]], "Numpy Rank Promotion": [[1356, "jax_numpy_rank_promotion"]], "Omnistaging": [[1454, null]], "On-the-fly (\u201cfinal style\u201d) and staged (\u201cinitial style\u201d) processing": [[1348, "on-the-fly-final-style-and-staged-initial-style-processing"]], "Open development": [[1341, "open-development"]], "Operators": [[1424, "operators"]], "Optimization Level": [[1356, "jax_optimization_level"]], "Optimize the ELBO using SGD": [[1476, "optimize-the-elbo-using-sgd"]], "Optimizer Initialization": [[1503, "optimizer-initialization"]], "Optimizer State Offloading": [[1471, "optimizer-state-offloading"]], "Option 0: Leave integer/floating mixed precision undefined": [[1456, "option-0-leave-integer-floating-mixed-precision-undefined"]], "Option 1: Avoiding All Precision Loss": [[1456, "option-1-avoiding-all-precision-loss"]], "Option 1: Load the global data in each process": [[1369, "option-1-load-the-global-data-in-each-process"]], "Option 1: Partial unification": [[1444, "option-1-partial-unification"]], "Option 2: Avoid most wider-than-necessary promotions": [[1456, "option-2-avoid-most-wider-than-necessary-promotions"]], "Option 2: Full unification via overrides": [[1444, "option-2-full-unification-via-overrides"]], "Option 2: Use a per-device data pipeline": [[1369, "option-2-use-a-per-device-data-pipeline"]], "Option 3: Avoid all wider-than-necessary promotions": [[1456, "option-3-avoid-all-wider-than-necessary-promotions"]], "Option 3: Full unification via class hierarchy": [[1444, "option-3-full-unification-via-class-hierarchy"]], "Option 3: Use a consolidated per-process data pipeline": [[1369, "option-3-use-a-consolidated-per-process-data-pipeline"]], "Option 4: Load data in some convenient way, reshard inside computation": [[1369, "option-4-load-data-in-some-convenient-way-reshard-inside-computation"]], "Option 4: Partial unification via class hierarchy": [[1444, "option-4-partial-unification-via-class-hierarchy"]], "Ordering of printed results": [[1363, "ordering-of-printed-results"]], "Other": [[1486, null]], "Other Sparse Data Structures": [[1414, "other-sparse-data-structures"]], "Other functions": [[1426, "other-functions"]], "Other transformations": [[1480, "other-transformations"]], "Output Sharding Controls": [[1471, "output-sharding-controls"]], "Outputs should be strictly-typed": [[1444, "outputs-should-be-strictly-typed"]], "Overview": [[1442, "overview"], [1455, "overview"], [1474, "overview"]], "PRNG dtypes": [[1455, "prng-dtypes"]], "PRNG keys": [[1431, "prng-keys"]], "Pallas": [[1343, null]], "Pallas Async Operations": [[1479, null]], "Pallas Call": [[1487, "pallas-call"]], "Pallas Changelog": [[1478, null]], "Pallas Design": [[1480, null]], "Pallas Design Notes": [[1481, null]], "Pallas Dump Promela To": [[1356, "jax_pallas_dump_promela_to"]], "Pallas Enable Debug Checks": [[1356, "jax_pallas_enable_debug_checks"]], "Pallas Pipelining API": [[1487, "pallas-pipelining-api"]], "Pallas Quickstart": [[1488, null]], "Pallas TPU": [[1491, null]], "Pallas Use Mosaic Gpu": [[1356, "jax_pallas_use_mosaic_gpu"]], "Pallas Verbose Errors": [[1356, "jax_pallas_verbose_errors"]], "Pallas programming model": [[1488, "pallas-programming-model"]], "Pallas: Extending JAX for kernels": [[1480, "pallas-extending-jax-for-kernels"]], "Pallas: a JAX kernel language": [[1486, null]], "Pallas:Mosaic GPU": [[1482, null]], "Parallel computation": [[1338, null], [1343, null]], "Parallel operators": [[1424, "parallel-operators"]], "Parallelization": [[1388, "parallelization"]], "Parameter Initialization": [[1503, "parameter-initialization"]], "Parameter Initialization with Host Offloading": [[1471, "parameter-initialization-with-host-offloading"]], "Parameter Offloading": [[1471, "parameter-offloading"]], "Parameter Placement for Computation": [[1471, "parameter-placement-for-computation"]], "Parameterizing a Kernel": [[1487, "parameterizing-a-kernel"]], "Part 1: Transformations as interpreters: standard evaluation, jvp, and vmap": [[1348, "part-1-transformations-as-interpreters-standard-evaluation-jvp-and-vmap"]], "Part 2: Jaxprs": [[1348, "part-2-jaxprs"]], "Part 3: jit, simplified": [[1348, "part-3-jit-simplified"]], "Part 4: linearize and vjp (and grad!)": [[1348, "part-4-linearize-and-vjp-and-grad"]], "Part 5: the control flow primitives cond": [[1348, "part-5-the-control-flow-primitives-cond"]], "Partial replication": [[1369, "partial-replication"]], "Partial solution \u201cP-sum\u201d: build the ability to express a psum into out_specs": [[1447, "partial-solution-p-sum-build-the-ability-to-express-a-psum-into-out-specs"]], "Passing futures across loop boundaries": [[1479, "passing-futures-across-loop-boundaries"]], "Per-example gradients": [[1342, "per-example-gradients"]], "Performance benchmarking and profiling": [[1343, null]], "Performance impacts": [[1363, "performance-impacts"]], "Performance of pipelined kernels": [[1492, "performance-of-pipelined-kernels"]], "Performance optimizations": [[1343, null]], "Performance regression or OOM": [[1501, "performance-regression-or-oom"]], "Persistent Cache Enable Xla Caches": [[1356, "jax_persistent_cache_enable_xla_caches"]], "Persistent Cache Min Compile Time Secs": [[1356, "jax_persistent_cache_min_compile_time_secs"]], "Persistent Cache Min Entry Size Bytes": [[1356, "jax_persistent_cache_min_entry_size_bytes"]], "Persistent compilation cache": [[1495, null]], "Pgle Aggregation Percentile": [[1356, "jax_pgle_aggregation_percentile"]], "Pgle Profiling Runs": [[1356, "jax_pgle_profiling_runs"]], "Pipeline Parallelism on GPU": [[1381, "pipeline-parallelism-on-gpu"]], "Pipelining Basics": [[1487, "pipelining-basics"]], "Pipelining with Mosaic GPU": [[1483, "pipelining-with-mosaic-gpu"]], "Pitfalls": [[1495, "pitfalls"]], "Pjrt Client Create Options": [[1356, "jax_pjrt_client_create_options"]], "Placing operands in SMEM": [[1489, "placing-operands-in-smem"]], "Platform Name": [[1356, "jax_platform_name"]], "Platforms": [[1356, "jax_platforms"]], "Pmap No Rank Reduction": [[1356, "jax_pmap_no_rank_reduction"]], "Pmap Shmap Merge": [[1356, "jax_pmap_shmap_merge"]], "Possible module overview": [[1446, "possible-module-overview"]], "Pprint Use Color": [[1356, "jax_pprint_use_color"]], "Practical notes": [[1382, "practical-notes"], [1468, "practical-notes"]], "Pre-compiling multi-node programs on single node": [[1495, "pre-compiling-multi-node-programs-on-single-node"]], "Precision control": [[1489, "precision-control"]], "Preparing the A and B operands": [[1484, "preparing-the-a-and-b-operands"], [1484, "id1"]], "Previous implementation": [[1385, "previous-implementation"]], "Primal evaluation rules": [[1390, "primal-evaluation-rules"]], "Printing in other transformations": [[1363, "printing-in-other-transformations"]], "Printing under jax.grad": [[1363, "printing-under-jax-grad"]], "Printing under jax.pmap": [[1363, "printing-under-jax-pmap"]], "Priority of __jax_array__ vs. PyTree flattening": [[1452, "priority-of-jax-array-vs-pytree-flattening"]], "Problem: efficient transpose of psum or all_gather depends on whether cotangents are invariant across devices": [[1447, "problem-efficient-transpose-of-psum-or-all-gather-depends-on-whether-cotangents-are-invariant-across-devices"]], "Profiling and performance": [[1339, null]], "Profiling computation": [[1496, null]], "Profiling device memory": [[1367, null]], "Profiling on a remote machine": [[1496, "profiling-on-a-remote-machine"]], "Programmatic capture": [[1496, "programmatic-capture"]], "Progress": [[1455, "progress"]], "Properties of a Type Promotion Lattice": [[1456, "properties-of-a-type-promotion-lattice"]], "Pseudorandom numbers": [[1475, "pseudorandom-numbers"], [1498, null]], "Public API: jax package": [[1388, null]], "Pure and impure functions": [[1346, "pure-and-impure-functions"]], "Purpose of type annotations": [[1444, "purpose-of-type-annotations"]], "Putting it all together": [[1479, "putting-it-all-together"], [1490, "putting-it-all-together"]], "PyTorch Type Promotion": [[1456, "pytorch-type-promotion"]], "Python Array API standard": [[1428, "python-array-api-standard"]], "Python and NumPy version support policy": [[1365, null]], "Python control flow + autodiff": [[1359, "python-control-flow-autodiff"]], "Python debugging": [[1463, "python-debugging"]], "Pytrees": [[1343, null], [1460, "pytrees"], [1497, null]], "Pytrees and JAX functions": [[1497, "pytrees-and-jax-functions"]], "Pytrees and JAX transformations": [[1506, "pytrees-and-jax-transformations"]], "Pytrees and flattening user functions\u2019 inputs and outputs": [[1348, "pytrees-and-flattening-user-functions-inputs-and-outputs"]], "Quick start": [[1495, "quick-start"]], "Quickstart: How to think in JAX": [[1475, null]], "Ragged Dot Use Ragged Dot Instruction": [[1356, "jax_ragged_dot_use_ragged_dot_instruction"]], "Raise Persistent Cache Errors": [[1356, "jax_raise_persistent_cache_errors"]], "Random Number Generation": [[1489, "random-number-generation"]], "Random Samplers": [[1431, "random-samplers"]], "Random Seed Offset": [[1356, "jax_random_seed_offset"]], "Random numbers in JAX": [[1498, "random-numbers-in-jax"]], "Random numbers in NumPy": [[1498, "random-numbers-in-numpy"]], "Rank promotion warning": [[1499, null]], "Rank-reducing vs rank-preserving maps": [[1474, "rank-reducing-vs-rank-preserving-maps"]], "Rank-reducing vs rank-preserving maps over array axes": [[1445, "rank-reducing-vs-rank-preserving-maps-over-array-axes"]], "Reading from/writing into Refs": [[1480, "reading-from-writing-into-refs"]], "RecursionError: Recursively calling jit": [[1440, "recursionerror-recursively-calling-jit"]], "Reductions": [[1489, "reductions"]], "Reductions and accumulation": [[1487, "reductions-and-accumulation"]], "Reference documentation": [[1482, null]], "Reference types": [[1480, "reference-types"]], "Regular Semaphores": [[1490, "regular-semaphores"]], "Released with JAX 0.4.30 (June 18, 2024)": [[1478, "released-with-jax-0-4-30-june-18-2024"]], "Released with jax 0.4.31 (July 29, 2024)": [[1478, "released-with-jax-0-4-31-july-29-2024"]], "Released with jax 0.4.32 (September 11, 2024)": [[1478, "released-with-jax-0-4-32-september-11-2024"]], "Released with jax 0.4.33 (September 16, 2024)": [[1478, "released-with-jax-0-4-33-september-16-2024"]], "Released with jax 0.4.34 (October 4, 2024)": [[1478, "released-with-jax-0-4-34-october-4-2024"]], "Released with jax 0.4.35 (October 22, 2024)": [[1478, "released-with-jax-0-4-35-october-22-2024"]], "Released with jax 0.4.36 (December 6, 2024)": [[1478, "released-with-jax-0-4-36-december-6-2024"]], "Released with jax 0.4.37": [[1478, "released-with-jax-0-4-37"]], "Released with jax 0.5.0": [[1478, "released-with-jax-0-5-0"]], "Released with jax 0.6.1": [[1478, "released-with-jax-0-6-1"]], "Released with jax 0.7.0": [[1478, "released-with-jax-0-7-0"]], "Remote Direct Memory Access (RDMA) Model": [[1490, "remote-direct-memory-access-rdma-model"]], "Remote profiling": [[1496, "remote-profiling"]], "Remove Custom Partitioning Ptr From Cache Key": [[1356, "jax_remove_custom_partitioning_ptr_from_cache_key"]], "Replacing pl.pallas_call with pl.core_map or plgpu.kernel": [[1484, "replacing-pl-pallas-call-with-pl-core-map-or-plgpu-kernel"]], "Replication": [[1369, "replication"]], "Requesting device-to-host transfers": [[1503, "requesting-device-to-host-transfers"]], "Requesting/allocating memory in specific memory spaces": [[1484, "requesting-allocating-memory-in-specific-memory-spaces"]], "Reshapes": [[1489, "reshapes"]], "Resources and Advanced Guides": [[1343, null]], "Restricted test suite": [[1357, "restricted-test-suite"]], "Restrictions": [[1346, "restrictions"]], "Results": [[1471, "results"]], "Revenge of the State": [[1479, "revenge-of-the-state"]], "Reverse differentiation": [[1390, "reverse-differentiation"]], "Ring Communication Pattern": [[1490, "ring-communication-pattern"]], "Rocm Visible Devices": [[1356, "jax_rocm_visible_devices"]], "Routing": [[1490, "routing"]], "Run-ahead and Race Conditions": [[1490, "run-ahead-and-race-conditions"]], "Running and Comparing Results": [[1471, "running-and-comparing-results"]], "Running the tests": [[1366, "running-the-tests"]], "Runtime instance checks": [[1444, "runtime-instance-checks"]], "Runtime tokens vs. compiler tokens": [[1442, "runtime-tokens-vs-compiler-tokens"]], "Runtime value debugging utilities": [[1391, "runtime-value-debugging-utilities"]], "SAME padding, 2,2 stride, no dilation": [[1469, "same-padding-2-2-stride-no-dilation"]], "SAME padding, no stride, no dilation": [[1469, "same-padding-no-stride-no-dilation"]], "SPMD pipeline parallelism (PP)": [[1474, "spmd-pipeline-parallelism-pp"]], "Safe PRNG key use": [[1455, "safe-prng-key-use"]], "Safer Randint": [[1356, "jax_safer_randint"]], "Scalar Prefetch and Block-Sparse Computation": [[1494, null]], "Scheduling": [[1479, "scheduling"]], "SciPy APIs": [[1448, "scipy-apis"]], "Segment reduction operators": [[1429, "segment-reduction-operators"]], "Self-contained variational inference example": [[1476, "self-contained-variational-inference-example"]], "Semantic versioning": [[1450, "semantic-versioning"]], "Semaphore": [[1484, "semaphore"]], "Sequencing side-effects in JAX": [[1442, null]], "Set up the (batched) log-joint function": [[1476, "set-up-the-batched-log-joint-function"]], "Setting Up Sharding and Memory Kinds": [[1471, "setting-up-sharding-and-memory-kinds"]], "Setting cache directory": [[1495, "setting-cache-directory"]], "Setting up an explicit mesh": [[1470, "setting-up-an-explicit-mesh"]], "Setting up multiple JAX processes": [[1461, "setting-up-multiple-jax-processes"]], "Setup": [[1342, "setup"]], "Shape assertion errors": [[1374, "shape-assertion-errors"]], "Shape polymorphic export": [[1371, "shape-polymorphic-export"]], "Shape polymorphism": [[1374, null]], "Sharding": [[1378, "sharding"]], "Sharding basics, and the NamedSharding subclass": [[1464, "sharding-basics-and-the-namedsharding-subclass"]], "Sharding debugging utilities": [[1391, "sharding-debugging-utilities"]], "Sharding describes how array values are laid out in memory across devices": [[1464, "sharding-describes-how-array-values-are-laid-out-in-memory-across-devices"]], "Sharding rules and operations with ambiguous sharding": [[1470, "sharding-rules-and-operations-with-ambiguous-sharding"]], "Sharding-related operators": [[1424, "sharding-related-operators"]], "Shardy JAX Migration": [[1501, null]], "Share Binary Between Hosts": [[1356, "jax_share_binary_between_hosts"]], "Share Binary Between Hosts Timeout Ms": [[1356, "jax_share_binary_between_hosts_timeout_ms"]], "Sharp bits": [[1363, "sharp-bits"], [1363, "id1"]], "Sharp edges": [[1487, "sharp-edges"]], "Side-effects": [[1454, "side-effects"]], "Significantly less Python overhead in some cases": [[1443, "significantly-less-python-overhead-in-some-cases"]], "Simple worked example: Linear Regression": [[1502, "simple-worked-example-linear-regression"]], "Single and multi computer speedup using parallelization": [[1353, "single-and-multi-computer-speedup-using-parallelization"]], "Single-change commits and pull requests": [[1357, "single-change-commits-and-pull-requests"]], "Slightly less toy example": [[1454, "slightly-less-toy-example"]], "Slow down, start with the basics!": [[1445, "slow-down-start-with-the-basics"], [1474, "slow-down-start-with-the-basics"]], "Small numerical differences based on XLA optimizations": [[1454, "small-numerical-differences-based-on-xla-optimizations"]], "So, let\u2019s see a shard_map!": [[1474, "so-let-s-see-a-shard-map"]], "So, let\u2019s see shmap!": [[1445, "so-let-s-see-shmap"]], "Softmax Custom Jvp": [[1356, "jax_softmax_custom_jvp"]], "Software Pipelining": [[1487, null]], "Solution": [[1454, "solution"], [1454, "id4"]], "Solution idea": [[1449, "solution-idea"]], "Solutions": [[1447, "solutions"]], "Some more details": [[1442, "some-more-details"]], "Sparse API Reference": [[1414, "sparse-api-reference"]], "Sparse Access Patterns on Dense Data": [[1494, "sparse-access-patterns-on-dense-data"]], "Sparse Kernels: Representing Sparse Data": [[1494, "sparse-kernels-representing-sparse-data"]], "Sparsify transform": [[1414, "sparsify-transform"]], "Specifying Python dependencies": [[1366, "specifying-python-dependencies"]], "Specifying Python version": [[1366, "specifying-python-version"]], "Specifying and reading layouts": [[1472, "specifying-and-reading-layouts"]], "Specifying dependencies on local wheels": [[1366, "specifying-dependencies-on-local-wheels"]], "Specifying dependencies on nightly wheels": [[1366, "specifying-dependencies-on-nightly-wheels"]], "Starting with grad": [[1467, "starting-with-grad"]], "Stateful computations": [[1502, null]], "Static type annotations": [[1444, "static-type-annotations"]], "Static vs traced operations": [[1460, "static-vs-traced-operations"]], "Stepping Back: Tables and Lattices": [[1456, "stepping-back-tables-and-lattices"]], "Steps": [[1387, "steps"]], "Stopping gradients": [[1342, "stopping-gradients"]], "Stores": [[1484, "stores"]], "Straight-through estimator using stop_gradient": [[1342, "straight-through-estimator-using-stop-gradient"]], "Strategy 1: JIT-compiled helper function": [[1377, "strategy-1-jit-compiled-helper-function"]], "Strategy 2: Marking self as static": [[1377, "strategy-2-marking-self-as-static"]], "Strategy 3: Making CustomClass a PyTree": [[1377, "strategy-3-making-customclass-a-pytree"]], "Strengths": [[1361, "strengths"], [1362, "strengths"], [1362, "id2"], [1363, "strengths"], [1363, "id2"]], "Strengths and limitations of jax.debug.breakpoint()": [[1363, "strengths-and-limitations-of-jax-debug-breakpoint"]], "Strengths and limitations of jax.debug.print": [[1363, "strengths-and-limitations-of-jax-debug-print"]], "Strengths and limitations of jax.experimental.checkify": [[1361, "strengths-and-limitations-of-jax-experimental-checkify"]], "Strengths and limitations of jax_debug_nans": [[1362, "strengths-and-limitations-of-jax-debug-nans"]], "Strengths and limitations of jax_disable_jit": [[1362, "strengths-and-limitations-of-jax-disable-jit"]], "Strict dtype promotion": [[1505, "strict-dtype-promotion"]], "Structured control flow primitives": [[1359, "structured-control-flow-primitives"]], "Subpackages": [[1388, "subpackages"]], "Summary": [[1359, "summary"], [1463, "summary"], [1468, "summary"]], "Summary of Activation Offloading": [[1471, "summary-of-activation-offloading"]], "Support for reverse-mode AD": [[1371, "support-for-reverse-mode-ad"]], "Supported data types": [[1489, "supported-data-types"]], "Supported operations": [[1489, "supported-operations"]], "Supported platforms": [[1384, "supported-platforms"]], "Supporting multiple platforms": [[1378, "supporting-multiple-platforms"]], "Symbolic dimension scopes": [[1374, "symbolic-dimension-scopes"]], "Synchronization structures and primitives": [[1484, "synchronization-structures-and-primitives"]], "Synchronization: Regular and Barrier Semaphores": [[1490, "synchronization-regular-and-barrier-semaphores"]], "Syncing notebooks": [[1366, "syncing-notebooks"]], "Synopsis": [[1452, "synopsis"], [1452, "id1"]], "TL;DR": [[1440, "tl-dr"], [1501, "tl-dr"]], "TL;DR example (with a more detailed explanation to follow)": [[1445, "tl-dr-example-with-a-more-detailed-explanation-to-follow"]], "TL;DR: Custom JVPs with jax.custom_jvp()": [[1342, "tl-dr-custom-jvps-with-jax-custom-jvp"]], "TL;DR: Custom VJPs with jax.custom_vjp": [[1342, "tl-dr-custom-vjps-with-jax-custom-vjp"]], "TMEM-related functions": [[1408, "tmem-related-functions"]], "TPU Example": [[1461, "tpu-example"]], "TPU Memory Spaces": [[1493, "tpu-memory-spaces"]], "TPU Pipelining": [[1493, null]], "TPU Topologies": [[1490, "tpu-topologies"]], "TPU and its memory spaces": [[1493, "tpu-and-its-memory-spaces"]], "TPU backend guide": [[1486, null]], "TPU-specific Pipelining Features": [[1493, "tpu-specific-pipelining-features"]], "TPUs in Megacore configuration": [[1493, "tpus-in-megacore-configuration"]], "Taking advantage of the L2 cache": [[1484, "taking-advantage-of-the-l2-cache"]], "Taking derivatives with jax.grad": [[1475, "taking-derivatives-with-jax-grad"]], "Taking gradients (part 2)": [[1342, "taking-gradients-part-2"]], "Taking it further": [[1502, "taking-it-further"]], "Templated matmul": [[1480, "templated-matmul"]], "Templating the matrix multiplication": [[1492, "templating-the-matrix-multiplication"]], "Tensor Parallel": [[1503, "tensor-parallel"]], "Tensorflow Type Promotion": [[1456, "tensorflow-type-promotion"]], "Terminology": [[1461, "terminology"], [1472, "terminology"]], "The Autodiff Cookbook": [[1467, null]], "The Python flexibility problem": [[1449, "the-python-flexibility-problem"]], "The Train Step (Functional Transformations)": [[1503, "the-train-step-functional-transformations"]], "The Training Cookbook": [[1503, null]], "The Training Loop": [[1503, "the-training-loop"]], "The X64 flag: enabling 64-bit values": [[1364, "the-x64-flag-enabling-64-bit-values"]], "The checkify transformation": [[1361, null]], "The concrete=True option is removed.": [[1443, "the-concrete-true-option-is-removed"]], "The implementation of jacfwd and jacrev": [[1467, "the-implementation-of-jacfwd-and-jacrev"]], "The implementation of jax.jacfwd and jax.jacrev": [[1342, "the-implementation-of-jax-jacfwd-and-jax-jacrev"]], "The solution: explicit state": [[1502, "the-solution-explicit-state"]], "The vmap-removes-custom-jvp semantics problem": [[1449, "the-vmap-removes-custom-jvp-semantics-problem"]], "The \u201celement\u201d indexing mode": [[1485, "the-element-indexing-mode"]], "This change broke my stuff!": [[1368, "this-change-broke-my-stuff"]], "Three programming models and toy example programs": [[1451, "three-programming-models-and-toy-example-programs"]], "Threefry Gpu Kernel Lowering": [[1356, "jax_threefry_gpu_kernel_lowering"]], "Threefry Partitionable": [[1356, "jax_threefry_partitionable"]], "Throwing Python errors with JAX\u2019s debug flags": [[1360, "throwing-python-errors-with-jax-s-debug-flags"]], "Tiling and Pipelining": [[1492, "tiling-and-pipelining"]], "Tools for Host Offloading": [[1471, "tools-for-host-offloading"]], "Toy example": [[1454, "toy-example"], [1461, "toy-example"]], "Toy examples": [[1474, "toy-examples"]], "Traceback Filtering": [[1356, "jax_traceback_filtering"]], "Traceback In Locations Limit": [[1356, "jax_traceback_in_locations_limit"]], "Tracer Error Num Traceback Frames": [[1356, "jax_tracer_error_num_traceback_frames"]], "Tracing": [[1385, "tracing"], [1460, "tracing"]], "Tracing and time profiling": [[1430, "tracing-and-time-profiling"]], "Tracing with static arguments": [[1344, "tracing-with-static-arguments"]], "Tracking device invariance in avals (a.k.a. avals-with-names, revived)": [[1447, "tracking-device-invariance-in-avals-a-k-a-avals-with-names-revived"]], "Tracking how values vary over manual mesh axes, and check_vma=True": [[1474, "tracking-how-values-vary-over-manual-mesh-axes-and-check-vma-true"]], "Tradeoffs and alternatives": [[1451, "tradeoffs-and-alternatives"]], "Train State Initialization": [[1503, "train-state-initialization"]], "Training a simple neural network, with PyTorch data loading": [[1465, null]], "Training a simple neural network, with tensorflow/datasets data loading": [[1473, null]], "Training loop": [[1465, "training-loop"], [1473, "training-loop"]], "Transfer Guard": [[1356, "jax_transfer_guard"]], "Transfer Guard Device To Device": [[1356, "jax_transfer_guard_device_to_device"]], "Transfer Guard Device To Host": [[1356, "jax_transfer_guard_device_to_host"]], "Transfer Guard Host To Device": [[1356, "jax_transfer_guard_host_to_device"]], "Transfer guard": [[1504, null]], "Transformation functions": [[1480, "transformation-functions"]], "Transformations": [[1460, "transformations"]], "Transforming Pallas": [[1480, "transforming-pallas"]], "Transposed operands": [[1484, "transposed-operands"]], "Transposing pytrees with jax.tree.map and jax.tree.transpose": [[1506, "transposing-pytrees-with-jax-tree-map-and-jax-tree-transpose"]], "Transposition": [[1390, "transposition"], [1489, "transposition"]], "Triggering XLA compile time bugs": [[1454, "triggering-xla-compile-time-bugs"]], "Troubleshooting": [[1496, "troubleshooting"]], "Type Annotation Roadmap for JAX": [[1444, null]], "Type Promotion in JAX": [[1456, "type-promotion-in-jax"]], "Type Promotion within Categories": [[1456, "type-promotion-within-categories"]], "Type annotation challenges for JAX": [[1444, "type-annotation-challenges-for-jax"]], "Type annotations for PRNG Keys": [[1455, "type-annotations-for-prng-keys"]], "Type checking": [[1366, "type-checking"]], "Type promotion semantics": [[1505, null]], "Types": [[1472, "types"]], "Understanding how a JAX program is using GPU or TPU memory": [[1367, "understanding-how-a-jax-program-is-using-gpu-or-tpu-memory"]], "Unifying instance checks and annotation": [[1444, "unifying-instance-checks-and-annotation"]], "Unnecessary materialization": [[1363, "unnecessary-materialization"]], "Unreleased": [[1354, "unreleased"], [1478, "unreleased"]], "Up next\u2026": [[1349, "up-next"]], "Update documentation": [[1366, "update-documentation"]], "Update notebooks": [[1366, "update-notebooks"]], "Usage": [[1362, "usage"], [1362, "id1"], [1363, "usage"], [1495, "usage"]], "Usage with jax.lax.cond": [[1363, "usage-with-jax-lax-cond"]], "Use Direct Linearize": [[1356, "jax_use_direct_linearize"]], "Use Magma": [[1356, "jax_use_magma"]], "Use Shardy Partitioner": [[1356, "jax_use_shardy_partitioner"]], "Use Simplified Jaxpr Constants": [[1356, "jax_use_simplified_jaxpr_constants"]], "Use jax.custom_jvp to define forward-mode (and, indirectly, reverse-mode) rules": [[1342, "use-jax-custom-jvp-to-define-forward-mode-and-indirectly-reverse-mode-rules"], [1463, "use-jax-custom-jvp-to-define-forward-mode-and-indirectly-reverse-mode-rules"]], "Use jax.custom_vjp to define custom reverse-mode-only rules": [[1342, "use-jax-custom-vjp-to-define-custom-reverse-mode-only-rules"], [1463, "use-jax-custom-vjp-to-define-custom-reverse-mode-only-rules"]], "User-customizable rematerialization policies": [[1443, "user-customizable-rematerialization-policies"]], "User-specified symbolic constraints": [[1374, "user-specified-symbolic-constraints"]], "Using Bazel": [[1366, "using-bazel"]], "Using CUDA block clusters": [[1484, "using-cuda-block-clusters"]], "Using XLA Flags": [[1381, "using-xla-flags"]], "Using a mixture of sharding modes": [[1470, "using-a-mixture-of-sharding-modes"]], "Using a subset of JAX primitives in Pallas": [[1480, "using-a-subset-of-jax-primitives-in-pallas"]], "Using core_map": [[1484, "using-core-map"]], "Using custom partitioning": [[1378, "using-custom-partitioning"]], "Using existing JAX primitives": [[1390, "using-existing-jax-primitives"]], "Using jax.numpy for shape computations": [[1454, "using-jax-numpy-for-shape-computations"]], "Using multiple Pallas threads per CUDA block": [[1484, "using-multiple-pallas-threads-per-cuda-block"]], "Using psend and precv": [[1381, "using-psend-and-precv"]], "Using pytest": [[1366, "using-pytest"]], "Using shard_map": [[1378, "using-shard-map"]], "Utility and loss functions": [[1465, "utility-and-loss-functions"], [1473, "utility-and-loss-functions"]], "VALID padding, no stride, lhs=input dilation  ~ Transposed Convolution": [[1469, "valid-padding-no-stride-lhs-input-dilation-transposed-convolution"]], "VALID padding, no stride, no dilation": [[1469, "valid-padding-no-stride-no-dilation"]], "VALID padding, no stride, rhs kernel dilation ~ Atrous convolution (excessive to illustrate)": [[1469, "valid-padding-no-stride-rhs-kernel-dilation-atrous-convolution-excessive-to-illustrate"]], "VJPs in JAX code": [[1342, "vjps-in-jax-code"], [1467, "vjps-in-jax-code"]], "VJPs in math": [[1342, "vjps-in-math"], [1467, "vjps-in-math"]], "Vector-Jacobian products (VJPs, a.k.a. reverse-mode autodiff)": [[1342, "vector-jacobian-products-vjps-a-k-a-reverse-mode-autodiff"]], "Vector-Jacobian products (VJPs, aka reverse-mode autodiff)": [[1467, "vector-jacobian-products-vjps-aka-reverse-mode-autodiff"]], "Vector-valued gradients with VJPs": [[1342, "vector-valued-gradients-with-vjps"], [1467, "vector-valued-gradients-with-vjps"]], "Vectorization": [[1388, "vectorization"]], "Vectorized batching with vmap": [[1348, "vectorized-batching-with-vmap"]], "Viewing program traces with Perfetto": [[1496, "viewing-program-traces-with-perfetto"]], "Viewing the pytree definition of an object": [[1497, "viewing-the-pytree-definition-of-an-object"]], "Viewing the trace": [[1496, "viewing-the-trace"]], "Waiting for the operation to complete": [[1484, "waiting-for-the-operation-to-complete"], [1484, "id3"]], "Warp Specialization": [[1483, "warp-specialization"]], "Ways to contribute": [[1357, "ways-to-contribute"]], "Weakly-typed values in JAX": [[1505, "weakly-typed-values-in-jax"]], "What are the possible issues after the upgrade?": [[1443, "what-are-the-possible-issues-after-the-upgrade"]], "What does this mean for users?": [[1455, "what-does-this-mean-for-users"]], "What happens when you use jit": [[1390, "what-happens-when-you-use-jit"]], "What is JAX doing?": [[1466, "what-is-jax-doing"]], "What is a GPU?": [[1484, "what-is-a-gpu"]], "What is a TPU?": [[1489, "what-is-a-tpu"]], "What is a pytree?": [[1497, "what-is-a-pytree"], [1506, "what-is-a-pytree"]], "What is covered?": [[1345, "what-is-covered"]], "What is not covered?": [[1345, "what-is-not-covered"]], "What is \u201comnistaging\u201d and why is it useful?": [[1454, "what-is-omnistaging-and-why-is-it-useful"]], "What issues can arise when Shardy is switched on?": [[1501, "what-issues-can-arise-when-shardy-is-switched-on"]], "What issues can arise when jax.Array is switched on?": [[1440, "what-issues-can-arise-when-jax-array-is-switched-on"]], "What issues can arise when omnistaging is switched on?": [[1454, "what-issues-can-arise-when-omnistaging-is-switched-on"]], "What to update": [[1453, "what-to-update"]], "What\u2019s going on?": [[1368, "whats-going-on"], [1440, "whats-going-on"], [1443, "whats-going-on"], [1454, "what-s-going-on"], [1501, "whats-going-on"]], "When explicit shardings disagree, JAX errors": [[1464, "when-explicit-shardings-disagree-jax-errors"]], "When should you use shmap and when should you use pjit?": [[1445, "when-should-you-use-shmap-and-when-should-you-use-pjit"]], "When to use \u201cdebug\u201d print?": [[1363, "when-to-use-debug-print"]], "When you should use a JEP": [[1458, "when-you-should-use-a-jep"]], "Which APIs should support __jax_array__?": [[1452, "which-apis-should-support-jax-array"]], "Why Limit the Scope?": [[1448, "why-limit-the-scope"]], "Why are Jaxprs useful?": [[1466, "why-are-jaxprs-useful"]], "Why are gradients zero for functions based on sort order?": [[1377, "why-are-gradients-zero-for-functions-based-on-sort-order"]], "Why are jax and jaxlib separate packages?": [[1457, "why-are-jax-and-jaxlib-separate-packages"]], "Why are we doing this?": [[1443, "why-are-we-doing-this"]], "Why callbacks?": [[1376, "why-callbacks"]], "Why can\u2019t we just JIT everything?": [[1459, "why-can-t-we-just-jit-everything"]], "Why create jax.Array?": [[1440, "why-create-jax-array"]], "Why do some CUDA libraries fail to load/initialize?": [[1377, "why-do-some-cuda-libraries-fail-to-load-initialize"]], "Why does JAX need checkify?": [[1361, "why-does-jax-need-checkify"]], "Why doesn\u2019t this work?": [[1479, "why-doesnt-this-work"]], "Why don\u2019t pmap or xmap already solve this?": [[1445, "why-don-t-pmap-or-xmap-already-solve-this"]], "Why type annotations?": [[1444, "why-type-annotations"]], "Why \u201cdebug\u201d print?": [[1363, "why-debug-print"]], "Why?": [[1368, "why"]], "Working around custom_partitioning": [[1495, "working-around-custom-partitioning"]], "Working around unimplemented sharding rules using auto_axes": [[1470, "working-around-unimplemented-sharding-rules-using-auto-axes"]], "Working with list / tuple / dict containers (and other pytrees)": [[1342, "working-with-list-tuple-dict-containers-and-other-pytrees"], [1463, "working-with-list-tuple-dict-containers-and-other-pytrees"]], "Working with pytrees": [[1506, null]], "Write the log-joint function for the model": [[1476, "write-the-log-joint-function-for-the-model"]], "Writing Mosaic GPU kernels with Pallas": [[1484, null]], "Writing TPU kernels with Pallas": [[1489, null]], "Writing custom Jaxpr interpreters in JAX": [[1466, null]], "XLA Async Decomposition": [[1479, "xla-async-decomposition"]], "XLA Compilation rules": [[1390, "xla-compilation-rules"]], "XLA compiler flags": [[1507, null]], "XLA performance flags": [[1381, "xla-performance-flags"]], "XLA: The Powerhouse Behind Jax": [[1507, "xla-the-powerhouse-behind-jax"]], "XProf (TensorBoard profiling)": [[1496, "xprof-tensorboard-profiling"]], "XProf and Tensorboard": [[1496, "xprof-and-tensorboard"]], "Xla Backend": [[1356, "jax_xla_backend"]], "Xla Profile Version": [[1356, "jax_xla_profile_version"]], "Your first interpreter: invert": [[1466, "your-first-interpreter-invert"]], "Your first matrix multiplication kernel": [[1492, "your-first-matrix-multiplication-kernel"]], "Zero version": [[1450, "zero-version"]], "add": [[1480, "add"]], "all_gather": [[1474, "all-gather"]], "all_to_all": [[1474, "all-to-all"]], "bfloat16 matrix multiplication": [[1492, "bfloat16-matrix-multiplication"]], "checkify under JAX transformations.": [[1361, "checkify-under-jax-transformations"]], "commit_smem": [[1484, "commit-smem"]], "cond": [[1359, "cond"]], "cond primitive (conditionals)": [[1441, "cond-primitive-conditionals"]], "custom_batching": [[1388, "custom-batching"]], "custom_jvp": [[1388, "custom-jvp"]], "custom_vjp": [[1388, "custom-vjp"]], "custom_vjp and nondiff_argnums update guide": [[1453, null]], "foreach, a new way to write scan": [[1346, "foreach-a-new-way-to-write-scan"]], "fori_loop": [[1359, "fori-loop"]], "grad": [[1361, "grad"]], "grad-of-pallas_call": [[1480, "grad-of-pallas-call"]], "grid, a.k.a. kernels in a loop": [[1485, "grid-a-k-a-kernels-in-a-loop"]], "jax (0.1.77) (September 15 2020)": [[1354, "jax-0-1-77-september-15-2020"]], "jax (0.2.0) (September 23 2020)": [[1354, "jax-0-2-0-september-23-2020"]], "jax 0.1.58 (January 28, 2020)": [[1354, "jax-0-1-58-january-28-2020"]], "jax 0.1.59 (February 11, 2020)": [[1354, "jax-0-1-59-february-11-2020"]], "jax 0.1.60 (March 17, 2020)": [[1354, "jax-0-1-60-march-17-2020"]], "jax 0.1.61 (March 17, 2020)": [[1354, "jax-0-1-61-march-17-2020"]], "jax 0.1.62 (March 21, 2020)": [[1354, "jax-0-1-62-march-21-2020"]], "jax 0.1.63 (April 12, 2020)": [[1354, "jax-0-1-63-april-12-2020"]], "jax 0.1.64 (April 21, 2020)": [[1354, "jax-0-1-64-april-21-2020"]], "jax 0.1.65 (April 30, 2020)": [[1354, "jax-0-1-65-april-30-2020"]], "jax 0.1.66 (May 5, 2020)": [[1354, "jax-0-1-66-may-5-2020"]], "jax 0.1.67 (May 12, 2020)": [[1354, "jax-0-1-67-may-12-2020"]], "jax 0.1.68 (May 21, 2020)": [[1354, "jax-0-1-68-may-21-2020"]], "jax 0.1.69 (June 3, 2020)": [[1354, "jax-0-1-69-june-3-2020"]], "jax 0.1.70 (June 8, 2020)": [[1354, "jax-0-1-70-june-8-2020"]], "jax 0.1.71 (June 25, 2020)": [[1354, "jax-0-1-71-june-25-2020"]], "jax 0.1.72 (June 28, 2020)": [[1354, "jax-0-1-72-june-28-2020"]], "jax 0.1.73 (July 22, 2020)": [[1354, "jax-0-1-73-july-22-2020"]], "jax 0.1.74 (July 29, 2020)": [[1354, "jax-0-1-74-july-29-2020"]], "jax 0.1.75 (July 30, 2020)": [[1354, "jax-0-1-75-july-30-2020"]], "jax 0.1.76 (September 8, 2020)": [[1354, "jax-0-1-76-september-8-2020"]], "jax 0.2.1 (October 6 2020)": [[1354, "jax-0-2-1-october-6-2020"]], "jax 0.2.10 (March 5 2021)": [[1354, "jax-0-2-10-march-5-2021"]], "jax 0.2.11 (March 23 2021)": [[1354, "jax-0-2-11-march-23-2021"]], "jax 0.2.12 (April 1 2021)": [[1354, "jax-0-2-12-april-1-2021"]], "jax 0.2.13 (May 3 2021)": [[1354, "jax-0-2-13-may-3-2021"]], "jax 0.2.14 (June 10 2021)": [[1354, "jax-0-2-14-june-10-2021"]], "jax 0.2.15 (June 23 2021)": [[1354, "jax-0-2-15-june-23-2021"]], "jax 0.2.16 (June 23 2021)": [[1354, "jax-0-2-16-june-23-2021"]], "jax 0.2.17 (July 9 2021)": [[1354, "jax-0-2-17-july-9-2021"]], "jax 0.2.18 (July 21 2021)": [[1354, "jax-0-2-18-july-21-2021"]], "jax 0.2.19 (Aug 12, 2021)": [[1354, "jax-0-2-19-aug-12-2021"]], "jax 0.2.2 (October 13 2020)": [[1354, "jax-0-2-2-october-13-2020"]], "jax 0.2.20 (Sept 2, 2021)": [[1354, "jax-0-2-20-sept-2-2021"]], "jax 0.2.21 (Sept 23, 2021)": [[1354, "jax-0-2-21-sept-23-2021"]], "jax 0.2.22 (Oct 12, 2021)": [[1354, "jax-0-2-22-oct-12-2021"]], "jax 0.2.24 (Oct 19, 2021)": [[1354, "jax-0-2-24-oct-19-2021"]], "jax 0.2.25 (Nov 10, 2021)": [[1354, "jax-0-2-25-nov-10-2021"]], "jax 0.2.26 (Dec 8, 2021)": [[1354, "jax-0-2-26-dec-8-2021"]], "jax 0.2.27 (Jan 18 2022)": [[1354, "jax-0-2-27-jan-18-2022"]], "jax 0.2.28 (Feb 1, 2022)": [[1354, "jax-0-2-28-feb-1-2022"]], "jax 0.2.3 (October 14 2020)": [[1354, "jax-0-2-3-october-14-2020"]], "jax 0.2.4 (October 19 2020)": [[1354, "jax-0-2-4-october-19-2020"]], "jax 0.2.5 (October 27 2020)": [[1354, "jax-0-2-5-october-27-2020"]], "jax 0.2.6 (Nov 18 2020)": [[1354, "jax-0-2-6-nov-18-2020"]], "jax 0.2.7 (Dec 4 2020)": [[1354, "jax-0-2-7-dec-4-2020"]], "jax 0.2.8 (January 12 2021)": [[1354, "jax-0-2-8-january-12-2021"]], "jax 0.2.9 (January 26 2021)": [[1354, "jax-0-2-9-january-26-2021"]], "jax 0.3.0 (Feb 10, 2022)": [[1354, "jax-0-3-0-feb-10-2022"]], "jax 0.3.1 (Feb 18, 2022)": [[1354, "jax-0-3-1-feb-18-2022"]], "jax 0.3.10 (May 3, 2022)": [[1354, "jax-0-3-10-may-3-2022"]], "jax 0.3.11 (May 15, 2022)": [[1354, "jax-0-3-11-may-15-2022"]], "jax 0.3.12 (May 15, 2022)": [[1354, "jax-0-3-12-may-15-2022"]], "jax 0.3.13 (May 16, 2022)": [[1354, "jax-0-3-13-may-16-2022"]], "jax 0.3.14 (June 27, 2022)": [[1354, "jax-0-3-14-june-27-2022"]], "jax 0.3.15 (July 22, 2022)": [[1354, "jax-0-3-15-july-22-2022"]], "jax 0.3.16": [[1354, "jax-0-3-16"]], "jax 0.3.17 (Aug 31, 2022)": [[1354, "jax-0-3-17-aug-31-2022"]], "jax 0.3.18 (Sep 26, 2022)": [[1354, "jax-0-3-18-sep-26-2022"]], "jax 0.3.19 (Sep 27, 2022)": [[1354, "jax-0-3-19-sep-27-2022"]], "jax 0.3.2 (March 16, 2022)": [[1354, "jax-0-3-2-march-16-2022"]], "jax 0.3.20 (Sep 28, 2022)": [[1354, "jax-0-3-20-sep-28-2022"]], "jax 0.3.21 (Sep 30, 2022)": [[1354, "jax-0-3-21-sep-30-2022"]], "jax 0.3.22 (Oct 11, 2022)": [[1354, "jax-0-3-22-oct-11-2022"]], "jax 0.3.23 (Oct 12, 2022)": [[1354, "jax-0-3-23-oct-12-2022"]], "jax 0.3.24 (Nov 4, 2022)": [[1354, "jax-0-3-24-nov-4-2022"]], "jax 0.3.25 (Nov 15, 2022)": [[1354, "jax-0-3-25-nov-15-2022"]], "jax 0.3.3 (March 17, 2022)": [[1354, "jax-0-3-3-march-17-2022"]], "jax 0.3.4 (March 18, 2022)": [[1354, "jax-0-3-4-march-18-2022"]], "jax 0.3.5 (April 7, 2022)": [[1354, "jax-0-3-5-april-7-2022"]], "jax 0.3.6 (April 12, 2022)": [[1354, "jax-0-3-6-april-12-2022"]], "jax 0.3.7 (April 15, 2022)": [[1354, "jax-0-3-7-april-15-2022"]], "jax 0.3.8 (April 29 2022)": [[1354, "jax-0-3-8-april-29-2022"]], "jax 0.3.9 (May 2, 2022)": [[1354, "jax-0-3-9-may-2-2022"]], "jax 0.4.0 (Dec 12, 2022)": [[1354, "jax-0-4-0-dec-12-2022"]], "jax 0.4.1 (Dec 13, 2022)": [[1354, "jax-0-4-1-dec-13-2022"]], "jax 0.4.10 (May 11, 2023)": [[1354, "jax-0-4-10-may-11-2023"]], "jax 0.4.11 (May 31, 2023)": [[1354, "jax-0-4-11-may-31-2023"]], "jax 0.4.12 (June 8, 2023)": [[1354, "jax-0-4-12-june-8-2023"]], "jax 0.4.13 (June 22, 2023)": [[1354, "jax-0-4-13-june-22-2023"]], "jax 0.4.14 (July 27, 2023)": [[1354, "jax-0-4-14-july-27-2023"]], "jax 0.4.16 (Sept 18, 2023)": [[1354, "jax-0-4-16-sept-18-2023"]], "jax 0.4.17 (Oct 3, 2023)": [[1354, "jax-0-4-17-oct-3-2023"]], "jax 0.4.18 (Oct 6, 2023)": [[1354, "jax-0-4-18-oct-6-2023"]], "jax 0.4.19 (Oct 19, 2023)": [[1354, "jax-0-4-19-oct-19-2023"]], "jax 0.4.2 (Jan 24, 2023)": [[1354, "jax-0-4-2-jan-24-2023"]], "jax 0.4.20 (Nov 2, 2023)": [[1354, "jax-0-4-20-nov-2-2023"]], "jax 0.4.21 (Dec 4 2023)": [[1354, "jax-0-4-21-dec-4-2023"]], "jax 0.4.22 (Dec 13, 2023)": [[1354, "jax-0-4-22-dec-13-2023"]], "jax 0.4.23 (Dec 13, 2023)": [[1354, "jax-0-4-23-dec-13-2023"]], "jax 0.4.24 (Feb 6, 2024)": [[1354, "jax-0-4-24-feb-6-2024"]], "jax 0.4.25 (Feb 26, 2024)": [[1354, "jax-0-4-25-feb-26-2024"]], "jax 0.4.26 (April 3, 2024)": [[1354, "jax-0-4-26-april-3-2024"]], "jax 0.4.27 (May 7, 2024)": [[1354, "jax-0-4-27-may-7-2024"]], "jax 0.4.28 (May 9, 2024)": [[1354, "jax-0-4-28-may-9-2024"]], "jax 0.4.29 (June 10, 2024)": [[1354, "jax-0-4-29-june-10-2024"]], "jax 0.4.3 (Feb 8, 2023)": [[1354, "jax-0-4-3-feb-8-2023"]], "jax 0.4.30 (June 18, 2024)": [[1354, "jax-0-4-30-june-18-2024"]], "jax 0.4.31 (July 29, 2024)": [[1354, "jax-0-4-31-july-29-2024"]], "jax 0.4.32 (September 11, 2024)": [[1354, "jax-0-4-32-september-11-2024"]], "jax 0.4.33 (September 16, 2024)": [[1354, "jax-0-4-33-september-16-2024"]], "jax 0.4.34 (October 4, 2024)": [[1354, "jax-0-4-34-october-4-2024"]], "jax 0.4.35 (Oct 22, 2024)": [[1354, "jax-0-4-35-oct-22-2024"]], "jax 0.4.36 (Dec 5, 2024)": [[1354, "jax-0-4-36-dec-5-2024"]], "jax 0.4.37 (Dec 9, 2024)": [[1354, "jax-0-4-37-dec-9-2024"]], "jax 0.4.38 (Dec 17, 2024)": [[1354, "jax-0-4-38-dec-17-2024"]], "jax 0.4.4 (Feb 16, 2023)": [[1354, "jax-0-4-4-feb-16-2023"]], "jax 0.4.5 (Mar 2, 2023)": [[1354, "jax-0-4-5-mar-2-2023"]], "jax 0.4.6 (Mar 9, 2023)": [[1354, "jax-0-4-6-mar-9-2023"]], "jax 0.4.7 (March 27, 2023)": [[1354, "jax-0-4-7-march-27-2023"]], "jax 0.4.8 (March 29, 2023)": [[1354, "jax-0-4-8-march-29-2023"]], "jax 0.4.9 (May 9, 2023)": [[1354, "jax-0-4-9-may-9-2023"]], "jax 0.5.0 (Jan 17, 2025)": [[1354, "jax-0-5-0-jan-17-2025"]], "jax 0.5.1 (Feb 24, 2025)": [[1354, "jax-0-5-1-feb-24-2025"]], "jax 0.5.2 (Mar 4, 2025)": [[1354, "jax-0-5-2-mar-4-2025"]], "jax 0.5.3 (Mar 19, 2025)": [[1354, "jax-0-5-3-mar-19-2025"]], "jax.Array": [[0, null]], "jax.Array (jax.Array)": [[1388, "jax-array-jax-array"]], "jax.Array migration": [[1440, null]], "jax.Array.T": [[1, null]], "jax.Array.addressable_shards": [[2, null]], "jax.Array.all": [[3, null]], "jax.Array.any": [[4, null]], "jax.Array.argmax": [[5, null]], "jax.Array.argmin": [[6, null]], "jax.Array.argpartition": [[7, null]], "jax.Array.argsort": [[8, null]], "jax.Array.astype": [[9, null]], "jax.Array.at": [[10, null]], "jax.Array.choose": [[11, null]], "jax.Array.clip": [[12, null]], "jax.Array.committed": [[13, null]], "jax.Array.compress": [[14, null]], "jax.Array.conj": [[15, null]], "jax.Array.conjugate": [[16, null]], "jax.Array.copy": [[17, null]], "jax.Array.copy_to_host_async": [[18, null]], "jax.Array.cumprod": [[19, null]], "jax.Array.cumsum": [[20, null]], "jax.Array.device": [[21, null]], "jax.Array.diagonal": [[22, null]], "jax.Array.dot": [[23, null]], "jax.Array.dtype": [[24, null]], "jax.Array.flat": [[25, null]], "jax.Array.flatten": [[26, null]], "jax.Array.global_shards": [[27, null]], "jax.Array.imag": [[28, null]], "jax.Array.is_fully_addressable": [[29, null]], "jax.Array.is_fully_replicated": [[30, null]], "jax.Array.item": [[31, null]], "jax.Array.itemsize": [[32, null]], "jax.Array.mT": [[33, null]], "jax.Array.max": [[34, null]], "jax.Array.mean": [[35, null]], "jax.Array.min": [[36, null]], "jax.Array.nbytes": [[37, null]], "jax.Array.ndim": [[38, null]], "jax.Array.nonzero": [[39, null]], "jax.Array.prod": [[40, null]], "jax.Array.ptp": [[41, null]], "jax.Array.ravel": [[42, null]], "jax.Array.real": [[43, null]], "jax.Array.repeat": [[44, null]], "jax.Array.reshape": [[45, null]], "jax.Array.round": [[46, null]], "jax.Array.searchsorted": [[47, null]], "jax.Array.shape": [[48, null]], "jax.Array.sharding": [[49, null]], "jax.Array.size": [[50, null]], "jax.Array.sort": [[51, null]], "jax.Array.squeeze": [[52, null]], "jax.Array.std": [[53, null]], "jax.Array.sum": [[54, null]], "jax.Array.swapaxes": [[55, null]], "jax.Array.take": [[56, null]], "jax.Array.to_device": [[57, null]], "jax.Array.trace": [[58, null]], "jax.Array.transpose": [[59, null]], "jax.Array.var": [[60, null]], "jax.Array.view": [[61, null]], "jax.Device": [[62, null]], "jax.ShapeDtypeStruct": [[63, null]], "jax.block_until_ready": [[64, null]], "jax.check_tracer_leaks": [[65, null]], "jax.checking_leaks": [[66, null]], "jax.checkpoint": [[67, null]], "jax.checkpoint fundamentals": [[1382, "jax-checkpoint-fundamentals"]], "jax.clear_caches": [[68, null]], "jax.closure_convert": [[69, null]], "jax.config": [[70, null]], "jax.copy_to_host_async": [[71, null]], "jax.core.ClosedJaxpr": [[1441, "jax-core-closedjaxpr"]], "jax.custom_batching.custom_vmap": [[72, null]], "jax.custom_batching.custom_vmap.def_vmap": [[73, null]], "jax.custom_batching.sequential_vmap": [[74, null]], "jax.custom_gradient": [[75, null]], "jax.custom_jvp": [[76, null]], "jax.custom_jvp with nondiff_argnums": [[1342, "jax-custom-jvp-with-nondiff-argnums"], [1463, "jax-custom-jvp-with-nondiff-argnums"]], "jax.custom_jvp.defjvp": [[77, null]], "jax.custom_jvp.defjvps": [[78, null]], "jax.custom_vjp": [[79, null]], "jax.custom_vjp with nondiff_argnums": [[1342, "jax-custom-vjp-with-nondiff-argnums"], [1463, "jax-custom-vjp-with-nondiff-argnums"]], "jax.custom_vjp.defvjp": [[80, null]], "jax.debug module": [[1391, null]], "jax.debug.breakpoint": [[81, null]], "jax.debug.breakpoint for pdb-like debugging": [[1360, "jax-debug-breakpoint-for-pdb-like-debugging"]], "jax.debug.callback": [[82, null]], "jax.debug.callback for more control during debugging": [[1360, "jax-debug-callback-for-more-control-during-debugging"]], "jax.debug.inspect_array_sharding": [[83, null]], "jax.debug.print": [[84, null]], "jax.debug.print for simple inspection": [[1360, "jax-debug-print-for-simple-inspection"]], "jax.debug.visualize_array_sharding": [[85, null]], "jax.debug.visualize_sharding": [[86, null]], "jax.debug_infs": [[87, null]], "jax.debug_nans": [[88, null]], "jax.default_backend": [[89, null]], "jax.default_device": [[90, null]], "jax.default_matmul_precision": [[91, null]], "jax.default_prng_impl": [[92, null]], "jax.device_count": [[93, null]], "jax.device_get": [[94, null]], "jax.device_put": [[95, null]], "jax.devices": [[96, null]], "jax.disable_jit": [[97, null]], "jax.distributed module": [[1392, null]], "jax.distributed.initialize": [[98, null]], "jax.distributed.shutdown": [[99, null]], "jax.dlpack module": [[1393, null]], "jax.dlpack.from_dlpack": [[100, null]], "jax.dlpack.is_supported_dtype": [[101, null]], "jax.dtypes module": [[1394, null]], "jax.dtypes.bfloat16": [[102, null]], "jax.dtypes.canonicalize_dtype": [[103, null]], "jax.dtypes.float0": [[104, null]], "jax.dtypes.issubdtype": [[105, null]], "jax.dtypes.prng_key": [[106, null]], "jax.dtypes.result_type": [[107, null]], "jax.dtypes.scalar_type_of": [[108, null]], "jax.enable_checks": [[109, null]], "jax.enable_custom_prng": [[110, null]], "jax.enable_custom_vjp_by_custom_transpose": [[111, null]], "jax.ensure_compile_time_eval": [[112, null]], "jax.eval_shape": [[113, null]], "jax.example_libraries module": [[1395, null]], "jax.example_libraries.optimizers module": [[1396, null]], "jax.example_libraries.stax module": [[1397, null]], "jax.experimental module": [[1398, null]], "jax.experimental.checkify module": [[1399, null]], "jax.experimental.checkify.Error": [[114, null]], "jax.experimental.checkify.JaxRuntimeError": [[115, null]], "jax.experimental.checkify.all_checks": [[116, null]], "jax.experimental.checkify.automatic_checks": [[117, null]], "jax.experimental.checkify.check": [[118, null]], "jax.experimental.checkify.check_error": [[119, null]], "jax.experimental.checkify.checkify": [[120, null]], "jax.experimental.checkify.div_checks": [[121, null]], "jax.experimental.checkify.float_checks": [[122, null]], "jax.experimental.checkify.index_checks": [[123, null]], "jax.experimental.checkify.nan_checks": [[124, null]], "jax.experimental.checkify.user_checks": [[125, null]], "jax.experimental.compilation_cache module": [[1400, null]], "jax.experimental.custom_dce module": [[1401, null]], "jax.experimental.custom_dce.custom_dce": [[126, null]], "jax.experimental.custom_dce.custom_dce.def_dce": [[127, null]], "jax.experimental.custom_partitioning module": [[1402, null]], "jax.experimental.disable_x64": [[128, null]], "jax.experimental.enable_x64": [[129, null]], "jax.experimental.io_callback": [[130, null]], "jax.experimental.jet module": [[1403, null]], "jax.experimental.key_reuse module": [[1404, null]], "jax.experimental.mesh_utils module": [[1405, null]], "jax.experimental.mesh_utils.create_device_mesh": [[131, null]], "jax.experimental.mesh_utils.create_hybrid_device_mesh": [[132, null]], "jax.experimental.multihost_utils module": [[1406, null]], "jax.experimental.multihost_utils.assert_equal": [[133, null]], "jax.experimental.multihost_utils.broadcast_one_to_all": [[134, null]], "jax.experimental.multihost_utils.global_array_to_host_local_array": [[135, null]], "jax.experimental.multihost_utils.host_local_array_to_global_array": [[136, null]], "jax.experimental.multihost_utils.process_allgather": [[137, null]], "jax.experimental.multihost_utils.sync_global_devices": [[138, null]], "jax.experimental.pallas module": [[1407, null]], "jax.experimental.pallas.BlockSpec": [[139, null]], "jax.experimental.pallas.GridSpec": [[140, null]], "jax.experimental.pallas.Slice": [[141, null]], "jax.experimental.pallas.broadcast_to": [[142, null]], "jax.experimental.pallas.debug_print": [[143, null]], "jax.experimental.pallas.dot": [[144, null]], "jax.experimental.pallas.load": [[145, null]], "jax.experimental.pallas.max_contiguous": [[146, null]], "jax.experimental.pallas.mosaic_gpu module": [[1408, null]], "jax.experimental.pallas.mosaic_gpu.ACC": [[147, null]], "jax.experimental.pallas.mosaic_gpu.Barrier": [[148, null]], "jax.experimental.pallas.mosaic_gpu.BlockSpec": [[149, null]], "jax.experimental.pallas.mosaic_gpu.CompilerParams": [[150, null]], "jax.experimental.pallas.mosaic_gpu.GMEM": [[151, null]], "jax.experimental.pallas.mosaic_gpu.Layout": [[152, null]], "jax.experimental.pallas.mosaic_gpu.MemorySpace": [[153, null]], "jax.experimental.pallas.mosaic_gpu.SMEM": [[154, null]], "jax.experimental.pallas.mosaic_gpu.SemaphoreSignal": [[155, null]], "jax.experimental.pallas.mosaic_gpu.SwizzleTransform": [[156, null]], "jax.experimental.pallas.mosaic_gpu.TilingTransform": [[157, null]], "jax.experimental.pallas.mosaic_gpu.TransposeTransform": [[158, null]], "jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef": [[159, null]], "jax.experimental.pallas.mosaic_gpu.async_load_tmem": [[160, null]], "jax.experimental.pallas.mosaic_gpu.async_store_tmem": [[161, null]], "jax.experimental.pallas.mosaic_gpu.barrier_arrive": [[162, null]], "jax.experimental.pallas.mosaic_gpu.barrier_wait": [[163, null]], "jax.experimental.pallas.mosaic_gpu.commit_smem": [[164, null]], "jax.experimental.pallas.mosaic_gpu.commit_tmem": [[165, null]], "jax.experimental.pallas.mosaic_gpu.copy_gmem_to_smem": [[166, null]], "jax.experimental.pallas.mosaic_gpu.copy_smem_to_gmem": [[167, null]], "jax.experimental.pallas.mosaic_gpu.emit_pipeline": [[168, null]], "jax.experimental.pallas.mosaic_gpu.layout_cast": [[169, null]], "jax.experimental.pallas.mosaic_gpu.semaphore_signal_parallel": [[170, null]], "jax.experimental.pallas.mosaic_gpu.set_max_registers": [[171, null]], "jax.experimental.pallas.mosaic_gpu.wait_load_tmem": [[172, null]], "jax.experimental.pallas.mosaic_gpu.wait_smem_to_gmem": [[173, null]], "jax.experimental.pallas.mosaic_gpu.wgmma": [[174, null]], "jax.experimental.pallas.mosaic_gpu.wgmma_wait": [[175, null]], "jax.experimental.pallas.multiple_of": [[176, null]], "jax.experimental.pallas.num_programs": [[177, null]], "jax.experimental.pallas.pallas_call": [[178, null]], "jax.experimental.pallas.program_id": [[179, null]], "jax.experimental.pallas.run_scoped": [[180, null]], "jax.experimental.pallas.store": [[181, null]], "jax.experimental.pallas.swap": [[182, null]], "jax.experimental.pallas.tpu module": [[1409, null]], "jax.experimental.pallas.triton module": [[1410, null]], "jax.experimental.pallas.triton.CompilerParams": [[183, null]], "jax.experimental.pallas.triton.approx_tanh": [[184, null]], "jax.experimental.pallas.triton.atomic_add": [[185, null]], "jax.experimental.pallas.triton.atomic_and": [[186, null]], "jax.experimental.pallas.triton.atomic_cas": [[187, null]], "jax.experimental.pallas.triton.atomic_max": [[188, null]], "jax.experimental.pallas.triton.atomic_min": [[189, null]], "jax.experimental.pallas.triton.atomic_or": [[190, null]], "jax.experimental.pallas.triton.atomic_xchg": [[191, null]], "jax.experimental.pallas.triton.atomic_xor": [[192, null]], "jax.experimental.pallas.triton.debug_barrier": [[193, null]], "jax.experimental.pallas.triton.elementwise_inline_asm": [[194, null]], "jax.experimental.pallas.when": [[195, null]], "jax.experimental.pjit module": [[1411, null]], "jax.experimental.serialize_executable module": [[1412, null]], "jax.experimental.serialize_executable.deserialize_and_load": [[196, null]], "jax.experimental.serialize_executable.serialize": [[197, null]], "jax.experimental.shard_map module": [[1413, null]], "jax.experimental.shard_map.shard_map": [[198, null]], "jax.experimental.sparse module": [[1414, null]], "jax.experimental.sparse.BCOO": [[199, null]], "jax.experimental.sparse.BCSR": [[200, null]], "jax.experimental.sparse.COO": [[201, null]], "jax.experimental.sparse.CSC": [[202, null]], "jax.experimental.sparse.CSR": [[203, null]], "jax.experimental.sparse.JAXSparse": [[204, null]], "jax.experimental.sparse.bcoo_broadcast_in_dim": [[205, null]], "jax.experimental.sparse.bcoo_concatenate": [[206, null]], "jax.experimental.sparse.bcoo_dot_general": [[207, null]], "jax.experimental.sparse.bcoo_dot_general_sampled": [[208, null]], "jax.experimental.sparse.bcoo_dynamic_slice": [[209, null]], "jax.experimental.sparse.bcoo_extract": [[210, null]], "jax.experimental.sparse.bcoo_fromdense": [[211, null]], "jax.experimental.sparse.bcoo_gather": [[212, null]], "jax.experimental.sparse.bcoo_multiply_dense": [[213, null]], "jax.experimental.sparse.bcoo_multiply_sparse": [[214, null]], "jax.experimental.sparse.bcoo_reduce_sum": [[215, null]], "jax.experimental.sparse.bcoo_reshape": [[216, null]], "jax.experimental.sparse.bcoo_slice": [[217, null]], "jax.experimental.sparse.bcoo_sort_indices": [[218, null]], "jax.experimental.sparse.bcoo_squeeze": [[219, null]], "jax.experimental.sparse.bcoo_sum_duplicates": [[220, null]], "jax.experimental.sparse.bcoo_todense": [[221, null]], "jax.experimental.sparse.bcoo_transpose": [[222, null]], "jax.experimental.sparse.bcoo_update_layout": [[223, null]], "jax.experimental.sparse.bcsr_dot_general": [[224, null]], "jax.experimental.sparse.bcsr_extract": [[225, null]], "jax.experimental.sparse.bcsr_fromdense": [[226, null]], "jax.experimental.sparse.bcsr_todense": [[227, null]], "jax.experimental.sparse.coo_fromdense": [[228, null]], "jax.experimental.sparse.coo_matmat": [[229, null]], "jax.experimental.sparse.coo_matvec": [[230, null]], "jax.experimental.sparse.coo_todense": [[231, null]], "jax.experimental.sparse.csr_fromdense": [[232, null]], "jax.experimental.sparse.csr_matmat": [[233, null]], "jax.experimental.sparse.csr_matvec": [[234, null]], "jax.experimental.sparse.csr_todense": [[235, null]], "jax.experimental.sparse.empty": [[236, null]], "jax.experimental.sparse.eye": [[237, null]], "jax.experimental.sparse.grad": [[238, null]], "jax.experimental.sparse.linalg": [[1414, "module-jax.experimental.sparse.linalg"]], "jax.experimental.sparse.linalg.lobpcg_standard": [[239, null]], "jax.experimental.sparse.linalg.spsolve": [[240, null]], "jax.experimental.sparse.random_bcoo": [[241, null]], "jax.experimental.sparse.sparsify": [[242, null]], "jax.experimental.sparse.todense": [[243, null]], "jax.experimental.sparse.value_and_grad": [[244, null]], "jax.export module": [[1415, null]], "jax.export requires all inputs and outputs to have the same mesh": [[1501, "jax-export-requires-all-inputs-and-outputs-to-have-the-same-mesh"]], "jax.export.SymbolicScope": [[245, null]], "jax.export.default_export_platform": [[246, null]], "jax.export.deserialize": [[247, null]], "jax.export.export": [[248, null]], "jax.export.is_symbolic_dim": [[249, null]], "jax.export.maximum_supported_calling_convention_version": [[250, null]], "jax.export.minimum_supported_calling_convention_version": [[251, null]], "jax.export.register_namedtuple_serialization": [[252, null]], "jax.export.register_pytree_node_serialization": [[253, null]], "jax.export.symbolic_args_specs": [[254, null]], "jax.export.symbolic_shape": [[255, null]], "jax.extend module": [[1416, null]], "jax.extend.core": [[1446, "jax-extend-core"]], "jax.extend.core module": [[1417, null]], "jax.extend.core.ClosedJaxpr": [[256, null]], "jax.extend.core.Jaxpr": [[257, null]], "jax.extend.core.JaxprEqn": [[258, null]], "jax.extend.core.Literal": [[259, null]], "jax.extend.core.Primitive": [[260, null]], "jax.extend.core.Token": [[261, null]], "jax.extend.core.Var": [[262, null]], "jax.extend.core.array_types": [[263, null]], "jax.extend.core.jaxpr_as_fun": [[264, null]], "jax.extend.core.primitives": [[265, null]], "jax.extend.interpreters": [[1446, "jax-extend-interpreters"]], "jax.extend.linear_util module": [[1418, null]], "jax.extend.linear_util.StoreException": [[266, null]], "jax.extend.linear_util.WrappedFun": [[267, null]], "jax.extend.linear_util.cache": [[268, null]], "jax.extend.linear_util.merge_linear_aux": [[269, null]], "jax.extend.linear_util.transformation": [[270, null]], "jax.extend.linear_util.transformation_with_aux": [[271, null]], "jax.extend.linear_util.wrap_init": [[272, null]], "jax.extend.mlir module": [[1419, null]], "jax.extend.mlir.dialects": [[273, null]], "jax.extend.mlir.ir": [[274, null]], "jax.extend.mlir.passmanager": [[275, null]], "jax.extend.random": [[1446, "jax-extend-random"]], "jax.extend.random module": [[1420, null]], "jax.extend.random.define_prng_impl": [[276, null]], "jax.extend.random.rbg_prng_impl": [[277, null]], "jax.extend.random.seed_with_impl": [[278, null]], "jax.extend.random.threefry2x32_p": [[279, null]], "jax.extend.random.threefry_2x32": [[280, null]], "jax.extend.random.threefry_prng_impl": [[281, null]], "jax.extend.random.unsafe_rbg_prng_impl": [[282, null]], "jax.extend.sharding": [[1446, "jax-extend-sharding"]], "jax.extend: a module for extensions": [[1446, null]], "jax.ffi module": [[1421, null]], "jax.ffi.ffi_call": [[283, null]], "jax.ffi.ffi_lowering": [[284, null]], "jax.ffi.pycapsule": [[285, null]], "jax.ffi.register_ffi_target": [[286, null]], "jax.ffi.register_ffi_type_id": [[287, null]], "jax.flatten_util module": [[1422, null]], "jax.flatten_util.ravel_pytree": [[288, null]], "jax.grad": [[289, null]], "jax.hessian": [[290, null]], "jax.image module": [[1423, null]], "jax.image.resize": [[291, null]], "jax.image.scale_and_translate": [[292, null]], "jax.jacfwd": [[293, null]], "jax.jacobian": [[294, null]], "jax.jacrev": [[295, null]], "jax.jit": [[296, null]], "jax.jvp": [[297, null]], "jax.lax module": [[1424, null]], "jax.lax.abs": [[298, null]], "jax.lax.acos": [[299, null]], "jax.lax.acosh": [[300, null]], "jax.lax.add": [[301, null]], "jax.lax.after_all": [[302, null]], "jax.lax.all_gather": [[303, null]], "jax.lax.all_to_all": [[304, null]], "jax.lax.approx_max_k": [[305, null]], "jax.lax.approx_min_k": [[306, null]], "jax.lax.argmax": [[307, null]], "jax.lax.argmin": [[308, null]], "jax.lax.asin": [[309, null]], "jax.lax.asinh": [[310, null]], "jax.lax.associative_scan": [[311, null]], "jax.lax.atan": [[312, null]], "jax.lax.atan2": [[313, null]], "jax.lax.atanh": [[314, null]], "jax.lax.axis_index": [[315, null]], "jax.lax.axis_size": [[316, null]], "jax.lax.batch_matmul": [[317, null]], "jax.lax.bessel_i0e": [[318, null]], "jax.lax.bessel_i1e": [[319, null]], "jax.lax.betainc": [[320, null]], "jax.lax.bitcast_convert_type": [[321, null]], "jax.lax.bitwise_and": [[322, null]], "jax.lax.bitwise_not": [[323, null]], "jax.lax.bitwise_or": [[324, null]], "jax.lax.bitwise_xor": [[325, null]], "jax.lax.broadcast": [[326, null]], "jax.lax.broadcast_in_dim": [[327, null]], "jax.lax.broadcast_shapes": [[328, null]], "jax.lax.broadcast_to_rank": [[329, null]], "jax.lax.broadcasted_iota": [[330, null]], "jax.lax.cbrt": [[331, null]], "jax.lax.ceil": [[332, null]], "jax.lax.clamp": [[333, null]], "jax.lax.clz": [[334, null]], "jax.lax.collapse": [[335, null]], "jax.lax.complex": [[336, null]], "jax.lax.composite": [[337, null]], "jax.lax.concatenate": [[338, null]], "jax.lax.cond": [[339, null]], "jax.lax.conj": [[340, null]], "jax.lax.conv": [[341, null]], "jax.lax.conv_dimension_numbers": [[342, null]], "jax.lax.conv_general_dilated": [[343, null]], "jax.lax.conv_general_dilated_local": [[344, null]], "jax.lax.conv_general_dilated_patches": [[345, null]], "jax.lax.conv_transpose": [[346, null]], "jax.lax.conv_with_general_padding": [[347, null]], "jax.lax.convert_element_type": [[348, null]], "jax.lax.cos": [[349, null]], "jax.lax.cosh": [[350, null]], "jax.lax.cumlogsumexp": [[351, null]], "jax.lax.cummax": [[352, null]], "jax.lax.cummin": [[353, null]], "jax.lax.cumprod": [[354, null]], "jax.lax.cumsum": [[355, null]], "jax.lax.custom_linear_solve": [[356, null]], "jax.lax.custom_root": [[357, null]], "jax.lax.digamma": [[358, null]], "jax.lax.div": [[359, null]], "jax.lax.dot": [[360, null]], "jax.lax.dot_general": [[361, null]], "jax.lax.dynamic_index_in_dim": [[362, null]], "jax.lax.dynamic_slice": [[363, null]], "jax.lax.dynamic_slice_in_dim": [[364, null]], "jax.lax.dynamic_update_index_in_dim": [[365, null]], "jax.lax.dynamic_update_slice": [[366, null]], "jax.lax.dynamic_update_slice_in_dim": [[367, null]], "jax.lax.eq": [[368, null]], "jax.lax.erf": [[369, null]], "jax.lax.erf_inv": [[370, null]], "jax.lax.erfc": [[371, null]], "jax.lax.exp": [[372, null]], "jax.lax.exp2": [[373, null]], "jax.lax.expand_dims": [[374, null]], "jax.lax.expm1": [[375, null]], "jax.lax.fft": [[376, null]], "jax.lax.floor": [[377, null]], "jax.lax.fori_loop": [[378, null]], "jax.lax.full": [[379, null]], "jax.lax.full_like": [[380, null]], "jax.lax.gather": [[381, null]], "jax.lax.ge": [[382, null]], "jax.lax.gt": [[383, null]], "jax.lax.igamma": [[384, null]], "jax.lax.igammac": [[385, null]], "jax.lax.imag": [[386, null]], "jax.lax.index_in_dim": [[387, null]], "jax.lax.index_take": [[388, null]], "jax.lax.integer_pow": [[389, null]], "jax.lax.iota": [[390, null]], "jax.lax.is_finite": [[391, null]], "jax.lax.le": [[392, null]], "jax.lax.lgamma": [[393, null]], "jax.lax.linalg.SvdAlgorithm": [[394, null]], "jax.lax.linalg.cholesky": [[395, null]], "jax.lax.linalg.cholesky_update": [[396, null]], "jax.lax.linalg.eig": [[397, null]], "jax.lax.linalg.eigh": [[398, null]], "jax.lax.linalg.hessenberg": [[399, null]], "jax.lax.linalg.householder_product": [[400, null]], "jax.lax.linalg.lu": [[401, null]], "jax.lax.linalg.lu_pivots_to_permutation": [[402, null]], "jax.lax.linalg.qdwh": [[403, null]], "jax.lax.linalg.qr": [[404, null]], "jax.lax.linalg.schur": [[405, null]], "jax.lax.linalg.svd": [[406, null]], "jax.lax.linalg.symmetric_product": [[407, null]], "jax.lax.linalg.triangular_solve": [[408, null]], "jax.lax.linalg.tridiagonal": [[409, null]], "jax.lax.linalg.tridiagonal_solve": [[410, null]], "jax.lax.log": [[411, null]], "jax.lax.log1p": [[412, null]], "jax.lax.logistic": [[413, null]], "jax.lax.lt": [[414, null]], "jax.lax.map": [[415, null]], "jax.lax.max": [[416, null]], "jax.lax.min": [[417, null]], "jax.lax.mul": [[418, null]], "jax.lax.ne": [[419, null]], "jax.lax.neg": [[420, null]], "jax.lax.nextafter": [[421, null]], "jax.lax.optimization_barrier": [[422, null]], "jax.lax.pad": [[423, null]], "jax.lax.platform_dependent": [[424, null]], "jax.lax.pmax": [[425, null]], "jax.lax.pmean": [[426, null]], "jax.lax.pmin": [[427, null]], "jax.lax.polygamma": [[428, null]], "jax.lax.population_count": [[429, null]], "jax.lax.pow": [[430, null]], "jax.lax.ppermute": [[431, null]], "jax.lax.precv": [[432, null]], "jax.lax.psend": [[433, null]], "jax.lax.pshuffle": [[434, null]], "jax.lax.psum": [[435, null]], "jax.lax.psum_scatter": [[436, null]], "jax.lax.pswapaxes": [[437, null]], "jax.lax.random_gamma_grad": [[438, null]], "jax.lax.real": [[439, null]], "jax.lax.reciprocal": [[440, null]], "jax.lax.reduce": [[441, null]], "jax.lax.reduce_and": [[442, null]], "jax.lax.reduce_max": [[443, null]], "jax.lax.reduce_min": [[444, null]], "jax.lax.reduce_or": [[445, null]], "jax.lax.reduce_precision": [[446, null]], "jax.lax.reduce_prod": [[447, null]], "jax.lax.reduce_sum": [[448, null]], "jax.lax.reduce_window": [[449, null]], "jax.lax.reduce_xor": [[450, null]], "jax.lax.rem": [[451, null]], "jax.lax.reshape": [[452, null]], "jax.lax.rev": [[453, null]], "jax.lax.rng_bit_generator": [[454, null]], "jax.lax.rng_uniform": [[455, null]], "jax.lax.round": [[456, null]], "jax.lax.rsqrt": [[457, null]], "jax.lax.scan": [[458, null]], "jax.lax.scatter": [[459, null]], "jax.lax.scatter_add": [[460, null]], "jax.lax.scatter_apply": [[461, null]], "jax.lax.scatter_max": [[462, null]], "jax.lax.scatter_min": [[463, null]], "jax.lax.scatter_mul": [[464, null]], "jax.lax.select": [[465, null]], "jax.lax.select_n": [[466, null]], "jax.lax.shift_left": [[467, null]], "jax.lax.shift_right_arithmetic": [[468, null]], "jax.lax.shift_right_logical": [[469, null]], "jax.lax.sign": [[470, null]], "jax.lax.sin": [[471, null]], "jax.lax.sinh": [[472, null]], "jax.lax.slice": [[473, null]], "jax.lax.slice_in_dim": [[474, null]], "jax.lax.sort": [[475, null]], "jax.lax.sort_key_val": [[476, null]], "jax.lax.split": [[477, null]], "jax.lax.sqrt": [[478, null]], "jax.lax.square": [[479, null]], "jax.lax.squeeze": [[480, null]], "jax.lax.stop_gradient": [[481, null]], "jax.lax.sub": [[482, null]], "jax.lax.switch": [[483, null]], "jax.lax.tan": [[484, null]], "jax.lax.tanh": [[485, null]], "jax.lax.top_k": [[486, null]], "jax.lax.transpose": [[487, null]], "jax.lax.while_loop": [[488, null]], "jax.lax.with_sharding_constraint": [[489, null]], "jax.lax.zeros_like_array": [[490, null]], "jax.lax.zeta": [[491, null]], "jax.lib module": [[1425, null]], "jax.lib.xla_bridge": [[1425, "jax-lib-xla-bridge"]], "jax.lib.xla_bridge.get_backend": [[492, null]], "jax.lib.xla_bridge.get_compile_options": [[493, null]], "jax.lib.xla_client": [[1425, "jax-lib-xla-client"]], "jax.linear_transpose": [[494, null]], "jax.linearize": [[495, null]], "jax.live_arrays": [[496, null]], "jax.local_device_count": [[497, null]], "jax.local_devices": [[498, null]], "jax.log_compiles": [[499, null]], "jax.make_array_from_callback": [[500, null]], "jax.make_array_from_process_local_data": [[501, null]], "jax.make_array_from_single_device_arrays": [[502, null]], "jax.make_jaxpr": [[503, null]], "jax.make_mesh": [[504, null]], "jax.named_call": [[505, null]], "jax.named_scope": [[506, null]], "jax.nn module": [[1426, null]], "jax.nn.celu": [[507, null]], "jax.nn.dot_product_attention": [[508, null]], "jax.nn.elu": [[509, null]], "jax.nn.gelu": [[510, null]], "jax.nn.get_scaled_dot_general_config": [[511, null]], "jax.nn.glu": [[512, null]], "jax.nn.hard_sigmoid": [[513, null]], "jax.nn.hard_silu": [[514, null]], "jax.nn.hard_swish": [[515, null]], "jax.nn.hard_tanh": [[516, null]], "jax.nn.identity": [[517, null]], "jax.nn.initializers module": [[1427, null]], "jax.nn.initializers.constant": [[518, null]], "jax.nn.initializers.delta_orthogonal": [[519, null]], "jax.nn.initializers.glorot_normal": [[520, null]], "jax.nn.initializers.glorot_uniform": [[521, null]], "jax.nn.initializers.he_normal": [[522, null]], "jax.nn.initializers.he_uniform": [[523, null]], "jax.nn.initializers.lecun_normal": [[524, null]], "jax.nn.initializers.lecun_uniform": [[525, null]], "jax.nn.initializers.normal": [[526, null]], "jax.nn.initializers.ones": [[527, null]], "jax.nn.initializers.orthogonal": [[528, null]], "jax.nn.initializers.truncated_normal": [[529, null]], "jax.nn.initializers.uniform": [[530, null]], "jax.nn.initializers.variance_scaling": [[531, null]], "jax.nn.initializers.zeros": [[532, null]], "jax.nn.leaky_relu": [[533, null]], "jax.nn.log1mexp": [[534, null]], "jax.nn.log_sigmoid": [[535, null]], "jax.nn.log_softmax": [[536, null]], "jax.nn.logmeanexp": [[537, null]], "jax.nn.logsumexp": [[538, null]], "jax.nn.mish": [[539, null]], "jax.nn.one_hot": [[540, null]], "jax.nn.relu": [[541, null]], "jax.nn.relu6": [[542, null]], "jax.nn.scaled_dot_general": [[543, null]], "jax.nn.scaled_matmul": [[544, null]], "jax.nn.selu": [[545, null]], "jax.nn.sigmoid": [[546, null]], "jax.nn.silu": [[547, null]], "jax.nn.soft_sign": [[548, null]], "jax.nn.softmax": [[549, null]], "jax.nn.softplus": [[550, null]], "jax.nn.sparse_plus": [[551, null]], "jax.nn.sparse_sigmoid": [[552, null]], "jax.nn.squareplus": [[553, null]], "jax.nn.standardize": [[554, null]], "jax.nn.swish": [[555, null]], "jax.no_tracing": [[556, null]], "jax.numpy module": [[1428, null]], "jax.numpy.ComplexWarning": [[557, null]], "jax.numpy.abs": [[558, null]], "jax.numpy.absolute": [[559, null]], "jax.numpy.acos": [[560, null]], "jax.numpy.acosh": [[561, null]], "jax.numpy.add": [[562, null]], "jax.numpy.all": [[563, null]], "jax.numpy.allclose": [[564, null]], "jax.numpy.amax": [[565, null]], "jax.numpy.amin": [[566, null]], "jax.numpy.angle": [[567, null]], "jax.numpy.any": [[568, null]], "jax.numpy.append": [[569, null]], "jax.numpy.apply_along_axis": [[570, null]], "jax.numpy.apply_over_axes": [[571, null]], "jax.numpy.arange": [[572, null]], "jax.numpy.arccos": [[573, null]], "jax.numpy.arccosh": [[574, null]], "jax.numpy.arcsin": [[575, null]], "jax.numpy.arcsinh": [[576, null]], "jax.numpy.arctan": [[577, null]], "jax.numpy.arctan2": [[578, null]], "jax.numpy.arctanh": [[579, null]], "jax.numpy.argmax": [[580, null]], "jax.numpy.argmin": [[581, null]], "jax.numpy.argpartition": [[582, null]], "jax.numpy.argsort": [[583, null]], "jax.numpy.argwhere": [[584, null]], "jax.numpy.around": [[585, null]], "jax.numpy.array": [[586, null]], "jax.numpy.array_equal": [[587, null]], "jax.numpy.array_equiv": [[588, null]], "jax.numpy.array_repr": [[589, null]], "jax.numpy.array_split": [[590, null]], "jax.numpy.array_str": [[591, null]], "jax.numpy.asarray": [[592, null]], "jax.numpy.asin": [[593, null]], "jax.numpy.asinh": [[594, null]], "jax.numpy.astype": [[595, null]], "jax.numpy.atan": [[596, null]], "jax.numpy.atan2": [[597, null]], "jax.numpy.atanh": [[598, null]], "jax.numpy.atleast_1d": [[599, null]], "jax.numpy.atleast_2d": [[600, null]], "jax.numpy.atleast_3d": [[601, null]], "jax.numpy.average": [[602, null]], "jax.numpy.bartlett": [[603, null]], "jax.numpy.bincount": [[604, null]], "jax.numpy.bitwise_and": [[605, null]], "jax.numpy.bitwise_count": [[606, null]], "jax.numpy.bitwise_invert": [[607, null]], "jax.numpy.bitwise_left_shift": [[608, null]], "jax.numpy.bitwise_not": [[609, null]], "jax.numpy.bitwise_or": [[610, null]], "jax.numpy.bitwise_right_shift": [[611, null]], "jax.numpy.bitwise_xor": [[612, null]], "jax.numpy.blackman": [[613, null]], "jax.numpy.block": [[614, null]], "jax.numpy.bool_": [[615, null]], "jax.numpy.broadcast_arrays": [[616, null]], "jax.numpy.broadcast_shapes": [[617, null]], "jax.numpy.broadcast_to": [[618, null]], "jax.numpy.c_": [[619, null]], "jax.numpy.can_cast": [[620, null]], "jax.numpy.cbrt": [[621, null]], "jax.numpy.cdouble": [[622, null]], "jax.numpy.ceil": [[623, null]], "jax.numpy.character": [[624, null]], "jax.numpy.choose": [[625, null]], "jax.numpy.clip": [[626, null]], "jax.numpy.column_stack": [[627, null]], "jax.numpy.complex128": [[628, null]], "jax.numpy.complex64": [[629, null]], "jax.numpy.complex_": [[630, null]], "jax.numpy.complexfloating": [[631, null]], "jax.numpy.compress": [[632, null]], "jax.numpy.concat": [[633, null]], "jax.numpy.concatenate": [[634, null]], "jax.numpy.conj": [[635, null]], "jax.numpy.conjugate": [[636, null]], "jax.numpy.convolve": [[637, null]], "jax.numpy.copy": [[638, null]], "jax.numpy.copysign": [[639, null]], "jax.numpy.corrcoef": [[640, null]], "jax.numpy.correlate": [[641, null]], "jax.numpy.cos": [[642, null]], "jax.numpy.cosh": [[643, null]], "jax.numpy.count_nonzero": [[644, null]], "jax.numpy.cov": [[645, null]], "jax.numpy.cross": [[646, null]], "jax.numpy.csingle": [[647, null]], "jax.numpy.cumprod": [[648, null]], "jax.numpy.cumsum": [[649, null]], "jax.numpy.cumulative_prod": [[650, null]], "jax.numpy.cumulative_sum": [[651, null]], "jax.numpy.deg2rad": [[652, null]], "jax.numpy.degrees": [[653, null]], "jax.numpy.delete": [[654, null]], "jax.numpy.diag": [[655, null]], "jax.numpy.diag_indices": [[656, null]], "jax.numpy.diag_indices_from": [[657, null]], "jax.numpy.diagflat": [[658, null]], "jax.numpy.diagonal": [[659, null]], "jax.numpy.diff": [[660, null]], "jax.numpy.digitize": [[661, null]], "jax.numpy.divide": [[662, null]], "jax.numpy.divmod": [[663, null]], "jax.numpy.dot": [[664, null]], "jax.numpy.double": [[665, null]], "jax.numpy.dsplit": [[666, null]], "jax.numpy.dstack": [[667, null]], "jax.numpy.dtype": [[668, null]], "jax.numpy.ediff1d": [[669, null]], "jax.numpy.einsum": [[670, null]], "jax.numpy.einsum_path": [[671, null]], "jax.numpy.empty": [[672, null]], "jax.numpy.empty_like": [[673, null]], "jax.numpy.equal": [[674, null]], "jax.numpy.exp": [[675, null]], "jax.numpy.exp2": [[676, null]], "jax.numpy.expand_dims": [[677, null]], "jax.numpy.expm1": [[678, null]], "jax.numpy.extract": [[679, null]], "jax.numpy.eye": [[680, null]], "jax.numpy.fabs": [[681, null]], "jax.numpy.fft": [[1428, "module-jax.numpy.fft"]], "jax.numpy.fft.fft": [[682, null]], "jax.numpy.fft.fft2": [[683, null]], "jax.numpy.fft.fftfreq": [[684, null]], "jax.numpy.fft.fftn": [[685, null]], "jax.numpy.fft.fftshift": [[686, null]], "jax.numpy.fft.hfft": [[687, null]], "jax.numpy.fft.ifft": [[688, null]], "jax.numpy.fft.ifft2": [[689, null]], "jax.numpy.fft.ifftn": [[690, null]], "jax.numpy.fft.ifftshift": [[691, null]], "jax.numpy.fft.ihfft": [[692, null]], "jax.numpy.fft.irfft": [[693, null]], "jax.numpy.fft.irfft2": [[694, null]], "jax.numpy.fft.irfftn": [[695, null]], "jax.numpy.fft.rfft": [[696, null]], "jax.numpy.fft.rfft2": [[697, null]], "jax.numpy.fft.rfftfreq": [[698, null]], "jax.numpy.fft.rfftn": [[699, null]], "jax.numpy.fill_diagonal": [[700, null]], "jax.numpy.finfo": [[701, null]], "jax.numpy.fix": [[702, null]], "jax.numpy.flatnonzero": [[703, null]], "jax.numpy.flexible": [[704, null]], "jax.numpy.flip": [[705, null]], "jax.numpy.fliplr": [[706, null]], "jax.numpy.flipud": [[707, null]], "jax.numpy.float16": [[708, null]], "jax.numpy.float32": [[709, null]], "jax.numpy.float64": [[710, null]], "jax.numpy.float_": [[711, null]], "jax.numpy.float_power": [[712, null]], "jax.numpy.floating": [[713, null]], "jax.numpy.floor": [[714, null]], "jax.numpy.floor_divide": [[715, null]], "jax.numpy.fmax": [[716, null]], "jax.numpy.fmin": [[717, null]], "jax.numpy.fmod": [[718, null]], "jax.numpy.frexp": [[719, null]], "jax.numpy.from_dlpack": [[720, null]], "jax.numpy.frombuffer": [[721, null]], "jax.numpy.fromfile": [[722, null]], "jax.numpy.fromfunction": [[723, null]], "jax.numpy.fromiter": [[724, null]], "jax.numpy.frompyfunc": [[725, null]], "jax.numpy.fromstring": [[726, null]], "jax.numpy.full": [[727, null]], "jax.numpy.full_like": [[728, null]], "jax.numpy.gcd": [[729, null]], "jax.numpy.generic": [[730, null]], "jax.numpy.geomspace": [[731, null]], "jax.numpy.get_printoptions": [[732, null]], "jax.numpy.gradient": [[733, null]], "jax.numpy.greater": [[734, null]], "jax.numpy.greater_equal": [[735, null]], "jax.numpy.hamming": [[736, null]], "jax.numpy.hanning": [[737, null]], "jax.numpy.heaviside": [[738, null]], "jax.numpy.histogram": [[739, null]], "jax.numpy.histogram2d": [[740, null]], "jax.numpy.histogram_bin_edges": [[741, null]], "jax.numpy.histogramdd": [[742, null]], "jax.numpy.hsplit": [[743, null]], "jax.numpy.hstack": [[744, null]], "jax.numpy.hypot": [[745, null]], "jax.numpy.i0": [[746, null]], "jax.numpy.identity": [[747, null]], "jax.numpy.iinfo": [[748, null]], "jax.numpy.imag": [[749, null]], "jax.numpy.index_exp": [[750, null]], "jax.numpy.indices": [[751, null]], "jax.numpy.inexact": [[752, null]], "jax.numpy.inner": [[753, null]], "jax.numpy.insert": [[754, null]], "jax.numpy.int16": [[755, null]], "jax.numpy.int32": [[756, null]], "jax.numpy.int64": [[757, null]], "jax.numpy.int8": [[758, null]], "jax.numpy.int_": [[759, null]], "jax.numpy.integer": [[760, null]], "jax.numpy.interp": [[761, null]], "jax.numpy.intersect1d": [[762, null]], "jax.numpy.invert": [[763, null]], "jax.numpy.isclose": [[764, null]], "jax.numpy.iscomplex": [[765, null]], "jax.numpy.iscomplexobj": [[766, null]], "jax.numpy.isdtype": [[767, null]], "jax.numpy.isfinite": [[768, null]], "jax.numpy.isin": [[769, null]], "jax.numpy.isinf": [[770, null]], "jax.numpy.isnan": [[771, null]], "jax.numpy.isneginf": [[772, null]], "jax.numpy.isposinf": [[773, null]], "jax.numpy.isreal": [[774, null]], "jax.numpy.isrealobj": [[775, null]], "jax.numpy.isscalar": [[776, null]], "jax.numpy.issubdtype": [[777, null]], "jax.numpy.iterable": [[778, null]], "jax.numpy.ix_": [[779, null]], "jax.numpy.kaiser": [[780, null]], "jax.numpy.kron": [[781, null]], "jax.numpy.lcm": [[782, null]], "jax.numpy.ldexp": [[783, null]], "jax.numpy.left_shift": [[784, null]], "jax.numpy.less": [[785, null]], "jax.numpy.less_equal": [[786, null]], "jax.numpy.lexsort": [[787, null]], "jax.numpy.linalg": [[1428, "module-jax.numpy.linalg"]], "jax.numpy.linalg.cholesky": [[788, null]], "jax.numpy.linalg.cond": [[789, null]], "jax.numpy.linalg.cross": [[790, null]], "jax.numpy.linalg.det": [[791, null]], "jax.numpy.linalg.diagonal": [[792, null]], "jax.numpy.linalg.eig": [[793, null]], "jax.numpy.linalg.eigh": [[794, null]], "jax.numpy.linalg.eigvals": [[795, null]], "jax.numpy.linalg.eigvalsh": [[796, null]], "jax.numpy.linalg.inv": [[797, null]], "jax.numpy.linalg.lstsq": [[798, null]], "jax.numpy.linalg.matmul": [[799, null]], "jax.numpy.linalg.matrix_norm": [[800, null]], "jax.numpy.linalg.matrix_power": [[801, null]], "jax.numpy.linalg.matrix_rank": [[802, null]], "jax.numpy.linalg.matrix_transpose": [[803, null]], "jax.numpy.linalg.multi_dot": [[804, null]], "jax.numpy.linalg.norm": [[805, null]], "jax.numpy.linalg.outer": [[806, null]], "jax.numpy.linalg.pinv": [[807, null]], "jax.numpy.linalg.qr": [[808, null]], "jax.numpy.linalg.slogdet": [[809, null]], "jax.numpy.linalg.solve": [[810, null]], "jax.numpy.linalg.svd": [[811, null]], "jax.numpy.linalg.svdvals": [[812, null]], "jax.numpy.linalg.tensordot": [[813, null]], "jax.numpy.linalg.tensorinv": [[814, null]], "jax.numpy.linalg.tensorsolve": [[815, null]], "jax.numpy.linalg.trace": [[816, null]], "jax.numpy.linalg.vecdot": [[817, null]], "jax.numpy.linalg.vector_norm": [[818, null]], "jax.numpy.linspace": [[819, null]], "jax.numpy.load": [[820, null]], "jax.numpy.log": [[821, null]], "jax.numpy.log10": [[822, null]], "jax.numpy.log1p": [[823, null]], "jax.numpy.log2": [[824, null]], "jax.numpy.logaddexp": [[825, null]], "jax.numpy.logaddexp2": [[826, null]], "jax.numpy.logical_and": [[827, null]], "jax.numpy.logical_not": [[828, null]], "jax.numpy.logical_or": [[829, null]], "jax.numpy.logical_xor": [[830, null]], "jax.numpy.logspace": [[831, null]], "jax.numpy.mask_indices": [[832, null]], "jax.numpy.matmul": [[833, null]], "jax.numpy.matrix_transpose": [[834, null]], "jax.numpy.matvec": [[835, null]], "jax.numpy.max": [[836, null]], "jax.numpy.maximum": [[837, null]], "jax.numpy.mean": [[838, null]], "jax.numpy.median": [[839, null]], "jax.numpy.meshgrid": [[840, null]], "jax.numpy.mgrid": [[841, null]], "jax.numpy.min": [[842, null]], "jax.numpy.minimum": [[843, null]], "jax.numpy.mod": [[844, null]], "jax.numpy.modf": [[845, null]], "jax.numpy.moveaxis": [[846, null]], "jax.numpy.multiply": [[847, null]], "jax.numpy.nan_to_num": [[848, null]], "jax.numpy.nanargmax": [[849, null]], "jax.numpy.nanargmin": [[850, null]], "jax.numpy.nancumprod": [[851, null]], "jax.numpy.nancumsum": [[852, null]], "jax.numpy.nanmax": [[853, null]], "jax.numpy.nanmean": [[854, null]], "jax.numpy.nanmedian": [[855, null]], "jax.numpy.nanmin": [[856, null]], "jax.numpy.nanpercentile": [[857, null]], "jax.numpy.nanprod": [[858, null]], "jax.numpy.nanquantile": [[859, null]], "jax.numpy.nanstd": [[860, null]], "jax.numpy.nansum": [[861, null]], "jax.numpy.nanvar": [[862, null]], "jax.numpy.ndarray": [[863, null]], "jax.numpy.ndarray.at": [[864, null]], "jax.numpy.ndim": [[865, null]], "jax.numpy.negative": [[866, null]], "jax.numpy.nextafter": [[867, null]], "jax.numpy.nonzero": [[868, null]], "jax.numpy.not_equal": [[869, null]], "jax.numpy.number": [[870, null]], "jax.numpy.object_": [[871, null]], "jax.numpy.ogrid": [[872, null]], "jax.numpy.ones": [[873, null]], "jax.numpy.ones_like": [[874, null]], "jax.numpy.outer": [[875, null]], "jax.numpy.packbits": [[876, null]], "jax.numpy.pad": [[877, null]], "jax.numpy.partition": [[878, null]], "jax.numpy.percentile": [[879, null]], "jax.numpy.permute_dims": [[880, null]], "jax.numpy.piecewise": [[881, null]], "jax.numpy.place": [[882, null]], "jax.numpy.poly": [[883, null]], "jax.numpy.polyadd": [[884, null]], "jax.numpy.polyder": [[885, null]], "jax.numpy.polydiv": [[886, null]], "jax.numpy.polyfit": [[887, null]], "jax.numpy.polyint": [[888, null]], "jax.numpy.polymul": [[889, null]], "jax.numpy.polysub": [[890, null]], "jax.numpy.polyval": [[891, null]], "jax.numpy.positive": [[892, null]], "jax.numpy.pow": [[893, null]], "jax.numpy.power": [[894, null]], "jax.numpy.printoptions": [[895, null]], "jax.numpy.prod": [[896, null]], "jax.numpy.promote_types": [[897, null]], "jax.numpy.ptp": [[898, null]], "jax.numpy.put": [[899, null]], "jax.numpy.put_along_axis": [[900, null]], "jax.numpy.quantile": [[901, null]], "jax.numpy.r_": [[902, null]], "jax.numpy.rad2deg": [[903, null]], "jax.numpy.radians": [[904, null]], "jax.numpy.ravel": [[905, null]], "jax.numpy.ravel_multi_index": [[906, null]], "jax.numpy.real": [[907, null]], "jax.numpy.reciprocal": [[908, null]], "jax.numpy.remainder": [[909, null]], "jax.numpy.repeat": [[910, null]], "jax.numpy.reshape": [[911, null]], "jax.numpy.resize": [[912, null]], "jax.numpy.result_type": [[913, null]], "jax.numpy.right_shift": [[914, null]], "jax.numpy.rint": [[915, null]], "jax.numpy.roll": [[916, null]], "jax.numpy.rollaxis": [[917, null]], "jax.numpy.roots": [[918, null]], "jax.numpy.rot90": [[919, null]], "jax.numpy.round": [[920, null]], "jax.numpy.s_": [[921, null]], "jax.numpy.save": [[922, null]], "jax.numpy.savez": [[923, null]], "jax.numpy.searchsorted": [[924, null]], "jax.numpy.select": [[925, null]], "jax.numpy.set_printoptions": [[926, null]], "jax.numpy.setdiff1d": [[927, null]], "jax.numpy.setxor1d": [[928, null]], "jax.numpy.shape": [[929, null]], "jax.numpy.sign": [[930, null]], "jax.numpy.signbit": [[931, null]], "jax.numpy.signedinteger": [[932, null]], "jax.numpy.sin": [[933, null]], "jax.numpy.sinc": [[934, null]], "jax.numpy.single": [[935, null]], "jax.numpy.sinh": [[936, null]], "jax.numpy.size": [[937, null]], "jax.numpy.sort": [[938, null]], "jax.numpy.sort_complex": [[939, null]], "jax.numpy.spacing": [[940, null]], "jax.numpy.split": [[941, null]], "jax.numpy.sqrt": [[942, null]], "jax.numpy.square": [[943, null]], "jax.numpy.squeeze": [[944, null]], "jax.numpy.stack": [[945, null]], "jax.numpy.std": [[946, null]], "jax.numpy.subtract": [[947, null]], "jax.numpy.sum": [[948, null]], "jax.numpy.swapaxes": [[949, null]], "jax.numpy.take": [[950, null]], "jax.numpy.take_along_axis": [[951, null]], "jax.numpy.tan": [[952, null]], "jax.numpy.tanh": [[953, null]], "jax.numpy.tensordot": [[954, null]], "jax.numpy.tile": [[955, null]], "jax.numpy.trace": [[956, null]], "jax.numpy.transpose": [[957, null]], "jax.numpy.trapezoid": [[958, null]], "jax.numpy.tri": [[959, null]], "jax.numpy.tril": [[960, null]], "jax.numpy.tril_indices": [[961, null]], "jax.numpy.tril_indices_from": [[962, null]], "jax.numpy.trim_zeros": [[963, null]], "jax.numpy.triu": [[964, null]], "jax.numpy.triu_indices": [[965, null]], "jax.numpy.triu_indices_from": [[966, null]], "jax.numpy.true_divide": [[967, null]], "jax.numpy.trunc": [[968, null]], "jax.numpy.ufunc": [[969, null]], "jax.numpy.uint": [[970, null]], "jax.numpy.uint16": [[971, null]], "jax.numpy.uint32": [[972, null]], "jax.numpy.uint64": [[973, null]], "jax.numpy.uint8": [[974, null]], "jax.numpy.union1d": [[975, null]], "jax.numpy.unique": [[976, null]], "jax.numpy.unique_all": [[977, null]], "jax.numpy.unique_counts": [[978, null]], "jax.numpy.unique_inverse": [[979, null]], "jax.numpy.unique_values": [[980, null]], "jax.numpy.unpackbits": [[981, null]], "jax.numpy.unravel_index": [[982, null]], "jax.numpy.unsignedinteger": [[983, null]], "jax.numpy.unstack": [[984, null]], "jax.numpy.unwrap": [[985, null]], "jax.numpy.vander": [[986, null]], "jax.numpy.var": [[987, null]], "jax.numpy.vdot": [[988, null]], "jax.numpy.vecdot": [[989, null]], "jax.numpy.vecmat": [[990, null]], "jax.numpy.vectorize": [[991, null]], "jax.numpy.vsplit": [[992, null]], "jax.numpy.vstack": [[993, null]], "jax.numpy.where": [[994, null]], "jax.numpy.zeros": [[995, null]], "jax.numpy.zeros_like": [[996, null]], "jax.numpy_rank_promotion": [[997, null]], "jax.ops module": [[1429, null]], "jax.ops.segment_max": [[998, null]], "jax.ops.segment_min": [[999, null]], "jax.ops.segment_prod": [[1000, null]], "jax.ops.segment_sum": [[1001, null]], "jax.pmap": [[1002, null]], "jax.print_environment_info": [[1003, null]], "jax.process_count": [[1004, null]], "jax.process_index": [[1005, null]], "jax.process_indices": [[1006, null]], "jax.profiler module": [[1430, null]], "jax.profiler.StepTraceAnnotation": [[1007, null]], "jax.profiler.TraceAnnotation": [[1008, null]], "jax.profiler.annotate_function": [[1009, null]], "jax.profiler.device_memory_profile": [[1010, null]], "jax.profiler.save_device_memory_profile": [[1011, null]], "jax.profiler.start_server": [[1012, null]], "jax.profiler.start_trace": [[1013, null]], "jax.profiler.stop_trace": [[1014, null]], "jax.profiler.trace": [[1015, null]], "jax.pure_callback": [[1016, null]], "jax.random module": [[1431, null]], "jax.random.PRNGKey": [[1017, null]], "jax.random.ball": [[1018, null]], "jax.random.bernoulli": [[1019, null]], "jax.random.beta": [[1020, null]], "jax.random.binomial": [[1021, null]], "jax.random.bits": [[1022, null]], "jax.random.categorical": [[1023, null]], "jax.random.cauchy": [[1024, null]], "jax.random.chisquare": [[1025, null]], "jax.random.choice": [[1026, null]], "jax.random.clone": [[1027, null]], "jax.random.dirichlet": [[1028, null]], "jax.random.double_sided_maxwell": [[1029, null]], "jax.random.exponential": [[1030, null]], "jax.random.f": [[1031, null]], "jax.random.fold_in": [[1032, null]], "jax.random.gamma": [[1033, null]], "jax.random.generalized_normal": [[1034, null]], "jax.random.geometric": [[1035, null]], "jax.random.gumbel": [[1036, null]], "jax.random.key": [[1037, null]], "jax.random.key_data": [[1038, null]], "jax.random.laplace": [[1039, null]], "jax.random.loggamma": [[1040, null]], "jax.random.logistic": [[1041, null]], "jax.random.lognormal": [[1042, null]], "jax.random.maxwell": [[1043, null]], "jax.random.multinomial": [[1044, null]], "jax.random.multivariate_normal": [[1045, null]], "jax.random.normal": [[1046, null]], "jax.random.orthogonal": [[1047, null]], "jax.random.pareto": [[1048, null]], "jax.random.permutation": [[1049, null]], "jax.random.poisson": [[1050, null]], "jax.random.rademacher": [[1051, null]], "jax.random.randint": [[1052, null]], "jax.random.rayleigh": [[1053, null]], "jax.random.split": [[1054, null]], "jax.random.t": [[1055, null]], "jax.random.triangular": [[1056, null]], "jax.random.truncated_normal": [[1057, null]], "jax.random.uniform": [[1058, null]], "jax.random.wald": [[1059, null]], "jax.random.weibull_min": [[1060, null]], "jax.random.wrap_key_data": [[1061, null]], "jax.ref module": [[1432, null]], "jax.ref.AbstractRef": [[1062, null]], "jax.ref.ArrayRef": [[1063, null]], "jax.ref.addupdate": [[1064, null]], "jax.ref.array_ref": [[1065, null]], "jax.ref.freeze": [[1066, null]], "jax.ref.get": [[1067, null]], "jax.ref.set": [[1068, null]], "jax.ref.swap": [[1069, null]], "jax.remat / jax.checkpoint changes: what you need to know": [[1443, null]], "jax.scipy module": [[1433, null]], "jax.scipy.cluster": [[1433, "module-jax.scipy.cluster.vq"]], "jax.scipy.cluster.vq.vq": [[1070, null]], "jax.scipy.fft": [[1433, "module-jax.scipy.fft"]], "jax.scipy.fft.dct": [[1071, null]], "jax.scipy.fft.dctn": [[1072, null]], "jax.scipy.fft.idct": [[1073, null]], "jax.scipy.fft.idctn": [[1074, null]], "jax.scipy.integrate": [[1433, "module-jax.scipy.integrate"]], "jax.scipy.integrate.trapezoid": [[1075, null]], "jax.scipy.interpolate": [[1433, "module-jax.scipy.interpolate"]], "jax.scipy.interpolate.RegularGridInterpolator": [[1076, null]], "jax.scipy.linalg": [[1433, "module-jax.scipy.linalg"]], "jax.scipy.linalg.block_diag": [[1077, null]], "jax.scipy.linalg.cho_factor": [[1078, null]], "jax.scipy.linalg.cho_solve": [[1079, null]], "jax.scipy.linalg.cholesky": [[1080, null]], "jax.scipy.linalg.det": [[1081, null]], "jax.scipy.linalg.eigh": [[1082, null]], "jax.scipy.linalg.eigh_tridiagonal": [[1083, null]], "jax.scipy.linalg.expm": [[1084, null]], "jax.scipy.linalg.expm_frechet": [[1085, null]], "jax.scipy.linalg.funm": [[1086, null]], "jax.scipy.linalg.hessenberg": [[1087, null]], "jax.scipy.linalg.hilbert": [[1088, null]], "jax.scipy.linalg.inv": [[1089, null]], "jax.scipy.linalg.lu": [[1090, null]], "jax.scipy.linalg.lu_factor": [[1091, null]], "jax.scipy.linalg.lu_solve": [[1092, null]], "jax.scipy.linalg.pascal": [[1093, null]], "jax.scipy.linalg.polar": [[1094, null]], "jax.scipy.linalg.qr": [[1095, null]], "jax.scipy.linalg.rsf2csf": [[1096, null]], "jax.scipy.linalg.schur": [[1097, null]], "jax.scipy.linalg.solve": [[1098, null]], "jax.scipy.linalg.solve_triangular": [[1099, null]], "jax.scipy.linalg.sqrtm": [[1100, null]], "jax.scipy.linalg.svd": [[1101, null]], "jax.scipy.linalg.toeplitz": [[1102, null]], "jax.scipy.ndimage": [[1433, "module-jax.scipy.ndimage"]], "jax.scipy.ndimage.map_coordinates": [[1103, null]], "jax.scipy.optimize": [[1433, "module-jax.scipy.optimize"]], "jax.scipy.optimize.OptimizeResults": [[1104, null]], "jax.scipy.optimize.minimize": [[1105, null]], "jax.scipy.signal": [[1433, "module-jax.scipy.signal"]], "jax.scipy.signal.convolve": [[1106, null]], "jax.scipy.signal.convolve2d": [[1107, null]], "jax.scipy.signal.correlate": [[1108, null]], "jax.scipy.signal.correlate2d": [[1109, null]], "jax.scipy.signal.csd": [[1110, null]], "jax.scipy.signal.detrend": [[1111, null]], "jax.scipy.signal.fftconvolve": [[1112, null]], "jax.scipy.signal.istft": [[1113, null]], "jax.scipy.signal.stft": [[1114, null]], "jax.scipy.signal.welch": [[1115, null]], "jax.scipy.sparse.linalg": [[1433, "module-jax.scipy.sparse.linalg"]], "jax.scipy.sparse.linalg.bicgstab": [[1116, null]], "jax.scipy.sparse.linalg.cg": [[1117, null]], "jax.scipy.sparse.linalg.gmres": [[1118, null]], "jax.scipy.spatial.transform": [[1433, "module-jax.scipy.spatial.transform"]], "jax.scipy.spatial.transform.Rotation": [[1119, null]], "jax.scipy.spatial.transform.Slerp": [[1120, null]], "jax.scipy.special": [[1433, "module-jax.scipy.special"]], "jax.scipy.special.bernoulli": [[1121, null]], "jax.scipy.special.beta": [[1122, null]], "jax.scipy.special.betainc": [[1123, null]], "jax.scipy.special.betaln": [[1124, null]], "jax.scipy.special.digamma": [[1125, null]], "jax.scipy.special.entr": [[1126, null]], "jax.scipy.special.erf": [[1127, null]], "jax.scipy.special.erfc": [[1128, null]], "jax.scipy.special.erfinv": [[1129, null]], "jax.scipy.special.exp1": [[1130, null]], "jax.scipy.special.expi": [[1131, null]], "jax.scipy.special.expit": [[1132, null]], "jax.scipy.special.expn": [[1133, null]], "jax.scipy.special.factorial": [[1134, null]], "jax.scipy.special.fresnel": [[1135, null]], "jax.scipy.special.gamma": [[1136, null]], "jax.scipy.special.gammainc": [[1137, null]], "jax.scipy.special.gammaincc": [[1138, null]], "jax.scipy.special.gammaln": [[1139, null]], "jax.scipy.special.gammasgn": [[1140, null]], "jax.scipy.special.hyp1f1": [[1141, null]], "jax.scipy.special.hyp2f1": [[1142, null]], "jax.scipy.special.i0": [[1143, null]], "jax.scipy.special.i0e": [[1144, null]], "jax.scipy.special.i1": [[1145, null]], "jax.scipy.special.i1e": [[1146, null]], "jax.scipy.special.kl_div": [[1147, null]], "jax.scipy.special.log_ndtr": [[1148, null]], "jax.scipy.special.log_softmax": [[1149, null]], "jax.scipy.special.logit": [[1150, null]], "jax.scipy.special.logsumexp": [[1151, null]], "jax.scipy.special.lpmn": [[1152, null]], "jax.scipy.special.lpmn_values": [[1153, null]], "jax.scipy.special.multigammaln": [[1154, null]], "jax.scipy.special.ndtr": [[1155, null]], "jax.scipy.special.ndtri": [[1156, null]], "jax.scipy.special.poch": [[1157, null]], "jax.scipy.special.polygamma": [[1158, null]], "jax.scipy.special.rel_entr": [[1159, null]], "jax.scipy.special.softmax": [[1160, null]], "jax.scipy.special.spence": [[1161, null]], "jax.scipy.special.sph_harm": [[1162, null]], "jax.scipy.special.xlog1py": [[1163, null]], "jax.scipy.special.xlogy": [[1164, null]], "jax.scipy.special.zeta": [[1165, null]], "jax.scipy.stats": [[1433, "module-jax.scipy.stats"]], "jax.scipy.stats.bernoulli": [[1433, "module-jax.scipy.stats.bernoulli"]], "jax.scipy.stats.bernoulli.cdf": [[1166, null]], "jax.scipy.stats.bernoulli.logpmf": [[1167, null]], "jax.scipy.stats.bernoulli.pmf": [[1168, null]], "jax.scipy.stats.bernoulli.ppf": [[1169, null]], "jax.scipy.stats.beta": [[1433, "module-jax.scipy.stats.beta"]], "jax.scipy.stats.beta.cdf": [[1170, null]], "jax.scipy.stats.beta.logcdf": [[1171, null]], "jax.scipy.stats.beta.logpdf": [[1172, null]], "jax.scipy.stats.beta.logsf": [[1173, null]], "jax.scipy.stats.beta.pdf": [[1174, null]], "jax.scipy.stats.beta.sf": [[1175, null]], "jax.scipy.stats.betabinom": [[1433, "module-jax.scipy.stats.betabinom"]], "jax.scipy.stats.betabinom.logpmf": [[1176, null]], "jax.scipy.stats.betabinom.pmf": [[1177, null]], "jax.scipy.stats.binom": [[1433, "module-jax.scipy.stats.binom"]], "jax.scipy.stats.binom.logpmf": [[1178, null]], "jax.scipy.stats.binom.pmf": [[1179, null]], "jax.scipy.stats.cauchy": [[1433, "module-jax.scipy.stats.cauchy"]], "jax.scipy.stats.cauchy.cdf": [[1180, null]], "jax.scipy.stats.cauchy.isf": [[1181, null]], "jax.scipy.stats.cauchy.logcdf": [[1182, null]], "jax.scipy.stats.cauchy.logpdf": [[1183, null]], "jax.scipy.stats.cauchy.logsf": [[1184, null]], "jax.scipy.stats.cauchy.pdf": [[1185, null]], "jax.scipy.stats.cauchy.ppf": [[1186, null]], "jax.scipy.stats.cauchy.sf": [[1187, null]], "jax.scipy.stats.chi2": [[1433, "module-jax.scipy.stats.chi2"]], "jax.scipy.stats.chi2.cdf": [[1188, null]], "jax.scipy.stats.chi2.logcdf": [[1189, null]], "jax.scipy.stats.chi2.logpdf": [[1190, null]], "jax.scipy.stats.chi2.logsf": [[1191, null]], "jax.scipy.stats.chi2.pdf": [[1192, null]], "jax.scipy.stats.chi2.sf": [[1193, null]], "jax.scipy.stats.dirichlet": [[1433, "module-jax.scipy.stats.dirichlet"]], "jax.scipy.stats.dirichlet.logpdf": [[1194, null]], "jax.scipy.stats.dirichlet.pdf": [[1195, null]], "jax.scipy.stats.expon": [[1433, "module-jax.scipy.stats.expon"]], "jax.scipy.stats.expon.cdf": [[1196, null]], "jax.scipy.stats.expon.logcdf": [[1197, null]], "jax.scipy.stats.expon.logpdf": [[1198, null]], "jax.scipy.stats.expon.logsf": [[1199, null]], "jax.scipy.stats.expon.pdf": [[1200, null]], "jax.scipy.stats.expon.ppf": [[1201, null]], "jax.scipy.stats.expon.sf": [[1202, null]], "jax.scipy.stats.gamma": [[1433, "module-jax.scipy.stats.gamma"]], "jax.scipy.stats.gamma.cdf": [[1203, null]], "jax.scipy.stats.gamma.logcdf": [[1204, null]], "jax.scipy.stats.gamma.logpdf": [[1205, null]], "jax.scipy.stats.gamma.logsf": [[1206, null]], "jax.scipy.stats.gamma.pdf": [[1207, null]], "jax.scipy.stats.gamma.sf": [[1208, null]], "jax.scipy.stats.gaussian_kde": [[1209, null], [1433, "jax-scipy-stats-gaussian-kde"]], "jax.scipy.stats.gaussian_kde.evaluate": [[1210, null]], "jax.scipy.stats.gaussian_kde.integrate_box_1d": [[1211, null]], "jax.scipy.stats.gaussian_kde.integrate_gaussian": [[1212, null]], "jax.scipy.stats.gaussian_kde.integrate_kde": [[1213, null]], "jax.scipy.stats.gaussian_kde.logpdf": [[1214, null]], "jax.scipy.stats.gaussian_kde.pdf": [[1215, null]], "jax.scipy.stats.gaussian_kde.resample": [[1216, null]], "jax.scipy.stats.gennorm": [[1433, "module-jax.scipy.stats.gennorm"]], "jax.scipy.stats.gennorm.cdf": [[1217, null]], "jax.scipy.stats.gennorm.logpdf": [[1218, null]], "jax.scipy.stats.gennorm.pdf": [[1219, null]], "jax.scipy.stats.geom": [[1433, "module-jax.scipy.stats.geom"]], "jax.scipy.stats.geom.logpmf": [[1220, null]], "jax.scipy.stats.geom.pmf": [[1221, null]], "jax.scipy.stats.gumbel_l": [[1433, "module-jax.scipy.stats.gumbel_l"]], "jax.scipy.stats.gumbel_l.cdf": [[1222, null]], "jax.scipy.stats.gumbel_l.logcdf": [[1223, null]], "jax.scipy.stats.gumbel_l.logpdf": [[1224, null]], "jax.scipy.stats.gumbel_l.logsf": [[1225, null]], "jax.scipy.stats.gumbel_l.pdf": [[1226, null]], "jax.scipy.stats.gumbel_l.ppf": [[1227, null]], "jax.scipy.stats.gumbel_l.sf": [[1228, null]], "jax.scipy.stats.gumbel_r": [[1433, "module-jax.scipy.stats.gumbel_r"]], "jax.scipy.stats.gumbel_r.cdf": [[1229, null]], "jax.scipy.stats.gumbel_r.logcdf": [[1230, null]], "jax.scipy.stats.gumbel_r.logpdf": [[1231, null]], "jax.scipy.stats.gumbel_r.logsf": [[1232, null]], "jax.scipy.stats.gumbel_r.pdf": [[1233, null]], "jax.scipy.stats.gumbel_r.ppf": [[1234, null]], "jax.scipy.stats.gumbel_r.sf": [[1235, null]], "jax.scipy.stats.laplace": [[1433, "module-jax.scipy.stats.laplace"]], "jax.scipy.stats.laplace.cdf": [[1236, null]], "jax.scipy.stats.laplace.logpdf": [[1237, null]], "jax.scipy.stats.laplace.pdf": [[1238, null]], "jax.scipy.stats.logistic": [[1433, "module-jax.scipy.stats.logistic"]], "jax.scipy.stats.logistic.cdf": [[1239, null]], "jax.scipy.stats.logistic.isf": [[1240, null]], "jax.scipy.stats.logistic.logpdf": [[1241, null]], "jax.scipy.stats.logistic.pdf": [[1242, null]], "jax.scipy.stats.logistic.ppf": [[1243, null]], "jax.scipy.stats.logistic.sf": [[1244, null]], "jax.scipy.stats.mode": [[1245, null]], "jax.scipy.stats.multinomial": [[1433, "module-jax.scipy.stats.multinomial"]], "jax.scipy.stats.multinomial.logpmf": [[1246, null]], "jax.scipy.stats.multinomial.pmf": [[1247, null]], "jax.scipy.stats.multivariate_normal": [[1433, "module-jax.scipy.stats.multivariate_normal"]], "jax.scipy.stats.multivariate_normal.logpdf": [[1248, null]], "jax.scipy.stats.multivariate_normal.pdf": [[1249, null]], "jax.scipy.stats.nbinom": [[1433, "module-jax.scipy.stats.nbinom"]], "jax.scipy.stats.nbinom.logpmf": [[1250, null]], "jax.scipy.stats.nbinom.pmf": [[1251, null]], "jax.scipy.stats.norm": [[1433, "module-jax.scipy.stats.norm"]], "jax.scipy.stats.norm.cdf": [[1252, null]], "jax.scipy.stats.norm.isf": [[1253, null]], "jax.scipy.stats.norm.logcdf": [[1254, null]], "jax.scipy.stats.norm.logpdf": [[1255, null]], "jax.scipy.stats.norm.logsf": [[1256, null]], "jax.scipy.stats.norm.pdf": [[1257, null]], "jax.scipy.stats.norm.ppf": [[1258, null]], "jax.scipy.stats.norm.sf": [[1259, null]], "jax.scipy.stats.pareto": [[1433, "module-jax.scipy.stats.pareto"]], "jax.scipy.stats.pareto.logpdf": [[1260, null]], "jax.scipy.stats.pareto.pdf": [[1261, null]], "jax.scipy.stats.poisson": [[1433, "module-jax.scipy.stats.poisson"]], "jax.scipy.stats.poisson.cdf": [[1262, null]], "jax.scipy.stats.poisson.logpmf": [[1263, null]], "jax.scipy.stats.poisson.pmf": [[1264, null]], "jax.scipy.stats.rankdata": [[1265, null]], "jax.scipy.stats.sem": [[1266, null]], "jax.scipy.stats.t": [[1433, "module-jax.scipy.stats.t"]], "jax.scipy.stats.t.logpdf": [[1267, null]], "jax.scipy.stats.t.pdf": [[1268, null]], "jax.scipy.stats.truncnorm": [[1433, "module-jax.scipy.stats.truncnorm"]], "jax.scipy.stats.truncnorm.cdf": [[1269, null]], "jax.scipy.stats.truncnorm.logcdf": [[1270, null]], "jax.scipy.stats.truncnorm.logpdf": [[1271, null]], "jax.scipy.stats.truncnorm.logsf": [[1272, null]], "jax.scipy.stats.truncnorm.pdf": [[1273, null]], "jax.scipy.stats.truncnorm.sf": [[1274, null]], "jax.scipy.stats.uniform": [[1433, "module-jax.scipy.stats.uniform"]], "jax.scipy.stats.uniform.cdf": [[1275, null]], "jax.scipy.stats.uniform.logpdf": [[1276, null]], "jax.scipy.stats.uniform.pdf": [[1277, null]], "jax.scipy.stats.uniform.ppf": [[1278, null]], "jax.scipy.stats.vonmises": [[1433, "module-jax.scipy.stats.vonmises"]], "jax.scipy.stats.vonmises.logpdf": [[1279, null]], "jax.scipy.stats.vonmises.pdf": [[1280, null]], "jax.scipy.stats.wrapcauchy": [[1433, "module-jax.scipy.stats.wrapcauchy"]], "jax.scipy.stats.wrapcauchy.logpdf": [[1281, null]], "jax.scipy.stats.wrapcauchy.pdf": [[1282, null]], "jax.shard_map": [[1283, null]], "jax.sharding module": [[1434, null]], "jax.smap": [[1284, null]], "jax.stages module": [[1435, null]], "jax.test_util module": [[1436, null]], "jax.test_util.check_grads": [[1285, null]], "jax.test_util.check_jvp": [[1286, null]], "jax.test_util.check_vjp": [[1287, null]], "jax.transfer_guard": [[1288, null]], "jax.tree module": [[1437, null]], "jax.tree.all": [[1289, null]], "jax.tree.broadcast": [[1290, null]], "jax.tree.flatten": [[1291, null]], "jax.tree.flatten_with_path": [[1292, null]], "jax.tree.leaves": [[1293, null]], "jax.tree.leaves_with_path": [[1294, null]], "jax.tree.map": [[1295, null]], "jax.tree.map_with_path": [[1296, null]], "jax.tree.reduce": [[1297, null]], "jax.tree.reduce_associative": [[1298, null]], "jax.tree.structure": [[1299, null]], "jax.tree.transpose": [[1300, null]], "jax.tree.unflatten": [[1301, null]], "jax.tree_util module": [[1438, null]], "jax.tree_util.KeyEntry": [[1302, null]], "jax.tree_util.KeyPath": [[1303, null]], "jax.tree_util.Partial": [[1304, null]], "jax.tree_util.all_leaves": [[1305, null]], "jax.tree_util.keystr": [[1306, null]], "jax.tree_util.register_dataclass": [[1307, null]], "jax.tree_util.register_pytree_node": [[1308, null]], "jax.tree_util.register_pytree_node_class": [[1309, null]], "jax.tree_util.register_pytree_with_keys": [[1310, null]], "jax.tree_util.register_pytree_with_keys_class": [[1311, null]], "jax.tree_util.register_static": [[1312, null]], "jax.tree_util.tree_all": [[1313, null]], "jax.tree_util.tree_broadcast": [[1314, null]], "jax.tree_util.tree_flatten": [[1315, null]], "jax.tree_util.tree_flatten_with_path": [[1316, null]], "jax.tree_util.tree_leaves": [[1317, null]], "jax.tree_util.tree_leaves_with_path": [[1318, null]], "jax.tree_util.tree_map": [[1319, null]], "jax.tree_util.tree_map_with_path": [[1320, null]], "jax.tree_util.tree_reduce": [[1321, null]], "jax.tree_util.tree_reduce_associative": [[1322, null]], "jax.tree_util.tree_structure": [[1323, null]], "jax.tree_util.tree_transpose": [[1324, null]], "jax.tree_util.tree_unflatten": [[1325, null]], "jax.tree_util.treedef_children": [[1326, null]], "jax.tree_util.treedef_is_leaf": [[1327, null]], "jax.tree_util.treedef_tuple": [[1328, null]], "jax.typing module": [[1439, null]], "jax.typing.ArrayLike": [[1329, null]], "jax.typing.DTypeLike": [[1330, null]], "jax.value_and_grad": [[1331, null]], "jax.vjp": [[1332, null]], "jax.vmap": [[1333, null]], "jax_debug_nans configuration option and context manager": [[1362, "jax-debug-nans-configuration-option-and-context-manager"]], "jax_disable_jit configuration option and context manager": [[1362, "jax-disable-jit-configuration-option-and-context-manager"]], "jaxlib": [[1345, "jaxlib"]], "jaxlib 0.1.38 (January 29, 2020)": [[1354, "jaxlib-0-1-38-january-29-2020"]], "jaxlib 0.1.39 (February 11, 2020)": [[1354, "jaxlib-0-1-39-february-11-2020"]], "jaxlib 0.1.40 (March 4, 2020)": [[1354, "jaxlib-0-1-40-march-4-2020"]], "jaxlib 0.1.42 (March 19, 2020)": [[1354, "jaxlib-0-1-42-march-19-2020"]], "jaxlib 0.1.43 (March 31, 2020)": [[1354, "jaxlib-0-1-43-march-31-2020"]], "jaxlib 0.1.44 (April 16, 2020)": [[1354, "jaxlib-0-1-44-april-16-2020"]], "jaxlib 0.1.45 (April 21, 2020)": [[1354, "jaxlib-0-1-45-april-21-2020"]], "jaxlib 0.1.46 (May 5, 2020)": [[1354, "jaxlib-0-1-46-may-5-2020"]], "jaxlib 0.1.47 (May 8, 2020)": [[1354, "jaxlib-0-1-47-may-8-2020"]], "jaxlib 0.1.48 (June 12, 2020)": [[1354, "jaxlib-0-1-48-june-12-2020"]], "jaxlib 0.1.49 (June 19, 2020)": [[1354, "jaxlib-0-1-49-june-19-2020"]], "jaxlib 0.1.50 (June 25, 2020)": [[1354, "jaxlib-0-1-50-june-25-2020"]], "jaxlib 0.1.51 (July 2, 2020)": [[1354, "jaxlib-0-1-51-july-2-2020"]], "jaxlib 0.1.52 (July 22, 2020)": [[1354, "jaxlib-0-1-52-july-22-2020"]], "jaxlib 0.1.55 (September 8, 2020)": [[1354, "jaxlib-0-1-55-september-8-2020"]], "jaxlib 0.1.56 (October 14, 2020)": [[1354, "jaxlib-0-1-56-october-14-2020"]], "jaxlib 0.1.57 (November 12 2020)": [[1354, "jaxlib-0-1-57-november-12-2020"]], "jaxlib 0.1.58 (January 12ish 2021)": [[1354, "jaxlib-0-1-58-january-12ish-2021"]], "jaxlib 0.1.59 (January 15 2021)": [[1354, "jaxlib-0-1-59-january-15-2021"]], "jaxlib 0.1.60 (February 3 2021)": [[1354, "jaxlib-0-1-60-february-3-2021"]], "jaxlib 0.1.61 (February 12 2021)": [[1354, "jaxlib-0-1-61-february-12-2021"]], "jaxlib 0.1.62 (March 9 2021)": [[1354, "jaxlib-0-1-62-march-9-2021"]], "jaxlib 0.1.63 (March 17 2021)": [[1354, "jaxlib-0-1-63-march-17-2021"]], "jaxlib 0.1.64 (March 18 2021)": [[1354, "jaxlib-0-1-64-march-18-2021"]], "jaxlib 0.1.65 (April 7 2021)": [[1354, "jaxlib-0-1-65-april-7-2021"]], "jaxlib 0.1.66 (May 11 2021)": [[1354, "jaxlib-0-1-66-may-11-2021"]], "jaxlib 0.1.67 (May 17 2021)": [[1354, "jaxlib-0-1-67-may-17-2021"]], "jaxlib 0.1.68 (June 23 2021)": [[1354, "jaxlib-0-1-68-june-23-2021"]], "jaxlib 0.1.69 (July 9 2021)": [[1354, "jaxlib-0-1-69-july-9-2021"]], "jaxlib 0.1.70 (Aug 9, 2021)": [[1354, "jaxlib-0-1-70-aug-9-2021"]], "jaxlib 0.1.71 (Sep 1, 2021)": [[1354, "jaxlib-0-1-71-sep-1-2021"]], "jaxlib 0.1.72 (Oct 12, 2021)": [[1354, "jaxlib-0-1-72-oct-12-2021"]], "jaxlib 0.1.73 (Oct 18, 2021)": [[1354, "jaxlib-0-1-73-oct-18-2021"]], "jaxlib 0.1.74 (Nov 17, 2021)": [[1354, "jaxlib-0-1-74-nov-17-2021"]], "jaxlib 0.1.75 (Dec 8, 2021)": [[1354, "jaxlib-0-1-75-dec-8-2021"]], "jaxlib 0.1.76 (Jan 27, 2022)": [[1354, "jaxlib-0-1-76-jan-27-2022"]], "jaxlib 0.3.0 (Feb 10, 2022)": [[1354, "jaxlib-0-3-0-feb-10-2022"]], "jaxlib 0.3.10 (May 3, 2022)": [[1354, "jaxlib-0-3-10-may-3-2022"]], "jaxlib 0.3.14 (June 27, 2022)": [[1354, "jaxlib-0-3-14-june-27-2022"]], "jaxlib 0.3.15 (July 22, 2022)": [[1354, "jaxlib-0-3-15-july-22-2022"]], "jaxlib 0.3.2 (March 16, 2022)": [[1354, "jaxlib-0-3-2-march-16-2022"]], "jaxlib 0.3.20 (Sep 28, 2022)": [[1354, "jaxlib-0-3-20-sep-28-2022"]], "jaxlib 0.3.22 (Oct 11, 2022)": [[1354, "jaxlib-0-3-22-oct-11-2022"]], "jaxlib 0.3.24 (Nov 4, 2022)": [[1354, "jaxlib-0-3-24-nov-4-2022"]], "jaxlib 0.3.25 (Nov 15, 2022)": [[1354, "jaxlib-0-3-25-nov-15-2022"]], "jaxlib 0.3.5 (April 7, 2022)": [[1354, "jaxlib-0-3-5-april-7-2022"]], "jaxlib 0.3.7 (April 15, 2022)": [[1354, "jaxlib-0-3-7-april-15-2022"]], "jaxlib 0.4.0 (Dec 12, 2022)": [[1354, "jaxlib-0-4-0-dec-12-2022"]], "jaxlib 0.4.1 (Dec 13, 2022)": [[1354, "jaxlib-0-4-1-dec-13-2022"]], "jaxlib 0.4.10 (May 11, 2023)": [[1354, "jaxlib-0-4-10-may-11-2023"]], "jaxlib 0.4.11 (May 31, 2023)": [[1354, "jaxlib-0-4-11-may-31-2023"]], "jaxlib 0.4.12 (June 8, 2023)": [[1354, "jaxlib-0-4-12-june-8-2023"]], "jaxlib 0.4.13 (June 22, 2023)": [[1354, "jaxlib-0-4-13-june-22-2023"]], "jaxlib 0.4.14 (July 27, 2023)": [[1354, "jaxlib-0-4-14-july-27-2023"]], "jaxlib 0.4.16 (Sept 18, 2023)": [[1354, "jaxlib-0-4-16-sept-18-2023"]], "jaxlib 0.4.17 (Oct 3, 2023)": [[1354, "jaxlib-0-4-17-oct-3-2023"]], "jaxlib 0.4.18 (Oct 6, 2023)": [[1354, "jaxlib-0-4-18-oct-6-2023"]], "jaxlib 0.4.19 (Oct 19, 2023)": [[1354, "jaxlib-0-4-19-oct-19-2023"]], "jaxlib 0.4.2 (Jan 24, 2023)": [[1354, "jaxlib-0-4-2-jan-24-2023"]], "jaxlib 0.4.20 (Nov 2, 2023)": [[1354, "jaxlib-0-4-20-nov-2-2023"]], "jaxlib 0.4.21 (Dec 4 2023)": [[1354, "jaxlib-0-4-21-dec-4-2023"]], "jaxlib 0.4.22 (Dec 13, 2023)": [[1354, "jaxlib-0-4-22-dec-13-2023"]], "jaxlib 0.4.23 (Dec 13, 2023)": [[1354, "jaxlib-0-4-23-dec-13-2023"]], "jaxlib 0.4.24 (Feb 6, 2024)": [[1354, "jaxlib-0-4-24-feb-6-2024"]], "jaxlib 0.4.25 (Feb 26, 2024)": [[1354, "jaxlib-0-4-25-feb-26-2024"]], "jaxlib 0.4.26 (April 3, 2024)": [[1354, "jaxlib-0-4-26-april-3-2024"]], "jaxlib 0.4.27 (May 7, 2024)": [[1354, "jaxlib-0-4-27-may-7-2024"]], "jaxlib 0.4.28 (May 9, 2024)": [[1354, "jaxlib-0-4-28-may-9-2024"]], "jaxlib 0.4.29 (June 10, 2024)": [[1354, "jaxlib-0-4-29-june-10-2024"]], "jaxlib 0.4.3 (Feb 8, 2023)": [[1354, "jaxlib-0-4-3-feb-8-2023"]], "jaxlib 0.4.30 (June 18, 2024)": [[1354, "jaxlib-0-4-30-june-18-2024"]], "jaxlib 0.4.31 (July 29, 2024)": [[1354, "jaxlib-0-4-31-july-29-2024"]], "jaxlib 0.4.32 (September 11, 2024)": [[1354, "jaxlib-0-4-32-september-11-2024"]], "jaxlib 0.4.4 (Feb 16, 2023)": [[1354, "jaxlib-0-4-4-feb-16-2023"]], "jaxlib 0.4.6 (Mar 9, 2023)": [[1354, "jaxlib-0-4-6-mar-9-2023"]], "jaxlib 0.4.7 (March 27, 2023)": [[1354, "jaxlib-0-4-7-march-27-2023"]], "jaxlib 0.4.9 (May 9, 2023)": [[1354, "jaxlib-0-4-9-may-9-2023"]], "jaxlib.xla_client.register_custom_call_target": [[1334, null]], "jit": [[1361, "jit"]], "jit changes the behavior of my function": [[1377, "jit-changes-the-behavior-of-my-function"]], "jit changes the exact numerics of outputs": [[1377, "jit-changes-the-exact-numerics-of-outputs"]], "jit decorated function is very slow to compile": [[1377, "jit-decorated-function-is-very-slow-to-compile"]], "lax.conv and lax.conv_with_general_padding": [[1469, "lax-conv-and-lax-conv-with-general-padding"]], "linearize": [[1348, "linearize"]], "live_buffers replaced with live_arrays": [[1440, "live-buffers-replaced-with-live-arrays"]], "pallas.load and pallas.store": [[1480, "pallas-load-and-pallas-store"]], "pallas.program_id and pallas.num_programs": [[1480, "pallas-program-id-and-pallas-num-programs"]], "pip installation": [[1384, "pip-installation"]], "pip installation: CPU": [[1384, "pip-installation-cpu"]], "pip installation: Google Cloud TPU": [[1384, "pip-installation-google-cloud-tpu"]], "pip installation: NVIDIA GPU (CUDA, installed locally, harder)": [[1384, "pip-installation-nvidia-gpu-cuda-installed-locally-harder"]], "pip installation: NVIDIA GPU (CUDA, installed via pip, easier)": [[1384, "pip-installation-nvidia-gpu-cuda-installed-via-pip-easier"]], "pjit": [[1361, "pjit"]], "pltpu.emit_pipeline": [[1493, "pltpu-emit-pipeline"]], "ppermute": [[1474, "ppermute"]], "psum": [[1474, "psum"]], "psum_scatter": [[1474, "psum-scatter"]], "pure_callback and exceptions": [[1376, "pure-callback-and-exceptions"]], "scan primitive": [[1441, "scan-primitive"]], "shmap (shard_map) for simple per-device code": [[1445, null]], "tl;dr": [[1454, "tl-dr"]], "vjp and grad": [[1348, "vjp-and-grad"]], "vmap-of-pallas_call": [[1480, "vmap-of-pallas-call"]], "vmap/pmap": [[1361, "vmap-pmap"]], "while primitive": [[1441, "while-primitive"]], "while_loop": [[1359, "while-loop"]], "\u2705 numpy namespace": [[1448, "numpy-namespace"]], "\u2705 numpy.linalg & numpy.fft": [[1448, "numpy-linalg-numpy-fft"]], "\u2705 scipy.fft": [[1448, "scipy-fft"]], "\u2705 scipy.linalg": [[1448, "scipy-linalg"]], "\u2705 scipy.special": [[1448, "scipy-special"]], "\u2705 scipy.stats": [[1448, "scipy-stats"]], "\u274c numpy.ma & numpy.polynomial": [[1448, "numpy-ma-numpy-polynomial"]], "\u274c numpy.random": [[1448, "numpy-random"]], "\u274c numpy.testing": [[1448, "numpy-testing"]], "\u274c scipy.cluster": [[1448, "scipy-cluster"]], "\u274c scipy.constants": [[1448, "scipy-constants"]], "\u274c scipy.datasets": [[1448, "scipy-datasets"]], "\u274c scipy.integrate": [[1448, "scipy-integrate"]], "\u274c scipy.interpolate": [[1448, "scipy-interpolate"]], "\u274c scipy.io": [[1448, "scipy-io"]], "\u274c scipy.ndimage": [[1448, "scipy-ndimage"]], "\u274c scipy.odr": [[1448, "scipy-odr"]], "\u274c scipy.optimize": [[1448, "scipy-optimize"]], "\u274c scipy.spatial": [[1448, "scipy-spatial"]], "\ud83d\udd2a Control flow": [[1462, "control-flow"]], "\ud83d\udd2a Double (64bit) precision": [[1462, "double-64bit-precision"]], "\ud83d\udd2a Dynamic shapes": [[1462, "dynamic-shapes"]], "\ud83d\udd2a In-place updates": [[1462, "in-place-updates"]], "\ud83d\udd2a JAX - The Sharp Bits \ud83d\udd2a": [[1462, null]], "\ud83d\udd2a Miscellaneous divergences from NumPy": [[1462, "miscellaneous-divergences-from-numpy"]], "\ud83d\udd2a NaNs": [[1462, "nans"]], "\ud83d\udd2a Non-array inputs: NumPy vs. JAX": [[1462, "non-array-inputs-numpy-vs-jax"]], "\ud83d\udd2a Out-of-bounds indexing": [[1462, "out-of-bounds-indexing"]], "\ud83d\udd2a Pure functions": [[1462, "pure-functions"]], "\ud83d\udd2a Random numbers": [[1462, "random-numbers"]], "\ud83d\udd2a Sharp bits covered in tutorials": [[1462, "sharp-bits-covered-in-tutorials"]], "\ud83d\udfe1 scipy.signal": [[1448, "scipy-signal"]], "\ud83d\udfe1 scipy.sparse": [[1448, "scipy-sparse"]]}, "docnames": ["_autosummary/jax.Array", "_autosummary/jax.Array.T", "_autosummary/jax.Array.addressable_shards", "_autosummary/jax.Array.all", "_autosummary/jax.Array.any", "_autosummary/jax.Array.argmax", "_autosummary/jax.Array.argmin", "_autosummary/jax.Array.argpartition", "_autosummary/jax.Array.argsort", "_autosummary/jax.Array.astype", "_autosummary/jax.Array.at", "_autosummary/jax.Array.choose", "_autosummary/jax.Array.clip", "_autosummary/jax.Array.committed", "_autosummary/jax.Array.compress", "_autosummary/jax.Array.conj", "_autosummary/jax.Array.conjugate", "_autosummary/jax.Array.copy", "_autosummary/jax.Array.copy_to_host_async", "_autosummary/jax.Array.cumprod", "_autosummary/jax.Array.cumsum", "_autosummary/jax.Array.device", "_autosummary/jax.Array.diagonal", "_autosummary/jax.Array.dot", "_autosummary/jax.Array.dtype", "_autosummary/jax.Array.flat", "_autosummary/jax.Array.flatten", "_autosummary/jax.Array.global_shards", "_autosummary/jax.Array.imag", "_autosummary/jax.Array.is_fully_addressable", "_autosummary/jax.Array.is_fully_replicated", "_autosummary/jax.Array.item", "_autosummary/jax.Array.itemsize", "_autosummary/jax.Array.mT", "_autosummary/jax.Array.max", "_autosummary/jax.Array.mean", "_autosummary/jax.Array.min", "_autosummary/jax.Array.nbytes", "_autosummary/jax.Array.ndim", "_autosummary/jax.Array.nonzero", "_autosummary/jax.Array.prod", "_autosummary/jax.Array.ptp", "_autosummary/jax.Array.ravel", "_autosummary/jax.Array.real", "_autosummary/jax.Array.repeat", "_autosummary/jax.Array.reshape", "_autosummary/jax.Array.round", "_autosummary/jax.Array.searchsorted", "_autosummary/jax.Array.shape", "_autosummary/jax.Array.sharding", "_autosummary/jax.Array.size", "_autosummary/jax.Array.sort", "_autosummary/jax.Array.squeeze", "_autosummary/jax.Array.std", "_autosummary/jax.Array.sum", "_autosummary/jax.Array.swapaxes", "_autosummary/jax.Array.take", "_autosummary/jax.Array.to_device", "_autosummary/jax.Array.trace", "_autosummary/jax.Array.transpose", "_autosummary/jax.Array.var", "_autosummary/jax.Array.view", "_autosummary/jax.Device", "_autosummary/jax.ShapeDtypeStruct", "_autosummary/jax.block_until_ready", "_autosummary/jax.check_tracer_leaks", "_autosummary/jax.checking_leaks", "_autosummary/jax.checkpoint", "_autosummary/jax.clear_caches", "_autosummary/jax.closure_convert", "_autosummary/jax.config", "_autosummary/jax.copy_to_host_async", "_autosummary/jax.custom_batching.custom_vmap", "_autosummary/jax.custom_batching.custom_vmap.def_vmap", "_autosummary/jax.custom_batching.sequential_vmap", "_autosummary/jax.custom_gradient", "_autosummary/jax.custom_jvp", "_autosummary/jax.custom_jvp.defjvp", "_autosummary/jax.custom_jvp.defjvps", "_autosummary/jax.custom_vjp", "_autosummary/jax.custom_vjp.defvjp", "_autosummary/jax.debug.breakpoint", "_autosummary/jax.debug.callback", "_autosummary/jax.debug.inspect_array_sharding", "_autosummary/jax.debug.print", "_autosummary/jax.debug.visualize_array_sharding", "_autosummary/jax.debug.visualize_sharding", "_autosummary/jax.debug_infs", "_autosummary/jax.debug_nans", "_autosummary/jax.default_backend", "_autosummary/jax.default_device", "_autosummary/jax.default_matmul_precision", "_autosummary/jax.default_prng_impl", "_autosummary/jax.device_count", "_autosummary/jax.device_get", "_autosummary/jax.device_put", "_autosummary/jax.devices", "_autosummary/jax.disable_jit", "_autosummary/jax.distributed.initialize", "_autosummary/jax.distributed.shutdown", "_autosummary/jax.dlpack.from_dlpack", "_autosummary/jax.dlpack.is_supported_dtype", "_autosummary/jax.dtypes.bfloat16", "_autosummary/jax.dtypes.canonicalize_dtype", "_autosummary/jax.dtypes.float0", "_autosummary/jax.dtypes.issubdtype", "_autosummary/jax.dtypes.prng_key", "_autosummary/jax.dtypes.result_type", "_autosummary/jax.dtypes.scalar_type_of", "_autosummary/jax.enable_checks", "_autosummary/jax.enable_custom_prng", "_autosummary/jax.enable_custom_vjp_by_custom_transpose", "_autosummary/jax.ensure_compile_time_eval", "_autosummary/jax.eval_shape", "_autosummary/jax.experimental.checkify.Error", "_autosummary/jax.experimental.checkify.JaxRuntimeError", "_autosummary/jax.experimental.checkify.all_checks", "_autosummary/jax.experimental.checkify.automatic_checks", "_autosummary/jax.experimental.checkify.check", "_autosummary/jax.experimental.checkify.check_error", "_autosummary/jax.experimental.checkify.checkify", "_autosummary/jax.experimental.checkify.div_checks", "_autosummary/jax.experimental.checkify.float_checks", "_autosummary/jax.experimental.checkify.index_checks", "_autosummary/jax.experimental.checkify.nan_checks", "_autosummary/jax.experimental.checkify.user_checks", "_autosummary/jax.experimental.custom_dce.custom_dce", "_autosummary/jax.experimental.custom_dce.custom_dce.def_dce", "_autosummary/jax.experimental.disable_x64", "_autosummary/jax.experimental.enable_x64", "_autosummary/jax.experimental.io_callback", "_autosummary/jax.experimental.mesh_utils.create_device_mesh", "_autosummary/jax.experimental.mesh_utils.create_hybrid_device_mesh", "_autosummary/jax.experimental.multihost_utils.assert_equal", "_autosummary/jax.experimental.multihost_utils.broadcast_one_to_all", "_autosummary/jax.experimental.multihost_utils.global_array_to_host_local_array", "_autosummary/jax.experimental.multihost_utils.host_local_array_to_global_array", "_autosummary/jax.experimental.multihost_utils.process_allgather", "_autosummary/jax.experimental.multihost_utils.sync_global_devices", "_autosummary/jax.experimental.pallas.BlockSpec", "_autosummary/jax.experimental.pallas.GridSpec", "_autosummary/jax.experimental.pallas.Slice", "_autosummary/jax.experimental.pallas.broadcast_to", "_autosummary/jax.experimental.pallas.debug_print", "_autosummary/jax.experimental.pallas.dot", "_autosummary/jax.experimental.pallas.load", "_autosummary/jax.experimental.pallas.max_contiguous", "_autosummary/jax.experimental.pallas.mosaic_gpu.ACC", "_autosummary/jax.experimental.pallas.mosaic_gpu.Barrier", "_autosummary/jax.experimental.pallas.mosaic_gpu.BlockSpec", "_autosummary/jax.experimental.pallas.mosaic_gpu.CompilerParams", "_autosummary/jax.experimental.pallas.mosaic_gpu.GMEM", "_autosummary/jax.experimental.pallas.mosaic_gpu.Layout", "_autosummary/jax.experimental.pallas.mosaic_gpu.MemorySpace", "_autosummary/jax.experimental.pallas.mosaic_gpu.SMEM", "_autosummary/jax.experimental.pallas.mosaic_gpu.SemaphoreSignal", "_autosummary/jax.experimental.pallas.mosaic_gpu.SwizzleTransform", "_autosummary/jax.experimental.pallas.mosaic_gpu.TilingTransform", "_autosummary/jax.experimental.pallas.mosaic_gpu.TransposeTransform", "_autosummary/jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef", "_autosummary/jax.experimental.pallas.mosaic_gpu.async_load_tmem", "_autosummary/jax.experimental.pallas.mosaic_gpu.async_store_tmem", "_autosummary/jax.experimental.pallas.mosaic_gpu.barrier_arrive", "_autosummary/jax.experimental.pallas.mosaic_gpu.barrier_wait", "_autosummary/jax.experimental.pallas.mosaic_gpu.commit_smem", "_autosummary/jax.experimental.pallas.mosaic_gpu.commit_tmem", "_autosummary/jax.experimental.pallas.mosaic_gpu.copy_gmem_to_smem", "_autosummary/jax.experimental.pallas.mosaic_gpu.copy_smem_to_gmem", "_autosummary/jax.experimental.pallas.mosaic_gpu.emit_pipeline", "_autosummary/jax.experimental.pallas.mosaic_gpu.layout_cast", "_autosummary/jax.experimental.pallas.mosaic_gpu.semaphore_signal_parallel", "_autosummary/jax.experimental.pallas.mosaic_gpu.set_max_registers", "_autosummary/jax.experimental.pallas.mosaic_gpu.wait_load_tmem", "_autosummary/jax.experimental.pallas.mosaic_gpu.wait_smem_to_gmem", "_autosummary/jax.experimental.pallas.mosaic_gpu.wgmma", "_autosummary/jax.experimental.pallas.mosaic_gpu.wgmma_wait", "_autosummary/jax.experimental.pallas.multiple_of", "_autosummary/jax.experimental.pallas.num_programs", "_autosummary/jax.experimental.pallas.pallas_call", "_autosummary/jax.experimental.pallas.program_id", "_autosummary/jax.experimental.pallas.run_scoped", "_autosummary/jax.experimental.pallas.store", "_autosummary/jax.experimental.pallas.swap", "_autosummary/jax.experimental.pallas.triton.CompilerParams", "_autosummary/jax.experimental.pallas.triton.approx_tanh", "_autosummary/jax.experimental.pallas.triton.atomic_add", "_autosummary/jax.experimental.pallas.triton.atomic_and", "_autosummary/jax.experimental.pallas.triton.atomic_cas", "_autosummary/jax.experimental.pallas.triton.atomic_max", "_autosummary/jax.experimental.pallas.triton.atomic_min", "_autosummary/jax.experimental.pallas.triton.atomic_or", "_autosummary/jax.experimental.pallas.triton.atomic_xchg", "_autosummary/jax.experimental.pallas.triton.atomic_xor", "_autosummary/jax.experimental.pallas.triton.debug_barrier", "_autosummary/jax.experimental.pallas.triton.elementwise_inline_asm", "_autosummary/jax.experimental.pallas.when", "_autosummary/jax.experimental.serialize_executable.deserialize_and_load", "_autosummary/jax.experimental.serialize_executable.serialize", "_autosummary/jax.experimental.shard_map.shard_map", "_autosummary/jax.experimental.sparse.BCOO", "_autosummary/jax.experimental.sparse.BCSR", "_autosummary/jax.experimental.sparse.COO", "_autosummary/jax.experimental.sparse.CSC", "_autosummary/jax.experimental.sparse.CSR", "_autosummary/jax.experimental.sparse.JAXSparse", "_autosummary/jax.experimental.sparse.bcoo_broadcast_in_dim", "_autosummary/jax.experimental.sparse.bcoo_concatenate", "_autosummary/jax.experimental.sparse.bcoo_dot_general", "_autosummary/jax.experimental.sparse.bcoo_dot_general_sampled", "_autosummary/jax.experimental.sparse.bcoo_dynamic_slice", "_autosummary/jax.experimental.sparse.bcoo_extract", "_autosummary/jax.experimental.sparse.bcoo_fromdense", "_autosummary/jax.experimental.sparse.bcoo_gather", "_autosummary/jax.experimental.sparse.bcoo_multiply_dense", "_autosummary/jax.experimental.sparse.bcoo_multiply_sparse", "_autosummary/jax.experimental.sparse.bcoo_reduce_sum", "_autosummary/jax.experimental.sparse.bcoo_reshape", "_autosummary/jax.experimental.sparse.bcoo_slice", "_autosummary/jax.experimental.sparse.bcoo_sort_indices", "_autosummary/jax.experimental.sparse.bcoo_squeeze", "_autosummary/jax.experimental.sparse.bcoo_sum_duplicates", "_autosummary/jax.experimental.sparse.bcoo_todense", "_autosummary/jax.experimental.sparse.bcoo_transpose", "_autosummary/jax.experimental.sparse.bcoo_update_layout", "_autosummary/jax.experimental.sparse.bcsr_dot_general", "_autosummary/jax.experimental.sparse.bcsr_extract", "_autosummary/jax.experimental.sparse.bcsr_fromdense", "_autosummary/jax.experimental.sparse.bcsr_todense", "_autosummary/jax.experimental.sparse.coo_fromdense", "_autosummary/jax.experimental.sparse.coo_matmat", "_autosummary/jax.experimental.sparse.coo_matvec", "_autosummary/jax.experimental.sparse.coo_todense", "_autosummary/jax.experimental.sparse.csr_fromdense", "_autosummary/jax.experimental.sparse.csr_matmat", "_autosummary/jax.experimental.sparse.csr_matvec", "_autosummary/jax.experimental.sparse.csr_todense", "_autosummary/jax.experimental.sparse.empty", "_autosummary/jax.experimental.sparse.eye", "_autosummary/jax.experimental.sparse.grad", "_autosummary/jax.experimental.sparse.linalg.lobpcg_standard", "_autosummary/jax.experimental.sparse.linalg.spsolve", "_autosummary/jax.experimental.sparse.random_bcoo", "_autosummary/jax.experimental.sparse.sparsify", "_autosummary/jax.experimental.sparse.todense", "_autosummary/jax.experimental.sparse.value_and_grad", "_autosummary/jax.export.SymbolicScope", "_autosummary/jax.export.default_export_platform", "_autosummary/jax.export.deserialize", "_autosummary/jax.export.export", "_autosummary/jax.export.is_symbolic_dim", "_autosummary/jax.export.maximum_supported_calling_convention_version", "_autosummary/jax.export.minimum_supported_calling_convention_version", "_autosummary/jax.export.register_namedtuple_serialization", "_autosummary/jax.export.register_pytree_node_serialization", "_autosummary/jax.export.symbolic_args_specs", "_autosummary/jax.export.symbolic_shape", "_autosummary/jax.extend.core.ClosedJaxpr", "_autosummary/jax.extend.core.Jaxpr", "_autosummary/jax.extend.core.JaxprEqn", "_autosummary/jax.extend.core.Literal", "_autosummary/jax.extend.core.Primitive", "_autosummary/jax.extend.core.Token", "_autosummary/jax.extend.core.Var", "_autosummary/jax.extend.core.array_types", "_autosummary/jax.extend.core.jaxpr_as_fun", "_autosummary/jax.extend.core.primitives", "_autosummary/jax.extend.linear_util.StoreException", "_autosummary/jax.extend.linear_util.WrappedFun", "_autosummary/jax.extend.linear_util.cache", "_autosummary/jax.extend.linear_util.merge_linear_aux", "_autosummary/jax.extend.linear_util.transformation", "_autosummary/jax.extend.linear_util.transformation_with_aux", "_autosummary/jax.extend.linear_util.wrap_init", "_autosummary/jax.extend.mlir.dialects", "_autosummary/jax.extend.mlir.ir", "_autosummary/jax.extend.mlir.passmanager", "_autosummary/jax.extend.random.define_prng_impl", "_autosummary/jax.extend.random.rbg_prng_impl", "_autosummary/jax.extend.random.seed_with_impl", "_autosummary/jax.extend.random.threefry2x32_p", "_autosummary/jax.extend.random.threefry_2x32", "_autosummary/jax.extend.random.threefry_prng_impl", "_autosummary/jax.extend.random.unsafe_rbg_prng_impl", "_autosummary/jax.ffi.ffi_call", "_autosummary/jax.ffi.ffi_lowering", "_autosummary/jax.ffi.pycapsule", "_autosummary/jax.ffi.register_ffi_target", "_autosummary/jax.ffi.register_ffi_type_id", "_autosummary/jax.flatten_util.ravel_pytree", "_autosummary/jax.grad", "_autosummary/jax.hessian", "_autosummary/jax.image.resize", "_autosummary/jax.image.scale_and_translate", "_autosummary/jax.jacfwd", "_autosummary/jax.jacobian", "_autosummary/jax.jacrev", "_autosummary/jax.jit", "_autosummary/jax.jvp", "_autosummary/jax.lax.abs", "_autosummary/jax.lax.acos", "_autosummary/jax.lax.acosh", "_autosummary/jax.lax.add", "_autosummary/jax.lax.after_all", "_autosummary/jax.lax.all_gather", "_autosummary/jax.lax.all_to_all", "_autosummary/jax.lax.approx_max_k", "_autosummary/jax.lax.approx_min_k", "_autosummary/jax.lax.argmax", "_autosummary/jax.lax.argmin", "_autosummary/jax.lax.asin", "_autosummary/jax.lax.asinh", "_autosummary/jax.lax.associative_scan", "_autosummary/jax.lax.atan", "_autosummary/jax.lax.atan2", "_autosummary/jax.lax.atanh", "_autosummary/jax.lax.axis_index", "_autosummary/jax.lax.axis_size", "_autosummary/jax.lax.batch_matmul", "_autosummary/jax.lax.bessel_i0e", "_autosummary/jax.lax.bessel_i1e", "_autosummary/jax.lax.betainc", "_autosummary/jax.lax.bitcast_convert_type", "_autosummary/jax.lax.bitwise_and", "_autosummary/jax.lax.bitwise_not", "_autosummary/jax.lax.bitwise_or", "_autosummary/jax.lax.bitwise_xor", "_autosummary/jax.lax.broadcast", "_autosummary/jax.lax.broadcast_in_dim", "_autosummary/jax.lax.broadcast_shapes", "_autosummary/jax.lax.broadcast_to_rank", "_autosummary/jax.lax.broadcasted_iota", "_autosummary/jax.lax.cbrt", "_autosummary/jax.lax.ceil", "_autosummary/jax.lax.clamp", "_autosummary/jax.lax.clz", "_autosummary/jax.lax.collapse", "_autosummary/jax.lax.complex", "_autosummary/jax.lax.composite", "_autosummary/jax.lax.concatenate", "_autosummary/jax.lax.cond", "_autosummary/jax.lax.conj", "_autosummary/jax.lax.conv", "_autosummary/jax.lax.conv_dimension_numbers", "_autosummary/jax.lax.conv_general_dilated", "_autosummary/jax.lax.conv_general_dilated_local", "_autosummary/jax.lax.conv_general_dilated_patches", "_autosummary/jax.lax.conv_transpose", "_autosummary/jax.lax.conv_with_general_padding", "_autosummary/jax.lax.convert_element_type", "_autosummary/jax.lax.cos", "_autosummary/jax.lax.cosh", "_autosummary/jax.lax.cumlogsumexp", "_autosummary/jax.lax.cummax", "_autosummary/jax.lax.cummin", "_autosummary/jax.lax.cumprod", "_autosummary/jax.lax.cumsum", "_autosummary/jax.lax.custom_linear_solve", "_autosummary/jax.lax.custom_root", "_autosummary/jax.lax.digamma", "_autosummary/jax.lax.div", "_autosummary/jax.lax.dot", "_autosummary/jax.lax.dot_general", "_autosummary/jax.lax.dynamic_index_in_dim", "_autosummary/jax.lax.dynamic_slice", "_autosummary/jax.lax.dynamic_slice_in_dim", "_autosummary/jax.lax.dynamic_update_index_in_dim", "_autosummary/jax.lax.dynamic_update_slice", "_autosummary/jax.lax.dynamic_update_slice_in_dim", "_autosummary/jax.lax.eq", "_autosummary/jax.lax.erf", "_autosummary/jax.lax.erf_inv", "_autosummary/jax.lax.erfc", "_autosummary/jax.lax.exp", "_autosummary/jax.lax.exp2", "_autosummary/jax.lax.expand_dims", "_autosummary/jax.lax.expm1", "_autosummary/jax.lax.fft", "_autosummary/jax.lax.floor", "_autosummary/jax.lax.fori_loop", "_autosummary/jax.lax.full", "_autosummary/jax.lax.full_like", "_autosummary/jax.lax.gather", "_autosummary/jax.lax.ge", "_autosummary/jax.lax.gt", "_autosummary/jax.lax.igamma", "_autosummary/jax.lax.igammac", "_autosummary/jax.lax.imag", "_autosummary/jax.lax.index_in_dim", "_autosummary/jax.lax.index_take", "_autosummary/jax.lax.integer_pow", "_autosummary/jax.lax.iota", "_autosummary/jax.lax.is_finite", "_autosummary/jax.lax.le", "_autosummary/jax.lax.lgamma", "_autosummary/jax.lax.linalg.SvdAlgorithm", "_autosummary/jax.lax.linalg.cholesky", "_autosummary/jax.lax.linalg.cholesky_update", "_autosummary/jax.lax.linalg.eig", "_autosummary/jax.lax.linalg.eigh", "_autosummary/jax.lax.linalg.hessenberg", "_autosummary/jax.lax.linalg.householder_product", "_autosummary/jax.lax.linalg.lu", "_autosummary/jax.lax.linalg.lu_pivots_to_permutation", "_autosummary/jax.lax.linalg.qdwh", "_autosummary/jax.lax.linalg.qr", "_autosummary/jax.lax.linalg.schur", "_autosummary/jax.lax.linalg.svd", "_autosummary/jax.lax.linalg.symmetric_product", "_autosummary/jax.lax.linalg.triangular_solve", "_autosummary/jax.lax.linalg.tridiagonal", "_autosummary/jax.lax.linalg.tridiagonal_solve", "_autosummary/jax.lax.log", "_autosummary/jax.lax.log1p", "_autosummary/jax.lax.logistic", "_autosummary/jax.lax.lt", "_autosummary/jax.lax.map", "_autosummary/jax.lax.max", "_autosummary/jax.lax.min", "_autosummary/jax.lax.mul", "_autosummary/jax.lax.ne", "_autosummary/jax.lax.neg", "_autosummary/jax.lax.nextafter", "_autosummary/jax.lax.optimization_barrier", "_autosummary/jax.lax.pad", "_autosummary/jax.lax.platform_dependent", "_autosummary/jax.lax.pmax", "_autosummary/jax.lax.pmean", "_autosummary/jax.lax.pmin", "_autosummary/jax.lax.polygamma", "_autosummary/jax.lax.population_count", "_autosummary/jax.lax.pow", "_autosummary/jax.lax.ppermute", "_autosummary/jax.lax.precv", "_autosummary/jax.lax.psend", "_autosummary/jax.lax.pshuffle", "_autosummary/jax.lax.psum", "_autosummary/jax.lax.psum_scatter", "_autosummary/jax.lax.pswapaxes", "_autosummary/jax.lax.random_gamma_grad", "_autosummary/jax.lax.real", "_autosummary/jax.lax.reciprocal", "_autosummary/jax.lax.reduce", "_autosummary/jax.lax.reduce_and", "_autosummary/jax.lax.reduce_max", "_autosummary/jax.lax.reduce_min", "_autosummary/jax.lax.reduce_or", "_autosummary/jax.lax.reduce_precision", "_autosummary/jax.lax.reduce_prod", "_autosummary/jax.lax.reduce_sum", "_autosummary/jax.lax.reduce_window", "_autosummary/jax.lax.reduce_xor", "_autosummary/jax.lax.rem", "_autosummary/jax.lax.reshape", "_autosummary/jax.lax.rev", "_autosummary/jax.lax.rng_bit_generator", "_autosummary/jax.lax.rng_uniform", "_autosummary/jax.lax.round", "_autosummary/jax.lax.rsqrt", "_autosummary/jax.lax.scan", "_autosummary/jax.lax.scatter", "_autosummary/jax.lax.scatter_add", "_autosummary/jax.lax.scatter_apply", "_autosummary/jax.lax.scatter_max", "_autosummary/jax.lax.scatter_min", "_autosummary/jax.lax.scatter_mul", "_autosummary/jax.lax.select", "_autosummary/jax.lax.select_n", "_autosummary/jax.lax.shift_left", "_autosummary/jax.lax.shift_right_arithmetic", "_autosummary/jax.lax.shift_right_logical", "_autosummary/jax.lax.sign", "_autosummary/jax.lax.sin", "_autosummary/jax.lax.sinh", "_autosummary/jax.lax.slice", "_autosummary/jax.lax.slice_in_dim", "_autosummary/jax.lax.sort", "_autosummary/jax.lax.sort_key_val", "_autosummary/jax.lax.split", "_autosummary/jax.lax.sqrt", "_autosummary/jax.lax.square", "_autosummary/jax.lax.squeeze", "_autosummary/jax.lax.stop_gradient", "_autosummary/jax.lax.sub", "_autosummary/jax.lax.switch", "_autosummary/jax.lax.tan", "_autosummary/jax.lax.tanh", "_autosummary/jax.lax.top_k", "_autosummary/jax.lax.transpose", "_autosummary/jax.lax.while_loop", "_autosummary/jax.lax.with_sharding_constraint", "_autosummary/jax.lax.zeros_like_array", "_autosummary/jax.lax.zeta", "_autosummary/jax.lib.xla_bridge.get_backend", "_autosummary/jax.lib.xla_bridge.get_compile_options", "_autosummary/jax.linear_transpose", "_autosummary/jax.linearize", "_autosummary/jax.live_arrays", "_autosummary/jax.local_device_count", "_autosummary/jax.local_devices", "_autosummary/jax.log_compiles", "_autosummary/jax.make_array_from_callback", "_autosummary/jax.make_array_from_process_local_data", "_autosummary/jax.make_array_from_single_device_arrays", "_autosummary/jax.make_jaxpr", "_autosummary/jax.make_mesh", "_autosummary/jax.named_call", "_autosummary/jax.named_scope", "_autosummary/jax.nn.celu", "_autosummary/jax.nn.dot_product_attention", "_autosummary/jax.nn.elu", "_autosummary/jax.nn.gelu", "_autosummary/jax.nn.get_scaled_dot_general_config", "_autosummary/jax.nn.glu", "_autosummary/jax.nn.hard_sigmoid", "_autosummary/jax.nn.hard_silu", "_autosummary/jax.nn.hard_swish", "_autosummary/jax.nn.hard_tanh", "_autosummary/jax.nn.identity", "_autosummary/jax.nn.initializers.constant", "_autosummary/jax.nn.initializers.delta_orthogonal", "_autosummary/jax.nn.initializers.glorot_normal", "_autosummary/jax.nn.initializers.glorot_uniform", "_autosummary/jax.nn.initializers.he_normal", "_autosummary/jax.nn.initializers.he_uniform", "_autosummary/jax.nn.initializers.lecun_normal", "_autosummary/jax.nn.initializers.lecun_uniform", "_autosummary/jax.nn.initializers.normal", "_autosummary/jax.nn.initializers.ones", "_autosummary/jax.nn.initializers.orthogonal", "_autosummary/jax.nn.initializers.truncated_normal", "_autosummary/jax.nn.initializers.uniform", "_autosummary/jax.nn.initializers.variance_scaling", "_autosummary/jax.nn.initializers.zeros", "_autosummary/jax.nn.leaky_relu", "_autosummary/jax.nn.log1mexp", "_autosummary/jax.nn.log_sigmoid", "_autosummary/jax.nn.log_softmax", "_autosummary/jax.nn.logmeanexp", "_autosummary/jax.nn.logsumexp", "_autosummary/jax.nn.mish", "_autosummary/jax.nn.one_hot", "_autosummary/jax.nn.relu", "_autosummary/jax.nn.relu6", "_autosummary/jax.nn.scaled_dot_general", "_autosummary/jax.nn.scaled_matmul", "_autosummary/jax.nn.selu", "_autosummary/jax.nn.sigmoid", "_autosummary/jax.nn.silu", "_autosummary/jax.nn.soft_sign", "_autosummary/jax.nn.softmax", "_autosummary/jax.nn.softplus", "_autosummary/jax.nn.sparse_plus", "_autosummary/jax.nn.sparse_sigmoid", "_autosummary/jax.nn.squareplus", "_autosummary/jax.nn.standardize", "_autosummary/jax.nn.swish", "_autosummary/jax.no_tracing", "_autosummary/jax.numpy.ComplexWarning", "_autosummary/jax.numpy.abs", "_autosummary/jax.numpy.absolute", "_autosummary/jax.numpy.acos", "_autosummary/jax.numpy.acosh", "_autosummary/jax.numpy.add", "_autosummary/jax.numpy.all", "_autosummary/jax.numpy.allclose", "_autosummary/jax.numpy.amax", "_autosummary/jax.numpy.amin", "_autosummary/jax.numpy.angle", "_autosummary/jax.numpy.any", "_autosummary/jax.numpy.append", "_autosummary/jax.numpy.apply_along_axis", "_autosummary/jax.numpy.apply_over_axes", "_autosummary/jax.numpy.arange", "_autosummary/jax.numpy.arccos", "_autosummary/jax.numpy.arccosh", "_autosummary/jax.numpy.arcsin", "_autosummary/jax.numpy.arcsinh", "_autosummary/jax.numpy.arctan", "_autosummary/jax.numpy.arctan2", "_autosummary/jax.numpy.arctanh", "_autosummary/jax.numpy.argmax", "_autosummary/jax.numpy.argmin", "_autosummary/jax.numpy.argpartition", "_autosummary/jax.numpy.argsort", "_autosummary/jax.numpy.argwhere", "_autosummary/jax.numpy.around", "_autosummary/jax.numpy.array", "_autosummary/jax.numpy.array_equal", "_autosummary/jax.numpy.array_equiv", "_autosummary/jax.numpy.array_repr", "_autosummary/jax.numpy.array_split", "_autosummary/jax.numpy.array_str", "_autosummary/jax.numpy.asarray", "_autosummary/jax.numpy.asin", "_autosummary/jax.numpy.asinh", "_autosummary/jax.numpy.astype", "_autosummary/jax.numpy.atan", "_autosummary/jax.numpy.atan2", "_autosummary/jax.numpy.atanh", "_autosummary/jax.numpy.atleast_1d", "_autosummary/jax.numpy.atleast_2d", "_autosummary/jax.numpy.atleast_3d", "_autosummary/jax.numpy.average", "_autosummary/jax.numpy.bartlett", "_autosummary/jax.numpy.bincount", "_autosummary/jax.numpy.bitwise_and", "_autosummary/jax.numpy.bitwise_count", "_autosummary/jax.numpy.bitwise_invert", "_autosummary/jax.numpy.bitwise_left_shift", "_autosummary/jax.numpy.bitwise_not", "_autosummary/jax.numpy.bitwise_or", "_autosummary/jax.numpy.bitwise_right_shift", "_autosummary/jax.numpy.bitwise_xor", "_autosummary/jax.numpy.blackman", "_autosummary/jax.numpy.block", "_autosummary/jax.numpy.bool_", "_autosummary/jax.numpy.broadcast_arrays", "_autosummary/jax.numpy.broadcast_shapes", "_autosummary/jax.numpy.broadcast_to", "_autosummary/jax.numpy.c_", "_autosummary/jax.numpy.can_cast", "_autosummary/jax.numpy.cbrt", "_autosummary/jax.numpy.cdouble", "_autosummary/jax.numpy.ceil", "_autosummary/jax.numpy.character", "_autosummary/jax.numpy.choose", "_autosummary/jax.numpy.clip", "_autosummary/jax.numpy.column_stack", "_autosummary/jax.numpy.complex128", "_autosummary/jax.numpy.complex64", "_autosummary/jax.numpy.complex_", "_autosummary/jax.numpy.complexfloating", "_autosummary/jax.numpy.compress", "_autosummary/jax.numpy.concat", "_autosummary/jax.numpy.concatenate", "_autosummary/jax.numpy.conj", "_autosummary/jax.numpy.conjugate", "_autosummary/jax.numpy.convolve", "_autosummary/jax.numpy.copy", "_autosummary/jax.numpy.copysign", "_autosummary/jax.numpy.corrcoef", "_autosummary/jax.numpy.correlate", "_autosummary/jax.numpy.cos", "_autosummary/jax.numpy.cosh", "_autosummary/jax.numpy.count_nonzero", "_autosummary/jax.numpy.cov", "_autosummary/jax.numpy.cross", "_autosummary/jax.numpy.csingle", "_autosummary/jax.numpy.cumprod", "_autosummary/jax.numpy.cumsum", "_autosummary/jax.numpy.cumulative_prod", "_autosummary/jax.numpy.cumulative_sum", "_autosummary/jax.numpy.deg2rad", "_autosummary/jax.numpy.degrees", "_autosummary/jax.numpy.delete", "_autosummary/jax.numpy.diag", "_autosummary/jax.numpy.diag_indices", "_autosummary/jax.numpy.diag_indices_from", "_autosummary/jax.numpy.diagflat", "_autosummary/jax.numpy.diagonal", "_autosummary/jax.numpy.diff", "_autosummary/jax.numpy.digitize", "_autosummary/jax.numpy.divide", "_autosummary/jax.numpy.divmod", "_autosummary/jax.numpy.dot", "_autosummary/jax.numpy.double", "_autosummary/jax.numpy.dsplit", "_autosummary/jax.numpy.dstack", "_autosummary/jax.numpy.dtype", "_autosummary/jax.numpy.ediff1d", "_autosummary/jax.numpy.einsum", "_autosummary/jax.numpy.einsum_path", "_autosummary/jax.numpy.empty", "_autosummary/jax.numpy.empty_like", "_autosummary/jax.numpy.equal", "_autosummary/jax.numpy.exp", "_autosummary/jax.numpy.exp2", "_autosummary/jax.numpy.expand_dims", "_autosummary/jax.numpy.expm1", "_autosummary/jax.numpy.extract", "_autosummary/jax.numpy.eye", "_autosummary/jax.numpy.fabs", "_autosummary/jax.numpy.fft.fft", "_autosummary/jax.numpy.fft.fft2", "_autosummary/jax.numpy.fft.fftfreq", "_autosummary/jax.numpy.fft.fftn", "_autosummary/jax.numpy.fft.fftshift", "_autosummary/jax.numpy.fft.hfft", "_autosummary/jax.numpy.fft.ifft", "_autosummary/jax.numpy.fft.ifft2", "_autosummary/jax.numpy.fft.ifftn", "_autosummary/jax.numpy.fft.ifftshift", "_autosummary/jax.numpy.fft.ihfft", "_autosummary/jax.numpy.fft.irfft", "_autosummary/jax.numpy.fft.irfft2", "_autosummary/jax.numpy.fft.irfftn", "_autosummary/jax.numpy.fft.rfft", "_autosummary/jax.numpy.fft.rfft2", "_autosummary/jax.numpy.fft.rfftfreq", "_autosummary/jax.numpy.fft.rfftn", "_autosummary/jax.numpy.fill_diagonal", "_autosummary/jax.numpy.finfo", "_autosummary/jax.numpy.fix", "_autosummary/jax.numpy.flatnonzero", "_autosummary/jax.numpy.flexible", "_autosummary/jax.numpy.flip", "_autosummary/jax.numpy.fliplr", "_autosummary/jax.numpy.flipud", "_autosummary/jax.numpy.float16", "_autosummary/jax.numpy.float32", "_autosummary/jax.numpy.float64", "_autosummary/jax.numpy.float_", "_autosummary/jax.numpy.float_power", "_autosummary/jax.numpy.floating", "_autosummary/jax.numpy.floor", "_autosummary/jax.numpy.floor_divide", "_autosummary/jax.numpy.fmax", "_autosummary/jax.numpy.fmin", "_autosummary/jax.numpy.fmod", "_autosummary/jax.numpy.frexp", "_autosummary/jax.numpy.from_dlpack", "_autosummary/jax.numpy.frombuffer", "_autosummary/jax.numpy.fromfile", "_autosummary/jax.numpy.fromfunction", "_autosummary/jax.numpy.fromiter", "_autosummary/jax.numpy.frompyfunc", "_autosummary/jax.numpy.fromstring", "_autosummary/jax.numpy.full", "_autosummary/jax.numpy.full_like", "_autosummary/jax.numpy.gcd", "_autosummary/jax.numpy.generic", "_autosummary/jax.numpy.geomspace", "_autosummary/jax.numpy.get_printoptions", "_autosummary/jax.numpy.gradient", "_autosummary/jax.numpy.greater", "_autosummary/jax.numpy.greater_equal", "_autosummary/jax.numpy.hamming", "_autosummary/jax.numpy.hanning", "_autosummary/jax.numpy.heaviside", "_autosummary/jax.numpy.histogram", "_autosummary/jax.numpy.histogram2d", "_autosummary/jax.numpy.histogram_bin_edges", "_autosummary/jax.numpy.histogramdd", "_autosummary/jax.numpy.hsplit", "_autosummary/jax.numpy.hstack", "_autosummary/jax.numpy.hypot", "_autosummary/jax.numpy.i0", "_autosummary/jax.numpy.identity", "_autosummary/jax.numpy.iinfo", "_autosummary/jax.numpy.imag", "_autosummary/jax.numpy.index_exp", "_autosummary/jax.numpy.indices", "_autosummary/jax.numpy.inexact", "_autosummary/jax.numpy.inner", "_autosummary/jax.numpy.insert", "_autosummary/jax.numpy.int16", "_autosummary/jax.numpy.int32", "_autosummary/jax.numpy.int64", "_autosummary/jax.numpy.int8", "_autosummary/jax.numpy.int_", "_autosummary/jax.numpy.integer", "_autosummary/jax.numpy.interp", "_autosummary/jax.numpy.intersect1d", "_autosummary/jax.numpy.invert", "_autosummary/jax.numpy.isclose", "_autosummary/jax.numpy.iscomplex", "_autosummary/jax.numpy.iscomplexobj", "_autosummary/jax.numpy.isdtype", "_autosummary/jax.numpy.isfinite", "_autosummary/jax.numpy.isin", "_autosummary/jax.numpy.isinf", "_autosummary/jax.numpy.isnan", "_autosummary/jax.numpy.isneginf", "_autosummary/jax.numpy.isposinf", "_autosummary/jax.numpy.isreal", "_autosummary/jax.numpy.isrealobj", "_autosummary/jax.numpy.isscalar", "_autosummary/jax.numpy.issubdtype", "_autosummary/jax.numpy.iterable", "_autosummary/jax.numpy.ix_", "_autosummary/jax.numpy.kaiser", "_autosummary/jax.numpy.kron", "_autosummary/jax.numpy.lcm", "_autosummary/jax.numpy.ldexp", "_autosummary/jax.numpy.left_shift", "_autosummary/jax.numpy.less", "_autosummary/jax.numpy.less_equal", "_autosummary/jax.numpy.lexsort", "_autosummary/jax.numpy.linalg.cholesky", "_autosummary/jax.numpy.linalg.cond", "_autosummary/jax.numpy.linalg.cross", "_autosummary/jax.numpy.linalg.det", "_autosummary/jax.numpy.linalg.diagonal", "_autosummary/jax.numpy.linalg.eig", "_autosummary/jax.numpy.linalg.eigh", "_autosummary/jax.numpy.linalg.eigvals", "_autosummary/jax.numpy.linalg.eigvalsh", "_autosummary/jax.numpy.linalg.inv", "_autosummary/jax.numpy.linalg.lstsq", "_autosummary/jax.numpy.linalg.matmul", "_autosummary/jax.numpy.linalg.matrix_norm", "_autosummary/jax.numpy.linalg.matrix_power", "_autosummary/jax.numpy.linalg.matrix_rank", "_autosummary/jax.numpy.linalg.matrix_transpose", "_autosummary/jax.numpy.linalg.multi_dot", "_autosummary/jax.numpy.linalg.norm", "_autosummary/jax.numpy.linalg.outer", "_autosummary/jax.numpy.linalg.pinv", "_autosummary/jax.numpy.linalg.qr", "_autosummary/jax.numpy.linalg.slogdet", "_autosummary/jax.numpy.linalg.solve", "_autosummary/jax.numpy.linalg.svd", "_autosummary/jax.numpy.linalg.svdvals", "_autosummary/jax.numpy.linalg.tensordot", "_autosummary/jax.numpy.linalg.tensorinv", "_autosummary/jax.numpy.linalg.tensorsolve", "_autosummary/jax.numpy.linalg.trace", "_autosummary/jax.numpy.linalg.vecdot", "_autosummary/jax.numpy.linalg.vector_norm", "_autosummary/jax.numpy.linspace", "_autosummary/jax.numpy.load", "_autosummary/jax.numpy.log", "_autosummary/jax.numpy.log10", "_autosummary/jax.numpy.log1p", "_autosummary/jax.numpy.log2", "_autosummary/jax.numpy.logaddexp", "_autosummary/jax.numpy.logaddexp2", "_autosummary/jax.numpy.logical_and", "_autosummary/jax.numpy.logical_not", "_autosummary/jax.numpy.logical_or", "_autosummary/jax.numpy.logical_xor", "_autosummary/jax.numpy.logspace", "_autosummary/jax.numpy.mask_indices", "_autosummary/jax.numpy.matmul", "_autosummary/jax.numpy.matrix_transpose", "_autosummary/jax.numpy.matvec", "_autosummary/jax.numpy.max", "_autosummary/jax.numpy.maximum", "_autosummary/jax.numpy.mean", "_autosummary/jax.numpy.median", "_autosummary/jax.numpy.meshgrid", "_autosummary/jax.numpy.mgrid", "_autosummary/jax.numpy.min", "_autosummary/jax.numpy.minimum", "_autosummary/jax.numpy.mod", "_autosummary/jax.numpy.modf", "_autosummary/jax.numpy.moveaxis", "_autosummary/jax.numpy.multiply", "_autosummary/jax.numpy.nan_to_num", "_autosummary/jax.numpy.nanargmax", "_autosummary/jax.numpy.nanargmin", "_autosummary/jax.numpy.nancumprod", "_autosummary/jax.numpy.nancumsum", "_autosummary/jax.numpy.nanmax", "_autosummary/jax.numpy.nanmean", "_autosummary/jax.numpy.nanmedian", "_autosummary/jax.numpy.nanmin", "_autosummary/jax.numpy.nanpercentile", "_autosummary/jax.numpy.nanprod", "_autosummary/jax.numpy.nanquantile", "_autosummary/jax.numpy.nanstd", "_autosummary/jax.numpy.nansum", "_autosummary/jax.numpy.nanvar", "_autosummary/jax.numpy.ndarray", "_autosummary/jax.numpy.ndarray.at", "_autosummary/jax.numpy.ndim", "_autosummary/jax.numpy.negative", "_autosummary/jax.numpy.nextafter", "_autosummary/jax.numpy.nonzero", "_autosummary/jax.numpy.not_equal", "_autosummary/jax.numpy.number", "_autosummary/jax.numpy.object_", "_autosummary/jax.numpy.ogrid", "_autosummary/jax.numpy.ones", "_autosummary/jax.numpy.ones_like", "_autosummary/jax.numpy.outer", "_autosummary/jax.numpy.packbits", "_autosummary/jax.numpy.pad", "_autosummary/jax.numpy.partition", "_autosummary/jax.numpy.percentile", "_autosummary/jax.numpy.permute_dims", "_autosummary/jax.numpy.piecewise", "_autosummary/jax.numpy.place", "_autosummary/jax.numpy.poly", "_autosummary/jax.numpy.polyadd", "_autosummary/jax.numpy.polyder", "_autosummary/jax.numpy.polydiv", "_autosummary/jax.numpy.polyfit", "_autosummary/jax.numpy.polyint", "_autosummary/jax.numpy.polymul", "_autosummary/jax.numpy.polysub", "_autosummary/jax.numpy.polyval", "_autosummary/jax.numpy.positive", "_autosummary/jax.numpy.pow", "_autosummary/jax.numpy.power", "_autosummary/jax.numpy.printoptions", "_autosummary/jax.numpy.prod", "_autosummary/jax.numpy.promote_types", "_autosummary/jax.numpy.ptp", "_autosummary/jax.numpy.put", "_autosummary/jax.numpy.put_along_axis", "_autosummary/jax.numpy.quantile", "_autosummary/jax.numpy.r_", "_autosummary/jax.numpy.rad2deg", "_autosummary/jax.numpy.radians", "_autosummary/jax.numpy.ravel", "_autosummary/jax.numpy.ravel_multi_index", "_autosummary/jax.numpy.real", "_autosummary/jax.numpy.reciprocal", "_autosummary/jax.numpy.remainder", "_autosummary/jax.numpy.repeat", "_autosummary/jax.numpy.reshape", "_autosummary/jax.numpy.resize", "_autosummary/jax.numpy.result_type", "_autosummary/jax.numpy.right_shift", "_autosummary/jax.numpy.rint", "_autosummary/jax.numpy.roll", "_autosummary/jax.numpy.rollaxis", "_autosummary/jax.numpy.roots", "_autosummary/jax.numpy.rot90", "_autosummary/jax.numpy.round", "_autosummary/jax.numpy.s_", "_autosummary/jax.numpy.save", "_autosummary/jax.numpy.savez", "_autosummary/jax.numpy.searchsorted", "_autosummary/jax.numpy.select", "_autosummary/jax.numpy.set_printoptions", "_autosummary/jax.numpy.setdiff1d", "_autosummary/jax.numpy.setxor1d", "_autosummary/jax.numpy.shape", "_autosummary/jax.numpy.sign", "_autosummary/jax.numpy.signbit", "_autosummary/jax.numpy.signedinteger", "_autosummary/jax.numpy.sin", "_autosummary/jax.numpy.sinc", "_autosummary/jax.numpy.single", "_autosummary/jax.numpy.sinh", "_autosummary/jax.numpy.size", "_autosummary/jax.numpy.sort", "_autosummary/jax.numpy.sort_complex", "_autosummary/jax.numpy.spacing", "_autosummary/jax.numpy.split", "_autosummary/jax.numpy.sqrt", "_autosummary/jax.numpy.square", "_autosummary/jax.numpy.squeeze", "_autosummary/jax.numpy.stack", "_autosummary/jax.numpy.std", "_autosummary/jax.numpy.subtract", "_autosummary/jax.numpy.sum", "_autosummary/jax.numpy.swapaxes", "_autosummary/jax.numpy.take", "_autosummary/jax.numpy.take_along_axis", "_autosummary/jax.numpy.tan", "_autosummary/jax.numpy.tanh", "_autosummary/jax.numpy.tensordot", "_autosummary/jax.numpy.tile", "_autosummary/jax.numpy.trace", "_autosummary/jax.numpy.transpose", "_autosummary/jax.numpy.trapezoid", "_autosummary/jax.numpy.tri", "_autosummary/jax.numpy.tril", "_autosummary/jax.numpy.tril_indices", "_autosummary/jax.numpy.tril_indices_from", "_autosummary/jax.numpy.trim_zeros", "_autosummary/jax.numpy.triu", "_autosummary/jax.numpy.triu_indices", "_autosummary/jax.numpy.triu_indices_from", "_autosummary/jax.numpy.true_divide", "_autosummary/jax.numpy.trunc", "_autosummary/jax.numpy.ufunc", "_autosummary/jax.numpy.uint", "_autosummary/jax.numpy.uint16", "_autosummary/jax.numpy.uint32", "_autosummary/jax.numpy.uint64", "_autosummary/jax.numpy.uint8", "_autosummary/jax.numpy.union1d", "_autosummary/jax.numpy.unique", "_autosummary/jax.numpy.unique_all", "_autosummary/jax.numpy.unique_counts", "_autosummary/jax.numpy.unique_inverse", "_autosummary/jax.numpy.unique_values", "_autosummary/jax.numpy.unpackbits", "_autosummary/jax.numpy.unravel_index", "_autosummary/jax.numpy.unsignedinteger", "_autosummary/jax.numpy.unstack", "_autosummary/jax.numpy.unwrap", "_autosummary/jax.numpy.vander", "_autosummary/jax.numpy.var", "_autosummary/jax.numpy.vdot", "_autosummary/jax.numpy.vecdot", "_autosummary/jax.numpy.vecmat", "_autosummary/jax.numpy.vectorize", "_autosummary/jax.numpy.vsplit", "_autosummary/jax.numpy.vstack", "_autosummary/jax.numpy.where", "_autosummary/jax.numpy.zeros", "_autosummary/jax.numpy.zeros_like", "_autosummary/jax.numpy_rank_promotion", "_autosummary/jax.ops.segment_max", "_autosummary/jax.ops.segment_min", "_autosummary/jax.ops.segment_prod", "_autosummary/jax.ops.segment_sum", "_autosummary/jax.pmap", "_autosummary/jax.print_environment_info", "_autosummary/jax.process_count", "_autosummary/jax.process_index", "_autosummary/jax.process_indices", "_autosummary/jax.profiler.StepTraceAnnotation", "_autosummary/jax.profiler.TraceAnnotation", "_autosummary/jax.profiler.annotate_function", "_autosummary/jax.profiler.device_memory_profile", "_autosummary/jax.profiler.save_device_memory_profile", "_autosummary/jax.profiler.start_server", "_autosummary/jax.profiler.start_trace", "_autosummary/jax.profiler.stop_trace", "_autosummary/jax.profiler.trace", "_autosummary/jax.pure_callback", "_autosummary/jax.random.PRNGKey", "_autosummary/jax.random.ball", "_autosummary/jax.random.bernoulli", "_autosummary/jax.random.beta", "_autosummary/jax.random.binomial", "_autosummary/jax.random.bits", "_autosummary/jax.random.categorical", "_autosummary/jax.random.cauchy", "_autosummary/jax.random.chisquare", "_autosummary/jax.random.choice", "_autosummary/jax.random.clone", "_autosummary/jax.random.dirichlet", "_autosummary/jax.random.double_sided_maxwell", "_autosummary/jax.random.exponential", "_autosummary/jax.random.f", "_autosummary/jax.random.fold_in", "_autosummary/jax.random.gamma", "_autosummary/jax.random.generalized_normal", "_autosummary/jax.random.geometric", "_autosummary/jax.random.gumbel", "_autosummary/jax.random.key", "_autosummary/jax.random.key_data", "_autosummary/jax.random.laplace", "_autosummary/jax.random.loggamma", "_autosummary/jax.random.logistic", "_autosummary/jax.random.lognormal", "_autosummary/jax.random.maxwell", "_autosummary/jax.random.multinomial", "_autosummary/jax.random.multivariate_normal", "_autosummary/jax.random.normal", "_autosummary/jax.random.orthogonal", "_autosummary/jax.random.pareto", "_autosummary/jax.random.permutation", "_autosummary/jax.random.poisson", "_autosummary/jax.random.rademacher", "_autosummary/jax.random.randint", "_autosummary/jax.random.rayleigh", "_autosummary/jax.random.split", "_autosummary/jax.random.t", "_autosummary/jax.random.triangular", "_autosummary/jax.random.truncated_normal", "_autosummary/jax.random.uniform", "_autosummary/jax.random.wald", "_autosummary/jax.random.weibull_min", "_autosummary/jax.random.wrap_key_data", "_autosummary/jax.ref.AbstractRef", "_autosummary/jax.ref.ArrayRef", "_autosummary/jax.ref.addupdate", "_autosummary/jax.ref.array_ref", "_autosummary/jax.ref.freeze", "_autosummary/jax.ref.get", "_autosummary/jax.ref.set", "_autosummary/jax.ref.swap", "_autosummary/jax.scipy.cluster.vq.vq", "_autosummary/jax.scipy.fft.dct", "_autosummary/jax.scipy.fft.dctn", "_autosummary/jax.scipy.fft.idct", "_autosummary/jax.scipy.fft.idctn", "_autosummary/jax.scipy.integrate.trapezoid", "_autosummary/jax.scipy.interpolate.RegularGridInterpolator", "_autosummary/jax.scipy.linalg.block_diag", "_autosummary/jax.scipy.linalg.cho_factor", "_autosummary/jax.scipy.linalg.cho_solve", "_autosummary/jax.scipy.linalg.cholesky", "_autosummary/jax.scipy.linalg.det", "_autosummary/jax.scipy.linalg.eigh", "_autosummary/jax.scipy.linalg.eigh_tridiagonal", "_autosummary/jax.scipy.linalg.expm", "_autosummary/jax.scipy.linalg.expm_frechet", "_autosummary/jax.scipy.linalg.funm", "_autosummary/jax.scipy.linalg.hessenberg", "_autosummary/jax.scipy.linalg.hilbert", "_autosummary/jax.scipy.linalg.inv", "_autosummary/jax.scipy.linalg.lu", "_autosummary/jax.scipy.linalg.lu_factor", "_autosummary/jax.scipy.linalg.lu_solve", "_autosummary/jax.scipy.linalg.pascal", "_autosummary/jax.scipy.linalg.polar", "_autosummary/jax.scipy.linalg.qr", "_autosummary/jax.scipy.linalg.rsf2csf", "_autosummary/jax.scipy.linalg.schur", "_autosummary/jax.scipy.linalg.solve", "_autosummary/jax.scipy.linalg.solve_triangular", "_autosummary/jax.scipy.linalg.sqrtm", "_autosummary/jax.scipy.linalg.svd", "_autosummary/jax.scipy.linalg.toeplitz", "_autosummary/jax.scipy.ndimage.map_coordinates", "_autosummary/jax.scipy.optimize.OptimizeResults", "_autosummary/jax.scipy.optimize.minimize", "_autosummary/jax.scipy.signal.convolve", "_autosummary/jax.scipy.signal.convolve2d", "_autosummary/jax.scipy.signal.correlate", "_autosummary/jax.scipy.signal.correlate2d", "_autosummary/jax.scipy.signal.csd", "_autosummary/jax.scipy.signal.detrend", "_autosummary/jax.scipy.signal.fftconvolve", "_autosummary/jax.scipy.signal.istft", "_autosummary/jax.scipy.signal.stft", "_autosummary/jax.scipy.signal.welch", "_autosummary/jax.scipy.sparse.linalg.bicgstab", "_autosummary/jax.scipy.sparse.linalg.cg", "_autosummary/jax.scipy.sparse.linalg.gmres", "_autosummary/jax.scipy.spatial.transform.Rotation", "_autosummary/jax.scipy.spatial.transform.Slerp", "_autosummary/jax.scipy.special.bernoulli", "_autosummary/jax.scipy.special.beta", "_autosummary/jax.scipy.special.betainc", "_autosummary/jax.scipy.special.betaln", "_autosummary/jax.scipy.special.digamma", "_autosummary/jax.scipy.special.entr", "_autosummary/jax.scipy.special.erf", "_autosummary/jax.scipy.special.erfc", "_autosummary/jax.scipy.special.erfinv", "_autosummary/jax.scipy.special.exp1", "_autosummary/jax.scipy.special.expi", "_autosummary/jax.scipy.special.expit", "_autosummary/jax.scipy.special.expn", "_autosummary/jax.scipy.special.factorial", "_autosummary/jax.scipy.special.fresnel", "_autosummary/jax.scipy.special.gamma", "_autosummary/jax.scipy.special.gammainc", "_autosummary/jax.scipy.special.gammaincc", "_autosummary/jax.scipy.special.gammaln", "_autosummary/jax.scipy.special.gammasgn", "_autosummary/jax.scipy.special.hyp1f1", "_autosummary/jax.scipy.special.hyp2f1", "_autosummary/jax.scipy.special.i0", "_autosummary/jax.scipy.special.i0e", "_autosummary/jax.scipy.special.i1", "_autosummary/jax.scipy.special.i1e", "_autosummary/jax.scipy.special.kl_div", "_autosummary/jax.scipy.special.log_ndtr", "_autosummary/jax.scipy.special.log_softmax", "_autosummary/jax.scipy.special.logit", "_autosummary/jax.scipy.special.logsumexp", "_autosummary/jax.scipy.special.lpmn", "_autosummary/jax.scipy.special.lpmn_values", "_autosummary/jax.scipy.special.multigammaln", "_autosummary/jax.scipy.special.ndtr", "_autosummary/jax.scipy.special.ndtri", "_autosummary/jax.scipy.special.poch", "_autosummary/jax.scipy.special.polygamma", "_autosummary/jax.scipy.special.rel_entr", "_autosummary/jax.scipy.special.softmax", "_autosummary/jax.scipy.special.spence", "_autosummary/jax.scipy.special.sph_harm", "_autosummary/jax.scipy.special.xlog1py", "_autosummary/jax.scipy.special.xlogy", "_autosummary/jax.scipy.special.zeta", "_autosummary/jax.scipy.stats.bernoulli.cdf", "_autosummary/jax.scipy.stats.bernoulli.logpmf", "_autosummary/jax.scipy.stats.bernoulli.pmf", "_autosummary/jax.scipy.stats.bernoulli.ppf", "_autosummary/jax.scipy.stats.beta.cdf", "_autosummary/jax.scipy.stats.beta.logcdf", "_autosummary/jax.scipy.stats.beta.logpdf", "_autosummary/jax.scipy.stats.beta.logsf", "_autosummary/jax.scipy.stats.beta.pdf", "_autosummary/jax.scipy.stats.beta.sf", "_autosummary/jax.scipy.stats.betabinom.logpmf", "_autosummary/jax.scipy.stats.betabinom.pmf", "_autosummary/jax.scipy.stats.binom.logpmf", "_autosummary/jax.scipy.stats.binom.pmf", "_autosummary/jax.scipy.stats.cauchy.cdf", "_autosummary/jax.scipy.stats.cauchy.isf", "_autosummary/jax.scipy.stats.cauchy.logcdf", "_autosummary/jax.scipy.stats.cauchy.logpdf", "_autosummary/jax.scipy.stats.cauchy.logsf", "_autosummary/jax.scipy.stats.cauchy.pdf", "_autosummary/jax.scipy.stats.cauchy.ppf", "_autosummary/jax.scipy.stats.cauchy.sf", "_autosummary/jax.scipy.stats.chi2.cdf", "_autosummary/jax.scipy.stats.chi2.logcdf", "_autosummary/jax.scipy.stats.chi2.logpdf", "_autosummary/jax.scipy.stats.chi2.logsf", "_autosummary/jax.scipy.stats.chi2.pdf", "_autosummary/jax.scipy.stats.chi2.sf", "_autosummary/jax.scipy.stats.dirichlet.logpdf", "_autosummary/jax.scipy.stats.dirichlet.pdf", "_autosummary/jax.scipy.stats.expon.cdf", "_autosummary/jax.scipy.stats.expon.logcdf", "_autosummary/jax.scipy.stats.expon.logpdf", "_autosummary/jax.scipy.stats.expon.logsf", "_autosummary/jax.scipy.stats.expon.pdf", "_autosummary/jax.scipy.stats.expon.ppf", "_autosummary/jax.scipy.stats.expon.sf", "_autosummary/jax.scipy.stats.gamma.cdf", "_autosummary/jax.scipy.stats.gamma.logcdf", "_autosummary/jax.scipy.stats.gamma.logpdf", "_autosummary/jax.scipy.stats.gamma.logsf", "_autosummary/jax.scipy.stats.gamma.pdf", "_autosummary/jax.scipy.stats.gamma.sf", "_autosummary/jax.scipy.stats.gaussian_kde", "_autosummary/jax.scipy.stats.gaussian_kde.evaluate", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_box_1d", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_gaussian", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_kde", "_autosummary/jax.scipy.stats.gaussian_kde.logpdf", "_autosummary/jax.scipy.stats.gaussian_kde.pdf", "_autosummary/jax.scipy.stats.gaussian_kde.resample", "_autosummary/jax.scipy.stats.gennorm.cdf", "_autosummary/jax.scipy.stats.gennorm.logpdf", "_autosummary/jax.scipy.stats.gennorm.pdf", "_autosummary/jax.scipy.stats.geom.logpmf", "_autosummary/jax.scipy.stats.geom.pmf", "_autosummary/jax.scipy.stats.gumbel_l.cdf", "_autosummary/jax.scipy.stats.gumbel_l.logcdf", "_autosummary/jax.scipy.stats.gumbel_l.logpdf", "_autosummary/jax.scipy.stats.gumbel_l.logsf", "_autosummary/jax.scipy.stats.gumbel_l.pdf", "_autosummary/jax.scipy.stats.gumbel_l.ppf", "_autosummary/jax.scipy.stats.gumbel_l.sf", "_autosummary/jax.scipy.stats.gumbel_r.cdf", "_autosummary/jax.scipy.stats.gumbel_r.logcdf", "_autosummary/jax.scipy.stats.gumbel_r.logpdf", "_autosummary/jax.scipy.stats.gumbel_r.logsf", "_autosummary/jax.scipy.stats.gumbel_r.pdf", "_autosummary/jax.scipy.stats.gumbel_r.ppf", "_autosummary/jax.scipy.stats.gumbel_r.sf", "_autosummary/jax.scipy.stats.laplace.cdf", "_autosummary/jax.scipy.stats.laplace.logpdf", "_autosummary/jax.scipy.stats.laplace.pdf", "_autosummary/jax.scipy.stats.logistic.cdf", "_autosummary/jax.scipy.stats.logistic.isf", "_autosummary/jax.scipy.stats.logistic.logpdf", "_autosummary/jax.scipy.stats.logistic.pdf", "_autosummary/jax.scipy.stats.logistic.ppf", "_autosummary/jax.scipy.stats.logistic.sf", "_autosummary/jax.scipy.stats.mode", "_autosummary/jax.scipy.stats.multinomial.logpmf", "_autosummary/jax.scipy.stats.multinomial.pmf", "_autosummary/jax.scipy.stats.multivariate_normal.logpdf", "_autosummary/jax.scipy.stats.multivariate_normal.pdf", "_autosummary/jax.scipy.stats.nbinom.logpmf", "_autosummary/jax.scipy.stats.nbinom.pmf", "_autosummary/jax.scipy.stats.norm.cdf", "_autosummary/jax.scipy.stats.norm.isf", "_autosummary/jax.scipy.stats.norm.logcdf", "_autosummary/jax.scipy.stats.norm.logpdf", "_autosummary/jax.scipy.stats.norm.logsf", "_autosummary/jax.scipy.stats.norm.pdf", "_autosummary/jax.scipy.stats.norm.ppf", "_autosummary/jax.scipy.stats.norm.sf", "_autosummary/jax.scipy.stats.pareto.logpdf", "_autosummary/jax.scipy.stats.pareto.pdf", "_autosummary/jax.scipy.stats.poisson.cdf", "_autosummary/jax.scipy.stats.poisson.logpmf", "_autosummary/jax.scipy.stats.poisson.pmf", "_autosummary/jax.scipy.stats.rankdata", "_autosummary/jax.scipy.stats.sem", "_autosummary/jax.scipy.stats.t.logpdf", "_autosummary/jax.scipy.stats.t.pdf", "_autosummary/jax.scipy.stats.truncnorm.cdf", "_autosummary/jax.scipy.stats.truncnorm.logcdf", "_autosummary/jax.scipy.stats.truncnorm.logpdf", "_autosummary/jax.scipy.stats.truncnorm.logsf", "_autosummary/jax.scipy.stats.truncnorm.pdf", "_autosummary/jax.scipy.stats.truncnorm.sf", "_autosummary/jax.scipy.stats.uniform.cdf", "_autosummary/jax.scipy.stats.uniform.logpdf", "_autosummary/jax.scipy.stats.uniform.pdf", "_autosummary/jax.scipy.stats.uniform.ppf", "_autosummary/jax.scipy.stats.vonmises.logpdf", "_autosummary/jax.scipy.stats.vonmises.pdf", "_autosummary/jax.scipy.stats.wrapcauchy.logpdf", "_autosummary/jax.scipy.stats.wrapcauchy.pdf", "_autosummary/jax.shard_map", "_autosummary/jax.smap", "_autosummary/jax.test_util.check_grads", "_autosummary/jax.test_util.check_jvp", "_autosummary/jax.test_util.check_vjp", "_autosummary/jax.transfer_guard", "_autosummary/jax.tree.all", "_autosummary/jax.tree.broadcast", "_autosummary/jax.tree.flatten", "_autosummary/jax.tree.flatten_with_path", "_autosummary/jax.tree.leaves", "_autosummary/jax.tree.leaves_with_path", "_autosummary/jax.tree.map", "_autosummary/jax.tree.map_with_path", "_autosummary/jax.tree.reduce", "_autosummary/jax.tree.reduce_associative", "_autosummary/jax.tree.structure", "_autosummary/jax.tree.transpose", "_autosummary/jax.tree.unflatten", "_autosummary/jax.tree_util.KeyEntry", "_autosummary/jax.tree_util.KeyPath", "_autosummary/jax.tree_util.Partial", "_autosummary/jax.tree_util.all_leaves", "_autosummary/jax.tree_util.keystr", "_autosummary/jax.tree_util.register_dataclass", "_autosummary/jax.tree_util.register_pytree_node", "_autosummary/jax.tree_util.register_pytree_node_class", "_autosummary/jax.tree_util.register_pytree_with_keys", "_autosummary/jax.tree_util.register_pytree_with_keys_class", "_autosummary/jax.tree_util.register_static", "_autosummary/jax.tree_util.tree_all", "_autosummary/jax.tree_util.tree_broadcast", "_autosummary/jax.tree_util.tree_flatten", "_autosummary/jax.tree_util.tree_flatten_with_path", "_autosummary/jax.tree_util.tree_leaves", "_autosummary/jax.tree_util.tree_leaves_with_path", "_autosummary/jax.tree_util.tree_map", "_autosummary/jax.tree_util.tree_map_with_path", "_autosummary/jax.tree_util.tree_reduce", "_autosummary/jax.tree_util.tree_reduce_associative", "_autosummary/jax.tree_util.tree_structure", "_autosummary/jax.tree_util.tree_transpose", "_autosummary/jax.tree_util.tree_unflatten", "_autosummary/jax.tree_util.treedef_children", "_autosummary/jax.tree_util.treedef_is_leaf", "_autosummary/jax.tree_util.treedef_tuple", "_autosummary/jax.typing.ArrayLike", "_autosummary/jax.typing.DTypeLike", "_autosummary/jax.value_and_grad", "_autosummary/jax.vjp", "_autosummary/jax.vmap", "_autosummary/jaxlib.xla_client.register_custom_call_target", "_tutorials/advanced-compilation", "_tutorials/advanced-debugging", "_tutorials/index", "_tutorials/parallelism", "_tutorials/profiling-and-performance", "_tutorials/simple-neural-network", "about", "advanced-autodiff", "advanced_guides", "aot", "api_compatibility", "array_refs", "async_dispatch", "autodidax", "autodidax2_part1", "automatic-differentiation", "automatic-vectorization", "beginner_guide", "building_on_jax", "changelog", "concurrency", "config_options", "contributing", "contributor_guide", "control-flow", "debugging", "debugging/checkify_guide", "debugging/flags", "debugging/print_breakpoint", "default_dtypes", "deprecation", "developer", "device_memory_profiling", "direct_linearize_migration", "distributed_data_loading", "errors", "export/export", "export/index", "export/jax2tf", "export/shape_poly", "extensions", "external-callbacks", "faq", "ffi", "glossary", "gpu_memory_allocation", "gpu_performance_tips", "gradient-checkpointing", "index", "installation", "internals/constants", "internals/index", "investigating_a_regression", "jax", "jax-101", "jax-primitives", "jax.debug", "jax.distributed", "jax.dlpack", "jax.dtypes", "jax.example_libraries", "jax.example_libraries.optimizers", "jax.example_libraries.stax", "jax.experimental", "jax.experimental.checkify", "jax.experimental.compilation_cache", "jax.experimental.custom_dce", "jax.experimental.custom_partitioning", "jax.experimental.jet", "jax.experimental.key_reuse", "jax.experimental.mesh_utils", "jax.experimental.multihost_utils", "jax.experimental.pallas", "jax.experimental.pallas.mosaic_gpu", "jax.experimental.pallas.tpu", "jax.experimental.pallas.triton", "jax.experimental.pjit", "jax.experimental.serialize_executable", "jax.experimental.shard_map", "jax.experimental.sparse", "jax.export", "jax.extend", "jax.extend.core", "jax.extend.linear_util", "jax.extend.mlir", "jax.extend.random", "jax.ffi", "jax.flatten_util", "jax.image", "jax.lax", "jax.lib", "jax.nn", "jax.nn.initializers", "jax.numpy", "jax.ops", "jax.profiler", "jax.random", "jax.ref", "jax.scipy", "jax.sharding", "jax.stages", "jax.test_util", "jax.tree", "jax.tree_util", "jax.typing", "jax_array_migration", "jaxpr", "jep/10657-sequencing-effects", "jep/11830-new-remat-checkpoint", "jep/12049-type-annotations", "jep/14273-shard-map", "jep/15856-jex", "jep/17111-shmap-transpose", "jep/18137-numpy-scipy-scope", "jep/2026-custom-derivatives", "jep/25516-effver", "jep/263-prng", "jep/28661-jax-array-protocol", "jep/4008-custom-vjp-update", "jep/4410-omnistaging", "jep/9263-typed-keys", "jep/9407-type-promotion", "jep/9419-jax-versioning", "jep/index", "jit-compilation", "key-concepts", "multi_process", "notebooks/Common_Gotchas_in_JAX", "notebooks/Custom_derivative_rules_for_Python_code", "notebooks/Distributed_arrays_and_automatic_parallelization", "notebooks/Neural_Network_and_Data_Loading", "notebooks/Writing_custom_interpreters_in_Jax", "notebooks/autodiff_cookbook", "notebooks/autodiff_remat", "notebooks/convolutions", "notebooks/explicit-sharding", "notebooks/host-offloading", "notebooks/layout", "notebooks/neural_network_with_tfds_data", "notebooks/shard_map", "notebooks/thinking_in_jax", "notebooks/vmapped_log_probs", "notes", "pallas/CHANGELOG", "pallas/design/async_note", "pallas/design/design", "pallas/design/index", "pallas/gpu/index", "pallas/gpu/pipelining", "pallas/gpu/reference", "pallas/grid_blockspec", "pallas/index", "pallas/pipelining", "pallas/quickstart", "pallas/tpu/details", "pallas/tpu/distributed", "pallas/tpu/index", "pallas/tpu/matmul", "pallas/tpu/pipelining", "pallas/tpu/sparse", "persistent_compilation_cache", "profiling", "pytrees", "random-numbers", "rank_promotion_warning", "sharded-computation", "shardy_jax_migration", "stateful-computations", "the-training-cookbook", "transfer_guard", "type_promotion", "working-with-pytrees", "xla_flags"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_autosummary/jax.Array.rst", "_autosummary/jax.Array.T.rst", "_autosummary/jax.Array.addressable_shards.rst", "_autosummary/jax.Array.all.rst", "_autosummary/jax.Array.any.rst", "_autosummary/jax.Array.argmax.rst", "_autosummary/jax.Array.argmin.rst", "_autosummary/jax.Array.argpartition.rst", "_autosummary/jax.Array.argsort.rst", "_autosummary/jax.Array.astype.rst", "_autosummary/jax.Array.at.rst", "_autosummary/jax.Array.choose.rst", "_autosummary/jax.Array.clip.rst", "_autosummary/jax.Array.committed.rst", "_autosummary/jax.Array.compress.rst", "_autosummary/jax.Array.conj.rst", "_autosummary/jax.Array.conjugate.rst", "_autosummary/jax.Array.copy.rst", "_autosummary/jax.Array.copy_to_host_async.rst", "_autosummary/jax.Array.cumprod.rst", "_autosummary/jax.Array.cumsum.rst", "_autosummary/jax.Array.device.rst", "_autosummary/jax.Array.diagonal.rst", "_autosummary/jax.Array.dot.rst", "_autosummary/jax.Array.dtype.rst", "_autosummary/jax.Array.flat.rst", "_autosummary/jax.Array.flatten.rst", "_autosummary/jax.Array.global_shards.rst", "_autosummary/jax.Array.imag.rst", "_autosummary/jax.Array.is_fully_addressable.rst", "_autosummary/jax.Array.is_fully_replicated.rst", "_autosummary/jax.Array.item.rst", "_autosummary/jax.Array.itemsize.rst", "_autosummary/jax.Array.mT.rst", "_autosummary/jax.Array.max.rst", "_autosummary/jax.Array.mean.rst", "_autosummary/jax.Array.min.rst", "_autosummary/jax.Array.nbytes.rst", "_autosummary/jax.Array.ndim.rst", "_autosummary/jax.Array.nonzero.rst", "_autosummary/jax.Array.prod.rst", "_autosummary/jax.Array.ptp.rst", "_autosummary/jax.Array.ravel.rst", "_autosummary/jax.Array.real.rst", "_autosummary/jax.Array.repeat.rst", "_autosummary/jax.Array.reshape.rst", "_autosummary/jax.Array.round.rst", "_autosummary/jax.Array.searchsorted.rst", "_autosummary/jax.Array.shape.rst", "_autosummary/jax.Array.sharding.rst", "_autosummary/jax.Array.size.rst", "_autosummary/jax.Array.sort.rst", "_autosummary/jax.Array.squeeze.rst", "_autosummary/jax.Array.std.rst", "_autosummary/jax.Array.sum.rst", "_autosummary/jax.Array.swapaxes.rst", "_autosummary/jax.Array.take.rst", "_autosummary/jax.Array.to_device.rst", "_autosummary/jax.Array.trace.rst", "_autosummary/jax.Array.transpose.rst", "_autosummary/jax.Array.var.rst", "_autosummary/jax.Array.view.rst", "_autosummary/jax.Device.rst", "_autosummary/jax.ShapeDtypeStruct.rst", "_autosummary/jax.block_until_ready.rst", "_autosummary/jax.check_tracer_leaks.rst", "_autosummary/jax.checking_leaks.rst", "_autosummary/jax.checkpoint.rst", "_autosummary/jax.clear_caches.rst", "_autosummary/jax.closure_convert.rst", "_autosummary/jax.config.rst", "_autosummary/jax.copy_to_host_async.rst", "_autosummary/jax.custom_batching.custom_vmap.rst", "_autosummary/jax.custom_batching.custom_vmap.def_vmap.rst", "_autosummary/jax.custom_batching.sequential_vmap.rst", "_autosummary/jax.custom_gradient.rst", "_autosummary/jax.custom_jvp.rst", "_autosummary/jax.custom_jvp.defjvp.rst", "_autosummary/jax.custom_jvp.defjvps.rst", "_autosummary/jax.custom_vjp.rst", "_autosummary/jax.custom_vjp.defvjp.rst", "_autosummary/jax.debug.breakpoint.rst", "_autosummary/jax.debug.callback.rst", "_autosummary/jax.debug.inspect_array_sharding.rst", "_autosummary/jax.debug.print.rst", "_autosummary/jax.debug.visualize_array_sharding.rst", "_autosummary/jax.debug.visualize_sharding.rst", "_autosummary/jax.debug_infs.rst", "_autosummary/jax.debug_nans.rst", "_autosummary/jax.default_backend.rst", "_autosummary/jax.default_device.rst", "_autosummary/jax.default_matmul_precision.rst", "_autosummary/jax.default_prng_impl.rst", "_autosummary/jax.device_count.rst", "_autosummary/jax.device_get.rst", "_autosummary/jax.device_put.rst", "_autosummary/jax.devices.rst", "_autosummary/jax.disable_jit.rst", "_autosummary/jax.distributed.initialize.rst", "_autosummary/jax.distributed.shutdown.rst", "_autosummary/jax.dlpack.from_dlpack.rst", "_autosummary/jax.dlpack.is_supported_dtype.rst", "_autosummary/jax.dtypes.bfloat16.rst", "_autosummary/jax.dtypes.canonicalize_dtype.rst", "_autosummary/jax.dtypes.float0.rst", "_autosummary/jax.dtypes.issubdtype.rst", "_autosummary/jax.dtypes.prng_key.rst", "_autosummary/jax.dtypes.result_type.rst", "_autosummary/jax.dtypes.scalar_type_of.rst", "_autosummary/jax.enable_checks.rst", "_autosummary/jax.enable_custom_prng.rst", "_autosummary/jax.enable_custom_vjp_by_custom_transpose.rst", "_autosummary/jax.ensure_compile_time_eval.rst", "_autosummary/jax.eval_shape.rst", "_autosummary/jax.experimental.checkify.Error.rst", "_autosummary/jax.experimental.checkify.JaxRuntimeError.rst", "_autosummary/jax.experimental.checkify.all_checks.rst", "_autosummary/jax.experimental.checkify.automatic_checks.rst", "_autosummary/jax.experimental.checkify.check.rst", "_autosummary/jax.experimental.checkify.check_error.rst", "_autosummary/jax.experimental.checkify.checkify.rst", "_autosummary/jax.experimental.checkify.div_checks.rst", "_autosummary/jax.experimental.checkify.float_checks.rst", "_autosummary/jax.experimental.checkify.index_checks.rst", "_autosummary/jax.experimental.checkify.nan_checks.rst", "_autosummary/jax.experimental.checkify.user_checks.rst", "_autosummary/jax.experimental.custom_dce.custom_dce.rst", "_autosummary/jax.experimental.custom_dce.custom_dce.def_dce.rst", "_autosummary/jax.experimental.disable_x64.rst", "_autosummary/jax.experimental.enable_x64.rst", "_autosummary/jax.experimental.io_callback.rst", "_autosummary/jax.experimental.mesh_utils.create_device_mesh.rst", "_autosummary/jax.experimental.mesh_utils.create_hybrid_device_mesh.rst", "_autosummary/jax.experimental.multihost_utils.assert_equal.rst", "_autosummary/jax.experimental.multihost_utils.broadcast_one_to_all.rst", "_autosummary/jax.experimental.multihost_utils.global_array_to_host_local_array.rst", "_autosummary/jax.experimental.multihost_utils.host_local_array_to_global_array.rst", "_autosummary/jax.experimental.multihost_utils.process_allgather.rst", "_autosummary/jax.experimental.multihost_utils.sync_global_devices.rst", "_autosummary/jax.experimental.pallas.BlockSpec.rst", "_autosummary/jax.experimental.pallas.GridSpec.rst", "_autosummary/jax.experimental.pallas.Slice.rst", "_autosummary/jax.experimental.pallas.broadcast_to.rst", "_autosummary/jax.experimental.pallas.debug_print.rst", "_autosummary/jax.experimental.pallas.dot.rst", "_autosummary/jax.experimental.pallas.load.rst", "_autosummary/jax.experimental.pallas.max_contiguous.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.ACC.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.Barrier.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.BlockSpec.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.CompilerParams.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.GMEM.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.Layout.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.MemorySpace.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.SMEM.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.SemaphoreSignal.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.SwizzleTransform.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.TilingTransform.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.TransposeTransform.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.async_load_tmem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.async_store_tmem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.barrier_arrive.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.barrier_wait.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.commit_smem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.commit_tmem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.copy_gmem_to_smem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.copy_smem_to_gmem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.emit_pipeline.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.layout_cast.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.semaphore_signal_parallel.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.set_max_registers.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.wait_load_tmem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.wait_smem_to_gmem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.wgmma.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.wgmma_wait.rst", "_autosummary/jax.experimental.pallas.multiple_of.rst", "_autosummary/jax.experimental.pallas.num_programs.rst", "_autosummary/jax.experimental.pallas.pallas_call.rst", "_autosummary/jax.experimental.pallas.program_id.rst", "_autosummary/jax.experimental.pallas.run_scoped.rst", "_autosummary/jax.experimental.pallas.store.rst", "_autosummary/jax.experimental.pallas.swap.rst", "_autosummary/jax.experimental.pallas.triton.CompilerParams.rst", "_autosummary/jax.experimental.pallas.triton.approx_tanh.rst", "_autosummary/jax.experimental.pallas.triton.atomic_add.rst", "_autosummary/jax.experimental.pallas.triton.atomic_and.rst", "_autosummary/jax.experimental.pallas.triton.atomic_cas.rst", "_autosummary/jax.experimental.pallas.triton.atomic_max.rst", "_autosummary/jax.experimental.pallas.triton.atomic_min.rst", "_autosummary/jax.experimental.pallas.triton.atomic_or.rst", "_autosummary/jax.experimental.pallas.triton.atomic_xchg.rst", "_autosummary/jax.experimental.pallas.triton.atomic_xor.rst", "_autosummary/jax.experimental.pallas.triton.debug_barrier.rst", "_autosummary/jax.experimental.pallas.triton.elementwise_inline_asm.rst", "_autosummary/jax.experimental.pallas.when.rst", "_autosummary/jax.experimental.serialize_executable.deserialize_and_load.rst", "_autosummary/jax.experimental.serialize_executable.serialize.rst", "_autosummary/jax.experimental.shard_map.shard_map.rst", "_autosummary/jax.experimental.sparse.BCOO.rst", "_autosummary/jax.experimental.sparse.BCSR.rst", "_autosummary/jax.experimental.sparse.COO.rst", "_autosummary/jax.experimental.sparse.CSC.rst", "_autosummary/jax.experimental.sparse.CSR.rst", "_autosummary/jax.experimental.sparse.JAXSparse.rst", "_autosummary/jax.experimental.sparse.bcoo_broadcast_in_dim.rst", "_autosummary/jax.experimental.sparse.bcoo_concatenate.rst", "_autosummary/jax.experimental.sparse.bcoo_dot_general.rst", "_autosummary/jax.experimental.sparse.bcoo_dot_general_sampled.rst", "_autosummary/jax.experimental.sparse.bcoo_dynamic_slice.rst", "_autosummary/jax.experimental.sparse.bcoo_extract.rst", "_autosummary/jax.experimental.sparse.bcoo_fromdense.rst", "_autosummary/jax.experimental.sparse.bcoo_gather.rst", "_autosummary/jax.experimental.sparse.bcoo_multiply_dense.rst", "_autosummary/jax.experimental.sparse.bcoo_multiply_sparse.rst", "_autosummary/jax.experimental.sparse.bcoo_reduce_sum.rst", "_autosummary/jax.experimental.sparse.bcoo_reshape.rst", "_autosummary/jax.experimental.sparse.bcoo_slice.rst", "_autosummary/jax.experimental.sparse.bcoo_sort_indices.rst", "_autosummary/jax.experimental.sparse.bcoo_squeeze.rst", "_autosummary/jax.experimental.sparse.bcoo_sum_duplicates.rst", "_autosummary/jax.experimental.sparse.bcoo_todense.rst", "_autosummary/jax.experimental.sparse.bcoo_transpose.rst", "_autosummary/jax.experimental.sparse.bcoo_update_layout.rst", "_autosummary/jax.experimental.sparse.bcsr_dot_general.rst", "_autosummary/jax.experimental.sparse.bcsr_extract.rst", "_autosummary/jax.experimental.sparse.bcsr_fromdense.rst", "_autosummary/jax.experimental.sparse.bcsr_todense.rst", "_autosummary/jax.experimental.sparse.coo_fromdense.rst", "_autosummary/jax.experimental.sparse.coo_matmat.rst", "_autosummary/jax.experimental.sparse.coo_matvec.rst", "_autosummary/jax.experimental.sparse.coo_todense.rst", "_autosummary/jax.experimental.sparse.csr_fromdense.rst", "_autosummary/jax.experimental.sparse.csr_matmat.rst", "_autosummary/jax.experimental.sparse.csr_matvec.rst", "_autosummary/jax.experimental.sparse.csr_todense.rst", "_autosummary/jax.experimental.sparse.empty.rst", "_autosummary/jax.experimental.sparse.eye.rst", "_autosummary/jax.experimental.sparse.grad.rst", "_autosummary/jax.experimental.sparse.linalg.lobpcg_standard.rst", "_autosummary/jax.experimental.sparse.linalg.spsolve.rst", "_autosummary/jax.experimental.sparse.random_bcoo.rst", "_autosummary/jax.experimental.sparse.sparsify.rst", "_autosummary/jax.experimental.sparse.todense.rst", "_autosummary/jax.experimental.sparse.value_and_grad.rst", "_autosummary/jax.export.SymbolicScope.rst", "_autosummary/jax.export.default_export_platform.rst", "_autosummary/jax.export.deserialize.rst", "_autosummary/jax.export.export.rst", "_autosummary/jax.export.is_symbolic_dim.rst", "_autosummary/jax.export.maximum_supported_calling_convention_version.rst", "_autosummary/jax.export.minimum_supported_calling_convention_version.rst", "_autosummary/jax.export.register_namedtuple_serialization.rst", "_autosummary/jax.export.register_pytree_node_serialization.rst", "_autosummary/jax.export.symbolic_args_specs.rst", "_autosummary/jax.export.symbolic_shape.rst", "_autosummary/jax.extend.core.ClosedJaxpr.rst", "_autosummary/jax.extend.core.Jaxpr.rst", "_autosummary/jax.extend.core.JaxprEqn.rst", "_autosummary/jax.extend.core.Literal.rst", "_autosummary/jax.extend.core.Primitive.rst", "_autosummary/jax.extend.core.Token.rst", "_autosummary/jax.extend.core.Var.rst", "_autosummary/jax.extend.core.array_types.rst", "_autosummary/jax.extend.core.jaxpr_as_fun.rst", "_autosummary/jax.extend.core.primitives.rst", "_autosummary/jax.extend.linear_util.StoreException.rst", "_autosummary/jax.extend.linear_util.WrappedFun.rst", "_autosummary/jax.extend.linear_util.cache.rst", "_autosummary/jax.extend.linear_util.merge_linear_aux.rst", "_autosummary/jax.extend.linear_util.transformation.rst", "_autosummary/jax.extend.linear_util.transformation_with_aux.rst", "_autosummary/jax.extend.linear_util.wrap_init.rst", "_autosummary/jax.extend.mlir.dialects.rst", "_autosummary/jax.extend.mlir.ir.rst", "_autosummary/jax.extend.mlir.passmanager.rst", "_autosummary/jax.extend.random.define_prng_impl.rst", "_autosummary/jax.extend.random.rbg_prng_impl.rst", "_autosummary/jax.extend.random.seed_with_impl.rst", "_autosummary/jax.extend.random.threefry2x32_p.rst", "_autosummary/jax.extend.random.threefry_2x32.rst", "_autosummary/jax.extend.random.threefry_prng_impl.rst", "_autosummary/jax.extend.random.unsafe_rbg_prng_impl.rst", "_autosummary/jax.ffi.ffi_call.rst", "_autosummary/jax.ffi.ffi_lowering.rst", "_autosummary/jax.ffi.pycapsule.rst", "_autosummary/jax.ffi.register_ffi_target.rst", "_autosummary/jax.ffi.register_ffi_type_id.rst", "_autosummary/jax.flatten_util.ravel_pytree.rst", "_autosummary/jax.grad.rst", "_autosummary/jax.hessian.rst", "_autosummary/jax.image.resize.rst", "_autosummary/jax.image.scale_and_translate.rst", "_autosummary/jax.jacfwd.rst", "_autosummary/jax.jacobian.rst", "_autosummary/jax.jacrev.rst", "_autosummary/jax.jit.rst", "_autosummary/jax.jvp.rst", "_autosummary/jax.lax.abs.rst", "_autosummary/jax.lax.acos.rst", "_autosummary/jax.lax.acosh.rst", "_autosummary/jax.lax.add.rst", "_autosummary/jax.lax.after_all.rst", "_autosummary/jax.lax.all_gather.rst", "_autosummary/jax.lax.all_to_all.rst", "_autosummary/jax.lax.approx_max_k.rst", "_autosummary/jax.lax.approx_min_k.rst", "_autosummary/jax.lax.argmax.rst", "_autosummary/jax.lax.argmin.rst", "_autosummary/jax.lax.asin.rst", "_autosummary/jax.lax.asinh.rst", "_autosummary/jax.lax.associative_scan.rst", "_autosummary/jax.lax.atan.rst", "_autosummary/jax.lax.atan2.rst", "_autosummary/jax.lax.atanh.rst", "_autosummary/jax.lax.axis_index.rst", "_autosummary/jax.lax.axis_size.rst", "_autosummary/jax.lax.batch_matmul.rst", "_autosummary/jax.lax.bessel_i0e.rst", "_autosummary/jax.lax.bessel_i1e.rst", "_autosummary/jax.lax.betainc.rst", "_autosummary/jax.lax.bitcast_convert_type.rst", "_autosummary/jax.lax.bitwise_and.rst", "_autosummary/jax.lax.bitwise_not.rst", "_autosummary/jax.lax.bitwise_or.rst", "_autosummary/jax.lax.bitwise_xor.rst", "_autosummary/jax.lax.broadcast.rst", "_autosummary/jax.lax.broadcast_in_dim.rst", "_autosummary/jax.lax.broadcast_shapes.rst", "_autosummary/jax.lax.broadcast_to_rank.rst", "_autosummary/jax.lax.broadcasted_iota.rst", "_autosummary/jax.lax.cbrt.rst", "_autosummary/jax.lax.ceil.rst", "_autosummary/jax.lax.clamp.rst", "_autosummary/jax.lax.clz.rst", "_autosummary/jax.lax.collapse.rst", "_autosummary/jax.lax.complex.rst", "_autosummary/jax.lax.composite.rst", "_autosummary/jax.lax.concatenate.rst", "_autosummary/jax.lax.cond.rst", "_autosummary/jax.lax.conj.rst", "_autosummary/jax.lax.conv.rst", "_autosummary/jax.lax.conv_dimension_numbers.rst", "_autosummary/jax.lax.conv_general_dilated.rst", "_autosummary/jax.lax.conv_general_dilated_local.rst", "_autosummary/jax.lax.conv_general_dilated_patches.rst", "_autosummary/jax.lax.conv_transpose.rst", "_autosummary/jax.lax.conv_with_general_padding.rst", "_autosummary/jax.lax.convert_element_type.rst", "_autosummary/jax.lax.cos.rst", "_autosummary/jax.lax.cosh.rst", "_autosummary/jax.lax.cumlogsumexp.rst", "_autosummary/jax.lax.cummax.rst", "_autosummary/jax.lax.cummin.rst", "_autosummary/jax.lax.cumprod.rst", "_autosummary/jax.lax.cumsum.rst", "_autosummary/jax.lax.custom_linear_solve.rst", "_autosummary/jax.lax.custom_root.rst", "_autosummary/jax.lax.digamma.rst", "_autosummary/jax.lax.div.rst", "_autosummary/jax.lax.dot.rst", "_autosummary/jax.lax.dot_general.rst", "_autosummary/jax.lax.dynamic_index_in_dim.rst", "_autosummary/jax.lax.dynamic_slice.rst", "_autosummary/jax.lax.dynamic_slice_in_dim.rst", "_autosummary/jax.lax.dynamic_update_index_in_dim.rst", "_autosummary/jax.lax.dynamic_update_slice.rst", "_autosummary/jax.lax.dynamic_update_slice_in_dim.rst", "_autosummary/jax.lax.eq.rst", "_autosummary/jax.lax.erf.rst", "_autosummary/jax.lax.erf_inv.rst", "_autosummary/jax.lax.erfc.rst", "_autosummary/jax.lax.exp.rst", "_autosummary/jax.lax.exp2.rst", "_autosummary/jax.lax.expand_dims.rst", "_autosummary/jax.lax.expm1.rst", "_autosummary/jax.lax.fft.rst", "_autosummary/jax.lax.floor.rst", "_autosummary/jax.lax.fori_loop.rst", "_autosummary/jax.lax.full.rst", "_autosummary/jax.lax.full_like.rst", "_autosummary/jax.lax.gather.rst", "_autosummary/jax.lax.ge.rst", "_autosummary/jax.lax.gt.rst", "_autosummary/jax.lax.igamma.rst", "_autosummary/jax.lax.igammac.rst", "_autosummary/jax.lax.imag.rst", "_autosummary/jax.lax.index_in_dim.rst", "_autosummary/jax.lax.index_take.rst", "_autosummary/jax.lax.integer_pow.rst", "_autosummary/jax.lax.iota.rst", "_autosummary/jax.lax.is_finite.rst", "_autosummary/jax.lax.le.rst", "_autosummary/jax.lax.lgamma.rst", "_autosummary/jax.lax.linalg.SvdAlgorithm.rst", "_autosummary/jax.lax.linalg.cholesky.rst", "_autosummary/jax.lax.linalg.cholesky_update.rst", "_autosummary/jax.lax.linalg.eig.rst", "_autosummary/jax.lax.linalg.eigh.rst", "_autosummary/jax.lax.linalg.hessenberg.rst", "_autosummary/jax.lax.linalg.householder_product.rst", "_autosummary/jax.lax.linalg.lu.rst", "_autosummary/jax.lax.linalg.lu_pivots_to_permutation.rst", "_autosummary/jax.lax.linalg.qdwh.rst", "_autosummary/jax.lax.linalg.qr.rst", "_autosummary/jax.lax.linalg.schur.rst", "_autosummary/jax.lax.linalg.svd.rst", "_autosummary/jax.lax.linalg.symmetric_product.rst", "_autosummary/jax.lax.linalg.triangular_solve.rst", "_autosummary/jax.lax.linalg.tridiagonal.rst", "_autosummary/jax.lax.linalg.tridiagonal_solve.rst", "_autosummary/jax.lax.log.rst", "_autosummary/jax.lax.log1p.rst", "_autosummary/jax.lax.logistic.rst", "_autosummary/jax.lax.lt.rst", "_autosummary/jax.lax.map.rst", "_autosummary/jax.lax.max.rst", "_autosummary/jax.lax.min.rst", "_autosummary/jax.lax.mul.rst", "_autosummary/jax.lax.ne.rst", "_autosummary/jax.lax.neg.rst", "_autosummary/jax.lax.nextafter.rst", "_autosummary/jax.lax.optimization_barrier.rst", "_autosummary/jax.lax.pad.rst", "_autosummary/jax.lax.platform_dependent.rst", "_autosummary/jax.lax.pmax.rst", "_autosummary/jax.lax.pmean.rst", "_autosummary/jax.lax.pmin.rst", "_autosummary/jax.lax.polygamma.rst", "_autosummary/jax.lax.population_count.rst", "_autosummary/jax.lax.pow.rst", "_autosummary/jax.lax.ppermute.rst", "_autosummary/jax.lax.precv.rst", "_autosummary/jax.lax.psend.rst", "_autosummary/jax.lax.pshuffle.rst", "_autosummary/jax.lax.psum.rst", "_autosummary/jax.lax.psum_scatter.rst", "_autosummary/jax.lax.pswapaxes.rst", "_autosummary/jax.lax.random_gamma_grad.rst", "_autosummary/jax.lax.real.rst", "_autosummary/jax.lax.reciprocal.rst", "_autosummary/jax.lax.reduce.rst", "_autosummary/jax.lax.reduce_and.rst", "_autosummary/jax.lax.reduce_max.rst", "_autosummary/jax.lax.reduce_min.rst", "_autosummary/jax.lax.reduce_or.rst", "_autosummary/jax.lax.reduce_precision.rst", "_autosummary/jax.lax.reduce_prod.rst", "_autosummary/jax.lax.reduce_sum.rst", "_autosummary/jax.lax.reduce_window.rst", "_autosummary/jax.lax.reduce_xor.rst", "_autosummary/jax.lax.rem.rst", "_autosummary/jax.lax.reshape.rst", "_autosummary/jax.lax.rev.rst", "_autosummary/jax.lax.rng_bit_generator.rst", "_autosummary/jax.lax.rng_uniform.rst", "_autosummary/jax.lax.round.rst", "_autosummary/jax.lax.rsqrt.rst", "_autosummary/jax.lax.scan.rst", "_autosummary/jax.lax.scatter.rst", "_autosummary/jax.lax.scatter_add.rst", "_autosummary/jax.lax.scatter_apply.rst", "_autosummary/jax.lax.scatter_max.rst", "_autosummary/jax.lax.scatter_min.rst", "_autosummary/jax.lax.scatter_mul.rst", "_autosummary/jax.lax.select.rst", "_autosummary/jax.lax.select_n.rst", "_autosummary/jax.lax.shift_left.rst", "_autosummary/jax.lax.shift_right_arithmetic.rst", "_autosummary/jax.lax.shift_right_logical.rst", "_autosummary/jax.lax.sign.rst", "_autosummary/jax.lax.sin.rst", "_autosummary/jax.lax.sinh.rst", "_autosummary/jax.lax.slice.rst", "_autosummary/jax.lax.slice_in_dim.rst", "_autosummary/jax.lax.sort.rst", "_autosummary/jax.lax.sort_key_val.rst", "_autosummary/jax.lax.split.rst", "_autosummary/jax.lax.sqrt.rst", "_autosummary/jax.lax.square.rst", "_autosummary/jax.lax.squeeze.rst", "_autosummary/jax.lax.stop_gradient.rst", "_autosummary/jax.lax.sub.rst", "_autosummary/jax.lax.switch.rst", "_autosummary/jax.lax.tan.rst", "_autosummary/jax.lax.tanh.rst", "_autosummary/jax.lax.top_k.rst", "_autosummary/jax.lax.transpose.rst", "_autosummary/jax.lax.while_loop.rst", "_autosummary/jax.lax.with_sharding_constraint.rst", "_autosummary/jax.lax.zeros_like_array.rst", "_autosummary/jax.lax.zeta.rst", "_autosummary/jax.lib.xla_bridge.get_backend.rst", "_autosummary/jax.lib.xla_bridge.get_compile_options.rst", "_autosummary/jax.linear_transpose.rst", "_autosummary/jax.linearize.rst", "_autosummary/jax.live_arrays.rst", "_autosummary/jax.local_device_count.rst", "_autosummary/jax.local_devices.rst", "_autosummary/jax.log_compiles.rst", "_autosummary/jax.make_array_from_callback.rst", "_autosummary/jax.make_array_from_process_local_data.rst", "_autosummary/jax.make_array_from_single_device_arrays.rst", "_autosummary/jax.make_jaxpr.rst", "_autosummary/jax.make_mesh.rst", "_autosummary/jax.named_call.rst", "_autosummary/jax.named_scope.rst", "_autosummary/jax.nn.celu.rst", "_autosummary/jax.nn.dot_product_attention.rst", "_autosummary/jax.nn.elu.rst", "_autosummary/jax.nn.gelu.rst", "_autosummary/jax.nn.get_scaled_dot_general_config.rst", "_autosummary/jax.nn.glu.rst", "_autosummary/jax.nn.hard_sigmoid.rst", "_autosummary/jax.nn.hard_silu.rst", "_autosummary/jax.nn.hard_swish.rst", "_autosummary/jax.nn.hard_tanh.rst", "_autosummary/jax.nn.identity.rst", "_autosummary/jax.nn.initializers.constant.rst", "_autosummary/jax.nn.initializers.delta_orthogonal.rst", "_autosummary/jax.nn.initializers.glorot_normal.rst", "_autosummary/jax.nn.initializers.glorot_uniform.rst", "_autosummary/jax.nn.initializers.he_normal.rst", "_autosummary/jax.nn.initializers.he_uniform.rst", "_autosummary/jax.nn.initializers.lecun_normal.rst", "_autosummary/jax.nn.initializers.lecun_uniform.rst", "_autosummary/jax.nn.initializers.normal.rst", "_autosummary/jax.nn.initializers.ones.rst", "_autosummary/jax.nn.initializers.orthogonal.rst", "_autosummary/jax.nn.initializers.truncated_normal.rst", "_autosummary/jax.nn.initializers.uniform.rst", "_autosummary/jax.nn.initializers.variance_scaling.rst", "_autosummary/jax.nn.initializers.zeros.rst", "_autosummary/jax.nn.leaky_relu.rst", "_autosummary/jax.nn.log1mexp.rst", "_autosummary/jax.nn.log_sigmoid.rst", "_autosummary/jax.nn.log_softmax.rst", "_autosummary/jax.nn.logmeanexp.rst", "_autosummary/jax.nn.logsumexp.rst", "_autosummary/jax.nn.mish.rst", "_autosummary/jax.nn.one_hot.rst", "_autosummary/jax.nn.relu.rst", "_autosummary/jax.nn.relu6.rst", "_autosummary/jax.nn.scaled_dot_general.rst", "_autosummary/jax.nn.scaled_matmul.rst", "_autosummary/jax.nn.selu.rst", "_autosummary/jax.nn.sigmoid.rst", "_autosummary/jax.nn.silu.rst", "_autosummary/jax.nn.soft_sign.rst", "_autosummary/jax.nn.softmax.rst", "_autosummary/jax.nn.softplus.rst", "_autosummary/jax.nn.sparse_plus.rst", "_autosummary/jax.nn.sparse_sigmoid.rst", "_autosummary/jax.nn.squareplus.rst", "_autosummary/jax.nn.standardize.rst", "_autosummary/jax.nn.swish.rst", "_autosummary/jax.no_tracing.rst", "_autosummary/jax.numpy.ComplexWarning.rst", "_autosummary/jax.numpy.abs.rst", "_autosummary/jax.numpy.absolute.rst", "_autosummary/jax.numpy.acos.rst", "_autosummary/jax.numpy.acosh.rst", "_autosummary/jax.numpy.add.rst", "_autosummary/jax.numpy.all.rst", "_autosummary/jax.numpy.allclose.rst", "_autosummary/jax.numpy.amax.rst", "_autosummary/jax.numpy.amin.rst", "_autosummary/jax.numpy.angle.rst", "_autosummary/jax.numpy.any.rst", "_autosummary/jax.numpy.append.rst", "_autosummary/jax.numpy.apply_along_axis.rst", "_autosummary/jax.numpy.apply_over_axes.rst", "_autosummary/jax.numpy.arange.rst", "_autosummary/jax.numpy.arccos.rst", "_autosummary/jax.numpy.arccosh.rst", "_autosummary/jax.numpy.arcsin.rst", "_autosummary/jax.numpy.arcsinh.rst", "_autosummary/jax.numpy.arctan.rst", "_autosummary/jax.numpy.arctan2.rst", "_autosummary/jax.numpy.arctanh.rst", "_autosummary/jax.numpy.argmax.rst", "_autosummary/jax.numpy.argmin.rst", "_autosummary/jax.numpy.argpartition.rst", "_autosummary/jax.numpy.argsort.rst", "_autosummary/jax.numpy.argwhere.rst", "_autosummary/jax.numpy.around.rst", "_autosummary/jax.numpy.array.rst", "_autosummary/jax.numpy.array_equal.rst", "_autosummary/jax.numpy.array_equiv.rst", "_autosummary/jax.numpy.array_repr.rst", "_autosummary/jax.numpy.array_split.rst", "_autosummary/jax.numpy.array_str.rst", "_autosummary/jax.numpy.asarray.rst", "_autosummary/jax.numpy.asin.rst", "_autosummary/jax.numpy.asinh.rst", "_autosummary/jax.numpy.astype.rst", "_autosummary/jax.numpy.atan.rst", "_autosummary/jax.numpy.atan2.rst", "_autosummary/jax.numpy.atanh.rst", "_autosummary/jax.numpy.atleast_1d.rst", "_autosummary/jax.numpy.atleast_2d.rst", "_autosummary/jax.numpy.atleast_3d.rst", "_autosummary/jax.numpy.average.rst", "_autosummary/jax.numpy.bartlett.rst", "_autosummary/jax.numpy.bincount.rst", "_autosummary/jax.numpy.bitwise_and.rst", "_autosummary/jax.numpy.bitwise_count.rst", "_autosummary/jax.numpy.bitwise_invert.rst", "_autosummary/jax.numpy.bitwise_left_shift.rst", "_autosummary/jax.numpy.bitwise_not.rst", "_autosummary/jax.numpy.bitwise_or.rst", "_autosummary/jax.numpy.bitwise_right_shift.rst", "_autosummary/jax.numpy.bitwise_xor.rst", "_autosummary/jax.numpy.blackman.rst", "_autosummary/jax.numpy.block.rst", "_autosummary/jax.numpy.bool_.rst", "_autosummary/jax.numpy.broadcast_arrays.rst", "_autosummary/jax.numpy.broadcast_shapes.rst", "_autosummary/jax.numpy.broadcast_to.rst", "_autosummary/jax.numpy.c_.rst", "_autosummary/jax.numpy.can_cast.rst", "_autosummary/jax.numpy.cbrt.rst", "_autosummary/jax.numpy.cdouble.rst", "_autosummary/jax.numpy.ceil.rst", "_autosummary/jax.numpy.character.rst", "_autosummary/jax.numpy.choose.rst", "_autosummary/jax.numpy.clip.rst", "_autosummary/jax.numpy.column_stack.rst", "_autosummary/jax.numpy.complex128.rst", "_autosummary/jax.numpy.complex64.rst", "_autosummary/jax.numpy.complex_.rst", "_autosummary/jax.numpy.complexfloating.rst", "_autosummary/jax.numpy.compress.rst", "_autosummary/jax.numpy.concat.rst", "_autosummary/jax.numpy.concatenate.rst", "_autosummary/jax.numpy.conj.rst", "_autosummary/jax.numpy.conjugate.rst", "_autosummary/jax.numpy.convolve.rst", "_autosummary/jax.numpy.copy.rst", "_autosummary/jax.numpy.copysign.rst", "_autosummary/jax.numpy.corrcoef.rst", "_autosummary/jax.numpy.correlate.rst", "_autosummary/jax.numpy.cos.rst", "_autosummary/jax.numpy.cosh.rst", "_autosummary/jax.numpy.count_nonzero.rst", "_autosummary/jax.numpy.cov.rst", "_autosummary/jax.numpy.cross.rst", "_autosummary/jax.numpy.csingle.rst", "_autosummary/jax.numpy.cumprod.rst", "_autosummary/jax.numpy.cumsum.rst", "_autosummary/jax.numpy.cumulative_prod.rst", "_autosummary/jax.numpy.cumulative_sum.rst", "_autosummary/jax.numpy.deg2rad.rst", "_autosummary/jax.numpy.degrees.rst", "_autosummary/jax.numpy.delete.rst", "_autosummary/jax.numpy.diag.rst", "_autosummary/jax.numpy.diag_indices.rst", "_autosummary/jax.numpy.diag_indices_from.rst", "_autosummary/jax.numpy.diagflat.rst", "_autosummary/jax.numpy.diagonal.rst", "_autosummary/jax.numpy.diff.rst", "_autosummary/jax.numpy.digitize.rst", "_autosummary/jax.numpy.divide.rst", "_autosummary/jax.numpy.divmod.rst", "_autosummary/jax.numpy.dot.rst", "_autosummary/jax.numpy.double.rst", "_autosummary/jax.numpy.dsplit.rst", "_autosummary/jax.numpy.dstack.rst", "_autosummary/jax.numpy.dtype.rst", "_autosummary/jax.numpy.ediff1d.rst", "_autosummary/jax.numpy.einsum.rst", "_autosummary/jax.numpy.einsum_path.rst", "_autosummary/jax.numpy.empty.rst", "_autosummary/jax.numpy.empty_like.rst", "_autosummary/jax.numpy.equal.rst", "_autosummary/jax.numpy.exp.rst", "_autosummary/jax.numpy.exp2.rst", "_autosummary/jax.numpy.expand_dims.rst", "_autosummary/jax.numpy.expm1.rst", "_autosummary/jax.numpy.extract.rst", "_autosummary/jax.numpy.eye.rst", "_autosummary/jax.numpy.fabs.rst", "_autosummary/jax.numpy.fft.fft.rst", "_autosummary/jax.numpy.fft.fft2.rst", "_autosummary/jax.numpy.fft.fftfreq.rst", "_autosummary/jax.numpy.fft.fftn.rst", "_autosummary/jax.numpy.fft.fftshift.rst", "_autosummary/jax.numpy.fft.hfft.rst", "_autosummary/jax.numpy.fft.ifft.rst", "_autosummary/jax.numpy.fft.ifft2.rst", "_autosummary/jax.numpy.fft.ifftn.rst", "_autosummary/jax.numpy.fft.ifftshift.rst", "_autosummary/jax.numpy.fft.ihfft.rst", "_autosummary/jax.numpy.fft.irfft.rst", "_autosummary/jax.numpy.fft.irfft2.rst", "_autosummary/jax.numpy.fft.irfftn.rst", "_autosummary/jax.numpy.fft.rfft.rst", "_autosummary/jax.numpy.fft.rfft2.rst", "_autosummary/jax.numpy.fft.rfftfreq.rst", "_autosummary/jax.numpy.fft.rfftn.rst", "_autosummary/jax.numpy.fill_diagonal.rst", "_autosummary/jax.numpy.finfo.rst", "_autosummary/jax.numpy.fix.rst", "_autosummary/jax.numpy.flatnonzero.rst", "_autosummary/jax.numpy.flexible.rst", "_autosummary/jax.numpy.flip.rst", "_autosummary/jax.numpy.fliplr.rst", "_autosummary/jax.numpy.flipud.rst", "_autosummary/jax.numpy.float16.rst", "_autosummary/jax.numpy.float32.rst", "_autosummary/jax.numpy.float64.rst", "_autosummary/jax.numpy.float_.rst", "_autosummary/jax.numpy.float_power.rst", "_autosummary/jax.numpy.floating.rst", "_autosummary/jax.numpy.floor.rst", "_autosummary/jax.numpy.floor_divide.rst", "_autosummary/jax.numpy.fmax.rst", "_autosummary/jax.numpy.fmin.rst", "_autosummary/jax.numpy.fmod.rst", "_autosummary/jax.numpy.frexp.rst", "_autosummary/jax.numpy.from_dlpack.rst", "_autosummary/jax.numpy.frombuffer.rst", "_autosummary/jax.numpy.fromfile.rst", "_autosummary/jax.numpy.fromfunction.rst", "_autosummary/jax.numpy.fromiter.rst", "_autosummary/jax.numpy.frompyfunc.rst", "_autosummary/jax.numpy.fromstring.rst", "_autosummary/jax.numpy.full.rst", "_autosummary/jax.numpy.full_like.rst", "_autosummary/jax.numpy.gcd.rst", "_autosummary/jax.numpy.generic.rst", "_autosummary/jax.numpy.geomspace.rst", "_autosummary/jax.numpy.get_printoptions.rst", "_autosummary/jax.numpy.gradient.rst", "_autosummary/jax.numpy.greater.rst", "_autosummary/jax.numpy.greater_equal.rst", "_autosummary/jax.numpy.hamming.rst", "_autosummary/jax.numpy.hanning.rst", "_autosummary/jax.numpy.heaviside.rst", "_autosummary/jax.numpy.histogram.rst", "_autosummary/jax.numpy.histogram2d.rst", "_autosummary/jax.numpy.histogram_bin_edges.rst", "_autosummary/jax.numpy.histogramdd.rst", "_autosummary/jax.numpy.hsplit.rst", "_autosummary/jax.numpy.hstack.rst", "_autosummary/jax.numpy.hypot.rst", "_autosummary/jax.numpy.i0.rst", "_autosummary/jax.numpy.identity.rst", "_autosummary/jax.numpy.iinfo.rst", "_autosummary/jax.numpy.imag.rst", "_autosummary/jax.numpy.index_exp.rst", "_autosummary/jax.numpy.indices.rst", "_autosummary/jax.numpy.inexact.rst", "_autosummary/jax.numpy.inner.rst", "_autosummary/jax.numpy.insert.rst", "_autosummary/jax.numpy.int16.rst", "_autosummary/jax.numpy.int32.rst", "_autosummary/jax.numpy.int64.rst", "_autosummary/jax.numpy.int8.rst", "_autosummary/jax.numpy.int_.rst", "_autosummary/jax.numpy.integer.rst", "_autosummary/jax.numpy.interp.rst", "_autosummary/jax.numpy.intersect1d.rst", "_autosummary/jax.numpy.invert.rst", "_autosummary/jax.numpy.isclose.rst", "_autosummary/jax.numpy.iscomplex.rst", "_autosummary/jax.numpy.iscomplexobj.rst", "_autosummary/jax.numpy.isdtype.rst", "_autosummary/jax.numpy.isfinite.rst", "_autosummary/jax.numpy.isin.rst", "_autosummary/jax.numpy.isinf.rst", "_autosummary/jax.numpy.isnan.rst", "_autosummary/jax.numpy.isneginf.rst", "_autosummary/jax.numpy.isposinf.rst", "_autosummary/jax.numpy.isreal.rst", "_autosummary/jax.numpy.isrealobj.rst", "_autosummary/jax.numpy.isscalar.rst", "_autosummary/jax.numpy.issubdtype.rst", "_autosummary/jax.numpy.iterable.rst", "_autosummary/jax.numpy.ix_.rst", "_autosummary/jax.numpy.kaiser.rst", "_autosummary/jax.numpy.kron.rst", "_autosummary/jax.numpy.lcm.rst", "_autosummary/jax.numpy.ldexp.rst", "_autosummary/jax.numpy.left_shift.rst", "_autosummary/jax.numpy.less.rst", "_autosummary/jax.numpy.less_equal.rst", "_autosummary/jax.numpy.lexsort.rst", "_autosummary/jax.numpy.linalg.cholesky.rst", "_autosummary/jax.numpy.linalg.cond.rst", "_autosummary/jax.numpy.linalg.cross.rst", "_autosummary/jax.numpy.linalg.det.rst", "_autosummary/jax.numpy.linalg.diagonal.rst", "_autosummary/jax.numpy.linalg.eig.rst", "_autosummary/jax.numpy.linalg.eigh.rst", "_autosummary/jax.numpy.linalg.eigvals.rst", "_autosummary/jax.numpy.linalg.eigvalsh.rst", "_autosummary/jax.numpy.linalg.inv.rst", "_autosummary/jax.numpy.linalg.lstsq.rst", "_autosummary/jax.numpy.linalg.matmul.rst", "_autosummary/jax.numpy.linalg.matrix_norm.rst", "_autosummary/jax.numpy.linalg.matrix_power.rst", "_autosummary/jax.numpy.linalg.matrix_rank.rst", "_autosummary/jax.numpy.linalg.matrix_transpose.rst", "_autosummary/jax.numpy.linalg.multi_dot.rst", "_autosummary/jax.numpy.linalg.norm.rst", "_autosummary/jax.numpy.linalg.outer.rst", "_autosummary/jax.numpy.linalg.pinv.rst", "_autosummary/jax.numpy.linalg.qr.rst", "_autosummary/jax.numpy.linalg.slogdet.rst", "_autosummary/jax.numpy.linalg.solve.rst", "_autosummary/jax.numpy.linalg.svd.rst", "_autosummary/jax.numpy.linalg.svdvals.rst", "_autosummary/jax.numpy.linalg.tensordot.rst", "_autosummary/jax.numpy.linalg.tensorinv.rst", "_autosummary/jax.numpy.linalg.tensorsolve.rst", "_autosummary/jax.numpy.linalg.trace.rst", "_autosummary/jax.numpy.linalg.vecdot.rst", "_autosummary/jax.numpy.linalg.vector_norm.rst", "_autosummary/jax.numpy.linspace.rst", "_autosummary/jax.numpy.load.rst", "_autosummary/jax.numpy.log.rst", "_autosummary/jax.numpy.log10.rst", "_autosummary/jax.numpy.log1p.rst", "_autosummary/jax.numpy.log2.rst", "_autosummary/jax.numpy.logaddexp.rst", "_autosummary/jax.numpy.logaddexp2.rst", "_autosummary/jax.numpy.logical_and.rst", "_autosummary/jax.numpy.logical_not.rst", "_autosummary/jax.numpy.logical_or.rst", "_autosummary/jax.numpy.logical_xor.rst", "_autosummary/jax.numpy.logspace.rst", "_autosummary/jax.numpy.mask_indices.rst", "_autosummary/jax.numpy.matmul.rst", "_autosummary/jax.numpy.matrix_transpose.rst", "_autosummary/jax.numpy.matvec.rst", "_autosummary/jax.numpy.max.rst", "_autosummary/jax.numpy.maximum.rst", "_autosummary/jax.numpy.mean.rst", "_autosummary/jax.numpy.median.rst", "_autosummary/jax.numpy.meshgrid.rst", "_autosummary/jax.numpy.mgrid.rst", "_autosummary/jax.numpy.min.rst", "_autosummary/jax.numpy.minimum.rst", "_autosummary/jax.numpy.mod.rst", "_autosummary/jax.numpy.modf.rst", "_autosummary/jax.numpy.moveaxis.rst", "_autosummary/jax.numpy.multiply.rst", "_autosummary/jax.numpy.nan_to_num.rst", "_autosummary/jax.numpy.nanargmax.rst", "_autosummary/jax.numpy.nanargmin.rst", "_autosummary/jax.numpy.nancumprod.rst", "_autosummary/jax.numpy.nancumsum.rst", "_autosummary/jax.numpy.nanmax.rst", "_autosummary/jax.numpy.nanmean.rst", "_autosummary/jax.numpy.nanmedian.rst", "_autosummary/jax.numpy.nanmin.rst", "_autosummary/jax.numpy.nanpercentile.rst", "_autosummary/jax.numpy.nanprod.rst", "_autosummary/jax.numpy.nanquantile.rst", "_autosummary/jax.numpy.nanstd.rst", "_autosummary/jax.numpy.nansum.rst", "_autosummary/jax.numpy.nanvar.rst", "_autosummary/jax.numpy.ndarray.rst", "_autosummary/jax.numpy.ndarray.at.rst", "_autosummary/jax.numpy.ndim.rst", "_autosummary/jax.numpy.negative.rst", "_autosummary/jax.numpy.nextafter.rst", "_autosummary/jax.numpy.nonzero.rst", "_autosummary/jax.numpy.not_equal.rst", "_autosummary/jax.numpy.number.rst", "_autosummary/jax.numpy.object_.rst", "_autosummary/jax.numpy.ogrid.rst", "_autosummary/jax.numpy.ones.rst", "_autosummary/jax.numpy.ones_like.rst", "_autosummary/jax.numpy.outer.rst", "_autosummary/jax.numpy.packbits.rst", "_autosummary/jax.numpy.pad.rst", "_autosummary/jax.numpy.partition.rst", "_autosummary/jax.numpy.percentile.rst", "_autosummary/jax.numpy.permute_dims.rst", "_autosummary/jax.numpy.piecewise.rst", "_autosummary/jax.numpy.place.rst", "_autosummary/jax.numpy.poly.rst", "_autosummary/jax.numpy.polyadd.rst", "_autosummary/jax.numpy.polyder.rst", "_autosummary/jax.numpy.polydiv.rst", "_autosummary/jax.numpy.polyfit.rst", "_autosummary/jax.numpy.polyint.rst", "_autosummary/jax.numpy.polymul.rst", "_autosummary/jax.numpy.polysub.rst", "_autosummary/jax.numpy.polyval.rst", "_autosummary/jax.numpy.positive.rst", "_autosummary/jax.numpy.pow.rst", "_autosummary/jax.numpy.power.rst", "_autosummary/jax.numpy.printoptions.rst", "_autosummary/jax.numpy.prod.rst", "_autosummary/jax.numpy.promote_types.rst", "_autosummary/jax.numpy.ptp.rst", "_autosummary/jax.numpy.put.rst", "_autosummary/jax.numpy.put_along_axis.rst", "_autosummary/jax.numpy.quantile.rst", "_autosummary/jax.numpy.r_.rst", "_autosummary/jax.numpy.rad2deg.rst", "_autosummary/jax.numpy.radians.rst", "_autosummary/jax.numpy.ravel.rst", "_autosummary/jax.numpy.ravel_multi_index.rst", "_autosummary/jax.numpy.real.rst", "_autosummary/jax.numpy.reciprocal.rst", "_autosummary/jax.numpy.remainder.rst", "_autosummary/jax.numpy.repeat.rst", "_autosummary/jax.numpy.reshape.rst", "_autosummary/jax.numpy.resize.rst", "_autosummary/jax.numpy.result_type.rst", "_autosummary/jax.numpy.right_shift.rst", "_autosummary/jax.numpy.rint.rst", "_autosummary/jax.numpy.roll.rst", "_autosummary/jax.numpy.rollaxis.rst", "_autosummary/jax.numpy.roots.rst", "_autosummary/jax.numpy.rot90.rst", "_autosummary/jax.numpy.round.rst", "_autosummary/jax.numpy.s_.rst", "_autosummary/jax.numpy.save.rst", "_autosummary/jax.numpy.savez.rst", "_autosummary/jax.numpy.searchsorted.rst", "_autosummary/jax.numpy.select.rst", "_autosummary/jax.numpy.set_printoptions.rst", "_autosummary/jax.numpy.setdiff1d.rst", "_autosummary/jax.numpy.setxor1d.rst", "_autosummary/jax.numpy.shape.rst", "_autosummary/jax.numpy.sign.rst", "_autosummary/jax.numpy.signbit.rst", "_autosummary/jax.numpy.signedinteger.rst", "_autosummary/jax.numpy.sin.rst", "_autosummary/jax.numpy.sinc.rst", "_autosummary/jax.numpy.single.rst", "_autosummary/jax.numpy.sinh.rst", "_autosummary/jax.numpy.size.rst", "_autosummary/jax.numpy.sort.rst", "_autosummary/jax.numpy.sort_complex.rst", "_autosummary/jax.numpy.spacing.rst", "_autosummary/jax.numpy.split.rst", "_autosummary/jax.numpy.sqrt.rst", "_autosummary/jax.numpy.square.rst", "_autosummary/jax.numpy.squeeze.rst", "_autosummary/jax.numpy.stack.rst", "_autosummary/jax.numpy.std.rst", "_autosummary/jax.numpy.subtract.rst", "_autosummary/jax.numpy.sum.rst", "_autosummary/jax.numpy.swapaxes.rst", "_autosummary/jax.numpy.take.rst", "_autosummary/jax.numpy.take_along_axis.rst", "_autosummary/jax.numpy.tan.rst", "_autosummary/jax.numpy.tanh.rst", "_autosummary/jax.numpy.tensordot.rst", "_autosummary/jax.numpy.tile.rst", "_autosummary/jax.numpy.trace.rst", "_autosummary/jax.numpy.transpose.rst", "_autosummary/jax.numpy.trapezoid.rst", "_autosummary/jax.numpy.tri.rst", "_autosummary/jax.numpy.tril.rst", "_autosummary/jax.numpy.tril_indices.rst", "_autosummary/jax.numpy.tril_indices_from.rst", "_autosummary/jax.numpy.trim_zeros.rst", "_autosummary/jax.numpy.triu.rst", "_autosummary/jax.numpy.triu_indices.rst", "_autosummary/jax.numpy.triu_indices_from.rst", "_autosummary/jax.numpy.true_divide.rst", "_autosummary/jax.numpy.trunc.rst", "_autosummary/jax.numpy.ufunc.rst", "_autosummary/jax.numpy.uint.rst", "_autosummary/jax.numpy.uint16.rst", "_autosummary/jax.numpy.uint32.rst", "_autosummary/jax.numpy.uint64.rst", "_autosummary/jax.numpy.uint8.rst", "_autosummary/jax.numpy.union1d.rst", "_autosummary/jax.numpy.unique.rst", "_autosummary/jax.numpy.unique_all.rst", "_autosummary/jax.numpy.unique_counts.rst", "_autosummary/jax.numpy.unique_inverse.rst", "_autosummary/jax.numpy.unique_values.rst", "_autosummary/jax.numpy.unpackbits.rst", "_autosummary/jax.numpy.unravel_index.rst", "_autosummary/jax.numpy.unsignedinteger.rst", "_autosummary/jax.numpy.unstack.rst", "_autosummary/jax.numpy.unwrap.rst", "_autosummary/jax.numpy.vander.rst", "_autosummary/jax.numpy.var.rst", "_autosummary/jax.numpy.vdot.rst", "_autosummary/jax.numpy.vecdot.rst", "_autosummary/jax.numpy.vecmat.rst", "_autosummary/jax.numpy.vectorize.rst", "_autosummary/jax.numpy.vsplit.rst", "_autosummary/jax.numpy.vstack.rst", "_autosummary/jax.numpy.where.rst", "_autosummary/jax.numpy.zeros.rst", "_autosummary/jax.numpy.zeros_like.rst", "_autosummary/jax.numpy_rank_promotion.rst", "_autosummary/jax.ops.segment_max.rst", "_autosummary/jax.ops.segment_min.rst", "_autosummary/jax.ops.segment_prod.rst", "_autosummary/jax.ops.segment_sum.rst", "_autosummary/jax.pmap.rst", "_autosummary/jax.print_environment_info.rst", "_autosummary/jax.process_count.rst", "_autosummary/jax.process_index.rst", "_autosummary/jax.process_indices.rst", "_autosummary/jax.profiler.StepTraceAnnotation.rst", "_autosummary/jax.profiler.TraceAnnotation.rst", "_autosummary/jax.profiler.annotate_function.rst", "_autosummary/jax.profiler.device_memory_profile.rst", "_autosummary/jax.profiler.save_device_memory_profile.rst", "_autosummary/jax.profiler.start_server.rst", "_autosummary/jax.profiler.start_trace.rst", "_autosummary/jax.profiler.stop_trace.rst", "_autosummary/jax.profiler.trace.rst", "_autosummary/jax.pure_callback.rst", "_autosummary/jax.random.PRNGKey.rst", "_autosummary/jax.random.ball.rst", "_autosummary/jax.random.bernoulli.rst", "_autosummary/jax.random.beta.rst", "_autosummary/jax.random.binomial.rst", "_autosummary/jax.random.bits.rst", "_autosummary/jax.random.categorical.rst", "_autosummary/jax.random.cauchy.rst", "_autosummary/jax.random.chisquare.rst", "_autosummary/jax.random.choice.rst", "_autosummary/jax.random.clone.rst", "_autosummary/jax.random.dirichlet.rst", "_autosummary/jax.random.double_sided_maxwell.rst", "_autosummary/jax.random.exponential.rst", "_autosummary/jax.random.f.rst", "_autosummary/jax.random.fold_in.rst", "_autosummary/jax.random.gamma.rst", "_autosummary/jax.random.generalized_normal.rst", "_autosummary/jax.random.geometric.rst", "_autosummary/jax.random.gumbel.rst", "_autosummary/jax.random.key.rst", "_autosummary/jax.random.key_data.rst", "_autosummary/jax.random.laplace.rst", "_autosummary/jax.random.loggamma.rst", "_autosummary/jax.random.logistic.rst", "_autosummary/jax.random.lognormal.rst", "_autosummary/jax.random.maxwell.rst", "_autosummary/jax.random.multinomial.rst", "_autosummary/jax.random.multivariate_normal.rst", "_autosummary/jax.random.normal.rst", "_autosummary/jax.random.orthogonal.rst", "_autosummary/jax.random.pareto.rst", "_autosummary/jax.random.permutation.rst", "_autosummary/jax.random.poisson.rst", "_autosummary/jax.random.rademacher.rst", "_autosummary/jax.random.randint.rst", "_autosummary/jax.random.rayleigh.rst", "_autosummary/jax.random.split.rst", "_autosummary/jax.random.t.rst", "_autosummary/jax.random.triangular.rst", "_autosummary/jax.random.truncated_normal.rst", "_autosummary/jax.random.uniform.rst", "_autosummary/jax.random.wald.rst", "_autosummary/jax.random.weibull_min.rst", "_autosummary/jax.random.wrap_key_data.rst", "_autosummary/jax.ref.AbstractRef.rst", "_autosummary/jax.ref.ArrayRef.rst", "_autosummary/jax.ref.addupdate.rst", "_autosummary/jax.ref.array_ref.rst", "_autosummary/jax.ref.freeze.rst", "_autosummary/jax.ref.get.rst", "_autosummary/jax.ref.set.rst", "_autosummary/jax.ref.swap.rst", "_autosummary/jax.scipy.cluster.vq.vq.rst", "_autosummary/jax.scipy.fft.dct.rst", "_autosummary/jax.scipy.fft.dctn.rst", "_autosummary/jax.scipy.fft.idct.rst", "_autosummary/jax.scipy.fft.idctn.rst", "_autosummary/jax.scipy.integrate.trapezoid.rst", "_autosummary/jax.scipy.interpolate.RegularGridInterpolator.rst", "_autosummary/jax.scipy.linalg.block_diag.rst", "_autosummary/jax.scipy.linalg.cho_factor.rst", "_autosummary/jax.scipy.linalg.cho_solve.rst", "_autosummary/jax.scipy.linalg.cholesky.rst", "_autosummary/jax.scipy.linalg.det.rst", "_autosummary/jax.scipy.linalg.eigh.rst", "_autosummary/jax.scipy.linalg.eigh_tridiagonal.rst", "_autosummary/jax.scipy.linalg.expm.rst", "_autosummary/jax.scipy.linalg.expm_frechet.rst", "_autosummary/jax.scipy.linalg.funm.rst", "_autosummary/jax.scipy.linalg.hessenberg.rst", "_autosummary/jax.scipy.linalg.hilbert.rst", "_autosummary/jax.scipy.linalg.inv.rst", "_autosummary/jax.scipy.linalg.lu.rst", "_autosummary/jax.scipy.linalg.lu_factor.rst", "_autosummary/jax.scipy.linalg.lu_solve.rst", "_autosummary/jax.scipy.linalg.pascal.rst", "_autosummary/jax.scipy.linalg.polar.rst", "_autosummary/jax.scipy.linalg.qr.rst", "_autosummary/jax.scipy.linalg.rsf2csf.rst", "_autosummary/jax.scipy.linalg.schur.rst", "_autosummary/jax.scipy.linalg.solve.rst", "_autosummary/jax.scipy.linalg.solve_triangular.rst", "_autosummary/jax.scipy.linalg.sqrtm.rst", "_autosummary/jax.scipy.linalg.svd.rst", "_autosummary/jax.scipy.linalg.toeplitz.rst", "_autosummary/jax.scipy.ndimage.map_coordinates.rst", "_autosummary/jax.scipy.optimize.OptimizeResults.rst", "_autosummary/jax.scipy.optimize.minimize.rst", "_autosummary/jax.scipy.signal.convolve.rst", "_autosummary/jax.scipy.signal.convolve2d.rst", "_autosummary/jax.scipy.signal.correlate.rst", "_autosummary/jax.scipy.signal.correlate2d.rst", "_autosummary/jax.scipy.signal.csd.rst", "_autosummary/jax.scipy.signal.detrend.rst", "_autosummary/jax.scipy.signal.fftconvolve.rst", "_autosummary/jax.scipy.signal.istft.rst", "_autosummary/jax.scipy.signal.stft.rst", "_autosummary/jax.scipy.signal.welch.rst", "_autosummary/jax.scipy.sparse.linalg.bicgstab.rst", "_autosummary/jax.scipy.sparse.linalg.cg.rst", "_autosummary/jax.scipy.sparse.linalg.gmres.rst", "_autosummary/jax.scipy.spatial.transform.Rotation.rst", "_autosummary/jax.scipy.spatial.transform.Slerp.rst", "_autosummary/jax.scipy.special.bernoulli.rst", "_autosummary/jax.scipy.special.beta.rst", "_autosummary/jax.scipy.special.betainc.rst", "_autosummary/jax.scipy.special.betaln.rst", "_autosummary/jax.scipy.special.digamma.rst", "_autosummary/jax.scipy.special.entr.rst", "_autosummary/jax.scipy.special.erf.rst", "_autosummary/jax.scipy.special.erfc.rst", "_autosummary/jax.scipy.special.erfinv.rst", "_autosummary/jax.scipy.special.exp1.rst", "_autosummary/jax.scipy.special.expi.rst", "_autosummary/jax.scipy.special.expit.rst", "_autosummary/jax.scipy.special.expn.rst", "_autosummary/jax.scipy.special.factorial.rst", "_autosummary/jax.scipy.special.fresnel.rst", "_autosummary/jax.scipy.special.gamma.rst", "_autosummary/jax.scipy.special.gammainc.rst", "_autosummary/jax.scipy.special.gammaincc.rst", "_autosummary/jax.scipy.special.gammaln.rst", "_autosummary/jax.scipy.special.gammasgn.rst", "_autosummary/jax.scipy.special.hyp1f1.rst", "_autosummary/jax.scipy.special.hyp2f1.rst", "_autosummary/jax.scipy.special.i0.rst", "_autosummary/jax.scipy.special.i0e.rst", "_autosummary/jax.scipy.special.i1.rst", "_autosummary/jax.scipy.special.i1e.rst", "_autosummary/jax.scipy.special.kl_div.rst", "_autosummary/jax.scipy.special.log_ndtr.rst", "_autosummary/jax.scipy.special.log_softmax.rst", "_autosummary/jax.scipy.special.logit.rst", "_autosummary/jax.scipy.special.logsumexp.rst", "_autosummary/jax.scipy.special.lpmn.rst", "_autosummary/jax.scipy.special.lpmn_values.rst", "_autosummary/jax.scipy.special.multigammaln.rst", "_autosummary/jax.scipy.special.ndtr.rst", "_autosummary/jax.scipy.special.ndtri.rst", "_autosummary/jax.scipy.special.poch.rst", "_autosummary/jax.scipy.special.polygamma.rst", "_autosummary/jax.scipy.special.rel_entr.rst", "_autosummary/jax.scipy.special.softmax.rst", "_autosummary/jax.scipy.special.spence.rst", "_autosummary/jax.scipy.special.sph_harm.rst", "_autosummary/jax.scipy.special.xlog1py.rst", "_autosummary/jax.scipy.special.xlogy.rst", "_autosummary/jax.scipy.special.zeta.rst", "_autosummary/jax.scipy.stats.bernoulli.cdf.rst", "_autosummary/jax.scipy.stats.bernoulli.logpmf.rst", "_autosummary/jax.scipy.stats.bernoulli.pmf.rst", "_autosummary/jax.scipy.stats.bernoulli.ppf.rst", "_autosummary/jax.scipy.stats.beta.cdf.rst", "_autosummary/jax.scipy.stats.beta.logcdf.rst", "_autosummary/jax.scipy.stats.beta.logpdf.rst", "_autosummary/jax.scipy.stats.beta.logsf.rst", "_autosummary/jax.scipy.stats.beta.pdf.rst", "_autosummary/jax.scipy.stats.beta.sf.rst", "_autosummary/jax.scipy.stats.betabinom.logpmf.rst", "_autosummary/jax.scipy.stats.betabinom.pmf.rst", "_autosummary/jax.scipy.stats.binom.logpmf.rst", "_autosummary/jax.scipy.stats.binom.pmf.rst", "_autosummary/jax.scipy.stats.cauchy.cdf.rst", "_autosummary/jax.scipy.stats.cauchy.isf.rst", "_autosummary/jax.scipy.stats.cauchy.logcdf.rst", "_autosummary/jax.scipy.stats.cauchy.logpdf.rst", "_autosummary/jax.scipy.stats.cauchy.logsf.rst", "_autosummary/jax.scipy.stats.cauchy.pdf.rst", "_autosummary/jax.scipy.stats.cauchy.ppf.rst", "_autosummary/jax.scipy.stats.cauchy.sf.rst", "_autosummary/jax.scipy.stats.chi2.cdf.rst", "_autosummary/jax.scipy.stats.chi2.logcdf.rst", "_autosummary/jax.scipy.stats.chi2.logpdf.rst", "_autosummary/jax.scipy.stats.chi2.logsf.rst", "_autosummary/jax.scipy.stats.chi2.pdf.rst", "_autosummary/jax.scipy.stats.chi2.sf.rst", "_autosummary/jax.scipy.stats.dirichlet.logpdf.rst", "_autosummary/jax.scipy.stats.dirichlet.pdf.rst", "_autosummary/jax.scipy.stats.expon.cdf.rst", "_autosummary/jax.scipy.stats.expon.logcdf.rst", "_autosummary/jax.scipy.stats.expon.logpdf.rst", "_autosummary/jax.scipy.stats.expon.logsf.rst", "_autosummary/jax.scipy.stats.expon.pdf.rst", "_autosummary/jax.scipy.stats.expon.ppf.rst", "_autosummary/jax.scipy.stats.expon.sf.rst", "_autosummary/jax.scipy.stats.gamma.cdf.rst", "_autosummary/jax.scipy.stats.gamma.logcdf.rst", "_autosummary/jax.scipy.stats.gamma.logpdf.rst", "_autosummary/jax.scipy.stats.gamma.logsf.rst", "_autosummary/jax.scipy.stats.gamma.pdf.rst", "_autosummary/jax.scipy.stats.gamma.sf.rst", "_autosummary/jax.scipy.stats.gaussian_kde.rst", "_autosummary/jax.scipy.stats.gaussian_kde.evaluate.rst", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_box_1d.rst", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_gaussian.rst", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_kde.rst", "_autosummary/jax.scipy.stats.gaussian_kde.logpdf.rst", "_autosummary/jax.scipy.stats.gaussian_kde.pdf.rst", "_autosummary/jax.scipy.stats.gaussian_kde.resample.rst", "_autosummary/jax.scipy.stats.gennorm.cdf.rst", "_autosummary/jax.scipy.stats.gennorm.logpdf.rst", "_autosummary/jax.scipy.stats.gennorm.pdf.rst", "_autosummary/jax.scipy.stats.geom.logpmf.rst", "_autosummary/jax.scipy.stats.geom.pmf.rst", "_autosummary/jax.scipy.stats.gumbel_l.cdf.rst", "_autosummary/jax.scipy.stats.gumbel_l.logcdf.rst", "_autosummary/jax.scipy.stats.gumbel_l.logpdf.rst", "_autosummary/jax.scipy.stats.gumbel_l.logsf.rst", "_autosummary/jax.scipy.stats.gumbel_l.pdf.rst", "_autosummary/jax.scipy.stats.gumbel_l.ppf.rst", "_autosummary/jax.scipy.stats.gumbel_l.sf.rst", "_autosummary/jax.scipy.stats.gumbel_r.cdf.rst", "_autosummary/jax.scipy.stats.gumbel_r.logcdf.rst", "_autosummary/jax.scipy.stats.gumbel_r.logpdf.rst", "_autosummary/jax.scipy.stats.gumbel_r.logsf.rst", "_autosummary/jax.scipy.stats.gumbel_r.pdf.rst", "_autosummary/jax.scipy.stats.gumbel_r.ppf.rst", "_autosummary/jax.scipy.stats.gumbel_r.sf.rst", "_autosummary/jax.scipy.stats.laplace.cdf.rst", "_autosummary/jax.scipy.stats.laplace.logpdf.rst", "_autosummary/jax.scipy.stats.laplace.pdf.rst", "_autosummary/jax.scipy.stats.logistic.cdf.rst", "_autosummary/jax.scipy.stats.logistic.isf.rst", "_autosummary/jax.scipy.stats.logistic.logpdf.rst", "_autosummary/jax.scipy.stats.logistic.pdf.rst", "_autosummary/jax.scipy.stats.logistic.ppf.rst", "_autosummary/jax.scipy.stats.logistic.sf.rst", "_autosummary/jax.scipy.stats.mode.rst", "_autosummary/jax.scipy.stats.multinomial.logpmf.rst", "_autosummary/jax.scipy.stats.multinomial.pmf.rst", "_autosummary/jax.scipy.stats.multivariate_normal.logpdf.rst", "_autosummary/jax.scipy.stats.multivariate_normal.pdf.rst", "_autosummary/jax.scipy.stats.nbinom.logpmf.rst", "_autosummary/jax.scipy.stats.nbinom.pmf.rst", "_autosummary/jax.scipy.stats.norm.cdf.rst", "_autosummary/jax.scipy.stats.norm.isf.rst", "_autosummary/jax.scipy.stats.norm.logcdf.rst", "_autosummary/jax.scipy.stats.norm.logpdf.rst", "_autosummary/jax.scipy.stats.norm.logsf.rst", "_autosummary/jax.scipy.stats.norm.pdf.rst", "_autosummary/jax.scipy.stats.norm.ppf.rst", "_autosummary/jax.scipy.stats.norm.sf.rst", "_autosummary/jax.scipy.stats.pareto.logpdf.rst", "_autosummary/jax.scipy.stats.pareto.pdf.rst", "_autosummary/jax.scipy.stats.poisson.cdf.rst", "_autosummary/jax.scipy.stats.poisson.logpmf.rst", "_autosummary/jax.scipy.stats.poisson.pmf.rst", "_autosummary/jax.scipy.stats.rankdata.rst", "_autosummary/jax.scipy.stats.sem.rst", "_autosummary/jax.scipy.stats.t.logpdf.rst", "_autosummary/jax.scipy.stats.t.pdf.rst", "_autosummary/jax.scipy.stats.truncnorm.cdf.rst", "_autosummary/jax.scipy.stats.truncnorm.logcdf.rst", "_autosummary/jax.scipy.stats.truncnorm.logpdf.rst", "_autosummary/jax.scipy.stats.truncnorm.logsf.rst", "_autosummary/jax.scipy.stats.truncnorm.pdf.rst", "_autosummary/jax.scipy.stats.truncnorm.sf.rst", "_autosummary/jax.scipy.stats.uniform.cdf.rst", "_autosummary/jax.scipy.stats.uniform.logpdf.rst", "_autosummary/jax.scipy.stats.uniform.pdf.rst", "_autosummary/jax.scipy.stats.uniform.ppf.rst", "_autosummary/jax.scipy.stats.vonmises.logpdf.rst", "_autosummary/jax.scipy.stats.vonmises.pdf.rst", "_autosummary/jax.scipy.stats.wrapcauchy.logpdf.rst", "_autosummary/jax.scipy.stats.wrapcauchy.pdf.rst", "_autosummary/jax.shard_map.rst", "_autosummary/jax.smap.rst", "_autosummary/jax.test_util.check_grads.rst", "_autosummary/jax.test_util.check_jvp.rst", "_autosummary/jax.test_util.check_vjp.rst", "_autosummary/jax.transfer_guard.rst", "_autosummary/jax.tree.all.rst", "_autosummary/jax.tree.broadcast.rst", "_autosummary/jax.tree.flatten.rst", "_autosummary/jax.tree.flatten_with_path.rst", "_autosummary/jax.tree.leaves.rst", "_autosummary/jax.tree.leaves_with_path.rst", "_autosummary/jax.tree.map.rst", "_autosummary/jax.tree.map_with_path.rst", "_autosummary/jax.tree.reduce.rst", "_autosummary/jax.tree.reduce_associative.rst", "_autosummary/jax.tree.structure.rst", "_autosummary/jax.tree.transpose.rst", "_autosummary/jax.tree.unflatten.rst", "_autosummary/jax.tree_util.KeyEntry.rst", "_autosummary/jax.tree_util.KeyPath.rst", "_autosummary/jax.tree_util.Partial.rst", "_autosummary/jax.tree_util.all_leaves.rst", "_autosummary/jax.tree_util.keystr.rst", "_autosummary/jax.tree_util.register_dataclass.rst", "_autosummary/jax.tree_util.register_pytree_node.rst", "_autosummary/jax.tree_util.register_pytree_node_class.rst", "_autosummary/jax.tree_util.register_pytree_with_keys.rst", "_autosummary/jax.tree_util.register_pytree_with_keys_class.rst", "_autosummary/jax.tree_util.register_static.rst", "_autosummary/jax.tree_util.tree_all.rst", "_autosummary/jax.tree_util.tree_broadcast.rst", "_autosummary/jax.tree_util.tree_flatten.rst", "_autosummary/jax.tree_util.tree_flatten_with_path.rst", "_autosummary/jax.tree_util.tree_leaves.rst", "_autosummary/jax.tree_util.tree_leaves_with_path.rst", "_autosummary/jax.tree_util.tree_map.rst", "_autosummary/jax.tree_util.tree_map_with_path.rst", "_autosummary/jax.tree_util.tree_reduce.rst", "_autosummary/jax.tree_util.tree_reduce_associative.rst", "_autosummary/jax.tree_util.tree_structure.rst", "_autosummary/jax.tree_util.tree_transpose.rst", "_autosummary/jax.tree_util.tree_unflatten.rst", "_autosummary/jax.tree_util.treedef_children.rst", "_autosummary/jax.tree_util.treedef_is_leaf.rst", "_autosummary/jax.tree_util.treedef_tuple.rst", "_autosummary/jax.typing.ArrayLike.rst", "_autosummary/jax.typing.DTypeLike.rst", "_autosummary/jax.value_and_grad.rst", "_autosummary/jax.vjp.rst", "_autosummary/jax.vmap.rst", "_autosummary/jaxlib.xla_client.register_custom_call_target.rst", "_tutorials/advanced-compilation.md", "_tutorials/advanced-debugging.md", "_tutorials/index.rst", "_tutorials/parallelism.md", "_tutorials/profiling-and-performance.md", "_tutorials/simple-neural-network.md", "about.md", "advanced-autodiff.md", "advanced_guides.rst", "aot.md", "api_compatibility.md", "array_refs.ipynb", "async_dispatch.rst", "autodidax.ipynb", "autodidax2_part1.ipynb", "automatic-differentiation.md", "automatic-vectorization.md", "beginner_guide.rst", "building_on_jax.md", "changelog.md", "concurrency.rst", "config_options.rst", "contributing.md", "contributor_guide.rst", "control-flow.md", "debugging.md", "debugging/checkify_guide.md", "debugging/flags.md", "debugging/print_breakpoint.md", "default_dtypes.md", "deprecation.md", "developer.md", "device_memory_profiling.md", "direct_linearize_migration.md", "distributed_data_loading.md", "errors.rst", "export/export.md", "export/index.rst", "export/jax2tf.md", "export/shape_poly.md", "extensions.rst", "external-callbacks.md", "faq.rst", "ffi.md", "glossary.rst", "gpu_memory_allocation.rst", "gpu_performance_tips.md", "gradient-checkpointing.md", "index.rst", "installation.md", "internals/constants.md", "internals/index.rst", "investigating_a_regression.md", "jax.rst", "jax-101.rst", "jax-primitives.md", "jax.debug.rst", "jax.distributed.rst", "jax.dlpack.rst", "jax.dtypes.rst", "jax.example_libraries.rst", "jax.example_libraries.optimizers.rst", "jax.example_libraries.stax.rst", "jax.experimental.rst", "jax.experimental.checkify.rst", "jax.experimental.compilation_cache.rst", "jax.experimental.custom_dce.rst", "jax.experimental.custom_partitioning.rst", "jax.experimental.jet.rst", "jax.experimental.key_reuse.rst", "jax.experimental.mesh_utils.rst", "jax.experimental.multihost_utils.rst", "jax.experimental.pallas.rst", "jax.experimental.pallas.mosaic_gpu.rst", "jax.experimental.pallas.tpu.rst", "jax.experimental.pallas.triton.rst", "jax.experimental.pjit.rst", "jax.experimental.serialize_executable.rst", "jax.experimental.shard_map.rst", "jax.experimental.sparse.rst", "jax.export.rst", "jax.extend.rst", "jax.extend.core.rst", "jax.extend.linear_util.rst", "jax.extend.mlir.rst", "jax.extend.random.rst", "jax.ffi.rst", "jax.flatten_util.rst", "jax.image.rst", "jax.lax.rst", "jax.lib.rst", "jax.nn.rst", "jax.nn.initializers.rst", "jax.numpy.rst", "jax.ops.rst", "jax.profiler.rst", "jax.random.rst", "jax.ref.rst", "jax.scipy.rst", "jax.sharding.rst", "jax.stages.rst", "jax.test_util.rst", "jax.tree.rst", "jax.tree_util.rst", "jax.typing.rst", "jax_array_migration.md", "jaxpr.md", "jep/10657-sequencing-effects.md", "jep/11830-new-remat-checkpoint.md", "jep/12049-type-annotations.md", "jep/14273-shard-map.md", "jep/15856-jex.md", "jep/17111-shmap-transpose.md", "jep/18137-numpy-scipy-scope.md", "jep/2026-custom-derivatives.md", "jep/25516-effver.md", "jep/263-prng.md", "jep/28661-jax-array-protocol.md", "jep/4008-custom-vjp-update.md", "jep/4410-omnistaging.md", "jep/9263-typed-keys.md", "jep/9407-type-promotion.ipynb", "jep/9419-jax-versioning.md", "jep/index.rst", "jit-compilation.md", "key-concepts.md", "multi_process.md", "notebooks/Common_Gotchas_in_JAX.ipynb", "notebooks/Custom_derivative_rules_for_Python_code.ipynb", "notebooks/Distributed_arrays_and_automatic_parallelization.ipynb", "notebooks/Neural_Network_and_Data_Loading.ipynb", "notebooks/Writing_custom_interpreters_in_Jax.ipynb", "notebooks/autodiff_cookbook.ipynb", "notebooks/autodiff_remat.ipynb", "notebooks/convolutions.ipynb", "notebooks/explicit-sharding.ipynb", "notebooks/host-offloading.ipynb", "notebooks/layout.ipynb", "notebooks/neural_network_with_tfds_data.ipynb", "notebooks/shard_map.ipynb", "notebooks/thinking_in_jax.ipynb", "notebooks/vmapped_log_probs.ipynb", "notes.rst", "pallas/CHANGELOG.md", "pallas/design/async_note.md", "pallas/design/design.md", "pallas/design/index.rst", "pallas/gpu/index.rst", "pallas/gpu/pipelining.ipynb", "pallas/gpu/reference.md", "pallas/grid_blockspec.md", "pallas/index.rst", "pallas/pipelining.ipynb", "pallas/quickstart.ipynb", "pallas/tpu/details.rst", "pallas/tpu/distributed.ipynb", "pallas/tpu/index.rst", "pallas/tpu/matmul.ipynb", "pallas/tpu/pipelining.ipynb", "pallas/tpu/sparse.ipynb", "persistent_compilation_cache.md", "profiling.md", "pytrees.md", "random-numbers.md", "rank_promotion_warning.rst", "sharded-computation.ipynb", "shardy_jax_migration.md", "stateful-computations.md", "the-training-cookbook.rst", "transfer_guard.rst", "type_promotion.rst", "working-with-pytrees.md", "xla_flags.md"], "indexentries": {"__call__() (jax.stages.compiled method)": [[1435, "jax.stages.Compiled.__call__", false]], "__call__() (jax.stages.wrapped method)": [[1435, "jax.stages.Wrapped.__call__", false]], "__init__() (jax.array method)": [[0, "jax.Array.__init__", false]], "__init__() (jax.custom_batching.custom_vmap method)": [[72, "jax.custom_batching.custom_vmap.__init__", false]], "__init__() (jax.custom_jvp method)": [[76, "jax.custom_jvp.__init__", false]], "__init__() (jax.custom_vjp method)": [[79, "jax.custom_vjp.__init__", false]], "__init__() (jax.device method)": [[62, "jax.Device.__init__", false]], "__init__() (jax.dtypes.bfloat16 method)": [[102, "jax.dtypes.bfloat16.__init__", false]], "__init__() (jax.dtypes.prng_key method)": [[106, "jax.dtypes.prng_key.__init__", false]], "__init__() (jax.experimental.checkify.error method)": [[114, "jax.experimental.checkify.Error.__init__", false]], "__init__() (jax.experimental.custom_dce.custom_dce method)": [[126, "jax.experimental.custom_dce.custom_dce.__init__", false]], "__init__() (jax.experimental.pallas.blockspec method)": [[139, "jax.experimental.pallas.BlockSpec.__init__", false]], "__init__() (jax.experimental.pallas.gridspec method)": [[140, "jax.experimental.pallas.GridSpec.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.barrier method)": [[148, "jax.experimental.pallas.mosaic_gpu.Barrier.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.blockspec method)": [[149, "jax.experimental.pallas.mosaic_gpu.BlockSpec.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.compilerparams method)": [[150, "jax.experimental.pallas.mosaic_gpu.CompilerParams.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.layout method)": [[152, "jax.experimental.pallas.mosaic_gpu.Layout.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.memoryspace method)": [[153, "jax.experimental.pallas.mosaic_gpu.MemorySpace.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.semaphoresignal method)": [[155, "jax.experimental.pallas.mosaic_gpu.SemaphoreSignal.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.swizzletransform method)": [[156, "jax.experimental.pallas.mosaic_gpu.SwizzleTransform.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.tilingtransform method)": [[157, "jax.experimental.pallas.mosaic_gpu.TilingTransform.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.transposetransform method)": [[158, "jax.experimental.pallas.mosaic_gpu.TransposeTransform.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.wgmmaaccumulatorref method)": [[159, "jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef.__init__", false]], "__init__() (jax.experimental.pallas.slice method)": [[141, "jax.experimental.pallas.Slice.__init__", false]], "__init__() (jax.experimental.pallas.triton.compilerparams method)": [[183, "jax.experimental.pallas.triton.CompilerParams.__init__", false]], "__init__() (jax.experimental.sparse.bcoo method)": [[199, "jax.experimental.sparse.BCOO.__init__", false]], "__init__() (jax.experimental.sparse.bcsr method)": [[200, "jax.experimental.sparse.BCSR.__init__", false]], "__init__() (jax.experimental.sparse.coo method)": [[201, "jax.experimental.sparse.COO.__init__", false]], "__init__() (jax.experimental.sparse.csc method)": [[202, "jax.experimental.sparse.CSC.__init__", false]], "__init__() (jax.experimental.sparse.csr method)": [[203, "jax.experimental.sparse.CSR.__init__", false]], "__init__() (jax.experimental.sparse.jaxsparse method)": [[204, "jax.experimental.sparse.JAXSparse.__init__", false]], "__init__() (jax.export.symbolicscope method)": [[245, "jax.export.SymbolicScope.__init__", false]], "__init__() (jax.extend.core.closedjaxpr method)": [[256, "jax.extend.core.ClosedJaxpr.__init__", false]], "__init__() (jax.extend.core.jaxpr method)": [[257, "jax.extend.core.Jaxpr.__init__", false]], "__init__() (jax.extend.core.jaxpreqn method)": [[258, "jax.extend.core.JaxprEqn.__init__", false]], "__init__() (jax.extend.core.literal method)": [[259, "jax.extend.core.Literal.__init__", false]], "__init__() (jax.extend.core.primitive method)": [[260, "jax.extend.core.Primitive.__init__", false]], "__init__() (jax.extend.core.token method)": [[261, "jax.extend.core.Token.__init__", false]], "__init__() (jax.extend.core.var method)": [[262, "jax.extend.core.Var.__init__", false]], "__init__() (jax.extend.linear_util.wrappedfun method)": [[267, "jax.extend.linear_util.WrappedFun.__init__", false]], "__init__() (jax.lax.linalg.svdalgorithm method)": [[394, "jax.lax.linalg.SvdAlgorithm.__init__", false]], "__init__() (jax.numpy.character method)": [[624, "jax.numpy.character.__init__", false]], "__init__() (jax.numpy.complex128 method)": [[628, "jax.numpy.complex128.__init__", false]], "__init__() (jax.numpy.complex64 method)": [[629, "jax.numpy.complex64.__init__", false]], "__init__() (jax.numpy.complexfloating method)": [[631, "jax.numpy.complexfloating.__init__", false]], "__init__() (jax.numpy.dtype method)": [[668, "jax.numpy.dtype.__init__", false]], "__init__() (jax.numpy.finfo method)": [[701, "jax.numpy.finfo.__init__", false]], "__init__() (jax.numpy.flexible method)": [[704, "jax.numpy.flexible.__init__", false]], "__init__() (jax.numpy.float16 method)": [[708, "jax.numpy.float16.__init__", false]], "__init__() (jax.numpy.float32 method)": [[709, "jax.numpy.float32.__init__", false]], "__init__() (jax.numpy.float64 method)": [[710, "jax.numpy.float64.__init__", false]], "__init__() (jax.numpy.floating method)": [[713, "jax.numpy.floating.__init__", false]], "__init__() (jax.numpy.generic method)": [[730, "jax.numpy.generic.__init__", false]], "__init__() (jax.numpy.iinfo method)": [[748, "jax.numpy.iinfo.__init__", false]], "__init__() (jax.numpy.inexact method)": [[752, "jax.numpy.inexact.__init__", false]], "__init__() (jax.numpy.int16 method)": [[755, "jax.numpy.int16.__init__", false]], "__init__() (jax.numpy.int32 method)": [[756, "jax.numpy.int32.__init__", false]], "__init__() (jax.numpy.int64 method)": [[757, "jax.numpy.int64.__init__", false]], "__init__() (jax.numpy.int8 method)": [[758, "jax.numpy.int8.__init__", false]], "__init__() (jax.numpy.integer method)": [[760, "jax.numpy.integer.__init__", false]], "__init__() (jax.numpy.number method)": [[870, "jax.numpy.number.__init__", false]], "__init__() (jax.numpy.object_ method)": [[871, "jax.numpy.object_.__init__", false]], "__init__() (jax.numpy.signedinteger method)": [[932, "jax.numpy.signedinteger.__init__", false]], "__init__() (jax.numpy.ufunc method)": [[969, "jax.numpy.ufunc.__init__", false]], "__init__() (jax.numpy.uint16 method)": [[971, "jax.numpy.uint16.__init__", false]], "__init__() (jax.numpy.uint32 method)": [[972, "jax.numpy.uint32.__init__", false]], "__init__() (jax.numpy.uint64 method)": [[973, "jax.numpy.uint64.__init__", false]], "__init__() (jax.numpy.uint8 method)": [[974, "jax.numpy.uint8.__init__", false]], "__init__() (jax.numpy.unsignedinteger method)": [[983, "jax.numpy.unsignedinteger.__init__", false]], "__init__() (jax.profiler.steptraceannotation method)": [[1007, "jax.profiler.StepTraceAnnotation.__init__", false]], "__init__() (jax.profiler.traceannotation method)": [[1008, "jax.profiler.TraceAnnotation.__init__", false]], "__init__() (jax.ref.abstractref method)": [[1062, "jax.ref.AbstractRef.__init__", false]], "__init__() (jax.ref.arrayref method)": [[1063, "jax.ref.ArrayRef.__init__", false]], "__init__() (jax.scipy.interpolate.regulargridinterpolator method)": [[1076, "jax.scipy.interpolate.RegularGridInterpolator.__init__", false]], "__init__() (jax.scipy.optimize.optimizeresults method)": [[1104, "jax.scipy.optimize.OptimizeResults.__init__", false]], "__init__() (jax.scipy.spatial.transform.rotation method)": [[1119, "jax.scipy.spatial.transform.Rotation.__init__", false]], "__init__() (jax.scipy.spatial.transform.slerp method)": [[1120, "jax.scipy.spatial.transform.Slerp.__init__", false]], "__init__() (jax.scipy.stats.gaussian_kde method)": [[1209, "jax.scipy.stats.gaussian_kde.__init__", false]], "__init__() (jax.shapedtypestruct method)": [[63, "jax.ShapeDtypeStruct.__init__", false]], "__init__() (jax.tree_util.partial method)": [[1304, "jax.tree_util.Partial.__init__", false]], "_get_vjp (jax.export.exported attribute)": [[1415, "jax.export.Exported._get_vjp", false]], "abs() (in module jax.lax)": [[298, "jax.lax.abs", false]], "abs() (in module jax.numpy)": [[558, "jax.numpy.abs", false]], "absolute() (in module jax.numpy)": [[559, "jax.numpy.absolute", false]], "abstractref (class in jax.ref)": [[1062, "jax.ref.AbstractRef", false]], "acc (in module jax.experimental.pallas.mosaic_gpu)": [[147, "jax.experimental.pallas.mosaic_gpu.ACC", false]], "accumulation_type (jax.lax.dotalgorithmpreset property)": [[1424, "jax.lax.DotAlgorithmPreset.accumulation_type", false]], "acos() (in module jax.lax)": [[299, "jax.lax.acos", false]], "acos() (in module jax.numpy)": [[560, "jax.numpy.acos", false]], "acosh() (in module jax.lax)": [[300, "jax.lax.acosh", false]], "acosh() (in module jax.numpy)": [[561, "jax.numpy.acosh", false]], "adagrad() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.adagrad", false]], "adam() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.adam", false]], "adamax() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.adamax", false]], "add (in module jax.numpy)": [[562, "jax.numpy.add", false]], "add() (in module jax.lax)": [[301, "jax.lax.add", false]], "addressable_devices (jax.sharding.namedsharding property)": [[1434, "jax.sharding.NamedSharding.addressable_devices", false]], "addressable_devices (jax.sharding.sharding property)": [[1434, "jax.sharding.Sharding.addressable_devices", false]], "addressable_devices_indices_map() (jax.sharding.sharding method)": [[1434, "jax.sharding.Sharding.addressable_devices_indices_map", false]], "addressable_shards (jax.array property)": [[2, "jax.Array.addressable_shards", false]], "addupdate() (in module jax.ref)": [[1064, "jax.ref.addupdate", false]], "after_all() (in module jax.lax)": [[302, "jax.lax.after_all", false]], "all() (in module jax.numpy)": [[563, "jax.numpy.all", false]], "all() (in module jax.tree)": [[1289, "jax.tree.all", false]], "all() (jax.array method)": [[3, "jax.Array.all", false]], "all_checks (in module jax.experimental.checkify)": [[116, "jax.experimental.checkify.all_checks", false]], "all_gather() (in module jax.lax)": [[303, "jax.lax.all_gather", false]], "all_leaves() (in module jax.tree_util)": [[1305, "jax.tree_util.all_leaves", false]], "all_to_all() (in module jax.lax)": [[304, "jax.lax.all_to_all", false]], "allclose() (in module jax.numpy)": [[564, "jax.numpy.allclose", false]], "amax() (in module jax.numpy)": [[565, "jax.numpy.amax", false]], "amin() (in module jax.numpy)": [[566, "jax.numpy.amin", false]], "angle() (in module jax.numpy)": [[567, "jax.numpy.angle", false]], "annotate_function() (in module jax.profiler)": [[1009, "jax.profiler.annotate_function", false]], "any() (in module jax.numpy)": [[568, "jax.numpy.any", false]], "any() (jax.array method)": [[4, "jax.Array.any", false]], "any_f8_any_f8_any (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.ANY_F8_ANY_F8_ANY", false]], "any_f8_any_f8_any_fast_accum (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.ANY_F8_ANY_F8_ANY_FAST_ACCUM", false]], "any_f8_any_f8_f32 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.ANY_F8_ANY_F8_F32", false]], "any_f8_any_f8_f32_fast_accum (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.ANY_F8_ANY_F8_F32_FAST_ACCUM", false]], "append() (in module jax.numpy)": [[569, "jax.numpy.append", false]], "apply_along_axis() (in module jax.numpy)": [[570, "jax.numpy.apply_along_axis", false]], "apply_over_axes() (in module jax.numpy)": [[571, "jax.numpy.apply_over_axes", false]], "approx_math (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[150, "jax.experimental.pallas.mosaic_gpu.CompilerParams.approx_math", false]], "approx_max_k() (in module jax.lax)": [[305, "jax.lax.approx_max_k", false]], "approx_min_k() (in module jax.lax)": [[306, "jax.lax.approx_min_k", false]], "approx_tanh() (in module jax.experimental.pallas.triton)": [[184, "jax.experimental.pallas.triton.approx_tanh", false]], "arange() (in module jax.numpy)": [[572, "jax.numpy.arange", false]], "arccos() (in module jax.numpy)": [[573, "jax.numpy.arccos", false]], "arccosh() (in module jax.numpy)": [[574, "jax.numpy.arccosh", false]], "arcsin() (in module jax.numpy)": [[575, "jax.numpy.arcsin", false]], "arcsinh() (in module jax.numpy)": [[576, "jax.numpy.arcsinh", false]], "arctan() (in module jax.numpy)": [[577, "jax.numpy.arctan", false]], "arctan2() (in module jax.numpy)": [[578, "jax.numpy.arctan2", false]], "arctanh() (in module jax.numpy)": [[579, "jax.numpy.arctanh", false]], "argmax() (in module jax.lax)": [[307, "jax.lax.argmax", false]], "argmax() (in module jax.numpy)": [[580, "jax.numpy.argmax", false]], "argmax() (jax.array method)": [[5, "jax.Array.argmax", false]], "argmin() (in module jax.lax)": [[308, "jax.lax.argmin", false]], "argmin() (in module jax.numpy)": [[581, "jax.numpy.argmin", false]], "argmin() (jax.array method)": [[6, "jax.Array.argmin", false]], "argpartition() (in module jax.numpy)": [[582, "jax.numpy.argpartition", false]], "argpartition() (jax.array method)": [[7, "jax.Array.argpartition", false]], "argsort() (in module jax.numpy)": [[583, "jax.numpy.argsort", false]], "argsort() (jax.array method)": [[8, "jax.Array.argsort", false]], "argwhere() (in module jax.numpy)": [[584, "jax.numpy.argwhere", false]], "around() (in module jax.numpy)": [[585, "jax.numpy.around", false]], "array": [[1379, "term-Array", true]], "array (class in jax)": [[0, "jax.Array", false]], "array() (in module jax.numpy)": [[586, "jax.numpy.array", false]], "array_equal() (in module jax.numpy)": [[587, "jax.numpy.array_equal", false]], "array_equiv() (in module jax.numpy)": [[588, "jax.numpy.array_equiv", false]], "array_ref() (in module jax.ref)": [[1065, "jax.ref.array_ref", false]], "array_repr() (in module jax.numpy)": [[589, "jax.numpy.array_repr", false]], "array_split() (in module jax.numpy)": [[590, "jax.numpy.array_split", false]], "array_str() (in module jax.numpy)": [[591, "jax.numpy.array_str", false]], "array_types (in module jax.extend.core)": [[263, "jax.extend.core.array_types", false]], "arraylike (in module jax.typing)": [[1329, "jax.typing.ArrayLike", false]], "arrayref (class in jax.ref)": [[1063, "jax.ref.ArrayRef", false]], "as_text() (jax.stages.compiled method)": [[1435, "jax.stages.Compiled.as_text", false]], "as_text() (jax.stages.lowered method)": [[1435, "jax.stages.Lowered.as_text", false]], "asarray() (in module jax.numpy)": [[592, "jax.numpy.asarray", false]], "asin() (in module jax.lax)": [[309, "jax.lax.asin", false]], "asin() (in module jax.numpy)": [[593, "jax.numpy.asin", false]], "asinh() (in module jax.lax)": [[310, "jax.lax.asinh", false]], "asinh() (in module jax.numpy)": [[594, "jax.numpy.asinh", false]], "assert_equal() (in module jax.experimental.multihost_utils)": [[133, "jax.experimental.multihost_utils.assert_equal", false]], "associative_scan() (in module jax.lax)": [[311, "jax.lax.associative_scan", false]], "astype() (in module jax.numpy)": [[595, "jax.numpy.astype", false]], "astype() (jax.array method)": [[9, "jax.Array.astype", false]], "async_load_tmem() (in module jax.experimental.pallas.mosaic_gpu)": [[160, "jax.experimental.pallas.mosaic_gpu.async_load_tmem", false]], "async_store_tmem() (in module jax.experimental.pallas.mosaic_gpu)": [[161, "jax.experimental.pallas.mosaic_gpu.async_store_tmem", false]], "at (jax.array property)": [[10, "jax.Array.at", false]], "at (jax.numpy.ndarray property)": [[864, "jax.numpy.ndarray.at", false]], "atan() (in module jax.lax)": [[312, "jax.lax.atan", false]], "atan() (in module jax.numpy)": [[596, "jax.numpy.atan", false]], "atan2() (in module jax.lax)": [[313, "jax.lax.atan2", false]], "atan2() (in module jax.numpy)": [[597, "jax.numpy.atan2", false]], "atanh() (in module jax.lax)": [[314, "jax.lax.atanh", false]], "atanh() (in module jax.numpy)": [[598, "jax.numpy.atanh", false]], "atleast_1d() (in module jax.numpy)": [[599, "jax.numpy.atleast_1d", false]], "atleast_2d() (in module jax.numpy)": [[600, "jax.numpy.atleast_2d", false]], "atleast_3d() (in module jax.numpy)": [[601, "jax.numpy.atleast_3d", false]], "atomic_add() (in module jax.experimental.pallas.triton)": [[185, "jax.experimental.pallas.triton.atomic_add", false]], "atomic_and() (in module jax.experimental.pallas.triton)": [[186, "jax.experimental.pallas.triton.atomic_and", false]], "atomic_cas() (in module jax.experimental.pallas.triton)": [[187, "jax.experimental.pallas.triton.atomic_cas", false]], "atomic_max() (in module jax.experimental.pallas.triton)": [[188, "jax.experimental.pallas.triton.atomic_max", false]], "atomic_min() (in module jax.experimental.pallas.triton)": [[189, "jax.experimental.pallas.triton.atomic_min", false]], "atomic_or() (in module jax.experimental.pallas.triton)": [[190, "jax.experimental.pallas.triton.atomic_or", false]], "atomic_xchg() (in module jax.experimental.pallas.triton)": [[191, "jax.experimental.pallas.triton.atomic_xchg", false]], "atomic_xor() (in module jax.experimental.pallas.triton)": [[192, "jax.experimental.pallas.triton.atomic_xor", false]], "automatic_checks (in module jax.experimental.checkify)": [[117, "jax.experimental.checkify.automatic_checks", false]], "average() (in module jax.numpy)": [[602, "jax.numpy.average", false]], "avgpool() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.AvgPool", false]], "away_from_zero (jax.lax.roundingmethod attribute)": [[1424, "jax.lax.RoundingMethod.AWAY_FROM_ZERO", false]], "axis_index() (in module jax.lax)": [[315, "jax.lax.axis_index", false]], "axis_size() (in module jax.lax)": [[316, "jax.lax.axis_size", false]], "ball() (in module jax.random)": [[1018, "jax.random.ball", false]], "barrier (class in jax.experimental.pallas.mosaic_gpu)": [[148, "jax.experimental.pallas.mosaic_gpu.Barrier", false]], "barrier_arrive() (in module jax.experimental.pallas.mosaic_gpu)": [[162, "jax.experimental.pallas.mosaic_gpu.barrier_arrive", false]], "barrier_wait() (in module jax.experimental.pallas.mosaic_gpu)": [[163, "jax.experimental.pallas.mosaic_gpu.barrier_wait", false]], "bartlett() (in module jax.numpy)": [[603, "jax.numpy.bartlett", false]], "batch_matmul() (in module jax.lax)": [[317, "jax.lax.batch_matmul", false]], "batchnorm() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.BatchNorm", false]], "bcoo (class in jax.experimental.sparse)": [[199, "jax.experimental.sparse.BCOO", false]], "bcoo_broadcast_in_dim() (in module jax.experimental.sparse)": [[205, "jax.experimental.sparse.bcoo_broadcast_in_dim", false]], "bcoo_concatenate() (in module jax.experimental.sparse)": [[206, "jax.experimental.sparse.bcoo_concatenate", false]], "bcoo_dot_general() (in module jax.experimental.sparse)": [[207, "jax.experimental.sparse.bcoo_dot_general", false]], "bcoo_dot_general_sampled() (in module jax.experimental.sparse)": [[208, "jax.experimental.sparse.bcoo_dot_general_sampled", false]], "bcoo_dynamic_slice() (in module jax.experimental.sparse)": [[209, "jax.experimental.sparse.bcoo_dynamic_slice", false]], "bcoo_extract() (in module jax.experimental.sparse)": [[210, "jax.experimental.sparse.bcoo_extract", false]], "bcoo_fromdense() (in module jax.experimental.sparse)": [[211, "jax.experimental.sparse.bcoo_fromdense", false]], "bcoo_gather() (in module jax.experimental.sparse)": [[212, "jax.experimental.sparse.bcoo_gather", false]], "bcoo_multiply_dense() (in module jax.experimental.sparse)": [[213, "jax.experimental.sparse.bcoo_multiply_dense", false]], "bcoo_multiply_sparse() (in module jax.experimental.sparse)": [[214, "jax.experimental.sparse.bcoo_multiply_sparse", false]], "bcoo_reduce_sum() (in module jax.experimental.sparse)": [[215, "jax.experimental.sparse.bcoo_reduce_sum", false]], "bcoo_reshape() (in module jax.experimental.sparse)": [[216, "jax.experimental.sparse.bcoo_reshape", false]], "bcoo_slice() (in module jax.experimental.sparse)": [[217, "jax.experimental.sparse.bcoo_slice", false]], "bcoo_sort_indices() (in module jax.experimental.sparse)": [[218, "jax.experimental.sparse.bcoo_sort_indices", false]], "bcoo_squeeze() (in module jax.experimental.sparse)": [[219, "jax.experimental.sparse.bcoo_squeeze", false]], "bcoo_sum_duplicates() (in module jax.experimental.sparse)": [[220, "jax.experimental.sparse.bcoo_sum_duplicates", false]], "bcoo_todense() (in module jax.experimental.sparse)": [[221, "jax.experimental.sparse.bcoo_todense", false]], "bcoo_transpose() (in module jax.experimental.sparse)": [[222, "jax.experimental.sparse.bcoo_transpose", false]], "bcoo_update_layout() (in module jax.experimental.sparse)": [[223, "jax.experimental.sparse.bcoo_update_layout", false]], "bcsr (class in jax.experimental.sparse)": [[200, "jax.experimental.sparse.BCSR", false]], "bcsr_dot_general() (in module jax.experimental.sparse)": [[224, "jax.experimental.sparse.bcsr_dot_general", false]], "bcsr_extract() (in module jax.experimental.sparse)": [[225, "jax.experimental.sparse.bcsr_extract", false]], "bcsr_fromdense() (in module jax.experimental.sparse)": [[226, "jax.experimental.sparse.bcsr_fromdense", false]], "bcsr_todense() (in module jax.experimental.sparse)": [[227, "jax.experimental.sparse.bcsr_todense", false]], "bernoulli() (in module jax.random)": [[1019, "jax.random.bernoulli", false]], "bernoulli() (in module jax.scipy.special)": [[1121, "jax.scipy.special.bernoulli", false]], "bessel_i0e() (in module jax.lax)": [[318, "jax.lax.bessel_i0e", false]], "bessel_i1e() (in module jax.lax)": [[319, "jax.lax.bessel_i1e", false]], "beta() (in module jax.random)": [[1020, "jax.random.beta", false]], "beta() (in module jax.scipy.special)": [[1122, "jax.scipy.special.beta", false]], "betainc() (in module jax.lax)": [[320, "jax.lax.betainc", false]], "betainc() (in module jax.scipy.special)": [[1123, "jax.scipy.special.betainc", false]], "betaln() (in module jax.scipy.special)": [[1124, "jax.scipy.special.betaln", false]], "bf16_bf16_bf16 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.BF16_BF16_BF16", false]], "bf16_bf16_f32 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.BF16_BF16_F32", false]], "bf16_bf16_f32_x3 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.BF16_BF16_F32_X3", false]], "bf16_bf16_f32_x6 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.BF16_BF16_F32_X6", false]], "bf16_bf16_f32_x9 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.BF16_BF16_F32_X9", false]], "bfloat16 (class in jax.dtypes)": [[102, "jax.dtypes.bfloat16", false]], "bicgstab() (in module jax.scipy.sparse.linalg)": [[1116, "jax.scipy.sparse.linalg.bicgstab", false]], "bincount() (in module jax.numpy)": [[604, "jax.numpy.bincount", false]], "binomial() (in module jax.random)": [[1021, "jax.random.binomial", false]], "bitcast_convert_type() (in module jax.lax)": [[321, "jax.lax.bitcast_convert_type", false]], "bits (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.bits", false]], "bits() (in module jax.random)": [[1022, "jax.random.bits", false]], "bitwise_and (in module jax.numpy)": [[605, "jax.numpy.bitwise_and", false]], "bitwise_and() (in module jax.lax)": [[322, "jax.lax.bitwise_and", false]], "bitwise_count() (in module jax.numpy)": [[606, "jax.numpy.bitwise_count", false]], "bitwise_invert() (in module jax.numpy)": [[607, "jax.numpy.bitwise_invert", false]], "bitwise_left_shift() (in module jax.numpy)": [[608, "jax.numpy.bitwise_left_shift", false]], "bitwise_not() (in module jax.lax)": [[323, "jax.lax.bitwise_not", false]], "bitwise_not() (in module jax.numpy)": [[609, "jax.numpy.bitwise_not", false]], "bitwise_or (in module jax.numpy)": [[610, "jax.numpy.bitwise_or", false]], "bitwise_or() (in module jax.lax)": [[324, "jax.lax.bitwise_or", false]], "bitwise_right_shift() (in module jax.numpy)": [[611, "jax.numpy.bitwise_right_shift", false]], "bitwise_xor (in module jax.numpy)": [[612, "jax.numpy.bitwise_xor", false]], "bitwise_xor() (in module jax.lax)": [[325, "jax.lax.bitwise_xor", false]], "blackman() (in module jax.numpy)": [[613, "jax.numpy.blackman", false]], "block() (in module jax.numpy)": [[614, "jax.numpy.block", false]], "block_diag() (in module jax.scipy.linalg)": [[1077, "jax.scipy.linalg.block_diag", false]], "block_until_ready() (in module jax)": [[64, "jax.block_until_ready", false]], "blockspec (class in jax.experimental.pallas)": [[139, "jax.experimental.pallas.BlockSpec", false]], "blockspec (class in jax.experimental.pallas.mosaic_gpu)": [[149, "jax.experimental.pallas.mosaic_gpu.BlockSpec", false]], "bool_ (in module jax.numpy)": [[615, "jax.numpy.bool_", false]], "breakpoint() (in module jax.debug)": [[81, "jax.debug.breakpoint", false]], "broadcast() (in module jax.lax)": [[326, "jax.lax.broadcast", false]], "broadcast() (in module jax.tree)": [[1290, "jax.tree.broadcast", false]], "broadcast_arrays() (in module jax.numpy)": [[616, "jax.numpy.broadcast_arrays", false]], "broadcast_in_dim() (in module jax.lax)": [[327, "jax.lax.broadcast_in_dim", false]], "broadcast_one_to_all() (in module jax.experimental.multihost_utils)": [[134, "jax.experimental.multihost_utils.broadcast_one_to_all", false]], "broadcast_shapes() (in module jax.lax)": [[328, "jax.lax.broadcast_shapes", false]], "broadcast_shapes() (in module jax.numpy)": [[617, "jax.numpy.broadcast_shapes", false]], "broadcast_to() (in module jax.experimental.pallas)": [[142, "jax.experimental.pallas.broadcast_to", false]], "broadcast_to() (in module jax.numpy)": [[618, "jax.numpy.broadcast_to", false]], "broadcast_to_rank() (in module jax.lax)": [[329, "jax.lax.broadcast_to_rank", false]], "broadcasted_iota() (in module jax.lax)": [[330, "jax.lax.broadcasted_iota", false]], "c_ (in module jax.numpy)": [[619, "jax.numpy.c_", false]], "cache() (in module jax.extend.linear_util)": [[268, "jax.extend.linear_util.cache", false]], "call() (jax.export.exported method)": [[1415, "jax.export.Exported.call", false]], "callback() (in module jax.debug)": [[82, "jax.debug.callback", false]], "calling_convention_version (jax.export.exported attribute)": [[1415, "jax.export.Exported.calling_convention_version", false]], "can_cast() (in module jax.numpy)": [[620, "jax.numpy.can_cast", false]], "canonicalize_dtype() (in module jax.dtypes)": [[103, "jax.dtypes.canonicalize_dtype", false]], "categorical() (in module jax.random)": [[1023, "jax.random.categorical", false]], "cauchy() (in module jax.random)": [[1024, "jax.random.cauchy", false]], "cbrt() (in module jax.lax)": [[331, "jax.lax.cbrt", false]], "cbrt() (in module jax.numpy)": [[621, "jax.numpy.cbrt", false]], "cdf() (in module jax.scipy.stats.bernoulli)": [[1166, "jax.scipy.stats.bernoulli.cdf", false]], "cdf() (in module jax.scipy.stats.beta)": [[1170, "jax.scipy.stats.beta.cdf", false]], "cdf() (in module jax.scipy.stats.cauchy)": [[1180, "jax.scipy.stats.cauchy.cdf", false]], "cdf() (in module jax.scipy.stats.chi2)": [[1188, "jax.scipy.stats.chi2.cdf", false]], "cdf() (in module jax.scipy.stats.expon)": [[1196, "jax.scipy.stats.expon.cdf", false]], "cdf() (in module jax.scipy.stats.gamma)": [[1203, "jax.scipy.stats.gamma.cdf", false]], "cdf() (in module jax.scipy.stats.gennorm)": [[1217, "jax.scipy.stats.gennorm.cdf", false]], "cdf() (in module jax.scipy.stats.gumbel_l)": [[1222, "jax.scipy.stats.gumbel_l.cdf", false]], "cdf() (in module jax.scipy.stats.gumbel_r)": [[1229, "jax.scipy.stats.gumbel_r.cdf", false]], "cdf() (in module jax.scipy.stats.laplace)": [[1236, "jax.scipy.stats.laplace.cdf", false]], "cdf() (in module jax.scipy.stats.logistic)": [[1239, "jax.scipy.stats.logistic.cdf", false]], "cdf() (in module jax.scipy.stats.norm)": [[1252, "jax.scipy.stats.norm.cdf", false]], "cdf() (in module jax.scipy.stats.poisson)": [[1262, "jax.scipy.stats.poisson.cdf", false]], "cdf() (in module jax.scipy.stats.truncnorm)": [[1269, "jax.scipy.stats.truncnorm.cdf", false]], "cdf() (in module jax.scipy.stats.uniform)": [[1275, "jax.scipy.stats.uniform.cdf", false]], "cdouble (in module jax.numpy)": [[622, "jax.numpy.cdouble", false]], "ceil() (in module jax.lax)": [[332, "jax.lax.ceil", false]], "ceil() (in module jax.numpy)": [[623, "jax.numpy.ceil", false]], "celu() (in module jax.nn)": [[507, "jax.nn.celu", false]], "cg() (in module jax.scipy.sparse.linalg)": [[1117, "jax.scipy.sparse.linalg.cg", false]], "character (class in jax.numpy)": [[624, "jax.numpy.character", false]], "check() (in module jax.experimental.checkify)": [[118, "jax.experimental.checkify.check", false]], "check_error() (in module jax.experimental.checkify)": [[119, "jax.experimental.checkify.check_error", false]], "check_grads() (in module jax.test_util)": [[1285, "jax.test_util.check_grads", false]], "check_jvp() (in module jax.test_util)": [[1286, "jax.test_util.check_jvp", false]], "check_tracer_leaks (in module jax)": [[65, "jax.check_tracer_leaks", false]], "check_vjp() (in module jax.test_util)": [[1287, "jax.test_util.check_vjp", false]], "checkify() (in module jax.experimental.checkify)": [[120, "jax.experimental.checkify.checkify", false]], "checking_leaks (in module jax)": [[66, "jax.checking_leaks", false]], "checkpoint() (in module jax)": [[67, "jax.checkpoint", false]], "chisquare() (in module jax.random)": [[1025, "jax.random.chisquare", false]], "cho_factor() (in module jax.scipy.linalg)": [[1078, "jax.scipy.linalg.cho_factor", false]], "cho_solve() (in module jax.scipy.linalg)": [[1079, "jax.scipy.linalg.cho_solve", false]], "choice() (in module jax.random)": [[1026, "jax.random.choice", false]], "cholesky() (in module jax.lax.linalg)": [[395, "jax.lax.linalg.cholesky", false]], "cholesky() (in module jax.numpy.linalg)": [[788, "jax.numpy.linalg.cholesky", false]], "cholesky() (in module jax.scipy.linalg)": [[1080, "jax.scipy.linalg.cholesky", false]], "cholesky_update() (in module jax.lax.linalg)": [[396, "jax.lax.linalg.cholesky_update", false]], "choose() (in module jax.numpy)": [[625, "jax.numpy.choose", false]], "choose() (jax.array method)": [[11, "jax.Array.choose", false]], "clamp() (in module jax.lax)": [[333, "jax.lax.clamp", false]], "clear_caches() (in module jax)": [[68, "jax.clear_caches", false]], "clip() (in module jax.numpy)": [[626, "jax.numpy.clip", false]], "clip() (jax.array method)": [[12, "jax.Array.clip", false]], "clip_grads() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.clip_grads", false]], "clone() (in module jax.random)": [[1027, "jax.random.clone", false]], "closedjaxpr (class in jax.extend.core)": [[256, "jax.extend.core.ClosedJaxpr", false]], "closure_convert() (in module jax)": [[69, "jax.closure_convert", false]], "clz() (in module jax.lax)": [[334, "jax.lax.clz", false]], "collapse() (in module jax.lax)": [[335, "jax.lax.collapse", false]], "column_stack() (in module jax.numpy)": [[627, "jax.numpy.column_stack", false]], "commit_smem() (in module jax.experimental.pallas.mosaic_gpu)": [[164, "jax.experimental.pallas.mosaic_gpu.commit_smem", false]], "commit_tmem() (in module jax.experimental.pallas.mosaic_gpu)": [[165, "jax.experimental.pallas.mosaic_gpu.commit_tmem", false]], "committed (jax.array property)": [[13, "jax.Array.committed", false]], "compile() (jax.stages.lowered method)": [[1435, "jax.stages.Lowered.compile", false]], "compiled (class in jax.stages)": [[1435, "jax.stages.Compiled", false]], "compiler_ir() (jax.stages.lowered method)": [[1435, "jax.stages.Lowered.compiler_ir", false]], "compilerparams (class in jax.experimental.pallas.mosaic_gpu)": [[150, "jax.experimental.pallas.mosaic_gpu.CompilerParams", false]], "compilerparams (class in jax.experimental.pallas.triton)": [[183, "jax.experimental.pallas.triton.CompilerParams", false]], "complex() (in module jax.lax)": [[336, "jax.lax.complex", false]], "complex128 (class in jax.numpy)": [[628, "jax.numpy.complex128", false]], "complex64 (class in jax.numpy)": [[629, "jax.numpy.complex64", false]], "complex_ (in module jax.numpy)": [[630, "jax.numpy.complex_", false]], "complexfloating (class in jax.numpy)": [[631, "jax.numpy.complexfloating", false]], "complexwarning": [[557, "jax.numpy.ComplexWarning", false]], "composite() (in module jax.lax)": [[337, "jax.lax.composite", false]], "compress() (in module jax.numpy)": [[632, "jax.numpy.compress", false]], "compress() (jax.array method)": [[14, "jax.Array.compress", false]], "concat() (in module jax.numpy)": [[633, "jax.numpy.concat", false]], "concatenate() (in module jax.lax)": [[338, "jax.lax.concatenate", false]], "concatenate() (in module jax.numpy)": [[634, "jax.numpy.concatenate", false]], "concretizationtypeerror (class in jax.errors)": [[1370, "jax.errors.ConcretizationTypeError", false]], "cond() (in module jax.lax)": [[339, "jax.lax.cond", false]], "cond() (in module jax.numpy.linalg)": [[789, "jax.numpy.linalg.cond", false]], "config (in module jax)": [[70, "jax.config", false]], "conj() (in module jax.lax)": [[340, "jax.lax.conj", false]], "conj() (in module jax.numpy)": [[635, "jax.numpy.conj", false]], "conj() (jax.array method)": [[15, "jax.Array.conj", false]], "conjugate() (in module jax.numpy)": [[636, "jax.numpy.conjugate", false]], "conjugate() (jax.array method)": [[16, "jax.Array.conjugate", false]], "constant() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.constant", false]], "constant() (in module jax.nn.initializers)": [[518, "jax.nn.initializers.constant", false]], "conv() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.Conv", false]], "conv() (in module jax.lax)": [[341, "jax.lax.conv", false]], "conv1dtranspose() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.Conv1DTranspose", false]], "conv_dimension_numbers() (in module jax.lax)": [[342, "jax.lax.conv_dimension_numbers", false]], "conv_general_dilated() (in module jax.lax)": [[343, "jax.lax.conv_general_dilated", false]], "conv_general_dilated_local() (in module jax.lax)": [[344, "jax.lax.conv_general_dilated_local", false]], "conv_general_dilated_patches() (in module jax.lax)": [[345, "jax.lax.conv_general_dilated_patches", false]], "conv_transpose() (in module jax.lax)": [[346, "jax.lax.conv_transpose", false]], "conv_with_general_padding() (in module jax.lax)": [[347, "jax.lax.conv_with_general_padding", false]], "convdimensionnumbers (class in jax.lax)": [[1424, "jax.lax.ConvDimensionNumbers", false]], "convert_element_type() (in module jax.lax)": [[348, "jax.lax.convert_element_type", false]], "convgeneraldilateddimensionnumbers (in module jax.lax)": [[1424, "jax.lax.ConvGeneralDilatedDimensionNumbers", false]], "convolve() (in module jax.numpy)": [[637, "jax.numpy.convolve", false]], "convolve() (in module jax.scipy.signal)": [[1106, "jax.scipy.signal.convolve", false]], "convolve2d() (in module jax.scipy.signal)": [[1107, "jax.scipy.signal.convolve2d", false]], "convtranspose() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.ConvTranspose", false]], "coo (class in jax.experimental.sparse)": [[201, "jax.experimental.sparse.COO", false]], "coo_fromdense() (in module jax.experimental.sparse)": [[228, "jax.experimental.sparse.coo_fromdense", false]], "coo_matmat() (in module jax.experimental.sparse)": [[229, "jax.experimental.sparse.coo_matmat", false]], "coo_matvec() (in module jax.experimental.sparse)": [[230, "jax.experimental.sparse.coo_matvec", false]], "coo_todense() (in module jax.experimental.sparse)": [[231, "jax.experimental.sparse.coo_todense", false]], "copy() (in module jax.numpy)": [[638, "jax.numpy.copy", false]], "copy() (jax.array method)": [[17, "jax.Array.copy", false]], "copy_gmem_to_smem() (in module jax.experimental.pallas.mosaic_gpu)": [[166, "jax.experimental.pallas.mosaic_gpu.copy_gmem_to_smem", false]], "copy_smem_to_gmem() (in module jax.experimental.pallas.mosaic_gpu)": [[167, "jax.experimental.pallas.mosaic_gpu.copy_smem_to_gmem", false]], "copy_to_host_async() (in module jax)": [[71, "jax.copy_to_host_async", false]], "copy_to_host_async() (jax.array method)": [[18, "jax.Array.copy_to_host_async", false]], "copysign() (in module jax.numpy)": [[639, "jax.numpy.copysign", false]], "corrcoef() (in module jax.numpy)": [[640, "jax.numpy.corrcoef", false]], "correlate() (in module jax.numpy)": [[641, "jax.numpy.correlate", false]], "correlate() (in module jax.scipy.signal)": [[1108, "jax.scipy.signal.correlate", false]], "correlate2d() (in module jax.scipy.signal)": [[1109, "jax.scipy.signal.correlate2d", false]], "cos() (in module jax.lax)": [[349, "jax.lax.cos", false]], "cos() (in module jax.numpy)": [[642, "jax.numpy.cos", false]], "cosh() (in module jax.lax)": [[350, "jax.lax.cosh", false]], "cosh() (in module jax.numpy)": [[643, "jax.numpy.cosh", false]], "cost_analysis() (jax.stages.compiled method)": [[1435, "jax.stages.Compiled.cost_analysis", false]], "cost_analysis() (jax.stages.lowered method)": [[1435, "jax.stages.Lowered.cost_analysis", false]], "count_nonzero() (in module jax.numpy)": [[644, "jax.numpy.count_nonzero", false]], "cov() (in module jax.numpy)": [[645, "jax.numpy.cov", false]], "cpu": [[1379, "term-CPU", true]], "create_device_mesh() (in module jax.experimental.mesh_utils)": [[131, "jax.experimental.mesh_utils.create_device_mesh", false]], "create_hybrid_device_mesh() (in module jax.experimental.mesh_utils)": [[132, "jax.experimental.mesh_utils.create_hybrid_device_mesh", false]], "cross() (in module jax.numpy)": [[646, "jax.numpy.cross", false]], "cross() (in module jax.numpy.linalg)": [[790, "jax.numpy.linalg.cross", false]], "csc (class in jax.experimental.sparse)": [[202, "jax.experimental.sparse.CSC", false]], "csd() (in module jax.scipy.signal)": [[1110, "jax.scipy.signal.csd", false]], "csingle (in module jax.numpy)": [[647, "jax.numpy.csingle", false]], "csr (class in jax.experimental.sparse)": [[203, "jax.experimental.sparse.CSR", false]], "csr_fromdense() (in module jax.experimental.sparse)": [[232, "jax.experimental.sparse.csr_fromdense", false]], "csr_matmat() (in module jax.experimental.sparse)": [[233, "jax.experimental.sparse.csr_matmat", false]], "csr_matvec() (in module jax.experimental.sparse)": [[234, "jax.experimental.sparse.csr_matvec", false]], "csr_todense() (in module jax.experimental.sparse)": [[235, "jax.experimental.sparse.csr_todense", false]], "cumlogsumexp() (in module jax.lax)": [[351, "jax.lax.cumlogsumexp", false]], "cummax() (in module jax.lax)": [[352, "jax.lax.cummax", false]], "cummin() (in module jax.lax)": [[353, "jax.lax.cummin", false]], "cumprod() (in module jax.lax)": [[354, "jax.lax.cumprod", false]], "cumprod() (in module jax.numpy)": [[648, "jax.numpy.cumprod", false]], "cumprod() (jax.array method)": [[19, "jax.Array.cumprod", false]], "cumsum() (in module jax.lax)": [[355, "jax.lax.cumsum", false]], "cumsum() (in module jax.numpy)": [[649, "jax.numpy.cumsum", false]], "cumsum() (jax.array method)": [[20, "jax.Array.cumsum", false]], "cumulative_prod() (in module jax.numpy)": [[650, "jax.numpy.cumulative_prod", false]], "cumulative_sum() (in module jax.numpy)": [[651, "jax.numpy.cumulative_sum", false]], "custom_call() (jax.export.disabledsafetycheck class method)": [[1415, "jax.export.DisabledSafetyCheck.custom_call", false]], "custom_dce (class in jax.experimental.custom_dce)": [[126, "jax.experimental.custom_dce.custom_dce", false]], "custom_gradient() (in module jax)": [[75, "jax.custom_gradient", false]], "custom_jvp (class in jax)": [[76, "jax.custom_jvp", false]], "custom_linear_solve() (in module jax.lax)": [[356, "jax.lax.custom_linear_solve", false]], "custom_partitioning() (in module jax.experimental.custom_partitioning)": [[1402, "jax.experimental.custom_partitioning.custom_partitioning", false]], "custom_root() (in module jax.lax)": [[357, "jax.lax.custom_root", false]], "custom_vjp (class in jax)": [[79, "jax.custom_vjp", false]], "custom_vmap (class in jax.custom_batching)": [[72, "jax.custom_batching.custom_vmap", false]], "data (jax.experimental.sparse.bcoo attribute)": [[199, "jax.experimental.sparse.BCOO.data", false]], "dct() (in module jax.scipy.fft)": [[1071, "jax.scipy.fft.dct", false]], "dctn() (in module jax.scipy.fft)": [[1072, "jax.scipy.fft.dctn", false]], "debug_barrier() (in module jax.experimental.pallas.triton)": [[193, "jax.experimental.pallas.triton.debug_barrier", false]], "debug_infs (in module jax)": [[87, "jax.debug_infs", false]], "debug_nans (in module jax)": [[88, "jax.debug_nans", false]], "debug_print() (in module jax.experimental.pallas)": [[143, "jax.experimental.pallas.debug_print", false]], "def_dce() (jax.experimental.custom_dce.custom_dce method)": [[127, "jax.experimental.custom_dce.custom_dce.def_dce", false]], "def_vmap() (jax.custom_batching.custom_vmap method)": [[73, "jax.custom_batching.custom_vmap.def_vmap", false]], "default (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.DEFAULT", false]], "default() (jax.sharding.pmapsharding class method)": [[1434, "jax.sharding.PmapSharding.default", false]], "default_backend() (in module jax)": [[89, "jax.default_backend", false]], "default_device (in module jax)": [[90, "jax.default_device", false]], "default_export_platform() (in module jax.export)": [[246, "jax.export.default_export_platform", false]], "default_matmul_precision (in module jax)": [[91, "jax.default_matmul_precision", false]], "default_prng_impl (in module jax)": [[92, "jax.default_prng_impl", false]], "define_prng_impl() (in module jax.extend.random)": [[276, "jax.extend.random.define_prng_impl", false]], "defjvp() (jax.custom_jvp method)": [[77, "jax.custom_jvp.defjvp", false]], "defjvps() (jax.custom_jvp method)": [[78, "jax.custom_jvp.defjvps", false]], "defvjp() (jax.custom_vjp method)": [[80, "jax.custom_vjp.defvjp", false]], "deg2rad() (in module jax.numpy)": [[652, "jax.numpy.deg2rad", false]], "degrees() (in module jax.numpy)": [[653, "jax.numpy.degrees", false]], "delay_release (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[150, "jax.experimental.pallas.mosaic_gpu.CompilerParams.delay_release", false]], "delete() (in module jax.numpy)": [[654, "jax.numpy.delete", false]], "delta_orthogonal() (in module jax.nn.initializers)": [[519, "jax.nn.initializers.delta_orthogonal", false]], "dense() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.Dense", false]], "deserialize() (in module jax.export)": [[247, "jax.export.deserialize", false]], "deserialize_and_load() (in module jax.experimental.serialize_executable)": [[196, "jax.experimental.serialize_executable.deserialize_and_load", false]], "det() (in module jax.numpy.linalg)": [[791, "jax.numpy.linalg.det", false]], "det() (in module jax.scipy.linalg)": [[1081, "jax.scipy.linalg.det", false]], "detrend() (in module jax.scipy.signal)": [[1111, "jax.scipy.signal.detrend", false]], "device": [[1379, "term-Device", true]], "device (class in jax)": [[62, "jax.Device", false]], "device (jax.array property)": [[21, "jax.Array.device", false]], "device_count() (in module jax)": [[93, "jax.device_count", false]], "device_get() (in module jax)": [[94, "jax.device_get", false]], "device_memory_profile() (in module jax.profiler)": [[1010, "jax.profiler.device_memory_profile", false]], "device_put() (in module jax)": [[95, "jax.device_put", false]], "device_set (jax.sharding.namedsharding property)": [[1434, "jax.sharding.NamedSharding.device_set", false]], "device_set (jax.sharding.pmapsharding property)": [[1434, "jax.sharding.PmapSharding.device_set", false]], "device_set (jax.sharding.sharding property)": [[1434, "jax.sharding.Sharding.device_set", false]], "device_set (jax.sharding.singledevicesharding property)": [[1434, "jax.sharding.SingleDeviceSharding.device_set", false]], "devices (jax.sharding.pmapsharding property)": [[1434, "jax.sharding.PmapSharding.devices", false]], "devices() (in module jax)": [[96, "jax.devices", false]], "devices_indices_map() (jax.sharding.pmapsharding method)": [[1434, "jax.sharding.PmapSharding.devices_indices_map", false]], "devices_indices_map() (jax.sharding.sharding method)": [[1434, "jax.sharding.Sharding.devices_indices_map", false]], "devices_indices_map() (jax.sharding.singledevicesharding method)": [[1434, "jax.sharding.SingleDeviceSharding.devices_indices_map", false]], "diag() (in module jax.numpy)": [[655, "jax.numpy.diag", false]], "diag_indices() (in module jax.numpy)": [[656, "jax.numpy.diag_indices", false]], "diag_indices_from() (in module jax.numpy)": [[657, "jax.numpy.diag_indices_from", false]], "diagflat() (in module jax.numpy)": [[658, "jax.numpy.diagflat", false]], "diagonal() (in module jax.numpy)": [[659, "jax.numpy.diagonal", false]], "diagonal() (in module jax.numpy.linalg)": [[792, "jax.numpy.linalg.diagonal", false]], "diagonal() (jax.array method)": [[22, "jax.Array.diagonal", false]], "diff() (in module jax.numpy)": [[660, "jax.numpy.diff", false]], "digamma() (in module jax.lax)": [[358, "jax.lax.digamma", false]], "digamma() (in module jax.scipy.special)": [[1125, "jax.scipy.special.digamma", false]], "digitize() (in module jax.numpy)": [[661, "jax.numpy.digitize", false]], "dimension_semantics (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[150, "jax.experimental.pallas.mosaic_gpu.CompilerParams.dimension_semantics", false]], "dirichlet() (in module jax.random)": [[1028, "jax.random.dirichlet", false]], "disable_jit() (in module jax)": [[97, "jax.disable_jit", false]], "disable_x64() (in module jax.experimental)": [[128, "jax.experimental.disable_x64", false]], "disabled_safety_checks (jax.export.exported attribute)": [[1415, "jax.export.Exported.disabled_safety_checks", false]], "disabledsafetycheck (class in jax.export)": [[1415, "jax.export.DisabledSafetyCheck", false]], "div() (in module jax.lax)": [[359, "jax.lax.div", false]], "div_checks (in module jax.experimental.checkify)": [[121, "jax.experimental.checkify.div_checks", false]], "divide() (in module jax.numpy)": [[662, "jax.numpy.divide", false]], "divmod() (in module jax.numpy)": [[663, "jax.numpy.divmod", false]], "dot() (in module jax.experimental.pallas)": [[144, "jax.experimental.pallas.dot", false]], "dot() (in module jax.lax)": [[360, "jax.lax.dot", false]], "dot() (in module jax.numpy)": [[664, "jax.numpy.dot", false]], "dot() (jax.array method)": [[23, "jax.Array.dot", false]], "dot_general() (in module jax.lax)": [[361, "jax.lax.dot_general", false]], "dot_product_attention() (in module jax.nn)": [[508, "jax.nn.dot_product_attention", false]], "dotalgorithm (class in jax.lax)": [[1424, "jax.lax.DotAlgorithm", false]], "dotalgorithmpreset (class in jax.lax)": [[1424, "jax.lax.DotAlgorithmPreset", false]], "double (in module jax.numpy)": [[665, "jax.numpy.double", false]], "double_sided_maxwell() (in module jax.random)": [[1029, "jax.random.double_sided_maxwell", false]], "dropout() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.Dropout", false]], "dsplit() (in module jax.numpy)": [[666, "jax.numpy.dsplit", false]], "dstack() (in module jax.numpy)": [[667, "jax.numpy.dstack", false]], "dtype (class in jax.numpy)": [[668, "jax.numpy.dtype", false]], "dtype (jax.array property)": [[24, "jax.Array.dtype", false]], "dtype (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.dtype", false]], "dtypelike (in module jax.typing)": [[1330, "jax.typing.DTypeLike", false]], "dynamic_index_in_dim() (in module jax.lax)": [[362, "jax.lax.dynamic_index_in_dim", false]], "dynamic_slice() (in module jax.lax)": [[363, "jax.lax.dynamic_slice", false]], "dynamic_slice_in_dim() (in module jax.lax)": [[364, "jax.lax.dynamic_slice_in_dim", false]], "dynamic_update_index_in_dim() (in module jax.lax)": [[365, "jax.lax.dynamic_update_index_in_dim", false]], "dynamic_update_slice() (in module jax.lax)": [[366, "jax.lax.dynamic_update_slice", false]], "dynamic_update_slice_in_dim() (in module jax.lax)": [[367, "jax.lax.dynamic_update_slice_in_dim", false]], "ediff1d() (in module jax.numpy)": [[669, "jax.numpy.ediff1d", false]], "eig() (in module jax.lax.linalg)": [[397, "jax.lax.linalg.eig", false]], "eig() (in module jax.numpy.linalg)": [[793, "jax.numpy.linalg.eig", false]], "eigh() (in module jax.lax.linalg)": [[398, "jax.lax.linalg.eigh", false]], "eigh() (in module jax.numpy.linalg)": [[794, "jax.numpy.linalg.eigh", false]], "eigh() (in module jax.scipy.linalg)": [[1082, "jax.scipy.linalg.eigh", false]], "eigh_tridiagonal() (in module jax.scipy.linalg)": [[1083, "jax.scipy.linalg.eigh_tridiagonal", false]], "eigvals() (in module jax.numpy.linalg)": [[795, "jax.numpy.linalg.eigvals", false]], "eigvalsh() (in module jax.numpy.linalg)": [[796, "jax.numpy.linalg.eigvalsh", false]], "einsum() (in module jax.numpy)": [[670, "jax.numpy.einsum", false]], "einsum_path() (in module jax.numpy)": [[671, "jax.numpy.einsum_path", false]], "elementwise() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.elementwise", false]], "elementwise_inline_asm() (in module jax.experimental.pallas.triton)": [[194, "jax.experimental.pallas.triton.elementwise_inline_asm", false]], "elu() (in module jax.nn)": [[509, "jax.nn.elu", false]], "emit_pipeline() (in module jax.experimental.pallas.mosaic_gpu)": [[168, "jax.experimental.pallas.mosaic_gpu.emit_pipeline", false]], "empty() (in module jax.experimental.sparse)": [[236, "jax.experimental.sparse.empty", false]], "empty() (in module jax.numpy)": [[672, "jax.numpy.empty", false]], "empty_like() (in module jax.numpy)": [[673, "jax.numpy.empty_like", false]], "enable_checks (in module jax)": [[109, "jax.enable_checks", false]], "enable_custom_prng (in module jax)": [[110, "jax.enable_custom_prng", false]], "enable_custom_vjp_by_custom_transpose (in module jax)": [[111, "jax.enable_custom_vjp_by_custom_transpose", false]], "enable_x64() (in module jax.experimental)": [[129, "jax.experimental.enable_x64", false]], "ensure_compile_time_eval() (in module jax)": [[112, "jax.ensure_compile_time_eval", false]], "entr() (in module jax.scipy.special)": [[1126, "jax.scipy.special.entr", false]], "eps (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.eps", false]], "epsneg (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.epsneg", false]], "eq() (in module jax.lax)": [[368, "jax.lax.eq", false]], "equal() (in module jax.numpy)": [[674, "jax.numpy.equal", false]], "erf() (in module jax.lax)": [[369, "jax.lax.erf", false]], "erf() (in module jax.scipy.special)": [[1127, "jax.scipy.special.erf", false]], "erf_inv() (in module jax.lax)": [[370, "jax.lax.erf_inv", false]], "erfc() (in module jax.lax)": [[371, "jax.lax.erfc", false]], "erfc() (in module jax.scipy.special)": [[1128, "jax.scipy.special.erfc", false]], "erfinv() (in module jax.scipy.special)": [[1129, "jax.scipy.special.erfinv", false]], "error (class in jax.experimental.checkify)": [[114, "jax.experimental.checkify.Error", false]], "eval_shape() (in module jax)": [[113, "jax.eval_shape", false]], "evaluate() (jax.scipy.stats.gaussian_kde method)": [[1210, "jax.scipy.stats.gaussian_kde.evaluate", false]], "exp() (in module jax.lax)": [[372, "jax.lax.exp", false]], "exp() (in module jax.numpy)": [[675, "jax.numpy.exp", false]], "exp1() (in module jax.scipy.special)": [[1130, "jax.scipy.special.exp1", false]], "exp2() (in module jax.lax)": [[373, "jax.lax.exp2", false]], "exp2() (in module jax.numpy)": [[676, "jax.numpy.exp2", false]], "expand_dims() (in module jax.lax)": [[374, "jax.lax.expand_dims", false]], "expand_dims() (in module jax.numpy)": [[677, "jax.numpy.expand_dims", false]], "expi (in module jax.scipy.special)": [[1131, "jax.scipy.special.expi", false]], "expit() (in module jax.scipy.special)": [[1132, "jax.scipy.special.expit", false]], "expm() (in module jax.scipy.linalg)": [[1084, "jax.scipy.linalg.expm", false]], "expm1() (in module jax.lax)": [[375, "jax.lax.expm1", false]], "expm1() (in module jax.numpy)": [[678, "jax.numpy.expm1", false]], "expm_frechet() (in module jax.scipy.linalg)": [[1085, "jax.scipy.linalg.expm_frechet", false]], "expn (in module jax.scipy.special)": [[1133, "jax.scipy.special.expn", false]], "exponential() (in module jax.random)": [[1030, "jax.random.exponential", false]], "exponential_decay() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.exponential_decay", false]], "export() (in module jax.export)": [[248, "jax.export.export", false]], "exported (class in jax.export)": [[1415, "jax.export.Exported", false]], "extract() (in module jax.numpy)": [[679, "jax.numpy.extract", false]], "eye() (in module jax.experimental.sparse)": [[237, "jax.experimental.sparse.eye", false]], "eye() (in module jax.numpy)": [[680, "jax.numpy.eye", false]], "f() (in module jax.random)": [[1031, "jax.random.f", false]], "f16_f16_f16 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.F16_F16_F16", false]], "f16_f16_f32 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.F16_F16_F32", false]], "f32_f32_f32 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.F32_F32_F32", false]], "f64_f64_f64 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.F64_F64_F64", false]], "fabs() (in module jax.numpy)": [[681, "jax.numpy.fabs", false]], "factorial() (in module jax.scipy.special)": [[1134, "jax.scipy.special.factorial", false]], "faninconcat() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.FanInConcat", false]], "fanout() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.FanOut", false]], "ffi_call() (in module jax.ffi)": [[283, "jax.ffi.ffi_call", false]], "ffi_lowering() (in module jax.ffi)": [[284, "jax.ffi.ffi_lowering", false]], "fft (jax.lax.ffttype attribute)": [[1424, "jax.lax.FftType.FFT", false]], "fft() (in module jax.lax)": [[376, "jax.lax.fft", false]], "fft() (in module jax.numpy.fft)": [[682, "jax.numpy.fft.fft", false]], "fft2() (in module jax.numpy.fft)": [[683, "jax.numpy.fft.fft2", false]], "fftconvolve() (in module jax.scipy.signal)": [[1112, "jax.scipy.signal.fftconvolve", false]], "fftfreq() (in module jax.numpy.fft)": [[684, "jax.numpy.fft.fftfreq", false]], "fftn() (in module jax.numpy.fft)": [[685, "jax.numpy.fft.fftn", false]], "fftshift() (in module jax.numpy.fft)": [[686, "jax.numpy.fft.fftshift", false]], "ffttype (class in jax.lax)": [[1424, "jax.lax.FftType", false]], "fill_diagonal() (in module jax.numpy)": [[700, "jax.numpy.fill_diagonal", false]], "finfo (class in jax.numpy)": [[701, "jax.numpy.finfo", false]], "fix() (in module jax.numpy)": [[702, "jax.numpy.fix", false]], "flat (jax.array property)": [[25, "jax.Array.flat", false]], "flatnonzero() (in module jax.numpy)": [[703, "jax.numpy.flatnonzero", false]], "flatten() (in module jax.tree)": [[1291, "jax.tree.flatten", false]], "flatten() (jax.array method)": [[26, "jax.Array.flatten", false]], "flatten_with_path() (in module jax.tree)": [[1292, "jax.tree.flatten_with_path", false]], "flexible (class in jax.numpy)": [[704, "jax.numpy.flexible", false]], "flip() (in module jax.numpy)": [[705, "jax.numpy.flip", false]], "fliplr() (in module jax.numpy)": [[706, "jax.numpy.fliplr", false]], "flipud() (in module jax.numpy)": [[707, "jax.numpy.flipud", false]], "float0 (in module jax.dtypes)": [[104, "jax.dtypes.float0", false]], "float16 (class in jax.numpy)": [[708, "jax.numpy.float16", false]], "float32 (class in jax.numpy)": [[709, "jax.numpy.float32", false]], "float64 (class in jax.numpy)": [[710, "jax.numpy.float64", false]], "float_ (in module jax.numpy)": [[711, "jax.numpy.float_", false]], "float_checks (in module jax.experimental.checkify)": [[122, "jax.experimental.checkify.float_checks", false]], "float_power() (in module jax.numpy)": [[712, "jax.numpy.float_power", false]], "floating (class in jax.numpy)": [[713, "jax.numpy.floating", false]], "floor() (in module jax.lax)": [[377, "jax.lax.floor", false]], "floor() (in module jax.numpy)": [[714, "jax.numpy.floor", false]], "floor_divide() (in module jax.numpy)": [[715, "jax.numpy.floor_divide", false]], "fmax() (in module jax.numpy)": [[716, "jax.numpy.fmax", false]], "fmin() (in module jax.numpy)": [[717, "jax.numpy.fmin", false]], "fmod() (in module jax.numpy)": [[718, "jax.numpy.fmod", false]], "fold_in() (in module jax.random)": [[1032, "jax.random.fold_in", false]], "fori_loop() (in module jax.lax)": [[378, "jax.lax.fori_loop", false]], "forward-mode autodiff": [[1379, "term-forward-mode-autodiff", true]], "freeze() (in module jax.ref)": [[1066, "jax.ref.freeze", false]], "fresnel (in module jax.scipy.special)": [[1135, "jax.scipy.special.fresnel", false]], "frexp() (in module jax.numpy)": [[719, "jax.numpy.frexp", false]], "from_dlpack() (in module jax.dlpack)": [[100, "jax.dlpack.from_dlpack", false]], "from_dlpack() (in module jax.numpy)": [[720, "jax.numpy.from_dlpack", false]], "frombuffer() (in module jax.numpy)": [[721, "jax.numpy.frombuffer", false]], "fromfile() (in module jax.numpy)": [[722, "jax.numpy.fromfile", false]], "fromfunction() (in module jax.numpy)": [[723, "jax.numpy.fromfunction", false]], "fromiter() (in module jax.numpy)": [[724, "jax.numpy.fromiter", false]], "frompyfunc() (in module jax.numpy)": [[725, "jax.numpy.frompyfunc", false]], "fromstring() (in module jax.numpy)": [[726, "jax.numpy.fromstring", false]], "full() (in module jax.lax)": [[379, "jax.lax.full", false]], "full() (in module jax.numpy)": [[727, "jax.numpy.full", false]], "full_like() (in module jax.lax)": [[380, "jax.lax.full_like", false]], "full_like() (in module jax.numpy)": [[728, "jax.numpy.full_like", false]], "fun_name (jax.export.exported attribute)": [[1415, "jax.export.Exported.fun_name", false]], "functional programming": [[1379, "term-functional-programming", true]], "funm() (in module jax.scipy.linalg)": [[1086, "jax.scipy.linalg.funm", false]], "gamma() (in module jax.random)": [[1033, "jax.random.gamma", false]], "gamma() (in module jax.scipy.special)": [[1136, "jax.scipy.special.gamma", false]], "gammainc() (in module jax.scipy.special)": [[1137, "jax.scipy.special.gammainc", false]], "gammaincc() (in module jax.scipy.special)": [[1138, "jax.scipy.special.gammaincc", false]], "gammaln() (in module jax.scipy.special)": [[1139, "jax.scipy.special.gammaln", false]], "gammasgn() (in module jax.scipy.special)": [[1140, "jax.scipy.special.gammasgn", false]], "gather() (in module jax.lax)": [[381, "jax.lax.gather", false]], "gatherdimensionnumbers (class in jax.lax)": [[1424, "jax.lax.GatherDimensionNumbers", false]], "gatherscattermode (class in jax.lax)": [[1424, "jax.lax.GatherScatterMode", false]], "gaussian_kde (class in jax.scipy.stats)": [[1209, "jax.scipy.stats.gaussian_kde", false]], "gcd() (in module jax.numpy)": [[729, "jax.numpy.gcd", false]], "ge() (in module jax.lax)": [[382, "jax.lax.ge", false]], "gelu() (in module jax.nn)": [[510, "jax.nn.gelu", false]], "generalconv() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.GeneralConv", false]], "generalconvtranspose() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.GeneralConvTranspose", false]], "generalized_normal() (in module jax.random)": [[1034, "jax.random.generalized_normal", false]], "generic (class in jax.numpy)": [[730, "jax.numpy.generic", false]], "geometric() (in module jax.random)": [[1035, "jax.random.geometric", false]], "geomspace() (in module jax.numpy)": [[731, "jax.numpy.geomspace", false]], "get() (in module jax.ref)": [[1067, "jax.ref.get", false]], "get_backend() (in module jax.lib.xla_bridge)": [[492, "jax.lib.xla_bridge.get_backend", false]], "get_compile_options() (in module jax.lib.xla_bridge)": [[493, "jax.lib.xla_bridge.get_compile_options", false]], "get_printoptions() (in module jax.numpy)": [[732, "jax.numpy.get_printoptions", false]], "get_scaled_dot_general_config() (in module jax.nn)": [[511, "jax.nn.get_scaled_dot_general_config", false]], "global_array_to_host_local_array() (in module jax.experimental.multihost_utils)": [[135, "jax.experimental.multihost_utils.global_array_to_host_local_array", false]], "global_shards (jax.array property)": [[27, "jax.Array.global_shards", false]], "glorot_normal() (in module jax.nn.initializers)": [[520, "jax.nn.initializers.glorot_normal", false]], "glorot_uniform() (in module jax.nn.initializers)": [[521, "jax.nn.initializers.glorot_uniform", false]], "glu() (in module jax.nn)": [[512, "jax.nn.glu", false]], "gmem (in module jax.experimental.pallas.mosaic_gpu)": [[151, "jax.experimental.pallas.mosaic_gpu.GMEM", false]], "gmres() (in module jax.scipy.sparse.linalg)": [[1118, "jax.scipy.sparse.linalg.gmres", false]], "gpu": [[1379, "term-GPU", true]], "grad() (in module jax)": [[289, "jax.grad", false]], "grad() (in module jax.experimental.sparse)": [[238, "jax.experimental.sparse.grad", false]], "gradient() (in module jax.numpy)": [[733, "jax.numpy.gradient", false]], "greater() (in module jax.numpy)": [[734, "jax.numpy.greater", false]], "greater_equal() (in module jax.numpy)": [[735, "jax.numpy.greater_equal", false]], "gridspec (class in jax.experimental.pallas)": [[140, "jax.experimental.pallas.GridSpec", false]], "gt() (in module jax.lax)": [[383, "jax.lax.gt", false]], "gumbel() (in module jax.random)": [[1036, "jax.random.gumbel", false]], "hamming() (in module jax.numpy)": [[736, "jax.numpy.hamming", false]], "hanning() (in module jax.numpy)": [[737, "jax.numpy.hanning", false]], "hard_sigmoid() (in module jax.nn)": [[513, "jax.nn.hard_sigmoid", false]], "hard_silu() (in module jax.nn)": [[514, "jax.nn.hard_silu", false]], "hard_swish() (in module jax.nn)": [[515, "jax.nn.hard_swish", false]], "hard_tanh() (in module jax.nn)": [[516, "jax.nn.hard_tanh", false]], "has_vjp() (jax.export.exported method)": [[1415, "jax.export.Exported.has_vjp", false]], "he_normal() (in module jax.nn.initializers)": [[522, "jax.nn.initializers.he_normal", false]], "he_uniform() (in module jax.nn.initializers)": [[523, "jax.nn.initializers.he_uniform", false]], "heaviside() (in module jax.numpy)": [[738, "jax.numpy.heaviside", false]], "hessenberg() (in module jax.lax.linalg)": [[399, "jax.lax.linalg.hessenberg", false]], "hessenberg() (in module jax.scipy.linalg)": [[1087, "jax.scipy.linalg.hessenberg", false]], "hessian() (in module jax)": [[290, "jax.hessian", false]], "hfft() (in module jax.numpy.fft)": [[687, "jax.numpy.fft.hfft", false]], "hilbert() (in module jax.scipy.linalg)": [[1088, "jax.scipy.linalg.hilbert", false]], "histogram() (in module jax.numpy)": [[739, "jax.numpy.histogram", false]], "histogram2d() (in module jax.numpy)": [[740, "jax.numpy.histogram2d", false]], "histogram_bin_edges() (in module jax.numpy)": [[741, "jax.numpy.histogram_bin_edges", false]], "histogramdd() (in module jax.numpy)": [[742, "jax.numpy.histogramdd", false]], "host_local_array_to_global_array() (in module jax.experimental.multihost_utils)": [[136, "jax.experimental.multihost_utils.host_local_array_to_global_array", false]], "householder_product() (in module jax.lax.linalg)": [[400, "jax.lax.linalg.householder_product", false]], "hsplit() (in module jax.numpy)": [[743, "jax.numpy.hsplit", false]], "hstack() (in module jax.numpy)": [[744, "jax.numpy.hstack", false]], "hyp1f1 (in module jax.scipy.special)": [[1141, "jax.scipy.special.hyp1f1", false]], "hyp2f1() (in module jax.scipy.special)": [[1142, "jax.scipy.special.hyp2f1", false]], "hypot() (in module jax.numpy)": [[745, "jax.numpy.hypot", false]], "i0() (in module jax.numpy)": [[746, "jax.numpy.i0", false]], "i0() (in module jax.scipy.special)": [[1143, "jax.scipy.special.i0", false]], "i0e() (in module jax.scipy.special)": [[1144, "jax.scipy.special.i0e", false]], "i1() (in module jax.scipy.special)": [[1145, "jax.scipy.special.i1", false]], "i1e() (in module jax.scipy.special)": [[1146, "jax.scipy.special.i1e", false]], "idct() (in module jax.scipy.fft)": [[1073, "jax.scipy.fft.idct", false]], "idctn() (in module jax.scipy.fft)": [[1074, "jax.scipy.fft.idctn", false]], "identity() (in module jax.nn)": [[517, "jax.nn.identity", false]], "identity() (in module jax.numpy)": [[747, "jax.numpy.identity", false]], "iexp (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.iexp", false]], "ifft (jax.lax.ffttype attribute)": [[1424, "jax.lax.FftType.IFFT", false]], "ifft() (in module jax.numpy.fft)": [[688, "jax.numpy.fft.ifft", false]], "ifft2() (in module jax.numpy.fft)": [[689, "jax.numpy.fft.ifft2", false]], "ifftn() (in module jax.numpy.fft)": [[690, "jax.numpy.fft.ifftn", false]], "ifftshift() (in module jax.numpy.fft)": [[691, "jax.numpy.fft.ifftshift", false]], "igamma() (in module jax.lax)": [[384, "jax.lax.igamma", false]], "igammac() (in module jax.lax)": [[385, "jax.lax.igammac", false]], "ihfft() (in module jax.numpy.fft)": [[692, "jax.numpy.fft.ihfft", false]], "iinfo (class in jax.numpy)": [[748, "jax.numpy.iinfo", false]], "imag (jax.array property)": [[28, "jax.Array.imag", false]], "imag() (in module jax.lax)": [[386, "jax.lax.imag", false]], "imag() (in module jax.numpy)": [[749, "jax.numpy.imag", false]], "in_avals (jax.export.exported attribute)": [[1415, "jax.export.Exported.in_avals", false]], "in_shardings_hlo (jax.export.exported attribute)": [[1415, "jax.export.Exported.in_shardings_hlo", false]], "in_shardings_jax() (jax.export.exported method)": [[1415, "jax.export.Exported.in_shardings_jax", false]], "in_tree (jax.export.exported attribute)": [[1415, "jax.export.Exported.in_tree", false]], "in_tree (jax.stages.compiled property)": [[1435, "jax.stages.Compiled.in_tree", false]], "in_tree (jax.stages.lowered property)": [[1435, "jax.stages.Lowered.in_tree", false]], "index_checks (in module jax.experimental.checkify)": [[123, "jax.experimental.checkify.index_checks", false]], "index_exp (in module jax.numpy)": [[750, "jax.numpy.index_exp", false]], "index_in_dim() (in module jax.lax)": [[387, "jax.lax.index_in_dim", false]], "index_take() (in module jax.lax)": [[388, "jax.lax.index_take", false]], "indices (jax.experimental.sparse.bcoo attribute)": [[199, "jax.experimental.sparse.BCOO.indices", false]], "indices() (in module jax.numpy)": [[751, "jax.numpy.indices", false]], "inexact (class in jax.numpy)": [[752, "jax.numpy.inexact", false]], "init_fn (jax.example_libraries.optimizers.optimizer attribute)": [[1396, "jax.example_libraries.optimizers.Optimizer.init_fn", false]], "initialize() (in module jax.distributed)": [[98, "jax.distributed.initialize", false]], "initialize_cache() (in module jax.experimental.compilation_cache.compilation_cache)": [[1400, "jax.experimental.compilation_cache.compilation_cache.initialize_cache", false]], "inner() (in module jax.numpy)": [[753, "jax.numpy.inner", false]], "insert() (in module jax.numpy)": [[754, "jax.numpy.insert", false]], "inspect_array_sharding() (in module jax.debug)": [[83, "jax.debug.inspect_array_sharding", false]], "int16 (class in jax.numpy)": [[755, "jax.numpy.int16", false]], "int32 (class in jax.numpy)": [[756, "jax.numpy.int32", false]], "int64 (class in jax.numpy)": [[757, "jax.numpy.int64", false]], "int8 (class in jax.numpy)": [[758, "jax.numpy.int8", false]], "int_ (in module jax.numpy)": [[759, "jax.numpy.int_", false]], "integer (class in jax.numpy)": [[760, "jax.numpy.integer", false]], "integer_pow() (in module jax.lax)": [[389, "jax.lax.integer_pow", false]], "integrate_box_1d() (jax.scipy.stats.gaussian_kde method)": [[1211, "jax.scipy.stats.gaussian_kde.integrate_box_1d", false]], "integrate_gaussian() (jax.scipy.stats.gaussian_kde method)": [[1212, "jax.scipy.stats.gaussian_kde.integrate_gaussian", false]], "integrate_kde() (jax.scipy.stats.gaussian_kde method)": [[1213, "jax.scipy.stats.gaussian_kde.integrate_kde", false]], "interp() (in module jax.numpy)": [[761, "jax.numpy.interp", false]], "intersect1d() (in module jax.numpy)": [[762, "jax.numpy.intersect1d", false]], "inv() (in module jax.numpy.linalg)": [[797, "jax.numpy.linalg.inv", false]], "inv() (in module jax.scipy.linalg)": [[1089, "jax.scipy.linalg.inv", false]], "inverse_time_decay() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.inverse_time_decay", false]], "invert() (in module jax.numpy)": [[763, "jax.numpy.invert", false]], "io_callback() (in module jax.experimental)": [[130, "jax.experimental.io_callback", false]], "iota() (in module jax.lax)": [[390, "jax.lax.iota", false]], "irfft (jax.lax.ffttype attribute)": [[1424, "jax.lax.FftType.IRFFT", false]], "irfft() (in module jax.numpy.fft)": [[693, "jax.numpy.fft.irfft", false]], "irfft2() (in module jax.numpy.fft)": [[694, "jax.numpy.fft.irfft2", false]], "irfftn() (in module jax.numpy.fft)": [[695, "jax.numpy.fft.irfftn", false]], "is_custom_call() (jax.export.disabledsafetycheck method)": [[1415, "jax.export.DisabledSafetyCheck.is_custom_call", false]], "is_equivalent_to() (jax.sharding.pmapsharding method)": [[1434, "jax.sharding.PmapSharding.is_equivalent_to", false]], "is_equivalent_to() (jax.sharding.sharding method)": [[1434, "jax.sharding.Sharding.is_equivalent_to", false]], "is_finite() (in module jax.lax)": [[391, "jax.lax.is_finite", false]], "is_fully_addressable (jax.array property)": [[29, "jax.Array.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.namedsharding property)": [[1434, "jax.sharding.NamedSharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.pmapsharding property)": [[1434, "jax.sharding.PmapSharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.sharding property)": [[1434, "jax.sharding.Sharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.singledevicesharding property)": [[1434, "jax.sharding.SingleDeviceSharding.is_fully_addressable", false]], "is_fully_replicated (jax.array property)": [[30, "jax.Array.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.namedsharding property)": [[1434, "jax.sharding.NamedSharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.pmapsharding property)": [[1434, "jax.sharding.PmapSharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.sharding property)": [[1434, "jax.sharding.Sharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.singledevicesharding property)": [[1434, "jax.sharding.SingleDeviceSharding.is_fully_replicated", false]], "is_initialized() (in module jax.experimental.compilation_cache.compilation_cache)": [[1400, "jax.experimental.compilation_cache.compilation_cache.is_initialized", false]], "is_supported_dtype() (in module jax.dlpack)": [[101, "jax.dlpack.is_supported_dtype", false]], "is_symbolic_dim() (in module jax.export)": [[249, "jax.export.is_symbolic_dim", false]], "isclose() (in module jax.numpy)": [[764, "jax.numpy.isclose", false]], "iscomplex() (in module jax.numpy)": [[765, "jax.numpy.iscomplex", false]], "iscomplexobj() (in module jax.numpy)": [[766, "jax.numpy.iscomplexobj", false]], "isdtype() (in module jax.numpy)": [[767, "jax.numpy.isdtype", false]], "isf() (in module jax.scipy.stats.cauchy)": [[1181, "jax.scipy.stats.cauchy.isf", false]], "isf() (in module jax.scipy.stats.logistic)": [[1240, "jax.scipy.stats.logistic.isf", false]], "isf() (in module jax.scipy.stats.norm)": [[1253, "jax.scipy.stats.norm.isf", false]], "isfinite() (in module jax.numpy)": [[768, "jax.numpy.isfinite", false]], "isin() (in module jax.numpy)": [[769, "jax.numpy.isin", false]], "isinf() (in module jax.numpy)": [[770, "jax.numpy.isinf", false]], "isnan() (in module jax.numpy)": [[771, "jax.numpy.isnan", false]], "isneginf() (in module jax.numpy)": [[772, "jax.numpy.isneginf", false]], "isposinf() (in module jax.numpy)": [[773, "jax.numpy.isposinf", false]], "isreal() (in module jax.numpy)": [[774, "jax.numpy.isreal", false]], "isrealobj() (in module jax.numpy)": [[775, "jax.numpy.isrealobj", false]], "isscalar() (in module jax.numpy)": [[776, "jax.numpy.isscalar", false]], "issubdtype() (in module jax.dtypes)": [[105, "jax.dtypes.issubdtype", false]], "issubdtype() (in module jax.numpy)": [[777, "jax.numpy.issubdtype", false]], "istft() (in module jax.scipy.signal)": [[1113, "jax.scipy.signal.istft", false]], "item() (jax.array method)": [[31, "jax.Array.item", false]], "itemsize (jax.array property)": [[32, "jax.Array.itemsize", false]], "iterable() (in module jax.numpy)": [[778, "jax.numpy.iterable", false]], "ix_() (in module jax.numpy)": [[779, "jax.numpy.ix_", false]], "jacfwd() (in module jax)": [[293, "jax.jacfwd", false]], "jacobian() (in module jax)": [[294, "jax.jacobian", false]], "jacrev() (in module jax)": [[295, "jax.jacrev", false]], "jax.debug": [[1391, "module-jax.debug", false]], "jax.distributed": [[1392, "module-jax.distributed", false]], "jax.dlpack": [[1393, "module-jax.dlpack", false]], "jax.dtypes": [[1394, "module-jax.dtypes", false]], "jax.example_libraries": [[1395, "module-jax.example_libraries", false]], "jax.example_libraries.optimizers": [[1396, "module-jax.example_libraries.optimizers", false]], "jax.example_libraries.stax": [[1397, "module-jax.example_libraries.stax", false]], "jax.experimental.checkify": [[1399, "module-jax.experimental.checkify", false]], "jax.experimental.compilation_cache.compilation_cache": [[1400, "module-jax.experimental.compilation_cache.compilation_cache", false]], "jax.experimental.custom_dce": [[1401, "module-jax.experimental.custom_dce", false]], "jax.experimental.custom_partitioning": [[1402, "module-jax.experimental.custom_partitioning", false]], "jax.experimental.jet": [[1403, "module-jax.experimental.jet", false]], "jax.experimental.key_reuse": [[1404, "module-jax.experimental.key_reuse", false]], "jax.experimental.mesh_utils": [[1405, "module-jax.experimental.mesh_utils", false]], "jax.experimental.multihost_utils": [[1406, "module-jax.experimental.multihost_utils", false]], "jax.experimental.pallas": [[1407, "module-jax.experimental.pallas", false]], "jax.experimental.pallas.mosaic_gpu": [[1408, "module-jax.experimental.pallas.mosaic_gpu", false]], "jax.experimental.pallas.tpu": [[1409, "module-jax.experimental.pallas.tpu", false]], "jax.experimental.pallas.triton": [[1410, "module-jax.experimental.pallas.triton", false]], "jax.experimental.pjit": [[1411, "module-jax.experimental.pjit", false]], "jax.experimental.serialize_executable": [[1412, "module-jax.experimental.serialize_executable", false]], "jax.experimental.shard_map": [[1413, "module-jax.experimental.shard_map", false]], "jax.experimental.sparse": [[1414, "module-jax.experimental.sparse", false]], "jax.experimental.sparse.linalg": [[1414, "module-jax.experimental.sparse.linalg", false]], "jax.export": [[1415, "module-jax.export", false]], "jax.export.maximum_supported_serialization_version (in module jax.export)": [[1415, "jax.export.jax.export.maximum_supported_serialization_version", false]], "jax.export.minimum_supported_serialization_version (in module jax.export)": [[1415, "jax.export.jax.export.minimum_supported_serialization_version", false]], "jax.extend": [[1416, "module-jax.extend", false]], "jax.extend.core": [[1417, "module-jax.extend.core", false]], "jax.extend.core.primitives": [[265, "module-jax.extend.core.primitives", false]], "jax.extend.linear_util": [[1418, "module-jax.extend.linear_util", false]], "jax.extend.mlir": [[1419, "module-jax.extend.mlir", false]], "jax.extend.mlir.dialects": [[273, "module-jax.extend.mlir.dialects", false]], "jax.extend.mlir.ir": [[274, "module-jax.extend.mlir.ir", false]], "jax.extend.mlir.passmanager": [[275, "module-jax.extend.mlir.passmanager", false]], "jax.extend.random": [[1420, "module-jax.extend.random", false]], "jax.ffi": [[1421, "module-jax.ffi", false]], "jax.flatten_util": [[1422, "module-jax.flatten_util", false]], "jax.image": [[1423, "module-jax.image", false]], "jax.lax": [[1424, "module-jax.lax", false]], "jax.lax.linalg": [[1424, "module-jax.lax.linalg", false]], "jax.nn": [[1426, "module-jax.nn", false]], "jax.nn.initializers": [[1427, "module-jax.nn.initializers", false]], "jax.numpy": [[1428, "module-jax.numpy", false]], "jax.numpy.fft": [[1428, "module-jax.numpy.fft", false]], "jax.numpy.linalg": [[1428, "module-jax.numpy.linalg", false]], "jax.ops": [[1429, "module-jax.ops", false]], "jax.profiler": [[1430, "module-jax.profiler", false]], "jax.random": [[1431, "module-jax.random", false]], "jax.ref": [[1432, "module-jax.ref", false]], "jax.scipy.cluster.vq": [[1433, "module-jax.scipy.cluster.vq", false]], "jax.scipy.fft": [[1433, "module-jax.scipy.fft", false]], "jax.scipy.integrate": [[1433, "module-jax.scipy.integrate", false]], "jax.scipy.interpolate": [[1433, "module-jax.scipy.interpolate", false]], "jax.scipy.linalg": [[1433, "module-jax.scipy.linalg", false]], "jax.scipy.ndimage": [[1433, "module-jax.scipy.ndimage", false]], "jax.scipy.optimize": [[1433, "module-jax.scipy.optimize", false]], "jax.scipy.signal": [[1433, "module-jax.scipy.signal", false]], "jax.scipy.sparse.linalg": [[1433, "module-jax.scipy.sparse.linalg", false]], "jax.scipy.spatial.transform": [[1433, "module-jax.scipy.spatial.transform", false]], "jax.scipy.special": [[1433, "module-jax.scipy.special", false]], "jax.scipy.stats": [[1433, "module-jax.scipy.stats", false]], "jax.scipy.stats.bernoulli": [[1433, "module-jax.scipy.stats.bernoulli", false]], "jax.scipy.stats.beta": [[1433, "module-jax.scipy.stats.beta", false]], "jax.scipy.stats.betabinom": [[1433, "module-jax.scipy.stats.betabinom", false]], "jax.scipy.stats.binom": [[1433, "module-jax.scipy.stats.binom", false]], "jax.scipy.stats.cauchy": [[1433, "module-jax.scipy.stats.cauchy", false]], "jax.scipy.stats.chi2": [[1433, "module-jax.scipy.stats.chi2", false]], "jax.scipy.stats.dirichlet": [[1433, "module-jax.scipy.stats.dirichlet", false]], "jax.scipy.stats.expon": [[1433, "module-jax.scipy.stats.expon", false]], "jax.scipy.stats.gamma": [[1433, "module-jax.scipy.stats.gamma", false]], "jax.scipy.stats.gennorm": [[1433, "module-jax.scipy.stats.gennorm", false]], "jax.scipy.stats.geom": [[1433, "module-jax.scipy.stats.geom", false]], "jax.scipy.stats.gumbel_l": [[1433, "module-jax.scipy.stats.gumbel_l", false]], "jax.scipy.stats.gumbel_r": [[1433, "module-jax.scipy.stats.gumbel_r", false]], "jax.scipy.stats.laplace": [[1433, "module-jax.scipy.stats.laplace", false]], "jax.scipy.stats.logistic": [[1433, "module-jax.scipy.stats.logistic", false]], "jax.scipy.stats.multinomial": [[1433, "module-jax.scipy.stats.multinomial", false]], "jax.scipy.stats.multivariate_normal": [[1433, "module-jax.scipy.stats.multivariate_normal", false]], "jax.scipy.stats.nbinom": [[1433, "module-jax.scipy.stats.nbinom", false]], "jax.scipy.stats.norm": [[1433, "module-jax.scipy.stats.norm", false]], "jax.scipy.stats.pareto": [[1433, "module-jax.scipy.stats.pareto", false]], "jax.scipy.stats.poisson": [[1433, "module-jax.scipy.stats.poisson", false]], "jax.scipy.stats.t": [[1433, "module-jax.scipy.stats.t", false]], "jax.scipy.stats.truncnorm": [[1433, "module-jax.scipy.stats.truncnorm", false]], "jax.scipy.stats.uniform": [[1433, "module-jax.scipy.stats.uniform", false]], "jax.scipy.stats.vonmises": [[1433, "module-jax.scipy.stats.vonmises", false]], "jax.scipy.stats.wrapcauchy": [[1433, "module-jax.scipy.stats.wrapcauchy", false]], "jax.sharding": [[1434, "module-jax.sharding", false]], "jax.stages": [[1435, "module-jax.stages", false]], "jax.test_util": [[1436, "module-jax.test_util", false]], "jax.tree": [[1437, "module-jax.tree", false]], "jax.tree_util": [[1438, "module-jax.tree_util", false]], "jax.typing": [[1439, "module-jax.typing", false]], "jaxpr": [[1379, "term-jaxpr", true]], "jaxpr (class in jax.extend.core)": [[257, "jax.extend.core.Jaxpr", false]], "jaxpr_as_fun (in module jax.extend.core)": [[264, "jax.extend.core.jaxpr_as_fun", false]], "jaxpreqn (class in jax.extend.core)": [[258, "jax.extend.core.JaxprEqn", false]], "jaxruntimeerror": [[115, "jax.experimental.checkify.JaxRuntimeError", false]], "jaxruntimeerror (in module jax.errors)": [[1370, "jax.errors.JaxRuntimeError", false]], "jaxsparse (class in jax.experimental.sparse)": [[204, "jax.experimental.sparse.JAXSparse", false]], "jet() (in module jax.experimental.jet)": [[1403, "jax.experimental.jet.jet", false]], "jit": [[1379, "term-JIT", true]], "jit() (in module jax)": [[296, "jax.jit", false]], "joinpoint (class in jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.JoinPoint", false]], "jvp": [[1379, "term-JVP", true]], "jvp() (in module jax)": [[297, "jax.jvp", false]], "kaiser() (in module jax.numpy)": [[780, "jax.numpy.kaiser", false]], "key() (in module jax.random)": [[1037, "jax.random.key", false]], "key_data() (in module jax.random)": [[1038, "jax.random.key_data", false]], "keyentry (in module jax.tree_util)": [[1302, "jax.tree_util.KeyEntry", false]], "keypath (in module jax.tree_util)": [[1303, "jax.tree_util.KeyPath", false]], "keyreuseerror (class in jax.errors)": [[1370, "jax.errors.KeyReuseError", false]], "keystr() (in module jax.tree_util)": [[1306, "jax.tree_util.keystr", false]], "kl_div() (in module jax.scipy.special)": [[1147, "jax.scipy.special.kl_div", false]], "kron() (in module jax.numpy)": [[781, "jax.numpy.kron", false]], "l2_norm() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.l2_norm", false]], "laplace() (in module jax.random)": [[1039, "jax.random.laplace", false]], "layout (class in jax.experimental.pallas.mosaic_gpu)": [[152, "jax.experimental.pallas.mosaic_gpu.Layout", false]], "layout_cast() (in module jax.experimental.pallas.mosaic_gpu)": [[169, "jax.experimental.pallas.mosaic_gpu.layout_cast", false]], "lcm() (in module jax.numpy)": [[782, "jax.numpy.lcm", false]], "ldexp() (in module jax.numpy)": [[783, "jax.numpy.ldexp", false]], "le() (in module jax.lax)": [[392, "jax.lax.le", false]], "leaky_relu() (in module jax.nn)": [[533, "jax.nn.leaky_relu", false]], "leaves() (in module jax.tree)": [[1293, "jax.tree.leaves", false]], "leaves_with_path() (in module jax.tree)": [[1294, "jax.tree.leaves_with_path", false]], "lecun_normal() (in module jax.nn.initializers)": [[524, "jax.nn.initializers.lecun_normal", false]], "lecun_uniform() (in module jax.nn.initializers)": [[525, "jax.nn.initializers.lecun_uniform", false]], "left_shift() (in module jax.numpy)": [[784, "jax.numpy.left_shift", false]], "less() (in module jax.numpy)": [[785, "jax.numpy.less", false]], "less_equal() (in module jax.numpy)": [[786, "jax.numpy.less_equal", false]], "lexsort() (in module jax.numpy)": [[787, "jax.numpy.lexsort", false]], "lgamma() (in module jax.lax)": [[393, "jax.lax.lgamma", false]], "linear_transpose() (in module jax)": [[494, "jax.linear_transpose", false]], "linearize() (in module jax)": [[495, "jax.linearize", false]], "linspace() (in module jax.numpy)": [[819, "jax.numpy.linspace", false]], "literal (class in jax.extend.core)": [[259, "jax.extend.core.Literal", false]], "live_arrays() (in module jax)": [[496, "jax.live_arrays", false]], "load() (in module jax.experimental.pallas)": [[145, "jax.experimental.pallas.load", false]], "load() (in module jax.numpy)": [[820, "jax.numpy.load", false]], "lobpcg_standard() (in module jax.experimental.sparse.linalg)": [[239, "jax.experimental.sparse.linalg.lobpcg_standard", false]], "local_device_count() (in module jax)": [[497, "jax.local_device_count", false]], "local_devices() (in module jax)": [[498, "jax.local_devices", false]], "log() (in module jax.lax)": [[411, "jax.lax.log", false]], "log() (in module jax.numpy)": [[821, "jax.numpy.log", false]], "log10() (in module jax.numpy)": [[822, "jax.numpy.log10", false]], "log1mexp (in module jax.nn)": [[534, "jax.nn.log1mexp", false]], "log1p() (in module jax.lax)": [[412, "jax.lax.log1p", false]], "log1p() (in module jax.numpy)": [[823, "jax.numpy.log1p", false]], "log2() (in module jax.numpy)": [[824, "jax.numpy.log2", false]], "log_compiles (in module jax)": [[499, "jax.log_compiles", false]], "log_ndtr (in module jax.scipy.special)": [[1148, "jax.scipy.special.log_ndtr", false]], "log_sigmoid() (in module jax.nn)": [[535, "jax.nn.log_sigmoid", false]], "log_softmax() (in module jax.nn)": [[536, "jax.nn.log_softmax", false]], "log_softmax() (in module jax.scipy.special)": [[1149, "jax.scipy.special.log_softmax", false]], "logaddexp (in module jax.numpy)": [[825, "jax.numpy.logaddexp", false]], "logaddexp2 (in module jax.numpy)": [[826, "jax.numpy.logaddexp2", false]], "logcdf() (in module jax.scipy.stats.beta)": [[1171, "jax.scipy.stats.beta.logcdf", false]], "logcdf() (in module jax.scipy.stats.cauchy)": [[1182, "jax.scipy.stats.cauchy.logcdf", false]], "logcdf() (in module jax.scipy.stats.chi2)": [[1189, "jax.scipy.stats.chi2.logcdf", false]], "logcdf() (in module jax.scipy.stats.expon)": [[1197, "jax.scipy.stats.expon.logcdf", false]], "logcdf() (in module jax.scipy.stats.gamma)": [[1204, "jax.scipy.stats.gamma.logcdf", false]], "logcdf() (in module jax.scipy.stats.gumbel_l)": [[1223, "jax.scipy.stats.gumbel_l.logcdf", false]], "logcdf() (in module jax.scipy.stats.gumbel_r)": [[1230, "jax.scipy.stats.gumbel_r.logcdf", false]], "logcdf() (in module jax.scipy.stats.norm)": [[1254, "jax.scipy.stats.norm.logcdf", false]], "logcdf() (in module jax.scipy.stats.truncnorm)": [[1270, "jax.scipy.stats.truncnorm.logcdf", false]], "loggamma() (in module jax.random)": [[1040, "jax.random.loggamma", false]], "logical_and (in module jax.numpy)": [[827, "jax.numpy.logical_and", false]], "logical_not() (in module jax.numpy)": [[828, "jax.numpy.logical_not", false]], "logical_or (in module jax.numpy)": [[829, "jax.numpy.logical_or", false]], "logical_xor (in module jax.numpy)": [[830, "jax.numpy.logical_xor", false]], "logistic() (in module jax.lax)": [[413, "jax.lax.logistic", false]], "logistic() (in module jax.random)": [[1041, "jax.random.logistic", false]], "logit (in module jax.scipy.special)": [[1150, "jax.scipy.special.logit", false]], "logmeanexp() (in module jax.nn)": [[537, "jax.nn.logmeanexp", false]], "lognormal() (in module jax.random)": [[1042, "jax.random.lognormal", false]], "logpdf() (in module jax.scipy.stats.beta)": [[1172, "jax.scipy.stats.beta.logpdf", false]], "logpdf() (in module jax.scipy.stats.cauchy)": [[1183, "jax.scipy.stats.cauchy.logpdf", false]], "logpdf() (in module jax.scipy.stats.chi2)": [[1190, "jax.scipy.stats.chi2.logpdf", false]], "logpdf() (in module jax.scipy.stats.dirichlet)": [[1194, "jax.scipy.stats.dirichlet.logpdf", false]], "logpdf() (in module jax.scipy.stats.expon)": [[1198, "jax.scipy.stats.expon.logpdf", false]], "logpdf() (in module jax.scipy.stats.gamma)": [[1205, "jax.scipy.stats.gamma.logpdf", false]], "logpdf() (in module jax.scipy.stats.gennorm)": [[1218, "jax.scipy.stats.gennorm.logpdf", false]], "logpdf() (in module jax.scipy.stats.gumbel_l)": [[1224, "jax.scipy.stats.gumbel_l.logpdf", false]], "logpdf() (in module jax.scipy.stats.gumbel_r)": [[1231, "jax.scipy.stats.gumbel_r.logpdf", false]], "logpdf() (in module jax.scipy.stats.laplace)": [[1237, "jax.scipy.stats.laplace.logpdf", false]], "logpdf() (in module jax.scipy.stats.logistic)": [[1241, "jax.scipy.stats.logistic.logpdf", false]], "logpdf() (in module jax.scipy.stats.multivariate_normal)": [[1248, "jax.scipy.stats.multivariate_normal.logpdf", false]], "logpdf() (in module jax.scipy.stats.norm)": [[1255, "jax.scipy.stats.norm.logpdf", false]], "logpdf() (in module jax.scipy.stats.pareto)": [[1260, "jax.scipy.stats.pareto.logpdf", false]], "logpdf() (in module jax.scipy.stats.t)": [[1267, "jax.scipy.stats.t.logpdf", false]], "logpdf() (in module jax.scipy.stats.truncnorm)": [[1271, "jax.scipy.stats.truncnorm.logpdf", false]], "logpdf() (in module jax.scipy.stats.uniform)": [[1276, "jax.scipy.stats.uniform.logpdf", false]], "logpdf() (in module jax.scipy.stats.vonmises)": [[1279, "jax.scipy.stats.vonmises.logpdf", false]], "logpdf() (in module jax.scipy.stats.wrapcauchy)": [[1281, "jax.scipy.stats.wrapcauchy.logpdf", false]], "logpdf() (jax.scipy.stats.gaussian_kde method)": [[1214, "jax.scipy.stats.gaussian_kde.logpdf", false]], "logpmf() (in module jax.scipy.stats.bernoulli)": [[1167, "jax.scipy.stats.bernoulli.logpmf", false]], "logpmf() (in module jax.scipy.stats.betabinom)": [[1176, "jax.scipy.stats.betabinom.logpmf", false]], "logpmf() (in module jax.scipy.stats.binom)": [[1178, "jax.scipy.stats.binom.logpmf", false]], "logpmf() (in module jax.scipy.stats.geom)": [[1220, "jax.scipy.stats.geom.logpmf", false]], "logpmf() (in module jax.scipy.stats.multinomial)": [[1246, "jax.scipy.stats.multinomial.logpmf", false]], "logpmf() (in module jax.scipy.stats.nbinom)": [[1250, "jax.scipy.stats.nbinom.logpmf", false]], "logpmf() (in module jax.scipy.stats.poisson)": [[1263, "jax.scipy.stats.poisson.logpmf", false]], "logsf() (in module jax.scipy.stats.beta)": [[1173, "jax.scipy.stats.beta.logsf", false]], "logsf() (in module jax.scipy.stats.cauchy)": [[1184, "jax.scipy.stats.cauchy.logsf", false]], "logsf() (in module jax.scipy.stats.chi2)": [[1191, "jax.scipy.stats.chi2.logsf", false]], "logsf() (in module jax.scipy.stats.expon)": [[1199, "jax.scipy.stats.expon.logsf", false]], "logsf() (in module jax.scipy.stats.gamma)": [[1206, "jax.scipy.stats.gamma.logsf", false]], "logsf() (in module jax.scipy.stats.gumbel_l)": [[1225, "jax.scipy.stats.gumbel_l.logsf", false]], "logsf() (in module jax.scipy.stats.gumbel_r)": [[1232, "jax.scipy.stats.gumbel_r.logsf", false]], "logsf() (in module jax.scipy.stats.norm)": [[1256, "jax.scipy.stats.norm.logsf", false]], "logsf() (in module jax.scipy.stats.truncnorm)": [[1272, "jax.scipy.stats.truncnorm.logsf", false]], "logspace() (in module jax.numpy)": [[831, "jax.numpy.logspace", false]], "logsumexp() (in module jax.nn)": [[538, "jax.nn.logsumexp", false]], "logsumexp() (in module jax.scipy.special)": [[1151, "jax.scipy.special.logsumexp", false]], "lower() (jax.stages.traced method)": [[1435, "jax.stages.Traced.lower", false]], "lower() (jax.stages.wrapped method)": [[1435, "jax.stages.Wrapped.lower", false]], "lowered (class in jax.stages)": [[1435, "jax.stages.Lowered", false]], "lpmn() (in module jax.scipy.special)": [[1152, "jax.scipy.special.lpmn", false]], "lpmn_values() (in module jax.scipy.special)": [[1153, "jax.scipy.special.lpmn_values", false]], "lstsq() (in module jax.numpy.linalg)": [[798, "jax.numpy.linalg.lstsq", false]], "lt() (in module jax.lax)": [[414, "jax.lax.lt", false]], "lu() (in module jax.lax.linalg)": [[401, "jax.lax.linalg.lu", false]], "lu() (in module jax.scipy.linalg)": [[1090, "jax.scipy.linalg.lu", false]], "lu_factor() (in module jax.scipy.linalg)": [[1091, "jax.scipy.linalg.lu_factor", false]], "lu_pivots_to_permutation() (in module jax.lax.linalg)": [[402, "jax.lax.linalg.lu_pivots_to_permutation", false]], "lu_solve() (in module jax.scipy.linalg)": [[1092, "jax.scipy.linalg.lu_solve", false]], "machep (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.machep", false]], "make_array_from_callback() (in module jax)": [[500, "jax.make_array_from_callback", false]], "make_array_from_process_local_data() (in module jax)": [[501, "jax.make_array_from_process_local_data", false]], "make_array_from_single_device_arrays() (in module jax)": [[502, "jax.make_array_from_single_device_arrays", false]], "make_jaxpr() (in module jax)": [[503, "jax.make_jaxpr", false]], "make_mesh() (in module jax)": [[504, "jax.make_mesh", false]], "make_schedule() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.make_schedule", false]], "map() (in module jax.lax)": [[415, "jax.lax.map", false]], "map() (in module jax.tree)": [[1295, "jax.tree.map", false]], "map_coordinates() (in module jax.scipy.ndimage)": [[1103, "jax.scipy.ndimage.map_coordinates", false]], "map_with_path() (in module jax.tree)": [[1296, "jax.tree.map_with_path", false]], "mask_indices() (in module jax.numpy)": [[832, "jax.numpy.mask_indices", false]], "matmul() (in module jax.numpy)": [[833, "jax.numpy.matmul", false]], "matmul() (in module jax.numpy.linalg)": [[799, "jax.numpy.linalg.matmul", false]], "matrix_norm() (in module jax.numpy.linalg)": [[800, "jax.numpy.linalg.matrix_norm", false]], "matrix_power() (in module jax.numpy.linalg)": [[801, "jax.numpy.linalg.matrix_power", false]], "matrix_rank() (in module jax.numpy.linalg)": [[802, "jax.numpy.linalg.matrix_rank", false]], "matrix_transpose() (in module jax.numpy)": [[834, "jax.numpy.matrix_transpose", false]], "matrix_transpose() (in module jax.numpy.linalg)": [[803, "jax.numpy.linalg.matrix_transpose", false]], "matvec() (in module jax.numpy)": [[835, "jax.numpy.matvec", false]], "max (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.max", false]], "max() (in module jax.lax)": [[416, "jax.lax.max", false]], "max() (in module jax.numpy)": [[836, "jax.numpy.max", false]], "max() (jax.array method)": [[34, "jax.Array.max", false]], "max_concurrent_steps (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[150, "jax.experimental.pallas.mosaic_gpu.CompilerParams.max_concurrent_steps", false]], "max_contiguous() (in module jax.experimental.pallas)": [[146, "jax.experimental.pallas.max_contiguous", false]], "maxexp (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.maxexp", false]], "maximum (in module jax.numpy)": [[837, "jax.numpy.maximum", false]], "maximum_supported_calling_convention_version (in module jax.export)": [[250, "jax.export.maximum_supported_calling_convention_version", false]], "maxpool() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.MaxPool", false]], "maxwell() (in module jax.random)": [[1043, "jax.random.maxwell", false]], "mean() (in module jax.numpy)": [[838, "jax.numpy.mean", false]], "mean() (jax.array method)": [[35, "jax.Array.mean", false]], "median() (in module jax.numpy)": [[839, "jax.numpy.median", false]], "memory_analysis() (jax.stages.compiled method)": [[1435, "jax.stages.Compiled.memory_analysis", false]], "memory_kind (jax.sharding.namedsharding property)": [[1434, "jax.sharding.NamedSharding.memory_kind", false]], "memory_kind (jax.sharding.pmapsharding property)": [[1434, "jax.sharding.PmapSharding.memory_kind", false]], "memory_kind (jax.sharding.sharding property)": [[1434, "jax.sharding.Sharding.memory_kind", false]], "memory_kind (jax.sharding.singledevicesharding property)": [[1434, "jax.sharding.SingleDeviceSharding.memory_kind", false]], "memoryspace (class in jax.experimental.pallas.mosaic_gpu)": [[153, "jax.experimental.pallas.mosaic_gpu.MemorySpace", false]], "merge_linear_aux() (in module jax.extend.linear_util)": [[269, "jax.extend.linear_util.merge_linear_aux", false]], "mesh (class in jax.sharding)": [[1434, "jax.sharding.Mesh", false]], "mesh (jax.sharding.namedsharding property)": [[1434, "jax.sharding.NamedSharding.mesh", false]], "meshgrid() (in module jax.numpy)": [[840, "jax.numpy.meshgrid", false]], "mgrid (in module jax.numpy)": [[841, "jax.numpy.mgrid", false]], "min (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.min", false]], "min() (in module jax.lax)": [[417, "jax.lax.min", false]], "min() (in module jax.numpy)": [[842, "jax.numpy.min", false]], "min() (jax.array method)": [[36, "jax.Array.min", false]], "minexp (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.minexp", false]], "minimize() (in module jax.scipy.optimize)": [[1105, "jax.scipy.optimize.minimize", false]], "minimum (in module jax.numpy)": [[843, "jax.numpy.minimum", false]], "minimum_supported_calling_convention_version (in module jax.export)": [[251, "jax.export.minimum_supported_calling_convention_version", false]], "mish() (in module jax.nn)": [[539, "jax.nn.mish", false]], "mlir_module() (jax.export.exported method)": [[1415, "jax.export.Exported.mlir_module", false]], "mlir_module_serialized (jax.export.exported attribute)": [[1415, "jax.export.Exported.mlir_module_serialized", false]], "mod() (in module jax.numpy)": [[844, "jax.numpy.mod", false]], "mode() (in module jax.scipy.stats)": [[1245, "jax.scipy.stats.mode", false]], "modf() (in module jax.numpy)": [[845, "jax.numpy.modf", false]], "module": [[265, "module-jax.extend.core.primitives", false], [273, "module-jax.extend.mlir.dialects", false], [274, "module-jax.extend.mlir.ir", false], [275, "module-jax.extend.mlir.passmanager", false], [1391, "module-jax.debug", false], [1392, "module-jax.distributed", false], [1393, "module-jax.dlpack", false], [1394, "module-jax.dtypes", false], [1395, "module-jax.example_libraries", false], [1396, "module-jax.example_libraries.optimizers", false], [1397, "module-jax.example_libraries.stax", false], [1399, "module-jax.experimental.checkify", false], [1400, "module-jax.experimental.compilation_cache.compilation_cache", false], [1401, "module-jax.experimental.custom_dce", false], [1402, "module-jax.experimental.custom_partitioning", false], [1403, "module-jax.experimental.jet", false], [1404, "module-jax.experimental.key_reuse", false], [1405, "module-jax.experimental.mesh_utils", false], [1406, "module-jax.experimental.multihost_utils", false], [1407, "module-jax.experimental.pallas", false], [1408, "module-jax.experimental.pallas.mosaic_gpu", false], [1409, "module-jax.experimental.pallas.tpu", false], [1410, "module-jax.experimental.pallas.triton", false], [1411, "module-jax.experimental.pjit", false], [1412, "module-jax.experimental.serialize_executable", false], [1413, "module-jax.experimental.shard_map", false], [1414, "module-jax.experimental.sparse", false], [1414, "module-jax.experimental.sparse.linalg", false], [1415, "module-jax.export", false], [1416, "module-jax.extend", false], [1417, "module-jax.extend.core", false], [1418, "module-jax.extend.linear_util", false], [1419, "module-jax.extend.mlir", false], [1420, "module-jax.extend.random", false], [1421, "module-jax.ffi", false], [1422, "module-jax.flatten_util", false], [1423, "module-jax.image", false], [1424, "module-jax.lax", false], [1424, "module-jax.lax.linalg", false], [1426, "module-jax.nn", false], [1427, "module-jax.nn.initializers", false], [1428, "module-jax.numpy", false], [1428, "module-jax.numpy.fft", false], [1428, "module-jax.numpy.linalg", false], [1429, "module-jax.ops", false], [1430, "module-jax.profiler", false], [1431, "module-jax.random", false], [1432, "module-jax.ref", false], [1433, "module-jax.scipy.cluster.vq", false], [1433, "module-jax.scipy.fft", false], [1433, "module-jax.scipy.integrate", false], [1433, "module-jax.scipy.interpolate", false], [1433, "module-jax.scipy.linalg", false], [1433, "module-jax.scipy.ndimage", false], [1433, "module-jax.scipy.optimize", false], [1433, "module-jax.scipy.signal", false], [1433, "module-jax.scipy.sparse.linalg", false], [1433, "module-jax.scipy.spatial.transform", false], [1433, "module-jax.scipy.special", false], [1433, "module-jax.scipy.stats", false], [1433, "module-jax.scipy.stats.bernoulli", false], [1433, "module-jax.scipy.stats.beta", false], [1433, "module-jax.scipy.stats.betabinom", false], [1433, "module-jax.scipy.stats.binom", false], [1433, "module-jax.scipy.stats.cauchy", false], [1433, "module-jax.scipy.stats.chi2", false], [1433, "module-jax.scipy.stats.dirichlet", false], [1433, "module-jax.scipy.stats.expon", false], [1433, "module-jax.scipy.stats.gamma", false], [1433, "module-jax.scipy.stats.gennorm", false], [1433, "module-jax.scipy.stats.geom", false], [1433, "module-jax.scipy.stats.gumbel_l", false], [1433, "module-jax.scipy.stats.gumbel_r", false], [1433, "module-jax.scipy.stats.laplace", false], [1433, "module-jax.scipy.stats.logistic", false], [1433, "module-jax.scipy.stats.multinomial", false], [1433, "module-jax.scipy.stats.multivariate_normal", false], [1433, "module-jax.scipy.stats.nbinom", false], [1433, "module-jax.scipy.stats.norm", false], [1433, "module-jax.scipy.stats.pareto", false], [1433, "module-jax.scipy.stats.poisson", false], [1433, "module-jax.scipy.stats.t", false], [1433, "module-jax.scipy.stats.truncnorm", false], [1433, "module-jax.scipy.stats.uniform", false], [1433, "module-jax.scipy.stats.vonmises", false], [1433, "module-jax.scipy.stats.wrapcauchy", false], [1434, "module-jax.sharding", false], [1435, "module-jax.stages", false], [1436, "module-jax.test_util", false], [1437, "module-jax.tree", false], [1438, "module-jax.tree_util", false], [1439, "module-jax.typing", false]], "module_kept_var_idx (jax.export.exported attribute)": [[1415, "jax.export.Exported.module_kept_var_idx", false]], "momentum() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.momentum", false]], "moveaxis() (in module jax.numpy)": [[846, "jax.numpy.moveaxis", false]], "mt (jax.array property)": [[33, "jax.Array.mT", false]], "mul() (in module jax.lax)": [[418, "jax.lax.mul", false]], "multi_dot() (in module jax.numpy.linalg)": [[804, "jax.numpy.linalg.multi_dot", false]], "multigammaln() (in module jax.scipy.special)": [[1154, "jax.scipy.special.multigammaln", false]], "multinomial() (in module jax.random)": [[1044, "jax.random.multinomial", false]], "multiple_of() (in module jax.experimental.pallas)": [[176, "jax.experimental.pallas.multiple_of", false]], "multiply (in module jax.numpy)": [[847, "jax.numpy.multiply", false]], "multivariate_normal() (in module jax.random)": [[1045, "jax.random.multivariate_normal", false]], "named_call() (in module jax)": [[505, "jax.named_call", false]], "named_scope() (in module jax)": [[506, "jax.named_scope", false]], "namedsharding (class in jax.sharding)": [[1434, "jax.sharding.NamedSharding", false]], "nan_checks (in module jax.experimental.checkify)": [[124, "jax.experimental.checkify.nan_checks", false]], "nan_to_num() (in module jax.numpy)": [[848, "jax.numpy.nan_to_num", false]], "nanargmax() (in module jax.numpy)": [[849, "jax.numpy.nanargmax", false]], "nanargmin() (in module jax.numpy)": [[850, "jax.numpy.nanargmin", false]], "nancumprod() (in module jax.numpy)": [[851, "jax.numpy.nancumprod", false]], "nancumsum() (in module jax.numpy)": [[852, "jax.numpy.nancumsum", false]], "nanmax() (in module jax.numpy)": [[853, "jax.numpy.nanmax", false]], "nanmean() (in module jax.numpy)": [[854, "jax.numpy.nanmean", false]], "nanmedian() (in module jax.numpy)": [[855, "jax.numpy.nanmedian", false]], "nanmin() (in module jax.numpy)": [[856, "jax.numpy.nanmin", false]], "nanpercentile() (in module jax.numpy)": [[857, "jax.numpy.nanpercentile", false]], "nanprod() (in module jax.numpy)": [[858, "jax.numpy.nanprod", false]], "nanquantile() (in module jax.numpy)": [[859, "jax.numpy.nanquantile", false]], "nanstd() (in module jax.numpy)": [[860, "jax.numpy.nanstd", false]], "nansum() (in module jax.numpy)": [[861, "jax.numpy.nansum", false]], "nanvar() (in module jax.numpy)": [[862, "jax.numpy.nanvar", false]], "nbytes (jax.array property)": [[37, "jax.Array.nbytes", false]], "ndarray (in module jax.numpy)": [[863, "jax.numpy.ndarray", false]], "ndim (jax.array property)": [[38, "jax.Array.ndim", false]], "ndim() (in module jax.numpy)": [[865, "jax.numpy.ndim", false]], "ndtr() (in module jax.scipy.special)": [[1155, "jax.scipy.special.ndtr", false]], "ndtri() (in module jax.scipy.special)": [[1156, "jax.scipy.special.ndtri", false]], "ne() (in module jax.lax)": [[419, "jax.lax.ne", false]], "neg() (in module jax.lax)": [[420, "jax.lax.neg", false]], "negative (in module jax.numpy)": [[866, "jax.numpy.negative", false]], "negep (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.negep", false]], "nesterov() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.nesterov", false]], "nexp (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.nexp", false]], "nextafter() (in module jax.lax)": [[421, "jax.lax.nextafter", false]], "nextafter() (in module jax.numpy)": [[867, "jax.numpy.nextafter", false]], "nmant (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.nmant", false]], "no_tracing (in module jax)": [[556, "jax.no_tracing", false]], "nonconcretebooleanindexerror (class in jax.errors)": [[1370, "jax.errors.NonConcreteBooleanIndexError", false]], "nonzero() (in module jax.numpy)": [[868, "jax.numpy.nonzero", false]], "nonzero() (jax.array method)": [[39, "jax.Array.nonzero", false]], "norm() (in module jax.numpy.linalg)": [[805, "jax.numpy.linalg.norm", false]], "normal() (in module jax.nn.initializers)": [[526, "jax.nn.initializers.normal", false]], "normal() (in module jax.random)": [[1046, "jax.random.normal", false]], "not_equal() (in module jax.numpy)": [[869, "jax.numpy.not_equal", false]], "nr_devices (jax.export.exported attribute)": [[1415, "jax.export.Exported.nr_devices", false]], "num_arrivals (jax.experimental.pallas.mosaic_gpu.barrier attribute)": [[148, "jax.experimental.pallas.mosaic_gpu.Barrier.num_arrivals", false]], "num_barriers (jax.experimental.pallas.mosaic_gpu.barrier attribute)": [[148, "jax.experimental.pallas.mosaic_gpu.Barrier.num_barriers", false]], "num_devices (jax.sharding.namedsharding property)": [[1434, "jax.sharding.NamedSharding.num_devices", false]], "num_devices (jax.sharding.pmapsharding property)": [[1434, "jax.sharding.PmapSharding.num_devices", false]], "num_devices (jax.sharding.sharding property)": [[1434, "jax.sharding.Sharding.num_devices", false]], "num_devices (jax.sharding.singledevicesharding property)": [[1434, "jax.sharding.SingleDeviceSharding.num_devices", false]], "num_programs() (in module jax.experimental.pallas)": [[177, "jax.experimental.pallas.num_programs", false]], "num_stages (jax.experimental.pallas.triton.compilerparams attribute)": [[183, "jax.experimental.pallas.triton.CompilerParams.num_stages", false]], "num_warps (jax.experimental.pallas.triton.compilerparams attribute)": [[183, "jax.experimental.pallas.triton.CompilerParams.num_warps", false]], "number (class in jax.numpy)": [[870, "jax.numpy.number", false]], "numpy_rank_promotion (in module jax)": [[997, "jax.numpy_rank_promotion", false]], "object_ (class in jax.numpy)": [[871, "jax.numpy.object_", false]], "ogrid (in module jax.numpy)": [[872, "jax.numpy.ogrid", false]], "one_hot() (in module jax.nn)": [[540, "jax.nn.one_hot", false]], "ones() (in module jax.nn.initializers)": [[527, "jax.nn.initializers.ones", false]], "ones() (in module jax.numpy)": [[873, "jax.numpy.ones", false]], "ones_like() (in module jax.numpy)": [[874, "jax.numpy.ones_like", false]], "optimization_barrier() (in module jax.lax)": [[422, "jax.lax.optimization_barrier", false]], "optimizer (class in jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.Optimizer", false]], "optimizer() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.optimizer", false]], "optimizeresults (class in jax.scipy.optimize)": [[1104, "jax.scipy.optimize.OptimizeResults", false]], "optimizerstate (class in jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.OptimizerState", false]], "ordered_effects (jax.export.exported attribute)": [[1415, "jax.export.Exported.ordered_effects", false]], "orders_tensor_core (jax.experimental.pallas.mosaic_gpu.barrier attribute)": [[148, "jax.experimental.pallas.mosaic_gpu.Barrier.orders_tensor_core", false]], "orthogonal() (in module jax.nn.initializers)": [[528, "jax.nn.initializers.orthogonal", false]], "orthogonal() (in module jax.random)": [[1047, "jax.random.orthogonal", false]], "out_avals (jax.export.exported attribute)": [[1415, "jax.export.Exported.out_avals", false]], "out_shardings_hlo (jax.export.exported attribute)": [[1415, "jax.export.Exported.out_shardings_hlo", false]], "out_shardings_jax() (jax.export.exported method)": [[1415, "jax.export.Exported.out_shardings_jax", false]], "out_tree (jax.export.exported attribute)": [[1415, "jax.export.Exported.out_tree", false]], "outer() (in module jax.numpy)": [[875, "jax.numpy.outer", false]], "outer() (in module jax.numpy.linalg)": [[806, "jax.numpy.linalg.outer", false]], "pack_optimizer_state() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.pack_optimizer_state", false]], "packbits() (in module jax.numpy)": [[876, "jax.numpy.packbits", false]], "packed_state (jax.example_libraries.optimizers.optimizerstate attribute)": [[1396, "jax.example_libraries.optimizers.OptimizerState.packed_state", false]], "pad() (in module jax.lax)": [[423, "jax.lax.pad", false]], "pad() (in module jax.numpy)": [[877, "jax.numpy.pad", false]], "pallas_call() (in module jax.experimental.pallas)": [[178, "jax.experimental.pallas.pallas_call", false]], "parallel() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.parallel", false]], "params_fn (jax.example_libraries.optimizers.optimizer attribute)": [[1396, "jax.example_libraries.optimizers.Optimizer.params_fn", false]], "pareto() (in module jax.random)": [[1048, "jax.random.pareto", false]], "partial (class in jax.tree_util)": [[1304, "jax.tree_util.Partial", false]], "partition() (in module jax.numpy)": [[878, "jax.numpy.partition", false]], "partitionspec (class in jax.sharding)": [[1434, "jax.sharding.PartitionSpec", false]], "pascal() (in module jax.scipy.linalg)": [[1093, "jax.scipy.linalg.pascal", false]], "pdf() (in module jax.scipy.stats.beta)": [[1174, "jax.scipy.stats.beta.pdf", false]], "pdf() (in module jax.scipy.stats.cauchy)": [[1185, "jax.scipy.stats.cauchy.pdf", false]], "pdf() (in module jax.scipy.stats.chi2)": [[1192, "jax.scipy.stats.chi2.pdf", false]], "pdf() (in module jax.scipy.stats.dirichlet)": [[1195, "jax.scipy.stats.dirichlet.pdf", false]], "pdf() (in module jax.scipy.stats.expon)": [[1200, "jax.scipy.stats.expon.pdf", false]], "pdf() (in module jax.scipy.stats.gamma)": [[1207, "jax.scipy.stats.gamma.pdf", false]], "pdf() (in module jax.scipy.stats.gennorm)": [[1219, "jax.scipy.stats.gennorm.pdf", false]], "pdf() (in module jax.scipy.stats.gumbel_l)": [[1226, "jax.scipy.stats.gumbel_l.pdf", false]], "pdf() (in module jax.scipy.stats.gumbel_r)": [[1233, "jax.scipy.stats.gumbel_r.pdf", false]], "pdf() (in module jax.scipy.stats.laplace)": [[1238, "jax.scipy.stats.laplace.pdf", false]], "pdf() (in module jax.scipy.stats.logistic)": [[1242, "jax.scipy.stats.logistic.pdf", false]], "pdf() (in module jax.scipy.stats.multivariate_normal)": [[1249, "jax.scipy.stats.multivariate_normal.pdf", false]], "pdf() (in module jax.scipy.stats.norm)": [[1257, "jax.scipy.stats.norm.pdf", false]], "pdf() (in module jax.scipy.stats.pareto)": [[1261, "jax.scipy.stats.pareto.pdf", false]], "pdf() (in module jax.scipy.stats.t)": [[1268, "jax.scipy.stats.t.pdf", false]], "pdf() (in module jax.scipy.stats.truncnorm)": [[1273, "jax.scipy.stats.truncnorm.pdf", false]], "pdf() (in module jax.scipy.stats.uniform)": [[1277, "jax.scipy.stats.uniform.pdf", false]], "pdf() (in module jax.scipy.stats.vonmises)": [[1280, "jax.scipy.stats.vonmises.pdf", false]], "pdf() (in module jax.scipy.stats.wrapcauchy)": [[1282, "jax.scipy.stats.wrapcauchy.pdf", false]], "pdf() (jax.scipy.stats.gaussian_kde method)": [[1215, "jax.scipy.stats.gaussian_kde.pdf", false]], "percentile() (in module jax.numpy)": [[879, "jax.numpy.percentile", false]], "permutation() (in module jax.random)": [[1049, "jax.random.permutation", false]], "permute_dims() (in module jax.numpy)": [[880, "jax.numpy.permute_dims", false]], "piecewise() (in module jax.numpy)": [[881, "jax.numpy.piecewise", false]], "piecewise_constant() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.piecewise_constant", false]], "pinv() (in module jax.numpy.linalg)": [[807, "jax.numpy.linalg.pinv", false]], "pjit() (in module jax.experimental.pjit)": [[1411, "jax.experimental.pjit.pjit", false]], "place() (in module jax.numpy)": [[882, "jax.numpy.place", false]], "platform() (jax.export.disabledsafetycheck class method)": [[1415, "jax.export.DisabledSafetyCheck.platform", false]], "platform_dependent() (in module jax.lax)": [[424, "jax.lax.platform_dependent", false]], "platforms (jax.export.exported attribute)": [[1415, "jax.export.Exported.platforms", false]], "pmap() (in module jax)": [[1002, "jax.pmap", false]], "pmapsharding (class in jax.sharding)": [[1434, "jax.sharding.PmapSharding", false]], "pmax() (in module jax.lax)": [[425, "jax.lax.pmax", false]], "pmean() (in module jax.lax)": [[426, "jax.lax.pmean", false]], "pmf() (in module jax.scipy.stats.bernoulli)": [[1168, "jax.scipy.stats.bernoulli.pmf", false]], "pmf() (in module jax.scipy.stats.betabinom)": [[1177, "jax.scipy.stats.betabinom.pmf", false]], "pmf() (in module jax.scipy.stats.binom)": [[1179, "jax.scipy.stats.binom.pmf", false]], "pmf() (in module jax.scipy.stats.geom)": [[1221, "jax.scipy.stats.geom.pmf", false]], "pmf() (in module jax.scipy.stats.multinomial)": [[1247, "jax.scipy.stats.multinomial.pmf", false]], "pmf() (in module jax.scipy.stats.nbinom)": [[1251, "jax.scipy.stats.nbinom.pmf", false]], "pmf() (in module jax.scipy.stats.poisson)": [[1264, "jax.scipy.stats.poisson.pmf", false]], "pmin() (in module jax.lax)": [[427, "jax.lax.pmin", false]], "poch (in module jax.scipy.special)": [[1157, "jax.scipy.special.poch", false]], "poisson() (in module jax.random)": [[1050, "jax.random.poisson", false]], "polar() (in module jax.scipy.linalg)": [[1094, "jax.scipy.linalg.polar", false]], "poly() (in module jax.numpy)": [[883, "jax.numpy.poly", false]], "polyadd() (in module jax.numpy)": [[884, "jax.numpy.polyadd", false]], "polyder() (in module jax.numpy)": [[885, "jax.numpy.polyder", false]], "polydiv() (in module jax.numpy)": [[886, "jax.numpy.polydiv", false]], "polyfit() (in module jax.numpy)": [[887, "jax.numpy.polyfit", false]], "polygamma() (in module jax.lax)": [[428, "jax.lax.polygamma", false]], "polygamma() (in module jax.scipy.special)": [[1158, "jax.scipy.special.polygamma", false]], "polyint() (in module jax.numpy)": [[888, "jax.numpy.polyint", false]], "polymul() (in module jax.numpy)": [[889, "jax.numpy.polymul", false]], "polynomial_decay() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.polynomial_decay", false]], "polysub() (in module jax.numpy)": [[890, "jax.numpy.polysub", false]], "polyval() (in module jax.numpy)": [[891, "jax.numpy.polyval", false]], "population_count() (in module jax.lax)": [[429, "jax.lax.population_count", false]], "positive() (in module jax.numpy)": [[892, "jax.numpy.positive", false]], "pow() (in module jax.lax)": [[430, "jax.lax.pow", false]], "pow() (in module jax.numpy)": [[893, "jax.numpy.pow", false]], "power() (in module jax.numpy)": [[894, "jax.numpy.power", false]], "ppermute() (in module jax.lax)": [[431, "jax.lax.ppermute", false]], "ppf() (in module jax.scipy.stats.bernoulli)": [[1169, "jax.scipy.stats.bernoulli.ppf", false]], "ppf() (in module jax.scipy.stats.cauchy)": [[1186, "jax.scipy.stats.cauchy.ppf", false]], "ppf() (in module jax.scipy.stats.expon)": [[1201, "jax.scipy.stats.expon.ppf", false]], "ppf() (in module jax.scipy.stats.gumbel_l)": [[1227, "jax.scipy.stats.gumbel_l.ppf", false]], "ppf() (in module jax.scipy.stats.gumbel_r)": [[1234, "jax.scipy.stats.gumbel_r.ppf", false]], "ppf() (in module jax.scipy.stats.logistic)": [[1243, "jax.scipy.stats.logistic.ppf", false]], "ppf() (in module jax.scipy.stats.norm)": [[1258, "jax.scipy.stats.norm.ppf", false]], "ppf() (in module jax.scipy.stats.uniform)": [[1278, "jax.scipy.stats.uniform.ppf", false]], "precision (class in jax.lax)": [[1424, "jax.lax.Precision", false]], "precision (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.precision", false]], "precisionlike (in module jax.lax)": [[1424, "jax.lax.PrecisionLike", false]], "precv() (in module jax.lax)": [[432, "jax.lax.precv", false]], "primitive": [[1379, "term-primitive", true]], "primitive (class in jax.extend.core)": [[260, "jax.extend.core.Primitive", false]], "print() (in module jax.debug)": [[84, "jax.debug.print", false]], "print_environment_info() (in module jax)": [[1003, "jax.print_environment_info", false]], "printoptions() (in module jax.numpy)": [[895, "jax.numpy.printoptions", false]], "prng_key (class in jax.dtypes)": [[106, "jax.dtypes.prng_key", false]], "prngkey() (in module jax.random)": [[1017, "jax.random.PRNGKey", false]], "process_allgather() (in module jax.experimental.multihost_utils)": [[137, "jax.experimental.multihost_utils.process_allgather", false]], "process_count() (in module jax)": [[1004, "jax.process_count", false]], "process_index() (in module jax)": [[1005, "jax.process_index", false]], "process_indices() (in module jax)": [[1006, "jax.process_indices", false]], "prod() (in module jax.numpy)": [[896, "jax.numpy.prod", false]], "prod() (jax.array method)": [[40, "jax.Array.prod", false]], "profile_dir (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[150, "jax.experimental.pallas.mosaic_gpu.CompilerParams.profile_dir", false]], "profile_space (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[150, "jax.experimental.pallas.mosaic_gpu.CompilerParams.profile_space", false]], "program_id() (in module jax.experimental.pallas)": [[179, "jax.experimental.pallas.program_id", false]], "promote_types() (in module jax.numpy)": [[897, "jax.numpy.promote_types", false]], "psend() (in module jax.lax)": [[433, "jax.lax.psend", false]], "pshuffle() (in module jax.lax)": [[434, "jax.lax.pshuffle", false]], "psum() (in module jax.lax)": [[435, "jax.lax.psum", false]], "psum_scatter() (in module jax.lax)": [[436, "jax.lax.psum_scatter", false]], "pswapaxes() (in module jax.lax)": [[437, "jax.lax.pswapaxes", false]], "ptp() (in module jax.numpy)": [[898, "jax.numpy.ptp", false]], "ptp() (jax.array method)": [[41, "jax.Array.ptp", false]], "pure function": [[1379, "term-pure-function", true]], "pure_callback() (in module jax)": [[1016, "jax.pure_callback", false]], "put() (in module jax.numpy)": [[899, "jax.numpy.put", false]], "put_along_axis() (in module jax.numpy)": [[900, "jax.numpy.put_along_axis", false]], "pycapsule() (in module jax.ffi)": [[285, "jax.ffi.pycapsule", false]], "pytree": [[1379, "term-pytree", true]], "qdwh() (in module jax.lax.linalg)": [[403, "jax.lax.linalg.qdwh", false]], "qr() (in module jax.lax.linalg)": [[404, "jax.lax.linalg.qr", false]], "qr() (in module jax.numpy.linalg)": [[808, "jax.numpy.linalg.qr", false]], "qr() (in module jax.scipy.linalg)": [[1095, "jax.scipy.linalg.qr", false]], "quantile() (in module jax.numpy)": [[901, "jax.numpy.quantile", false]], "r_ (in module jax.numpy)": [[902, "jax.numpy.r_", false]], "rad2deg() (in module jax.numpy)": [[903, "jax.numpy.rad2deg", false]], "rademacher() (in module jax.random)": [[1051, "jax.random.rademacher", false]], "radians() (in module jax.numpy)": [[904, "jax.numpy.radians", false]], "randint() (in module jax.random)": [[1052, "jax.random.randint", false]], "random_bcoo() (in module jax.experimental.sparse)": [[241, "jax.experimental.sparse.random_bcoo", false]], "random_gamma_grad() (in module jax.lax)": [[438, "jax.lax.random_gamma_grad", false]], "randomalgorithm (class in jax.lax)": [[1424, "jax.lax.RandomAlgorithm", false]], "rankdata() (in module jax.scipy.stats)": [[1265, "jax.scipy.stats.rankdata", false]], "ravel() (in module jax.numpy)": [[905, "jax.numpy.ravel", false]], "ravel() (jax.array method)": [[42, "jax.Array.ravel", false]], "ravel_multi_index() (in module jax.numpy)": [[906, "jax.numpy.ravel_multi_index", false]], "ravel_pytree() (in module jax.flatten_util)": [[288, "jax.flatten_util.ravel_pytree", false]], "rayleigh() (in module jax.random)": [[1053, "jax.random.rayleigh", false]], "rbg_prng_impl (in module jax.extend.random)": [[277, "jax.extend.random.rbg_prng_impl", false]], "real (jax.array property)": [[43, "jax.Array.real", false]], "real() (in module jax.lax)": [[439, "jax.lax.real", false]], "real() (in module jax.numpy)": [[907, "jax.numpy.real", false]], "reciprocal() (in module jax.lax)": [[440, "jax.lax.reciprocal", false]], "reciprocal() (in module jax.numpy)": [[908, "jax.numpy.reciprocal", false]], "reduce() (in module jax.lax)": [[441, "jax.lax.reduce", false]], "reduce() (in module jax.tree)": [[1297, "jax.tree.reduce", false]], "reduce_and() (in module jax.lax)": [[442, "jax.lax.reduce_and", false]], "reduce_associative() (in module jax.tree)": [[1298, "jax.tree.reduce_associative", false]], "reduce_max() (in module jax.lax)": [[443, "jax.lax.reduce_max", false]], "reduce_min() (in module jax.lax)": [[444, "jax.lax.reduce_min", false]], "reduce_or() (in module jax.lax)": [[445, "jax.lax.reduce_or", false]], "reduce_precision() (in module jax.lax)": [[446, "jax.lax.reduce_precision", false]], "reduce_prod() (in module jax.lax)": [[447, "jax.lax.reduce_prod", false]], "reduce_sum() (in module jax.lax)": [[448, "jax.lax.reduce_sum", false]], "reduce_window() (in module jax.lax)": [[449, "jax.lax.reduce_window", false]], "reduce_xor() (in module jax.lax)": [[450, "jax.lax.reduce_xor", false]], "reduced (jax.sharding.partitionspec property)": [[1434, "jax.sharding.PartitionSpec.reduced", false]], "register_custom_call_target() (in module jaxlib.xla_client)": [[1334, "jaxlib.xla_client.register_custom_call_target", false]], "register_dataclass() (in module jax.tree_util)": [[1307, "jax.tree_util.register_dataclass", false]], "register_ffi_target() (in module jax.ffi)": [[286, "jax.ffi.register_ffi_target", false]], "register_ffi_type_id() (in module jax.ffi)": [[287, "jax.ffi.register_ffi_type_id", false]], "register_namedtuple_serialization() (in module jax.export)": [[252, "jax.export.register_namedtuple_serialization", false]], "register_pytree_node() (in module jax.tree_util)": [[1308, "jax.tree_util.register_pytree_node", false]], "register_pytree_node_class() (in module jax.tree_util)": [[1309, "jax.tree_util.register_pytree_node_class", false]], "register_pytree_node_serialization() (in module jax.export)": [[253, "jax.export.register_pytree_node_serialization", false]], "register_pytree_with_keys() (in module jax.tree_util)": [[1310, "jax.tree_util.register_pytree_with_keys", false]], "register_pytree_with_keys_class() (in module jax.tree_util)": [[1311, "jax.tree_util.register_pytree_with_keys_class", false]], "register_static() (in module jax.tree_util)": [[1312, "jax.tree_util.register_static", false]], "regulargridinterpolator (class in jax.scipy.interpolate)": [[1076, "jax.scipy.interpolate.RegularGridInterpolator", false]], "rel_entr() (in module jax.scipy.special)": [[1159, "jax.scipy.special.rel_entr", false]], "relu (in module jax.nn)": [[541, "jax.nn.relu", false]], "relu6 (in module jax.nn)": [[542, "jax.nn.relu6", false]], "rem() (in module jax.lax)": [[451, "jax.lax.rem", false]], "remainder() (in module jax.numpy)": [[909, "jax.numpy.remainder", false]], "repeat() (in module jax.numpy)": [[910, "jax.numpy.repeat", false]], "repeat() (jax.array method)": [[44, "jax.Array.repeat", false]], "resample() (jax.scipy.stats.gaussian_kde method)": [[1216, "jax.scipy.stats.gaussian_kde.resample", false]], "reset_cache() (in module jax.experimental.compilation_cache.compilation_cache)": [[1400, "jax.experimental.compilation_cache.compilation_cache.reset_cache", false]], "reshape() (in module jax.lax)": [[452, "jax.lax.reshape", false]], "reshape() (in module jax.numpy)": [[911, "jax.numpy.reshape", false]], "reshape() (jax.array method)": [[45, "jax.Array.reshape", false]], "resize() (in module jax.image)": [[291, "jax.image.resize", false]], "resize() (in module jax.numpy)": [[912, "jax.numpy.resize", false]], "resizemethod (class in jax.image)": [[1423, "jax.image.ResizeMethod", false]], "resolution (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.resolution", false]], "result_type() (in module jax.dtypes)": [[107, "jax.dtypes.result_type", false]], "result_type() (in module jax.numpy)": [[913, "jax.numpy.result_type", false]], "rev() (in module jax.lax)": [[453, "jax.lax.rev", false]], "reverse-mode autodiff": [[1379, "term-reverse-mode-autodiff", true]], "rfft (jax.lax.ffttype attribute)": [[1424, "jax.lax.FftType.RFFT", false]], "rfft() (in module jax.numpy.fft)": [[696, "jax.numpy.fft.rfft", false]], "rfft2() (in module jax.numpy.fft)": [[697, "jax.numpy.fft.rfft2", false]], "rfftfreq() (in module jax.numpy.fft)": [[698, "jax.numpy.fft.rfftfreq", false]], "rfftn() (in module jax.numpy.fft)": [[699, "jax.numpy.fft.rfftn", false]], "right_shift() (in module jax.numpy)": [[914, "jax.numpy.right_shift", false]], "rint() (in module jax.numpy)": [[915, "jax.numpy.rint", false]], "rmsprop() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.rmsprop", false]], "rmsprop_momentum() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.rmsprop_momentum", false]], "rng_bit_generator() (in module jax.lax)": [[454, "jax.lax.rng_bit_generator", false]], "rng_default (jax.lax.randomalgorithm attribute)": [[1424, "jax.lax.RandomAlgorithm.RNG_DEFAULT", false]], "rng_philox (jax.lax.randomalgorithm attribute)": [[1424, "jax.lax.RandomAlgorithm.RNG_PHILOX", false]], "rng_three_fry (jax.lax.randomalgorithm attribute)": [[1424, "jax.lax.RandomAlgorithm.RNG_THREE_FRY", false]], "rng_uniform() (in module jax.lax)": [[455, "jax.lax.rng_uniform", false]], "roll() (in module jax.numpy)": [[916, "jax.numpy.roll", false]], "rollaxis() (in module jax.numpy)": [[917, "jax.numpy.rollaxis", false]], "roots() (in module jax.numpy)": [[918, "jax.numpy.roots", false]], "rot90() (in module jax.numpy)": [[919, "jax.numpy.rot90", false]], "rotation (class in jax.scipy.spatial.transform)": [[1119, "jax.scipy.spatial.transform.Rotation", false]], "round() (in module jax.lax)": [[456, "jax.lax.round", false]], "round() (in module jax.numpy)": [[920, "jax.numpy.round", false]], "round() (jax.array method)": [[46, "jax.Array.round", false]], "roundingmethod (class in jax.lax)": [[1424, "jax.lax.RoundingMethod", false]], "rsf2csf() (in module jax.scipy.linalg)": [[1096, "jax.scipy.linalg.rsf2csf", false]], "rsqrt() (in module jax.lax)": [[457, "jax.lax.rsqrt", false]], "run_scoped() (in module jax.experimental.pallas)": [[180, "jax.experimental.pallas.run_scoped", false]], "runtime_executable() (jax.stages.compiled method)": [[1435, "jax.stages.Compiled.runtime_executable", false]], "s_ (in module jax.numpy)": [[921, "jax.numpy.s_", false]], "save() (in module jax.numpy)": [[922, "jax.numpy.save", false]], "save_device_memory_profile() (in module jax.profiler)": [[1011, "jax.profiler.save_device_memory_profile", false]], "savez() (in module jax.numpy)": [[923, "jax.numpy.savez", false]], "scalar_type_of() (in module jax.dtypes)": [[108, "jax.dtypes.scalar_type_of", false]], "scale_and_translate() (in module jax.image)": [[292, "jax.image.scale_and_translate", false]], "scaled_dot_general() (in module jax.nn)": [[543, "jax.nn.scaled_dot_general", false]], "scaled_matmul() (in module jax.nn)": [[544, "jax.nn.scaled_matmul", false]], "scan() (in module jax.lax)": [[458, "jax.lax.scan", false]], "scatter() (in module jax.lax)": [[459, "jax.lax.scatter", false]], "scatter_add() (in module jax.lax)": [[460, "jax.lax.scatter_add", false]], "scatter_apply() (in module jax.lax)": [[461, "jax.lax.scatter_apply", false]], "scatter_max() (in module jax.lax)": [[462, "jax.lax.scatter_max", false]], "scatter_min() (in module jax.lax)": [[463, "jax.lax.scatter_min", false]], "scatter_mul() (in module jax.lax)": [[464, "jax.lax.scatter_mul", false]], "scatterdimensionnumbers (class in jax.lax)": [[1424, "jax.lax.ScatterDimensionNumbers", false]], "schur() (in module jax.lax.linalg)": [[405, "jax.lax.linalg.schur", false]], "schur() (in module jax.scipy.linalg)": [[1097, "jax.scipy.linalg.schur", false]], "searchsorted() (in module jax.numpy)": [[924, "jax.numpy.searchsorted", false]], "searchsorted() (jax.array method)": [[47, "jax.Array.searchsorted", false]], "seed_with_impl() (in module jax.extend.random)": [[278, "jax.extend.random.seed_with_impl", false]], "segment_max() (in module jax.ops)": [[998, "jax.ops.segment_max", false]], "segment_min() (in module jax.ops)": [[999, "jax.ops.segment_min", false]], "segment_prod() (in module jax.ops)": [[1000, "jax.ops.segment_prod", false]], "segment_sum() (in module jax.ops)": [[1001, "jax.ops.segment_sum", false]], "select() (in module jax.lax)": [[465, "jax.lax.select", false]], "select() (in module jax.numpy)": [[925, "jax.numpy.select", false]], "select_n() (in module jax.lax)": [[466, "jax.lax.select_n", false]], "selu() (in module jax.nn)": [[545, "jax.nn.selu", false]], "sem() (in module jax.scipy.stats)": [[1266, "jax.scipy.stats.sem", false]], "semaphore_signal_parallel() (in module jax.experimental.pallas.mosaic_gpu)": [[170, "jax.experimental.pallas.mosaic_gpu.semaphore_signal_parallel", false]], "semaphoresignal (class in jax.experimental.pallas.mosaic_gpu)": [[155, "jax.experimental.pallas.mosaic_gpu.SemaphoreSignal", false]], "sequential_vmap() (in module jax.custom_batching)": [[74, "jax.custom_batching.sequential_vmap", false]], "serial() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.serial", false]], "serialize() (in module jax.experimental.serialize_executable)": [[197, "jax.experimental.serialize_executable.serialize", false]], "serialize() (jax.export.exported method)": [[1415, "jax.export.Exported.serialize", false]], "set() (in module jax.ref)": [[1068, "jax.ref.set", false]], "set_cache_dir() (in module jax.experimental.compilation_cache.compilation_cache)": [[1400, "jax.experimental.compilation_cache.compilation_cache.set_cache_dir", false]], "set_max_registers() (in module jax.experimental.pallas.mosaic_gpu)": [[171, "jax.experimental.pallas.mosaic_gpu.set_max_registers", false]], "set_printoptions() (in module jax.numpy)": [[926, "jax.numpy.set_printoptions", false]], "setdiff1d() (in module jax.numpy)": [[927, "jax.numpy.setdiff1d", false]], "setxor1d() (in module jax.numpy)": [[928, "jax.numpy.setxor1d", false]], "sf() (in module jax.scipy.stats.beta)": [[1175, "jax.scipy.stats.beta.sf", false]], "sf() (in module jax.scipy.stats.cauchy)": [[1187, "jax.scipy.stats.cauchy.sf", false]], "sf() (in module jax.scipy.stats.chi2)": [[1193, "jax.scipy.stats.chi2.sf", false]], "sf() (in module jax.scipy.stats.expon)": [[1202, "jax.scipy.stats.expon.sf", false]], "sf() (in module jax.scipy.stats.gamma)": [[1208, "jax.scipy.stats.gamma.sf", false]], "sf() (in module jax.scipy.stats.gumbel_l)": [[1228, "jax.scipy.stats.gumbel_l.sf", false]], "sf() (in module jax.scipy.stats.gumbel_r)": [[1235, "jax.scipy.stats.gumbel_r.sf", false]], "sf() (in module jax.scipy.stats.logistic)": [[1244, "jax.scipy.stats.logistic.sf", false]], "sf() (in module jax.scipy.stats.norm)": [[1259, "jax.scipy.stats.norm.sf", false]], "sf() (in module jax.scipy.stats.truncnorm)": [[1274, "jax.scipy.stats.truncnorm.sf", false]], "sgd() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.sgd", false]], "shape (jax.array property)": [[48, "jax.Array.shape", false]], "shape() (in module jax.numpy)": [[929, "jax.numpy.shape", false]], "shape_dependent() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.shape_dependent", false]], "shapedtypestruct (class in jax)": [[63, "jax.ShapeDtypeStruct", false]], "shard_map() (in module jax)": [[1283, "jax.shard_map", false]], "shard_map() (in module jax.experimental.shard_map)": [[198, "jax.experimental.shard_map.shard_map", false]], "shard_shape() (jax.sharding.pmapsharding method)": [[1434, "jax.sharding.PmapSharding.shard_shape", false]], "shard_shape() (jax.sharding.sharding method)": [[1434, "jax.sharding.Sharding.shard_shape", false]], "sharding (class in jax.sharding)": [[1434, "jax.sharding.Sharding", false]], "sharding (jax.array property)": [[49, "jax.Array.sharding", false]], "sharding_spec (jax.sharding.pmapsharding property)": [[1434, "jax.sharding.PmapSharding.sharding_spec", false]], "shift_left() (in module jax.lax)": [[467, "jax.lax.shift_left", false]], "shift_right_arithmetic() (in module jax.lax)": [[468, "jax.lax.shift_right_arithmetic", false]], "shift_right_logical() (in module jax.lax)": [[469, "jax.lax.shift_right_logical", false]], "shutdown() (in module jax.distributed)": [[99, "jax.distributed.shutdown", false]], "sigmoid() (in module jax.nn)": [[546, "jax.nn.sigmoid", false]], "sign() (in module jax.lax)": [[470, "jax.lax.sign", false]], "sign() (in module jax.numpy)": [[930, "jax.numpy.sign", false]], "signbit() (in module jax.numpy)": [[931, "jax.numpy.signbit", false]], "signedinteger (class in jax.numpy)": [[932, "jax.numpy.signedinteger", false]], "silu() (in module jax.nn)": [[547, "jax.nn.silu", false]], "sin() (in module jax.lax)": [[471, "jax.lax.sin", false]], "sin() (in module jax.numpy)": [[933, "jax.numpy.sin", false]], "sinc() (in module jax.numpy)": [[934, "jax.numpy.sinc", false]], "single (in module jax.numpy)": [[935, "jax.numpy.single", false]], "singledevicesharding (class in jax.sharding)": [[1434, "jax.sharding.SingleDeviceSharding", false]], "sinh() (in module jax.lax)": [[472, "jax.lax.sinh", false]], "sinh() (in module jax.numpy)": [[936, "jax.numpy.sinh", false]], "size (jax.array property)": [[50, "jax.Array.size", false]], "size() (in module jax.numpy)": [[937, "jax.numpy.size", false]], "slerp (class in jax.scipy.spatial.transform)": [[1120, "jax.scipy.spatial.transform.Slerp", false]], "slice (class in jax.experimental.pallas)": [[141, "jax.experimental.pallas.Slice", false]], "slice() (in module jax.lax)": [[473, "jax.lax.slice", false]], "slice_in_dim() (in module jax.lax)": [[474, "jax.lax.slice_in_dim", false]], "slogdet() (in module jax.numpy.linalg)": [[809, "jax.numpy.linalg.slogdet", false]], "sm3() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.sm3", false]], "smallest_normal (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.smallest_normal", false]], "smallest_subnormal (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.smallest_subnormal", false]], "smap() (in module jax)": [[1284, "jax.smap", false]], "smem (in module jax.experimental.pallas.mosaic_gpu)": [[154, "jax.experimental.pallas.mosaic_gpu.SMEM", false]], "soft_sign() (in module jax.nn)": [[548, "jax.nn.soft_sign", false]], "softmax() (in module jax.nn)": [[549, "jax.nn.softmax", false]], "softmax() (in module jax.scipy.special)": [[1160, "jax.scipy.special.softmax", false]], "softplus() (in module jax.nn)": [[550, "jax.nn.softplus", false]], "solve() (in module jax.numpy.linalg)": [[810, "jax.numpy.linalg.solve", false]], "solve() (in module jax.scipy.linalg)": [[1098, "jax.scipy.linalg.solve", false]], "solve_triangular() (in module jax.scipy.linalg)": [[1099, "jax.scipy.linalg.solve_triangular", false]], "sort() (in module jax.lax)": [[475, "jax.lax.sort", false]], "sort() (in module jax.numpy)": [[938, "jax.numpy.sort", false]], "sort() (jax.array method)": [[51, "jax.Array.sort", false]], "sort_complex() (in module jax.numpy)": [[939, "jax.numpy.sort_complex", false]], "sort_key_val() (in module jax.lax)": [[476, "jax.lax.sort_key_val", false]], "spacing() (in module jax.numpy)": [[940, "jax.numpy.spacing", false]], "sparse_plus() (in module jax.nn)": [[551, "jax.nn.sparse_plus", false]], "sparse_sigmoid() (in module jax.nn)": [[552, "jax.nn.sparse_sigmoid", false]], "sparsify() (in module jax.experimental.sparse)": [[242, "jax.experimental.sparse.sparsify", false]], "spec (jax.sharding.namedsharding property)": [[1434, "jax.sharding.NamedSharding.spec", false]], "spence() (in module jax.scipy.special)": [[1161, "jax.scipy.special.spence", false]], "sph_harm() (in module jax.scipy.special)": [[1162, "jax.scipy.special.sph_harm", false]], "split() (in module jax.lax)": [[477, "jax.lax.split", false]], "split() (in module jax.numpy)": [[941, "jax.numpy.split", false]], "split() (in module jax.random)": [[1054, "jax.random.split", false]], "spmd": [[1379, "term-SPMD", true]], "spsolve() (in module jax.experimental.sparse.linalg)": [[240, "jax.experimental.sparse.linalg.spsolve", false]], "sqrt() (in module jax.lax)": [[478, "jax.lax.sqrt", false]], "sqrt() (in module jax.numpy)": [[942, "jax.numpy.sqrt", false]], "sqrtm() (in module jax.scipy.linalg)": [[1100, "jax.scipy.linalg.sqrtm", false]], "square() (in module jax.lax)": [[479, "jax.lax.square", false]], "square() (in module jax.numpy)": [[943, "jax.numpy.square", false]], "squareplus() (in module jax.nn)": [[553, "jax.nn.squareplus", false]], "squeeze() (in module jax.lax)": [[480, "jax.lax.squeeze", false]], "squeeze() (in module jax.numpy)": [[944, "jax.numpy.squeeze", false]], "squeeze() (jax.array method)": [[52, "jax.Array.squeeze", false]], "stack() (in module jax.numpy)": [[945, "jax.numpy.stack", false]], "standardize() (in module jax.nn)": [[554, "jax.nn.standardize", false]], "start_server() (in module jax.profiler)": [[1012, "jax.profiler.start_server", false]], "start_trace() (in module jax.profiler)": [[1013, "jax.profiler.start_trace", false]], "static": [[1379, "term-static", true]], "std() (in module jax.numpy)": [[946, "jax.numpy.std", false]], "std() (jax.array method)": [[53, "jax.Array.std", false]], "steptraceannotation (class in jax.profiler)": [[1007, "jax.profiler.StepTraceAnnotation", false]], "stft() (in module jax.scipy.signal)": [[1114, "jax.scipy.signal.stft", false]], "stop_gradient() (in module jax.lax)": [[481, "jax.lax.stop_gradient", false]], "stop_trace() (in module jax.profiler)": [[1014, "jax.profiler.stop_trace", false]], "store() (in module jax.experimental.pallas)": [[181, "jax.experimental.pallas.store", false]], "storeexception": [[266, "jax.extend.linear_util.StoreException", false]], "structure() (in module jax.tree)": [[1299, "jax.tree.structure", false]], "sub() (in module jax.lax)": [[482, "jax.lax.sub", false]], "subtract (in module jax.numpy)": [[947, "jax.numpy.subtract", false]], "subtree_defs (jax.example_libraries.optimizers.optimizerstate attribute)": [[1396, "jax.example_libraries.optimizers.OptimizerState.subtree_defs", false]], "sum() (in module jax.numpy)": [[948, "jax.numpy.sum", false]], "sum() (jax.array method)": [[54, "jax.Array.sum", false]], "sumpool() (in module jax.example_libraries.stax)": [[1397, "jax.example_libraries.stax.SumPool", false]], "supported_lhs_types (jax.lax.dotalgorithmpreset property)": [[1424, "jax.lax.DotAlgorithmPreset.supported_lhs_types", false]], "supported_output_types() (jax.lax.dotalgorithmpreset method)": [[1424, "jax.lax.DotAlgorithmPreset.supported_output_types", false]], "supported_rhs_types (jax.lax.dotalgorithmpreset property)": [[1424, "jax.lax.DotAlgorithmPreset.supported_rhs_types", false]], "svd() (in module jax.lax.linalg)": [[406, "jax.lax.linalg.svd", false]], "svd() (in module jax.numpy.linalg)": [[811, "jax.numpy.linalg.svd", false]], "svd() (in module jax.scipy.linalg)": [[1101, "jax.scipy.linalg.svd", false]], "svdalgorithm (class in jax.lax.linalg)": [[394, "jax.lax.linalg.SvdAlgorithm", false]], "svdvals() (in module jax.numpy.linalg)": [[812, "jax.numpy.linalg.svdvals", false]], "swap() (in module jax.experimental.pallas)": [[182, "jax.experimental.pallas.swap", false]], "swap() (in module jax.ref)": [[1069, "jax.ref.swap", false]], "swapaxes() (in module jax.numpy)": [[949, "jax.numpy.swapaxes", false]], "swapaxes() (jax.array method)": [[55, "jax.Array.swapaxes", false]], "swish() (in module jax.nn)": [[555, "jax.nn.swish", false]], "switch() (in module jax.lax)": [[483, "jax.lax.switch", false]], "swizzletransform (class in jax.experimental.pallas.mosaic_gpu)": [[156, "jax.experimental.pallas.mosaic_gpu.SwizzleTransform", false]], "symbolic_args_specs() (in module jax.export)": [[254, "jax.export.symbolic_args_specs", false]], "symbolic_shape() (in module jax.export)": [[255, "jax.export.symbolic_shape", false]], "symbolicscope (class in jax.export)": [[245, "jax.export.SymbolicScope", false]], "symmetric_product() (in module jax.lax.linalg)": [[407, "jax.lax.linalg.symmetric_product", false]], "sync_global_devices() (in module jax.experimental.multihost_utils)": [[138, "jax.experimental.multihost_utils.sync_global_devices", false]], "t (jax.array property)": [[1, "jax.Array.T", false]], "t() (in module jax.random)": [[1055, "jax.random.t", false]], "take() (in module jax.numpy)": [[950, "jax.numpy.take", false]], "take() (jax.array method)": [[56, "jax.Array.take", false]], "take_along_axis() (in module jax.numpy)": [[951, "jax.numpy.take_along_axis", false]], "tan() (in module jax.lax)": [[484, "jax.lax.tan", false]], "tan() (in module jax.numpy)": [[952, "jax.numpy.tan", false]], "tanh() (in module jax.lax)": [[485, "jax.lax.tanh", false]], "tanh() (in module jax.numpy)": [[953, "jax.numpy.tanh", false]], "tensordot() (in module jax.numpy)": [[954, "jax.numpy.tensordot", false]], "tensordot() (in module jax.numpy.linalg)": [[813, "jax.numpy.linalg.tensordot", false]], "tensorinv() (in module jax.numpy.linalg)": [[814, "jax.numpy.linalg.tensorinv", false]], "tensorsolve() (in module jax.numpy.linalg)": [[815, "jax.numpy.linalg.tensorsolve", false]], "tf32_tf32_f32 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.TF32_TF32_F32", false]], "tf32_tf32_f32_x3 (jax.lax.dotalgorithmpreset attribute)": [[1424, "jax.lax.DotAlgorithmPreset.TF32_TF32_F32_X3", false]], "threefry2x32_p (in module jax.extend.random)": [[279, "jax.extend.random.threefry2x32_p", false]], "threefry_2x32() (in module jax.extend.random)": [[280, "jax.extend.random.threefry_2x32", false]], "threefry_prng_impl (in module jax.extend.random)": [[281, "jax.extend.random.threefry_prng_impl", false]], "tile() (in module jax.numpy)": [[955, "jax.numpy.tile", false]], "tilingtransform (class in jax.experimental.pallas.mosaic_gpu)": [[157, "jax.experimental.pallas.mosaic_gpu.TilingTransform", false]], "tiny (jax.numpy.finfo attribute)": [[701, "jax.numpy.finfo.tiny", false]], "to_device() (jax.array method)": [[57, "jax.Array.to_device", false]], "to_nearest_even (jax.lax.roundingmethod attribute)": [[1424, "jax.lax.RoundingMethod.TO_NEAREST_EVEN", false]], "todense() (in module jax.experimental.sparse)": [[243, "jax.experimental.sparse.todense", false]], "toeplitz() (in module jax.scipy.linalg)": [[1102, "jax.scipy.linalg.toeplitz", false]], "token (class in jax.extend.core)": [[261, "jax.extend.core.Token", false]], "top_k() (in module jax.lax)": [[486, "jax.lax.top_k", false]], "tpu": [[1379, "term-TPU", true]], "trace() (in module jax.numpy)": [[956, "jax.numpy.trace", false]], "trace() (in module jax.numpy.linalg)": [[816, "jax.numpy.linalg.trace", false]], "trace() (in module jax.profiler)": [[1015, "jax.profiler.trace", false]], "trace() (jax.array method)": [[58, "jax.Array.trace", false]], "trace() (jax.stages.wrapped method)": [[1435, "jax.stages.Wrapped.trace", false]], "traceannotation (class in jax.profiler)": [[1008, "jax.profiler.TraceAnnotation", false]], "traced (class in jax.stages)": [[1435, "jax.stages.Traced", false]], "tracer": [[1379, "term-Tracer", true]], "tracerarrayconversionerror (class in jax.errors)": [[1370, "jax.errors.TracerArrayConversionError", false]], "tracerboolconversionerror (class in jax.errors)": [[1370, "jax.errors.TracerBoolConversionError", false]], "tracerintegerconversionerror (class in jax.errors)": [[1370, "jax.errors.TracerIntegerConversionError", false]], "transfer_guard() (in module jax)": [[1288, "jax.transfer_guard", false]], "transformation": [[1379, "term-transformation", true]], "transformation (in module jax.extend.linear_util)": [[270, "jax.extend.linear_util.transformation", false]], "transformation_with_aux (in module jax.extend.linear_util)": [[271, "jax.extend.linear_util.transformation_with_aux", false]], "transpose() (in module jax.lax)": [[487, "jax.lax.transpose", false]], "transpose() (in module jax.numpy)": [[957, "jax.numpy.transpose", false]], "transpose() (in module jax.tree)": [[1300, "jax.tree.transpose", false]], "transpose() (jax.array method)": [[59, "jax.Array.transpose", false]], "transposetransform (class in jax.experimental.pallas.mosaic_gpu)": [[158, "jax.experimental.pallas.mosaic_gpu.TransposeTransform", false]], "trapezoid() (in module jax.numpy)": [[958, "jax.numpy.trapezoid", false]], "trapezoid() (in module jax.scipy.integrate)": [[1075, "jax.scipy.integrate.trapezoid", false]], "tree_all() (in module jax.tree_util)": [[1313, "jax.tree_util.tree_all", false]], "tree_broadcast() (in module jax.tree_util)": [[1314, "jax.tree_util.tree_broadcast", false]], "tree_def (jax.example_libraries.optimizers.optimizerstate attribute)": [[1396, "jax.example_libraries.optimizers.OptimizerState.tree_def", false]], "tree_flatten() (in module jax.tree_util)": [[1315, "jax.tree_util.tree_flatten", false]], "tree_flatten_with_path() (in module jax.tree_util)": [[1316, "jax.tree_util.tree_flatten_with_path", false]], "tree_leaves() (in module jax.tree_util)": [[1317, "jax.tree_util.tree_leaves", false]], "tree_leaves_with_path() (in module jax.tree_util)": [[1318, "jax.tree_util.tree_leaves_with_path", false]], "tree_map() (in module jax.tree_util)": [[1319, "jax.tree_util.tree_map", false]], "tree_map_with_path() (in module jax.tree_util)": [[1320, "jax.tree_util.tree_map_with_path", false]], "tree_reduce() (in module jax.tree_util)": [[1321, "jax.tree_util.tree_reduce", false]], "tree_reduce_associative() (in module jax.tree_util)": [[1322, "jax.tree_util.tree_reduce_associative", false]], "tree_structure() (in module jax.tree_util)": [[1323, "jax.tree_util.tree_structure", false]], "tree_transpose() (in module jax.tree_util)": [[1324, "jax.tree_util.tree_transpose", false]], "tree_unflatten() (in module jax.tree_util)": [[1325, "jax.tree_util.tree_unflatten", false]], "treedef_children() (in module jax.tree_util)": [[1326, "jax.tree_util.treedef_children", false]], "treedef_is_leaf() (in module jax.tree_util)": [[1327, "jax.tree_util.treedef_is_leaf", false]], "treedef_tuple() (in module jax.tree_util)": [[1328, "jax.tree_util.treedef_tuple", false]], "tri() (in module jax.numpy)": [[959, "jax.numpy.tri", false]], "triangular() (in module jax.random)": [[1056, "jax.random.triangular", false]], "triangular_solve() (in module jax.lax.linalg)": [[408, "jax.lax.linalg.triangular_solve", false]], "tridiagonal() (in module jax.lax.linalg)": [[409, "jax.lax.linalg.tridiagonal", false]], "tridiagonal_solve() (in module jax.lax.linalg)": [[410, "jax.lax.linalg.tridiagonal_solve", false]], "tril() (in module jax.numpy)": [[960, "jax.numpy.tril", false]], "tril_indices() (in module jax.numpy)": [[961, "jax.numpy.tril_indices", false]], "tril_indices_from() (in module jax.numpy)": [[962, "jax.numpy.tril_indices_from", false]], "trim_zeros() (in module jax.numpy)": [[963, "jax.numpy.trim_zeros", false]], "triu() (in module jax.numpy)": [[964, "jax.numpy.triu", false]], "triu_indices() (in module jax.numpy)": [[965, "jax.numpy.triu_indices", false]], "triu_indices_from() (in module jax.numpy)": [[966, "jax.numpy.triu_indices_from", false]], "true_divide() (in module jax.numpy)": [[967, "jax.numpy.true_divide", false]], "trunc() (in module jax.numpy)": [[968, "jax.numpy.trunc", false]], "truncated_normal() (in module jax.nn.initializers)": [[529, "jax.nn.initializers.truncated_normal", false]], "truncated_normal() (in module jax.random)": [[1057, "jax.random.truncated_normal", false]], "ufunc (class in jax.numpy)": [[969, "jax.numpy.ufunc", false]], "uint (in module jax.numpy)": [[970, "jax.numpy.uint", false]], "uint16 (class in jax.numpy)": [[971, "jax.numpy.uint16", false]], "uint32 (class in jax.numpy)": [[972, "jax.numpy.uint32", false]], "uint64 (class in jax.numpy)": [[973, "jax.numpy.uint64", false]], "uint8 (class in jax.numpy)": [[974, "jax.numpy.uint8", false]], "unexpectedtracererror (class in jax.errors)": [[1370, "jax.errors.UnexpectedTracerError", false]], "unflatten() (in module jax.tree)": [[1301, "jax.tree.unflatten", false]], "uniform() (in module jax.nn.initializers)": [[530, "jax.nn.initializers.uniform", false]], "uniform() (in module jax.random)": [[1058, "jax.random.uniform", false]], "union1d() (in module jax.numpy)": [[975, "jax.numpy.union1d", false]], "unique() (in module jax.numpy)": [[976, "jax.numpy.unique", false]], "unique_all() (in module jax.numpy)": [[977, "jax.numpy.unique_all", false]], "unique_counts() (in module jax.numpy)": [[978, "jax.numpy.unique_counts", false]], "unique_inverse() (in module jax.numpy)": [[979, "jax.numpy.unique_inverse", false]], "unique_values() (in module jax.numpy)": [[980, "jax.numpy.unique_values", false]], "unordered_effects (jax.export.exported attribute)": [[1415, "jax.export.Exported.unordered_effects", false]], "unpack_optimizer_state() (in module jax.example_libraries.optimizers)": [[1396, "jax.example_libraries.optimizers.unpack_optimizer_state", false]], "unpackbits() (in module jax.numpy)": [[981, "jax.numpy.unpackbits", false]], "unravel_index() (in module jax.numpy)": [[982, "jax.numpy.unravel_index", false]], "unreduced (jax.sharding.partitionspec property)": [[1434, "jax.sharding.PartitionSpec.unreduced", false]], "unsafe_no_auto_barriers (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[150, "jax.experimental.pallas.mosaic_gpu.CompilerParams.unsafe_no_auto_barriers", false]], "unsafe_rbg_prng_impl (in module jax.extend.random)": [[282, "jax.extend.random.unsafe_rbg_prng_impl", false]], "unsignedinteger (class in jax.numpy)": [[983, "jax.numpy.unsignedinteger", false]], "unstack() (in module jax.numpy)": [[984, "jax.numpy.unstack", false]], "unwrap() (in module jax.numpy)": [[985, "jax.numpy.unwrap", false]], "update_fn (jax.example_libraries.optimizers.optimizer attribute)": [[1396, "jax.example_libraries.optimizers.Optimizer.update_fn", false]], "user_checks (in module jax.experimental.checkify)": [[125, "jax.experimental.checkify.user_checks", false]], "uses_global_constants (jax.export.exported attribute)": [[1415, "jax.export.Exported.uses_global_constants", false]], "value_and_grad() (in module jax)": [[1331, "jax.value_and_grad", false]], "value_and_grad() (in module jax.experimental.sparse)": [[244, "jax.experimental.sparse.value_and_grad", false]], "vander() (in module jax.numpy)": [[986, "jax.numpy.vander", false]], "var (class in jax.extend.core)": [[262, "jax.extend.core.Var", false]], "var() (in module jax.numpy)": [[987, "jax.numpy.var", false]], "var() (jax.array method)": [[60, "jax.Array.var", false]], "variance_scaling() (in module jax.nn.initializers)": [[531, "jax.nn.initializers.variance_scaling", false]], "vdot() (in module jax.numpy)": [[988, "jax.numpy.vdot", false]], "vecdot() (in module jax.numpy)": [[989, "jax.numpy.vecdot", false]], "vecdot() (in module jax.numpy.linalg)": [[817, "jax.numpy.linalg.vecdot", false]], "vecmat() (in module jax.numpy)": [[990, "jax.numpy.vecmat", false]], "vector_norm() (in module jax.numpy.linalg)": [[818, "jax.numpy.linalg.vector_norm", false]], "vectorize() (in module jax.numpy)": [[991, "jax.numpy.vectorize", false]], "view() (jax.array method)": [[61, "jax.Array.view", false]], "visualize_array_sharding() (in module jax.debug)": [[85, "jax.debug.visualize_array_sharding", false]], "visualize_sharding() (in module jax.debug)": [[86, "jax.debug.visualize_sharding", false]], "vjp": [[1379, "term-VJP", true]], "vjp() (in module jax)": [[1332, "jax.vjp", false]], "vjp() (jax.export.exported method)": [[1415, "jax.export.Exported.vjp", false]], "vmap() (in module jax)": [[1333, "jax.vmap", false]], "vq() (in module jax.scipy.cluster.vq)": [[1070, "jax.scipy.cluster.vq.vq", false]], "vsplit() (in module jax.numpy)": [[992, "jax.numpy.vsplit", false]], "vstack() (in module jax.numpy)": [[993, "jax.numpy.vstack", false]], "wait_load_tmem() (in module jax.experimental.pallas.mosaic_gpu)": [[172, "jax.experimental.pallas.mosaic_gpu.wait_load_tmem", false]], "wait_smem_to_gmem() (in module jax.experimental.pallas.mosaic_gpu)": [[173, "jax.experimental.pallas.mosaic_gpu.wait_smem_to_gmem", false]], "wald() (in module jax.random)": [[1059, "jax.random.wald", false]], "weak type": [[1379, "term-weak-type", true]], "weibull_min() (in module jax.random)": [[1060, "jax.random.weibull_min", false]], "welch() (in module jax.scipy.signal)": [[1115, "jax.scipy.signal.welch", false]], "wgmma() (in module jax.experimental.pallas.mosaic_gpu)": [[174, "jax.experimental.pallas.mosaic_gpu.wgmma", false]], "wgmma_wait() (in module jax.experimental.pallas.mosaic_gpu)": [[175, "jax.experimental.pallas.mosaic_gpu.wgmma_wait", false]], "wgmmaaccumulatorref (class in jax.experimental.pallas.mosaic_gpu)": [[159, "jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef", false]], "when() (in module jax.experimental.pallas)": [[195, "jax.experimental.pallas.when", false]], "where() (in module jax.numpy)": [[994, "jax.numpy.where", false]], "while_loop() (in module jax.lax)": [[488, "jax.lax.while_loop", false]], "with_memory_kind() (jax.sharding.namedsharding method)": [[1434, "jax.sharding.NamedSharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.pmapsharding method)": [[1434, "jax.sharding.PmapSharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.sharding method)": [[1434, "jax.sharding.Sharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.singledevicesharding method)": [[1434, "jax.sharding.SingleDeviceSharding.with_memory_kind", false]], "with_sharding_constraint() (in module jax.lax)": [[489, "jax.lax.with_sharding_constraint", false]], "wrap_init() (in module jax.extend.linear_util)": [[272, "jax.extend.linear_util.wrap_init", false]], "wrap_key_data() (in module jax.random)": [[1061, "jax.random.wrap_key_data", false]], "wrapped (class in jax.stages)": [[1435, "jax.stages.Wrapped", false]], "wrappedfun (class in jax.extend.linear_util)": [[267, "jax.extend.linear_util.WrappedFun", false]], "xla": [[1379, "term-XLA", true]], "xlog1py (in module jax.scipy.special)": [[1163, "jax.scipy.special.xlog1py", false]], "xlogy (in module jax.scipy.special)": [[1164, "jax.scipy.special.xlogy", false]], "zeros() (in module jax.nn.initializers)": [[532, "jax.nn.initializers.zeros", false]], "zeros() (in module jax.numpy)": [[995, "jax.numpy.zeros", false]], "zeros_like() (in module jax.numpy)": [[996, "jax.numpy.zeros_like", false]], "zeros_like_array() (in module jax.lax)": [[490, "jax.lax.zeros_like_array", false]], "zeta (in module jax.scipy.special)": [[1165, "jax.scipy.special.zeta", false]], "zeta() (in module jax.lax)": [[491, "jax.lax.zeta", false]]}, "objects": {"jax": [[0, 0, 1, "", "Array"], [62, 0, 1, "", "Device"], [63, 0, 1, "", "ShapeDtypeStruct"], [64, 3, 1, "", "block_until_ready"], [65, 4, 1, "", "check_tracer_leaks"], [66, 4, 1, "", "checking_leaks"], [67, 3, 1, "", "checkpoint"], [68, 3, 1, "", "clear_caches"], [69, 3, 1, "", "closure_convert"], [70, 4, 1, "", "config"], [71, 3, 1, "", "copy_to_host_async"], [75, 3, 1, "", "custom_gradient"], [76, 0, 1, "", "custom_jvp"], [79, 0, 1, "", "custom_vjp"], [1391, 5, 0, "-", "debug"], [87, 4, 1, "", "debug_infs"], [88, 4, 1, "", "debug_nans"], [89, 3, 1, "", "default_backend"], [90, 4, 1, "", "default_device"], [91, 4, 1, "", "default_matmul_precision"], [92, 4, 1, "", "default_prng_impl"], [93, 3, 1, "", "device_count"], [94, 3, 1, "", "device_get"], [95, 3, 1, "", "device_put"], [96, 3, 1, "", "devices"], [97, 3, 1, "", "disable_jit"], [1392, 5, 0, "-", "distributed"], [1393, 5, 0, "-", "dlpack"], [1394, 5, 0, "-", "dtypes"], [109, 4, 1, "", "enable_checks"], [110, 4, 1, "", "enable_custom_prng"], [111, 4, 1, "", "enable_custom_vjp_by_custom_transpose"], [112, 3, 1, "", "ensure_compile_time_eval"], [113, 3, 1, "", "eval_shape"], [1395, 5, 0, "-", "example_libraries"], [1415, 5, 0, "-", "export"], [1416, 5, 0, "-", "extend"], [1421, 5, 0, "-", "ffi"], [1422, 5, 0, "-", "flatten_util"], [289, 3, 1, "", "grad"], [290, 3, 1, "", "hessian"], [1423, 5, 0, "-", "image"], [293, 3, 1, "", "jacfwd"], [294, 3, 1, "", "jacobian"], [295, 3, 1, "", "jacrev"], [296, 3, 1, "", "jit"], [297, 3, 1, "", "jvp"], [1424, 5, 0, "-", "lax"], [494, 3, 1, "", "linear_transpose"], [495, 3, 1, "", "linearize"], [496, 3, 1, "", "live_arrays"], [497, 3, 1, "", "local_device_count"], [498, 3, 1, "", "local_devices"], [499, 4, 1, "", "log_compiles"], [500, 3, 1, "", "make_array_from_callback"], [501, 3, 1, "", "make_array_from_process_local_data"], [502, 3, 1, "", "make_array_from_single_device_arrays"], [503, 3, 1, "", "make_jaxpr"], [504, 3, 1, "", "make_mesh"], [505, 3, 1, "", "named_call"], [506, 3, 1, "", "named_scope"], [1426, 5, 0, "-", "nn"], [556, 4, 1, "", "no_tracing"], [1428, 5, 0, "-", "numpy"], [997, 4, 1, "", "numpy_rank_promotion"], [1429, 5, 0, "-", "ops"], [1002, 3, 1, "", "pmap"], [1003, 3, 1, "", "print_environment_info"], [1004, 3, 1, "", "process_count"], [1005, 3, 1, "", "process_index"], [1006, 3, 1, "", "process_indices"], [1430, 5, 0, "-", "profiler"], [1016, 3, 1, "", "pure_callback"], [1431, 5, 0, "-", "random"], [1432, 5, 0, "-", "ref"], [1283, 3, 1, "", "shard_map"], [1434, 5, 0, "-", "sharding"], [1284, 3, 1, "", "smap"], [1435, 5, 0, "-", "stages"], [1436, 5, 0, "-", "test_util"], [1288, 3, 1, "", "transfer_guard"], [1437, 5, 0, "-", "tree"], [1438, 5, 0, "-", "tree_util"], [1439, 5, 0, "-", "typing"], [1331, 3, 1, "", "value_and_grad"], [1332, 3, 1, "", "vjp"], [1333, 3, 1, "", "vmap"]], "jax.Array": [[1, 1, 1, "", "T"], [0, 2, 1, "", "__init__"], [2, 1, 1, "", "addressable_shards"], [3, 2, 1, "", "all"], [4, 2, 1, "", "any"], [5, 2, 1, "", "argmax"], [6, 2, 1, "", "argmin"], [7, 2, 1, "", "argpartition"], [8, 2, 1, "", "argsort"], [9, 2, 1, "", "astype"], [10, 1, 1, "", "at"], [11, 2, 1, "", "choose"], [12, 2, 1, "", "clip"], [13, 1, 1, "", "committed"], [14, 2, 1, "", "compress"], [15, 2, 1, "", "conj"], [16, 2, 1, "", "conjugate"], [17, 2, 1, "", "copy"], [18, 2, 1, "", "copy_to_host_async"], [19, 2, 1, "", "cumprod"], [20, 2, 1, "", "cumsum"], [21, 1, 1, "", "device"], [22, 2, 1, "", "diagonal"], [23, 2, 1, "", "dot"], [24, 1, 1, "", "dtype"], [25, 1, 1, "", "flat"], [26, 2, 1, "", "flatten"], [27, 1, 1, "", "global_shards"], [28, 1, 1, "", "imag"], [29, 1, 1, "", "is_fully_addressable"], [30, 1, 1, "", "is_fully_replicated"], [31, 2, 1, "", "item"], [32, 1, 1, "", "itemsize"], [33, 1, 1, "", "mT"], [34, 2, 1, "", "max"], [35, 2, 1, "", "mean"], [36, 2, 1, "", "min"], [37, 1, 1, "", "nbytes"], [38, 1, 1, "", "ndim"], [39, 2, 1, "", "nonzero"], [40, 2, 1, "", "prod"], [41, 2, 1, "", "ptp"], [42, 2, 1, "", "ravel"], [43, 1, 1, "", "real"], [44, 2, 1, "", "repeat"], [45, 2, 1, "", "reshape"], [46, 2, 1, "", "round"], [47, 2, 1, "", "searchsorted"], [48, 1, 1, "", "shape"], [49, 1, 1, "", "sharding"], [50, 1, 1, "", "size"], [51, 2, 1, "", "sort"], [52, 2, 1, "", "squeeze"], [53, 2, 1, "", "std"], [54, 2, 1, "", "sum"], [55, 2, 1, "", "swapaxes"], [56, 2, 1, "", "take"], [57, 2, 1, "", "to_device"], [58, 2, 1, "", "trace"], [59, 2, 1, "", "transpose"], [60, 2, 1, "", "var"], [61, 2, 1, "", "view"]], "jax.Device": [[62, 2, 1, "", "__init__"]], "jax.ShapeDtypeStruct": [[63, 2, 1, "", "__init__"]], "jax.custom_batching": [[72, 0, 1, "", "custom_vmap"], [74, 3, 1, "", "sequential_vmap"]], "jax.custom_batching.custom_vmap": [[72, 2, 1, "", "__init__"], [73, 2, 1, "", "def_vmap"]], "jax.custom_jvp": [[76, 2, 1, "", "__init__"], [77, 2, 1, "", "defjvp"], [78, 2, 1, "", "defjvps"]], "jax.custom_vjp": [[79, 2, 1, "", "__init__"], [80, 2, 1, "", "defvjp"]], "jax.debug": [[81, 3, 1, "", "breakpoint"], [82, 3, 1, "", "callback"], [83, 3, 1, "", "inspect_array_sharding"], [84, 3, 1, "", "print"], [85, 3, 1, "", "visualize_array_sharding"], [86, 3, 1, "", "visualize_sharding"]], "jax.distributed": [[98, 3, 1, "", "initialize"], [99, 3, 1, "", "shutdown"]], "jax.dlpack": [[100, 3, 1, "", "from_dlpack"], [101, 3, 1, "", "is_supported_dtype"]], "jax.dtypes": [[102, 0, 1, "", "bfloat16"], [103, 3, 1, "", "canonicalize_dtype"], [104, 4, 1, "", "float0"], [105, 3, 1, "", "issubdtype"], [106, 0, 1, "", "prng_key"], [107, 3, 1, "", "result_type"], [108, 3, 1, "", "scalar_type_of"]], "jax.dtypes.bfloat16": [[102, 2, 1, "", "__init__"]], "jax.dtypes.prng_key": [[106, 2, 1, "", "__init__"]], "jax.errors": [[1370, 0, 1, "", "ConcretizationTypeError"], [1370, 6, 1, "", "JaxRuntimeError"], [1370, 0, 1, "", "KeyReuseError"], [1370, 0, 1, "", "NonConcreteBooleanIndexError"], [1370, 0, 1, "", "TracerArrayConversionError"], [1370, 0, 1, "", "TracerBoolConversionError"], [1370, 0, 1, "", "TracerIntegerConversionError"], [1370, 0, 1, "", "UnexpectedTracerError"]], "jax.example_libraries": [[1396, 5, 0, "-", "optimizers"], [1397, 5, 0, "-", "stax"]], "jax.example_libraries.optimizers": [[1396, 0, 1, "", "JoinPoint"], [1396, 0, 1, "", "Optimizer"], [1396, 0, 1, "", "OptimizerState"], [1396, 3, 1, "", "adagrad"], [1396, 3, 1, "", "adam"], [1396, 3, 1, "", "adamax"], [1396, 3, 1, "", "clip_grads"], [1396, 3, 1, "", "constant"], [1396, 3, 1, "", "exponential_decay"], [1396, 3, 1, "", "inverse_time_decay"], [1396, 3, 1, "", "l2_norm"], [1396, 3, 1, "", "make_schedule"], [1396, 3, 1, "", "momentum"], [1396, 3, 1, "", "nesterov"], [1396, 3, 1, "", "optimizer"], [1396, 3, 1, "", "pack_optimizer_state"], [1396, 3, 1, "", "piecewise_constant"], [1396, 3, 1, "", "polynomial_decay"], [1396, 3, 1, "", "rmsprop"], [1396, 3, 1, "", "rmsprop_momentum"], [1396, 3, 1, "", "sgd"], [1396, 3, 1, "", "sm3"], [1396, 3, 1, "", "unpack_optimizer_state"]], "jax.example_libraries.optimizers.Optimizer": [[1396, 6, 1, "", "init_fn"], [1396, 6, 1, "", "params_fn"], [1396, 6, 1, "", "update_fn"]], "jax.example_libraries.optimizers.OptimizerState": [[1396, 6, 1, "", "packed_state"], [1396, 6, 1, "", "subtree_defs"], [1396, 6, 1, "", "tree_def"]], "jax.example_libraries.stax": [[1397, 3, 1, "", "AvgPool"], [1397, 3, 1, "", "BatchNorm"], [1397, 3, 1, "", "Conv"], [1397, 3, 1, "", "Conv1DTranspose"], [1397, 3, 1, "", "ConvTranspose"], [1397, 3, 1, "", "Dense"], [1397, 3, 1, "", "Dropout"], [1397, 3, 1, "", "FanInConcat"], [1397, 3, 1, "", "FanOut"], [1397, 3, 1, "", "GeneralConv"], [1397, 3, 1, "", "GeneralConvTranspose"], [1397, 3, 1, "", "MaxPool"], [1397, 3, 1, "", "SumPool"], [1397, 3, 1, "", "elementwise"], [1397, 3, 1, "", "parallel"], [1397, 3, 1, "", "serial"], [1397, 3, 1, "", "shape_dependent"]], "jax.experimental": [[1399, 5, 0, "-", "checkify"], [1401, 5, 0, "-", "custom_dce"], [1402, 5, 0, "-", "custom_partitioning"], [128, 3, 1, "", "disable_x64"], [129, 3, 1, "", "enable_x64"], [130, 3, 1, "", "io_callback"], [1403, 5, 0, "-", "jet"], [1404, 5, 0, "-", "key_reuse"], [1405, 5, 0, "-", "mesh_utils"], [1406, 5, 0, "-", "multihost_utils"], [1407, 5, 0, "-", "pallas"], [1411, 5, 0, "-", "pjit"], [1412, 5, 0, "-", "serialize_executable"], [1413, 5, 0, "-", "shard_map"], [1414, 5, 0, "-", "sparse"]], "jax.experimental.checkify": [[114, 0, 1, "", "Error"], [115, 7, 1, "", "JaxRuntimeError"], [116, 4, 1, "", "all_checks"], [117, 4, 1, "", "automatic_checks"], [118, 3, 1, "", "check"], [119, 3, 1, "", "check_error"], [120, 3, 1, "", "checkify"], [121, 4, 1, "", "div_checks"], [122, 4, 1, "", "float_checks"], [123, 4, 1, "", "index_checks"], [124, 4, 1, "", "nan_checks"], [125, 4, 1, "", "user_checks"]], "jax.experimental.checkify.Error": [[114, 2, 1, "", "__init__"]], "jax.experimental.compilation_cache": [[1400, 5, 0, "-", "compilation_cache"]], "jax.experimental.compilation_cache.compilation_cache": [[1400, 3, 1, "", "initialize_cache"], [1400, 3, 1, "", "is_initialized"], [1400, 3, 1, "", "reset_cache"], [1400, 3, 1, "", "set_cache_dir"]], "jax.experimental.custom_dce": [[126, 0, 1, "", "custom_dce"]], "jax.experimental.custom_dce.custom_dce": [[126, 2, 1, "", "__init__"], [127, 2, 1, "", "def_dce"]], "jax.experimental.custom_partitioning": [[1402, 3, 1, "", "custom_partitioning"]], "jax.experimental.jet": [[1403, 3, 1, "", "jet"]], "jax.experimental.mesh_utils": [[131, 3, 1, "", "create_device_mesh"], [132, 3, 1, "", "create_hybrid_device_mesh"]], "jax.experimental.multihost_utils": [[133, 3, 1, "", "assert_equal"], [134, 3, 1, "", "broadcast_one_to_all"], [135, 3, 1, "", "global_array_to_host_local_array"], [136, 3, 1, "", "host_local_array_to_global_array"], [137, 3, 1, "", "process_allgather"], [138, 3, 1, "", "sync_global_devices"]], "jax.experimental.pallas": [[139, 0, 1, "", "BlockSpec"], [140, 0, 1, "", "GridSpec"], [141, 0, 1, "", "Slice"], [142, 3, 1, "", "broadcast_to"], [143, 3, 1, "", "debug_print"], [144, 3, 1, "", "dot"], [145, 3, 1, "", "load"], [146, 3, 1, "", "max_contiguous"], [1408, 5, 0, "-", "mosaic_gpu"], [176, 3, 1, "", "multiple_of"], [177, 3, 1, "", "num_programs"], [178, 3, 1, "", "pallas_call"], [179, 3, 1, "", "program_id"], [180, 3, 1, "", "run_scoped"], [181, 3, 1, "", "store"], [182, 3, 1, "", "swap"], [1409, 5, 0, "-", "tpu"], [1410, 5, 0, "-", "triton"], [195, 3, 1, "", "when"]], "jax.experimental.pallas.BlockSpec": [[139, 2, 1, "", "__init__"]], "jax.experimental.pallas.GridSpec": [[140, 2, 1, "", "__init__"]], "jax.experimental.pallas.Slice": [[141, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu": [[147, 6, 1, "", "ACC"], [148, 0, 1, "", "Barrier"], [149, 0, 1, "", "BlockSpec"], [150, 0, 1, "", "CompilerParams"], [151, 4, 1, "", "GMEM"], [152, 0, 1, "", "Layout"], [153, 0, 1, "", "MemorySpace"], [154, 4, 1, "", "SMEM"], [155, 0, 1, "", "SemaphoreSignal"], [156, 0, 1, "", "SwizzleTransform"], [157, 0, 1, "", "TilingTransform"], [158, 0, 1, "", "TransposeTransform"], [159, 0, 1, "", "WGMMAAccumulatorRef"], [160, 3, 1, "", "async_load_tmem"], [161, 3, 1, "", "async_store_tmem"], [162, 3, 1, "", "barrier_arrive"], [163, 3, 1, "", "barrier_wait"], [164, 3, 1, "", "commit_smem"], [165, 3, 1, "", "commit_tmem"], [166, 3, 1, "", "copy_gmem_to_smem"], [167, 3, 1, "", "copy_smem_to_gmem"], [168, 3, 1, "", "emit_pipeline"], [169, 3, 1, "", "layout_cast"], [170, 3, 1, "", "semaphore_signal_parallel"], [171, 3, 1, "", "set_max_registers"], [172, 3, 1, "", "wait_load_tmem"], [173, 3, 1, "", "wait_smem_to_gmem"], [174, 3, 1, "", "wgmma"], [175, 3, 1, "", "wgmma_wait"]], "jax.experimental.pallas.mosaic_gpu.Barrier": [[148, 2, 1, "", "__init__"], [148, 6, 1, "", "num_arrivals"], [148, 6, 1, "", "num_barriers"], [148, 6, 1, "", "orders_tensor_core"]], "jax.experimental.pallas.mosaic_gpu.BlockSpec": [[149, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.CompilerParams": [[150, 2, 1, "", "__init__"], [150, 6, 1, "", "approx_math"], [150, 6, 1, "", "delay_release"], [150, 6, 1, "", "dimension_semantics"], [150, 6, 1, "", "max_concurrent_steps"], [150, 6, 1, "", "profile_dir"], [150, 6, 1, "", "profile_space"], [150, 6, 1, "", "unsafe_no_auto_barriers"]], "jax.experimental.pallas.mosaic_gpu.Layout": [[152, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.MemorySpace": [[153, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.SemaphoreSignal": [[155, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.SwizzleTransform": [[156, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.TilingTransform": [[157, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.TransposeTransform": [[158, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef": [[159, 2, 1, "", "__init__"]], "jax.experimental.pallas.triton": [[183, 0, 1, "", "CompilerParams"], [184, 3, 1, "", "approx_tanh"], [185, 3, 1, "", "atomic_add"], [186, 3, 1, "", "atomic_and"], [187, 3, 1, "", "atomic_cas"], [188, 3, 1, "", "atomic_max"], [189, 3, 1, "", "atomic_min"], [190, 3, 1, "", "atomic_or"], [191, 3, 1, "", "atomic_xchg"], [192, 3, 1, "", "atomic_xor"], [193, 3, 1, "", "debug_barrier"], [194, 3, 1, "", "elementwise_inline_asm"]], "jax.experimental.pallas.triton.CompilerParams": [[183, 2, 1, "", "__init__"], [183, 6, 1, "", "num_stages"], [183, 6, 1, "", "num_warps"]], "jax.experimental.pjit": [[1411, 3, 1, "", "pjit"]], "jax.experimental.serialize_executable": [[196, 3, 1, "", "deserialize_and_load"], [197, 3, 1, "", "serialize"]], "jax.experimental.shard_map": [[198, 3, 1, "", "shard_map"]], "jax.experimental.sparse": [[199, 0, 1, "", "BCOO"], [200, 0, 1, "", "BCSR"], [201, 0, 1, "", "COO"], [202, 0, 1, "", "CSC"], [203, 0, 1, "", "CSR"], [204, 0, 1, "", "JAXSparse"], [205, 3, 1, "", "bcoo_broadcast_in_dim"], [206, 3, 1, "", "bcoo_concatenate"], [207, 3, 1, "", "bcoo_dot_general"], [208, 3, 1, "", "bcoo_dot_general_sampled"], [209, 3, 1, "", "bcoo_dynamic_slice"], [210, 3, 1, "", "bcoo_extract"], [211, 3, 1, "", "bcoo_fromdense"], [212, 3, 1, "", "bcoo_gather"], [213, 3, 1, "", "bcoo_multiply_dense"], [214, 3, 1, "", "bcoo_multiply_sparse"], [215, 3, 1, "", "bcoo_reduce_sum"], [216, 3, 1, "", "bcoo_reshape"], [217, 3, 1, "", "bcoo_slice"], [218, 3, 1, "", "bcoo_sort_indices"], [219, 3, 1, "", "bcoo_squeeze"], [220, 3, 1, "", "bcoo_sum_duplicates"], [221, 3, 1, "", "bcoo_todense"], [222, 3, 1, "", "bcoo_transpose"], [223, 3, 1, "", "bcoo_update_layout"], [224, 3, 1, "", "bcsr_dot_general"], [225, 3, 1, "", "bcsr_extract"], [226, 3, 1, "", "bcsr_fromdense"], [227, 3, 1, "", "bcsr_todense"], [228, 3, 1, "", "coo_fromdense"], [229, 3, 1, "", "coo_matmat"], [230, 3, 1, "", "coo_matvec"], [231, 3, 1, "", "coo_todense"], [232, 3, 1, "", "csr_fromdense"], [233, 3, 1, "", "csr_matmat"], [234, 3, 1, "", "csr_matvec"], [235, 3, 1, "", "csr_todense"], [236, 3, 1, "", "empty"], [237, 3, 1, "", "eye"], [238, 3, 1, "", "grad"], [1414, 5, 0, "-", "linalg"], [241, 3, 1, "", "random_bcoo"], [242, 3, 1, "", "sparsify"], [243, 3, 1, "", "todense"], [244, 3, 1, "", "value_and_grad"]], "jax.experimental.sparse.BCOO": [[199, 2, 1, "", "__init__"], [199, 6, 1, "", "data"], [199, 6, 1, "", "indices"]], "jax.experimental.sparse.BCSR": [[200, 2, 1, "", "__init__"]], "jax.experimental.sparse.COO": [[201, 2, 1, "", "__init__"]], "jax.experimental.sparse.CSC": [[202, 2, 1, "", "__init__"]], "jax.experimental.sparse.CSR": [[203, 2, 1, "", "__init__"]], "jax.experimental.sparse.JAXSparse": [[204, 2, 1, "", "__init__"]], "jax.experimental.sparse.linalg": [[239, 3, 1, "", "lobpcg_standard"], [240, 3, 1, "", "spsolve"]], "jax.export": [[1415, 0, 1, "", "DisabledSafetyCheck"], [1415, 0, 1, "", "Exported"], [245, 0, 1, "", "SymbolicScope"], [246, 3, 1, "", "default_export_platform"], [247, 3, 1, "", "deserialize"], [248, 3, 1, "", "export"], [249, 3, 1, "", "is_symbolic_dim"], [250, 4, 1, "", "maximum_supported_calling_convention_version"], [251, 4, 1, "", "minimum_supported_calling_convention_version"], [252, 3, 1, "", "register_namedtuple_serialization"], [253, 3, 1, "", "register_pytree_node_serialization"], [254, 3, 1, "", "symbolic_args_specs"], [255, 3, 1, "", "symbolic_shape"]], "jax.export.DisabledSafetyCheck": [[1415, 2, 1, "", "custom_call"], [1415, 2, 1, "", "is_custom_call"], [1415, 2, 1, "", "platform"]], "jax.export.Exported": [[1415, 6, 1, "", "_get_vjp"], [1415, 2, 1, "", "call"], [1415, 6, 1, "", "calling_convention_version"], [1415, 6, 1, "", "disabled_safety_checks"], [1415, 6, 1, "", "fun_name"], [1415, 2, 1, "", "has_vjp"], [1415, 6, 1, "", "in_avals"], [1415, 6, 1, "", "in_shardings_hlo"], [1415, 2, 1, "", "in_shardings_jax"], [1415, 6, 1, "", "in_tree"], [1415, 2, 1, "", "mlir_module"], [1415, 6, 1, "", "mlir_module_serialized"], [1415, 6, 1, "", "module_kept_var_idx"], [1415, 6, 1, "", "nr_devices"], [1415, 6, 1, "", "ordered_effects"], [1415, 6, 1, "", "out_avals"], [1415, 6, 1, "", "out_shardings_hlo"], [1415, 2, 1, "", "out_shardings_jax"], [1415, 6, 1, "", "out_tree"], [1415, 6, 1, "", "platforms"], [1415, 2, 1, "", "serialize"], [1415, 6, 1, "", "unordered_effects"], [1415, 6, 1, "", "uses_global_constants"], [1415, 2, 1, "", "vjp"]], "jax.export.SymbolicScope": [[245, 2, 1, "", "__init__"]], "jax.export.jax.export": [[1415, 4, 1, "", "maximum_supported_serialization_version"], [1415, 4, 1, "", "minimum_supported_serialization_version"]], "jax.extend": [[1417, 5, 0, "-", "core"], [1418, 5, 0, "-", "linear_util"], [1419, 5, 0, "-", "mlir"], [1420, 5, 0, "-", "random"]], "jax.extend.core": [[256, 0, 1, "", "ClosedJaxpr"], [257, 0, 1, "", "Jaxpr"], [258, 0, 1, "", "JaxprEqn"], [259, 0, 1, "", "Literal"], [260, 0, 1, "", "Primitive"], [261, 0, 1, "", "Token"], [262, 0, 1, "", "Var"], [263, 4, 1, "", "array_types"], [264, 4, 1, "", "jaxpr_as_fun"], [265, 5, 0, "-", "primitives"]], "jax.extend.core.ClosedJaxpr": [[256, 2, 1, "", "__init__"]], "jax.extend.core.Jaxpr": [[257, 2, 1, "", "__init__"]], "jax.extend.core.JaxprEqn": [[258, 2, 1, "", "__init__"]], "jax.extend.core.Literal": [[259, 2, 1, "", "__init__"]], "jax.extend.core.Primitive": [[260, 2, 1, "", "__init__"]], "jax.extend.core.Token": [[261, 2, 1, "", "__init__"]], "jax.extend.core.Var": [[262, 2, 1, "", "__init__"]], "jax.extend.linear_util": [[266, 7, 1, "", "StoreException"], [267, 0, 1, "", "WrappedFun"], [268, 3, 1, "", "cache"], [269, 3, 1, "", "merge_linear_aux"], [270, 4, 1, "", "transformation"], [271, 4, 1, "", "transformation_with_aux"], [272, 3, 1, "", "wrap_init"]], "jax.extend.linear_util.WrappedFun": [[267, 2, 1, "", "__init__"]], "jax.extend.mlir": [[273, 5, 0, "-", "dialects"], [274, 5, 0, "-", "ir"], [275, 5, 0, "-", "passmanager"]], "jax.extend.random": [[276, 3, 1, "", "define_prng_impl"], [277, 4, 1, "", "rbg_prng_impl"], [278, 3, 1, "", "seed_with_impl"], [279, 4, 1, "", "threefry2x32_p"], [280, 3, 1, "", "threefry_2x32"], [281, 4, 1, "", "threefry_prng_impl"], [282, 4, 1, "", "unsafe_rbg_prng_impl"]], "jax.ffi": [[283, 3, 1, "", "ffi_call"], [284, 3, 1, "", "ffi_lowering"], [285, 3, 1, "", "pycapsule"], [286, 3, 1, "", "register_ffi_target"], [287, 3, 1, "", "register_ffi_type_id"]], "jax.flatten_util": [[288, 3, 1, "", "ravel_pytree"]], "jax.image": [[1423, 0, 1, "", "ResizeMethod"], [291, 3, 1, "", "resize"], [292, 3, 1, "", "scale_and_translate"]], "jax.lax": [[1424, 0, 1, "", "ConvDimensionNumbers"], [1424, 6, 1, "", "ConvGeneralDilatedDimensionNumbers"], [1424, 0, 1, "", "DotAlgorithm"], [1424, 0, 1, "", "DotAlgorithmPreset"], [1424, 0, 1, "", "FftType"], [1424, 0, 1, "", "GatherDimensionNumbers"], [1424, 0, 1, "", "GatherScatterMode"], [1424, 0, 1, "", "Precision"], [1424, 6, 1, "", "PrecisionLike"], [1424, 0, 1, "", "RandomAlgorithm"], [1424, 0, 1, "", "RoundingMethod"], [1424, 0, 1, "", "ScatterDimensionNumbers"], [298, 3, 1, "", "abs"], [299, 3, 1, "", "acos"], [300, 3, 1, "", "acosh"], [301, 3, 1, "", "add"], [302, 3, 1, "", "after_all"], [303, 3, 1, "", "all_gather"], [304, 3, 1, "", "all_to_all"], [305, 3, 1, "", "approx_max_k"], [306, 3, 1, "", "approx_min_k"], [307, 3, 1, "", "argmax"], [308, 3, 1, "", "argmin"], [309, 3, 1, "", "asin"], [310, 3, 1, "", "asinh"], [311, 3, 1, "", "associative_scan"], [312, 3, 1, "", "atan"], [313, 3, 1, "", "atan2"], [314, 3, 1, "", "atanh"], [315, 3, 1, "", "axis_index"], [316, 3, 1, "", "axis_size"], [317, 3, 1, "", "batch_matmul"], [318, 3, 1, "", "bessel_i0e"], [319, 3, 1, "", "bessel_i1e"], [320, 3, 1, "", "betainc"], [321, 3, 1, "", "bitcast_convert_type"], [322, 3, 1, "", "bitwise_and"], [323, 3, 1, "", "bitwise_not"], [324, 3, 1, "", "bitwise_or"], [325, 3, 1, "", "bitwise_xor"], [326, 3, 1, "", "broadcast"], [327, 3, 1, "", "broadcast_in_dim"], [328, 3, 1, "", "broadcast_shapes"], [329, 3, 1, "", "broadcast_to_rank"], [330, 3, 1, "", "broadcasted_iota"], [331, 3, 1, "", "cbrt"], [332, 3, 1, "", "ceil"], [333, 3, 1, "", "clamp"], [334, 3, 1, "", "clz"], [335, 3, 1, "", "collapse"], [336, 3, 1, "", "complex"], [337, 3, 1, "", "composite"], [338, 3, 1, "", "concatenate"], [339, 3, 1, "", "cond"], [340, 3, 1, "", "conj"], [341, 3, 1, "", "conv"], [342, 3, 1, "", "conv_dimension_numbers"], [343, 3, 1, "", "conv_general_dilated"], [344, 3, 1, "", "conv_general_dilated_local"], [345, 3, 1, "", "conv_general_dilated_patches"], [346, 3, 1, "", "conv_transpose"], [347, 3, 1, "", "conv_with_general_padding"], [348, 3, 1, "", "convert_element_type"], [349, 3, 1, "", "cos"], [350, 3, 1, "", "cosh"], [351, 3, 1, "", "cumlogsumexp"], [352, 3, 1, "", "cummax"], [353, 3, 1, "", "cummin"], [354, 3, 1, "", "cumprod"], [355, 3, 1, "", "cumsum"], [356, 3, 1, "", "custom_linear_solve"], [357, 3, 1, "", "custom_root"], [358, 3, 1, "", "digamma"], [359, 3, 1, "", "div"], [360, 3, 1, "", "dot"], [361, 3, 1, "", "dot_general"], [362, 3, 1, "", "dynamic_index_in_dim"], [363, 3, 1, "", "dynamic_slice"], [364, 3, 1, "", "dynamic_slice_in_dim"], [365, 3, 1, "", "dynamic_update_index_in_dim"], [366, 3, 1, "", "dynamic_update_slice"], [367, 3, 1, "", "dynamic_update_slice_in_dim"], [368, 3, 1, "", "eq"], [369, 3, 1, "", "erf"], [370, 3, 1, "", "erf_inv"], [371, 3, 1, "", "erfc"], [372, 3, 1, "", "exp"], [373, 3, 1, "", "exp2"], [374, 3, 1, "", "expand_dims"], [375, 3, 1, "", "expm1"], [376, 3, 1, "", "fft"], [377, 3, 1, "", "floor"], [378, 3, 1, "", "fori_loop"], [379, 3, 1, "", "full"], [380, 3, 1, "", "full_like"], [381, 3, 1, "", "gather"], [382, 3, 1, "", "ge"], [383, 3, 1, "", "gt"], [384, 3, 1, "", "igamma"], [385, 3, 1, "", "igammac"], [386, 3, 1, "", "imag"], [387, 3, 1, "", "index_in_dim"], [388, 3, 1, "", "index_take"], [389, 3, 1, "", "integer_pow"], [390, 3, 1, "", "iota"], [391, 3, 1, "", "is_finite"], [392, 3, 1, "", "le"], [393, 3, 1, "", "lgamma"], [1424, 5, 0, "-", "linalg"], [411, 3, 1, "", "log"], [412, 3, 1, "", "log1p"], [413, 3, 1, "", "logistic"], [414, 3, 1, "", "lt"], [415, 3, 1, "", "map"], [416, 3, 1, "", "max"], [417, 3, 1, "", "min"], [418, 3, 1, "", "mul"], [419, 3, 1, "", "ne"], [420, 3, 1, "", "neg"], [421, 3, 1, "", "nextafter"], [422, 3, 1, "", "optimization_barrier"], [423, 3, 1, "", "pad"], [424, 3, 1, "", "platform_dependent"], [425, 3, 1, "", "pmax"], [426, 3, 1, "", "pmean"], [427, 3, 1, "", "pmin"], [428, 3, 1, "", "polygamma"], [429, 3, 1, "", "population_count"], [430, 3, 1, "", "pow"], [431, 3, 1, "", "ppermute"], [432, 3, 1, "", "precv"], [433, 3, 1, "", "psend"], [434, 3, 1, "", "pshuffle"], [435, 3, 1, "", "psum"], [436, 3, 1, "", "psum_scatter"], [437, 3, 1, "", "pswapaxes"], [438, 3, 1, "", "random_gamma_grad"], [439, 3, 1, "", "real"], [440, 3, 1, "", "reciprocal"], [441, 3, 1, "", "reduce"], [442, 3, 1, "", "reduce_and"], [443, 3, 1, "", "reduce_max"], [444, 3, 1, "", "reduce_min"], [445, 3, 1, "", "reduce_or"], [446, 3, 1, "", "reduce_precision"], [447, 3, 1, "", "reduce_prod"], [448, 3, 1, "", "reduce_sum"], [449, 3, 1, "", "reduce_window"], [450, 3, 1, "", "reduce_xor"], [451, 3, 1, "", "rem"], [452, 3, 1, "", "reshape"], [453, 3, 1, "", "rev"], [454, 3, 1, "", "rng_bit_generator"], [455, 3, 1, "", "rng_uniform"], [456, 3, 1, "", "round"], [457, 3, 1, "", "rsqrt"], [458, 3, 1, "", "scan"], [459, 3, 1, "", "scatter"], [460, 3, 1, "", "scatter_add"], [461, 3, 1, "", "scatter_apply"], [462, 3, 1, "", "scatter_max"], [463, 3, 1, "", "scatter_min"], [464, 3, 1, "", "scatter_mul"], [465, 3, 1, "", "select"], [466, 3, 1, "", "select_n"], [467, 3, 1, "", "shift_left"], [468, 3, 1, "", "shift_right_arithmetic"], [469, 3, 1, "", "shift_right_logical"], [470, 3, 1, "", "sign"], [471, 3, 1, "", "sin"], [472, 3, 1, "", "sinh"], [473, 3, 1, "", "slice"], [474, 3, 1, "", "slice_in_dim"], [475, 3, 1, "", "sort"], [476, 3, 1, "", "sort_key_val"], [477, 3, 1, "", "split"], [478, 3, 1, "", "sqrt"], [479, 3, 1, "", "square"], [480, 3, 1, "", "squeeze"], [481, 3, 1, "", "stop_gradient"], [482, 3, 1, "", "sub"], [483, 3, 1, "", "switch"], [484, 3, 1, "", "tan"], [485, 3, 1, "", "tanh"], [486, 3, 1, "", "top_k"], [487, 3, 1, "", "transpose"], [488, 3, 1, "", "while_loop"], [489, 3, 1, "", "with_sharding_constraint"], [490, 3, 1, "", "zeros_like_array"], [491, 3, 1, "", "zeta"]], "jax.lax.DotAlgorithmPreset": [[1424, 6, 1, "", "ANY_F8_ANY_F8_ANY"], [1424, 6, 1, "", "ANY_F8_ANY_F8_ANY_FAST_ACCUM"], [1424, 6, 1, "", "ANY_F8_ANY_F8_F32"], [1424, 6, 1, "", "ANY_F8_ANY_F8_F32_FAST_ACCUM"], [1424, 6, 1, "", "BF16_BF16_BF16"], [1424, 6, 1, "", "BF16_BF16_F32"], [1424, 6, 1, "", "BF16_BF16_F32_X3"], [1424, 6, 1, "", "BF16_BF16_F32_X6"], [1424, 6, 1, "", "BF16_BF16_F32_X9"], [1424, 6, 1, "", "DEFAULT"], [1424, 6, 1, "", "F16_F16_F16"], [1424, 6, 1, "", "F16_F16_F32"], [1424, 6, 1, "", "F32_F32_F32"], [1424, 6, 1, "", "F64_F64_F64"], [1424, 6, 1, "", "TF32_TF32_F32"], [1424, 6, 1, "", "TF32_TF32_F32_X3"], [1424, 1, 1, "", "accumulation_type"], [1424, 1, 1, "", "supported_lhs_types"], [1424, 2, 1, "", "supported_output_types"], [1424, 1, 1, "", "supported_rhs_types"]], "jax.lax.FftType": [[1424, 6, 1, "", "FFT"], [1424, 6, 1, "", "IFFT"], [1424, 6, 1, "", "IRFFT"], [1424, 6, 1, "", "RFFT"]], "jax.lax.RandomAlgorithm": [[1424, 6, 1, "", "RNG_DEFAULT"], [1424, 6, 1, "", "RNG_PHILOX"], [1424, 6, 1, "", "RNG_THREE_FRY"]], "jax.lax.RoundingMethod": [[1424, 6, 1, "", "AWAY_FROM_ZERO"], [1424, 6, 1, "", "TO_NEAREST_EVEN"]], "jax.lax.linalg": [[394, 0, 1, "", "SvdAlgorithm"], [395, 3, 1, "", "cholesky"], [396, 3, 1, "", "cholesky_update"], [397, 3, 1, "", "eig"], [398, 3, 1, "", "eigh"], [399, 3, 1, "", "hessenberg"], [400, 3, 1, "", "householder_product"], [401, 3, 1, "", "lu"], [402, 3, 1, "", "lu_pivots_to_permutation"], [403, 3, 1, "", "qdwh"], [404, 3, 1, "", "qr"], [405, 3, 1, "", "schur"], [406, 3, 1, "", "svd"], [407, 3, 1, "", "symmetric_product"], [408, 3, 1, "", "triangular_solve"], [409, 3, 1, "", "tridiagonal"], [410, 3, 1, "", "tridiagonal_solve"]], "jax.lax.linalg.SvdAlgorithm": [[394, 2, 1, "", "__init__"]], "jax.lib.xla_bridge": [[492, 3, 1, "", "get_backend"], [493, 3, 1, "", "get_compile_options"]], "jax.nn": [[507, 3, 1, "", "celu"], [508, 3, 1, "", "dot_product_attention"], [509, 3, 1, "", "elu"], [510, 3, 1, "", "gelu"], [511, 3, 1, "", "get_scaled_dot_general_config"], [512, 3, 1, "", "glu"], [513, 3, 1, "", "hard_sigmoid"], [514, 3, 1, "", "hard_silu"], [515, 3, 1, "", "hard_swish"], [516, 3, 1, "", "hard_tanh"], [517, 3, 1, "", "identity"], [1427, 5, 0, "-", "initializers"], [533, 3, 1, "", "leaky_relu"], [534, 4, 1, "", "log1mexp"], [535, 3, 1, "", "log_sigmoid"], [536, 3, 1, "", "log_softmax"], [537, 3, 1, "", "logmeanexp"], [538, 3, 1, "", "logsumexp"], [539, 3, 1, "", "mish"], [540, 3, 1, "", "one_hot"], [541, 4, 1, "", "relu"], [542, 4, 1, "", "relu6"], [543, 3, 1, "", "scaled_dot_general"], [544, 3, 1, "", "scaled_matmul"], [545, 3, 1, "", "selu"], [546, 3, 1, "", "sigmoid"], [547, 3, 1, "", "silu"], [548, 3, 1, "", "soft_sign"], [549, 3, 1, "", "softmax"], [550, 3, 1, "", "softplus"], [551, 3, 1, "", "sparse_plus"], [552, 3, 1, "", "sparse_sigmoid"], [553, 3, 1, "", "squareplus"], [554, 3, 1, "", "standardize"], [555, 3, 1, "", "swish"]], "jax.nn.initializers": [[518, 3, 1, "", "constant"], [519, 3, 1, "", "delta_orthogonal"], [520, 3, 1, "", "glorot_normal"], [521, 3, 1, "", "glorot_uniform"], [522, 3, 1, "", "he_normal"], [523, 3, 1, "", "he_uniform"], [524, 3, 1, "", "lecun_normal"], [525, 3, 1, "", "lecun_uniform"], [526, 3, 1, "", "normal"], [527, 3, 1, "", "ones"], [528, 3, 1, "", "orthogonal"], [529, 3, 1, "", "truncated_normal"], [530, 3, 1, "", "uniform"], [531, 3, 1, "", "variance_scaling"], [532, 3, 1, "", "zeros"]], "jax.numpy": [[557, 7, 1, "", "ComplexWarning"], [558, 3, 1, "", "abs"], [559, 3, 1, "", "absolute"], [560, 3, 1, "", "acos"], [561, 3, 1, "", "acosh"], [562, 4, 1, "", "add"], [563, 3, 1, "", "all"], [564, 3, 1, "", "allclose"], [565, 3, 1, "", "amax"], [566, 3, 1, "", "amin"], [567, 3, 1, "", "angle"], [568, 3, 1, "", "any"], [569, 3, 1, "", "append"], [570, 3, 1, "", "apply_along_axis"], [571, 3, 1, "", "apply_over_axes"], [572, 3, 1, "", "arange"], [573, 3, 1, "", "arccos"], [574, 3, 1, "", "arccosh"], [575, 3, 1, "", "arcsin"], [576, 3, 1, "", "arcsinh"], [577, 3, 1, "", "arctan"], [578, 3, 1, "", "arctan2"], [579, 3, 1, "", "arctanh"], [580, 3, 1, "", "argmax"], [581, 3, 1, "", "argmin"], [582, 3, 1, "", "argpartition"], [583, 3, 1, "", "argsort"], [584, 3, 1, "", "argwhere"], [585, 3, 1, "", "around"], [586, 3, 1, "", "array"], [587, 3, 1, "", "array_equal"], [588, 3, 1, "", "array_equiv"], [589, 3, 1, "", "array_repr"], [590, 3, 1, "", "array_split"], [591, 3, 1, "", "array_str"], [592, 3, 1, "", "asarray"], [593, 3, 1, "", "asin"], [594, 3, 1, "", "asinh"], [595, 3, 1, "", "astype"], [596, 3, 1, "", "atan"], [597, 3, 1, "", "atan2"], [598, 3, 1, "", "atanh"], [599, 3, 1, "", "atleast_1d"], [600, 3, 1, "", "atleast_2d"], [601, 3, 1, "", "atleast_3d"], [602, 3, 1, "", "average"], [603, 3, 1, "", "bartlett"], [604, 3, 1, "", "bincount"], [605, 4, 1, "", "bitwise_and"], [606, 3, 1, "", "bitwise_count"], [607, 3, 1, "", "bitwise_invert"], [608, 3, 1, "", "bitwise_left_shift"], [609, 3, 1, "", "bitwise_not"], [610, 4, 1, "", "bitwise_or"], [611, 3, 1, "", "bitwise_right_shift"], [612, 4, 1, "", "bitwise_xor"], [613, 3, 1, "", "blackman"], [614, 3, 1, "", "block"], [615, 6, 1, "", "bool_"], [616, 3, 1, "", "broadcast_arrays"], [617, 3, 1, "", "broadcast_shapes"], [618, 3, 1, "", "broadcast_to"], [619, 4, 1, "", "c_"], [620, 3, 1, "", "can_cast"], [621, 3, 1, "", "cbrt"], [622, 6, 1, "", "cdouble"], [623, 3, 1, "", "ceil"], [624, 0, 1, "", "character"], [625, 3, 1, "", "choose"], [626, 3, 1, "", "clip"], [627, 3, 1, "", "column_stack"], [628, 0, 1, "", "complex128"], [629, 0, 1, "", "complex64"], [630, 6, 1, "", "complex_"], [631, 0, 1, "", "complexfloating"], [632, 3, 1, "", "compress"], [633, 3, 1, "", "concat"], [634, 3, 1, "", "concatenate"], [635, 3, 1, "", "conj"], [636, 3, 1, "", "conjugate"], [637, 3, 1, "", "convolve"], [638, 3, 1, "", "copy"], [639, 3, 1, "", "copysign"], [640, 3, 1, "", "corrcoef"], [641, 3, 1, "", "correlate"], [642, 3, 1, "", "cos"], [643, 3, 1, "", "cosh"], [644, 3, 1, "", "count_nonzero"], [645, 3, 1, "", "cov"], [646, 3, 1, "", "cross"], [647, 6, 1, "", "csingle"], [648, 3, 1, "", "cumprod"], [649, 3, 1, "", "cumsum"], [650, 3, 1, "", "cumulative_prod"], [651, 3, 1, "", "cumulative_sum"], [652, 3, 1, "", "deg2rad"], [653, 3, 1, "", "degrees"], [654, 3, 1, "", "delete"], [655, 3, 1, "", "diag"], [656, 3, 1, "", "diag_indices"], [657, 3, 1, "", "diag_indices_from"], [658, 3, 1, "", "diagflat"], [659, 3, 1, "", "diagonal"], [660, 3, 1, "", "diff"], [661, 3, 1, "", "digitize"], [662, 3, 1, "", "divide"], [663, 3, 1, "", "divmod"], [664, 3, 1, "", "dot"], [665, 6, 1, "", "double"], [666, 3, 1, "", "dsplit"], [667, 3, 1, "", "dstack"], [668, 0, 1, "", "dtype"], [669, 3, 1, "", "ediff1d"], [670, 3, 1, "", "einsum"], [671, 3, 1, "", "einsum_path"], [672, 3, 1, "", "empty"], [673, 3, 1, "", "empty_like"], [674, 3, 1, "", "equal"], [675, 3, 1, "", "exp"], [676, 3, 1, "", "exp2"], [677, 3, 1, "", "expand_dims"], [678, 3, 1, "", "expm1"], [679, 3, 1, "", "extract"], [680, 3, 1, "", "eye"], [681, 3, 1, "", "fabs"], [1428, 5, 0, "-", "fft"], [700, 3, 1, "", "fill_diagonal"], [701, 0, 1, "", "finfo"], [702, 3, 1, "", "fix"], [703, 3, 1, "", "flatnonzero"], [704, 0, 1, "", "flexible"], [705, 3, 1, "", "flip"], [706, 3, 1, "", "fliplr"], [707, 3, 1, "", "flipud"], [708, 0, 1, "", "float16"], [709, 0, 1, "", "float32"], [710, 0, 1, "", "float64"], [711, 6, 1, "", "float_"], [712, 3, 1, "", "float_power"], [713, 0, 1, "", "floating"], [714, 3, 1, "", "floor"], [715, 3, 1, "", "floor_divide"], [716, 3, 1, "", "fmax"], [717, 3, 1, "", "fmin"], [718, 3, 1, "", "fmod"], [719, 3, 1, "", "frexp"], [720, 3, 1, "", "from_dlpack"], [721, 3, 1, "", "frombuffer"], [722, 3, 1, "", "fromfile"], [723, 3, 1, "", "fromfunction"], [724, 3, 1, "", "fromiter"], [725, 3, 1, "", "frompyfunc"], [726, 3, 1, "", "fromstring"], [727, 3, 1, "", "full"], [728, 3, 1, "", "full_like"], [729, 3, 1, "", "gcd"], [730, 0, 1, "", "generic"], [731, 3, 1, "", "geomspace"], [732, 3, 1, "", "get_printoptions"], [733, 3, 1, "", "gradient"], [734, 3, 1, "", "greater"], [735, 3, 1, "", "greater_equal"], [736, 3, 1, "", "hamming"], [737, 3, 1, "", "hanning"], [738, 3, 1, "", "heaviside"], [739, 3, 1, "", "histogram"], [740, 3, 1, "", "histogram2d"], [741, 3, 1, "", "histogram_bin_edges"], [742, 3, 1, "", "histogramdd"], [743, 3, 1, "", "hsplit"], [744, 3, 1, "", "hstack"], [745, 3, 1, "", "hypot"], [746, 3, 1, "", "i0"], [747, 3, 1, "", "identity"], [748, 0, 1, "", "iinfo"], [749, 3, 1, "", "imag"], [750, 4, 1, "", "index_exp"], [751, 3, 1, "", "indices"], [752, 0, 1, "", "inexact"], [753, 3, 1, "", "inner"], [754, 3, 1, "", "insert"], [755, 0, 1, "", "int16"], [756, 0, 1, "", "int32"], [757, 0, 1, "", "int64"], [758, 0, 1, "", "int8"], [759, 6, 1, "", "int_"], [760, 0, 1, "", "integer"], [761, 3, 1, "", "interp"], [762, 3, 1, "", "intersect1d"], [763, 3, 1, "", "invert"], [764, 3, 1, "", "isclose"], [765, 3, 1, "", "iscomplex"], [766, 3, 1, "", "iscomplexobj"], [767, 3, 1, "", "isdtype"], [768, 3, 1, "", "isfinite"], [769, 3, 1, "", "isin"], [770, 3, 1, "", "isinf"], [771, 3, 1, "", "isnan"], [772, 3, 1, "", "isneginf"], [773, 3, 1, "", "isposinf"], [774, 3, 1, "", "isreal"], [775, 3, 1, "", "isrealobj"], [776, 3, 1, "", "isscalar"], [777, 3, 1, "", "issubdtype"], [778, 3, 1, "", "iterable"], [779, 3, 1, "", "ix_"], [780, 3, 1, "", "kaiser"], [781, 3, 1, "", "kron"], [782, 3, 1, "", "lcm"], [783, 3, 1, "", "ldexp"], [784, 3, 1, "", "left_shift"], [785, 3, 1, "", "less"], [786, 3, 1, "", "less_equal"], [787, 3, 1, "", "lexsort"], [1428, 5, 0, "-", "linalg"], [819, 3, 1, "", "linspace"], [820, 3, 1, "", "load"], [821, 3, 1, "", "log"], [822, 3, 1, "", "log10"], [823, 3, 1, "", "log1p"], [824, 3, 1, "", "log2"], [825, 4, 1, "", "logaddexp"], [826, 4, 1, "", "logaddexp2"], [827, 4, 1, "", "logical_and"], [828, 3, 1, "", "logical_not"], [829, 4, 1, "", "logical_or"], [830, 4, 1, "", "logical_xor"], [831, 3, 1, "", "logspace"], [832, 3, 1, "", "mask_indices"], [833, 3, 1, "", "matmul"], [834, 3, 1, "", "matrix_transpose"], [835, 3, 1, "", "matvec"], [836, 3, 1, "", "max"], [837, 4, 1, "", "maximum"], [838, 3, 1, "", "mean"], [839, 3, 1, "", "median"], [840, 3, 1, "", "meshgrid"], [841, 4, 1, "", "mgrid"], [842, 3, 1, "", "min"], [843, 4, 1, "", "minimum"], [844, 3, 1, "", "mod"], [845, 3, 1, "", "modf"], [846, 3, 1, "", "moveaxis"], [847, 4, 1, "", "multiply"], [848, 3, 1, "", "nan_to_num"], [849, 3, 1, "", "nanargmax"], [850, 3, 1, "", "nanargmin"], [851, 3, 1, "", "nancumprod"], [852, 3, 1, "", "nancumsum"], [853, 3, 1, "", "nanmax"], [854, 3, 1, "", "nanmean"], [855, 3, 1, "", "nanmedian"], [856, 3, 1, "", "nanmin"], [857, 3, 1, "", "nanpercentile"], [858, 3, 1, "", "nanprod"], [859, 3, 1, "", "nanquantile"], [860, 3, 1, "", "nanstd"], [861, 3, 1, "", "nansum"], [862, 3, 1, "", "nanvar"], [863, 6, 1, "", "ndarray"], [865, 3, 1, "", "ndim"], [866, 4, 1, "", "negative"], [867, 3, 1, "", "nextafter"], [868, 3, 1, "", "nonzero"], [869, 3, 1, "", "not_equal"], [870, 0, 1, "", "number"], [871, 0, 1, "", "object_"], [872, 4, 1, "", "ogrid"], [873, 3, 1, "", "ones"], [874, 3, 1, "", "ones_like"], [875, 3, 1, "", "outer"], [876, 3, 1, "", "packbits"], [877, 3, 1, "", "pad"], [878, 3, 1, "", "partition"], [879, 3, 1, "", "percentile"], [880, 3, 1, "", "permute_dims"], [881, 3, 1, "", "piecewise"], [882, 3, 1, "", "place"], [883, 3, 1, "", "poly"], [884, 3, 1, "", "polyadd"], [885, 3, 1, "", "polyder"], [886, 3, 1, "", "polydiv"], [887, 3, 1, "", "polyfit"], [888, 3, 1, "", "polyint"], [889, 3, 1, "", "polymul"], [890, 3, 1, "", "polysub"], [891, 3, 1, "", "polyval"], [892, 3, 1, "", "positive"], [893, 3, 1, "", "pow"], [894, 3, 1, "", "power"], [895, 3, 1, "", "printoptions"], [896, 3, 1, "", "prod"], [897, 3, 1, "", "promote_types"], [898, 3, 1, "", "ptp"], [899, 3, 1, "", "put"], [900, 3, 1, "", "put_along_axis"], [901, 3, 1, "", "quantile"], [902, 4, 1, "", "r_"], [903, 3, 1, "", "rad2deg"], [904, 3, 1, "", "radians"], [905, 3, 1, "", "ravel"], [906, 3, 1, "", "ravel_multi_index"], [907, 3, 1, "", "real"], [908, 3, 1, "", "reciprocal"], [909, 3, 1, "", "remainder"], [910, 3, 1, "", "repeat"], [911, 3, 1, "", "reshape"], [912, 3, 1, "", "resize"], [913, 3, 1, "", "result_type"], [914, 3, 1, "", "right_shift"], [915, 3, 1, "", "rint"], [916, 3, 1, "", "roll"], [917, 3, 1, "", "rollaxis"], [918, 3, 1, "", "roots"], [919, 3, 1, "", "rot90"], [920, 3, 1, "", "round"], [921, 4, 1, "", "s_"], [922, 3, 1, "", "save"], [923, 3, 1, "", "savez"], [924, 3, 1, "", "searchsorted"], [925, 3, 1, "", "select"], [926, 3, 1, "", "set_printoptions"], [927, 3, 1, "", "setdiff1d"], [928, 3, 1, "", "setxor1d"], [929, 3, 1, "", "shape"], [930, 3, 1, "", "sign"], [931, 3, 1, "", "signbit"], [932, 0, 1, "", "signedinteger"], [933, 3, 1, "", "sin"], [934, 3, 1, "", "sinc"], [935, 6, 1, "", "single"], [936, 3, 1, "", "sinh"], [937, 3, 1, "", "size"], [938, 3, 1, "", "sort"], [939, 3, 1, "", "sort_complex"], [940, 3, 1, "", "spacing"], [941, 3, 1, "", "split"], [942, 3, 1, "", "sqrt"], [943, 3, 1, "", "square"], [944, 3, 1, "", "squeeze"], [945, 3, 1, "", "stack"], [946, 3, 1, "", "std"], [947, 4, 1, "", "subtract"], [948, 3, 1, "", "sum"], [949, 3, 1, "", "swapaxes"], [950, 3, 1, "", "take"], [951, 3, 1, "", "take_along_axis"], [952, 3, 1, "", "tan"], [953, 3, 1, "", "tanh"], [954, 3, 1, "", "tensordot"], [955, 3, 1, "", "tile"], [956, 3, 1, "", "trace"], [957, 3, 1, "", "transpose"], [958, 3, 1, "", "trapezoid"], [959, 3, 1, "", "tri"], [960, 3, 1, "", "tril"], [961, 3, 1, "", "tril_indices"], [962, 3, 1, "", "tril_indices_from"], [963, 3, 1, "", "trim_zeros"], [964, 3, 1, "", "triu"], [965, 3, 1, "", "triu_indices"], [966, 3, 1, "", "triu_indices_from"], [967, 3, 1, "", "true_divide"], [968, 3, 1, "", "trunc"], [969, 0, 1, "", "ufunc"], [970, 6, 1, "", "uint"], [971, 0, 1, "", "uint16"], [972, 0, 1, "", "uint32"], [973, 0, 1, "", "uint64"], [974, 0, 1, "", "uint8"], [975, 3, 1, "", "union1d"], [976, 3, 1, "", "unique"], [977, 3, 1, "", "unique_all"], [978, 3, 1, "", "unique_counts"], [979, 3, 1, "", "unique_inverse"], [980, 3, 1, "", "unique_values"], [981, 3, 1, "", "unpackbits"], [982, 3, 1, "", "unravel_index"], [983, 0, 1, "", "unsignedinteger"], [984, 3, 1, "", "unstack"], [985, 3, 1, "", "unwrap"], [986, 3, 1, "", "vander"], [987, 3, 1, "", "var"], [988, 3, 1, "", "vdot"], [989, 3, 1, "", "vecdot"], [990, 3, 1, "", "vecmat"], [991, 3, 1, "", "vectorize"], [992, 3, 1, "", "vsplit"], [993, 3, 1, "", "vstack"], [994, 3, 1, "", "where"], [995, 3, 1, "", "zeros"], [996, 3, 1, "", "zeros_like"]], "jax.numpy.character": [[624, 2, 1, "", "__init__"]], "jax.numpy.complex128": [[628, 2, 1, "", "__init__"]], "jax.numpy.complex64": [[629, 2, 1, "", "__init__"]], "jax.numpy.complexfloating": [[631, 2, 1, "", "__init__"]], "jax.numpy.dtype": [[668, 2, 1, "", "__init__"]], "jax.numpy.fft": [[682, 3, 1, "", "fft"], [683, 3, 1, "", "fft2"], [684, 3, 1, "", "fftfreq"], [685, 3, 1, "", "fftn"], [686, 3, 1, "", "fftshift"], [687, 3, 1, "", "hfft"], [688, 3, 1, "", "ifft"], [689, 3, 1, "", "ifft2"], [690, 3, 1, "", "ifftn"], [691, 3, 1, "", "ifftshift"], [692, 3, 1, "", "ihfft"], [693, 3, 1, "", "irfft"], [694, 3, 1, "", "irfft2"], [695, 3, 1, "", "irfftn"], [696, 3, 1, "", "rfft"], [697, 3, 1, "", "rfft2"], [698, 3, 1, "", "rfftfreq"], [699, 3, 1, "", "rfftn"]], "jax.numpy.finfo": [[701, 2, 1, "", "__init__"], [701, 6, 1, "", "bits"], [701, 6, 1, "", "dtype"], [701, 6, 1, "", "eps"], [701, 6, 1, "", "epsneg"], [701, 6, 1, "", "iexp"], [701, 6, 1, "", "machep"], [701, 6, 1, "", "max"], [701, 6, 1, "", "maxexp"], [701, 6, 1, "", "min"], [701, 6, 1, "", "minexp"], [701, 6, 1, "", "negep"], [701, 6, 1, "", "nexp"], [701, 6, 1, "", "nmant"], [701, 6, 1, "", "precision"], [701, 6, 1, "", "resolution"], [701, 6, 1, "", "smallest_normal"], [701, 6, 1, "", "smallest_subnormal"], [701, 6, 1, "", "tiny"]], "jax.numpy.flexible": [[704, 2, 1, "", "__init__"]], "jax.numpy.float16": [[708, 2, 1, "", "__init__"]], "jax.numpy.float32": [[709, 2, 1, "", "__init__"]], "jax.numpy.float64": [[710, 2, 1, "", "__init__"]], "jax.numpy.floating": [[713, 2, 1, "", "__init__"]], "jax.numpy.generic": [[730, 2, 1, "", "__init__"]], "jax.numpy.iinfo": [[748, 2, 1, "", "__init__"]], "jax.numpy.inexact": [[752, 2, 1, "", "__init__"]], "jax.numpy.int16": [[755, 2, 1, "", "__init__"]], "jax.numpy.int32": [[756, 2, 1, "", "__init__"]], "jax.numpy.int64": [[757, 2, 1, "", "__init__"]], "jax.numpy.int8": [[758, 2, 1, "", "__init__"]], "jax.numpy.integer": [[760, 2, 1, "", "__init__"]], "jax.numpy.linalg": [[788, 3, 1, "", "cholesky"], [789, 3, 1, "", "cond"], [790, 3, 1, "", "cross"], [791, 3, 1, "", "det"], [792, 3, 1, "", "diagonal"], [793, 3, 1, "", "eig"], [794, 3, 1, "", "eigh"], [795, 3, 1, "", "eigvals"], [796, 3, 1, "", "eigvalsh"], [797, 3, 1, "", "inv"], [798, 3, 1, "", "lstsq"], [799, 3, 1, "", "matmul"], [800, 3, 1, "", "matrix_norm"], [801, 3, 1, "", "matrix_power"], [802, 3, 1, "", "matrix_rank"], [803, 3, 1, "", "matrix_transpose"], [804, 3, 1, "", "multi_dot"], [805, 3, 1, "", "norm"], [806, 3, 1, "", "outer"], [807, 3, 1, "", "pinv"], [808, 3, 1, "", "qr"], [809, 3, 1, "", "slogdet"], [810, 3, 1, "", "solve"], [811, 3, 1, "", "svd"], [812, 3, 1, "", "svdvals"], [813, 3, 1, "", "tensordot"], [814, 3, 1, "", "tensorinv"], [815, 3, 1, "", "tensorsolve"], [816, 3, 1, "", "trace"], [817, 3, 1, "", "vecdot"], [818, 3, 1, "", "vector_norm"]], "jax.numpy.ndarray": [[864, 1, 1, "", "at"]], "jax.numpy.number": [[870, 2, 1, "", "__init__"]], "jax.numpy.object_": [[871, 2, 1, "", "__init__"]], "jax.numpy.signedinteger": [[932, 2, 1, "", "__init__"]], "jax.numpy.ufunc": [[969, 2, 1, "", "__init__"]], "jax.numpy.uint16": [[971, 2, 1, "", "__init__"]], "jax.numpy.uint32": [[972, 2, 1, "", "__init__"]], "jax.numpy.uint64": [[973, 2, 1, "", "__init__"]], "jax.numpy.uint8": [[974, 2, 1, "", "__init__"]], "jax.numpy.unsignedinteger": [[983, 2, 1, "", "__init__"]], "jax.ops": [[998, 3, 1, "", "segment_max"], [999, 3, 1, "", "segment_min"], [1000, 3, 1, "", "segment_prod"], [1001, 3, 1, "", "segment_sum"]], "jax.profiler": [[1007, 0, 1, "", "StepTraceAnnotation"], [1008, 0, 1, "", "TraceAnnotation"], [1009, 3, 1, "", "annotate_function"], [1010, 3, 1, "", "device_memory_profile"], [1011, 3, 1, "", "save_device_memory_profile"], [1012, 3, 1, "", "start_server"], [1013, 3, 1, "", "start_trace"], [1014, 3, 1, "", "stop_trace"], [1015, 3, 1, "", "trace"]], "jax.profiler.StepTraceAnnotation": [[1007, 2, 1, "", "__init__"]], "jax.profiler.TraceAnnotation": [[1008, 2, 1, "", "__init__"]], "jax.random": [[1017, 3, 1, "", "PRNGKey"], [1018, 3, 1, "", "ball"], [1019, 3, 1, "", "bernoulli"], [1020, 3, 1, "", "beta"], [1021, 3, 1, "", "binomial"], [1022, 3, 1, "", "bits"], [1023, 3, 1, "", "categorical"], [1024, 3, 1, "", "cauchy"], [1025, 3, 1, "", "chisquare"], [1026, 3, 1, "", "choice"], [1027, 3, 1, "", "clone"], [1028, 3, 1, "", "dirichlet"], [1029, 3, 1, "", "double_sided_maxwell"], [1030, 3, 1, "", "exponential"], [1031, 3, 1, "", "f"], [1032, 3, 1, "", "fold_in"], [1033, 3, 1, "", "gamma"], [1034, 3, 1, "", "generalized_normal"], [1035, 3, 1, "", "geometric"], [1036, 3, 1, "", "gumbel"], [1037, 3, 1, "", "key"], [1038, 3, 1, "", "key_data"], [1039, 3, 1, "", "laplace"], [1040, 3, 1, "", "loggamma"], [1041, 3, 1, "", "logistic"], [1042, 3, 1, "", "lognormal"], [1043, 3, 1, "", "maxwell"], [1044, 3, 1, "", "multinomial"], [1045, 3, 1, "", "multivariate_normal"], [1046, 3, 1, "", "normal"], [1047, 3, 1, "", "orthogonal"], [1048, 3, 1, "", "pareto"], [1049, 3, 1, "", "permutation"], [1050, 3, 1, "", "poisson"], [1051, 3, 1, "", "rademacher"], [1052, 3, 1, "", "randint"], [1053, 3, 1, "", "rayleigh"], [1054, 3, 1, "", "split"], [1055, 3, 1, "", "t"], [1056, 3, 1, "", "triangular"], [1057, 3, 1, "", "truncated_normal"], [1058, 3, 1, "", "uniform"], [1059, 3, 1, "", "wald"], [1060, 3, 1, "", "weibull_min"], [1061, 3, 1, "", "wrap_key_data"]], "jax.ref": [[1062, 0, 1, "", "AbstractRef"], [1063, 0, 1, "", "ArrayRef"], [1064, 3, 1, "", "addupdate"], [1065, 3, 1, "", "array_ref"], [1066, 3, 1, "", "freeze"], [1067, 3, 1, "", "get"], [1068, 3, 1, "", "set"], [1069, 3, 1, "", "swap"]], "jax.ref.AbstractRef": [[1062, 2, 1, "", "__init__"]], "jax.ref.ArrayRef": [[1063, 2, 1, "", "__init__"]], "jax.scipy": [[1433, 5, 0, "-", "fft"], [1433, 5, 0, "-", "integrate"], [1433, 5, 0, "-", "interpolate"], [1433, 5, 0, "-", "linalg"], [1433, 5, 0, "-", "ndimage"], [1433, 5, 0, "-", "optimize"], [1433, 5, 0, "-", "signal"], [1433, 5, 0, "-", "special"], [1433, 5, 0, "-", "stats"]], "jax.scipy.cluster": [[1433, 5, 0, "-", "vq"]], "jax.scipy.cluster.vq": [[1070, 3, 1, "", "vq"]], "jax.scipy.fft": [[1071, 3, 1, "", "dct"], [1072, 3, 1, "", "dctn"], [1073, 3, 1, "", "idct"], [1074, 3, 1, "", "idctn"]], "jax.scipy.integrate": [[1075, 3, 1, "", "trapezoid"]], "jax.scipy.interpolate": [[1076, 0, 1, "", "RegularGridInterpolator"]], "jax.scipy.interpolate.RegularGridInterpolator": [[1076, 2, 1, "", "__init__"]], "jax.scipy.linalg": [[1077, 3, 1, "", "block_diag"], [1078, 3, 1, "", "cho_factor"], [1079, 3, 1, "", "cho_solve"], [1080, 3, 1, "", "cholesky"], [1081, 3, 1, "", "det"], [1082, 3, 1, "", "eigh"], [1083, 3, 1, "", "eigh_tridiagonal"], [1084, 3, 1, "", "expm"], [1085, 3, 1, "", "expm_frechet"], [1086, 3, 1, "", "funm"], [1087, 3, 1, "", "hessenberg"], [1088, 3, 1, "", "hilbert"], [1089, 3, 1, "", "inv"], [1090, 3, 1, "", "lu"], [1091, 3, 1, "", "lu_factor"], [1092, 3, 1, "", "lu_solve"], [1093, 3, 1, "", "pascal"], [1094, 3, 1, "", "polar"], [1095, 3, 1, "", "qr"], [1096, 3, 1, "", "rsf2csf"], [1097, 3, 1, "", "schur"], [1098, 3, 1, "", "solve"], [1099, 3, 1, "", "solve_triangular"], [1100, 3, 1, "", "sqrtm"], [1101, 3, 1, "", "svd"], [1102, 3, 1, "", "toeplitz"]], "jax.scipy.ndimage": [[1103, 3, 1, "", "map_coordinates"]], "jax.scipy.optimize": [[1104, 0, 1, "", "OptimizeResults"], [1105, 3, 1, "", "minimize"]], "jax.scipy.optimize.OptimizeResults": [[1104, 2, 1, "", "__init__"]], "jax.scipy.signal": [[1106, 3, 1, "", "convolve"], [1107, 3, 1, "", "convolve2d"], [1108, 3, 1, "", "correlate"], [1109, 3, 1, "", "correlate2d"], [1110, 3, 1, "", "csd"], [1111, 3, 1, "", "detrend"], [1112, 3, 1, "", "fftconvolve"], [1113, 3, 1, "", "istft"], [1114, 3, 1, "", "stft"], [1115, 3, 1, "", "welch"]], "jax.scipy.sparse": [[1433, 5, 0, "-", "linalg"]], "jax.scipy.sparse.linalg": [[1116, 3, 1, "", "bicgstab"], [1117, 3, 1, "", "cg"], [1118, 3, 1, "", "gmres"]], "jax.scipy.spatial": [[1433, 5, 0, "-", "transform"]], "jax.scipy.spatial.transform": [[1119, 0, 1, "", "Rotation"], [1120, 0, 1, "", "Slerp"]], "jax.scipy.spatial.transform.Rotation": [[1119, 2, 1, "", "__init__"]], "jax.scipy.spatial.transform.Slerp": [[1120, 2, 1, "", "__init__"]], "jax.scipy.special": [[1121, 3, 1, "", "bernoulli"], [1122, 3, 1, "", "beta"], [1123, 3, 1, "", "betainc"], [1124, 3, 1, "", "betaln"], [1125, 3, 1, "", "digamma"], [1126, 3, 1, "", "entr"], [1127, 3, 1, "", "erf"], [1128, 3, 1, "", "erfc"], [1129, 3, 1, "", "erfinv"], [1130, 3, 1, "", "exp1"], [1131, 4, 1, "", "expi"], [1132, 3, 1, "", "expit"], [1133, 4, 1, "", "expn"], [1134, 3, 1, "", "factorial"], [1135, 4, 1, "", "fresnel"], [1136, 3, 1, "", "gamma"], [1137, 3, 1, "", "gammainc"], [1138, 3, 1, "", "gammaincc"], [1139, 3, 1, "", "gammaln"], [1140, 3, 1, "", "gammasgn"], [1141, 4, 1, "", "hyp1f1"], [1142, 3, 1, "", "hyp2f1"], [1143, 3, 1, "", "i0"], [1144, 3, 1, "", "i0e"], [1145, 3, 1, "", "i1"], [1146, 3, 1, "", "i1e"], [1147, 3, 1, "", "kl_div"], [1148, 4, 1, "", "log_ndtr"], [1149, 3, 1, "", "log_softmax"], [1150, 4, 1, "", "logit"], [1151, 3, 1, "", "logsumexp"], [1152, 3, 1, "", "lpmn"], [1153, 3, 1, "", "lpmn_values"], [1154, 3, 1, "", "multigammaln"], [1155, 3, 1, "", "ndtr"], [1156, 3, 1, "", "ndtri"], [1157, 4, 1, "", "poch"], [1158, 3, 1, "", "polygamma"], [1159, 3, 1, "", "rel_entr"], [1160, 3, 1, "", "softmax"], [1161, 3, 1, "", "spence"], [1162, 3, 1, "", "sph_harm"], [1163, 4, 1, "", "xlog1py"], [1164, 4, 1, "", "xlogy"], [1165, 4, 1, "", "zeta"]], "jax.scipy.stats": [[1433, 5, 0, "-", "bernoulli"], [1433, 5, 0, "-", "beta"], [1433, 5, 0, "-", "betabinom"], [1433, 5, 0, "-", "binom"], [1433, 5, 0, "-", "cauchy"], [1433, 5, 0, "-", "chi2"], [1433, 5, 0, "-", "dirichlet"], [1433, 5, 0, "-", "expon"], [1433, 5, 0, "-", "gamma"], [1209, 0, 1, "", "gaussian_kde"], [1433, 5, 0, "-", "gennorm"], [1433, 5, 0, "-", "geom"], [1433, 5, 0, "-", "gumbel_l"], [1433, 5, 0, "-", "gumbel_r"], [1433, 5, 0, "-", "laplace"], [1433, 5, 0, "-", "logistic"], [1245, 3, 1, "", "mode"], [1433, 5, 0, "-", "multinomial"], [1433, 5, 0, "-", "multivariate_normal"], [1433, 5, 0, "-", "nbinom"], [1433, 5, 0, "-", "norm"], [1433, 5, 0, "-", "pareto"], [1433, 5, 0, "-", "poisson"], [1265, 3, 1, "", "rankdata"], [1266, 3, 1, "", "sem"], [1433, 5, 0, "-", "t"], [1433, 5, 0, "-", "truncnorm"], [1433, 5, 0, "-", "uniform"], [1433, 5, 0, "-", "vonmises"], [1433, 5, 0, "-", "wrapcauchy"]], "jax.scipy.stats.bernoulli": [[1166, 3, 1, "", "cdf"], [1167, 3, 1, "", "logpmf"], [1168, 3, 1, "", "pmf"], [1169, 3, 1, "", "ppf"]], "jax.scipy.stats.beta": [[1170, 3, 1, "", "cdf"], [1171, 3, 1, "", "logcdf"], [1172, 3, 1, "", "logpdf"], [1173, 3, 1, "", "logsf"], [1174, 3, 1, "", "pdf"], [1175, 3, 1, "", "sf"]], "jax.scipy.stats.betabinom": [[1176, 3, 1, "", "logpmf"], [1177, 3, 1, "", "pmf"]], "jax.scipy.stats.binom": [[1178, 3, 1, "", "logpmf"], [1179, 3, 1, "", "pmf"]], "jax.scipy.stats.cauchy": [[1180, 3, 1, "", "cdf"], [1181, 3, 1, "", "isf"], [1182, 3, 1, "", "logcdf"], [1183, 3, 1, "", "logpdf"], [1184, 3, 1, "", "logsf"], [1185, 3, 1, "", "pdf"], [1186, 3, 1, "", "ppf"], [1187, 3, 1, "", "sf"]], "jax.scipy.stats.chi2": [[1188, 3, 1, "", "cdf"], [1189, 3, 1, "", "logcdf"], [1190, 3, 1, "", "logpdf"], [1191, 3, 1, "", "logsf"], [1192, 3, 1, "", "pdf"], [1193, 3, 1, "", "sf"]], "jax.scipy.stats.dirichlet": [[1194, 3, 1, "", "logpdf"], [1195, 3, 1, "", "pdf"]], "jax.scipy.stats.expon": [[1196, 3, 1, "", "cdf"], [1197, 3, 1, "", "logcdf"], [1198, 3, 1, "", "logpdf"], [1199, 3, 1, "", "logsf"], [1200, 3, 1, "", "pdf"], [1201, 3, 1, "", "ppf"], [1202, 3, 1, "", "sf"]], "jax.scipy.stats.gamma": [[1203, 3, 1, "", "cdf"], [1204, 3, 1, "", "logcdf"], [1205, 3, 1, "", "logpdf"], [1206, 3, 1, "", "logsf"], [1207, 3, 1, "", "pdf"], [1208, 3, 1, "", "sf"]], "jax.scipy.stats.gaussian_kde": [[1209, 2, 1, "", "__init__"], [1210, 2, 1, "", "evaluate"], [1211, 2, 1, "", "integrate_box_1d"], [1212, 2, 1, "", "integrate_gaussian"], [1213, 2, 1, "", "integrate_kde"], [1214, 2, 1, "", "logpdf"], [1215, 2, 1, "", "pdf"], [1216, 2, 1, "", "resample"]], "jax.scipy.stats.gennorm": [[1217, 3, 1, "", "cdf"], [1218, 3, 1, "", "logpdf"], [1219, 3, 1, "", "pdf"]], "jax.scipy.stats.geom": [[1220, 3, 1, "", "logpmf"], [1221, 3, 1, "", "pmf"]], "jax.scipy.stats.gumbel_l": [[1222, 3, 1, "", "cdf"], [1223, 3, 1, "", "logcdf"], [1224, 3, 1, "", "logpdf"], [1225, 3, 1, "", "logsf"], [1226, 3, 1, "", "pdf"], [1227, 3, 1, "", "ppf"], [1228, 3, 1, "", "sf"]], "jax.scipy.stats.gumbel_r": [[1229, 3, 1, "", "cdf"], [1230, 3, 1, "", "logcdf"], [1231, 3, 1, "", "logpdf"], [1232, 3, 1, "", "logsf"], [1233, 3, 1, "", "pdf"], [1234, 3, 1, "", "ppf"], [1235, 3, 1, "", "sf"]], "jax.scipy.stats.laplace": [[1236, 3, 1, "", "cdf"], [1237, 3, 1, "", "logpdf"], [1238, 3, 1, "", "pdf"]], "jax.scipy.stats.logistic": [[1239, 3, 1, "", "cdf"], [1240, 3, 1, "", "isf"], [1241, 3, 1, "", "logpdf"], [1242, 3, 1, "", "pdf"], [1243, 3, 1, "", "ppf"], [1244, 3, 1, "", "sf"]], "jax.scipy.stats.multinomial": [[1246, 3, 1, "", "logpmf"], [1247, 3, 1, "", "pmf"]], "jax.scipy.stats.multivariate_normal": [[1248, 3, 1, "", "logpdf"], [1249, 3, 1, "", "pdf"]], "jax.scipy.stats.nbinom": [[1250, 3, 1, "", "logpmf"], [1251, 3, 1, "", "pmf"]], "jax.scipy.stats.norm": [[1252, 3, 1, "", "cdf"], [1253, 3, 1, "", "isf"], [1254, 3, 1, "", "logcdf"], [1255, 3, 1, "", "logpdf"], [1256, 3, 1, "", "logsf"], [1257, 3, 1, "", "pdf"], [1258, 3, 1, "", "ppf"], [1259, 3, 1, "", "sf"]], "jax.scipy.stats.pareto": [[1260, 3, 1, "", "logpdf"], [1261, 3, 1, "", "pdf"]], "jax.scipy.stats.poisson": [[1262, 3, 1, "", "cdf"], [1263, 3, 1, "", "logpmf"], [1264, 3, 1, "", "pmf"]], "jax.scipy.stats.t": [[1267, 3, 1, "", "logpdf"], [1268, 3, 1, "", "pdf"]], "jax.scipy.stats.truncnorm": [[1269, 3, 1, "", "cdf"], [1270, 3, 1, "", "logcdf"], [1271, 3, 1, "", "logpdf"], [1272, 3, 1, "", "logsf"], [1273, 3, 1, "", "pdf"], [1274, 3, 1, "", "sf"]], "jax.scipy.stats.uniform": [[1275, 3, 1, "", "cdf"], [1276, 3, 1, "", "logpdf"], [1277, 3, 1, "", "pdf"], [1278, 3, 1, "", "ppf"]], "jax.scipy.stats.vonmises": [[1279, 3, 1, "", "logpdf"], [1280, 3, 1, "", "pdf"]], "jax.scipy.stats.wrapcauchy": [[1281, 3, 1, "", "logpdf"], [1282, 3, 1, "", "pdf"]], "jax.sharding": [[1434, 0, 1, "", "Mesh"], [1434, 0, 1, "", "NamedSharding"], [1434, 0, 1, "", "PartitionSpec"], [1434, 0, 1, "", "PmapSharding"], [1434, 0, 1, "", "Sharding"], [1434, 0, 1, "", "SingleDeviceSharding"]], "jax.sharding.NamedSharding": [[1434, 1, 1, "", "addressable_devices"], [1434, 1, 1, "", "device_set"], [1434, 1, 1, "", "is_fully_addressable"], [1434, 1, 1, "", "is_fully_replicated"], [1434, 1, 1, "", "memory_kind"], [1434, 1, 1, "", "mesh"], [1434, 1, 1, "", "num_devices"], [1434, 1, 1, "", "spec"], [1434, 2, 1, "", "with_memory_kind"]], "jax.sharding.PartitionSpec": [[1434, 1, 1, "", "reduced"], [1434, 1, 1, "", "unreduced"]], "jax.sharding.PmapSharding": [[1434, 2, 1, "", "default"], [1434, 1, 1, "", "device_set"], [1434, 1, 1, "", "devices"], [1434, 2, 1, "", "devices_indices_map"], [1434, 2, 1, "", "is_equivalent_to"], [1434, 1, 1, "", "is_fully_addressable"], [1434, 1, 1, "", "is_fully_replicated"], [1434, 1, 1, "", "memory_kind"], [1434, 1, 1, "", "num_devices"], [1434, 2, 1, "", "shard_shape"], [1434, 1, 1, "", "sharding_spec"], [1434, 2, 1, "", "with_memory_kind"]], "jax.sharding.Sharding": [[1434, 1, 1, "", "addressable_devices"], [1434, 2, 1, "", "addressable_devices_indices_map"], [1434, 1, 1, "", "device_set"], [1434, 2, 1, "", "devices_indices_map"], [1434, 2, 1, "", "is_equivalent_to"], [1434, 1, 1, "", "is_fully_addressable"], [1434, 1, 1, "", "is_fully_replicated"], [1434, 1, 1, "", "memory_kind"], [1434, 1, 1, "", "num_devices"], [1434, 2, 1, "", "shard_shape"], [1434, 2, 1, "", "with_memory_kind"]], "jax.sharding.SingleDeviceSharding": [[1434, 1, 1, "", "device_set"], [1434, 2, 1, "", "devices_indices_map"], [1434, 1, 1, "", "is_fully_addressable"], [1434, 1, 1, "", "is_fully_replicated"], [1434, 1, 1, "", "memory_kind"], [1434, 1, 1, "", "num_devices"], [1434, 2, 1, "", "with_memory_kind"]], "jax.stages": [[1435, 0, 1, "", "Compiled"], [1435, 0, 1, "", "Lowered"], [1435, 0, 1, "", "Traced"], [1435, 0, 1, "", "Wrapped"]], "jax.stages.Compiled": [[1435, 2, 1, "", "__call__"], [1435, 2, 1, "", "as_text"], [1435, 2, 1, "", "cost_analysis"], [1435, 1, 1, "", "in_tree"], [1435, 2, 1, "", "memory_analysis"], [1435, 2, 1, "", "runtime_executable"]], "jax.stages.Lowered": [[1435, 2, 1, "", "as_text"], [1435, 2, 1, "", "compile"], [1435, 2, 1, "", "compiler_ir"], [1435, 2, 1, "", "cost_analysis"], [1435, 1, 1, "", "in_tree"]], "jax.stages.Traced": [[1435, 2, 1, "", "lower"]], "jax.stages.Wrapped": [[1435, 2, 1, "", "__call__"], [1435, 2, 1, "", "lower"], [1435, 2, 1, "", "trace"]], "jax.test_util": [[1285, 3, 1, "", "check_grads"], [1286, 3, 1, "", "check_jvp"], [1287, 3, 1, "", "check_vjp"]], "jax.tree": [[1289, 3, 1, "", "all"], [1290, 3, 1, "", "broadcast"], [1291, 3, 1, "", "flatten"], [1292, 3, 1, "", "flatten_with_path"], [1293, 3, 1, "", "leaves"], [1294, 3, 1, "", "leaves_with_path"], [1295, 3, 1, "", "map"], [1296, 3, 1, "", "map_with_path"], [1297, 3, 1, "", "reduce"], [1298, 3, 1, "", "reduce_associative"], [1299, 3, 1, "", "structure"], [1300, 3, 1, "", "transpose"], [1301, 3, 1, "", "unflatten"]], "jax.tree_util": [[1302, 4, 1, "", "KeyEntry"], [1303, 4, 1, "", "KeyPath"], [1304, 0, 1, "", "Partial"], [1305, 3, 1, "", "all_leaves"], [1306, 3, 1, "", "keystr"], [1307, 3, 1, "", "register_dataclass"], [1308, 3, 1, "", "register_pytree_node"], [1309, 3, 1, "", "register_pytree_node_class"], [1310, 3, 1, "", "register_pytree_with_keys"], [1311, 3, 1, "", "register_pytree_with_keys_class"], [1312, 3, 1, "", "register_static"], [1313, 3, 1, "", "tree_all"], [1314, 3, 1, "", "tree_broadcast"], [1315, 3, 1, "", "tree_flatten"], [1316, 3, 1, "", "tree_flatten_with_path"], [1317, 3, 1, "", "tree_leaves"], [1318, 3, 1, "", "tree_leaves_with_path"], [1319, 3, 1, "", "tree_map"], [1320, 3, 1, "", "tree_map_with_path"], [1321, 3, 1, "", "tree_reduce"], [1322, 3, 1, "", "tree_reduce_associative"], [1323, 3, 1, "", "tree_structure"], [1324, 3, 1, "", "tree_transpose"], [1325, 3, 1, "", "tree_unflatten"], [1326, 3, 1, "", "treedef_children"], [1327, 3, 1, "", "treedef_is_leaf"], [1328, 3, 1, "", "treedef_tuple"]], "jax.tree_util.Partial": [[1304, 2, 1, "", "__init__"]], "jax.typing": [[1329, 4, 1, "", "ArrayLike"], [1330, 4, 1, "", "DTypeLike"]], "jaxlib.xla_client": [[1334, 3, 1, "", "register_custom_call_target"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "module", "Python module"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:module", "6": "py:attribute", "7": "py:exception"}, "terms": {"": [13, 18, 67, 69, 75, 76, 79, 80, 81, 83, 85, 95, 97, 112, 113, 131, 135, 136, 139, 165, 168, 172, 198, 210, 238, 244, 253, 283, 289, 290, 293, 295, 296, 303, 304, 311, 327, 338, 339, 343, 357, 360, 363, 366, 378, 381, 390, 415, 422, 423, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 441, 446, 449, 451, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 473, 475, 483, 487, 488, 495, 501, 502, 503, 504, 508, 518, 526, 529, 530, 534, 572, 583, 586, 592, 614, 619, 646, 668, 669, 683, 684, 685, 689, 690, 694, 695, 697, 698, 699, 700, 701, 721, 723, 732, 750, 776, 777, 797, 798, 804, 809, 811, 866, 868, 881, 882, 886, 887, 888, 889, 895, 896, 897, 899, 900, 902, 911, 913, 921, 926, 938, 948, 950, 951, 969, 991, 998, 999, 1000, 1001, 1002, 1023, 1031, 1055, 1072, 1074, 1085, 1086, 1089, 1100, 1101, 1105, 1110, 1111, 1115, 1116, 1117, 1118, 1135, 1136, 1141, 1153, 1161, 1162, 1176, 1177, 1265, 1267, 1268, 1283, 1292, 1294, 1296, 1302, 1303, 1304, 1307, 1309, 1310, 1311, 1312, 1331, 1333, 1341, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1384, 1385, 1387, 1389, 1390, 1391, 1402, 1403, 1411, 1414, 1424, 1425, 1428, 1430, 1431, 1434, 1435, 1439, 1441, 1442, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1469, 1470, 1471, 1472, 1473, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1505, 1506, 1507], "0": [10, 13, 14, 22, 46, 53, 58, 60, 61, 67, 69, 72, 74, 75, 77, 78, 80, 86, 90, 98, 106, 112, 118, 119, 126, 134, 136, 137, 150, 160, 166, 168, 170, 178, 179, 199, 211, 222, 223, 226, 229, 230, 233, 234, 237, 238, 239, 240, 241, 244, 248, 250, 251, 283, 286, 289, 290, 292, 293, 294, 295, 296, 297, 303, 304, 305, 306, 311, 315, 318, 335, 337, 343, 344, 345, 351, 352, 353, 354, 355, 357, 362, 363, 364, 365, 366, 367, 381, 387, 398, 407, 410, 421, 422, 423, 425, 426, 427, 434, 435, 436, 437, 442, 443, 444, 445, 447, 448, 449, 450, 452, 456, 459, 460, 466, 470, 473, 474, 475, 477, 481, 483, 486, 494, 495, 500, 501, 503, 504, 507, 508, 509, 510, 512, 517, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 532, 533, 534, 536, 540, 541, 542, 543, 544, 545, 549, 551, 552, 559, 563, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 589, 590, 591, 592, 595, 599, 600, 601, 603, 604, 605, 612, 613, 614, 616, 617, 619, 620, 623, 625, 626, 627, 632, 633, 634, 636, 638, 639, 640, 642, 643, 644, 645, 646, 651, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 712, 714, 715, 718, 719, 720, 721, 723, 725, 726, 727, 728, 731, 733, 736, 737, 738, 739, 740, 742, 743, 744, 746, 747, 749, 750, 751, 753, 754, 761, 762, 763, 765, 766, 775, 776, 778, 779, 780, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 797, 801, 802, 804, 805, 807, 808, 812, 813, 816, 819, 820, 822, 823, 824, 828, 831, 832, 836, 838, 841, 842, 845, 846, 847, 848, 849, 850, 853, 854, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 868, 869, 872, 876, 877, 879, 880, 881, 882, 883, 886, 887, 888, 889, 892, 894, 896, 899, 900, 901, 902, 906, 907, 908, 909, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 930, 931, 933, 934, 936, 937, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 979, 981, 982, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1005, 1016, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1030, 1031, 1033, 1034, 1035, 1042, 1043, 1048, 1049, 1050, 1052, 1053, 1055, 1058, 1059, 1060, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1103, 1104, 1107, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1126, 1127, 1136, 1140, 1141, 1142, 1143, 1145, 1147, 1148, 1149, 1152, 1153, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1286, 1287, 1290, 1292, 1294, 1296, 1304, 1306, 1307, 1309, 1331, 1332, 1333, 1334, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1356, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1387, 1390, 1396, 1397, 1402, 1403, 1404, 1411, 1414, 1415, 1424, 1428, 1429, 1431, 1434, 1435, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506], "00": [678, 823, 848, 934, 1120, 1387, 1471], "000": [1342, 1459, 1475], "00000000e": 678, "00000003e": 823, "00000005e": 823, "0000000e": [678, 848, 1120], "0000001": [746, 867], "0000005": 1097, "0000005e": 678, "000000e": 823, "000001": 589, "000009999913458": 1349, "00001": [903, 1349], "00001e6": [564, 764], "00002e6": [564, 764], "0000500e": 678, "0000700001": 1349, "00008e6": [564, 764], "00008e7": [564, 764], "00008e8": [564, 764], "00009e6": [564, 764], "0001": [1084, 1286, 1287, 1471, 1506], "00011943008983507753": 1492, "00012131539988331496": 1492, "00012622540001757442": 1492, "00012708659982308746": 1492, "00015668": [1342, 1467], "00016594e": 678, "000166e": 823, "00029766598949208854": 1492, "00030103540048003196": 1492, "0003029372810851783": 1492, "0008272899803705514": 1492, "0008790623804088682": 1492, "00088908776990138": 1492, "000896632740041241": 1492, "000e": 671, "001": 1471, "00135791": [1342, 1467], "00216142": [1342, 1467], "00273132324219": 1476, "0027385": 1376, "00311279296875": 1476, "00339478": [1342, 1467], "00418412": [1342, 1467], "005": 1502, "00558471679688": 1476, "00574409": [1342, 1467], "006047147869830951": 1492, "006099433819763363": 1492, "006107717020204291": 1492, "006130605939542875": 1492, "007": 1371, "00729382": 1431, "007528": 495, "00776229": [1342, 1467], "00785936": [1342, 1467], "01": [526, 528, 529, 530, 533, 572, 640, 645, 733, 822, 1071, 1072, 1074, 1094, 1120, 1342, 1378, 1387, 1465, 1473, 1476], "01078958": [1342, 1467], "0108745": 523, "010b": 763, "01176856": [1342, 1467], "011771515250438824": 1492, "011807117109419778": 1492, "012017967159627005": 1492, "0123": 501, "01268033": [1342, 1467], "01268034": [1342, 1467], "01320427": [1342, 1467], "01347649": 1490, "0137874289354": 1387, "014079": [1342, 1467], "01451110839844": 1476, "01451446": [1342, 1467], "01476286": [1342, 1467], "01556223": [1342, 1467], "0156755j": 1402, "0164618489928": 1387, "01652764": 1376, "018": 936, "01857424": 1490, "0193281": [1342, 1467], "01964569091797": 1476, "01971436": 1347, "01972961": 1347, "01973": 1347, "01j": 689, "01m": 1378, "02": [733, 1074, 1096, 1120, 1387], "02058932": [1342, 1467], "0213": 501, "02138916": 1500, "02150": 508, "021j": 953, "02205": 1476, "02415345": [1342, 1467], "0242182": 1490, "0244369506836": 1476, "0246326": 1414, "0248291": 1414, "0252e": 1494, "02644569": [1342, 1467], "028304616": 1498, "02830462": 1498, "028908": [808, 1095], "0291": 1476, "02942139": [1342, 1467], "0294214": [1342, 1467], "02j": 688, "03": [640, 645, 1074, 1387, 1492], "03048803": [1342, 1467], "031": 953, "03132951": 1414, "03139788": 1414, "0315933227539": 1476, "03181": 1347, "03181458": 1347, "03358557": 1376, "034946": [1342, 1467], "0353256": 1475, "03762": 508, "0396": 1492, "03j": 690, "04": [528, 678, 690, 823, 887, 1071, 1073, 1074, 1371, 1387], "04019165039062": 1476, "04097353": 1376, "043": 1087, "04314422607422": 1476, "04322892": 519, "04434623": [1342, 1467], "04434624": [1342, 1467], "0446548461914": 1476, "044715": [510, 1471], "04494429": 1490, "04514575": [1342, 1467], "047": 573, "0471976": 652, "04737393": [1342, 1467], "0485873": [1342, 1463], "04j": [688, 699], "05": [296, 554, 564, 690, 697, 699, 764, 1071, 1073, 1074, 1116, 1117, 1118, 1378, 1387, 1397, 1459, 1460, 1494], "0503650": 1018, "05069415": [1342, 1467], "0507009873554804934193349852946": 545, "050814": [808, 1095], "0509028": [1342, 1467], "05202": 1445, "05213022": 1490, "0535587e": 1490, "05356663": 1414, "05359547": 1414, "05389404": 1347, "0539": 1347, "06": [240, 678, 688, 1072, 1074, 1094, 1342, 1350, 1387, 1467, 1496], "0609050": 1047, "060e": 671, "0613258": 526, "063663": 526, "0641860961914": 1476, "06447162": 1376, "0648427": 1490, "065": 1492, "06566654": [1342, 1467], "06566655": [1342, 1467], "0660033": [808, 1095], "06604332": 1376, "06621551513672": 1476, "06666667": 1002, "068": 643, "06j": 683, "07": [678, 823, 887, 940, 1071, 1074, 1120, 1381, 1387, 1471, 1490], "0705": 239, "070650816": [1350, 1467], "0716349809895": 1387, "0726733": 1490, "07314587": [1470, 1500], "07355348": [1342, 1467], "0743913": [1342, 1467], "07458": 239, "07506633": [1342, 1467], "07506634": [1342, 1467], "07520543": 1475, "07592554": 1498, "07598876953125": 1476, "07694244384766": 1476, "0775": 1492, "078": 1087, "0786": 1492, "0799625": 1475, "08": [77, 78, 80, 564, 689, 690, 733, 736, 764, 940, 946, 1073, 1074, 1342, 1350, 1387, 1396, 1467, 1490], "080005": [808, 1095], "0818567": 530, "082869": 1490, "083": [745, 1347], "08300781": 1347, "0833322": 807, "08431": 1490, "0855657": 523, "08661086": 520, "08804226": [1470, 1500], "088388346": [1342, 1463], "08838835": [1342, 1463], "08925092": 720, "09": [675, 678, 688, 697, 699, 1071, 1342, 1347, 1381, 1387], "090002": 943, "09085775": 1475, "09129842": [1342, 1467], "09181861146935262": 1492, "09183577066054567": 1492, "09197998": 1347, "09198": 1347, "09224219304455371": 1348, "094": 573, "0941162109375": 1476, "09438": 1414, "0943952": 652, "09488677978516": 1476, "095": 576, "09500920018996112": 1492, "09551499": [1342, 1467], "096": 643, "09683388": 524, "09748876": [1342, 1467], "097791": 1496, "0979297": 1490, "097j": 573, "09815216064453": 1476, "09983342": [248, 297], "0b0": [784, 914], "0b00000000": 763, "0b00000001": 763, "0b00000010": 763, "0b00000011": 763, "0b00000100": 763, "0b00000111": 876, "0b00011011": 981, "0b1": [784, 914], "0b10": [606, 784, 914], "0b100": [250, 251, 784, 914], "0b1000": [784, 914], "0b10000": [606, 784, 914], "0b100000": [606, 784], "0b1000000": [606, 784], "0b1001": 606, "0b10100": 606, "0b11": 784, "0b110": 784, "0b111": 606, "0b11100000": 876, "0b11111": 606, "0b11111011": 763, "0b11111100": 763, "0b11111101": 763, "0b11111110": 763, "0b11111111": 763, "0d": [1354, 1489], "0f": 1378, "0j": [559, 574, 579, 774, 1354], "0m": [1378, 1464], "0mbuilt": 1378, "0th": 1354, "0x": 1390, "0x7efcdc190dd0": 1390, "0x7efcdc1914d0": 1390, "0x7efcdc19ab80": 1390, "0x7efcdc19b7e0": 1390, "0x7efcdc1ac760": 1390, "0x7efcdc1ac810": 1390, "0x7efcdc1ac9f0": 1390, "0x7efcdc1acf80": 1390, "0x7efcdc1ad020": 1390, "0x7efcdc1ad300": 1390, "0x7efcdc1b84a0": 1390, "0x7efcdc1b9160": 1390, "0x7efcdc1b91a0": 1390, "0x7efcdc1b9a60": 1390, "0x7efcdc1ba540": 1390, "0x7efcdc1bb0b0": 1390, "0x7efcdc1bb300": 1390, "0x7efcdc1bba10": 1390, "0x7efcdc1bbc80": 1390, "0x7efcdc1bcb70": 1390, "0x7efcdc1bcef0": 1390, "0x7efcdc1efdc0": 1390, "0x7efcdc1efe20": 1390, "0x7efcdc1eff70": 1390, "0x7efcdc2046b0": 1390, "0x7efcdc204e70": 1390, "0x7efcdc20d6d0": 1390, "0x7efcdc20de60": 1390, "0x7efcdc20e3f0": 1390, "0x7efcdc217240": 1390, "0x7efcdc2467d0": 1390, "0x7efcdc250fe0": 1390, "0x7efcdc251430": 1390, "0x7efcdc2519a0": 1390, "0x7efcdc258ba0": 1390, "0x7efcdc259340": 1390, "0x7efcdc259670": 1390, "0x7efcdc264870": 1390, "0x7efcdc264a70": 1390, "0x7efcdc2682d0": 1390, "0x7efcdc313d80": 1390, "0x7efcdc313f30": 1390, "0x7efce4181c30": 1390, "0x7efce42539e0": 1390, "0x7efce42539f0": 1390, "0x7efce9e81d80": 1390, "0x7f264a94e420": 1463, "0x7f264b2bd580": 1463, "0x7f5e469b1700": 1468, "0x7f6944ee8220": 1382, "0x7f6a7936cdd0": 1342, "0x7f6a793aff20": 1342, "0x7f6f5477a9c0": 1476, "0x7f7dd4125890": 1377, "0x7f8dbf8cbd40": 159, "0x7f99a86ffb60": 1506, "0x7f99a876a2a0": 1506, "0x7f99a87702f0": 1506, "0x7f99ccd70140": 1506, "0x7f9a12b8fa60": 1506, "0xffffffff": 1354, "1": [7, 8, 10, 13, 22, 26, 42, 51, 52, 58, 61, 67, 72, 73, 74, 75, 77, 78, 80, 86, 94, 97, 98, 113, 118, 119, 126, 136, 141, 148, 150, 152, 153, 155, 168, 170, 179, 199, 219, 222, 223, 229, 230, 233, 234, 239, 240, 241, 248, 283, 286, 289, 290, 292, 293, 295, 296, 297, 303, 304, 305, 306, 311, 315, 319, 321, 328, 329, 337, 343, 344, 345, 357, 359, 362, 363, 364, 365, 366, 367, 370, 371, 374, 375, 380, 381, 387, 394, 395, 396, 398, 403, 407, 408, 410, 412, 413, 415, 421, 423, 425, 426, 427, 435, 436, 437, 440, 449, 451, 452, 456, 457, 458, 459, 460, 470, 473, 474, 475, 476, 480, 483, 494, 501, 503, 504, 507, 508, 509, 510, 512, 516, 517, 519, 520, 521, 522, 523, 524, 525, 527, 528, 530, 531, 534, 535, 536, 537, 538, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 559, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 595, 599, 600, 601, 602, 604, 605, 606, 610, 612, 614, 616, 617, 618, 619, 621, 623, 625, 626, 627, 632, 633, 634, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 666, 667, 668, 669, 670, 671, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 721, 723, 725, 726, 727, 728, 729, 731, 733, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 753, 754, 761, 762, 763, 764, 765, 766, 768, 769, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 896, 898, 900, 901, 902, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 998, 999, 1000, 1001, 1002, 1007, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1031, 1033, 1035, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1051, 1055, 1058, 1059, 1060, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1119, 1120, 1121, 1123, 1128, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1141, 1145, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1158, 1160, 1161, 1162, 1163, 1165, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1304, 1305, 1306, 1307, 1308, 1310, 1312, 1326, 1327, 1328, 1331, 1332, 1333, 1334, 1342, 1344, 1346, 1347, 1351, 1356, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1370, 1371, 1374, 1376, 1378, 1380, 1381, 1382, 1384, 1385, 1387, 1390, 1396, 1397, 1402, 1411, 1414, 1415, 1423, 1424, 1428, 1431, 1440, 1441, 1442, 1443, 1445, 1447, 1449, 1450, 1451, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1476, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1502, 1503, 1504, 1505, 1506], "10": [10, 98, 239, 250, 251, 296, 303, 305, 306, 362, 363, 364, 365, 381, 387, 415, 435, 436, 449, 473, 474, 486, 504, 530, 562, 602, 604, 616, 625, 632, 637, 643, 649, 660, 663, 666, 668, 669, 670, 678, 681, 683, 694, 695, 697, 699, 701, 715, 716, 723, 725, 729, 731, 733, 734, 739, 740, 741, 742, 745, 754, 761, 776, 779, 781, 782, 783, 792, 804, 805, 806, 807, 810, 816, 819, 822, 823, 831, 837, 840, 847, 852, 864, 865, 875, 877, 881, 883, 884, 885, 889, 899, 900, 901, 916, 919, 920, 922, 923, 925, 929, 936, 937, 947, 948, 956, 958, 960, 964, 968, 969, 987, 994, 1064, 1068, 1069, 1072, 1075, 1076, 1093, 1098, 1099, 1103, 1107, 1109, 1111, 1135, 1148, 1162, 1265, 1342, 1344, 1346, 1348, 1349, 1350, 1356, 1359, 1365, 1366, 1367, 1370, 1371, 1374, 1377, 1381, 1382, 1384, 1387, 1390, 1411, 1415, 1424, 1439, 1444, 1446, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1483, 1485, 1487, 1488, 1490, 1495, 1496, 1500, 1503], "100": [98, 112, 239, 242, 572, 640, 645, 671, 700, 731, 742, 779, 804, 822, 831, 857, 859, 879, 881, 901, 925, 969, 1066, 1301, 1342, 1360, 1361, 1369, 1377, 1378, 1431, 1454, 1455, 1463, 1465, 1469, 1475, 1476, 1485, 1492, 1494], "1000": [112, 113, 731, 822, 958, 1008, 1009, 1075, 1342, 1347, 1348, 1367, 1371, 1377, 1456, 1462, 1463, 1475, 1476, 1494, 1502], "10000": [1367, 1461, 1473, 1475], "1000000": [1367, 1459], "10003": 1476, "10009": 1476, "1000x1000": [1347, 1354, 1377], "10029": 1354, "10049": 1354, "10067749023438": 1476, "10069": 1354, "100gb": [1487, 1490], "100mb": [1484, 1487, 1490], "101": [700, 969, 975, 1353, 1383], "10159": 1354, "10184478759766": 1476, "1018809052": 1498, "102": [700, 1476, 1500], "10218": 1354, "1024": [305, 306, 783, 1402, 1461, 1471, 1474, 1480, 1487, 1488, 1489, 1492, 1494], "1024x1024": 1354, "10266": 1354, "10278": 1354, "10281": 1354, "103": [985, 1462], "10322": 1444, "10389": 1354, "104": 1462, "10452": 1354, "10499357": 1475, "105": [985, 1462], "10502338": 1475, "1051271004": 1498, "1052": 1354, "1056793272": 1498, "10570311": 1475, "106": 1462, "10657": 1458, "10659": 1354, "1066338622": 1498, "107": [1462, 1467], "10717": 1354, "108": 985, "1080163607": 1390, "109": [990, 1476, 1485], "1091874": [1342, 1467], "10918741": [1342, 1467], "10921": 1354, "1093594115": 1498, "1094728438082": 1387, "1096": 675, "1097": 1449, "10_000": 1503, "10_000_000": 1443, "10x": [1377, 1443, 1487, 1494], "10x10": 1377, "11": [303, 362, 363, 364, 381, 387, 435, 436, 473, 474, 504, 562, 625, 632, 637, 641, 666, 669, 687, 694, 695, 696, 697, 699, 714, 716, 725, 739, 740, 754, 783, 792, 816, 883, 889, 916, 919, 960, 964, 981, 1072, 1073, 1074, 1103, 1108, 1109, 1351, 1357, 1365, 1366, 1371, 1378, 1387, 1402, 1424, 1444, 1454, 1456, 1461, 1462, 1465, 1467, 1471, 1474, 1485, 1490, 1499, 1500], "110": [779, 1476], "11003882": 521, "1101979660": 1498, "1109": 701, "11097": 1103, "1112": 1390, "11150": 1396, "1116708477": 1498, "1116868249": 1378, "112": 1476, "11204806": [1342, 1467], "11215": 1354, "11228942871094": 1476, "11234": 1354, "11237": 1354, "11248": 1354, "1125": 670, "113": [1342, 1463, 1476], "11341857910156": 1476, "114": 664, "11436123235026": 1492, "11557": 1354, "11572685861765": 1492, "11590": 670, "116": 1449, "1162": 1460, "1163": 1460, "1164": 1460, "11640348122095": 1492, "11675553278230": 1492, "11687": 553, "1175": 1460, "1176": 1460, "11763906": 1490, "1176619927957034": 1348, "1177": 1460, "11794": 239, "118": [242, 801, 1500], "1181": 670, "11830": [1354, 1443, 1458], "119": 1485, "1192": 1460, "1193": 1460, "1194": 1460, "11944": 1354, "1195": 1460, "11952": 1455, "11972585626140": 1492, "11974823079773": 1492, "11e": 701, "11j": [690, 697, 699], "12": [10, 75, 242, 290, 303, 362, 363, 364, 381, 387, 435, 436, 449, 473, 474, 501, 504, 559, 562, 625, 632, 637, 640, 641, 646, 666, 670, 683, 685, 687, 694, 695, 696, 697, 699, 725, 729, 740, 754, 781, 782, 792, 805, 806, 813, 816, 858, 861, 862, 864, 875, 885, 888, 919, 920, 948, 954, 960, 964, 969, 1002, 1064, 1072, 1073, 1074, 1103, 1107, 1109, 1333, 1342, 1346, 1350, 1359, 1365, 1366, 1374, 1378, 1382, 1384, 1387, 1390, 1411, 1415, 1424, 1445, 1450, 1454, 1456, 1459, 1461, 1463, 1465, 1467, 1468, 1469, 1470, 1474, 1485, 1488, 1496, 1499, 1500], "120": [648, 650, 652, 779, 782, 903, 985, 1476], "1200000": 1356, "12016": 1444, "12041": 1354, "12049": [1439, 1444, 1458], "1208447044": 1498, "121": [985, 1459], "1210496444": 1359, "121105001260758": 1348, "12167": 1455, "12170": 1455, "122": 835, "123": [985, 1457], "1230": 570, "12300": 1444, "12302713": 525, "1234": 98, "12398731708526611": 1461, "12467473": 1403, "1249": 1449, "125": 621, "12528": 1354, "12533": 1354, "12536": 1354, "12550": 1354, "12579198": [1342, 1467], "12582": 1354, "12582912": 1492, "1258726447": 1462, "12593": 1444, "126": [570, 1476], "127": [98, 985, 1100, 1496, 1498], "12700021": [808, 1095], "12707": 1455, "12738": 1503, "1275": [1449, 1492], "128": [166, 543, 544, 891, 1342, 1354, 1369, 1382, 1445, 1465, 1467, 1472, 1473, 1474, 1476, 1478, 1480, 1483, 1484, 1485, 1487, 1489, 1490, 1492, 1493, 1494, 1502, 1503, 1506], "12834167480469": 1476, "128x128": 1484, "12958": 1354, "12j": [697, 699], "12m": 1492, "12th": 1371, "12x320": 1489, "13": [303, 435, 436, 504, 562, 641, 685, 697, 699, 725, 739, 740, 754, 805, 831, 852, 956, 958, 1002, 1073, 1075, 1107, 1108, 1342, 1344, 1359, 1365, 1366, 1371, 1384, 1387, 1424, 1454, 1456, 1460, 1461, 1465, 1473, 1474, 1496, 1500], "130": [779, 985, 1476], "13140": 239, "132": 1483, "13240": 670, "13245": 508, "133": [570, 985], "13301": 1354, "1333281553946": 1387, "13333333": 1002, "1337": 814, "13371": 1347, "13371277": 1347, "13372803": 1347, "133j": 577, "134": 891, "135": 1492, "1351523": [1342, 1467], "135451537": 1498, "136": [1359, 1494], "13621868": [1350, 1467], "13624572753906": 1476, "13655090332031": 1476, "1366": 1449, "136797809": 1498, "1369438": 522, "137": 1359, "138": 1359, "13866424560547": 1476, "13890075683594": 1476, "139": 1359, "13980": 1354, "139855952662144": 1466, "139855952667840": 1466, "139855952716544": 1466, "139855952716672": 1466, "139855952716736": 1466, "139855952719872": 1466, "139855952723072": 1466, "139855952723520": 1466, "139855952723712": 1466, "13t": 1354, "13th": 1371, "14": [10, 303, 435, 436, 504, 570, 578, 623, 670, 682, 683, 685, 687, 740, 781, 810, 864, 865, 887, 899, 929, 937, 988, 1023, 1026, 1098, 1109, 1342, 1344, 1346, 1348, 1365, 1366, 1371, 1387, 1390, 1415, 1424, 1448, 1453, 1454, 1456, 1461, 1462, 1464, 1470, 1473, 1474, 1488, 1496, 1500], "140": [779, 1100, 1359, 1476], "141": 1359, "14102": 1354, "14106": 1354, "14108": 1354, "14112": [1342, 1370, 1374, 1376, 1463, 1470], "1411200080598672": 1348, "1412": 1002, "1414436097": 1498, "1415927": [652, 1342, 1467], "1416876": 1466, "14170025": [1342, 1467], "142": [573, 671, 1385], "1422": [1402, 1496], "1423771745": 1498, "14273": 1458, "14286": [305, 306], "142j": 574, "143": [1342, 1476], "1440": 1492, "1440797": 1466, "14446": 1354, "1445": 1496, "144j": 574, "147": 1476, "14734": 1354, "148": 675, "1487": 1496, "149": 920, "14911651611328": 1476, "14j": [689, 690], "14t": 1354, "14th": 1371, "15": [244, 303, 435, 436, 504, 604, 637, 649, 651, 669, 670, 681, 699, 729, 733, 739, 740, 781, 782, 806, 807, 813, 816, 831, 858, 875, 883, 920, 954, 958, 969, 1073, 1074, 1075, 1093, 1108, 1109, 1333, 1342, 1350, 1359, 1365, 1371, 1374, 1378, 1387, 1402, 1424, 1440, 1454, 1456, 1461, 1466, 1467, 1474, 1475, 1500], "150": [779, 876, 1475, 1476], "1500": 1456, "15113830566406": 1476, "153": 985, "153283442968721": 1492, "154": 981, "15429": 1354, "154584235803001": 1492, "154j": 936, "156347213275211": 1492, "15637969970703": 1476, "15677": 1356, "157": 985, "15814": 1347, "15814209": 1347, "15852355957031": 1476, "15856": [1416, 1458], "158883": 1414, "1599": 670, "15j": [559, 689], "15mb": 1367, "16": [293, 295, 303, 316, 435, 436, 447, 448, 504, 544, 606, 637, 670, 682, 685, 687, 697, 699, 701, 714, 731, 739, 740, 781, 784, 800, 810, 891, 894, 914, 943, 948, 981, 986, 1002, 1036, 1052, 1073, 1074, 1084, 1098, 1342, 1346, 1347, 1356, 1366, 1367, 1369, 1371, 1374, 1377, 1381, 1382, 1385, 1387, 1424, 1431, 1434, 1441, 1443, 1445, 1447, 1450, 1454, 1455, 1456, 1461, 1462, 1463, 1465, 1468, 1470, 1474, 1480, 1484, 1485, 1490, 1492, 1500, 1503, 1505], "160": [779, 876, 1476], "16027": 1354, "16086": 1455, "16102302": [1342, 1467], "16134644": 1347, "16135": 1347, "162": 831, "163": 1476, "1631097290182": 1387, "16347": 1354, "16362": 1354, "16384": [1490, 1494], "16413": 1354, "16440": 1354, "1657102335": 1498, "16589": 1455, "166": 1378, "166131533963991": 1492, "1661738718": 1498, "16642761": 1347, "16643": 1347, "16666667": [435, 1002], "1668": 1454, "167": 1087, "1670": 1449, "1672213357352": 1387, "16746": 1354, "16757": 1347, "16757202": 1347, "16779": 1354, "16781": 1455, "168": 1461, "16820715": 1414, "16824": 1455, "16838408": 1414, "16897797651282": 1492, "169": 936, "1697775786824": 1387, "16mb": 1489, "16mib": 1487, "16th": 1368, "17": [559, 570, 641, 687, 688, 690, 697, 699, 733, 740, 792, 887, 922, 1072, 1073, 1074, 1096, 1107, 1342, 1344, 1359, 1374, 1382, 1387, 1390, 1414, 1443, 1459, 1461, 1465, 1471, 1474, 1500], "170": [1476, 1492], "1701": [1414, 1431, 1469, 1475], "17013086492108": 1492, "17038": 1448, "1704": 239, "17054": 1354, "1706": 508, "17111": 1458, "17225": 1455, "1723": 1449, "17320499": 1070, "1737": 1002, "17390487": [1342, 1467], "17398663": 523, "174": 1469, "1740": 1002, "175": [831, 936, 1476], "176": 1469, "17686": 1387, "17701657415839": 1492, "1772828": 1083, "1775180719": 1498, "1776": 1359, "1777": 1359, "17774200439453": 1476, "178264713": 1382, "179": [985, 1378], "179347953304919": 1492, "17939758300781": 1476, "17981093801113": 1492, "17j": 689, "17th": 1371, "18": [436, 641, 682, 685, 697, 699, 729, 733, 740, 761, 781, 782, 806, 816, 875, 1071, 1073, 1074, 1107, 1333, 1346, 1366, 1371, 1374, 1381, 1384, 1387, 1390, 1414, 1456, 1461, 1468, 1474, 1500], "180": [652, 903, 1371, 1390, 1476], "18000030517578": 1476, "180020067095253": 1492, "1801108376": 1382, "180264539343531": 1492, "180deg": 1469, "1812433255": 1498, "1813425700": 1390, "18137": 1458, "18140515": 1348, "18154907226562": 1476, "181823175395037": 1492, "18226": 1354, "18252563": 1347, "18253": 1347, "184016991": 1498, "1850": 1390, "18514251708984": 1476, "1854": 570, "1875": [987, 1449], "1878467924": 1498, "1892898": 1490, "18953": 1354, "18959045410156": 1476, "19": [567, 678, 697, 699, 739, 740, 805, 813, 891, 934, 954, 1071, 1072, 1074, 1344, 1371, 1374, 1384, 1387, 1460, 1461, 1465, 1485, 1496, 1500], "190": [311, 1476], "1900088": 522, "1900727105": 1498, "19009": 1356, "1901": 1396, "1911": 508, "19192469": 1500, "192": [1461, 1503], "1920929e": 940, "19227": 1354, "19231": 1354, "19235": 1354, "192359": 529, "19282": 1354, "19283": 1354, "19284": 1354, "193": [1377, 1378], "1938": 1449, "1943107544": 1382, "196": 1469, "1965": [1350, 1467], "1965761": 1475, "19661197": 1475, "197": 1492, "19796752929688": 1476, "197e12": 1492, "198": [1390, 1469], "1980": 1354, "198039": 805, "1981": [1359, 1460], "19816": 1354, "1982": [1359, 1460], "1983": [1100, 1359, 1460], "1983583872": 1460, "1986": 1503, "19866933": 248, "1990": 311, "19900084": 297, "19937": 1498, "1d": [288, 290, 570, 571, 586, 592, 599, 600, 601, 625, 627, 632, 637, 641, 654, 658, 659, 661, 667, 670, 679, 740, 741, 742, 743, 744, 753, 762, 817, 840, 857, 859, 875, 877, 879, 889, 891, 900, 910, 911, 927, 928, 944, 957, 975, 976, 977, 978, 979, 980, 982, 988, 989, 991, 992, 993, 998, 999, 1000, 1001, 1106, 1107, 1108, 1109, 1112, 1152, 1153, 1162, 1209, 1354, 1359, 1369, 1374, 1402, 1414, 1445, 1448, 1460, 1474, 1478, 1489, 1490], "1e": [240, 554, 564, 589, 678, 764, 797, 804, 807, 808, 811, 814, 823, 1019, 1023, 1026, 1082, 1086, 1089, 1095, 1096, 1097, 1101, 1116, 1117, 1118, 1342, 1349, 1350, 1378, 1396, 1397, 1462, 1463, 1464, 1465, 1467, 1471, 1473, 1474, 1475, 1492, 1503], "1e3": [564, 764], "1e6": [564, 764], "1f1": 1141, "1j": [573, 579, 586, 592, 636, 637, 641, 643, 749, 753, 776, 936, 939, 942, 943, 953, 967, 988, 989, 1102, 1342, 1354, 1467], "1m": 1378, "1min": [1342, 1378, 1441, 1459, 1460, 1462, 1463, 1466, 1474, 1475], "1mlambda": [1342, 1378, 1441, 1459, 1460, 1462, 1463, 1466, 1474, 1475], "1mlet": [1342, 1378, 1441, 1459, 1460, 1462, 1463, 1466, 1474, 1475], "1st": [1371, 1474], "1x1": [1471, 1489], "2": [10, 61, 67, 72, 73, 74, 75, 77, 78, 80, 94, 97, 98, 126, 136, 166, 179, 199, 239, 240, 241, 242, 248, 250, 251, 281, 283, 289, 290, 293, 295, 296, 297, 298, 303, 304, 306, 311, 312, 315, 316, 335, 341, 343, 344, 345, 346, 347, 362, 363, 364, 365, 366, 367, 372, 373, 380, 381, 387, 395, 396, 398, 420, 423, 425, 426, 427, 435, 436, 437, 449, 452, 456, 459, 460, 473, 474, 479, 481, 484, 486, 495, 500, 501, 502, 504, 508, 510, 512, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 540, 541, 543, 544, 551, 552, 553, 554, 559, 564, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 595, 599, 600, 601, 602, 603, 604, 606, 612, 613, 614, 616, 618, 619, 620, 621, 623, 625, 626, 627, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 721, 723, 725, 726, 727, 728, 729, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 753, 754, 761, 762, 763, 764, 766, 769, 770, 771, 774, 775, 778, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 873, 874, 875, 877, 878, 879, 880, 881, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 896, 898, 899, 901, 902, 903, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 996, 998, 999, 1000, 1001, 1002, 1012, 1016, 1018, 1024, 1025, 1029, 1031, 1039, 1041, 1042, 1043, 1045, 1046, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1064, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1127, 1128, 1135, 1143, 1145, 1148, 1152, 1153, 1154, 1155, 1162, 1183, 1185, 1190, 1192, 1218, 1219, 1237, 1238, 1241, 1242, 1245, 1248, 1249, 1255, 1257, 1265, 1266, 1267, 1268, 1271, 1273, 1279, 1280, 1281, 1282, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1326, 1327, 1328, 1333, 1344, 1346, 1347, 1349, 1351, 1356, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1370, 1371, 1374, 1376, 1378, 1381, 1382, 1384, 1387, 1390, 1396, 1397, 1403, 1411, 1414, 1415, 1424, 1428, 1429, 1434, 1440, 1441, 1442, 1445, 1446, 1447, 1449, 1450, 1451, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1465, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1502, 1503, 1504, 1505, 1506], "20": [10, 435, 436, 449, 577, 606, 616, 625, 648, 650, 663, 664, 669, 675, 699, 715, 739, 740, 761, 779, 781, 817, 840, 847, 864, 877, 881, 899, 900, 925, 958, 985, 989, 1000, 1075, 1076, 1093, 1107, 1118, 1134, 1148, 1265, 1351, 1371, 1387, 1390, 1414, 1448, 1449, 1456, 1459, 1461, 1462, 1469, 1471, 1473, 1474, 1476, 1485, 1488, 1490, 1500], "200": [700, 804, 925, 1301, 1387, 1469, 1476], "2000": [113, 1456], "2000000000": 1356, "2002": 1445, "2007": 1047, "2008": 701, "2011": 1431, "2013": [1350, 1467], "2015": [1350, 1467], "2017": [1342, 1467, 1503], "2018": [1354, 1465, 1473], "2019": [1023, 1366, 1384], "20199584960938": 1476, "202": 1469, "2020": [1377, 1453, 1454, 1496], "2021": [1365, 1377, 1456], "2022": [1365, 1371, 1442, 1444], "2023": [1365, 1369, 1371, 1381, 1387, 1440, 1445, 1446, 1447, 1448, 1455], "2023_07_20_18_29_30": 1381, "2024": [1365, 1371, 1384, 1444, 1450, 1465], "20241016": 1366, "2025": [1365, 1367, 1368, 1371, 1385, 1452], "202579": 1414, "2026": [1354, 1365, 1458], "2027": 1365, "2028": 1365, "20282": 1354, "2028872": 1414, "203": [936, 985], "2032348584": 1498, "20385": 1354, "2047218": 522, "2048": [397, 404, 783, 1461, 1487], "2048x2048": 397, "20550": 1354, "20582580566406": 1476, "2069": 1449, "207": [876, 1476], "20773315429688": 1476, "2085143622": 1498, "209": 1485, "2091": 1354, "20997": 1371, "20th": 1371, "20x": 804, "21": [643, 649, 697, 699, 733, 781, 816, 887, 920, 946, 948, 1074, 1297, 1298, 1333, 1342, 1344, 1371, 1381, 1382, 1387, 1461, 1465, 1475, 1485, 1500], "210": [813, 954, 1476], "21000001": 1371, "2101850145785": 1387, "2103": 501, "2107": 1354, "21089035272598267": 1498, "21116": 1354, "2112": 553, "212": 876, "2129": 1354, "213": 1476, "2135928312": 1498, "21396": 1354, "21403": 1354, "2141": 1002, "21411895751953": 1476, "2143988866626": 1387, "21467624978306993": 1348, "2147483648": 1492, "2155094905": 1390, "216": 621, "2168787041": 1498, "217285": 1402, "21773": 1478, "21827": 1354, "21862": 1478, "219": [981, 1485], "21st": 1371, "21tb": 1490, "22": [435, 436, 670, 683, 687, 694, 739, 740, 792, 799, 833, 920, 968, 987, 1072, 1107, 1387, 1429, 1461, 1467, 1468, 1474, 1485, 1500], "220": 1476, "2206": [305, 306], "22084": 1478, "221559": 1490, "22275": 1478, "22279": 1478, "22310": 1478, "22348": 1347, "22348022": 1347, "224": 876, "2247449": [788, 1080], "22480": 1478, "225": 1459, "22552": 1478, "2255967221336": 1387, "22593": 1478, "22662": 1347, "22662354": 1347, "2273819758": 1498, "22746": 1478, "2279": 1371, "22936": 1354, "2296542172": 1382, "22990417480469": 1476, "22e": 701, "22m": [1342, 1378, 1441, 1459, 1460, 1462, 1463, 1466, 1474, 1475], "22ma": 1441, "22mb": [1342, 1378, 1441, 1459, 1460, 1463], "22mc": [1441, 1474, 1475], "22md": [1378, 1441, 1466], "22me": [1378, 1441], "22mf": [1460, 1474], "22mg": 1378, "22mj": 1441, "22mk": [1441, 1462], "22mr": 1441, "23": [687, 733, 968, 1072, 1073, 1094, 1382, 1387, 1461, 1464, 1500], "230": [985, 1476], "2305": 508, "23059082": 1347, "2306": 1347, "2316": 1371, "2318344116211": 1476, "233": [985, 1347], "2333": 1371, "2338114": 529, "23466491699219": 1476, "23489487": 1475, "2356": 1476, "23590": 1354, "2359891e": 1120, "236": 1347, "2362978080912": 1387, "237": 1347, "238": 1347, "2382": 1354, "23876953": 1347, "23877": 1347, "23881": 1354, "239": [579, 985, 1347], "2399811678": 1498, "23j": [697, 699], "24": [435, 436, 501, 570, 648, 687, 729, 781, 782, 792, 813, 816, 851, 862, 896, 954, 967, 1073, 1074, 1109, 1359, 1365, 1371, 1378, 1382, 1387, 1445, 1455, 1461, 1464, 1474, 1500], "240": [985, 1347, 1382, 1468, 1476, 1492], "2401303": 1490, "2408447265625": 1476, "2409145495443": 1387, "241": 1347, "24136352539062": 1476, "24190766": [1342, 1467], "242": 1347, "2422663986": 1475, "243": [570, 831, 1347, 1476], "24359893798828": 1476, "244": [1002, 1347, 1462], "2443250962": 1498, "2447": 1354, "245": [1347, 1462], "2452652": 1086, "246": [1347, 1462], "24663": 1354, "24692321": 1490, "247": [1347, 1462], "24748": 296, "248": [1347, 1462], "2481403966": 1498, "24841607": 1490, "24843": 1354, "2484405": [1342, 1463], "249": 1347, "24910": 1381, "2495741e": 528, "24998187": 1475, "25": [567, 668, 688, 690, 692, 693, 699, 712, 714, 739, 740, 797, 819, 824, 857, 859, 862, 877, 879, 886, 894, 901, 908, 940, 943, 946, 987, 1002, 1072, 1088, 1089, 1094, 1342, 1344, 1346, 1365, 1366, 1377, 1384, 1387, 1454, 1456, 1459, 1461, 1463, 1464, 1468, 1471, 1475, 1500], "250": [1347, 1476], "25000003": [797, 1089], "2501": 1354, "25076293945312": 1476, "2509837": 1490, "251": [763, 1347], "2512": 1354, "2515389": 1454, "2516396728": 1498, "252": [573, 763, 1347], "25214": 1354, "2524413": 1332, "25265405": [1350, 1467], "253": [763, 1347], "25328063964844": 1476, "25329": 1354, "2537": 1354, "254": [763, 1347, 1462], "2547188": 1083, "255": [763, 985, 1347, 1462], "2551253": 1466, "25516": [1345, 1458], "2556391": 67, "256": [157, 166, 296, 1110, 1114, 1115, 1346, 1347, 1381, 1382, 1387, 1471, 1480, 1484, 1487, 1492, 1493, 1494, 1503], "25606": 1354, "2562755208": 1498, "2566": 1354, "257": 1347, "25773212": 1475, "258": [1347, 1462], "259": 1347, "2591": 1354, "25955": 1354, "25956": 1354, "2596": 1354, "2597": 1354, "2598922": [1350, 1467], "25j": 688, "26": [435, 641, 664, 683, 697, 699, 813, 831, 861, 954, 985, 1073, 1365, 1366, 1377, 1387, 1404, 1460, 1461, 1465, 1474, 1500], "260": 1476, "2602819927345": 1387, "26075": 1476, "261": 1347, "262": 1347, "2626": 239, "2626558620": 1498, "263": [1431, 1458], "2635": 1354, "2640": 1103, "26480": 1354, "265": 1347, "2656": 1354, "266066": 746, "2665": 1354, "26651": 1347, "26651001": 1347, "26666667": 1002, "267": [920, 1347], "268": 1347, "2681944": 495, "2684": 1354, "269": 1347, "26902770996094": 1476, "2696932952": 1498, "26978672": 1376, "269\u00b5": 1347, "26th": 1371, "27": [621, 641, 643, 731, 894, 920, 936, 981, 986, 1342, 1366, 1374, 1377, 1387, 1461, 1463, 1467, 1468, 1500], "270": [1390, 1476], "2709361018": 1498, "271": 1347, "2719": 1354, "2724": 1354, "2726": 1354, "2755": 1354, "275552121": 1498, "2759011858": 1498, "2760": 1354, "27744": 296, "27751946": 1490, "277685388252": 1387, "27793884277344": 1476, "27858758": 519, "27873": 1354, "2789248": 523, "279": 1087, "2794155": 1470, "2795851": 746, "27j": 685, "27th": [1354, 1371], "28": [113, 435, 436, 501, 641, 695, 781, 799, 833, 943, 1002, 1073, 1109, 1374, 1387, 1461, 1465, 1473, 1474, 1494, 1500], "280": 1476, "2809": 1354, "2817": 1354, "2819775617064": 1387, "28224": [1470, 1500], "2822400161197344": 1348, "2823738293221": 1387, "283185307179586": 985, "2844449444": 1390, "28661": 1458, "2867": 1354, "28772": 1476, "2887063": 1490, "2887650464874": 1387, "28910828": 1347, "28911": 1347, "28912354": 1347, "2891506774": 1498, "28958129882812": 1476, "2896": 1354, "2896855": 523, "28th": 1371, "29": [570, 664, 671, 934, 936, 1002, 1073, 1096, 1344, 1351, 1374, 1378, 1387, 1390, 1444, 1461, 1500], "290": 1476, "2906": 1354, "292": 574, "29255": 296, "29335397": 1414, "2934014": 1414, "29434": 1354, "2943625357": 1498, "29552022": 248, "2956679937": 1459, "29570296": 1498, "296": 745, "2960": 1492, "296167901": 1498, "29679": 1356, "29684": 1385, "297902587": 1498, "298188": 530, "29852": 529, "29878938": 1414, "29893667": 1414, "2993": 1354, "2997544": 1500, "29999995": 845, "29j": [688, 690], "2c": [1281, 1282], "2c8cb15c6a2caadaa98af51df6fe78a8155b8471cb3dd7b9836038e0d3657fb4": 1366, "2d": [179, 237, 292, 343, 344, 435, 570, 586, 592, 600, 601, 625, 627, 632, 654, 658, 659, 667, 739, 741, 742, 743, 744, 754, 804, 817, 840, 891, 902, 957, 989, 991, 992, 993, 1077, 1081, 1106, 1107, 1108, 1109, 1116, 1117, 1118, 1209, 1354, 1369, 1374, 1402, 1434, 1445, 1461, 1469, 1474, 1475, 1484, 1488, 1489], "2e": [678, 823], "2e6": [564, 764], "2e7": 764, "2f": [934, 1465, 1471, 1473], "2f1": 1142, "2gb": 1356, "2j": [567, 574, 576, 687, 697, 699, 765, 766, 774, 775, 794, 796, 866, 883, 889, 892, 907, 936, 939, 967, 988, 989, 1102], "2k": 1492, "2m": 1492, "2n": [1148, 1162], "2nd": [1342, 1350, 1415, 1463, 1467, 1485], "2x": [1342, 1350, 1489, 1494], "2x2": [501, 640, 645, 747, 834, 1082, 1097, 1342, 1467, 1469, 1494], "2x2x2": 834, "2x32": [280, 1424], "2x4": [501, 1471], "2xf32": 1390, "2xindex": 1378, "3": [10, 61, 72, 73, 74, 75, 94, 97, 112, 113, 118, 136, 199, 239, 240, 242, 248, 290, 291, 292, 293, 295, 296, 303, 304, 311, 315, 328, 331, 335, 337, 343, 344, 345, 362, 363, 364, 365, 366, 367, 380, 387, 403, 415, 423, 425, 426, 427, 435, 436, 437, 449, 452, 459, 460, 473, 474, 481, 486, 495, 501, 503, 504, 508, 510, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 540, 543, 544, 559, 564, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 595, 599, 600, 601, 602, 604, 606, 610, 612, 614, 616, 617, 618, 619, 621, 623, 625, 626, 627, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 702, 703, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 721, 723, 725, 726, 727, 728, 729, 731, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 747, 749, 750, 751, 753, 754, 761, 762, 763, 764, 768, 769, 778, 779, 781, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 816, 817, 818, 819, 821, 822, 824, 825, 826, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 845, 846, 848, 849, 850, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 896, 898, 899, 902, 903, 905, 906, 907, 909, 910, 911, 912, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 980, 982, 984, 986, 987, 988, 989, 990, 991, 992, 993, 995, 996, 998, 999, 1000, 1001, 1002, 1016, 1059, 1064, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1119, 1120, 1148, 1245, 1265, 1266, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1301, 1304, 1305, 1306, 1307, 1308, 1312, 1326, 1328, 1332, 1333, 1342, 1344, 1345, 1346, 1347, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1370, 1371, 1374, 1376, 1378, 1381, 1382, 1384, 1390, 1403, 1414, 1415, 1423, 1424, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1449, 1450, 1451, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1502, 1503, 1504, 1506], "30": [449, 625, 663, 669, 670, 687, 715, 739, 740, 753, 779, 840, 847, 877, 881, 896, 899, 900, 925, 1002, 1076, 1107, 1120, 1148, 1265, 1342, 1350, 1371, 1387, 1459, 1461, 1462, 1464, 1467, 1469, 1473, 1476, 1485, 1490, 1500], "300": [98, 925, 1301, 1395, 1476], "3000": 113, "30000": 804, "30000007": 663, "300394253605": 1387, "3004413": 1475, "3005757": [1470, 1500], "3006": 1354, "3006744": [1350, 1467], "30085585": 519, "3012": 1402, "3017654": [1350, 1467], "30390930175781": 1476, "3042": 1402, "3049883393633": 1387, "305012020407": 1387, "306": [576, 1359], "3063618431178": 1387, "306j": 575, "307": 1359, "3072": 783, "308": [643, 1359], "309": 1485, "30j": 1469, "30mb": [1367, 1487], "30x": 1377, "31": [606, 637, 641, 702, 831, 920, 1002, 1073, 1074, 1266, 1342, 1356, 1371, 1374, 1378, 1461, 1485, 1496, 1500], "310": 1476, "3101": 1354, "3107": 1444, "312": 576, "3130127722537": 1387, "3132": 1354, "3139732": [1470, 1500], "3139825610": 1498, "31447992": [1342, 1467], "31447995": [1342, 1467], "3151": 1354, "3155028": 1466, "3157725e": 528, "3158187866211": 1476, "3158517": 1490, "3161423260563": 1387, "317": [574, 576, 643], "3176189976": 1498, "317766": 290, "31779479980469": 1476, "3186499464459": 1387, "319": 1485, "3192392114": 1498, "31j": [697, 699], "31mvalueerror": 1464, "32": [113, 143, 157, 183, 348, 435, 436, 501, 544, 606, 641, 721, 781, 784, 793, 795, 799, 817, 831, 833, 913, 920, 985, 989, 1002, 1017, 1032, 1036, 1037, 1052, 1107, 1366, 1369, 1371, 1374, 1377, 1378, 1381, 1402, 1424, 1428, 1445, 1455, 1456, 1461, 1470, 1473, 1474, 1484, 1485, 1489, 1490, 1493, 1498, 1500, 1503], "320": 1476, "3202401494": 1498, "3232553940": 1498, "324": [671, 1456], "325": 745, "32726777": 1500, "3275395289": 1390, "328": 985, "3296283": 1490, "32bit": [91, 280, 1356], "32m": 1378, "32mbuild": 1378, "32mlink": 1378, "33": [567, 688, 689, 690, 693, 694, 695, 697, 699, 813, 862, 954, 968, 987, 1002, 1071, 1266, 1344, 1471], "330": 1476, "3307": 1492, "3313980102539": 1476, "3318": 1354, "332": 1462, "33229148": 1455, "333": [1090, 1462], "333332": 807, "33333257": 807, "33333272": 807, "33333333": 1002, "3333333333333": 1492, "33333334": [435, 841, 872, 967, 1002, 1088], "3333334": 426, "3333334j": 967, "33398": 1347, "33398438": 1347, "334": 1462, "3340": 670, "335": 1462, "336": 1462, "337": 1347, "3370": [1354, 1454], "33700562": 1347, "3371865": 1490, "3372": 1085, "3375": [1342, 1463], "337614300": 1498, "3377": 1371, "33905897": 1376, "33j": [682, 685, 690, 696, 699], "34": [623, 697, 699, 702, 891, 1002, 1071, 1342, 1378, 1441, 1459, 1460, 1462, 1463, 1466, 1474, 1475, 1492], "340": 1476, "3402096563": 1359, "341": 1492, "342": 681, "343": [1462, 1498], "3432054210": 1498, "344": 1462, "345": [1002, 1459, 1462], "3453199728248": 1387, "346": 1462, "347": [579, 1462], "348": 1002, "349": [1459, 1464], "3499": 1023, "35": [641, 887, 1002, 1093, 1096, 1307, 1467, 1469], "350": 1476, "3508": 1023, "351": 1464, "3518": 1354, "3518946594": 1498, "3524047": 1490, "3530655617": 1498, "35342407226562": 1476, "35355338": [1342, 1463], "3539885757353": 1387, "3540880311": 1378, "3545703099": 1498, "3562": 1354, "3587": 1354, "3589": 1354, "3593563": 1490, "35m": [1342, 1378, 1441, 1459, 1460, 1462, 1463, 1466, 1474, 1475], "36": [250, 251, 435, 436, 567, 578, 699, 782, 943, 1002, 1071, 1072, 1307, 1365, 1473, 1474], "360": [858, 985, 1347, 1476], "3608": 1354, "36088037": 1490, "361": 1087, "3610": 1354, "3611": 1354, "3618": 1354, "361919": [811, 1101], "3623195": 1475, "363": 1492, "3641": 1492, "3643": 1354, "3653": 1354, "3657": 1354, "366": 570, "3664": 1354, "36703771352767944": 1475, "36853": 1347, "36853027": 1347, "36981964111328": 1476, "36j": [696, 699], "36th": 1023, "37": [801, 887, 1072, 1081, 1096, 1344, 1374, 1450], "370": 1476, "3701772": 1086, "3703": 1354, "3726": 1354, "3728": 1354, "3729": 1354, "3733": 1354, "3735": 1354, "3738": 1354, "3739224": 1414, "3740134": 1414, "375": 854, "3751": 1354, "37591552734375": 1476, "3769736790": [1342, 1467], "377": 1492, "3777": 1354, "3778": 1354, "378": 831, "37j": 699, "38": [664, 670, 697, 699, 835, 848, 1073, 1096, 1367, 1374, 1402, 1500], "380": 1476, "3800": 1354, "3803": 1354, "3806145045": 1498, "3807": 1492, "3808b5023c3d": 1468, "3812": 1354, "3812477442": 1498, "383": 1492, "3836": 1354, "3841858e": [1120, 1490], "3845": 1354, "38459777832031": 1476, "3854395562": 1390, "386": 985, "3865": 670, "3869": 1354, "387": 1492, "3873": 1354, "3874": 1354, "3878": 1354, "3879932251": 1498, "389056": 1475, "38916": 1347, "38916016": 1347, "38941833": 248, "38j": [697, 699], "39": [678, 733, 831, 1073, 1342, 1350, 1374, 1378, 1441, 1459, 1460, 1462, 1463, 1466, 1467, 1474, 1475], "390": 1476, "3904844661": 1498, "3914": 1354, "393": 1469, "39350128173828": 1476, "3948981463909149": 1498, "396": 1469, "397": 1469, "3974": 112, "39764675": 1414, "39774987": 1414, "39904642": 1455, "3992505346": 1498, "39j": 683, "39m": [1342, 1378, 1441, 1459, 1460, 1462, 1463, 1466, 1474, 1475], "3d": [519, 570, 601, 790, 1152, 1153, 1374, 1484, 1485], "3dkh": 1503, "3e6": [564, 764], "3e7": 564, "3f": 1494, "3j": [567, 576, 637, 641, 687, 697, 699, 749, 753, 770, 939, 943, 967, 988, 989, 1342, 1467], "3rd": [1342, 1371, 1463], "3x": [1342, 1350, 1403, 1467], "3x3": [680, 747, 797, 810, 1089, 1090, 1094, 1097, 1098, 1099], "4": [10, 61, 72, 75, 97, 136, 157, 199, 239, 242, 248, 250, 251, 277, 282, 283, 293, 295, 296, 303, 304, 311, 315, 316, 328, 335, 337, 362, 363, 364, 365, 366, 367, 387, 403, 415, 423, 425, 426, 427, 435, 436, 437, 449, 452, 459, 460, 473, 474, 486, 495, 500, 501, 504, 508, 526, 528, 529, 544, 551, 553, 562, 567, 569, 570, 571, 572, 573, 574, 576, 579, 580, 581, 582, 583, 586, 587, 588, 590, 592, 599, 600, 601, 602, 603, 604, 605, 610, 612, 613, 614, 617, 618, 619, 621, 623, 625, 626, 632, 637, 638, 639, 641, 642, 643, 646, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 663, 664, 666, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 702, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 727, 728, 731, 733, 734, 735, 736, 737, 739, 740, 741, 743, 745, 746, 749, 750, 753, 754, 761, 762, 763, 769, 780, 781, 783, 784, 785, 786, 787, 791, 792, 793, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 866, 869, 872, 873, 874, 875, 877, 878, 879, 880, 881, 883, 884, 886, 887, 888, 890, 891, 892, 894, 896, 898, 899, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 921, 922, 923, 924, 925, 927, 928, 933, 934, 936, 938, 939, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 959, 960, 962, 963, 964, 966, 967, 969, 975, 976, 977, 978, 979, 980, 982, 984, 986, 987, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1001, 1002, 1016, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1078, 1079, 1081, 1083, 1084, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1109, 1111, 1113, 1143, 1145, 1154, 1162, 1245, 1266, 1291, 1293, 1297, 1298, 1299, 1300, 1301, 1307, 1308, 1309, 1310, 1326, 1328, 1333, 1342, 1344, 1346, 1347, 1349, 1351, 1356, 1359, 1360, 1361, 1364, 1366, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1390, 1402, 1404, 1411, 1414, 1415, 1424, 1428, 1431, 1434, 1440, 1441, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1497, 1499, 1500, 1503, 1505, 1506], "40": [643, 779, 877, 881, 900, 925, 990, 1076, 1342, 1374, 1402, 1467, 1473, 1474, 1476, 1483], "400": [925, 1301, 1469, 1476], "4000": 1456, "4000001": 845, "40015721": 1451, "4003078": 1376, "4008": [1453, 1458], "4012985e": 940, "4028235e": 848, "40316772460938": 1476, "403243": 1475, "4039": 1453, "404": 1465, "4042607538": 1498, "405": 1402, "406": 1390, "4075895579": 1498, "40774566": 519, "408": 671, "4087536357031": 1387, "4096": [783, 1381, 1461, 1487, 1490, 1492], "41": [675, 695, 733, 860, 1071, 1073, 1266, 1344, 1354, 1366], "410": 1476, "4101": 1354, "410288286": 1382, "41094971": 1347, "41095": 1347, "4130025": [808, 1095], "41358947753906": 1476, "4142135": [788, 1080, 1342, 1463], "4146728515625": 1476, "41614684": [1342, 1348, 1463], "4163033": 1490, "41666582": 807, "41770416": 520, "4190113959127": 1387, "4194957": 1490, "4196": 1354, "41972351074219": 1476, "42": [449, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 586, 592, 623, 714, 720, 742, 968, 1084, 1295, 1367, 1371, 1385, 1461, 1474, 1483, 1498, 1502], "420": 1476, "4209507": 1414, "4212713": 1414, "4223280707176": 1387, "4230705069": 1382, "42419338": 1500, "4263792037783": 1387, "42640156": [808, 1095], "4273176064": 1498, "42807006835938": 1476, "4287": 1402, "4294967289": 866, "4294967291": 866, "4294967292": 892, "4294967295": 1354, "4297j": 1402, "42j": [697, 699], "43": [697, 699, 733, 958, 1071, 1073, 1075, 1295, 1342, 1381, 1475, 1498], "430": 1476, "432": 1354, "4320": 896, "4323065": 1498, "433146": [1350, 1467], "43322435": [808, 1095], "43360388": 1097, "434": 745, "4344584": 1475, "437153685251": 1387, "4375": 886, "43887842": 720, "439": 1475, "4390": 670, "43j": 699, "44": [694, 697, 699, 1073, 1359, 1464, 1474, 1492], "440": [1457, 1476], "44005057": 1376, "4410": 1458, "44116902": [1470, 1500], "44122": 1347, "44122314": 1347, "4427": 1354, "4431417": 1490, "444": 576, "44430563": 1414, "44436368": 1414, "449491": 1097, "44j": [643, 688], "45": [421, 570, 699, 903, 940, 1073, 1120, 1344, 1346, 1359, 1365, 1462, 1467, 1506], "450": 1476, "4502": 1402, "4520254": 526, "454": [831, 1460, 1464], "455": 1460, "45591735839844": 1476, "456": 1460, "4564": 1354, "4567": 501, "457": 1460, "458": 1460, "459539105": 1390, "45j": [697, 699], "46": [685, 733, 990, 1359, 1471, 1494], "460": [1476, 1498], "4608": 1354, "4610935": 701, "4636": 1354, "4650": 1354, "4651": 1354, "4657": 501, "4662397": 1490, "46700746": 524, "46713185": 1498, "4675": 501, "468": 985, "4692": 1492, "469475": 1464, "46b5594773cb": 1468, "46j": [683, 697], "47": [697, 699, 702, 817, 887, 946, 948, 989, 1464], "470": 1476, "4725": 1452, "4744": 1354, "4749839305877686": 1475, "4776451856": 1374, "4776979920": 1374, "478": 1381, "48": [702, 851, 934, 1390, 1500], "480": [290, 1390, 1476], "481": 670, "48327": 239, "484": [1302, 1444], "485": 1377, "48648298": 1454, "486833": [805, 818], "48737738": [808, 1095], "4877": 1354, "49": [699, 714, 733, 799, 833, 981, 1002, 1342, 1350, 1378, 1464, 1467, 1471, 1494], "490": 1476, "4903": 1354, "4915": 670, "493": [1002, 1087], "4937": 1402, "496": 1500, "4963": 1402, "4971": 1354, "4d": [508, 519], "4e": 589, "4f": 1492, "4j": [559, 575, 675, 687, 753, 768, 771, 841, 866, 872, 892, 930, 939, 1342, 1467], "4kbi": 1489, "4x": 1350, "4x2": 501, "4x32": 1424, "4x4": [501, 1087, 1494], "4x8x1": 1495, "5": [0, 10, 97, 98, 128, 129, 199, 238, 239, 244, 291, 292, 293, 295, 303, 311, 315, 328, 362, 363, 364, 366, 367, 387, 423, 426, 435, 436, 449, 452, 456, 459, 460, 473, 474, 494, 495, 501, 504, 508, 517, 526, 528, 529, 530, 541, 543, 544, 554, 559, 569, 570, 571, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 586, 590, 592, 595, 602, 604, 606, 614, 617, 619, 621, 623, 625, 626, 632, 636, 637, 639, 641, 642, 643, 644, 646, 648, 649, 650, 651, 654, 655, 657, 659, 660, 661, 663, 664, 666, 669, 670, 671, 674, 676, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 702, 703, 705, 712, 714, 715, 716, 717, 718, 719, 723, 725, 729, 731, 733, 734, 735, 738, 739, 740, 741, 743, 745, 749, 753, 754, 761, 762, 763, 769, 772, 773, 780, 781, 782, 783, 784, 785, 786, 787, 792, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 811, 812, 813, 816, 817, 818, 819, 821, 823, 824, 825, 826, 831, 833, 834, 835, 836, 837, 838, 839, 842, 843, 845, 846, 849, 850, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 866, 868, 869, 875, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 896, 898, 899, 901, 902, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 919, 920, 922, 923, 924, 927, 928, 931, 934, 936, 938, 939, 940, 941, 943, 945, 946, 948, 949, 950, 951, 952, 953, 954, 956, 957, 958, 960, 962, 964, 966, 967, 968, 969, 975, 976, 981, 982, 984, 987, 989, 990, 992, 994, 998, 1001, 1002, 1019, 1047, 1052, 1064, 1066, 1067, 1068, 1069, 1070, 1072, 1075, 1076, 1081, 1082, 1084, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1103, 1104, 1107, 1108, 1111, 1113, 1120, 1148, 1265, 1266, 1291, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1308, 1328, 1332, 1333, 1342, 1344, 1346, 1349, 1351, 1356, 1359, 1360, 1361, 1364, 1366, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1387, 1390, 1403, 1411, 1414, 1415, 1423, 1424, 1428, 1441, 1445, 1447, 1450, 1451, 1452, 1454, 1455, 1456, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1480, 1485, 1488, 1490, 1492, 1493, 1497, 1499, 1500, 1502, 1503, 1505, 1506], "50": [305, 306, 671, 731, 779, 819, 831, 835, 857, 879, 900, 1051, 1076, 1347, 1366, 1378, 1462, 1469, 1471, 1474, 1476, 1503], "500": [1301, 1469, 1476], "5000": [1466, 1496], "500e": 671, "50197446": 1500, "5022564": 530, "503": 1384, "50350785": 521, "5048": 1492, "5066295": 1097, "5069753": 1414, "5071844": 1414, "508031": 812, "509j": 579, "50mb": 1487, "51": [664, 733, 816, 1347, 1464], "510": 1476, "5117505070573": 1387, "512": [831, 1465, 1473, 1480, 1484, 1487, 1488, 1490, 1492, 1493, 1494, 1503], "513": 985, "51350402832031": 1476, "513605": [1470, 1500], "51512145996094": 1476, "5156": 1354, "516885716": 1371, "5182": 1354, "51j": [697, 699], "52": [701, 831, 1100, 1342, 1350, 1467, 1474, 1500], "520": 1476, "520033493": 1371, "521": 577, "5224": 1354, "522672": 1414, "5227761": 1414, "524": 575, "5243": 1354, "5244": 1354, "525": 1384, "525117": 1500, "529": 574, "529106145": 1371, "52j": [697, 699], "53": [701, 891, 920, 946, 1072, 1266, 1459, 1464, 1465], "530": 1476, "5309029e": 1120, "532": [577, 920], "53225708007812": 1476, "5331743016213": 1387, "5339818238837": 1387, "535548": 1490, "536": 1387, "53674316e": 678, "536743e": 823, "537": 1387, "53887904": 519, "54": [623, 670, 675, 801, 1047, 1072, 1100, 1346, 1371, 1496, 1500], "540": 1476, "5403023": [1342, 1346, 1371, 1463], "54030231": 1348, "541": 1492, "5418116": 1500, "5423026j": [1342, 1467], "54248166": 1490, "543": 643, "543625": 1376, "543860509": 1359, "54485": 296, "547": 831, "547482522": 1371, "548": 643, "5488135": 1498, "5488135039273248": 1498, "549": 579, "549973693": 1371, "55": [985, 1071, 1342, 1473, 1496], "550": [1475, 1476], "5505103": 1097, "551600": 1381, "5516644": 520, "551741": 1381, "55526584": 1086, "55817413330078": 1476, "559373j": [1342, 1467], "559451466": 1378, "55j": 688, "56": [449, 694, 697, 699, 862, 1071, 1475, 1500], "560": 1476, "5615997314453": 1476, "5625": 886, "5627": 1354, "56293887": 525, "567": 985, "569184356": 1498, "57": [567, 578, 697, 1071, 1072, 1073, 1471, 1473, 1475], "570": [1387, 1476], "5707963e": 1120, "5707964": [652, 1119], "571": [573, 575, 577], "571j": [576, 579], "5723649": 1377, "572365": 1377, "57279968261719": 1476, "573": 1381, "573858283": 1371, "5746": 1354, "576": 1387, "5767248": 1376, "5768": 1354, "577": [952, 1087, 1387], "5776": 1492, "58": [689, 946, 1072, 1266, 1467, 1474], "580": 1476, "584931": 1466, "58665067": 1454, "5868": 1354, "587": [831, 1387], "588": 831, "58j": [688, 689, 690, 697, 699], "59": [567, 623, 688, 1471, 1496], "590": 1476, "591674": 1414, "592": 1047, "5930698237612": 1387, "59403396": 1475, "594215549": 1498, "59566": 296, "5982": [128, 129], "5984": 1492, "59848": 1347, "59848022": 1347, "5989196": 1500, "59993696": 1490, "5_spmd": 1378, "5d": 519, "5e": [589, 591], "5j": [567, 636, 637, 641, 687, 688, 692, 699, 749, 915, 930, 953, 967, 1096, 1113, 1342, 1467], "6": [61, 72, 97, 136, 238, 240, 244, 290, 303, 311, 315, 335, 362, 363, 364, 365, 366, 367, 387, 423, 435, 436, 449, 452, 473, 474, 481, 486, 495, 501, 504, 513, 542, 544, 552, 559, 569, 570, 571, 572, 582, 583, 586, 589, 590, 592, 602, 604, 614, 619, 621, 625, 626, 632, 638, 639, 641, 642, 646, 648, 649, 650, 651, 654, 655, 657, 659, 660, 663, 664, 666, 669, 670, 674, 675, 678, 679, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 703, 705, 715, 716, 717, 723, 725, 728, 729, 734, 735, 740, 741, 742, 743, 745, 754, 762, 769, 770, 771, 781, 782, 784, 785, 786, 792, 798, 799, 800, 803, 806, 807, 808, 811, 812, 813, 816, 817, 819, 820, 823, 825, 831, 833, 834, 835, 836, 837, 838, 839, 842, 843, 845, 851, 852, 853, 854, 855, 857, 859, 860, 861, 862, 866, 868, 869, 875, 877, 878, 879, 880, 883, 884, 885, 887, 888, 889, 890, 892, 894, 896, 898, 899, 901, 902, 905, 906, 911, 912, 916, 919, 920, 922, 923, 927, 928, 930, 934, 937, 938, 939, 941, 943, 945, 948, 950, 951, 952, 954, 956, 960, 962, 964, 966, 967, 968, 969, 975, 982, 984, 985, 987, 989, 990, 992, 994, 998, 999, 1000, 1002, 1070, 1071, 1072, 1076, 1090, 1093, 1095, 1097, 1101, 1102, 1103, 1106, 1111, 1112, 1162, 1295, 1297, 1298, 1300, 1309, 1333, 1342, 1346, 1348, 1350, 1359, 1360, 1361, 1366, 1370, 1371, 1374, 1377, 1378, 1381, 1382, 1403, 1411, 1414, 1415, 1424, 1445, 1451, 1452, 1454, 1456, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1470, 1471, 1473, 1474, 1475, 1483, 1485, 1487, 1488, 1489, 1492, 1497, 1499, 1500, 1501, 1503, 1505, 1506], "60": [652, 664, 670, 779, 782, 900, 1076, 1384, 1469, 1474, 1476, 1500], "600": 1476, "60000": 1473, "600000": 804, "6002": 1377, "6006": 1496, "60130310058594": 1476, "6014": 1354, "6022964": 529, "60237884521484": 1476, "6027633760716439": 1498, "60276338": 1498, "6028657": 520, "604": 1047, "6047": 1354, "6050892": 519, "60544": 1476, "60576403": 1498, "6057640314102173": 1498, "606": 1371, "60663575": 1376, "607": 1371, "6085": 1354, "61": [623, 664, 695, 697, 699, 714, 733, 780, 831, 887, 1347, 1464], "610": 1476, "610491522": 1498, "6112": 1354, "612": [1444, 1460], "6129": 1354, "6129413": 526, "613": [1087, 1460], "6136": 1354, "614": 1460, "61430776": 1332, "6145": 1354, "6156273667873": 1387, "6165": 1354, "61677957": 524, "619b39acbaac": 1462, "62": [623, 643, 664, 670, 696, 733, 1071, 1492], "620": 1476, "6209": [293, 295], "6211": 1492, "623": 831, "624": 1498, "62452": 296, "62471": 1347, "62471008": 1347, "625": [719, 783], "62597656": 1347, "62598": 1347, "6262": 1354, "627": 936, "6274805": 1490, "628": 1460, "6288222": 1414, "62893456": 1414, "629": 1460, "63": [613, 675, 678], "630": [1460, 1476], "631": 1460, "6310087": 1414, "6310593": 1414, "63115686": 526, "632": 1460, "634": [574, 575], "6343j": 1402, "634j": 576, "63500065": [808, 1095], "635532": 1414, "635j": 1402, "636": 1449, "6360": 1354, "6361": 1492, "6369617": 1376, "637": [934, 1460], "638": 1460, "6393332": 521, "6396022": [808, 1095], "63960224": [808, 1095], "63j": [697, 699], "64": [157, 242, 305, 306, 348, 543, 544, 567, 606, 621, 701, 721, 784, 793, 795, 799, 833, 894, 897, 913, 927, 986, 1017, 1037, 1076, 1134, 1346, 1356, 1357, 1366, 1369, 1377, 1385, 1456, 1462, 1483, 1484, 1490, 1500, 1503, 1505], "640": [1460, 1476], "646": 1444, "648": 1494, "64862": 1347, "64862061": 1347, "649": 681, "649452": 1402, "65": [570, 1072, 1487], "650": 1476, "6501": 1354, "6507808565617": 1387, "651": 670, "6532": 1354, "6534991": [808, 1095], "654": 985, "6545286": 1490, "6545715": 720, "6561": 296, "6569": 1354, "6569866": 1470, "657": 831, "6572": 1354, "65979004": 1347, "6598": 1347, "66": [813, 954, 985, 1342, 1465, 1487], "660": 1476, "6604483": 522, "6621": 1492, "6666657": 807, "6666666": [967, 1078, 1079, 1091, 1092], "66666666666666": 1492, "6666667": [426, 841, 872, 967, 1091, 1092], "6668043e": 1120, "667": 1090, "668": 1492, "66j": 688, "67": [296, 603, 688, 689, 690, 693, 694, 695, 697, 699, 862, 887, 987, 1266, 1342, 1459, 1460], "670": 1476, "670236": 1414, "6702557143142": 1387, "67060554": 1414, "6707332269023": 1387, "6717": 1354, "6720": 1354, "6732632423543772848170429916717": 545, "6733112": 1500, "67402434": 524, "674587": 1490, "6756169e": 528, "6760131792959": 1387, "676704": 495, "676747479": 1498, "6777936517823": 1387, "67948914": 1347, "67949": 1347, "68": [77, 78, 80, 567, 702, 1378, 1500], "680": 1476, "6827": 1354, "68294197": 1348, "682942": [1470, 1500], "685": 1354, "6865721": 521, "6866574": 526, "6875": 783, "6883": 1354, "68864440917969": 1476, "6890297": [1350, 1467], "6892": 1354, "68939": 1347, "68939209": 1347, "6899": 1455, "6899995": 1086, "69": [567, 876, 1467], "690": 1476, "6900178": [1350, 1467], "6902338": 1490, "691938": 530, "69244087": 1500, "6937828": 1402, "6947": 1354, "695": 1302, "6950": 1354, "6956": 1354, "696824676": 1498, "69735717773438": 1476, "6978912984252": 1387, "6999998": 845, "6j": [682, 687, 699, 866, 892, 902, 942, 967], "6x": [1350, 1403, 1494], "7": [97, 303, 315, 362, 363, 364, 387, 435, 436, 449, 473, 474, 501, 504, 508, 518, 528, 530, 569, 571, 574, 582, 586, 589, 590, 592, 602, 606, 625, 626, 632, 636, 637, 643, 654, 655, 657, 659, 660, 663, 664, 666, 669, 670, 671, 674, 682, 683, 685, 687, 688, 689, 692, 694, 695, 696, 697, 699, 702, 705, 712, 715, 716, 717, 734, 735, 738, 739, 740, 743, 761, 769, 781, 785, 786, 792, 800, 803, 805, 808, 816, 818, 819, 831, 834, 835, 836, 837, 839, 842, 843, 845, 852, 853, 854, 855, 860, 861, 866, 868, 869, 876, 878, 883, 884, 886, 887, 890, 891, 892, 898, 899, 901, 906, 910, 912, 915, 916, 919, 922, 923, 924, 930, 941, 946, 947, 951, 956, 958, 960, 962, 964, 966, 969, 982, 990, 992, 994, 1019, 1023, 1026, 1071, 1072, 1075, 1081, 1095, 1103, 1106, 1108, 1109, 1112, 1120, 1266, 1295, 1332, 1342, 1344, 1349, 1360, 1361, 1366, 1370, 1371, 1374, 1382, 1385, 1387, 1402, 1414, 1415, 1424, 1445, 1451, 1454, 1456, 1459, 1461, 1462, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1479, 1485, 1488, 1495, 1500], "70": [701, 779, 1076, 1093, 1476, 1500], "700": 1476, "7030899164106": 1387, "7042": 1354, "707": [642, 794, 933, 942], "70710677": [788, 793, 1080, 1082], "7077524804807109": 1348, "707j": [794, 942], "7088872126624": 1492, "71": [567, 697, 699, 860, 1465, 1487], "710": 1476, "7102678": 1414, "7104083": 1414, "7104991444398": 1387, "7133658182976": 1492, "7144494518315": 1387, "71479625": 525, "7151893663724195": 1498, "71518937": 1498, "7168": 1471, "7168x7168": 1471, "7177599838802657": 1348, "7178471720636": 1387, "7182817": 1475, "719": 985, "7196": 1354, "71j": 1100, "72": [449, 968, 1344, 1345, 1471, 1487, 1500], "720": [571, 648, 1476], "7214407167121": 1492, "72172546": 1347, "72173": 1347, "72174072": 1347, "7229": 1354, "722961019": 1459, "7230015": 530, "726157440174": 1387, "7268": 1347, "72680664": 1347, "7271": 1402, "72747803": 1347, "72748": 1347, "7278922": [1342, 1463], "72949654": 1376, "72965544": 1376, "72971725": 1414, "7298445": 1414, "72j": [697, 699], "73": [1071, 1266, 1342, 1377, 1465], "730": 1476, "7310586": [1342, 1463], "7317": 1354, "7320509": [1342, 1463], "7320935035265": 1387, "732851459": 1346, "734": 570, "7352965": 1500, "7354605": [1350, 1467], "73571277": 1455, "7357177734375": 1476, "7361260076634": 1387, "73712474": 519, "7376612408998": 1387, "73j": [682, 685, 689, 696], "74": [643, 695, 936, 987, 1342, 1350, 1459, 1467, 1473], "740": 1476, "7409311e": 528, "74162567": 1490, "7416575": [805, 818], "742": 1087, "74414825": 1403, "7446210750584": 1387, "74519426": 1097, "745281": 1083, "7461": 1354, "74854278564453": 1476, "7492269469092": 1387, "74j": [697, 699], "75": [688, 692, 693, 714, 719, 737, 783, 801, 819, 857, 859, 879, 901, 940, 1071, 1342, 1377, 1380, 1456, 1463, 1471, 1487], "750": 1476, "751": 1378, "752513": 1464, "75262755": 520, "75341904": [1342, 1467], "754": [671, 701, 1505], "75433": 1347, "7543335": 1347, "7568025": [1376, 1470], "7581426": [808, 1095], "7581523280307": 1387, "76": [687, 891, 985, 1071, 1096, 1367, 1465, 1467, 1500], "760": 1476, "760109": 1464, "7613": 1354, "7619329": 520, "762": 953, "7620008": [808, 1095], "762535": 805, "763": 574, "76364135742188": 1476, "76405235": 1451, "7662": 1354, "7676109": 525, "76827": 296, "7683716e": 887, "77": [570, 736, 1342, 1350, 1367, 1467, 1475, 1492], "770": 1476, "7717": 1476, "77225566": 1414, "7724008": 1414, "7728694": 812, "7732": 1354, "7733": 1354, "7737": 1354, "773956": 720, "7747": 1354, "775": 985, "775211": 1490, "7768645e": 1120, "7798324141778": 1387, "78": [664, 694, 697, 699, 1073, 1492], "780": 1476, "7802": 1354, "78051674": 1490, "78232": 296, "7839": 1354, "784": [1464, 1465, 1473, 1474], "785": 577, "786": 1087, "7870499": [808, 1095], "78907233": 67, "78j": 1096, "79": [578, 702, 1094, 1492], "790": 1476, "79051208496094": 1476, "7907": 1354, "7925": 1354, "7927": 1354, "7936": 1354, "7949833": 519, "79611576": 523, "7987": 1354, "7995253": 1490, "79j": [682, 696, 699], "7j": [577, 687, 907, 1342, 1467], "7th": 1371, "8": [13, 61, 83, 157, 303, 315, 316, 362, 363, 364, 387, 435, 436, 447, 448, 449, 473, 474, 500, 501, 502, 504, 508, 528, 530, 544, 559, 569, 582, 589, 590, 591, 602, 614, 621, 625, 632, 637, 639, 641, 654, 655, 657, 659, 660, 664, 666, 669, 670, 674, 683, 685, 687, 688, 689, 692, 694, 695, 697, 699, 703, 705, 714, 716, 718, 723, 731, 739, 740, 743, 745, 781, 784, 785, 786, 792, 800, 803, 806, 816, 819, 820, 824, 826, 834, 835, 836, 837, 838, 839, 842, 845, 851, 853, 862, 869, 875, 876, 878, 884, 887, 890, 891, 894, 898, 909, 912, 914, 916, 919, 922, 923, 924, 941, 942, 943, 947, 948, 956, 960, 962, 964, 966, 967, 968, 969, 975, 986, 987, 990, 992, 994, 1002, 1052, 1070, 1072, 1076, 1081, 1099, 1103, 1107, 1109, 1111, 1120, 1148, 1266, 1295, 1333, 1342, 1344, 1346, 1347, 1356, 1359, 1360, 1361, 1366, 1369, 1370, 1371, 1374, 1378, 1382, 1384, 1387, 1396, 1411, 1415, 1424, 1431, 1434, 1440, 1441, 1445, 1447, 1452, 1454, 1456, 1459, 1460, 1461, 1462, 1465, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1499, 1500, 1503, 1505, 1506], "80": [86, 779, 1076, 1476, 1485, 1492], "800": 1476, "8000": 1461, "8000002": 845, "8047469e": 528, "8051": 1492, "80833": 1476, "8088631": 521, "8089": 1492, "81": [712, 801, 1071, 1464, 1465], "810": 1476, "811": 831, "81115675": 1500, "811b7ddb3300": 1462, "8121": 1354, "8132702": 1376, "81566876": 521, "8158": 1354, "81585354": 1376, "818": [576, 1449], "818595": [1470, 1500], "819": 1492, "8192": [1381, 1464, 1474, 1492], "81992": 1476, "819e9": 1492, "819gb": 1492, "82": [242, 671, 946, 1071], "820": 1476, "8227171": 1083, "822799": 1496, "823": 985, "824237": [1470, 1500], "825": 1087, "8258905": 1500, "826": 1492, "8261659": 1490, "8290": 670, "8293481": 1414, "82974285": 1414, "829906058": 1498, "8299482112": 1371, "83": [688, 690, 733], "830": 1476, "831": [670, 745], "8312336e": 1471, "8315067": [811, 1101], "8333335": 838, "8347540e": 1120, "83563": 1347, "83563232": 1347, "83594": 1402, "836": 1454, "83602": 503, "836303": 529, "84": [623, 1072, 1467, 1492], "840": 1476, "8400499820709229": 1473, "8402481j": 1402, "84033": [1402, 1476], "840334": [1470, 1500], "840824": 1402, "8414632": 524, "84147": [293, 295], "8414709568023682": 1360, "84147096": [1342, 1346, 1370, 1463, 1470], "841471": [1363, 1376], "8430": 1354, "843624": 290, "845365j": 1402, "84567260742188": 1476, "8469000458717346": 1473, "848": 1492, "8485": 1476, "849": 831, "85": [645, 1072, 1100, 1381], "850": 1476, "8511534j": [1342, 1467], "8518669": 524, "8526619429658": 1387, "8539824e": 1120, "856": 1359, "85628509521484": 1476, "857": 1359, "8574043": 1376, "85743": 296, "858": 1359, "859": 1359, "86": [670, 714, 1071, 1072, 1342, 1500], "860": [1359, 1476], "86097646": 1490, "862": 1454, "8634": 1354, "866": 642, "8662417": 530, "8675309": 815, "8678": 1354, "8680282": 1475, "86f83c871e81": 1468, "87": [567, 671, 1342, 1471], "870": 1476, "8711953e": 1120, "87225807": 522, "87237548828125": 1476, "873": 985, "8740077": [808, 1095], "8743029": 1490, "8743667006492615": 1473, "8745": 1492, "8784217": 1414, "8785025": 1414, "8790": 1460, "8791": [1460, 1496], "8792": 1460, "87j": [682, 683, 685, 690], "88": [1071, 1072, 1096, 1342, 1350, 1390, 1460, 1467, 1475, 1492], "880": 1476, "8803000450134277": 1473, "8805201": 1455, "8807971": [1342, 1463], "881": 576, "881943": 800, "88632202148438": 1476, "88j": [697, 699], "89": [694, 702, 1460, 1473], "890": 1476, "8901500105857849": 1473, "89025115966797": 1476, "89036560058594": 1476, "8907": 1354, "8907972116419": 1387, "893": 576, "8931118": 1500, "8941": 1354, "8957000374794006": 1473, "89874267578125": 1476, "8991333246231079": 1473, "8j": 930, "8m32": 1461, "8tb": 1490, "8x": 1494, "8x128": 1489, "8x128x1x1": 1489, "8x128x8x128": 1489, "8x4x2": 1495, "8x4xf32": 1378, "9": [75, 86, 97, 136, 251, 303, 362, 363, 364, 387, 435, 436, 449, 473, 474, 481, 486, 504, 508, 559, 571, 576, 578, 582, 589, 590, 591, 606, 614, 625, 632, 637, 645, 646, 649, 651, 654, 655, 657, 659, 660, 663, 664, 666, 669, 670, 671, 674, 678, 681, 682, 685, 694, 695, 696, 697, 699, 702, 705, 712, 716, 729, 731, 734, 735, 745, 782, 785, 786, 792, 800, 805, 811, 812, 813, 816, 818, 819, 823, 835, 836, 837, 838, 839, 854, 855, 861, 862, 869, 878, 883, 884, 886, 887, 890, 892, 898, 912, 916, 919, 922, 923, 936, 939, 941, 943, 947, 948, 954, 956, 960, 962, 964, 966, 967, 969, 986, 987, 990, 994, 1002, 1070, 1072, 1081, 1101, 1103, 1109, 1111, 1266, 1295, 1342, 1344, 1359, 1366, 1370, 1371, 1374, 1378, 1382, 1384, 1387, 1396, 1415, 1424, 1442, 1450, 1454, 1456, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1470, 1473, 1474, 1475, 1485, 1492, 1499, 1500, 1503], "90": [311, 652, 779, 782, 903, 919, 985, 1076, 1119, 1120, 1356, 1460, 1476, 1485, 1492], "900": 1476, "9001": 1496, "9026976e": 528, "903700053691864": 1473, "90433645": 525, "904491": [1342, 1467], "9047365": 529, "9051978525331": 1387, "9061833620071411": 1473, "9064634": 1403, "9064636": 1403, "9066": 1354, "9087000489234924": 1473, "9088": 1492, "9092974": [1342, 1346, 1363, 1370, 1376, 1463, 1470], "9092974066734314": 1360, "9092974662780762": 1363, "91": [1094, 1342, 1460, 1471, 1492], "910": 1476, "91113025": [1342, 1463], "9113333225250244": 1473, "9119454": 525, "91204834": 1347, "91205": 1347, "9120717": 519, "912600040435791": 1473, "912752": 1500, "91275555": 1376, "9133632183074951": 1475, "91421": 296, "9148926": 1490, "9156666994094849": 1465, "9156833291053772": 1473, "9176000356674194": 1473, "9178": 1354, "9178486": [1470, 1500], "9184": 1354, "91874694824219": 1476, "9189": 1354, "9192000031471252": 1473, "9199000000953674": 1465, "91j": 1096, "92": [690, 835, 987, 1100, 1347, 1460, 1492], "920": 1476, "920298": 1474, "920299": 1474, "9203": 1474, "9209373": 1070, "9213133e": 1120, "9214000701904297": 1473, "9220": 1371, "9222500324249268": 1473, "92279494": 1500, "92330932617188": 1476, "9240990200157": 1387, "9241000413894653": 1473, "9253666996955872": 1473, "9263": [1431, 1446, 1458, 1498], "9267": 1492, "9269000291824341": 1473, "927": 681, "928": 1347, "9282": 1371, "92j": [697, 699], "93": [887, 1347], "930": 1476, "9311": 1354, "933040465": 1498, "9350724": 1376, "9370499849319458": 1465, "9383999705314636": 1465, "93j": [683, 699], "94": [887, 990, 1342], "940": 1476, "940545j": [1342, 1467], "9407": 1458, "941": 1492, "9419": 1458, "941e": 671, "943": 1444, "944": 745, "94655314679552": 1346, "9467999935150146": 1465, "947667": [1431, 1455], "948": 831, "9490833282470703": 1465, "95": [305, 306, 664, 697, 699, 780, 887, 1342, 1381, 1465, 1473], "950": 1476, "95065307617188": 1476, "95257413": [1342, 1463], "953": 1494, "953006": [808, 1095], "95321447": 522, "9532999992370605": 1465, "95348358154297": 1476, "9542246": 1490, "9545448661609": 1387, "9547038": 1490, "954962": 1490, "95585632324219": 1476, "9562": 1354, "9568833708763123": 1465, "957": 985, "9574999809265137": 1465, "95799255371094": 1476, "9589243": 1470, "9596": 1444, "96": [664, 688, 887, 981, 1342, 1371, 1464, 1471, 1476], "960": 1476, "9604645e": 940, "961043": 289, "9615999460220337": 1465, "9620": 1354, "962584079": 1498, "9631666541099548": 1465, "963323": 1490, "964": 953, "9652999639511108": 1465, "967199981212616": 1465, "9675000309944153": 1465, "96971130371094": 1476, "96j": 699, "96mb": 1487, "97": [623, 1023, 1072, 1084, 1366, 1476], "970": 1476, "9709500074386597": 1465, "9714314": 1490, "9729187": [1350, 1467], "9732894897461": 1476, "9736999869346619": 1465, "9753758": 1490, "97606325": 1500, "9774251": 1500, "9785799": 1455, "9787164": [1470, 1500], "978733": 1371, "978767": 1371, "9791922366721637": 1498, "9799849932008908": 1348, "979984993200891": 1348, "98": [678, 968, 1476], "980": 1476, "9802322e": 940, "9812148": [1470, 1500], "98229736": 1500, "98279375": 567, "983j": 1402, "9843135": 860, "984375": 862, "984j": 1402, "98526763916016": 1476, "9856": 1492, "9858954": 1490, "98690795898438": 1476, "988": 1494, "9896846": [1342, 1467], "9897013": 1475, "9899": 1354, "9899924966004454": 1348, "9899925": [1342, 1463], "99": [10, 625, 714, 754, 864, 877, 900, 968, 1467, 1469, 1476], "990": 1476, "9906": 1354, "9917": 1444, "992": 1087, "9940": 670, "9946": 1354, "99479675292969": 1476, "995": 953, "9950": 1444, "9955574": 1490, "99563598632812": 1476, "996": 1492, "999": [848, 1396, 1455, 1503], "999859": 1402, "9999": [1444, 1496], "99998045": [1470, 1500], "99999974e": 1378, "9999998": 867, "9999999": 867, "99999994": 1119, "99999997e": 823, "99j": [683, 696, 697, 699], "9_spmd": 1378, "A": [29, 62, 63, 64, 67, 69, 71, 72, 73, 74, 75, 81, 82, 83, 84, 95, 100, 112, 113, 120, 127, 131, 132, 134, 135, 136, 141, 143, 150, 157, 167, 168, 178, 198, 205, 206, 207, 208, 213, 214, 215, 222, 223, 224, 225, 239, 240, 245, 255, 268, 277, 281, 282, 283, 284, 285, 288, 289, 290, 292, 293, 295, 296, 311, 328, 337, 339, 342, 345, 368, 382, 383, 392, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 414, 419, 422, 433, 449, 458, 477, 483, 486, 494, 500, 502, 503, 504, 505, 506, 508, 519, 520, 521, 522, 523, 524, 525, 539, 540, 543, 567, 569, 570, 586, 592, 628, 629, 637, 640, 641, 645, 646, 656, 657, 658, 659, 663, 668, 671, 674, 680, 686, 687, 691, 693, 694, 695, 700, 708, 709, 710, 719, 720, 721, 726, 739, 740, 742, 747, 750, 754, 755, 756, 757, 758, 762, 764, 765, 768, 769, 770, 771, 772, 773, 774, 781, 787, 788, 793, 794, 797, 800, 808, 809, 810, 811, 818, 828, 840, 848, 869, 876, 877, 878, 882, 883, 886, 887, 891, 897, 899, 900, 905, 911, 912, 913, 916, 921, 931, 939, 941, 955, 961, 962, 965, 966, 971, 972, 973, 974, 977, 978, 979, 1002, 1010, 1013, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1069, 1070, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1152, 1153, 1156, 1162, 1245, 1283, 1284, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1302, 1304, 1305, 1306, 1331, 1332, 1333, 1342, 1344, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1357, 1359, 1361, 1364, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1379, 1381, 1382, 1390, 1396, 1397, 1402, 1403, 1411, 1415, 1424, 1431, 1434, 1435, 1441, 1442, 1444, 1447, 1448, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1480, 1483, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1498, 1500, 1503, 1504, 1506, 1507], "AND": [322, 323, 324, 325, 442, 605, 827], "AS": [1465, 1473], "And": [700, 969, 1342, 1348, 1357, 1366, 1369, 1370, 1371, 1376, 1378, 1381, 1390, 1447, 1454, 1455, 1462, 1463, 1466, 1467, 1469, 1470, 1474, 1484, 1485, 1489, 1502, 1503], "As": [67, 112, 113, 239, 343, 344, 378, 381, 459, 460, 504, 557, 701, 776, 868, 969, 1002, 1016, 1116, 1135, 1342, 1344, 1346, 1348, 1351, 1354, 1357, 1359, 1361, 1363, 1366, 1369, 1370, 1371, 1376, 1377, 1378, 1381, 1382, 1385, 1390, 1402, 1414, 1440, 1442, 1443, 1444, 1445, 1447, 1449, 1450, 1451, 1452, 1454, 1457, 1459, 1461, 1463, 1464, 1468, 1470, 1472, 1474, 1475, 1479, 1480, 1483, 1484, 1487, 1489, 1490, 1493, 1494, 1495, 1496, 1498, 1500, 1501, 1503, 1506], "At": [67, 150, 793, 795, 1095, 1341, 1342, 1346, 1348, 1349, 1367, 1371, 1374, 1378, 1381, 1390, 1442, 1443, 1446, 1447, 1455, 1456, 1460, 1461, 1462, 1463, 1465, 1473, 1474, 1476, 1480, 1484, 1485, 1489, 1490, 1492], "BE": [145, 185, 186, 188, 189, 190, 191, 192], "Be": [777, 913, 1366, 1461, 1496], "Being": 1487, "But": [67, 91, 112, 113, 119, 804, 886, 889, 1052, 1342, 1346, 1348, 1349, 1350, 1356, 1359, 1361, 1363, 1369, 1371, 1377, 1378, 1382, 1387, 1440, 1443, 1444, 1445, 1447, 1448, 1449, 1451, 1453, 1454, 1456, 1463, 1464, 1467, 1468, 1470, 1474, 1475, 1488, 1489, 1502, 1503], "By": [10, 81, 120, 284, 296, 304, 360, 381, 437, 459, 460, 495, 563, 568, 578, 644, 776, 836, 838, 839, 842, 853, 854, 855, 856, 858, 860, 861, 862, 864, 896, 898, 899, 905, 946, 948, 986, 987, 991, 998, 999, 1000, 1001, 1096, 1100, 1245, 1266, 1302, 1342, 1348, 1354, 1359, 1361, 1363, 1364, 1366, 1367, 1371, 1374, 1376, 1377, 1381, 1382, 1390, 1402, 1411, 1438, 1442, 1443, 1449, 1450, 1454, 1455, 1457, 1460, 1461, 1462, 1463, 1464, 1466, 1468, 1471, 1472, 1474, 1475, 1480, 1483, 1487, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1503], "For": [10, 13, 18, 21, 67, 71, 72, 74, 75, 76, 79, 80, 82, 84, 95, 97, 98, 112, 113, 118, 119, 120, 126, 130, 136, 160, 166, 167, 179, 198, 250, 251, 283, 288, 289, 290, 292, 296, 297, 298, 303, 311, 315, 316, 335, 336, 337, 343, 344, 345, 346, 349, 357, 359, 363, 366, 381, 398, 399, 416, 417, 420, 421, 426, 431, 432, 433, 435, 436, 452, 458, 460, 461, 462, 463, 464, 465, 466, 470, 471, 475, 481, 489, 494, 501, 502, 504, 507, 508, 510, 539, 541, 545, 552, 559, 570, 571, 572, 573, 574, 575, 576, 577, 579, 604, 614, 627, 632, 637, 640, 641, 643, 645, 664, 667, 669, 670, 678, 679, 681, 687, 699, 700, 701, 703, 716, 717, 730, 744, 750, 753, 761, 762, 763, 787, 789, 793, 797, 799, 803, 804, 805, 811, 820, 823, 828, 833, 834, 837, 838, 840, 843, 864, 865, 866, 876, 883, 889, 891, 892, 894, 897, 899, 900, 902, 905, 908, 911, 913, 919, 920, 921, 922, 923, 929, 930, 936, 937, 940, 942, 943, 944, 950, 951, 953, 957, 969, 976, 977, 978, 979, 980, 985, 993, 994, 1002, 1007, 1008, 1009, 1010, 1016, 1017, 1045, 1047, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1078, 1083, 1084, 1089, 1091, 1095, 1102, 1105, 1135, 1136, 1148, 1161, 1162, 1245, 1265, 1266, 1288, 1304, 1333, 1335, 1336, 1338, 1339, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1384, 1385, 1387, 1389, 1390, 1402, 1403, 1411, 1414, 1416, 1424, 1428, 1431, 1434, 1435, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1452, 1453, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1506, 1507], "IT": 1479, "If": [10, 61, 67, 69, 71, 75, 80, 81, 82, 84, 94, 95, 96, 97, 98, 100, 107, 112, 118, 126, 130, 131, 132, 134, 136, 137, 143, 145, 148, 150, 160, 166, 167, 168, 173, 178, 198, 207, 210, 216, 220, 223, 224, 228, 232, 237, 239, 243, 248, 250, 251, 253, 255, 284, 288, 289, 290, 291, 292, 293, 295, 296, 297, 301, 303, 304, 311, 313, 322, 324, 325, 331, 336, 337, 343, 344, 348, 349, 359, 360, 362, 363, 364, 365, 366, 367, 368, 372, 373, 375, 378, 379, 380, 381, 382, 383, 392, 395, 397, 398, 404, 405, 406, 407, 409, 411, 412, 414, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 430, 431, 433, 434, 435, 437, 449, 451, 452, 455, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 471, 477, 478, 481, 482, 483, 484, 485, 486, 495, 496, 498, 500, 501, 502, 503, 508, 510, 528, 536, 538, 543, 549, 554, 563, 564, 567, 568, 569, 572, 580, 581, 582, 583, 584, 586, 587, 592, 595, 602, 604, 626, 627, 632, 633, 634, 640, 641, 644, 645, 648, 649, 650, 651, 654, 655, 660, 661, 667, 668, 679, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 705, 720, 721, 726, 731, 733, 739, 740, 741, 742, 744, 750, 751, 754, 761, 762, 764, 767, 769, 781, 788, 789, 798, 802, 810, 811, 813, 816, 818, 819, 831, 836, 838, 839, 840, 842, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 860, 861, 862, 864, 868, 876, 878, 881, 882, 886, 887, 888, 889, 891, 896, 898, 900, 910, 911, 914, 915, 916, 918, 921, 922, 923, 924, 927, 928, 938, 939, 941, 944, 945, 946, 948, 950, 951, 954, 955, 958, 959, 961, 965, 975, 976, 977, 978, 979, 980, 981, 986, 987, 991, 993, 994, 1002, 1016, 1023, 1026, 1047, 1049, 1052, 1070, 1071, 1072, 1073, 1074, 1075, 1082, 1083, 1084, 1086, 1094, 1095, 1098, 1099, 1101, 1102, 1110, 1111, 1113, 1114, 1115, 1118, 1149, 1151, 1160, 1162, 1209, 1245, 1265, 1266, 1283, 1284, 1292, 1294, 1295, 1300, 1303, 1306, 1308, 1331, 1332, 1333, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1357, 1359, 1360, 1361, 1362, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1390, 1396, 1403, 1411, 1424, 1428, 1431, 1434, 1440, 1441, 1442, 1443, 1445, 1447, 1448, 1449, 1450, 1452, 1453, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1467, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1487, 1489, 1490, 1492, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1506], "In": [9, 10, 61, 67, 83, 98, 126, 170, 198, 201, 203, 223, 283, 290, 296, 304, 305, 306, 337, 339, 343, 344, 357, 378, 415, 421, 424, 458, 465, 488, 495, 501, 595, 604, 625, 638, 645, 646, 654, 664, 670, 671, 679, 723, 776, 777, 778, 797, 799, 805, 807, 833, 849, 850, 864, 868, 877, 882, 910, 927, 969, 975, 976, 1002, 1007, 1016, 1063, 1084, 1089, 1097, 1116, 1117, 1118, 1283, 1307, 1308, 1333, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1363, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1385, 1390, 1397, 1411, 1424, 1431, 1434, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1463, 1464, 1467, 1468, 1470, 1471, 1472, 1474, 1475, 1479, 1480, 1483, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1506], "It": [67, 73, 75, 80, 84, 98, 130, 136, 150, 168, 180, 241, 252, 253, 289, 290, 296, 297, 454, 495, 501, 504, 506, 508, 544, 552, 670, 721, 836, 853, 856, 885, 887, 888, 891, 920, 985, 991, 1002, 1016, 1100, 1105, 1110, 1115, 1118, 1161, 1172, 1174, 1176, 1177, 1205, 1207, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1310, 1311, 1331, 1332, 1342, 1348, 1349, 1351, 1354, 1355, 1356, 1357, 1359, 1360, 1362, 1363, 1366, 1368, 1369, 1370, 1371, 1374, 1377, 1378, 1382, 1385, 1387, 1390, 1403, 1404, 1411, 1414, 1415, 1431, 1435, 1441, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1474, 1475, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1496, 1498, 1500, 1501, 1502, 1506, 1507], "Its": [0, 67, 113, 289, 290, 297, 337, 430, 495, 503, 1002, 1331, 1332, 1342, 1348, 1349, 1354, 1403, 1411, 1414, 1434, 1452, 1455, 1463, 1483], "NOT": [322, 323, 324, 325, 828, 1356], "No": [10, 240, 864, 1346, 1354, 1360, 1371, 1381, 1390, 1424, 1471, 1484, 1485, 1487, 1489, 1496], "Not": [25, 198, 845, 920, 956, 1100, 1345, 1362, 1371, 1441, 1445, 1447, 1454, 1465, 1475, 1480, 1484, 1485, 1489, 1496], "OF": [1465, 1473], "ON": 1356, "OR": [322, 323, 324, 325, 445, 610, 829, 1363, 1366, 1465, 1473, 1479], "Of": [72, 1465, 1473, 1494, 1503], "On": [93, 98, 136, 143, 252, 397, 501, 1002, 1005, 1064, 1068, 1069, 1354, 1356, 1366, 1371, 1376, 1378, 1381, 1382, 1384, 1387, 1411, 1424, 1444, 1445, 1448, 1456, 1461, 1474, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1494, 1496], "One": [69, 246, 436, 531, 540, 600, 633, 634, 638, 761, 776, 778, 789, 868, 1342, 1348, 1349, 1353, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1382, 1385, 1390, 1440, 1441, 1444, 1445, 1448, 1449, 1450, 1456, 1459, 1463, 1467, 1468, 1475, 1479, 1480, 1484, 1489, 1492, 1494, 1497, 1499, 1503], "Or": [1348, 1366, 1371, 1381, 1404, 1424, 1445, 1447, 1456, 1474, 1479, 1480, 1490, 1495, 1497], "Such": [296, 501, 1345, 1351, 1370, 1374, 1411, 1415, 1441, 1448, 1456, 1502], "TO": [145, 185, 186, 188, 189, 190, 191, 192], "That": [67, 75, 119, 327, 422, 437, 441, 458, 488, 1047, 1342, 1345, 1346, 1348, 1349, 1350, 1359, 1361, 1366, 1367, 1377, 1378, 1382, 1441, 1443, 1445, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1456, 1459, 1461, 1462, 1463, 1466, 1467, 1468, 1470, 1474, 1475, 1479, 1484, 1489, 1492, 1495, 1497, 1498, 1500, 1501, 1506], "The": [10, 24, 38, 48, 49, 50, 67, 69, 75, 77, 80, 81, 82, 83, 84, 91, 95, 96, 97, 98, 100, 113, 119, 120, 126, 127, 135, 136, 139, 143, 145, 148, 150, 160, 161, 166, 167, 168, 170, 172, 173, 174, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 198, 205, 206, 215, 216, 220, 222, 227, 239, 240, 248, 250, 251, 255, 257, 268, 277, 281, 282, 283, 284, 285, 289, 290, 291, 292, 295, 296, 297, 304, 305, 306, 311, 321, 335, 336, 337, 338, 339, 343, 344, 345, 357, 360, 365, 367, 378, 381, 387, 395, 397, 401, 403, 406, 408, 409, 410, 423, 424, 431, 432, 433, 437, 451, 452, 458, 459, 460, 461, 462, 463, 464, 473, 475, 477, 481, 488, 494, 495, 500, 501, 502, 503, 504, 505, 506, 508, 512, 517, 519, 527, 532, 536, 543, 544, 549, 554, 557, 563, 568, 569, 570, 574, 576, 578, 579, 582, 584, 589, 591, 603, 604, 613, 617, 625, 632, 639, 640, 643, 645, 646, 652, 655, 656, 658, 659, 660, 668, 670, 682, 683, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 718, 723, 729, 733, 736, 737, 738, 750, 762, 766, 775, 777, 780, 781, 782, 784, 787, 788, 789, 802, 804, 805, 807, 808, 810, 811, 817, 831, 836, 838, 842, 851, 852, 853, 854, 856, 858, 860, 861, 862, 864, 868, 875, 876, 878, 882, 883, 885, 886, 888, 889, 891, 896, 899, 900, 903, 906, 908, 909, 911, 912, 914, 918, 919, 921, 922, 923, 924, 927, 930, 934, 936, 946, 948, 950, 951, 953, 956, 957, 958, 959, 969, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 989, 994, 998, 999, 1000, 1001, 1002, 1007, 1008, 1010, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1071, 1072, 1073, 1074, 1075, 1080, 1084, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1096, 1097, 1101, 1103, 1105, 1110, 1111, 1115, 1116, 1117, 1118, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1132, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1147, 1148, 1150, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1162, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1216, 1217, 1218, 1219, 1220, 1221, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1288, 1291, 1292, 1301, 1302, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1331, 1332, 1333, 1337, 1341, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1363, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1390, 1396, 1397, 1400, 1402, 1403, 1404, 1411, 1414, 1415, 1416, 1424, 1425, 1428, 1429, 1431, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506], "Their": [311, 1344, 1414, 1470], "Then": [397, 501, 1342, 1348, 1357, 1359, 1366, 1369, 1374, 1377, 1378, 1387, 1390, 1446, 1447, 1458, 1459, 1470, 1474, 1487, 1490, 1496, 1501, 1503], "There": [76, 79, 150, 413, 899, 1161, 1341, 1342, 1346, 1348, 1349, 1354, 1357, 1359, 1364, 1366, 1369, 1371, 1377, 1378, 1380, 1382, 1384, 1385, 1387, 1397, 1438, 1441, 1444, 1445, 1447, 1448, 1449, 1452, 1456, 1461, 1462, 1463, 1465, 1467, 1468, 1472, 1473, 1474, 1479, 1480, 1483, 1484, 1487, 1490, 1492, 1493, 1494, 1495, 1505], "These": [178, 198, 209, 254, 363, 452, 473, 494, 502, 578, 701, 811, 906, 991, 1101, 1341, 1342, 1344, 1346, 1348, 1351, 1353, 1354, 1356, 1358, 1359, 1364, 1369, 1371, 1374, 1376, 1377, 1381, 1382, 1384, 1385, 1389, 1390, 1395, 1408, 1414, 1424, 1438, 1441, 1443, 1444, 1445, 1448, 1449, 1457, 1459, 1460, 1467, 1469, 1470, 1474, 1475, 1480, 1483, 1484, 1488, 1497, 1500, 1503, 1506], "To": [61, 69, 72, 91, 98, 136, 178, 290, 291, 296, 397, 494, 544, 563, 568, 572, 578, 644, 687, 836, 838, 842, 853, 856, 858, 860, 861, 862, 896, 898, 911, 946, 948, 976, 987, 1052, 1110, 1245, 1266, 1341, 1342, 1346, 1347, 1348, 1349, 1354, 1359, 1360, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1387, 1390, 1395, 1400, 1411, 1414, 1424, 1431, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1455, 1456, 1457, 1459, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506], "Will": [386, 439, 626, 632, 679, 802, 807, 857, 859, 879, 901, 1390], "With": [61, 531, 646, 787, 918, 1023, 1026, 1153, 1342, 1348, 1353, 1354, 1356, 1363, 1368, 1378, 1382, 1387, 1396, 1411, 1428, 1440, 1443, 1444, 1445, 1447, 1452, 1454, 1455, 1456, 1459, 1464, 1467, 1470, 1474, 1475, 1479, 1487, 1488, 1492, 1494, 1500, 1503], "_": [119, 255, 315, 316, 503, 677, 739, 740, 798, 922, 923, 944, 1306, 1326, 1342, 1346, 1348, 1349, 1361, 1363, 1371, 1374, 1376, 1381, 1382, 1390, 1402, 1403, 1441, 1451, 1453, 1460, 1462, 1463, 1464, 1467, 1468, 1474, 1479, 1483, 1484, 1487, 1490, 1492, 1494, 1497, 1498, 1502, 1503, 1506], "_1f_1": 1141, "_2f_1": 1142, "__": 1474, "__add__": [1348, 1349], "__array__": [586, 592, 1348, 1370, 1444, 1452], "__array_function__": 1452, "__array_namespace__": 1428, "__array_priority__": 1348, "__array_ufunc__": 1452, "__array_wrap__": 1452, "__bool__": [1348, 1359], "__call__": [1348, 1435, 1503], "__cause__": [1354, 1356], "__class__": 1348, "__closure__": 69, "__cuda_array_interface__": 1354, "__dlpack__": [100, 720, 1354], "__dlpack_device__": [100, 720], "__enter__": 1390, "__eq__": [296, 1002, 1348, 1354, 1377, 1411], "__exit__": 1390, "__getattr__": 1348, "__getitem__": [1444, 1480], "__gpu": 1354, "__gt__": 1348, "__hash__": [296, 1002, 1348, 1354, 1377, 1411], "__iadd__": 1462, "__index__": [1370, 1444], "__init__": [0, 62, 63, 72, 76, 79, 102, 106, 114, 126, 139, 140, 141, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 183, 199, 200, 201, 202, 203, 204, 245, 256, 257, 258, 259, 260, 261, 262, 267, 394, 624, 628, 629, 631, 668, 701, 704, 708, 709, 710, 713, 730, 748, 752, 755, 756, 757, 758, 760, 870, 871, 932, 969, 971, 972, 973, 974, 983, 1007, 1008, 1062, 1063, 1076, 1104, 1119, 1120, 1209, 1304, 1308, 1309, 1310, 1311, 1348, 1349, 1377, 1452, 1494, 1497, 1502, 1506], "__instancecheck__": 1444, "__int__": [250, 251, 1444], "__isinstance__": 1444, "__iter__": 1444, "__jax_array__": [1444, 1458], "__lt__": 1348, "__main__": [1342, 1390, 1462, 1463, 1506], "__mul__": [1348, 1349], "__name__": [505, 1348, 1456, 1462, 1464], "__neg__": 1348, "__new__": [1308, 1310, 1497, 1506], "__nonzero__": 1348, "__post_init__": 1503, "__radd__": 1348, "__repr__": [1348, 1497, 1506], "__rmul__": 1348, "__rshift__": 1348, "__setitem__": 1480, "__slots__": 1348, "__str__": [1348, 1349, 1506], "__tracebackhide__": [1354, 1356], "_add": 1348, "_argnum": 1443, "_assert_l": 1454, "_attribute_always_inlin": 1378, "_autosummari": [1354, 1462, 1475], "_auxdata": [1308, 1310], "_await_consum": 1484, "_before_refine_polymorphic_shap": 1374, "_bool": 1348, "_build": [1366, 1378], "_buildfromchildren": 253, "_bwd": [1342, 1463], "_calc": 1377, "_check_forgot_shape_tupl": 1359, "_check_shape_assert": 1371, "_children": 1308, "_code": 114, "_compil": 1371, "_compute_newshap": 1460, "_cond_partial_ev": 1348, "_cpp_pjit": 1385, "_custom_call_targets_guaranteed_st": 1371, "_default_toler": 1354, "_deserializeauxdata": 253, "_dimexpr": 1374, "_div": 1147, "_do_fetch": 1484, "_dot_gener": 670, "_dual": 1349, "_empti": [236, 237], "_entr": 1159, "_execut": 1442, "_export": 1371, "_function_nam": [182, 1069], "_fwd": [1342, 1463], "_get_vjp": 1415, "_gt": 1348, "_hlo_const": 1348, "_i": [536, 887, 1149], "_impl": [1415, 1455], "_indent": 1390, "_index_tricks_impl": [750, 921], "_init": 159, "_inline_liter": 1348, "_inputs_": 1378, "_invalid_shape_error": [1359, 1460], "_jax": [1390, 1475], "_jax_": 1390, "_jax_mlir_ext": 1390, "_jaxcomputationbuild": 1390, "_jnp_function_equival": 1460, "_join_jaxpr_const": 1348, "_join_jaxpr_r": 1348, "_jv_jvp": 1376, "_jvp": [1342, 1390, 1467], "_k": [1141, 1142, 1354], "_kk": 1141, "_layernorm": 1445, "_lt": 1348, "_m": 1157, "_metadata": 114, "_mgrid": 841, "_minim": 69, "_mlir": 1390, "_mlir_dtyp": 1348, "_mlir_lib": 1390, "_mul": 1348, "_must_": 137, "_neg": 1348, "_nonzero": 1348, "_ogrid": 872, "_output": [1382, 1468], "_outputs_": 1378, "_override_lowering_rul": 248, "_p": 1466, "_pattern": 1402, "_payload": 114, "_pjit_cached_lower_jaxpr_to_fun": 1385, "_platform_index": 1371, "_plu": 551, "_pred": 114, "_private_paramet": 1435, "_profil": 1012, "_promote_shap": 1462, "_python_pjit_help": 1390, "_radd": 1348, "_rais": 1376, "_rbg_fold_in": 277, "_rbg_random_bit": [277, 282], "_rbg_seed": [277, 282], "_rbg_split": 277, "_ref": [155, 160, 161, 166, 167], "_relu": 533, "_renderable_repr": [1382, 1468], "_repr_html_": [1382, 1468], "_rmul": 1348, "_rope": 1445, "_rule": 1455, "_run_cod": 1390, "_run_module_as_main": 1390, "_safe_mul": 1354, "_scipy_jv": 1376, "_segment": 1148, "_serializeauxdata": 253, "_sigmoid": [513, 514, 515, 535, 552], "_sign": 548, "_silu": [514, 515], "_softmax": [536, 1149], "_split_transpos": [458, 1378, 1441], "_src": [65, 66, 70, 87, 88, 90, 91, 92, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 159, 499, 534, 541, 542, 556, 619, 841, 872, 902, 927, 975, 997, 1131, 1133, 1135, 1141, 1148, 1150, 1157, 1163, 1164, 1165, 1298, 1322, 1344, 1345, 1348, 1354, 1356, 1359, 1366, 1371, 1374, 1381, 1382, 1390, 1444, 1446, 1455, 1457, 1460, 1466, 1495], "_stablehlo": 1460, "_state": 1354, "_t": 424, "_tanh": 516, "_tile": 1472, "_trace": [1348, 1390], "_trace_ind": 1390, "_trace_unind": 1390, "_tree_flatten": [1348, 1377], "_tree_unflatten": [1348, 1377], "_true_bind": 1460, "_unsafe_rbg_fold_in": 282, "_unsafe_rbg_split": 282, "_valu": 1359, "_version": 1457, "_where": 1460, "_with_sharding_constraint": 1445, "_wrapped_jax_export_main": 1371, "_wrapper": 1492, "_x3": 1424, "_xla": 1354, "a0": 1490, "a1": [587, 588, 669, 884, 889, 890, 1348, 1374, 1497, 1506], "a100": [1354, 1381, 1424], "a2": [587, 588, 625, 654, 669, 884, 889, 890, 1348, 1374, 1497, 1506], "a2_": 1348, "a3": [1497, 1506], "a_": [637, 641, 1102], "a_0": [1342, 1463], "a_bar": [1342, 1463], "a_block": [1445, 1474], "a_block_s": 544, "a_gmem": [1483, 1484], "a_i": [538, 625, 1151], "a_inv": [797, 1089], "a_jax_arrai": 1385, "a_load": 1484, "a_matrix": 407, "a_max": [626, 1354], "a_min": [626, 1354], "a_pinv": 807, "a_reconstruct": [1087, 1090, 1094], "a_ref": 1484, "a_ref_t": 1484, "a_scal": [543, 544], "a_slic": 1484, "a_smem": [1483, 1484], "a_tre": 1506, "aarch64": [1354, 1384], "ab": [239, 305, 306, 340, 508, 553, 559, 681, 805, 930, 1018, 1047, 1084, 1342, 1354, 1396, 1463, 1489, 1490, 1494], "abc": [778, 1348, 1474], "abi": 1378, "abil": [1346, 1354, 1366, 1442, 1444, 1445, 1448, 1449, 1451, 1452, 1456, 1459, 1484], "abl": [886, 889, 1342, 1345, 1348, 1349, 1360, 1361, 1363, 1366, 1371, 1374, 1377, 1378, 1379, 1384, 1387, 1390, 1428, 1440, 1442, 1444, 1447, 1449, 1457, 1459, 1462, 1465, 1467, 1473, 1480, 1484, 1487, 1490, 1492, 1496, 1497, 1501, 1503, 1506], "abort": 1356, "about": [61, 82, 145, 178, 267, 283, 337, 397, 452, 493, 578, 582, 616, 617, 618, 701, 793, 804, 878, 991, 1023, 1026, 1066, 1095, 1119, 1307, 1342, 1346, 1348, 1349, 1350, 1352, 1354, 1356, 1360, 1363, 1366, 1367, 1370, 1371, 1376, 1377, 1378, 1381, 1382, 1390, 1395, 1424, 1428, 1431, 1440, 1442, 1445, 1447, 1448, 1449, 1450, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1474, 1475, 1479, 1480, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1498, 1500, 1502, 1505, 1507], "abov": [61, 81, 170, 283, 290, 306, 321, 378, 381, 403, 408, 409, 415, 458, 459, 460, 488, 504, 531, 655, 658, 959, 960, 961, 962, 964, 965, 966, 985, 1016, 1094, 1134, 1148, 1342, 1344, 1348, 1349, 1350, 1353, 1354, 1357, 1359, 1361, 1363, 1366, 1367, 1369, 1370, 1374, 1377, 1378, 1381, 1384, 1385, 1390, 1428, 1431, 1440, 1441, 1444, 1445, 1447, 1448, 1449, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1467, 1469, 1471, 1472, 1474, 1476, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1496, 1497, 1498, 1500, 1502, 1503, 1505, 1506], "abs_p": 1414, "abseil": 1356, "absenc": [81, 1377, 1390, 1479, 1506], "absl": [1354, 1368, 1371, 1377, 1440, 1443, 1454, 1462, 1499, 1501], "absolut": [298, 340, 451, 531, 538, 558, 564, 589, 591, 606, 645, 681, 729, 764, 782, 809, 1083, 1124, 1139, 1151, 1285, 1286, 1287, 1354, 1366], "abstract": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 25, 26, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 106, 113, 284, 337, 503, 624, 631, 654, 704, 713, 752, 760, 864, 868, 870, 927, 932, 975, 976, 983, 1062, 1308, 1348, 1350, 1354, 1359, 1360, 1361, 1370, 1376, 1377, 1379, 1415, 1440, 1441, 1443, 1444, 1447, 1449, 1454, 1456, 1459, 1460, 1480, 1487, 1488, 1489, 1503, 1506], "abstract_arrai": 1354, "abstract_eval_rul": 1348, "abstract_mesh": 1390, "abstract_token": 283, "abstracted_ax": [296, 503, 1411], "abstractif": 1452, "abstractifi": 1354, "abstractli": [1361, 1390, 1452], "abstractmesh": [198, 1283, 1354, 1371, 1390, 1470], "abstractref": [162, 163, 1064, 1068, 1069], "abstractvalu": [259, 262, 1062, 1348, 1374], "acc": [174, 1480, 1483, 1484], "acc_ref": [1483, 1484, 1492], "acc_scratch": 1490, "acc_tmem": 1484, "acceler": [18, 67, 239, 891, 924, 1007, 1341, 1344, 1345, 1347, 1353, 1363, 1366, 1369, 1371, 1376, 1377, 1379, 1382, 1383, 1384, 1424, 1454, 1456, 1459, 1460, 1461, 1462, 1465, 1466, 1473, 1480, 1487, 1488, 1489, 1492, 1505, 1507], "accept": [69, 73, 75, 77, 80, 119, 120, 240, 241, 357, 458, 501, 606, 784, 805, 884, 886, 889, 890, 914, 1105, 1110, 1114, 1115, 1125, 1141, 1142, 1283, 1284, 1341, 1344, 1348, 1354, 1356, 1366, 1369, 1371, 1378, 1414, 1424, 1439, 1444, 1447, 1448, 1451, 1452, 1453, 1455, 1456, 1460, 1462, 1472, 1478, 1483, 1484, 1489, 1496, 1497, 1506], "access": [18, 67, 98, 113, 148, 322, 323, 324, 325, 368, 382, 383, 392, 395, 398, 408, 409, 414, 419, 454, 467, 468, 469, 494, 582, 638, 656, 657, 834, 865, 878, 929, 937, 982, 1082, 1099, 1310, 1342, 1346, 1350, 1354, 1356, 1366, 1369, 1371, 1377, 1378, 1416, 1424, 1428, 1438, 1446, 1451, 1455, 1457, 1461, 1467, 1470, 1474, 1478, 1480, 1483, 1484, 1485, 1487, 1488, 1491, 1496, 1500, 1503], "accident": [1349, 1354, 1369, 1445, 1455, 1461, 1506], "accommod": [1450, 1490], "accompani": [1357, 1484, 1503], "accomplish": [846, 1379, 1414, 1443, 1444, 1459, 1479, 1488, 1503], "accord": [10, 136, 198, 210, 292, 343, 344, 368, 382, 383, 392, 398, 414, 419, 423, 431, 432, 433, 434, 466, 620, 864, 955, 1019, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1039, 1041, 1042, 1043, 1045, 1046, 1048, 1050, 1051, 1053, 1055, 1056, 1057, 1059, 1060, 1103, 1342, 1354, 1369, 1371, 1382, 1403, 1444, 1447, 1452, 1455, 1463, 1470, 1471, 1474, 1479, 1484], "accordingli": [61, 1333, 1354, 1506], "account": [504, 1354, 1357, 1376, 1378, 1444, 1448, 1455, 1461, 1464, 1475, 1484, 1494, 1503], "acct": 1461, "accum": 1424, "accum_pipelin": 1490, "accum_ref": 1490, "accum_scratch": [1490, 1494], "accumul": [91, 174, 341, 343, 345, 346, 347, 360, 447, 448, 572, 637, 641, 648, 649, 650, 651, 664, 670, 725, 753, 799, 813, 817, 833, 851, 852, 886, 889, 954, 969, 988, 989, 1342, 1346, 1354, 1356, 1367, 1377, 1390, 1424, 1467, 1474, 1479, 1480, 1483, 1489, 1490, 1492, 1493, 1494], "accumulation_typ": 1424, "accur": [375, 412, 534, 572, 678, 823, 934, 1116, 1117, 1377, 1424], "accuraci": [91, 331, 349, 372, 373, 375, 411, 412, 413, 457, 471, 478, 484, 485, 1033, 1118, 1135, 1354, 1356, 1364, 1424, 1448, 1465, 1473, 1475, 1489], "accuracymod": [331, 349, 372, 373, 375, 411, 412, 457, 471, 478, 484, 485], "accustom": [1431, 1480], "achiev": [112, 403, 1116, 1117, 1118, 1153, 1348, 1356, 1366, 1369, 1371, 1377, 1379, 1411, 1444, 1447, 1449, 1450, 1451, 1471, 1478, 1480, 1483, 1484, 1487, 1489, 1494], "acknowledg": 1366, "aco": [309, 312, 349, 575, 642], "acontext": 1505, "acosh": [310, 314, 350], "acquir": 1496, "acronym": 1344, "across": [29, 67, 69, 93, 98, 134, 136, 137, 138, 166, 198, 303, 378, 422, 435, 458, 488, 500, 501, 502, 549, 670, 672, 733, 873, 877, 881, 991, 995, 1002, 1160, 1333, 1341, 1344, 1345, 1349, 1351, 1352, 1354, 1363, 1366, 1367, 1378, 1381, 1382, 1406, 1411, 1416, 1431, 1434, 1435, 1440, 1444, 1445, 1448, 1451, 1452, 1460, 1461, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1477, 1480, 1483, 1484, 1487, 1488, 1490, 1493, 1495, 1500, 1501, 1503, 1506], "act": [969, 991, 1342, 1354, 1390, 1449, 1452, 1453, 1456, 1463, 1464, 1474, 1479, 1487], "act_att": 1503, "act_hidden": 1503, "act_id": 1503, "act_seq": 1503, "action": [171, 239, 1342, 1348, 1366, 1376, 1444, 1450, 1457, 1467, 1495, 1504], "activ": [150, 168, 458, 506, 507, 509, 510, 512, 513, 514, 515, 516, 517, 533, 535, 539, 541, 542, 545, 546, 547, 548, 550, 551, 552, 553, 555, 1012, 1013, 1015, 1345, 1348, 1363, 1366, 1371, 1404, 1414, 1448, 1455, 1465, 1473, 1474, 1479, 1480, 1484, 1487, 1488, 1496, 1503, 1504], "activitydis": 1496, "actual": [10, 254, 296, 424, 458, 501, 557, 701, 704, 864, 931, 1064, 1162, 1342, 1344, 1347, 1348, 1349, 1354, 1356, 1360, 1363, 1366, 1369, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1385, 1390, 1411, 1415, 1441, 1442, 1443, 1444, 1445, 1449, 1451, 1453, 1460, 1462, 1464, 1467, 1468, 1470, 1474, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1492, 1495, 1498, 1502, 1503], "acycl": [1348, 1456], "ad": [65, 66, 69, 118, 120, 284, 293, 295, 304, 326, 343, 508, 554, 677, 1016, 1029, 1054, 1060, 1103, 1307, 1309, 1311, 1312, 1341, 1342, 1349, 1351, 1354, 1356, 1361, 1362, 1363, 1366, 1372, 1378, 1381, 1390, 1395, 1415, 1440, 1444, 1445, 1446, 1447, 1448, 1449, 1452, 1456, 1458, 1462, 1463, 1464, 1469, 1478, 1479, 1480, 1489, 1490, 1492, 1502, 1505], "ad_checkpoint": [1354, 1382, 1468, 1471], "adagrad": 1396, "adam": [1396, 1471, 1502, 1503], "adam_appli": 1503, "adam_st": 1503, "adam_upd": 1503, "adamax": 1396, "adapt": [277, 281, 282, 344, 345, 503, 531, 1341, 1395, 1396, 1450, 1453, 1471, 1474], "add": [10, 87, 88, 118, 120, 167, 311, 326, 327, 329, 343, 460, 505, 506, 584, 604, 649, 651, 668, 677, 700, 725, 762, 852, 864, 868, 877, 882, 899, 900, 927, 944, 969, 975, 976, 977, 978, 979, 980, 985, 1016, 1064, 1297, 1298, 1304, 1307, 1312, 1342, 1344, 1346, 1348, 1349, 1353, 1354, 1356, 1357, 1360, 1361, 1363, 1366, 1371, 1374, 1377, 1378, 1381, 1385, 1390, 1415, 1424, 1428, 1439, 1441, 1442, 1444, 1445, 1446, 1447, 1449, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1466, 1470, 1471, 1474, 1475, 1479, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1496, 1501], "add_arrai": [1470, 1500], "add_clear_backends_callback": 1354, "add_const": 1348, "add_dual": 1349, "add_eqn": 1348, "add_func": 1471, "add_jvp": 1348, "add_kernel": 1480, "add_matric": 1487, "add_matrices_kernel": [1487, 1493], "add_matrices_pipelin": 1487, "add_matrices_pipelined_kernel": 1487, "add_matrices_pipelined_megacor": 1493, "add_matrices_pipelined_param": 1487, "add_on": [1304, 1377, 1479], "add_one_inplac": 1479, "add_one_to_a_scalar": 1348, "add_p": [1348, 1414, 1446, 1452, 1460, 1466], "add_row": [1382, 1468], "add_subplot": 1469, "add_transpos": 1390, "add_transpose_rul": 1348, "add_var": 1348, "add_vector": 1488, "add_vector_kernel": 1488, "add_vectors_kernel": 1488, "add_with_out_sharding_kwarg": 1470, "addit": [10, 62, 67, 84, 104, 160, 166, 168, 180, 198, 236, 237, 241, 301, 365, 367, 458, 460, 493, 506, 508, 562, 570, 605, 610, 612, 625, 640, 645, 723, 820, 827, 829, 830, 847, 864, 877, 881, 910, 924, 947, 969, 1001, 1002, 1007, 1283, 1286, 1287, 1333, 1341, 1342, 1344, 1345, 1347, 1349, 1353, 1354, 1356, 1359, 1361, 1363, 1369, 1374, 1377, 1384, 1385, 1390, 1396, 1424, 1439, 1440, 1441, 1444, 1445, 1447, 1449, 1450, 1451, 1454, 1455, 1456, 1457, 1460, 1462, 1464, 1467, 1470, 1471, 1472, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1487, 1488, 1490, 1492, 1493, 1494, 1501, 1503, 1506, 1507], "addition": [65, 66, 201, 203, 206, 216, 409, 1013, 1015, 1345, 1354, 1356, 1366, 1374, 1376, 1377, 1431, 1448, 1449, 1456, 1474, 1478, 1483, 1484, 1490, 1494, 1506], "addop": [1390, 1446], "address": [2, 29, 98, 137, 497, 500, 501, 502, 578, 868, 1346, 1354, 1369, 1370, 1377, 1428, 1434, 1444, 1445, 1447, 1455, 1456, 1461, 1490, 1496], "addressable_data": [500, 501, 1354, 1440], "addressable_devic": [502, 1369, 1434], "addressable_devices_indices_map": [502, 1434], "addressable_shard": [1354, 1371, 1415, 1440, 1461], "adequ": [551, 1371], "adher": [1450, 1503], "adjac": [701, 819, 940, 958, 1075, 1446, 1470, 1483], "adjoint": [406, 1342, 1377, 1467], "adjust": [61, 363, 366, 367, 802, 950, 1112, 1342, 1354, 1381, 1463, 1483, 1501], "admittedli": 1448, "ado": 1474, "adopt": [1354, 1383, 1444, 1450, 1456, 1471, 1503], "advanc": [248, 286, 452, 1305, 1337, 1341, 1346, 1350, 1353, 1360, 1389, 1390, 1445, 1451, 1475, 1479, 1480, 1491, 1494, 1503], "advanced_configur": 1496, "advantag": [415, 1349, 1366, 1369, 1376, 1444, 1456, 1480, 1483, 1487, 1488, 1489, 1490], "advers": 1442, "advertis": 1503, "advic": [1462, 1502], "advis": [797, 1089], "adviso": 1462, "ae1": [1441, 1462], "ae2": [1441, 1462], "aelem": [1441, 1462], "aesthet": 1449, "affect": [81, 381, 504, 891, 1342, 1345, 1354, 1359, 1363, 1377, 1424, 1442, 1447, 1451, 1459, 1474, 1484, 1492, 1493, 1501], "affin": 1445, "aforement": 1442, "afoul": 1444, "after": [98, 112, 143, 253, 302, 335, 343, 344, 345, 346, 347, 361, 403, 421, 422, 436, 531, 582, 588, 614, 669, 701, 721, 763, 815, 867, 877, 878, 917, 923, 985, 1094, 1116, 1117, 1297, 1298, 1307, 1309, 1311, 1312, 1342, 1345, 1346, 1348, 1354, 1356, 1363, 1366, 1367, 1371, 1374, 1377, 1381, 1384, 1385, 1387, 1400, 1428, 1444, 1445, 1449, 1452, 1453, 1454, 1456, 1459, 1461, 1463, 1471, 1474, 1479, 1480, 1483, 1484, 1487, 1488, 1490, 1494, 1495, 1496, 1497, 1501, 1503, 1507], "after_1": 877, "after_2": 877, "after_n": 877, "after_valu": 877, "afterward": 1346, "afunct": 1367, "ag": [668, 1461, 1495], "again": [135, 160, 625, 1002, 1341, 1342, 1354, 1357, 1358, 1359, 1366, 1369, 1376, 1377, 1381, 1385, 1400, 1441, 1444, 1445, 1447, 1454, 1455, 1456, 1462, 1463, 1467, 1470, 1474, 1475, 1479, 1484, 1487, 1490, 1494, 1495, 1498, 1503], "against": [187, 1285, 1286, 1287, 1345, 1354, 1366, 1382, 1384, 1442, 1444, 1448, 1449, 1450, 1461, 1464, 1468, 1474, 1480, 1489, 1502, 1505], "agent": 1506, "aggreg": [305, 306, 739, 740, 742, 1342, 1500], "aggregate_to_topk": [305, 306], "aggress": [1381, 1428, 1462, 1505], "agil": 1341, "agnost": [1342, 1366, 1475], "ago": 1354, "agre": [98, 458, 1354, 1452, 1465, 1470, 1473, 1474], "agreement": [632, 679], "ahead": [804, 1335, 1343, 1347, 1349, 1354, 1361, 1371, 1435, 1447, 1470, 1478, 1480, 1487, 1503], "ai": [1364, 1383, 1461], "aid": 1344, "aim": [1341, 1348, 1416, 1431, 1444, 1448, 1449, 1454, 1474, 1486, 1501], "aka": [75, 520, 521, 522, 523, 547, 555, 1296, 1338, 1343, 1356, 1379, 1443], "akin": [1462, 1480, 1492], "al": [1431, 1503], "alabast": 1366, "alf": [1152, 1153], "algebra": [991, 1100, 1354, 1371, 1377, 1379, 1390, 1414, 1441, 1448, 1460, 1492, 1507], "algebraic_simplifi": 1377, "algorithm": [91, 305, 306, 360, 394, 406, 436, 454, 583, 807, 924, 938, 1094, 1104, 1118, 1342, 1353, 1354, 1356, 1378, 1380, 1424, 1431, 1448, 1455, 1467, 1474, 1484, 1490, 1492, 1495, 1498, 1503], "alia": [10, 147, 151, 154, 283, 294, 361, 558, 560, 561, 565, 566, 585, 593, 594, 596, 597, 598, 607, 608, 609, 611, 615, 622, 626, 630, 635, 647, 652, 653, 662, 665, 701, 711, 732, 759, 763, 784, 802, 807, 844, 857, 859, 863, 864, 879, 893, 895, 901, 903, 904, 926, 935, 970, 1302, 1303, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1329, 1330, 1354, 1370, 1382, 1396, 1424, 1428, 1444, 1468, 1471, 1475, 1479, 1484], "alias": [67, 95, 178, 514, 515, 547, 555, 1302, 1345, 1346, 1354, 1356, 1382, 1424, 1437, 1443, 1444, 1455, 1468, 1478, 1487, 1494, 1506], "alias_size_in_byt": 1471, "alic": 1506, "align": [614, 668, 777, 1148, 1155, 1354, 1445, 1488, 1489, 1494, 1503], "alik": 1503, "aliv": [1471, 1479], "all": [1, 10, 29, 61, 64, 67, 68, 69, 71, 72, 76, 82, 83, 84, 93, 96, 97, 98, 110, 111, 113, 133, 134, 135, 136, 138, 143, 164, 165, 166, 170, 172, 178, 180, 193, 209, 239, 245, 254, 291, 302, 303, 304, 335, 339, 356, 357, 361, 363, 366, 378, 407, 408, 422, 424, 425, 426, 427, 435, 436, 437, 458, 466, 481, 483, 488, 495, 496, 501, 504, 505, 506, 536, 538, 549, 568, 569, 582, 600, 601, 602, 614, 620, 624, 625, 631, 644, 657, 667, 685, 686, 690, 691, 695, 699, 700, 704, 705, 713, 721, 725, 726, 730, 733, 744, 750, 752, 760, 762, 776, 787, 790, 799, 804, 805, 818, 833, 836, 838, 842, 849, 850, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 870, 878, 887, 896, 898, 916, 921, 922, 923, 925, 932, 944, 946, 948, 957, 976, 977, 979, 981, 983, 987, 991, 993, 998, 999, 1000, 1001, 1002, 1006, 1016, 1026, 1028, 1083, 1086, 1102, 1105, 1149, 1151, 1160, 1266, 1283, 1284, 1288, 1304, 1305, 1306, 1307, 1313, 1333, 1341, 1342, 1344, 1345, 1348, 1349, 1351, 1353, 1354, 1357, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1385, 1387, 1390, 1402, 1411, 1415, 1428, 1431, 1434, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1473, 1475, 1478, 1480, 1483, 1484, 1485, 1487, 1489, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1502, 1503, 1504, 1505, 1506], "all_bias": [1382, 1468], "all_check": 1361, "all_default_mem_kind": 1390, "all_gath": [436, 1354, 1484], "all_gather_invari": [1447, 1474], "all_gather_invariant_p": 1447, "all_gather_kernel": 1490, "all_gather_p": 1447, "all_gather_ref": 1474, "all_reduc": 1490, "all_reduce_invari": 1447, "all_reduce_kernel": 1490, "all_to_al": [303, 437, 1354, 1447, 1490], "all_to_all_ref": 1474, "all_weight": [1382, 1468], "all_x": 1476, "allclos": [587, 588, 675, 682, 683, 685, 687, 739, 740, 742, 764, 788, 797, 804, 807, 808, 810, 811, 814, 815, 821, 823, 825, 826, 958, 1073, 1074, 1075, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1342, 1390, 1464, 1466, 1467, 1471, 1474, 1475], "allgath": [1381, 1447, 1474, 1503], "alloc": [174, 180, 1010, 1354, 1367, 1377, 1454, 1475, 1477, 1479, 1483, 1487, 1490, 1492, 1493, 1494], "allocatedi": 1380, "allow": [67, 76, 77, 80, 98, 110, 118, 126, 139, 148, 150, 198, 283, 289, 295, 337, 356, 362, 364, 365, 367, 404, 501, 504, 590, 620, 654, 666, 743, 762, 811, 922, 923, 927, 928, 934, 941, 985, 991, 992, 997, 1016, 1095, 1118, 1305, 1307, 1309, 1310, 1311, 1312, 1331, 1341, 1342, 1346, 1347, 1348, 1353, 1354, 1357, 1359, 1360, 1361, 1363, 1367, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1390, 1402, 1414, 1415, 1424, 1431, 1440, 1443, 1444, 1445, 1446, 1447, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1468, 1471, 1474, 1475, 1478, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1503, 1504, 1505, 1506], "allow_extended_dtyp": 103, "allow_growth": 1380, "allow_imprecise_accumul": 1424, "allow_int": [289, 294, 295, 1331], "allow_negative_indic": [362, 363, 364, 365, 366, 367, 1354], "allow_pickl": [922, 923], "allow_singular": [1248, 1249], "allow_split_physical_ax": [131, 132, 504], "allow_tf32": 144, "allowlist": 1354, "allreduc": [1381, 1503], "allreducesum": [1447, 1474], "alltoal": [1447, 1474], "alltru": 1354, "almost": [343, 1342, 1349, 1445, 1461, 1467, 1470, 1475, 1500], "almost_perex_grad": 1342, "alon": [1377, 1447, 1484], "along": [3, 4, 14, 34, 35, 36, 41, 53, 58, 60, 67, 120, 166, 177, 179, 180, 198, 206, 237, 253, 267, 303, 304, 305, 306, 307, 308, 311, 315, 338, 351, 352, 353, 354, 355, 362, 364, 387, 415, 416, 417, 425, 426, 427, 430, 431, 434, 435, 436, 458, 474, 475, 476, 477, 486, 501, 512, 536, 537, 538, 540, 549, 554, 563, 568, 569, 570, 571, 580, 581, 582, 583, 590, 602, 614, 619, 627, 632, 633, 634, 644, 646, 648, 649, 650, 651, 654, 655, 657, 658, 659, 660, 666, 667, 669, 670, 679, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 705, 706, 707, 731, 733, 743, 744, 753, 787, 790, 817, 818, 819, 831, 836, 837, 838, 839, 842, 843, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 876, 877, 878, 879, 887, 896, 898, 900, 901, 902, 910, 916, 919, 937, 938, 939, 941, 945, 946, 948, 950, 951, 955, 956, 958, 961, 962, 965, 966, 976, 977, 978, 979, 980, 981, 984, 985, 987, 989, 992, 993, 998, 999, 1000, 1001, 1002, 1023, 1026, 1044, 1049, 1071, 1072, 1073, 1074, 1075, 1077, 1110, 1111, 1112, 1114, 1115, 1149, 1151, 1160, 1245, 1265, 1266, 1283, 1342, 1344, 1348, 1354, 1370, 1371, 1377, 1378, 1384, 1385, 1390, 1402, 1428, 1441, 1444, 1445, 1447, 1448, 1449, 1454, 1455, 1460, 1463, 1467, 1470, 1471, 1472, 1474, 1475, 1478, 1480, 1484, 1487, 1489, 1490, 1492, 1494, 1500, 1503], "alongsid": [1378, 1384, 1446, 1495, 1503], "alpha": [296, 407, 507, 509, 533, 545, 1020, 1028, 1194, 1195, 1459, 1460, 1487, 1503], "alpha_i": [1028, 1194, 1195], "alphabet": [1341, 1501], "alphanumer": 255, "alreadi": [95, 98, 243, 502, 922, 923, 1342, 1348, 1354, 1357, 1361, 1366, 1369, 1371, 1374, 1377, 1378, 1384, 1390, 1411, 1440, 1447, 1448, 1449, 1452, 1453, 1454, 1463, 1464, 1465, 1467, 1473, 1480, 1487, 1489, 1490, 1492, 1496, 1501, 1502, 1504], "also": [67, 81, 91, 97, 113, 119, 120, 135, 140, 166, 178, 284, 322, 323, 324, 325, 343, 344, 345, 346, 347, 368, 378, 382, 383, 392, 397, 414, 419, 458, 459, 460, 467, 468, 469, 488, 505, 506, 570, 591, 614, 640, 641, 645, 668, 670, 675, 677, 701, 727, 728, 739, 740, 742, 801, 846, 865, 881, 911, 913, 914, 929, 931, 937, 944, 957, 969, 976, 1002, 1007, 1013, 1015, 1016, 1072, 1074, 1094, 1161, 1292, 1302, 1341, 1342, 1344, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1387, 1390, 1396, 1400, 1402, 1411, 1414, 1424, 1431, 1435, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506], "alter": [1344, 1368, 1402, 1495], "altern": [10, 67, 81, 178, 401, 413, 424, 434, 650, 651, 670, 864, 881, 899, 946, 987, 1052, 1296, 1310, 1312, 1342, 1345, 1348, 1354, 1366, 1369, 1370, 1371, 1378, 1380, 1382, 1390, 1428, 1431, 1443, 1444, 1445, 1448, 1455, 1461, 1463, 1467, 1468, 1479, 1483, 1484, 1488, 1490, 1495, 1496, 1497, 1500, 1506], "although": [465, 578, 655, 659, 722, 724, 1344, 1345, 1354, 1370, 1376, 1384, 1428, 1444, 1456, 1457, 1460, 1475, 1480, 1484, 1490, 1495, 1501], "altinstal": 1366, "altogeth": [1446, 1466, 1490], "alu": [1483, 1484], "alwai": [95, 100, 143, 167, 239, 451, 494, 578, 592, 595, 639, 655, 658, 659, 672, 673, 720, 750, 753, 793, 795, 883, 886, 889, 897, 911, 915, 921, 931, 967, 985, 1002, 1005, 1010, 1052, 1100, 1106, 1107, 1108, 1109, 1333, 1342, 1345, 1346, 1348, 1354, 1359, 1366, 1369, 1371, 1374, 1376, 1377, 1378, 1387, 1390, 1424, 1444, 1445, 1448, 1452, 1453, 1455, 1456, 1457, 1461, 1462, 1463, 1466, 1467, 1474, 1475, 1483, 1484, 1487, 1489, 1492, 1494, 1495, 1497, 1498, 1504, 1505], "am": 501, "amax": 837, "amazonaw": 1465, "ambigu": [578, 1306, 1359, 1464, 1479], "ambiguit": 1478, "amdgpu": 1384, "amen": 1480, "american": 1047, "amin": 843, "among": [206, 216, 435, 582, 878, 1307, 1354, 1371, 1382, 1385, 1415, 1431, 1446, 1450, 1452, 1468, 1483, 1484], "amongst": 1483, "amort": 1377, "amount": [67, 296, 423, 784, 914, 916, 1002, 1345, 1347, 1348, 1354, 1356, 1367, 1377, 1380, 1381, 1382, 1411, 1447, 1448, 1451, 1453, 1468, 1474, 1483, 1484, 1487, 1490, 1492, 1493, 1494, 1495, 1503], "an": [11, 12, 13, 18, 31, 39, 44, 45, 51, 55, 56, 57, 61, 62, 63, 67, 69, 73, 75, 80, 81, 82, 83, 84, 85, 87, 88, 91, 93, 94, 95, 96, 97, 98, 100, 106, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 136, 139, 143, 145, 150, 157, 160, 166, 168, 170, 174, 178, 179, 180, 187, 194, 198, 207, 208, 213, 214, 219, 220, 223, 224, 225, 236, 237, 239, 240, 247, 248, 250, 251, 252, 253, 255, 263, 268, 277, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 295, 296, 297, 298, 301, 303, 304, 305, 306, 311, 315, 316, 321, 322, 323, 324, 325, 326, 327, 331, 334, 335, 337, 338, 341, 343, 344, 347, 348, 349, 359, 360, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 378, 379, 380, 381, 387, 389, 396, 397, 398, 401, 402, 403, 404, 406, 411, 412, 413, 415, 416, 417, 418, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 435, 436, 437, 441, 442, 443, 444, 445, 447, 448, 450, 451, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 473, 474, 477, 478, 480, 482, 484, 485, 486, 488, 489, 493, 494, 495, 498, 499, 501, 502, 503, 504, 507, 508, 509, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 535, 536, 537, 538, 539, 541, 542, 545, 546, 547, 549, 551, 552, 554, 555, 559, 563, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 589, 590, 591, 592, 595, 599, 600, 601, 602, 603, 604, 606, 613, 614, 616, 617, 618, 619, 621, 623, 625, 626, 632, 633, 634, 636, 638, 639, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 659, 660, 661, 664, 666, 668, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 683, 685, 687, 688, 689, 690, 692, 696, 697, 699, 700, 701, 702, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 749, 751, 754, 761, 762, 763, 766, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 792, 793, 794, 795, 796, 801, 804, 805, 807, 808, 809, 810, 813, 814, 819, 820, 821, 822, 823, 824, 826, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 872, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 894, 896, 898, 899, 900, 901, 902, 903, 905, 907, 908, 909, 910, 911, 912, 914, 915, 916, 918, 919, 920, 922, 923, 924, 925, 927, 928, 929, 930, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 980, 981, 984, 985, 986, 987, 990, 991, 992, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1005, 1006, 1009, 1010, 1016, 1017, 1021, 1022, 1026, 1027, 1028, 1035, 1037, 1044, 1047, 1049, 1052, 1054, 1061, 1064, 1065, 1067, 1068, 1069, 1070, 1075, 1078, 1079, 1080, 1082, 1083, 1084, 1086, 1087, 1090, 1091, 1092, 1095, 1098, 1099, 1100, 1103, 1105, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1148, 1149, 1151, 1155, 1156, 1160, 1161, 1216, 1245, 1265, 1283, 1284, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1303, 1304, 1307, 1308, 1310, 1312, 1328, 1331, 1332, 1333, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1390, 1395, 1396, 1397, 1402, 1403, 1411, 1414, 1415, 1424, 1427, 1428, 1430, 1431, 1434, 1435, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506], "anaconda": 1366, "analog": [431, 432, 433, 1064, 1342, 1348, 1354, 1379, 1381, 1444, 1445, 1447, 1449, 1455, 1463, 1466, 1472, 1474, 1480, 1484, 1487, 1506], "analogi": [1382, 1468], "analogu": [378, 488, 1403, 1443, 1484], "analysi": [178, 1007, 1342, 1344, 1367, 1444, 1447, 1462, 1463, 1479, 1484, 1492, 1496], "analyt": [733, 1136], "analyz": [1471, 1479, 1484, 1486, 1492, 1496], "analyze_matmul": 1492, "anf": [1348, 1349, 1441], "angl": [578, 642, 652, 745, 903, 933, 952, 985], "angular": 761, "ani": [45, 57, 59, 61, 65, 66, 67, 69, 72, 73, 77, 80, 82, 83, 87, 88, 90, 91, 92, 94, 95, 97, 98, 103, 107, 108, 109, 110, 111, 113, 126, 127, 130, 131, 132, 134, 135, 136, 137, 139, 143, 148, 149, 150, 159, 160, 167, 169, 170, 172, 178, 180, 185, 186, 188, 189, 190, 191, 192, 198, 209, 219, 241, 244, 248, 258, 259, 267, 283, 284, 286, 287, 296, 297, 326, 337, 339, 343, 344, 356, 357, 359, 374, 405, 421, 422, 424, 431, 432, 433, 441, 449, 455, 458, 459, 480, 488, 495, 499, 500, 501, 503, 505, 531, 536, 540, 549, 556, 562, 586, 590, 592, 604, 605, 610, 612, 620, 625, 626, 628, 629, 645, 664, 666, 670, 671, 672, 673, 708, 709, 710, 720, 721, 723, 725, 727, 728, 731, 739, 743, 750, 753, 755, 756, 757, 758, 766, 767, 775, 776, 781, 805, 819, 820, 825, 826, 827, 828, 829, 830, 831, 833, 837, 843, 847, 865, 866, 871, 873, 874, 877, 911, 913, 921, 922, 929, 937, 944, 947, 954, 955, 957, 969, 971, 972, 973, 974, 988, 989, 991, 992, 995, 996, 997, 1002, 1016, 1062, 1065, 1067, 1095, 1099, 1105, 1116, 1117, 1118, 1149, 1160, 1209, 1283, 1284, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1305, 1306, 1310, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1330, 1331, 1332, 1333, 1334, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1354, 1356, 1357, 1359, 1363, 1365, 1366, 1367, 1368, 1369, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1390, 1396, 1400, 1402, 1411, 1414, 1424, 1431, 1435, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1472, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507], "anima": 1462, "ann": [1354, 1398], "annot": [0, 489, 506, 1329, 1354, 1356, 1371, 1377, 1439, 1447, 1452, 1458, 1464, 1470, 1475, 1493, 1503], "annotate_funct": [1354, 1496], "announc": [1345, 1416, 1446], "anoth": [112, 113, 343, 344, 348, 488, 504, 750, 921, 957, 976, 1013, 1015, 1116, 1117, 1119, 1333, 1342, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1359, 1360, 1363, 1369, 1370, 1371, 1374, 1377, 1378, 1382, 1387, 1390, 1411, 1428, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1455, 1456, 1459, 1461, 1462, 1463, 1465, 1467, 1468, 1473, 1474, 1475, 1479, 1480, 1484, 1490, 1496, 1497, 1498, 1499, 1502, 1506], "another_list_of_list": 1506, "anotherfunc": 1367, "ans1": [1342, 1348, 1467], "ans2": [1342, 1348, 1467], "ans3": 1348, "ans4": 1348, "ans_dot": [1342, 1463], "answer": [1342, 1349, 1352, 1357, 1359, 1369, 1377, 1378, 1448, 1463, 1467, 1479], "anti": [640, 645], "antialia": [291, 292], "antialias": [291, 292], "anticip": [1354, 1497, 1506], "antithesi": 1346, "any_f8_any_f8_ani": [1356, 1424], "any_f8_any_f8_any_fast_accum": [1356, 1424], "any_f8_any_f8_f32": [1356, 1424], "any_f8_any_f8_f32_fast_accum": [1356, 1424], "anybuff": 1378, "anymor": [620, 1354, 1371, 1374, 1478, 1484], "anyth": [98, 1002, 1302, 1342, 1349, 1361, 1363, 1366, 1374, 1390, 1411, 1440, 1442, 1444, 1447, 1449, 1465, 1466, 1467, 1470, 1473, 1475, 1484, 1506], "anywai": [1342, 1378, 1463, 1470, 1496, 1502], "anywher": [750, 921, 1383, 1501], "aot": [83, 424, 1354, 1381, 1385, 1435], "aot_cache_miss": 1385, "apach": [1465, 1473], "apart": 1490, "api": [13, 21, 75, 83, 93, 96, 97, 110, 111, 112, 198, 202, 248, 283, 286, 296, 321, 322, 323, 324, 325, 328, 348, 368, 382, 383, 392, 413, 414, 419, 429, 442, 443, 444, 445, 447, 448, 450, 454, 455, 460, 461, 462, 463, 464, 467, 468, 469, 498, 562, 578, 605, 610, 612, 633, 634, 646, 649, 650, 651, 670, 672, 680, 700, 723, 730, 763, 777, 787, 788, 790, 791, 794, 797, 799, 808, 810, 811, 813, 816, 817, 827, 829, 830, 846, 847, 852, 873, 882, 899, 900, 917, 944, 947, 949, 954, 957, 969, 995, 1002, 1005, 1006, 1010, 1016, 1075, 1080, 1081, 1082, 1085, 1089, 1090, 1095, 1097, 1098, 1101, 1105, 1308, 1309, 1311, 1341, 1344, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1359, 1361, 1363, 1371, 1374, 1376, 1378, 1380, 1381, 1382, 1383, 1384, 1390, 1396, 1404, 1408, 1409, 1410, 1415, 1424, 1435, 1439, 1443, 1446, 1451, 1455, 1456, 1462, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1477, 1478, 1479, 1480, 1484, 1485, 1486, 1488, 1490, 1493, 1497, 1498, 1502, 1503], "api_doc": 75, "api_util": 1446, "api_vers": [285, 286, 1334, 1371, 1378], "api_version_typed_ffi": 1378, "apicallback": 1496, "apivers": 1461, "app": [1342, 1390, 1462, 1463], "app2": [1342, 1463], "app2_jvp": [1342, 1463], "app_bwd": [1342, 1463], "app_fwd": [1342, 1463], "app_jvp": [1342, 1463], "appar": 1354, "appeal": 1447, "appear": [245, 343, 344, 421, 486, 762, 769, 787, 1002, 1245, 1284, 1333, 1342, 1346, 1348, 1354, 1371, 1374, 1385, 1387, 1390, 1441, 1459, 1462, 1463, 1470, 1474, 1485, 1493, 1496, 1506], "append": [178, 458, 506, 601, 660, 669, 881, 922, 923, 1348, 1349, 1351, 1366, 1367, 1370, 1459, 1485, 1494, 1506], "appl": [1341, 1354, 1384, 1506], "appli": [10, 67, 76, 79, 107, 113, 126, 194, 198, 254, 267, 280, 292, 296, 311, 339, 343, 344, 345, 346, 347, 362, 363, 364, 366, 387, 402, 415, 423, 434, 459, 460, 461, 462, 463, 464, 468, 469, 474, 476, 483, 495, 503, 508, 529, 543, 570, 571, 620, 723, 732, 821, 864, 866, 881, 887, 895, 900, 905, 911, 913, 926, 950, 951, 969, 1002, 1086, 1094, 1110, 1112, 1113, 1114, 1115, 1153, 1286, 1287, 1295, 1333, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1354, 1356, 1359, 1360, 1361, 1362, 1363, 1369, 1370, 1371, 1374, 1377, 1378, 1379, 1381, 1382, 1390, 1397, 1414, 1424, 1434, 1441, 1442, 1443, 1445, 1447, 1449, 1450, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1474, 1475, 1480, 1484, 1485, 1489, 1492, 1501, 1502, 1503, 1504, 1505, 1506], "applic": [0, 67, 98, 112, 198, 311, 378, 461, 481, 503, 531, 571, 1094, 1100, 1283, 1284, 1342, 1348, 1350, 1356, 1360, 1363, 1369, 1374, 1377, 1378, 1379, 1382, 1411, 1414, 1428, 1443, 1444, 1445, 1447, 1462, 1463, 1464, 1465, 1467, 1468, 1473, 1474, 1480, 1488, 1494, 1506], "applicatoin": 98, "apply_along_axi": [571, 1354], "apply_ex": 1472, "apply_fn": 1472, "apply_fun": [1397, 1451], "apply_lay": 1443, "apply_matrix": 1475, "apply_over_ax": [570, 1354], "apply_primit": 1460, "apply_upd": 1471, "approach": [67, 239, 578, 804, 934, 1052, 1136, 1140, 1342, 1348, 1349, 1353, 1366, 1377, 1378, 1381, 1444, 1446, 1450, 1452, 1455, 1456, 1463, 1467, 1469, 1471, 1474, 1480, 1483, 1484, 1487, 1488, 1498, 1503], "appropri": [136, 223, 239, 348, 360, 431, 432, 433, 684, 698, 701, 1026, 1040, 1354, 1371, 1376, 1377, 1378, 1380, 1384, 1415, 1428, 1444, 1445, 1447, 1448, 1456, 1474, 1475, 1480, 1484, 1497, 1498, 1500, 1503], "approv": 1444, "approx": 1148, "approx_": 1354, "approx_flop": 804, "approx_math": 150, "approx_max_k": [486, 582, 878], "approx_min_k": [486, 582, 878], "approxim": [150, 184, 305, 306, 495, 510, 564, 582, 701, 733, 764, 804, 878, 958, 1019, 1023, 1026, 1036, 1075, 1084, 1093, 1112, 1116, 1117, 1118, 1148, 1156, 1349, 1356, 1377, 1403, 1442, 1448, 1456, 1476, 1487, 1492, 1498], "april": [1365, 1377], "ar": [0, 9, 10, 12, 13, 61, 62, 64, 67, 69, 71, 76, 77, 79, 80, 81, 82, 91, 93, 94, 95, 97, 98, 100, 112, 113, 119, 120, 126, 136, 143, 150, 165, 166, 167, 172, 173, 178, 197, 198, 201, 203, 207, 209, 224, 238, 239, 244, 245, 248, 250, 251, 253, 254, 255, 257, 267, 268, 283, 284, 286, 290, 291, 292, 296, 303, 304, 305, 306, 311, 328, 331, 335, 337, 339, 343, 344, 349, 357, 360, 362, 363, 364, 365, 366, 367, 372, 373, 375, 378, 381, 387, 397, 398, 401, 404, 406, 411, 412, 415, 421, 422, 424, 431, 432, 433, 435, 457, 458, 459, 460, 461, 462, 463, 464, 466, 471, 473, 474, 475, 478, 481, 484, 485, 486, 488, 489, 494, 495, 500, 501, 502, 503, 505, 506, 508, 514, 515, 526, 529, 530, 531, 536, 538, 543, 547, 549, 555, 563, 564, 568, 570, 582, 587, 588, 589, 591, 595, 599, 600, 601, 602, 604, 620, 621, 625, 631, 632, 637, 638, 640, 641, 644, 645, 654, 658, 661, 664, 668, 669, 670, 671, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 716, 717, 720, 721, 723, 725, 726, 730, 732, 733, 738, 745, 746, 753, 762, 764, 766, 769, 772, 773, 775, 776, 778, 798, 801, 802, 804, 807, 808, 809, 811, 817, 821, 832, 833, 836, 837, 838, 839, 840, 842, 843, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 868, 877, 878, 879, 881, 882, 887, 895, 896, 897, 898, 899, 900, 901, 906, 912, 916, 918, 922, 923, 926, 927, 928, 931, 939, 946, 948, 950, 959, 960, 961, 962, 964, 965, 966, 969, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 989, 991, 994, 998, 999, 1000, 1001, 1002, 1016, 1017, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1039, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1082, 1083, 1086, 1090, 1092, 1094, 1095, 1098, 1099, 1101, 1103, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1114, 1116, 1117, 1118, 1134, 1135, 1149, 1151, 1152, 1153, 1160, 1161, 1162, 1245, 1265, 1266, 1271, 1273, 1283, 1285, 1286, 1287, 1295, 1302, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1333, 1334, 1337, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1389, 1390, 1395, 1396, 1397, 1400, 1402, 1403, 1404, 1408, 1411, 1414, 1415, 1423, 1424, 1428, 1431, 1434, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507], "ar1": [762, 927, 928, 975], "ar1_indic": 762, "ar2": [762, 927, 928, 975], "ar2_indic": 762, "arang": [0, 10, 13, 72, 74, 83, 128, 129, 136, 238, 242, 244, 248, 290, 296, 303, 311, 362, 363, 364, 387, 426, 435, 436, 449, 452, 473, 474, 500, 501, 502, 562, 570, 591, 599, 600, 601, 605, 610, 612, 614, 616, 619, 627, 633, 634, 638, 666, 667, 670, 673, 700, 705, 723, 725, 727, 728, 731, 744, 754, 761, 763, 783, 784, 792, 813, 816, 819, 827, 829, 830, 831, 832, 841, 847, 864, 865, 872, 874, 882, 901, 902, 913, 922, 923, 929, 937, 947, 951, 954, 956, 993, 994, 996, 998, 999, 1000, 1001, 1002, 1016, 1026, 1049, 1064, 1066, 1067, 1069, 1103, 1307, 1308, 1309, 1333, 1342, 1344, 1346, 1348, 1351, 1354, 1360, 1361, 1363, 1364, 1370, 1371, 1374, 1376, 1377, 1381, 1382, 1411, 1415, 1428, 1434, 1440, 1443, 1445, 1452, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1469, 1470, 1471, 1473, 1474, 1475, 1479, 1480, 1484, 1488, 1494, 1497, 1499, 1500, 1505, 1506], "arbitrari": [97, 296, 415, 458, 570, 582, 625, 627, 667, 725, 744, 751, 781, 878, 922, 923, 991, 993, 1002, 1086, 1136, 1305, 1342, 1347, 1348, 1350, 1354, 1369, 1390, 1396, 1411, 1435, 1444, 1449, 1451, 1452, 1453, 1467, 1473, 1478, 1484, 1489, 1492, 1493, 1497], "arbitrarili": [1396, 1453, 1475], "arc": [299, 309, 312, 313, 349, 471, 484], "arcco": [560, 575, 577, 642], "arccosh": [561, 576, 579, 643, 1354], "architectur": [1353, 1376, 1377, 1379, 1382, 1384, 1468, 1471, 1484, 1487, 1489], "archiv": [922, 923, 1366, 1371, 1384, 1415], "arcsin": [573, 577, 593, 933], "arcsinh": [574, 579, 594, 936], "arctan": [573, 575, 578, 596, 952], "arctan2": 597, "arctang": 578, "arctanh": [574, 576, 598, 953, 1466], "are_clos": 1471, "area": [740, 958, 1075, 1155, 1156, 1341, 1374, 1448], "aren": [402, 1361, 1369, 1382, 1443, 1445, 1446, 1447, 1454, 1468, 1469, 1474, 1479, 1497, 1501, 1506], "arg": [31, 45, 59, 62, 69, 82, 84, 107, 113, 126, 130, 143, 152, 153, 194, 198, 199, 200, 201, 202, 203, 204, 248, 254, 360, 394, 424, 438, 503, 529, 562, 570, 605, 610, 612, 616, 722, 724, 779, 820, 825, 826, 827, 829, 830, 837, 843, 847, 866, 881, 895, 913, 923, 926, 947, 951, 1003, 1008, 1016, 1040, 1105, 1283, 1285, 1286, 1287, 1295, 1296, 1304, 1342, 1346, 1348, 1349, 1354, 1359, 1363, 1371, 1374, 1378, 1382, 1385, 1390, 1396, 1402, 1403, 1415, 1434, 1435, 1441, 1442, 1460, 1461, 1466, 1468, 1480, 1492, 1494, 1497, 1502, 1506], "arg0": [1007, 1008, 1344, 1371, 1378, 1470, 1500], "arg1": [777, 1344, 1441, 1470, 1500], "arg2": [777, 1441], "arg_format": 1472, "arg_h": 1371, "arg_info": 1378, "arg_nam": 1435, "arg_shap": 1402, "arg_shard": [1378, 1402], "arg_spec": 1374, "arg_tang": 1390, "arg_token": 1371, "arg_valu": 1390, "arg_w": 1371, "argmax": [581, 849, 850, 900, 1354, 1377, 1465, 1473], "argmin": [580, 849, 850, 951, 1354], "argnum": [75, 238, 244, 289, 290, 293, 294, 295, 1331, 1350, 1390, 1467, 1476], "argpartit": 878, "args_av": 1371, "args_bar": 69, "args_flat": [1348, 1435], "args_info": [1378, 1435], "args_spec": [1354, 1374], "args_str": 1349, "argsort": [582, 787, 924, 938, 951, 1354, 1377], "arguabl": [1369, 1444, 1448, 1480], "argument": [10, 13, 67, 69, 73, 75, 76, 77, 78, 80, 81, 82, 84, 97, 98, 105, 107, 113, 118, 119, 120, 126, 127, 130, 137, 168, 178, 180, 181, 182, 194, 198, 223, 238, 239, 241, 244, 245, 248, 250, 251, 253, 254, 267, 268, 283, 284, 286, 289, 290, 291, 292, 293, 295, 296, 297, 337, 339, 356, 357, 361, 378, 397, 404, 430, 458, 459, 460, 481, 489, 494, 495, 500, 502, 503, 504, 517, 527, 531, 532, 538, 570, 572, 582, 584, 599, 600, 601, 619, 625, 626, 632, 636, 638, 640, 645, 650, 651, 661, 670, 672, 679, 685, 690, 723, 725, 746, 749, 762, 802, 807, 820, 832, 857, 859, 864, 868, 873, 877, 878, 879, 881, 897, 901, 902, 907, 917, 923, 924, 927, 950, 956, 957, 975, 976, 977, 978, 979, 980, 991, 995, 1002, 1007, 1009, 1016, 1017, 1037, 1072, 1074, 1084, 1086, 1099, 1103, 1105, 1111, 1116, 1117, 1118, 1151, 1162, 1245, 1265, 1266, 1283, 1284, 1285, 1286, 1287, 1295, 1296, 1303, 1304, 1307, 1308, 1310, 1331, 1332, 1333, 1346, 1348, 1349, 1350, 1351, 1354, 1356, 1359, 1360, 1361, 1363, 1366, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1385, 1390, 1396, 1397, 1402, 1403, 1411, 1415, 1427, 1428, 1431, 1434, 1435, 1440, 1441, 1444, 1445, 1447, 1448, 1449, 1451, 1453, 1454, 1455, 1460, 1461, 1462, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1478, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1493, 1494, 1497, 1499, 1500, 1502, 1503, 1506], "argument_size_in_byt": 1471, "argv": 1461, "argwher": 994, "ari": [590, 599, 600, 601, 666, 669, 743, 941, 992, 1506], "aris": [1342, 1348, 1370, 1374, 1377, 1385, 1390, 1441, 1443, 1447, 1462, 1463, 1487, 1494], "arisen": 1444, "arith": 1480, "arithmet": [245, 306, 413, 467, 468, 469, 531, 701, 886, 889, 892, 1348, 1354, 1374, 1377, 1431, 1447, 1456, 1462, 1469, 1474, 1483, 1484, 1490, 1492, 1493, 1503], "ariti": 1447, "arm": [1354, 1384], "aros": [976, 1370, 1454], "around": [61, 69, 84, 330, 341, 347, 362, 364, 365, 367, 387, 421, 442, 443, 444, 445, 447, 448, 450, 474, 481, 1011, 1309, 1311, 1341, 1342, 1348, 1354, 1360, 1363, 1370, 1374, 1376, 1378, 1382, 1383, 1424, 1444, 1445, 1446, 1447, 1448, 1449, 1452, 1456, 1461, 1462, 1463, 1468, 1474, 1479, 1484, 1490, 1494, 1502, 1503], "arr": [85, 136, 210, 219, 241, 243, 500, 502, 569, 570, 589, 626, 654, 657, 679, 754, 882, 900, 905, 922, 945, 951, 955, 962, 966, 976, 984, 1077, 1354, 1359, 1370, 1377, 1381, 1434, 1441, 1452, 1460, 1461, 1462, 1471, 1500], "arr1": 1470, "arr_0": 923, "arr_1": 923, "arr_dev": 1471, "arr_host": 1471, "arr_shap": [884, 890], "arr_shard": 1500, "arrai": [63, 64, 67, 69, 71, 72, 74, 75, 77, 78, 80, 81, 83, 85, 94, 95, 97, 100, 113, 118, 130, 131, 134, 135, 136, 137, 139, 141, 142, 143, 145, 155, 157, 160, 166, 167, 169, 176, 177, 178, 179, 182, 184, 194, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 254, 257, 276, 277, 280, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 500, 501, 502, 503, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 623, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 705, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 753, 754, 755, 756, 757, 758, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1010, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1304, 1307, 1308, 1309, 1310, 1312, 1329, 1331, 1332, 1333, 1338, 1341, 1342, 1343, 1344, 1347, 1348, 1350, 1351, 1354, 1359, 1360, 1361, 1363, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1378, 1379, 1382, 1385, 1390, 1391, 1396, 1402, 1403, 1411, 1414, 1415, 1424, 1427, 1429, 1431, 1434, 1439, 1441, 1442, 1446, 1447, 1451, 1453, 1454, 1455, 1456, 1459, 1460, 1463, 1465, 1466, 1467, 1469, 1471, 1473, 1474, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1497, 1498, 1499, 1500, 1503, 1504, 1505, 1506], "arrang": [501, 1342, 1445, 1463, 1474, 1484, 1490, 1503], "array1": 1440, "array2": 1440, "array2str": [589, 591], "array3": 1440, "array4": 1440, "array_abstraction_level": 1348, "array_api": [633, 880, 984, 1354, 1428], "array_cr": 1359, "array_equ": [588, 1354], "array_equiv": [587, 1354], "array_lik": [807, 922, 1086], "array_method": 1460, "array_operand": 1462, "array_ref": [1063, 1064, 1066, 1067, 1068, 1069, 1346, 1503], "array_repr": 591, "array_seri": 1354, "array_split": [666, 743, 941, 992, 1474], "array_str": 589, "array_typ": [1348, 1441], "arrayannot": 1444, "arrayimpl": [500, 502, 1354, 1359, 1444, 1475], "arrayinst": 1444, "arraylik": [3, 4, 11, 12, 14, 23, 34, 35, 36, 39, 40, 44, 47, 53, 54, 56, 58, 60, 143, 210, 225, 226, 278, 298, 299, 300, 301, 307, 308, 309, 310, 312, 313, 314, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 336, 338, 340, 344, 345, 348, 349, 350, 359, 360, 361, 363, 364, 365, 366, 367, 368, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 386, 389, 391, 392, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 429, 430, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 490, 500, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 587, 588, 590, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 616, 618, 621, 623, 625, 626, 627, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 666, 667, 669, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 729, 733, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 754, 761, 762, 763, 764, 765, 768, 769, 770, 771, 774, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 834, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 869, 876, 877, 879, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 898, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 924, 925, 927, 928, 929, 930, 931, 933, 934, 936, 937, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 952, 953, 955, 956, 957, 958, 960, 962, 963, 964, 966, 967, 968, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 992, 993, 994, 998, 999, 1000, 1001, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1070, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1110, 1111, 1112, 1113, 1114, 1115, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1354, 1435, 1439, 1444, 1452], "arrayref": [1062, 1064, 1065, 1066, 1067, 1068, 1069, 1343, 1432, 1503], "arriv": [148, 162, 166, 170, 1487, 1490], "arrow": [75, 1348, 1456], "arrows": 1456, "artifact": [1354, 1371, 1384, 1449, 1459, 1461], "artifici": [150, 1442, 1447, 1490], "arxiv": [239, 305, 306, 508, 553, 1018, 1047, 1396, 1445], "as_eul": 1120, "as_hashable_funct": 1354, "as_hlo_text": 1354, "as_matrix": 1119, "as_numpi": 1473, "as_numpy_iter": 1369, "as_rotvec": 1119, "as_supervis": 1473, "as_text": [1344, 1354, 1378, 1435], "asap": 1501, "asarrai": [128, 129, 293, 295, 586, 599, 600, 601, 722, 724, 1347, 1348, 1354, 1370, 1376, 1402, 1411, 1439, 1452, 1465, 1497, 1505, 1506], "ascend": [10, 398, 794, 796, 864, 950, 1424], "ascii": 1503, "ascii_lowercas": 1348, "asid": [1378, 1444, 1448, 1449, 1455, 1456, 1475, 1503], "asin": [299, 312, 471, 573, 577, 933], "asinh": [300, 314, 472], "ask": [1003, 1352, 1354, 1357, 1361, 1442, 1470, 1472], "asm": 194, "aspect": [1471, 1480, 1489, 1503], "assembl": [1461, 1500, 1503], "assembli": 194, "assert": [72, 120, 321, 356, 357, 501, 502, 991, 1027, 1305, 1342, 1344, 1346, 1348, 1349, 1354, 1360, 1361, 1369, 1371, 1376, 1378, 1381, 1390, 1402, 1434, 1441, 1444, 1445, 1456, 1461, 1466, 1467, 1472, 1474, 1478, 1483, 1484, 1485, 1490, 1492, 1494, 1504], "assert_allclos": [1040, 1348, 1354, 1378, 1475, 1483, 1488, 1492, 1493], "assert_array_equ": [1484, 1487, 1492], "assert_gradient_neg": 1361, "assertallclos": 1354, "assertionerror": [1285, 1286, 1287], "assess": 534, "assign": [98, 493, 645, 923, 1070, 1348, 1354, 1357, 1369, 1411, 1434, 1462, 1475, 1479, 1484, 1488, 1489, 1493], "assist": 1354, "associ": [93, 100, 108, 311, 343, 344, 365, 367, 441, 505, 571, 604, 701, 720, 761, 804, 881, 1004, 1006, 1026, 1087, 1096, 1097, 1152, 1153, 1298, 1342, 1348, 1354, 1369, 1377, 1378, 1435, 1445, 1449, 1455, 1456, 1457, 1463, 1469, 1470, 1474, 1480, 1484, 1500, 1505], "associative_scan": 1356, "assum": [10, 130, 136, 160, 284, 292, 356, 357, 408, 501, 531, 543, 654, 762, 769, 807, 811, 864, 906, 924, 927, 928, 950, 985, 991, 1002, 1016, 1026, 1084, 1098, 1099, 1110, 1113, 1307, 1342, 1348, 1357, 1366, 1369, 1371, 1374, 1376, 1377, 1378, 1390, 1402, 1431, 1440, 1442, 1444, 1450, 1453, 1461, 1463, 1466, 1467, 1469, 1474, 1479, 1480, 1484, 1485, 1487, 1490, 1492, 1493, 1494, 1495, 1497, 1498], "assume_a": [1098, 1354], "assume_uniqu": [210, 762, 769, 927, 928], "assume_unique_indic": 654, "assumpt": [145, 404, 501, 985, 1348, 1374, 1376, 1378, 1461, 1493], "ast": [1348, 1359, 1480], "astyp": [348, 572, 866, 892, 1052, 1354, 1376, 1377, 1381, 1460, 1462, 1476, 1480, 1483, 1489, 1492, 1494], "asymmetr": [1456, 1490], "asymmetri": 1451, "asymptot": [1148, 1346], "async": [150, 1361, 1381, 1481, 1483, 1484, 1486, 1487, 1493], "async_copi": [1484, 1493], "async_copy_op": 1490, "async_load_tmem": 1484, "async_store_tmem": [165, 1484], "asynccopydescriptor": 1490, "asynchron": [18, 95, 160, 161, 166, 167, 172, 174, 1354, 1367, 1377, 1381, 1442, 1459, 1475, 1477, 1479, 1482, 1483, 1487, 1489, 1490, 1493, 1496], "asynchroni": [1484, 1487], "atan": [299, 309, 313, 484, 573, 575, 577, 952], "atan2": [312, 484, 578, 985], "atanh": [300, 310, 485, 1466], "atleast_1d": [600, 601], "atleast_2d": [599, 601], "atleast_3d": [599, 600], "atol": [564, 764, 797, 804, 807, 808, 811, 814, 1082, 1089, 1095, 1096, 1097, 1101, 1116, 1117, 1118, 1285, 1286, 1287, 1342, 1467, 1471, 1474, 1475, 1492], "atom": [185, 186, 187, 188, 189, 190, 191, 192, 257, 258, 1348, 1349, 1441, 1457, 1480, 1488], "atomic_": 1478, "atop": 1431, "atrou": [343, 344, 345, 346, 347], "att_out": 1503, "att_qkv": 1503, "att_skip": 1503, "attach": [1348, 1349, 1354, 1415, 1461, 1489, 1495, 1503], "attempt": [69, 87, 88, 98, 131, 160, 252, 253, 328, 504, 944, 1086, 1346, 1354, 1356, 1359, 1370, 1374, 1376, 1377, 1381, 1385, 1390, 1414, 1444, 1445, 1448, 1459, 1462, 1464, 1475, 1483, 1489, 1493, 1494, 1495, 1496], "attend": [508, 1445], "attent": [508, 1381, 1445, 1480, 1484, 1494, 1503], "attn": 1445, "attr": [1377, 1378], "attrgett": 1348, "attribut": [0, 21, 62, 63, 67, 69, 72, 76, 80, 102, 106, 113, 126, 130, 132, 139, 140, 141, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 183, 199, 200, 201, 202, 203, 204, 248, 256, 257, 258, 259, 260, 262, 267, 283, 284, 337, 394, 494, 503, 624, 628, 629, 631, 668, 673, 701, 704, 708, 709, 710, 713, 728, 730, 748, 752, 755, 756, 757, 758, 760, 865, 870, 871, 874, 923, 929, 932, 937, 969, 971, 972, 973, 974, 977, 978, 979, 983, 996, 1007, 1008, 1016, 1062, 1063, 1065, 1104, 1119, 1120, 1209, 1304, 1307, 1308, 1344, 1346, 1348, 1354, 1367, 1371, 1377, 1378, 1382, 1390, 1414, 1415, 1439, 1440, 1444, 1452, 1455, 1459, 1460, 1461, 1468, 1472, 1475, 1502], "attributeerror": 1348, "attributekeypathentri": 1354, "atupl": 1506, "audienc": 1446, "aug": 1387, "augment": [1445, 1470, 1474, 1480], "august": [1365, 1368, 1369, 1371, 1444, 1447, 1455], "aupdat": 191, "author": [1444, 1465, 1473, 1501], "auto": [98, 198, 397, 404, 670, 671, 769, 991, 1106, 1107, 1108, 1109, 1349, 1354, 1356, 1357, 1366, 1378, 1431, 1441, 1472, 1474, 1500], "auto_ax": 1354, "auto_batch_convolv": 1351, "auto_batch_convolve_v2": 1351, "auto_mesh": 1470, "auto_spmd_partit": 493, "auto_spmd_partitioning_mesh_id": 493, "auto_spmd_partitioning_mesh_shap": 493, "autobatch": 1343, "autodesk": 1387, "autodetect": 98, "autodidax": [1354, 1358], "autodidax2": 1358, "autodiff": [67, 72, 201, 203, 356, 378, 481, 1064, 1105, 1341, 1343, 1344, 1346, 1350, 1354, 1356, 1368, 1376, 1377, 1379, 1382, 1414, 1445, 1446, 1447, 1449, 1453, 1463, 1474, 1475], "autodifferenti": [1378, 1466], "autodoc": 1444, "autodoc_type_alias": 1444, "autograd": [1342, 1359, 1449, 1467], "autom": [1354, 1366, 1384, 1387], "automat": [67, 75, 76, 79, 80, 98, 120, 150, 198, 293, 295, 356, 360, 461, 481, 489, 493, 504, 508, 543, 733, 788, 794, 796, 804, 911, 991, 997, 1085, 1105, 1163, 1164, 1283, 1285, 1286, 1287, 1337, 1338, 1348, 1352, 1354, 1356, 1357, 1360, 1361, 1362, 1366, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1389, 1390, 1403, 1411, 1431, 1434, 1440, 1442, 1443, 1445, 1447, 1449, 1452, 1457, 1460, 1461, 1462, 1463, 1465, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1488, 1490, 1492, 1493, 1496, 1498, 1499, 1503, 1506], "autotun": [1483, 1495], "aux": [297, 495, 1310, 1332, 1354], "aux1": 269, "aux2": 269, "aux_arg": 69, "aux_data": [1308, 1309, 1310, 1311, 1377, 1497, 1506], "auxdata": 253, "auxiliari": [267, 289, 290, 293, 295, 297, 356, 357, 495, 1308, 1310, 1331, 1332, 1341, 1385, 1396, 1497, 1506], "auxiliary_data": [289, 293, 295, 1331], "avail": [62, 76, 81, 83, 96, 98, 239, 291, 292, 296, 303, 315, 316, 331, 349, 372, 373, 375, 380, 397, 411, 412, 424, 426, 435, 436, 457, 471, 478, 484, 485, 493, 501, 508, 637, 638, 641, 661, 725, 732, 800, 818, 895, 896, 905, 911, 922, 923, 926, 927, 944, 948, 975, 994, 1002, 1100, 1106, 1107, 1108, 1109, 1112, 1134, 1346, 1347, 1348, 1354, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1366, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1411, 1414, 1415, 1424, 1431, 1434, 1439, 1442, 1443, 1444, 1448, 1452, 1456, 1459, 1460, 1461, 1462, 1464, 1468, 1469, 1470, 1471, 1475, 1478, 1483, 1484, 1487, 1489, 1490, 1493, 1494, 1496, 1500, 1503, 1505], "aval": [259, 262, 1063, 1348, 1385, 1390, 1440, 1456, 1460, 1470], "aval_to_ir_typ": 1348, "avals_in": [1348, 1390], "avals_out": [1348, 1390], "averag": [531, 838, 1110, 1115, 1265, 1374, 1503], "avg": 1494, "avgpool": 1397, "avoid": [67, 82, 84, 97, 494, 495, 508, 554, 572, 627, 633, 634, 655, 659, 667, 744, 776, 825, 826, 840, 923, 945, 993, 1153, 1308, 1310, 1342, 1347, 1348, 1349, 1354, 1356, 1359, 1363, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1396, 1442, 1446, 1447, 1448, 1450, 1454, 1455, 1459, 1460, 1461, 1462, 1471, 1474, 1475, 1477, 1478, 1479, 1480, 1483, 1484, 1488, 1490, 1494, 1495, 1497, 1498, 1499, 1503, 1506], "avx": 1354, "avx512": 1354, "awai": [69, 677, 834, 846, 905, 911, 917, 944, 949, 957, 1342, 1369, 1424, 1428, 1440, 1449, 1454, 1463, 1470, 1474, 1479, 1480, 1487, 1501, 1503], "await": [150, 160, 167, 172, 1483], "awar": [65, 66, 238, 244, 337, 777, 857, 913, 1310, 1356, 1370, 1378, 1461, 1475, 1489], "away_from_zero": [456, 1424], "aweight": 645, "awesom": [1352, 1383, 1453], "awkward": [1445, 1447, 1479], "ax": [52, 55, 59, 131, 132, 136, 166, 180, 198, 215, 222, 346, 365, 367, 388, 415, 442, 443, 444, 445, 447, 448, 450, 458, 504, 520, 521, 522, 523, 524, 525, 531, 536, 537, 538, 540, 549, 554, 563, 568, 570, 571, 602, 627, 644, 646, 667, 670, 671, 677, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 705, 733, 744, 790, 805, 813, 814, 815, 836, 838, 839, 842, 846, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 879, 880, 896, 898, 901, 911, 916, 917, 919, 937, 944, 945, 946, 948, 949, 954, 956, 957, 960, 964, 987, 993, 1002, 1016, 1072, 1074, 1099, 1112, 1116, 1117, 1118, 1149, 1151, 1160, 1245, 1266, 1283, 1284, 1333, 1348, 1351, 1354, 1378, 1390, 1411, 1434, 1441, 1447, 1448, 1454, 1456, 1460, 1462, 1464, 1469, 1470, 1471, 1475, 1484, 1485, 1489, 1490, 1499, 1500, 1503], "axi": [1, 3, 4, 5, 6, 7, 8, 14, 19, 20, 34, 35, 36, 40, 41, 44, 51, 52, 53, 54, 56, 60, 61, 137, 166, 177, 179, 180, 198, 206, 222, 283, 303, 304, 306, 307, 308, 311, 315, 316, 337, 338, 351, 352, 353, 354, 355, 362, 364, 365, 367, 387, 415, 416, 417, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 442, 443, 444, 445, 447, 448, 450, 452, 458, 474, 477, 486, 501, 503, 504, 512, 519, 520, 521, 522, 523, 524, 525, 528, 531, 536, 537, 538, 540, 544, 549, 554, 563, 565, 566, 568, 569, 570, 571, 580, 581, 582, 583, 590, 602, 614, 619, 627, 632, 633, 634, 644, 646, 648, 649, 650, 651, 654, 659, 660, 666, 667, 669, 670, 677, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 705, 706, 707, 731, 733, 743, 744, 750, 753, 754, 787, 790, 805, 817, 818, 819, 831, 834, 836, 837, 838, 839, 842, 843, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 876, 877, 878, 879, 896, 898, 900, 901, 902, 910, 916, 917, 919, 921, 937, 938, 939, 941, 944, 945, 946, 948, 949, 950, 951, 955, 956, 957, 958, 961, 962, 965, 966, 976, 981, 984, 985, 987, 989, 992, 993, 998, 999, 1000, 1001, 1002, 1016, 1023, 1026, 1044, 1045, 1049, 1054, 1071, 1072, 1073, 1074, 1075, 1110, 1111, 1113, 1114, 1115, 1119, 1149, 1151, 1160, 1216, 1245, 1265, 1266, 1283, 1284, 1333, 1342, 1348, 1351, 1354, 1363, 1369, 1370, 1371, 1374, 1377, 1378, 1390, 1397, 1402, 1411, 1434, 1444, 1445, 1447, 1461, 1462, 1464, 1465, 1469, 1471, 1473, 1474, 1476, 1478, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1493, 1494, 1497, 1500, 1501, 1503, 1506], "axicy2daaaaaewab": 1366, "axis1": [22, 55, 58, 659, 949, 956], "axis2": [22, 55, 58, 659, 949, 956], "axis_": 1348, "axis_context": 1390, "axis_env": 503, "axis_fram": 1354, "axis_group": 1354, "axis_index": [436, 1447, 1474, 1479, 1480, 1483, 1484, 1490], "axis_index_group": [303, 304, 425, 426, 427, 435, 436, 437, 1354, 1445, 1474], "axis_nam": [303, 304, 315, 316, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 504, 1002, 1283, 1284, 1333, 1354, 1361, 1381, 1402, 1434, 1445, 1447, 1474, 1479, 1484], "axis_resourc": 1354, "axis_s": [72, 73, 304, 1002, 1333, 1348, 1354, 1445, 1474, 1479], "axis_shap": 504, "axis_size_env": 1390, "axis_typ": [504, 1390, 1434, 1470, 1474, 1500], "axisa": 646, "axisb": 646, "axisc": 646, "axisenv": 1354, "axisnam": [289, 315, 316, 503, 540, 1002, 1283, 1284, 1331, 1332, 1333, 1354, 1474], "axiss": 1354, "axistyp": [504, 1434, 1470, 1500, 1503], "axlearn": 1383, "azimuth": 1162, "b": [13, 23, 75, 105, 127, 144, 174, 208, 229, 233, 240, 283, 290, 298, 311, 320, 339, 356, 408, 410, 455, 458, 483, 503, 508, 538, 543, 544, 553, 559, 564, 569, 614, 646, 664, 668, 675, 676, 721, 753, 764, 778, 781, 797, 798, 802, 810, 815, 821, 833, 875, 897, 900, 922, 954, 963, 988, 989, 991, 1020, 1048, 1056, 1077, 1078, 1079, 1082, 1084, 1089, 1091, 1092, 1098, 1099, 1116, 1117, 1118, 1122, 1123, 1124, 1141, 1142, 1151, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1194, 1195, 1260, 1261, 1269, 1270, 1271, 1272, 1273, 1274, 1289, 1290, 1328, 1333, 1341, 1342, 1344, 1348, 1349, 1350, 1354, 1356, 1357, 1363, 1366, 1369, 1371, 1374, 1378, 1382, 1390, 1415, 1441, 1445, 1446, 1449, 1454, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1473, 1474, 1475, 1479, 1483, 1497, 1502, 1506], "b0": 1490, "b0_bar": [1342, 1463], "b1": [1348, 1396, 1464, 1505], "b19a2dc1abf7": [1342, 1463], "b1_": 1348, "b1_bar": [1342, 1463], "b1b1u1u2u4u8i1i2i4i8bff2f4f8c8c16i": 1505, "b1u1u2u4u8i1i2i4i8bff2f4f8c8c16i": 1505, "b2": [1348, 1396, 1464], "b2_": 1348, "b3": 1464, "b4": 1464, "b_1": 1121, "b_block": [1445, 1474], "b_block_siz": 544, "b_first": 1474, "b_frag": 1474, "b_gmem": [1483, 1484], "b_grad": [1350, 1467], "b_grad_autodiff": [1350, 1467], "b_grad_numer": [1350, 1467], "b_i": [538, 1151], "b_init": 1397, "b_k": 1492, "b_kei": [1342, 1350, 1465, 1467, 1473], "b_last": 1474, "b_load": 1484, "b_m": 1492, "b_n": [1121, 1492], "b_reconstruct": 815, "b_ref": 1484, "b_scale": [543, 544], "b_slice": 1484, "b_smem": [1483, 1484], "b_smem_wg": 1483, "b_tma_barri": 1484, "ba": [1084, 1382, 1462, 1468], "back": [81, 83, 119, 240, 288, 337, 452, 458, 543, 969, 1342, 1346, 1347, 1348, 1349, 1354, 1356, 1366, 1369, 1370, 1371, 1376, 1377, 1378, 1381, 1396, 1400, 1414, 1440, 1442, 1444, 1445, 1449, 1462, 1463, 1465, 1467, 1471, 1472, 1473, 1474, 1475, 1484, 1487, 1488, 1490, 1492, 1493, 1497, 1498, 1500, 1501, 1503, 1506], "backend": [10, 67, 81, 89, 93, 96, 98, 143, 178, 180, 196, 240, 248, 296, 341, 343, 344, 345, 346, 347, 360, 381, 404, 459, 460, 461, 462, 463, 464, 493, 496, 497, 498, 505, 506, 508, 543, 619, 664, 670, 753, 793, 795, 799, 804, 813, 817, 833, 841, 864, 872, 886, 889, 902, 924, 950, 954, 988, 989, 1002, 1004, 1005, 1006, 1010, 1011, 1095, 1110, 1344, 1348, 1350, 1354, 1357, 1363, 1376, 1379, 1383, 1390, 1408, 1411, 1424, 1425, 1435, 1441, 1451, 1454, 1456, 1462, 1478, 1480, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1507], "backend_compil": 1354, "backend_config": [284, 1371, 1378], "backend_independent_test": 1366, "backend_specific_transl": 1354, "background": [150, 1342, 1467, 1481, 1489, 1491, 1505], "backofflimit": 1461, "backpressur": 1484, "backpropag": [541, 1342], "backtrac": 1363, "backward": [67, 75, 80, 356, 403, 543, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 701, 1071, 1072, 1073, 1074, 1103, 1285, 1342, 1346, 1348, 1354, 1361, 1363, 1378, 1381, 1382, 1390, 1400, 1411, 1443, 1444, 1445, 1446, 1449, 1450, 1452, 1457, 1462, 1463, 1466, 1468, 1471, 1474, 1492, 1503], "backward_pass": [1348, 1462], "bad": [1369, 1387, 1445, 1455, 1476, 1479, 1498], "bad_example_jit": 1359, "bag": 1444, "baggag": 1444, "bake": [1348, 1466, 1502], "balanc": [1381, 1456, 1457, 1492], "ball": 1354, "ban": 1354, "banana": 1506, "band": 1484, "bandwidth": [1369, 1474, 1484, 1487, 1488, 1490, 1492, 1493, 1494], "bank": 1484, "banker": 1424, "bar": [84, 285, 1306, 1348, 1366, 1451, 1466, 1476, 1498], "bare": 1492, "barrier": [138, 150, 162, 163, 165, 166, 172, 422, 1461, 1479, 1483, 1493], "barrier_arr": [166, 1484], "barrier_ref": 1484, "barrier_scop": 1484, "barrier_sem": [1479, 1490], "barrier_wait": [166, 1484], "bartlett": [613, 736, 737, 780], "base": [0, 103, 204, 220, 239, 250, 251, 296, 331, 349, 372, 373, 375, 380, 389, 403, 411, 412, 424, 430, 449, 457, 465, 471, 478, 483, 484, 485, 503, 534, 620, 624, 625, 631, 675, 676, 678, 701, 704, 712, 713, 730, 752, 760, 766, 775, 802, 807, 821, 822, 823, 824, 826, 831, 870, 881, 882, 894, 913, 925, 932, 942, 943, 983, 994, 1052, 1070, 1078, 1090, 1091, 1094, 1112, 1135, 1148, 1156, 1342, 1345, 1348, 1349, 1354, 1357, 1361, 1369, 1371, 1374, 1376, 1379, 1381, 1383, 1384, 1396, 1411, 1424, 1431, 1434, 1435, 1444, 1447, 1448, 1449, 1451, 1455, 1456, 1458, 1463, 1464, 1467, 1469, 1471, 1474, 1475, 1479, 1480, 1489, 1494, 1498, 1503, 1504, 1505], "base_dil": 449, "basearrai": 502, "baselin": 1471, "bash": [1366, 1387, 1461], "basi": [239, 1153, 1162, 1342, 1443, 1448, 1457, 1460, 1465, 1467, 1470, 1473, 1493], "basic": [381, 459, 460, 544, 604, 620, 1304, 1341, 1357, 1366, 1377, 1378, 1380, 1389, 1390, 1447, 1448, 1449, 1453, 1461, 1467, 1475, 1479, 1484, 1486, 1489, 1490, 1492, 1493, 1494, 1503, 1506], "bat": 1306, "batch": [33, 72, 73, 74, 199, 200, 206, 211, 216, 221, 222, 223, 226, 227, 240, 241, 283, 291, 317, 339, 343, 344, 360, 395, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 415, 422, 483, 501, 508, 543, 646, 664, 753, 788, 792, 799, 805, 810, 816, 817, 818, 833, 834, 835, 924, 957, 960, 964, 984, 988, 989, 990, 991, 1016, 1018, 1028, 1034, 1044, 1045, 1047, 1078, 1080, 1081, 1098, 1099, 1102, 1118, 1216, 1333, 1342, 1344, 1351, 1354, 1359, 1369, 1374, 1377, 1379, 1382, 1383, 1397, 1402, 1424, 1431, 1439, 1441, 1443, 1445, 1446, 1447, 1451, 1455, 1460, 1461, 1467, 1468, 1469, 1475, 1480, 1488, 1490, 1500, 1503], "batch_": 1474, "batch_ax": 1390, "batch_axi": [520, 521, 522, 523, 524, 525, 531], "batch_convolve_v3": 1351, "batch_dim": [199, 1348, 1492], "batch_group_count": [343, 1354], "batch_partition_spec": 1440, "batch_shd": 1378, "batch_singl": 1464, "batch_siz": [415, 1461, 1464, 1465, 1473, 1474, 1476], "batchaxi": 1348, "batched_apply_matrix": 1475, "batched_f": 1348, "batched_kei": 1455, "batched_log_joint": 1476, "batched_pr": [1465, 1473], "batched_predict": [1465, 1473], "batched_r_t": 1342, "batched_s_t": 1342, "batched_s_tm1": 1342, "batched_test_beta": 1476, "batched_theta": 1342, "batched_x": 1475, "batchnorm": [1354, 1397, 1502], "batchtrac": [1344, 1348, 1390, 1446], "bayesian": [1343, 1353], "baz": [1306, 1348, 1451, 1498], "bazel": [1354, 1457], "bazel_opt": 1366, "bazelrc": 1366, "bb": [1382, 1462, 1468], "bc": [1354, 1382, 1384, 1462, 1468], "bcoo": [201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 236, 237, 238, 241, 242, 244], "bcsr": [224, 225, 226, 227], "bct": 1390, "bd": [1348, 1382, 1462, 1468], "bdim": 1348, "bdim_out": 1348, "bdims_in": 1348, "bdims_out": 1348, "beam": 1023, "bear": 1452, "becam": [1444, 1454, 1455, 1460], "becaus": [67, 82, 84, 113, 128, 129, 197, 378, 402, 481, 488, 494, 505, 506, 584, 614, 638, 654, 672, 673, 722, 724, 750, 762, 776, 804, 857, 859, 868, 917, 921, 927, 928, 975, 976, 977, 978, 979, 980, 985, 1002, 1097, 1103, 1112, 1134, 1140, 1304, 1308, 1310, 1342, 1346, 1348, 1349, 1350, 1354, 1359, 1360, 1363, 1364, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1382, 1385, 1386, 1390, 1396, 1402, 1414, 1415, 1428, 1431, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1456, 1457, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1483, 1484, 1486, 1487, 1488, 1490, 1492, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1506], "becom": [327, 640, 645, 787, 1285, 1286, 1287, 1341, 1345, 1354, 1361, 1363, 1369, 1374, 1377, 1378, 1386, 1438, 1440, 1442, 1444, 1449, 1451, 1452, 1454, 1456, 1458, 1459, 1460, 1475, 1479, 1484, 1487, 1490, 1492, 1494, 1501, 1502, 1503], "been": [97, 160, 161, 335, 638, 955, 1014, 1105, 1113, 1116, 1117, 1290, 1353, 1354, 1357, 1366, 1370, 1371, 1377, 1378, 1383, 1398, 1415, 1429, 1431, 1440, 1441, 1443, 1444, 1447, 1448, 1450, 1452, 1454, 1455, 1464, 1465, 1466, 1478, 1479, 1484, 1487, 1488, 1490, 1494, 1495, 1498, 1504], "befor": [98, 118, 131, 143, 148, 150, 160, 168, 170, 229, 230, 233, 234, 253, 283, 343, 344, 345, 346, 347, 395, 398, 422, 435, 529, 531, 569, 582, 583, 640, 645, 660, 877, 878, 900, 917, 938, 950, 951, 976, 1118, 1345, 1346, 1347, 1348, 1349, 1354, 1356, 1360, 1366, 1367, 1369, 1371, 1374, 1377, 1378, 1382, 1384, 1385, 1387, 1400, 1402, 1411, 1415, 1431, 1440, 1441, 1442, 1444, 1447, 1449, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1464, 1466, 1468, 1471, 1474, 1475, 1478, 1479, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1500, 1501, 1503, 1507], "before_1": 877, "before_2": 877, "before_n": 877, "before_valu": 877, "beforehand": 1490, "began": [1448, 1456], "begin": [148, 333, 343, 470, 507, 509, 516, 533, 545, 551, 552, 582, 721, 738, 878, 899, 923, 930, 1056, 1102, 1126, 1140, 1147, 1148, 1155, 1159, 1161, 1167, 1168, 1190, 1192, 1198, 1200, 1260, 1261, 1265, 1271, 1273, 1276, 1277, 1342, 1349, 1350, 1351, 1359, 1376, 1378, 1442, 1444, 1446, 1448, 1456, 1467, 1471, 1475, 1479, 1483, 1484, 1487, 1488, 1490, 1492, 1493, 1494, 1495, 1496, 1506], "begun": 1444, "behalf": 1442, "behav": [10, 76, 79, 95, 495, 864, 994, 1016, 1103, 1346, 1354, 1361, 1366, 1376, 1377, 1382, 1431, 1439, 1441, 1449, 1451, 1454, 1455, 1459, 1461, 1462, 1468, 1472, 1479, 1480, 1485, 1487, 1489, 1493, 1503], "behavior": [9, 10, 67, 72, 82, 83, 91, 97, 100, 112, 113, 126, 128, 129, 136, 150, 223, 267, 283, 363, 381, 395, 397, 404, 424, 436, 459, 460, 461, 462, 463, 464, 466, 557, 595, 625, 687, 720, 762, 788, 794, 796, 798, 849, 850, 864, 896, 913, 918, 927, 928, 948, 950, 951, 957, 969, 994, 1016, 1103, 1110, 1116, 1117, 1118, 1304, 1342, 1345, 1346, 1354, 1359, 1360, 1363, 1368, 1374, 1376, 1378, 1380, 1381, 1382, 1390, 1403, 1411, 1424, 1440, 1442, 1444, 1445, 1446, 1449, 1451, 1452, 1454, 1455, 1456, 1462, 1463, 1468, 1471, 1472, 1474, 1478, 1484, 1485, 1487, 1490, 1493, 1496, 1499, 1501, 1503, 1505, 1507], "behind": [18, 1348, 1354, 1439, 1440, 1449, 1450, 1456, 1459, 1460, 1470, 1474, 1484, 1490, 1500], "being": [74, 98, 178, 267, 475, 505, 506, 583, 591, 638, 668, 701, 730, 805, 886, 889, 938, 1007, 1008, 1009, 1051, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1304, 1307, 1309, 1311, 1312, 1335, 1336, 1337, 1338, 1339, 1342, 1348, 1350, 1353, 1354, 1356, 1360, 1366, 1370, 1374, 1377, 1378, 1382, 1384, 1387, 1390, 1428, 1442, 1444, 1445, 1447, 1448, 1449, 1452, 1454, 1457, 1458, 1462, 1463, 1464, 1467, 1468, 1470, 1471, 1474, 1475, 1479, 1480, 1484, 1487, 1490, 1493, 1495, 1496, 1498, 1502, 1505], "believ": [1371, 1449, 1451, 1457, 1479, 1489], "bell": 1449, "belong": [95, 132, 136, 1023, 1349, 1454, 1461], "below": [10, 67, 72, 75, 78, 239, 343, 344, 345, 399, 404, 409, 470, 494, 501, 625, 655, 658, 670, 723, 776, 805, 815, 864, 877, 923, 924, 941, 950, 951, 959, 960, 961, 962, 964, 965, 966, 994, 1002, 1087, 1112, 1307, 1333, 1337, 1344, 1345, 1348, 1353, 1356, 1357, 1360, 1363, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1384, 1385, 1390, 1404, 1424, 1428, 1431, 1441, 1444, 1445, 1447, 1448, 1449, 1450, 1454, 1455, 1456, 1457, 1459, 1461, 1462, 1469, 1470, 1471, 1474, 1476, 1483, 1484, 1485, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1503, 1505, 1506], "benchmark": [68, 1380, 1443, 1449, 1459, 1475, 1484, 1492, 1494], "benefici": [112, 1444, 1445, 1448, 1503], "benefit": [1040, 1302, 1353, 1354, 1369, 1377, 1380, 1443, 1444, 1447, 1456, 1471, 1484, 1495], "benign": 97, "bernoulli": [1451, 1489, 1494], "bertseka": [1342, 1463], "besid": [1374, 1377], "bessel": [318, 319, 746, 1143, 1144, 1145, 1146, 1279, 1280, 1376], "bessel_jn": 1448, "best": [95, 508, 670, 1342, 1345, 1347, 1353, 1354, 1364, 1366, 1369, 1370, 1378, 1381, 1395, 1414, 1444, 1445, 1448, 1449, 1454, 1457, 1464, 1467, 1476, 1480, 1483, 1484, 1489, 1492, 1494, 1500, 1503], "beta": [320, 407, 780, 1123, 1124, 1176, 1177, 1194, 1195, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1354, 1476, 1487, 1495], "beta_1": [1396, 1503], "beta_2": [1396, 1503], "beta_init": 1397, "beta_loc": 1476, "beta_loc_grad": 1476, "beta_log_scal": 1476, "beta_log_scale_grad": 1476, "beta_sampl": 1476, "betabinom": 1354, "betainc": [1354, 1448], "betaln": [1122, 1123], "better": [131, 201, 203, 397, 788, 794, 796, 848, 1040, 1153, 1342, 1354, 1356, 1378, 1379, 1380, 1381, 1444, 1446, 1447, 1448, 1450, 1454, 1458, 1463, 1467, 1471, 1474, 1475, 1480, 1489, 1490, 1492, 1498, 1501], "between": [61, 75, 168, 213, 343, 344, 422, 423, 432, 465, 551, 552, 578, 620, 625, 632, 645, 660, 669, 679, 701, 719, 720, 731, 804, 819, 831, 857, 859, 879, 881, 886, 889, 901, 920, 922, 923, 925, 940, 941, 958, 969, 988, 994, 1070, 1075, 1110, 1111, 1113, 1114, 1115, 1118, 1135, 1342, 1344, 1345, 1346, 1348, 1354, 1359, 1363, 1366, 1367, 1369, 1377, 1378, 1380, 1381, 1382, 1387, 1396, 1402, 1424, 1425, 1431, 1438, 1442, 1445, 1446, 1447, 1449, 1451, 1456, 1459, 1460, 1461, 1462, 1467, 1468, 1470, 1471, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1498, 1501, 1502, 1503, 1504, 1505], "bewar": 1461, "beyond": [604, 632, 1361, 1364, 1365, 1369, 1444, 1445, 1450, 1455, 1456, 1475, 1487], "bf": [1382, 1462, 1468, 1505], "bf16": [1456, 1492], "bf16_bf16_bf16": [1356, 1424], "bf16_bf16_f32": [1356, 1424], "bf16_bf16_f32_x3": [1356, 1424], "bf16_bf16_f32_x6": [1356, 1424], "bf16_bf16_f32_x9": [1356, 1424], "bfbfbfbfbfbfbfbfbfbfbff4f4f8c8c16bfbfc8": 1505, "bfc": 1380, "bff2f4f8c8c16f": 1505, "bff2f4f8c8c16u8f": 1505, "bfg": [1104, 1105, 1354, 1414], "bfloat16": [91, 105, 263, 543, 572, 767, 777, 820, 838, 913, 1135, 1354, 1356, 1364, 1381, 1424, 1445, 1456, 1484, 1489, 1494, 1503, 1505], "bg": [1382, 1468], "bh": [1382, 1468], "bi": 1116, "bia": [508, 645, 701, 1052, 1382, 1468, 1474, 1500, 1502, 1503], "bias": [1023, 1026, 1052, 1465, 1473, 1474, 1506], "bias_kei": 1502, "bicgstab": 1448, "bicub": [291, 292], "bidirect": [1474, 1490], "bidirection": 1474, "big": [876, 981, 1346, 1348, 1356, 1380, 1381, 1443, 1445, 1448, 1454, 1461, 1480, 1484, 1487, 1488, 1492, 1498], "bigcrush": 1431, "bigger": [1447, 1492], "biggest": [1390, 1484], "bilinear": [291, 292], "billion": [1342, 1467, 1503], "bin": [604, 661, 739, 740, 741, 742, 784, 914, 1113, 1367, 1378, 1387], "bin_edg": [739, 742], "bin_width": 742, "binari": [47, 197, 311, 606, 701, 897, 922, 923, 924, 969, 981, 1010, 1298, 1354, 1359, 1366, 1381, 1384, 1412, 1414, 1447, 1456, 1462, 1470, 1474, 1505], "binary_r": 1469, "binary_search": 769, "bincount": 739, "bind": [98, 503, 1346, 1348, 1354, 1371, 1378, 1390, 1441, 1446, 1449, 1452, 1457, 1460, 1462, 1466], "bind1": 1348, "bind_al": 1496, "bind_cond": 1348, "bind_with_trac": 1460, "binder": [1348, 1349, 1441], "binom": 1021, "binomi": [1093, 1176, 1177, 1178, 1179, 1250, 1251, 1342, 1467], "binop_abstract_ev": 1348, "binop_batching_rul": 1348, "bint": 1455, "bipartit": 1348, "bisect": 1387, "bit": [80, 143, 321, 334, 348, 420, 429, 447, 448, 454, 582, 606, 701, 721, 763, 784, 793, 795, 876, 878, 897, 913, 914, 931, 981, 1017, 1019, 1023, 1026, 1032, 1036, 1037, 1038, 1052, 1061, 1134, 1342, 1348, 1349, 1352, 1354, 1356, 1357, 1360, 1366, 1377, 1378, 1385, 1387, 1424, 1428, 1431, 1444, 1446, 1447, 1449, 1451, 1455, 1456, 1458, 1459, 1461, 1463, 1465, 1467, 1469, 1470, 1473, 1474, 1475, 1479, 1484, 1488, 1489, 1492, 1498, 1500, 1502, 1505], "bit_width": [277, 281, 282], "bitcast": 321, "bitcast_convert": 321, "bitcast_convert_typ": [61, 348], "bitord": [876, 981, 1348], "bitwidth": [61, 1484, 1485], "bitwis": [61, 322, 323, 324, 325, 442, 445, 450, 605, 610, 612, 763, 828, 1359], "bitwise_and": [323, 324, 325, 442, 1354], "bitwise_count": [429, 1354], "bitwise_invert": [763, 828], "bitwise_left_shift": 784, "bitwise_not": [322, 324, 325], "bitwise_or": [322, 323, 325, 445, 1354], "bitwise_right_shift": 784, "bitwise_xor": [322, 323, 324, 450, 1354], "bj\u00f6rck": 1100, "bk": 1492, "bla": 671, "black": [1378, 1469, 1490], "blackjax": [1353, 1383], "blackman": [603, 736, 737, 780], "blackwel": 544, "ble1990": 311, "bleed": 1384, "blelloch": 311, "blk": [1487, 1494], "blk_idx": 1494, "blk_idxs_i": 1494, "blk_idxs_k": 1494, "blk_k": 1494, "blk_m": 1494, "blk_n": 1494, "blob": [247, 248, 1354, 1371], "block": [18, 95, 139, 157, 166, 239, 290, 495, 543, 544, 781, 1013, 1015, 1077, 1097, 1100, 1341, 1347, 1348, 1354, 1361, 1363, 1369, 1385, 1390, 1454, 1475, 1478, 1479, 1480, 1483, 1485, 1486, 1487, 1489, 1491, 1496, 1500, 1503], "block_data": 1494, "block_dimens": 211, "block_dynamic_slic": 1494, "block_host_until_readi": 1354, "block_idx": [1485, 1494], "block_index": 1494, "block_indic": [1480, 1485], "block_k": 1480, "block_m": 1480, "block_mask": 1494, "block_mask_ref": 1494, "block_matmul": 1492, "block_n": 1480, "block_result": 1474, "block_shap": [139, 149, 178, 1354, 1478, 1480, 1484, 1485, 1487, 1490, 1493, 1494], "block_siz": [544, 1485, 1487, 1490], "block_slic": 1484, "block_spec": [1487, 1493], "block_until_readi": [1008, 1009, 1342, 1347, 1354, 1363, 1367, 1377, 1442, 1459, 1464, 1475, 1490, 1492, 1494, 1496], "blockdim": [139, 149], "blocks_kei": 1494, "blockscaleconfig": 543, "blocksiz": 1100, "blockspec": [140, 168, 178, 1354, 1478, 1479, 1480, 1483, 1484, 1486, 1488, 1490, 1492, 1493, 1494], "blockspectre": [140, 178], "blockwis": 1483, "blow": 239, "blue": [1369, 1461, 1494], "bm": [1487, 1492, 1494], "bmatrix": [1342, 1467, 1488, 1492], "bmk": 544, "bmn": 544, "bmod": 451, "bn": [1487, 1492, 1494], "bnk": 544, "bnt": 508, "board": 1461, "bob": 1506, "bodi": [97, 150, 168, 178, 1346, 1348, 1349, 1378, 1381, 1382, 1385, 1441, 1442, 1445, 1447, 1449, 1459, 1462, 1468, 1470, 1474, 1479, 1480, 1483, 1484, 1488, 1489, 1490, 1493, 1503], "body_fun": [378, 488, 1342, 1359, 1376, 1441, 1463], "body_jaxpr": 1441, "body_nconst": 1441, "boil": [1455, 1492, 1500], "boilerpl": [1378, 1449, 1460, 1487], "bold": [1382, 1468], "book": [1070, 1350, 1467], "bookkeep": [1348, 1441, 1442, 1453, 1465, 1473, 1503], "bool": [3, 4, 5, 6, 8, 9, 13, 29, 30, 31, 34, 35, 36, 40, 41, 51, 53, 54, 56, 60, 61, 67, 77, 80, 81, 82, 84, 86, 95, 97, 100, 101, 103, 105, 107, 114, 118, 126, 127, 129, 130, 131, 132, 134, 137, 144, 148, 150, 167, 173, 178, 198, 199, 200, 201, 210, 212, 229, 230, 233, 234, 249, 257, 263, 268, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 305, 306, 311, 318, 319, 320, 346, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 369, 370, 371, 378, 381, 384, 385, 387, 393, 395, 397, 398, 403, 404, 405, 406, 407, 408, 409, 428, 458, 459, 460, 461, 462, 463, 464, 475, 476, 488, 491, 493, 495, 508, 510, 537, 538, 563, 564, 565, 566, 567, 568, 580, 581, 582, 583, 586, 587, 588, 589, 591, 592, 595, 602, 615, 620, 640, 644, 645, 650, 651, 654, 661, 664, 668, 670, 671, 672, 673, 674, 675, 682, 683, 685, 687, 700, 720, 727, 728, 731, 734, 735, 739, 740, 742, 750, 751, 753, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 780, 785, 786, 787, 788, 794, 796, 797, 798, 800, 804, 805, 807, 808, 810, 811, 814, 815, 818, 819, 821, 823, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 838, 839, 840, 842, 848, 849, 850, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 869, 873, 874, 875, 878, 879, 882, 886, 887, 889, 896, 898, 899, 900, 901, 911, 918, 921, 922, 923, 927, 928, 931, 938, 939, 940, 946, 948, 950, 951, 954, 958, 976, 977, 979, 986, 987, 988, 989, 990, 995, 996, 998, 999, 1000, 1001, 1003, 1013, 1016, 1023, 1026, 1044, 1049, 1070, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1110, 1113, 1114, 1115, 1134, 1151, 1153, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1305, 1306, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1327, 1329, 1331, 1332, 1348, 1354, 1356, 1359, 1370, 1377, 1400, 1411, 1415, 1424, 1434, 1435, 1441, 1456, 1459, 1460, 1462, 1474, 1475, 1492], "bool_": [61, 1348, 1359, 1456, 1489, 1505], "boolean": [10, 61, 67, 73, 77, 80, 100, 119, 130, 145, 167, 229, 230, 233, 234, 241, 283, 296, 311, 322, 323, 324, 325, 339, 362, 364, 365, 367, 368, 378, 381, 382, 383, 387, 391, 392, 414, 419, 435, 436, 442, 445, 450, 458, 465, 466, 475, 493, 503, 508, 554, 563, 564, 567, 568, 583, 587, 588, 592, 605, 610, 612, 632, 654, 674, 679, 681, 720, 734, 735, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 785, 786, 828, 836, 838, 853, 854, 856, 858, 860, 861, 862, 864, 869, 881, 882, 887, 899, 900, 931, 938, 940, 946, 950, 987, 994, 1013, 1015, 1019, 1026, 1078, 1079, 1283, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1305, 1348, 1354, 1359, 1361, 1370, 1371, 1374, 1377, 1382, 1440, 1441, 1443, 1454, 1459, 1462, 1468, 1474, 1475, 1489, 1494, 1501, 1505], "booleannumer": 488, "bootstrap": 98, "borderlin": 1448, "bore": 1464, "borrow": [1402, 1465, 1473, 1480], "bot": 1357, "both": [0, 72, 75, 77, 119, 126, 141, 166, 207, 224, 255, 283, 296, 339, 441, 458, 465, 495, 514, 515, 547, 555, 569, 578, 602, 641, 672, 679, 716, 717, 762, 776, 788, 794, 796, 804, 837, 843, 873, 877, 902, 919, 946, 961, 963, 965, 987, 995, 1002, 1072, 1074, 1082, 1085, 1096, 1105, 1114, 1116, 1117, 1118, 1152, 1153, 1331, 1341, 1346, 1348, 1349, 1350, 1353, 1354, 1360, 1361, 1369, 1370, 1371, 1376, 1377, 1378, 1381, 1382, 1385, 1390, 1403, 1411, 1424, 1431, 1441, 1442, 1444, 1445, 1447, 1448, 1449, 1451, 1454, 1455, 1456, 1457, 1459, 1460, 1462, 1463, 1466, 1468, 1470, 1471, 1472, 1474, 1478, 1479, 1480, 1484, 1487, 1488, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1500, 1503], "bottleneck": [1451, 1487, 1490], "bottom": [582, 878, 1348, 1349, 1378, 1442, 1447, 1484, 1490, 1496], "bought": 1444, "bounc": [1354, 1445], "bound": [10, 120, 362, 363, 364, 365, 366, 367, 378, 381, 459, 460, 461, 462, 463, 464, 483, 488, 519, 528, 529, 530, 625, 762, 784, 864, 899, 900, 906, 928, 950, 951, 982, 998, 999, 1000, 1001, 1057, 1118, 1302, 1304, 1342, 1345, 1346, 1348, 1354, 1356, 1360, 1361, 1382, 1424, 1455, 1456, 1463, 1468, 1478, 1480, 1484, 1485, 1487, 1490, 1492, 1493, 1494], "bound_subjaxpr": 1354, "boundari": [69, 152, 153, 292, 394, 739, 740, 742, 776, 941, 1103, 1107, 1109, 1113, 1114, 1342, 1370, 1377, 1396, 1423, 1424, 1442, 1451, 1452, 1463, 1469, 1497], "boundedslic": [139, 1493], "bounds_error": 1076, "box": [1348, 1349, 1354, 1366, 1376, 1378, 1382, 1468, 1490, 1506], "bp": 1111, "bracket": 1441, "brainstorm": 1479, "branch": [339, 424, 465, 483, 573, 574, 575, 576, 577, 579, 1354, 1357, 1359, 1366, 1371, 1377, 1378, 1441, 1447, 1450, 1456, 1459, 1490], "branches_platform": 1378, "brax": 1383, "break": [1016, 1345, 1348, 1354, 1376, 1416, 1442, 1444, 1446, 1447, 1450, 1454, 1456, 1466, 1480, 1484, 1489], "breakag": [1354, 1454, 1455], "breakpoint": [1111, 1354, 1362, 1391, 1449], "breakpoint_if_nonfinit": [1360, 1363], "breviti": 1471, "bridg": 1425, "brief": [378, 458, 488, 1354, 1356, 1500, 1503, 1507], "briefli": [1356, 1460, 1487], "bring": [1471, 1502], "brittl": 1444, "broad": [1444, 1449], "broadcast": [134, 301, 303, 313, 322, 324, 325, 327, 328, 336, 359, 368, 378, 382, 383, 392, 414, 416, 417, 418, 419, 421, 430, 451, 458, 467, 468, 469, 482, 488, 508, 538, 562, 563, 568, 578, 588, 602, 605, 610, 612, 616, 617, 618, 625, 626, 639, 646, 664, 674, 712, 716, 717, 718, 723, 727, 728, 729, 734, 735, 738, 739, 745, 753, 782, 783, 784, 785, 786, 790, 799, 817, 826, 827, 829, 830, 833, 835, 836, 837, 838, 841, 842, 843, 847, 853, 854, 856, 858, 860, 861, 862, 867, 869, 884, 890, 894, 896, 909, 914, 925, 946, 947, 948, 951, 955, 969, 987, 989, 990, 991, 994, 997, 1002, 1019, 1020, 1021, 1023, 1025, 1028, 1029, 1031, 1033, 1035, 1040, 1042, 1044, 1045, 1048, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1102, 1151, 1314, 1333, 1348, 1354, 1356, 1374, 1376, 1378, 1411, 1447, 1454, 1476, 1480, 1484, 1499, 1503], "broadcast_abstract_ev": 1348, "broadcast_al": [1016, 1376, 1378], "broadcast_arrai": [617, 618, 625, 1354], "broadcast_dimens": [205, 327, 1381, 1441, 1462, 1466], "broadcast_impl": 1348, "broadcast_in_dim": [205, 326, 1348, 1354, 1381, 1441, 1462, 1466], "broadcast_in_dim_p": 1414, "broadcast_p": 1348, "broadcast_shap": [368, 382, 383, 392, 414, 419, 616, 618, 625, 639, 1016, 1045, 1376], "broadcast_to": [616, 617, 955, 1348, 1354], "broadcast_transl": 1348, "broadcasted_iota": 1381, "broadcastindim": 327, "broader": [1357, 1487], "broadli": [1341, 1377, 1444, 1448, 1456, 1506], "broke": 1354, "broken": [128, 129, 1354, 1371, 1377, 1488], "browser": [1367, 1484, 1496], "bruno": 1403, "brute": 1387, "bs3kh": 1503, "bsd": 1503, "bsh": 1503, "bskh": [508, 1503], "bsl": 1503, "bt": 1363, "bte": 1445, "bthd": 1445, "btnh": 508, "btzd": 1445, "bubbl": [1487, 1492, 1494, 1503], "bucket": [998, 999, 1000, 1001, 1354, 1495], "bucket_s": [998, 999, 1000, 1001], "budget": [1471, 1503], "buf": [261, 721, 1063, 1348], "buffer": [94, 95, 100, 139, 149, 178, 283, 296, 586, 592, 638, 720, 721, 726, 1002, 1010, 1064, 1065, 1067, 1068, 1069, 1346, 1348, 1354, 1367, 1378, 1381, 1411, 1428, 1440, 1444, 1445, 1448, 1471, 1474, 1478, 1479, 1483, 1484, 1488, 1489, 1504], "buffer_count": 1493, "buffer_from_pyv": 1348, "buffer_slice_for_bwd_ppermut": 1381, "buffer_slice_for_bwd_ppermute_after_send_fwd": 1381, "bufferdonationtestcas": 1354, "bug": [1003, 1103, 1349, 1356, 1387, 1443, 1444, 1448, 1450, 1452, 1453, 1455, 1459, 1470, 1474, 1476, 1479, 1487, 1489, 1490, 1499, 1501], "bugfix": 1354, "buggi": [1453, 1454, 1490], "build": [116, 117, 121, 122, 123, 124, 125, 263, 284, 397, 402, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 750, 921, 1118, 1341, 1342, 1349, 1350, 1354, 1356, 1357, 1358, 1375, 1387, 1395, 1402, 1405, 1441, 1446, 1448, 1454, 1455, 1457, 1461, 1465, 1467, 1469, 1473, 1484, 1488, 1493, 1503], "build_cuda_with_clang": 1366, "build_jaxlib": 1366, "build_jaxpr": 1349, "build_tre": 1354, "builder": [1348, 1451, 1480], "built": [442, 443, 444, 445, 447, 448, 450, 578, 586, 592, 668, 721, 723, 832, 897, 1118, 1303, 1342, 1344, 1346, 1348, 1349, 1353, 1354, 1357, 1360, 1362, 1366, 1370, 1371, 1374, 1378, 1383, 1384, 1387, 1415, 1423, 1428, 1431, 1444, 1445, 1446, 1447, 1448, 1456, 1457, 1465, 1467, 1471, 1473, 1474, 1475, 1480, 1484, 1490, 1497, 1503, 1506], "builtin": [415, 1307, 1348, 1363, 1377, 1439], "builtin_jacfwd": [1342, 1467], "builtin_jacrev": [1342, 1467], "bulk": [1445, 1487, 1489], "bullet": 1445, "bump": [1354, 1371, 1450, 1457], "bunch": 1467, "bundl": [1354, 1368, 1466], "burden": [1445, 1448, 1451], "busi": [1349, 1484, 1487], "button": [1357, 1496], "bw_method": 1209, "bwd": [80, 1346, 1361, 1382, 1453, 1468], "bwd_edge_data": 1381, "bx": [1260, 1261], "bypass": [98, 1366, 1371], "byte": [32, 37, 61, 248, 250, 251, 493, 620, 668, 721, 820, 1010, 1302, 1334, 1354, 1371, 1380, 1415, 1471, 1484, 1485, 1487, 1490, 1492, 1495], "bytearrai": [247, 248, 250, 251, 1371, 1415], "bytes_in_us": 1354, "bytesio": 820, "bytewidth": 1484, "c": [26, 42, 45, 127, 229, 233, 283, 290, 311, 343, 344, 345, 348, 407, 458, 503, 508, 543, 614, 619, 625, 632, 646, 668, 887, 902, 905, 906, 911, 1056, 1060, 1077, 1078, 1079, 1084, 1099, 1102, 1135, 1142, 1281, 1282, 1307, 1333, 1342, 1344, 1348, 1354, 1356, 1363, 1366, 1371, 1374, 1377, 1382, 1384, 1385, 1390, 1440, 1441, 1445, 1449, 1454, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1473, 1474, 1475, 1480, 1496, 1502, 1505, 1506], "c0": 1490, "c1": 1474, "c128": 1456, "c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16": 1505, "c2": 1474, "c36e1f7c1ad4782060cbc8e8c596d85dfb83986f": 1354, "c64": 1456, "c8": 1505, "c8c8c8c16c8c16c": 1505, "c8c8c8c8c8c8c8c8c8c8c8c8c8c16c8c16c8c8c8": 1505, "c_": [640, 645, 902, 1102], "c_0": 1378, "c_and_low": 1079, "c_api": 1378, "c_block": [1445, 1474], "c_k": [637, 641], "c_matrix": 407, "c_partialsum": [1445, 1474], "c_ref": 1474, "cach": [18, 65, 66, 67, 68, 83, 296, 701, 1307, 1342, 1343, 1348, 1354, 1359, 1366, 1370, 1374, 1377, 1378, 1381, 1385, 1400, 1411, 1462, 1464, 1467, 1480, 1487, 1493, 1497], "cache_kei": 1495, "cache_miss": [1385, 1390], "cache_modifi": 145, "cached_primitive_low": 1390, "calc": 1377, "calc_q": 1087, "calcul": [346, 494, 534, 559, 574, 576, 579, 621, 643, 660, 663, 675, 676, 678, 701, 712, 715, 718, 733, 746, 794, 796, 802, 821, 822, 823, 824, 826, 845, 877, 894, 908, 909, 934, 936, 942, 943, 953, 956, 967, 998, 999, 1000, 1001, 1083, 1087, 1105, 1116, 1117, 1118, 1148, 1285, 1286, 1287, 1342, 1350, 1353, 1354, 1381, 1390, 1402, 1434, 1449, 1454, 1463, 1467, 1471, 1483, 1487, 1492, 1494, 1503, 1506], "calculu": [503, 1350, 1467], "call": [64, 67, 69, 71, 74, 75, 80, 81, 82, 83, 84, 87, 88, 90, 95, 98, 118, 119, 120, 126, 130, 150, 160, 161, 165, 168, 172, 174, 178, 180, 248, 252, 253, 268, 283, 284, 285, 286, 296, 328, 357, 360, 378, 381, 397, 422, 459, 460, 488, 495, 501, 502, 544, 562, 572, 582, 605, 610, 612, 617, 638, 654, 668, 670, 671, 701, 703, 832, 847, 868, 878, 884, 890, 923, 927, 944, 947, 969, 975, 976, 977, 978, 979, 980, 991, 1002, 1013, 1014, 1016, 1037, 1104, 1110, 1116, 1117, 1118, 1148, 1152, 1153, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1308, 1310, 1334, 1341, 1342, 1344, 1346, 1348, 1349, 1353, 1354, 1355, 1359, 1360, 1361, 1363, 1366, 1367, 1369, 1370, 1372, 1374, 1376, 1377, 1382, 1385, 1390, 1400, 1404, 1411, 1415, 1424, 1428, 1431, 1435, 1438, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1470, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1488, 1490, 1492, 1493, 1494, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1505, 1506], "call_bind": 1449, "call_func": 1304, "call_jaxpr": 1354, "call_p": 1354, "call_primit": 1354, "call_target_nam": 284, "call_tf": 1354, "call_tf_graph": 1371, "callabl": [67, 69, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 113, 120, 126, 127, 130, 139, 149, 168, 178, 180, 198, 238, 239, 244, 248, 267, 268, 272, 276, 283, 288, 289, 290, 293, 294, 295, 296, 297, 311, 337, 339, 356, 357, 405, 424, 441, 449, 458, 461, 483, 488, 494, 495, 500, 503, 505, 570, 571, 670, 723, 725, 733, 832, 877, 881, 969, 1002, 1009, 1016, 1076, 1086, 1105, 1110, 1114, 1115, 1209, 1283, 1284, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1305, 1308, 1310, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1331, 1332, 1342, 1344, 1348, 1354, 1359, 1363, 1371, 1382, 1396, 1402, 1411, 1415, 1445, 1449, 1453, 1463, 1468, 1474, 1480, 1483, 1487, 1492, 1493], "callback": [83, 84, 130, 500, 1016, 1348, 1354, 1370, 1377, 1378, 1440, 1495, 1501], "callback_transform": 1354, "calle": [1367, 1371], "caller": [18, 95, 134, 296, 1017, 1346, 1348, 1363, 1445, 1446, 1447, 1451, 1455, 1474], "callgraph": 1367, "calling_convention_vers": [1354, 1371, 1415], "calling_mesh": 1371, "callop": 1348, "calver": 1450, "camel": 1444, "camp": 1364, "can": [10, 29, 65, 66, 67, 75, 77, 81, 82, 83, 91, 95, 96, 97, 105, 112, 113, 118, 119, 120, 126, 127, 128, 129, 131, 132, 135, 136, 141, 145, 148, 150, 160, 167, 170, 172, 178, 197, 198, 223, 248, 250, 251, 252, 253, 254, 255, 283, 284, 296, 337, 339, 356, 360, 378, 381, 397, 404, 415, 422, 424, 433, 436, 458, 466, 488, 495, 498, 500, 501, 503, 504, 505, 506, 508, 531, 543, 563, 568, 570, 572, 578, 599, 600, 601, 604, 616, 617, 618, 620, 625, 632, 640, 644, 645, 646, 654, 655, 658, 659, 668, 677, 679, 682, 683, 685, 687, 701, 703, 750, 769, 778, 783, 787, 797, 799, 803, 804, 811, 815, 821, 833, 834, 836, 838, 841, 842, 846, 853, 854, 856, 858, 860, 861, 862, 864, 865, 868, 872, 881, 891, 896, 898, 899, 906, 911, 913, 921, 922, 923, 924, 927, 929, 937, 946, 948, 950, 951, 955, 956, 957, 975, 976, 982, 985, 987, 991, 998, 999, 1000, 1001, 1002, 1007, 1009, 1010, 1012, 1013, 1015, 1016, 1033, 1063, 1064, 1073, 1074, 1083, 1085, 1087, 1089, 1090, 1094, 1096, 1097, 1098, 1099, 1101, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1153, 1162, 1283, 1296, 1297, 1298, 1302, 1304, 1306, 1307, 1308, 1310, 1312, 1333, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1390, 1396, 1400, 1402, 1403, 1404, 1408, 1411, 1414, 1415, 1423, 1424, 1428, 1431, 1434, 1435, 1438, 1439, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1455, 1456, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507], "cancel": [239, 1342, 1447, 1463], "candid": [1384, 1448, 1456, 1492], "cannon": 1445, "cannot": [75, 78, 80, 100, 112, 113, 119, 160, 198, 216, 255, 283, 305, 306, 331, 349, 372, 373, 375, 411, 412, 457, 471, 478, 484, 485, 494, 588, 654, 672, 673, 720, 884, 890, 944, 1134, 1307, 1308, 1342, 1346, 1354, 1359, 1361, 1363, 1369, 1370, 1371, 1374, 1376, 1377, 1381, 1384, 1411, 1428, 1438, 1444, 1448, 1452, 1454, 1456, 1457, 1460, 1462, 1463, 1475, 1479, 1480, 1483, 1484, 1487, 1489, 1490, 1493, 1496], "canon": [75, 103, 342, 1342, 1447, 1449, 1463, 1500], "canonic": [913, 1354, 1497], "canonical_name_cach": 1390, "canonicalize_dtyp": 1354, "canonicalize_shap": [1354, 1359, 1460], "canonicalize_valu": 1460, "capabl": [1353, 1354, 1375, 1376, 1378, 1445, 1449, 1489, 1492, 1507], "capac": [1471, 1484, 1487, 1490, 1501], "capacity_sem": 1490, "capit": 1503, "capsul": [1354, 1378], "captur": [69, 1010, 1013, 1015, 1354, 1360, 1363, 1367, 1390, 1441, 1450, 1459, 1462, 1474, 1495], "care": [501, 722, 724, 994, 1342, 1349, 1363, 1369, 1371, 1374, 1377, 1385, 1442, 1461, 1467, 1472, 1483, 1487, 1488, 1489, 1492, 1496, 1497, 1502, 1503, 1506], "carefulli": [1342, 1370, 1382, 1448, 1463, 1468, 1489, 1494, 1502, 1503], "carnegi": 311, "carri": [69, 112, 168, 378, 458, 488, 1017, 1342, 1344, 1348, 1349, 1377, 1381, 1431, 1435, 1441, 1444, 1445, 1449, 1455, 1456, 1462, 1463, 1470, 1472, 1474, 1479, 1483, 1489, 1498, 1505], "cartesian": [578, 840], "carv": [1487, 1488], "case": [9, 67, 74, 76, 79, 83, 97, 98, 112, 201, 203, 223, 239, 283, 286, 296, 305, 306, 333, 339, 343, 344, 356, 360, 363, 424, 437, 455, 458, 460, 461, 462, 463, 464, 466, 470, 501, 502, 507, 508, 509, 516, 533, 544, 545, 551, 552, 578, 584, 595, 599, 600, 601, 604, 625, 638, 640, 645, 654, 664, 679, 723, 738, 754, 777, 778, 797, 799, 802, 805, 816, 820, 833, 849, 850, 868, 881, 882, 917, 924, 930, 950, 951, 969, 981, 994, 1002, 1026, 1052, 1063, 1084, 1086, 1089, 1094, 1096, 1097, 1102, 1126, 1140, 1141, 1142, 1147, 1148, 1159, 1162, 1167, 1168, 1190, 1192, 1198, 1200, 1260, 1261, 1271, 1273, 1276, 1277, 1283, 1305, 1306, 1307, 1332, 1342, 1344, 1345, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1357, 1360, 1361, 1363, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1385, 1390, 1402, 1411, 1424, 1440, 1441, 1442, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1469, 1470, 1472, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1497, 1500, 1501, 1502, 1503, 1505, 1506, 1507], "cases_from_list": 1354, "cast": [9, 169, 321, 348, 379, 430, 557, 595, 620, 669, 721, 763, 776, 828, 897, 940, 1052, 1349, 1354, 1370, 1377, 1378, 1439, 1440, 1452, 1456, 1462, 1474, 1489, 1492, 1505], "cat": 1461, "catastroph": 239, "catch": [113, 1345, 1357, 1360, 1361, 1362, 1366, 1377, 1444, 1449, 1454, 1455, 1462, 1490], "categor": 1354, "categori": [120, 767, 1444, 1452, 1454, 1455, 1489, 1505], "cauchi": [1281, 1282, 1342, 1467], "caught": [1356, 1462, 1474, 1476], "caus": [65, 66, 126, 701, 923, 1007, 1008, 1009, 1103, 1297, 1298, 1354, 1356, 1359, 1369, 1370, 1377, 1378, 1387, 1390, 1439, 1449, 1454, 1459, 1462, 1471, 1484, 1489, 1490, 1498, 1501], "causal": [508, 1484, 1494], "caution": [1380, 1386], "caveat": [72, 239, 1344, 1346, 1363, 1378, 1384, 1431, 1479, 1490], "cb": 500, "cb48f42": 1354, "cb732a921f0c4184995cbed82394931011d12bd4": 1354, "cbid": 1496, "cbrt": [457, 478], "cc": [1377, 1378, 1381, 1495, 1496, 1507], "cclass": 619, "ccm": 239, "cct": 1390, "cd": [1357, 1366, 1387], "cdf": [1148, 1156, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1218, 1219, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1264, 1270, 1271, 1272, 1273, 1274, 1276, 1277, 1278], "cdll": [285, 1378], "cdot": [512, 514, 515, 539, 547, 555, 1094, 1141, 1142, 1342, 1403, 1467, 1492], "cede": 1449, "ceil": [377, 456, 702, 714, 920, 968, 1084, 1354], "cell": [1342, 1348, 1359, 1366, 1378, 1390, 1460, 1467, 1484, 1505], "center": [292, 637, 641, 686, 1029, 1106, 1107, 1108, 1109, 1112, 1354, 1397, 1456, 1479, 1484, 1494], "central": [1379, 1448, 1474, 1503], "central1": 1461, "centric": 1484, "centroid": [1248, 1249, 1271, 1273], "ceph": 1135, "certain": [77, 80, 1354, 1357, 1360, 1369, 1374, 1377, 1382, 1390, 1442, 1447, 1450, 1462, 1468, 1470, 1483, 1488, 1489, 1490, 1497, 1501, 1506], "certainli": [1377, 1480, 1489], "cfac": [1078, 1079], "cg": [1116, 1354, 1448], "chain": [670, 1348, 1350, 1382, 1468, 1471], "chain_compos": [1382, 1468], "challeng": [1353, 1369, 1442, 1445, 1446, 1451, 1456, 1479, 1502], "chanc": [1371, 1484, 1485, 1490], "chang": [61, 67, 80, 82, 83, 93, 96, 135, 198, 202, 239, 248, 296, 337, 379, 395, 460, 461, 462, 463, 464, 498, 620, 639, 776, 897, 957, 1002, 1005, 1006, 1051, 1103, 1341, 1345, 1349, 1351, 1353, 1356, 1359, 1363, 1366, 1367, 1371, 1374, 1376, 1378, 1381, 1382, 1404, 1408, 1411, 1414, 1416, 1424, 1442, 1444, 1446, 1447, 1450, 1452, 1455, 1456, 1458, 1459, 1462, 1468, 1475, 1476, 1478, 1480, 1484, 1485, 1486, 1487, 1488, 1490, 1494, 1495, 1497, 1501, 1507], "changed_block": 1494, "changelog": [1345, 1354, 1416, 1446, 1486], "channel": [291, 344, 345, 346, 1370, 1469], "channel_id": 1378, "channel_iter": 1390, "chao": 1498, "chapter": 1374, "charact": [343, 344, 871, 1354], "character": [1342, 1463], "characterist": [1377, 1450, 1489], "cheap": [1451, 1457, 1489, 1496], "cheaper": 170, "check": [0, 10, 65, 66, 87, 88, 98, 101, 109, 119, 120, 198, 248, 249, 356, 357, 381, 459, 460, 461, 462, 463, 464, 502, 564, 587, 588, 764, 765, 766, 769, 774, 775, 776, 778, 797, 808, 864, 1027, 1078, 1079, 1089, 1091, 1092, 1095, 1101, 1283, 1285, 1286, 1287, 1305, 1327, 1342, 1346, 1348, 1349, 1352, 1354, 1359, 1369, 1370, 1371, 1374, 1378, 1381, 1382, 1383, 1384, 1387, 1390, 1400, 1415, 1424, 1445, 1446, 1447, 1448, 1455, 1457, 1459, 1461, 1462, 1463, 1465, 1470, 1473, 1474, 1475, 1478, 1487, 1494, 1496, 1500, 1501, 1506], "check_bool_convers": 1359, "check_clos": 1354, "check_eq": 1354, "check_eqn": 1354, "check_eval_arg": 1460, "check_finit": [1070, 1078, 1079, 1080, 1081, 1082, 1087, 1089, 1090, 1091, 1092, 1095, 1096, 1098, 1099, 1101], "check_grad": [1350, 1354, 1467], "check_in_auto_context": 1470, "check_jaxpr": 1354, "check_rep": 198, "check_same_dtyp": 1460, "check_shmap": 1474, "check_toposort": 1348, "check_tracer_leak": [1354, 1459], "check_typ": 1354, "check_user_dtype_support": 1359, "check_valid_jaxtyp": 1354, "check_vma": [1283, 1356, 1381, 1490, 1495], "check_vmap": 1474, "checked_f": [118, 119, 1360, 1361], "checker": [1302, 1354, 1362, 1370, 1404, 1444, 1462], "checkifi": [1356, 1398, 1478, 1480, 1494], "checkify_of_jit": 1361, "checking_leak": 1370, "checkout": [1357, 1366, 1387], "checkpoint": [98, 1342, 1343, 1346, 1354, 1369, 1458, 1467, 1501], "checkpoint_dot": [1382, 1443, 1468], "checkpoint_dots_with_no_batch_dim": [1382, 1468], "checkpoint_nam": [1382, 1468, 1471], "checkpoint_names_saved_offloaded_recomput": 1382, "checkpoint_offload_dot_with_no_batch_dim": 1382, "checkpoint_polici": [67, 1382, 1443, 1468, 1471], "cherri": 1467, "chex": 1383, "chi": [1188, 1189, 1190, 1191, 1192, 1193], "chi2": 1354, "child": [1310, 1328, 1456], "child_count": 1348, "child_tre": 1348, "child_treedef": 1348, "childless_nod": 1348, "children": [253, 1308, 1309, 1310, 1311, 1326, 1348, 1377, 1497, 1506], "children_flat": 1348, "children_it": 1348, "chip": [1354, 1379, 1440, 1461, 1489, 1490, 1492, 1493, 1494, 1496], "chisquar": 1354, "chlo": [299, 300, 309, 310, 312, 314, 350, 421, 472, 1356, 1371], "cho_factor": [1079, 1080], "cho_solv": [1078, 1080, 1098], "choic": [11, 98, 424, 501, 625, 1341, 1347, 1354, 1359, 1380, 1382, 1444, 1451, 1452, 1456, 1457, 1462, 1468, 1470, 1496], "choice_1": 625, "choice_2": 625, "choice_3": 625, "choicelist": 925, "choleski": [396, 1045, 1078, 1079, 1098, 1342, 1354, 1467], "choos": [98, 239, 543, 578, 804, 881, 925, 1176, 1177, 1178, 1179, 1250, 1251, 1350, 1354, 1366, 1369, 1374, 1382, 1385, 1411, 1444, 1452, 1461, 1462, 1467, 1468, 1469, 1472, 1474, 1479, 1500, 1503, 1506], "choose_device_or_out_shard": 1359, "chose": [1348, 1445, 1456, 1464, 1470], "chosen": [83, 98, 404, 466, 787, 802, 1095, 1153, 1162, 1285, 1286, 1287, 1345, 1349, 1402, 1448, 1456], "chronologi": 1371, "chunk": [139, 178, 303, 304, 477, 590, 941, 1369, 1377, 1380, 1474, 1484, 1486, 1488, 1489, 1492, 1493], "churn": 1345, "chw": 345, "ci": [1345, 1354, 1357, 1366, 1444, 1457], "cint": 1354, "circ": [1342, 1403, 1467], "circa": 1503, "circl": [578, 1348], "circuit": 1359, "circular": 1348, "circult": 1359, "circumst": [1342, 1414, 1488], "circumv": [1446, 1479, 1495], "cl": [1309, 1311, 1312, 1348, 1371, 1377, 1497], "cla": 1357, "claim": 1348, "clamp": [10, 363, 366, 381, 459, 460, 461, 462, 463, 464, 483, 864, 1354, 1424, 1441, 1462], "clang": [1354, 1366], "clariti": [1378, 1449, 1456], "class": [0, 62, 63, 72, 76, 79, 102, 104, 106, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 139, 140, 141, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 183, 199, 200, 201, 202, 203, 204, 211, 226, 228, 232, 241, 245, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 270, 271, 277, 281, 282, 394, 454, 540, 543, 544, 624, 628, 629, 631, 668, 701, 704, 708, 709, 710, 713, 721, 723, 726, 730, 748, 752, 755, 756, 757, 758, 760, 870, 871, 932, 969, 971, 972, 973, 974, 983, 1007, 1008, 1018, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1076, 1104, 1119, 1120, 1209, 1302, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1342, 1344, 1346, 1348, 1349, 1354, 1370, 1377, 1379, 1385, 1390, 1396, 1438, 1440, 1446, 1448, 1449, 1452, 1455, 1460, 1462, 1467, 1472, 1479, 1480, 1494, 1495, 1497, 1502, 1503, 1505, 1506], "classic": [1047, 1350, 1354, 1364, 1467, 1505], "classmethod": [1309, 1311, 1348, 1377, 1415, 1434, 1497], "clean": [1354, 1366, 1371, 1440, 1447, 1448, 1449, 1456, 1490], "cleaner": 1354, "cleanest": 1371, "cleanli": [1354, 1448], "cleanup": 1354, "clear": [68, 763, 787, 1345, 1346, 1444, 1446, 1448, 1449, 1450, 1453, 1462, 1479, 1502], "clear_backend": 1354, "clear_cach": 1354, "clearer": [917, 1455, 1478], "clearli": [1378, 1448, 1484, 1507], "clever": [1479, 1503], "cli": [81, 1354, 1507], "click": [1357, 1384, 1496], "client": [93, 96, 196, 492, 493, 497, 498, 1004, 1005, 1006, 1354, 1355, 1390], "clip": [10, 364, 365, 381, 459, 460, 461, 462, 463, 464, 604, 625, 864, 899, 906, 950, 951, 982, 1162, 1354, 1396, 1424, 1453, 1471], "clip_by_global_norm": 1471, "clip_grad": 1396, "clip_gradi": [1342, 1453, 1463], "clip_gradient_bwd": [1342, 1453, 1463], "clip_gradient_fwd": [1342, 1453, 1463], "clip_sin": [1342, 1463], "clobber": 1479, "clock": [1371, 1474, 1484], "clockwis": 919, "clone": [1357, 1366, 1387], "cloned_kei": 1027, "close": [67, 75, 357, 573, 575, 589, 591, 678, 823, 922, 923, 1040, 1086, 1342, 1346, 1348, 1349, 1354, 1356, 1377, 1380, 1386, 1424, 1428, 1445, 1447, 1448, 1449, 1453, 1456, 1463, 1466, 1474, 1475, 1478, 1480, 1487, 1488, 1492, 1501], "closed_call_p": 1354, "closed_jaxpr": [264, 1385, 1466], "closedjaxpr": [264, 503, 1354, 1385, 1435], "closer": [1382, 1448, 1468, 1492, 1494], "closest": [940, 1070, 1487], "closur": [69, 75, 113, 1304, 1342, 1346, 1348, 1366, 1370, 1382, 1447, 1449, 1453, 1467, 1468, 1480], "closure_convert": 1354, "cloth": 1470, "cloud": [98, 1354, 1461, 1496, 1503], "clu": 1348, "clue": 1354, "cluster": [98, 166, 1354, 1384, 1461, 1495], "cluster_detection_method": 98, "cluster_nam": 1484, "cluster_s": 166, "clz": 429, "cm": 1469, "cmake": 1378, "cmakefil": 1378, "cmap": 1469, "cmath": 1378, "cmp": 187, "cmu": 311, "cnhw": 345, "cnn": 344, "cnst": 1348, "co": [67, 72, 76, 77, 78, 79, 80, 112, 299, 337, 471, 484, 495, 503, 573, 578, 643, 733, 933, 952, 985, 1086, 1135, 1153, 1162, 1279, 1280, 1281, 1282, 1332, 1342, 1348, 1349, 1360, 1363, 1371, 1377, 1378, 1381, 1382, 1390, 1403, 1428, 1443, 1445, 1449, 1463, 1467, 1468, 1469, 1475, 1480, 1484, 1489, 1501, 1503], "coars": [1457, 1492], "code": [119, 126, 194, 239, 248, 337, 424, 441, 495, 502, 750, 871, 886, 889, 921, 922, 923, 1002, 1007, 1008, 1070, 1104, 1307, 1345, 1346, 1347, 1348, 1349, 1351, 1354, 1356, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1370, 1371, 1374, 1376, 1379, 1382, 1383, 1385, 1386, 1390, 1395, 1411, 1428, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1468, 1471, 1474, 1475, 1476, 1479, 1480, 1484, 1486, 1487, 1489, 1490, 1492, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1505, 1506, 1507], "code_book": 1070, "codebas": [481, 1341, 1353, 1354, 1440, 1443, 1444, 1446, 1503], "codifi": 1444, "codomain": [1342, 1467], "coeff": [918, 1342, 1467], "coeffici": [640, 645, 798, 883, 884, 885, 886, 887, 888, 889, 890, 891, 918, 1093, 1135, 1342, 1350, 1354, 1382, 1396, 1403, 1443, 1467, 1468], "coerc": 1359, "coercibl": 1456, "cognit": 1444, "coher": 1503, "cohes": 1442, "col": [229, 233, 292, 779, 1002, 1346], "col_norm": 1002, "colab": [1354, 1366, 1377, 1384, 1390, 1507], "colatitud": [1153, 1162], "colatitudin": 1162, "cold": 1495, "collabor": [1448, 1484], "collaps": [345, 1456], "collapsed_slice_dim": [381, 1424], "collat": 1465, "collate_fn": 1465, "collect": [116, 117, 121, 122, 123, 124, 125, 131, 150, 166, 180, 198, 252, 253, 263, 277, 281, 282, 296, 431, 432, 433, 503, 586, 592, 778, 865, 929, 937, 1002, 1010, 1011, 1013, 1015, 1283, 1333, 1342, 1348, 1349, 1354, 1367, 1377, 1385, 1402, 1411, 1445, 1448, 1458, 1460, 1461, 1463, 1470, 1479, 1489, 1490, 1496, 1497, 1500, 1503, 1506], "collect_profil": [1354, 1496], "collective_ax": [166, 180, 1484], "collective_axi": 1484, "collective_id": 1490, "collective_ref": 1474, "collectivepermut": 431, "collis": 1374, "color": [1369, 1464, 1469, 1479, 1490, 1494], "color_map": 86, "colormap": 86, "cols_sort": 201, "column": [80, 237, 240, 283, 293, 404, 501, 519, 528, 570, 625, 627, 632, 640, 645, 646, 754, 793, 794, 811, 902, 905, 906, 911, 945, 959, 961, 965, 986, 1047, 1090, 1094, 1095, 1101, 1102, 1342, 1354, 1369, 1456, 1467, 1472, 1480, 1483, 1484, 1485, 1488, 1492, 1494, 1506], "column_axi": [519, 528], "column_stack": [584, 945], "com": [184, 1354, 1357, 1364, 1366, 1367, 1384, 1387, 1461, 1462, 1465], "combin": [72, 120, 311, 340, 378, 381, 458, 460, 462, 463, 464, 488, 640, 645, 668, 670, 750, 921, 1002, 1342, 1346, 1348, 1353, 1354, 1363, 1366, 1371, 1374, 1376, 1377, 1378, 1381, 1384, 1397, 1451, 1455, 1465, 1471, 1473, 1474, 1475, 1479, 1485, 1486, 1488, 1490, 1505], "combinator": 1378, "combinatori": 1366, "combine_threshold_byt": 1381, "come": [434, 489, 625, 969, 1346, 1348, 1349, 1353, 1359, 1364, 1366, 1377, 1378, 1382, 1384, 1385, 1444, 1446, 1447, 1452, 1456, 1457, 1461, 1466, 1468, 1470, 1472, 1478, 1479, 1484, 1488, 1489, 1494, 1498, 1503, 1506], "comfort": 1488, "comma": [255, 668, 670, 671, 1356, 1484], "command": [98, 1354, 1356, 1357, 1360, 1362, 1363, 1366, 1368, 1380, 1381, 1384, 1387, 1461, 1462, 1496, 1498, 1499, 1504, 1507], "comment": [296, 1342, 1354, 1378, 1386, 1411, 1444, 1460, 1463, 1467], "commit": [57, 95, 100, 150, 164, 165, 167, 572, 586, 592, 595, 672, 673, 680, 684, 698, 720, 727, 728, 819, 873, 874, 995, 996, 1342, 1354, 1359, 1366, 1377, 1387, 1464, 1467, 1472], "commit_group": 167, "commit_smem": [150, 160, 167, 1483], "commit_tmem": [161, 1484], "common": [67, 296, 360, 422, 501, 562, 605, 610, 612, 616, 617, 618, 670, 722, 724, 729, 782, 827, 829, 830, 847, 947, 957, 1245, 1342, 1348, 1353, 1354, 1359, 1360, 1361, 1364, 1367, 1370, 1377, 1378, 1382, 1414, 1426, 1427, 1435, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1450, 1452, 1454, 1456, 1459, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1484, 1487, 1488, 1490, 1492, 1494, 1496, 1497, 1502], "common_lin": 1348, "commonli": [502, 1370, 1450, 1459, 1470, 1471, 1489, 1490, 1494, 1506], "commonmark": 1366, "commun": [131, 132, 198, 503, 1002, 1283, 1341, 1345, 1352, 1354, 1356, 1357, 1358, 1363, 1365, 1369, 1378, 1383, 1406, 1444, 1445, 1447, 1448, 1450, 1461, 1464, 1470, 1474, 1478, 1479, 1483, 1484, 1487, 1489, 1493, 1494, 1495, 1500, 1503], "commut": [1084, 1456], "compact": [1047, 1306, 1354, 1428, 1456], "compactli": 1456, "companion": 1503, "compar": [61, 96, 187, 368, 375, 382, 383, 392, 412, 414, 419, 564, 587, 588, 733, 764, 776, 811, 934, 981, 1002, 1052, 1086, 1101, 1348, 1354, 1366, 1369, 1377, 1378, 1385, 1414, 1444, 1454, 1456, 1460, 1474, 1484, 1487, 1489, 1490, 1492, 1494, 1497, 1503], "compare_abstract_ev": 1348, "compare_al": [769, 924], "compare_shard": 1470, "compare_transl": 1348, "compare_typ": [368, 382, 383, 392, 414, 419], "comparison": [239, 368, 381, 382, 383, 392, 414, 416, 417, 419, 459, 460, 1083, 1354, 1377, 1447, 1457, 1459, 1471, 1474, 1489, 1497], "comparison_direct": [368, 382, 383, 392, 414, 419], "comparisondirectionattr": 1348, "compat": [21, 98, 110, 111, 126, 201, 203, 220, 242, 296, 301, 313, 322, 324, 325, 328, 336, 359, 368, 382, 383, 392, 403, 414, 416, 417, 418, 419, 421, 430, 451, 461, 467, 468, 469, 482, 500, 563, 568, 570, 578, 584, 602, 604, 617, 625, 626, 632, 639, 646, 654, 664, 672, 674, 679, 701, 712, 716, 717, 718, 725, 734, 735, 738, 739, 745, 762, 783, 784, 785, 786, 790, 799, 811, 817, 820, 826, 833, 835, 836, 837, 838, 842, 843, 853, 854, 856, 858, 860, 861, 862, 867, 868, 869, 873, 894, 896, 909, 910, 914, 917, 918, 922, 923, 925, 927, 928, 946, 948, 951, 975, 976, 977, 978, 979, 980, 987, 989, 990, 994, 995, 1013, 1015, 1019, 1020, 1021, 1023, 1025, 1028, 1031, 1033, 1035, 1040, 1042, 1044, 1045, 1048, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1102, 1103, 1116, 1117, 1118, 1304, 1307, 1309, 1346, 1354, 1360, 1362, 1370, 1372, 1376, 1384, 1387, 1400, 1411, 1414, 1416, 1428, 1439, 1440, 1444, 1445, 1448, 1450, 1456, 1457, 1459, 1465, 1473, 1475, 1477, 1484, 1498], "compel": [1342, 1467], "compens": 1471, "compil": [10, 68, 83, 87, 88, 97, 112, 141, 150, 178, 183, 196, 197, 198, 209, 285, 296, 331, 337, 339, 349, 360, 363, 372, 373, 375, 378, 411, 412, 415, 422, 424, 432, 433, 457, 458, 465, 471, 478, 484, 485, 488, 493, 499, 505, 506, 556, 584, 655, 659, 668, 677, 776, 804, 834, 840, 846, 864, 886, 889, 891, 905, 911, 917, 924, 944, 949, 956, 957, 976, 998, 999, 1000, 1001, 1002, 1105, 1308, 1312, 1337, 1341, 1342, 1343, 1346, 1348, 1349, 1351, 1352, 1353, 1354, 1359, 1360, 1362, 1364, 1366, 1367, 1370, 1371, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1389, 1391, 1400, 1402, 1404, 1411, 1415, 1424, 1428, 1431, 1435, 1441, 1443, 1445, 1446, 1447, 1449, 1451, 1452, 1455, 1456, 1460, 1462, 1464, 1466, 1468, 1470, 1471, 1472, 1474, 1479, 1480, 1482, 1483, 1489, 1490, 1492, 1493, 1494, 1498, 1500, 1502, 1503, 1505, 1506], "compilation_cach": [1354, 1356, 1398, 1495], "compile_and_load": 1348, "compiled_comput": 1442, "compiled_func": 1307, "compiled_stat": 1471, "compiled_step": 1471, "compiled_upd": [1431, 1451], "compiledcallparam": 1385, "compileopt": [493, 1354], "compiler_ir": [1354, 1371, 1435], "compiler_opt": [296, 1354, 1411, 1435], "compiler_param": [178, 1478, 1483, 1489, 1490, 1492, 1493], "compiler_token": 1442, "compileropt": 1435, "compilerparam": [178, 1478, 1487, 1489, 1490, 1492, 1493], "complain": [1453, 1484, 1489], "complement": [866, 1128], "complementari": [371, 385, 1445, 1456, 1474], "complet": [18, 65, 66, 95, 126, 148, 160, 166, 172, 346, 378, 458, 495, 671, 730, 808, 1105, 1347, 1348, 1353, 1354, 1356, 1359, 1363, 1367, 1390, 1434, 1440, 1442, 1444, 1447, 1448, 1449, 1456, 1461, 1472, 1474, 1479, 1483, 1487, 1489, 1490, 1495, 1501, 1503, 1507], "complex": [15, 16, 31, 289, 298, 299, 300, 309, 310, 312, 313, 314, 318, 319, 320, 331, 340, 349, 350, 358, 369, 370, 371, 372, 373, 375, 382, 383, 384, 385, 386, 392, 393, 395, 398, 399, 408, 409, 411, 412, 413, 414, 416, 417, 428, 430, 439, 457, 470, 471, 472, 475, 478, 484, 485, 486, 491, 494, 531, 557, 559, 567, 573, 574, 575, 576, 577, 579, 582, 583, 620, 621, 623, 625, 631, 636, 637, 641, 643, 664, 673, 675, 681, 687, 701, 714, 727, 728, 731, 738, 745, 746, 749, 750, 753, 765, 766, 767, 772, 773, 775, 780, 787, 794, 796, 819, 831, 833, 835, 866, 874, 875, 878, 882, 883, 889, 892, 897, 899, 900, 907, 918, 921, 930, 931, 936, 938, 939, 942, 943, 950, 951, 953, 954, 988, 989, 990, 996, 1047, 1084, 1086, 1096, 1097, 1100, 1102, 1103, 1136, 1139, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1329, 1331, 1351, 1353, 1354, 1369, 1374, 1376, 1424, 1443, 1444, 1449, 1453, 1480, 1484, 1490, 1500, 1503, 1505, 1506], "complex128": [263, 336, 386, 439, 622, 630, 767, 793, 795, 1084, 1354, 1456], "complex64": [263, 336, 386, 439, 573, 574, 575, 576, 577, 579, 586, 592, 636, 637, 641, 643, 647, 682, 683, 685, 687, 688, 689, 692, 696, 697, 699, 701, 753, 767, 777, 793, 794, 795, 866, 883, 889, 892, 915, 918, 930, 936, 939, 942, 943, 953, 967, 988, 989, 1084, 1086, 1102, 1342, 1354, 1402, 1456, 1467, 1505], "complex_arr": 1354, "complexflo": 777, "compli": 1345, "complianc": [1354, 1452, 1465, 1473], "compliant": 1452, "complic": [360, 381, 459, 460, 461, 462, 463, 464, 505, 506, 670, 1342, 1349, 1359, 1369, 1370, 1371, 1376, 1377, 1378, 1385, 1387, 1414, 1441, 1448, 1449, 1467, 1475, 1484, 1490], "compon": [288, 686, 687, 701, 1341, 1349, 1354, 1371, 1377, 1378, 1396, 1424, 1446, 1447, 1449, 1456, 1457, 1471, 1474, 1479, 1493, 1498], "compos": [67, 337, 1119, 1341, 1348, 1351, 1361, 1369, 1379, 1383, 1390, 1397, 1445, 1449, 1462, 1463, 1466, 1474, 1475, 1484, 1488, 1495], "composit": [958, 1075, 1342, 1348, 1382, 1397, 1447, 1463, 1466, 1467, 1468, 1475], "composite_attribut": 337, "composition": 1348, "comprehens": [1342, 1444, 1448, 1455, 1467, 1489], "compress": [679, 923, 1414, 1495], "compris": [69, 80, 1342, 1357, 1446, 1454, 1460, 1463, 1506], "compromis": [1444, 1449], "comput": [1, 13, 23, 33, 53, 60, 67, 75, 81, 82, 83, 84, 87, 88, 90, 91, 97, 98, 112, 113, 126, 127, 174, 185, 186, 188, 189, 190, 192, 208, 220, 228, 229, 230, 232, 233, 234, 238, 239, 244, 284, 290, 293, 295, 296, 297, 305, 306, 307, 308, 311, 351, 352, 353, 354, 355, 356, 360, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 410, 415, 424, 425, 426, 427, 435, 436, 441, 442, 443, 444, 445, 447, 448, 449, 450, 458, 465, 481, 488, 489, 493, 494, 495, 499, 501, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 602, 605, 610, 612, 626, 637, 640, 641, 642, 643, 645, 646, 660, 661, 664, 669, 670, 671, 678, 681, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 719, 729, 733, 738, 739, 740, 741, 742, 745, 753, 762, 763, 769, 781, 782, 783, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 816, 817, 818, 823, 825, 826, 827, 828, 829, 830, 832, 833, 836, 838, 839, 842, 849, 850, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 875, 878, 879, 883, 884, 885, 886, 887, 888, 889, 890, 891, 894, 896, 898, 901, 906, 911, 924, 927, 928, 933, 934, 936, 943, 946, 948, 951, 952, 953, 954, 969, 975, 976, 977, 978, 979, 980, 987, 989, 998, 999, 1000, 1001, 1002, 1036, 1045, 1052, 1071, 1072, 1073, 1074, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1095, 1097, 1099, 1100, 1101, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1115, 1134, 1148, 1149, 1151, 1152, 1153, 1160, 1161, 1162, 1163, 1164, 1245, 1265, 1266, 1332, 1337, 1339, 1341, 1342, 1344, 1347, 1348, 1349, 1351, 1352, 1354, 1356, 1359, 1360, 1361, 1363, 1364, 1366, 1370, 1372, 1376, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1389, 1390, 1396, 1402, 1403, 1411, 1414, 1424, 1430, 1431, 1435, 1439, 1440, 1441, 1442, 1443, 1445, 1447, 1448, 1449, 1451, 1452, 1456, 1459, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1477, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1495, 1497, 1498, 1500, 1503, 1507], "computation": [1353, 1451, 1459, 1489], "computationsinlin": 1356, "compute_argu": 1381, "compute_cap": 1354, "compute_context": 1483, "compute_expm": [1085, 1086], "compute_index": 1478, "compute_intens": 1381, "compute_left_eigenvector": 397, "compute_loss": 1471, "compute_result": 1381, "compute_right_eigenvector": 397, "compute_schur_vector": 405, "compute_thread": 1483, "compute_typ": 1390, "compute_uv": [406, 811, 1101], "compute_wg": 1483, "computermsnorm": 1378, "con": 1450, "concat": [137, 614, 634], "concat_axi": [304, 1474], "concaten": [137, 198, 206, 288, 303, 304, 415, 614, 619, 627, 633, 667, 744, 902, 945, 993, 1283, 1348, 1354, 1369, 1374, 1397, 1414, 1440, 1447, 1462], "concatenate_p": 1414, "concentr": [1028, 1060], "concept": [339, 1337, 1349, 1352, 1354, 1369, 1456, 1461, 1475, 1480, 1484, 1486, 1492, 1503], "conceptu": [167, 174, 1002, 1348, 1361, 1366, 1390, 1441, 1456, 1461, 1485, 1487, 1493], "concern": [198, 991, 1283, 1377, 1378, 1448, 1451, 1493, 1503], "concis": [1444, 1450, 1466, 1498, 1503], "conclud": [1342, 1369, 1480, 1488, 1492], "conclus": [1481, 1491], "concret": [97, 500, 654, 820, 868, 894, 927, 975, 976, 1344, 1349, 1354, 1359, 1370, 1371, 1374, 1377, 1390, 1444, 1447, 1450, 1452, 1454, 1459, 1460, 1462, 1475, 1487, 1488], "concrete_av": 1354, "concrete_devic": 1371, "concrete_mesh": 1371, "concretearrai": [1348, 1354, 1377, 1390], "concretization_function_error": 1359, "concretizationtypeerror": [67, 112, 654, 868, 927, 975, 976, 1354, 1361, 1370, 1428, 1454], "concurr": [10, 150, 168, 864, 1354, 1366, 1369, 1380, 1477, 1483, 1484, 1490], "cond": [97, 465, 483, 881, 1346, 1354, 1360, 1362, 1376, 1377, 1378, 1447, 1459, 1462, 1470, 1489], "cond_abstract_ev": 1348, "cond_fun": [488, 1342, 1359, 1441, 1463], "cond_impl": 1348, "cond_jaxpr": 1441, "cond_jvp_rul": 1348, "cond_nconst": 1441, "cond_p": [1348, 1414], "cond_partial_ev": 1348, "cond_peval_eqn": 1348, "cond_transl": 1348, "cond_transpose_rul": 1348, "cond_vmap_rul": 1348, "conda": [397, 1366], "condit": [14, 67, 150, 195, 339, 424, 483, 564, 632, 679, 764, 789, 802, 881, 887, 925, 994, 1056, 1140, 1342, 1348, 1354, 1359, 1360, 1371, 1374, 1377, 1385, 1459, 1463, 1465, 1469, 1473, 1474, 1475, 1484, 1487, 1488, 1489, 1495, 1498], "condition": [339, 1371], "condlist": [881, 925], "conf": [1366, 1496], "confer": 1023, "confid": [1354, 1449], "config": [65, 66, 68, 87, 88, 90, 91, 92, 103, 109, 110, 111, 397, 499, 511, 543, 556, 997, 1017, 1023, 1026, 1036, 1037, 1346, 1354, 1356, 1360, 1362, 1364, 1366, 1368, 1371, 1380, 1381, 1402, 1404, 1440, 1443, 1454, 1456, 1461, 1462, 1470, 1473, 1495, 1499, 1500, 1501, 1503, 1504, 1505], "config_with_absl": 1462, "configproto": 1380, "configur": [90, 91, 98, 284, 397, 531, 543, 672, 732, 873, 895, 913, 926, 995, 1013, 1015, 1344, 1345, 1354, 1357, 1364, 1366, 1371, 1378, 1380, 1381, 1385, 1402, 1404, 1411, 1455, 1461, 1462, 1471, 1477, 1484, 1487, 1490, 1495, 1499, 1504, 1505], "configure_onli": 1366, "configurewhich": 1356, "confirm": [804, 810, 1098, 1099, 1378, 1461, 1462, 1503], "conflict": [10, 864, 1364, 1484, 1501], "conform": [1354, 1444, 1503], "confront": 1503, "confus": [346, 625, 733, 1342, 1349, 1354, 1377, 1444, 1448, 1450, 1452, 1453, 1467, 1484, 1505], "conj": [336, 386, 439, 749, 907, 1087, 1096, 1102], "conjug": [15, 239, 336, 340, 386, 408, 439, 635, 641, 749, 753, 811, 817, 883, 907, 988, 989, 990, 1047, 1101, 1116, 1117, 1342, 1467], "conjugate_a": 408, "conjunct": [63, 128, 129, 1348, 1374, 1452, 1483, 1485, 1490, 1493], "connect": [98, 344, 1012, 1382, 1397, 1456, 1461, 1465, 1468, 1473, 1479, 1490, 1496], "conquer": 1354, "consecut": [660, 1484, 1487, 1489, 1494], "consensu": 1470, "consequ": [730, 1016, 1347, 1348, 1354, 1374, 1376, 1445, 1451, 1452, 1454, 1455, 1475], "conserv": [150, 1444, 1479], "consid": [10, 67, 98, 110, 111, 289, 290, 293, 295, 297, 337, 415, 421, 481, 495, 564, 572, 578, 587, 614, 640, 645, 722, 724, 764, 766, 775, 776, 802, 811, 864, 886, 887, 889, 891, 969, 976, 985, 1016, 1101, 1141, 1142, 1307, 1308, 1309, 1310, 1311, 1331, 1332, 1342, 1345, 1346, 1347, 1348, 1349, 1351, 1354, 1356, 1359, 1361, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1390, 1396, 1403, 1414, 1438, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1451, 1452, 1456, 1459, 1460, 1462, 1463, 1464, 1466, 1467, 1468, 1471, 1474, 1475, 1479, 1484, 1487, 1488, 1489, 1490, 1494, 1497, 1498, 1506], "consider": [991, 1345, 1357, 1374, 1447, 1448, 1449, 1450, 1484, 1494, 1505], "consist": [75, 183, 198, 343, 344, 378, 458, 488, 493, 672, 701, 730, 778, 873, 911, 995, 1078, 1079, 1091, 1092, 1162, 1283, 1342, 1344, 1348, 1354, 1360, 1377, 1381, 1427, 1435, 1440, 1442, 1444, 1449, 1452, 1456, 1462, 1463, 1467, 1470, 1471, 1484, 1490, 1493, 1494, 1501], "consol": [1382, 1468], "const": [256, 1348, 1378, 1385, 1441, 1466], "const_arg": [1385, 1390, 1435], "const_arg_av": 1390, "const_bind": 1348, "const_low": [1385, 1390], "const_trac": 1348, "constant": [112, 255, 257, 296, 356, 481, 527, 532, 733, 761, 877, 881, 888, 1002, 1103, 1110, 1111, 1114, 1115, 1344, 1348, 1349, 1354, 1371, 1374, 1377, 1378, 1381, 1386, 1390, 1396, 1403, 1411, 1424, 1454, 1466, 1478, 1484, 1489, 1502, 1503, 1505], "constant_valu": [877, 1354], "constantli": [1345, 1367, 1494], "constid_to_var": 1348, "constitu": 1484, "constrain": [489, 1302, 1346, 1374, 1448, 1451, 1456, 1470, 1497, 1500, 1506], "constraint": [194, 245, 254, 255, 489, 501, 1342, 1346, 1354, 1359, 1364, 1371, 1431, 1444, 1448, 1449, 1451, 1456, 1457, 1462, 1463, 1470, 1479, 1487, 1489, 1492, 1501, 1502], "constraints_str": 245, "constrecip": 1348, "construct": [11, 44, 100, 131, 132, 196, 253, 254, 255, 321, 340, 345, 360, 386, 439, 458, 488, 586, 592, 614, 625, 640, 655, 668, 720, 721, 726, 750, 840, 910, 912, 921, 951, 955, 956, 969, 1063, 1077, 1083, 1094, 1102, 1119, 1302, 1346, 1348, 1349, 1353, 1354, 1359, 1361, 1370, 1371, 1374, 1385, 1390, 1396, 1397, 1415, 1441, 1444, 1452, 1454, 1461, 1466, 1470, 1475, 1478, 1480, 1485, 1490, 1493, 1494, 1497, 1500], "constructor": [236, 237, 628, 629, 708, 709, 710, 755, 756, 757, 758, 776, 777, 971, 972, 973, 974, 1303, 1307, 1354, 1397, 1431, 1440, 1441, 1444, 1455, 1475, 1487, 1503], "consts1": 1348, "consts2": 1348, "constval": 1348, "constvar": [257, 1348, 1354, 1385, 1441, 1466], "constvar_to_v": 1348, "consult": 1357, "consum": [37, 722, 724, 1017, 1037, 1354, 1370, 1371, 1382, 1396, 1404, 1447, 1452, 1455, 1464, 1468, 1475, 1479, 1480, 1483, 1484, 1489, 1498], "consumer_thread": 1484, "consumpt": [1471, 1483, 1484, 1498, 1503], "contact": [1341, 1501], "contain": [45, 61, 63, 67, 69, 94, 95, 113, 120, 134, 143, 199, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 222, 224, 240, 248, 254, 255, 286, 289, 290, 292, 296, 297, 298, 299, 300, 301, 303, 304, 309, 310, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 331, 332, 334, 338, 340, 341, 343, 344, 345, 347, 349, 350, 359, 362, 363, 364, 365, 366, 367, 368, 372, 373, 375, 377, 378, 381, 382, 383, 386, 389, 391, 392, 398, 399, 400, 401, 403, 406, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 429, 430, 432, 435, 436, 437, 439, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 478, 482, 484, 485, 486, 488, 494, 495, 501, 503, 519, 528, 538, 554, 559, 562, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 595, 603, 604, 605, 606, 610, 612, 613, 616, 621, 623, 625, 626, 636, 637, 639, 641, 642, 643, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 660, 664, 668, 669, 670, 671, 674, 675, 676, 678, 681, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 702, 703, 712, 714, 715, 716, 717, 718, 721, 726, 729, 731, 733, 734, 735, 736, 737, 738, 739, 740, 742, 745, 746, 749, 753, 761, 762, 764, 765, 766, 768, 770, 771, 772, 773, 774, 775, 780, 782, 784, 785, 786, 788, 789, 790, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 805, 806, 807, 810, 811, 813, 814, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 833, 835, 837, 843, 845, 847, 848, 849, 850, 851, 852, 854, 855, 857, 858, 859, 860, 861, 862, 866, 867, 868, 869, 879, 881, 883, 884, 887, 890, 892, 894, 901, 903, 906, 907, 908, 909, 914, 915, 918, 919, 920, 923, 927, 928, 930, 931, 933, 934, 936, 940, 942, 943, 947, 952, 953, 954, 956, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 975, 976, 977, 978, 979, 980, 986, 988, 989, 990, 1002, 1003, 1010, 1026, 1037, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1082, 1084, 1086, 1089, 1091, 1092, 1096, 1097, 1098, 1099, 1100, 1101, 1106, 1107, 1108, 1109, 1111, 1112, 1116, 1117, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1150, 1151, 1152, 1153, 1154, 1162, 1163, 1164, 1284, 1292, 1294, 1301, 1307, 1308, 1309, 1310, 1331, 1332, 1333, 1334, 1343, 1345, 1348, 1350, 1352, 1354, 1357, 1361, 1366, 1367, 1369, 1371, 1374, 1378, 1379, 1381, 1382, 1385, 1387, 1390, 1396, 1403, 1404, 1411, 1415, 1424, 1434, 1437, 1438, 1441, 1444, 1446, 1447, 1448, 1450, 1452, 1453, 1455, 1456, 1457, 1461, 1467, 1468, 1474, 1477, 1479, 1483, 1484, 1486, 1487, 1488, 1490, 1493, 1494, 1495, 1497, 1503, 1506], "contend": 1447, "content": [18, 220, 422, 501, 502, 868, 1066, 1335, 1336, 1337, 1338, 1339, 1354, 1366, 1370, 1376, 1377, 1441, 1452, 1453, 1475, 1490, 1498], "context": [65, 66, 67, 87, 88, 90, 91, 92, 97, 109, 110, 111, 112, 128, 129, 343, 499, 505, 506, 536, 549, 556, 762, 927, 975, 976, 977, 978, 979, 980, 997, 1007, 1008, 1015, 1016, 1027, 1149, 1160, 1283, 1304, 1342, 1348, 1350, 1354, 1359, 1360, 1363, 1364, 1370, 1371, 1376, 1377, 1390, 1404, 1411, 1428, 1444, 1447, 1452, 1454, 1460, 1463, 1467, 1469, 1470, 1474, 1478, 1483, 1484, 1487, 1490, 1496, 1499, 1502, 1503, 1504, 1505, 1506], "contextlib": [1348, 1349], "contextmanag": [1288, 1348, 1349], "contextu": [1364, 1402], "contigu": [131, 135, 136, 1440, 1472, 1484], "contiguous_submesh": [131, 504], "continu": [136, 507, 640, 645, 1136, 1341, 1342, 1344, 1350, 1354, 1356, 1359, 1366, 1369, 1371, 1377, 1382, 1444, 1447, 1448, 1455, 1462, 1467, 1471, 1484, 1495, 1496, 1503], "contract": [207, 208, 224, 360, 543, 544, 671, 753, 813, 817, 954, 989, 991, 1016, 1374, 1376, 1444, 1474, 1483, 1484, 1492, 1494], "contracting_dim_s": 1381, "contraction_dim": 1492, "contrast": [339, 1096, 1118, 1344, 1348, 1376, 1445, 1462, 1474, 1483, 1487, 1488, 1490, 1500, 1503, 1506], "contravari": 1302, "contribut": [134, 998, 999, 1000, 1001, 1341, 1366, 1377, 1387, 1403, 1444, 1448], "contributor": [1341, 1352, 1444, 1448], "contriv": [112, 1342, 1463], "control": [10, 13, 67, 75, 90, 91, 100, 112, 139, 198, 360, 381, 397, 404, 415, 432, 501, 508, 620, 625, 637, 641, 699, 720, 864, 887, 891, 924, 950, 997, 1016, 1084, 1105, 1106, 1107, 1108, 1109, 1112, 1265, 1288, 1338, 1342, 1343, 1344, 1347, 1352, 1354, 1356, 1357, 1362, 1364, 1368, 1370, 1371, 1378, 1381, 1382, 1385, 1389, 1434, 1441, 1442, 1443, 1444, 1449, 1451, 1454, 1459, 1460, 1463, 1467, 1469, 1475, 1479, 1480, 1483, 1484, 1486, 1487, 1490, 1493, 1496, 1497, 1500, 1501], "conv": [91, 343, 344, 346, 1356, 1397], "conv1dtranspos": 1397, "conv2d": [343, 344], "conv2d_transpos": 1469, "conv2dtranspos": 346, "conv_convolut": [344, 345], "conv_dimension_numb": 1469, "conv_gener": 1480, "conv_general_dil": [91, 113, 341, 344, 345, 346, 347, 1106, 1107, 1108, 1109, 1354, 1356, 1448, 1460], "conv_general_dilated_p": 1414, "conv_sam": 113, "convdimensionnumb": [342, 343, 344, 1424, 1469], "convei": 502, "conveni": [75, 76, 78, 84, 107, 112, 330, 341, 346, 347, 362, 364, 365, 367, 387, 434, 474, 632, 799, 803, 833, 834, 841, 872, 905, 911, 944, 957, 991, 1011, 1342, 1349, 1350, 1354, 1361, 1363, 1366, 1377, 1382, 1385, 1396, 1445, 1448, 1449, 1451, 1456, 1460, 1461, 1463, 1467, 1468, 1469, 1474, 1475, 1476, 1484, 1499, 1503, 1505, 1506], "convent": [248, 253, 288, 346, 573, 574, 575, 576, 577, 578, 579, 670, 776, 876, 1121, 1141, 1161, 1188, 1189, 1190, 1191, 1192, 1193, 1267, 1268, 1348, 1354, 1372, 1374, 1415, 1441, 1444, 1449, 1456, 1460, 1466, 1469, 1498], "convention": [1349, 1431], "converg": [239, 403, 1104, 1116, 1117, 1118, 1342, 1448, 1463], "convers": [61, 69, 143, 321, 348, 595, 620, 750, 921, 1348, 1354, 1359, 1370, 1442, 1444, 1452, 1459, 1462, 1475, 1484, 1497, 1504, 1506], "convert": [61, 69, 103, 135, 136, 211, 221, 226, 227, 228, 231, 232, 235, 243, 250, 251, 339, 342, 348, 402, 430, 435, 483, 502, 505, 506, 586, 592, 595, 599, 600, 601, 632, 652, 661, 668, 679, 721, 726, 840, 903, 906, 982, 1096, 1097, 1119, 1306, 1347, 1348, 1354, 1356, 1370, 1374, 1396, 1402, 1414, 1431, 1439, 1440, 1441, 1442, 1444, 1452, 1458, 1460, 1462, 1465, 1469, 1473, 1475, 1480, 1484, 1494, 1497, 1498, 1502, 1504, 1506], "convert_element_typ": [9, 321, 595, 1441, 1462], "converted_fn": 69, "convertelementtyp": 1462, "convertibletoint": 1444, "convex": [551, 1342, 1467], "convgeneraldilateddimensionnumb": [343, 344, 345, 346, 1424], "convolut": [91, 341, 342, 343, 344, 345, 346, 347, 531, 637, 641, 1106, 1107, 1108, 1109, 1112, 1342, 1343, 1351, 1354, 1356, 1397, 1411, 1414, 1424, 1448, 1460, 1462, 1467, 1474, 1480], "convolv": [641, 1107, 1108, 1109, 1112, 1351, 1354, 1411, 1448, 1460, 1469], "convolve2d": [1106, 1469], "convtranspos": 1397, "convwithgeneralpad": 1460, "coo": [199, 228, 229, 230, 231, 1414, 1494], "cook": 1447, "cookbook": [1343, 1463, 1464, 1468, 1470, 1474, 1500], "cool": 1488, "cooper": 1484, "coord": 1461, "coord_addr": 1461, "coordin": [98, 179, 292, 344, 578, 733, 761, 985, 1076, 1103, 1162, 1369, 1461, 1474, 1478, 1484, 1494], "coordinator_address": [98, 1461], "coordinator_bind_address": 98, "copi": [9, 10, 18, 31, 51, 57, 59, 61, 71, 94, 95, 100, 150, 166, 167, 173, 290, 586, 592, 595, 616, 618, 639, 654, 655, 659, 668, 677, 686, 691, 700, 720, 754, 834, 840, 846, 848, 864, 877, 878, 880, 882, 892, 899, 900, 905, 911, 912, 916, 917, 919, 938, 939, 944, 949, 957, 985, 1110, 1307, 1342, 1354, 1357, 1363, 1366, 1369, 1376, 1377, 1384, 1434, 1440, 1442, 1445, 1447, 1451, 1464, 1465, 1467, 1471, 1473, 1474, 1475, 1476, 1482, 1483, 1487, 1488, 1492, 1493, 1495, 1503, 1504], "copt": 1366, "copy_0_to_1": 1490, "copy_2_to_3": 1490, "copy_3_to_2": 1490, "copy_gmem_to_smem": [1483, 1484], "copy_in": 1487, "copy_in_start": 1487, "copy_in_wait": 1487, "copy_out": 1487, "copy_out_start": 1487, "copy_out_wait": 1487, "copy_sem": 1490, "copy_sharded_x": 1440, "copy_slot": 1490, "copy_smem_to_gmem": [160, 1483, 1484], "copy_start": 1487, "copy_wait": 1487, "copyright": [1357, 1465, 1473], "copysign": 1354, "copytohostasync": 1377, "core": [150, 267, 283, 291, 292, 449, 503, 527, 532, 723, 991, 1002, 1062, 1341, 1342, 1343, 1345, 1352, 1354, 1358, 1359, 1366, 1370, 1371, 1374, 1377, 1379, 1382, 1385, 1390, 1411, 1414, 1415, 1416, 1428, 1431, 1435, 1440, 1444, 1445, 1448, 1449, 1450, 1451, 1454, 1455, 1460, 1461, 1463, 1466, 1471, 1478, 1483, 1484, 1488, 1489, 1490, 1496, 1500, 1503], "core_axi": 1493, "core_index": 1490, "core_map": 1482, "core_on_chip": 1461, "core_test": 1348, "coreml": 1501, "coreutil": 1366, "corner": [1352, 1354, 1444, 1462], "corollari": 1451, "corrcoef": 645, "correct": [53, 60, 283, 407, 441, 529, 554, 578, 891, 911, 946, 987, 1019, 1342, 1348, 1351, 1354, 1369, 1372, 1376, 1377, 1384, 1424, 1444, 1447, 1452, 1455, 1471, 1474, 1475, 1479, 1480, 1484, 1487, 1489, 1490, 1493, 1494, 1503], "correct_sum": 1487, "correct_sum_kernel": 1487, "correctli": [339, 501, 1351, 1354, 1366, 1369, 1376, 1377, 1411, 1428, 1444, 1450, 1452, 1453, 1454, 1456, 1461, 1479], "correl": [637, 640, 645, 1106, 1107, 1109, 1354, 1448, 1455, 1469, 1498], "correlate2d": [1108, 1469], "correspond": [67, 69, 77, 78, 80, 104, 112, 120, 136, 178, 179, 198, 205, 222, 255, 289, 290, 292, 296, 305, 306, 327, 343, 344, 346, 356, 398, 431, 432, 433, 442, 443, 444, 445, 447, 448, 450, 458, 486, 500, 501, 502, 503, 504, 599, 600, 601, 639, 670, 671, 701, 729, 733, 746, 782, 787, 793, 794, 881, 923, 925, 958, 962, 966, 991, 1002, 1014, 1023, 1061, 1075, 1096, 1113, 1245, 1283, 1284, 1290, 1291, 1295, 1296, 1331, 1333, 1334, 1342, 1344, 1348, 1350, 1354, 1356, 1359, 1366, 1369, 1371, 1377, 1378, 1382, 1384, 1385, 1390, 1396, 1411, 1415, 1424, 1434, 1435, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1453, 1454, 1455, 1459, 1461, 1463, 1466, 1467, 1468, 1470, 1474, 1478, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1492, 1493, 1494, 1497, 1498, 1503, 1504, 1506], "correspondingli": [1342, 1463, 1474], "corrupt": [1354, 1484, 1490], "cos_jvp": 1348, "cos_p": 1348, "cos_x": [72, 79, 80, 1342, 1382, 1449, 1463, 1467, 1468], "cosh": [300, 472, 485, 574, 936, 953], "cosin": [299, 300, 309, 310, 312, 314, 349, 350, 471, 472, 484, 485, 573, 574, 575, 576, 577, 579, 642, 643, 933, 936, 952, 953, 985, 1071, 1072, 1073, 1074, 1348, 1449, 1503], "cosine_decai": 1503, "cost": [67, 77, 80, 239, 495, 804, 891, 1019, 1023, 1026, 1036, 1118, 1342, 1344, 1347, 1354, 1356, 1378, 1382, 1424, 1435, 1456, 1457, 1459, 1467, 1468, 1474, 1478, 1480, 1487, 1489, 1490, 1494], "cost_analysi": [804, 1344, 1354, 1435], "cost_estim": 178, "costestim": [178, 1478], "costli": [1354, 1456, 1488, 1495], "cotang": [75, 80, 1332, 1342, 1348, 1354, 1382, 1390, 1415, 1463, 1467, 1468], "cotangents_in_flat": 1348, "cotangents_out": 1348, "cotangents_out_flat": 1348, "could": [82, 283, 337, 343, 344, 357, 991, 994, 1013, 1015, 1135, 1311, 1342, 1348, 1349, 1351, 1354, 1356, 1361, 1363, 1366, 1370, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1385, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1454, 1456, 1457, 1461, 1462, 1463, 1464, 1467, 1468, 1470, 1474, 1475, 1479, 1480, 1485, 1487, 1488, 1490, 1492, 1494, 1495, 1496, 1497, 1502, 1503, 1504, 1506, 1507], "couldn": [1342, 1442, 1443, 1447, 1467], "count": [10, 150, 179, 239, 280, 334, 378, 429, 604, 606, 644, 671, 721, 726, 739, 740, 742, 864, 937, 976, 977, 978, 979, 980, 981, 1044, 1245, 1297, 1298, 1348, 1354, 1356, 1390, 1451, 1456, 1461, 1471, 1489, 1493, 1502, 1503], "count_leading_zero": 334, "counter": [1349, 1431, 1448, 1451, 1456, 1490, 1494, 1498, 1503], "counterclockwis": [567, 919], "counterexampl": 1456, "counterintuit": [1442, 1503], "counterpart": [398, 897, 1359, 1377, 1381, 1461], "counterst": 1502, "counterv2": 1502, "countrysid": 1462, "coupl": [1348, 1444, 1472, 1479, 1495], "cours": [1354, 1376, 1442, 1444, 1465, 1472, 1473, 1494, 1503], "cov": [640, 887, 1045, 1212, 1248, 1249], "covari": [640, 645, 887, 1045, 1248, 1249, 1302], "covector": [1342, 1467], "cover": [303, 304, 425, 426, 427, 435, 436, 437, 1341, 1342, 1350, 1356, 1357, 1360, 1369, 1378, 1389, 1390, 1444, 1447, 1466, 1467, 1483, 1484, 1487, 1490, 1492, 1493, 1494, 1495, 1500, 1503, 1506], "coverag": [1354, 1448, 1452, 1471, 1476], "cp": 1471, "cp312": 1366, "cpu": [62, 90, 93, 96, 178, 240, 246, 248, 286, 287, 296, 397, 399, 404, 405, 409, 424, 498, 720, 793, 795, 924, 1002, 1005, 1006, 1012, 1013, 1015, 1016, 1095, 1097, 1100, 1334, 1341, 1344, 1347, 1348, 1353, 1354, 1357, 1363, 1366, 1371, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1390, 1411, 1415, 1424, 1431, 1457, 1459, 1461, 1462, 1470, 1474, 1475, 1480, 1484, 1485, 1487, 1489, 1496, 1500, 1503, 1504, 1507], "cpu_cod": 424, "cpu_test": 1366, "cpudevic": [96, 1415, 1475, 1500], "cpython": [1365, 1366], "crack": 1442, "crash": [1354, 1356, 1387, 1474, 1490], "creat": [57, 104, 131, 132, 136, 138, 148, 168, 198, 199, 211, 226, 228, 232, 236, 237, 253, 255, 277, 281, 282, 289, 337, 380, 493, 501, 502, 503, 504, 505, 506, 511, 543, 570, 572, 586, 592, 614, 619, 638, 655, 668, 672, 673, 680, 684, 698, 723, 725, 727, 728, 747, 792, 819, 820, 840, 841, 872, 873, 874, 877, 902, 995, 996, 1013, 1015, 1017, 1037, 1065, 1077, 1088, 1093, 1120, 1302, 1307, 1331, 1333, 1342, 1346, 1348, 1349, 1350, 1354, 1357, 1362, 1364, 1369, 1370, 1371, 1374, 1376, 1377, 1381, 1385, 1390, 1402, 1414, 1415, 1428, 1431, 1434, 1442, 1444, 1447, 1448, 1451, 1454, 1455, 1456, 1458, 1461, 1464, 1465, 1466, 1469, 1470, 1471, 1473, 1474, 1475, 1479, 1483, 1484, 1487, 1490, 1492, 1494, 1495, 1496, 1498, 1500, 1503], "create_cpp_cal": 1385, "create_device_mesh": [198, 504, 1381], "create_mesh": 1382, "create_perfetto_link": [1013, 1015, 1354, 1496], "create_perfetto_trac": [1013, 1015], "create_token": [432, 1381], "create_us": 1456, "creation": [0, 672, 873, 995, 1346, 1354, 1364, 1370, 1377, 1454, 1461, 1477], "criteria": [1448, 1456, 1495], "criterion": [239, 1456], "critic": [1347, 1350, 1356, 1414, 1483, 1484, 1494], "cross": [641, 1108, 1109, 1110, 1115, 1342, 1354, 1372, 1381, 1384, 1415, 1445, 1474, 1492, 1500], "cross_product": 991, "crucial": [1350, 1374, 1461, 1471, 1484, 1487, 1498, 1503], "cruft": 1349, "csc": 1414, "csd": [1115, 1354], "cse": [67, 1471], "csingl": 701, "csr": [200, 232, 233, 234, 235, 240, 1354, 1414], "csrmetisnd": 240, "cstdint": 1378, "ct": [75, 1342, 1348, 1378, 1390, 1449, 1463, 1467], "ct_env": 1348, "ct_x": 1390, "ct_y": [1378, 1390], "cta": 1484, "ctrl": 1496, "cts_in": 1348, "cts_out": 1348, "ctx": [258, 1348, 1371, 1378, 1390, 1446], "ctype": [285, 1378], "cu12": 1377, "cube": [331, 457, 478, 621], "cubic": [291, 292, 1423, 1487, 1492], "cublaslt_matmul_desc_fast_accum": 1424, "cuda": [166, 184, 240, 246, 248, 424, 1354, 1366, 1371, 1378, 1415, 1457, 1480, 1483, 1496], "cuda11": [1354, 1384], "cuda111": 1354, "cuda11_cudnn805": 1354, "cuda11_cudnn82": 1354, "cuda12": [1354, 1384, 1475], "cuda12_loc": 1354, "cuda12_pip": 1354, "cuda_12": 1377, "cuda_compute_cap": 1354, "cuda_malloc_async": 1380, "cuda_vers": 1366, "cuda_visible_devic": 1387, "cudadevic": [1354, 1377, 1461], "cudamallocasync": 1380, "cudastream_t": 1378, "cudnn": [508, 543, 544, 1354, 1366, 1384], "cudnn82": 1384, "cudnn88": 1354, "cudnn89": 1354, "cudnn_vers": 1366, "cufft": 1354, "culprit": 1447, "cumbersom": [1342, 1445], "cummax": 1356, "cummin": 1356, "cumprod": [650, 851, 1354, 1356], "cumproduct": 1354, "cumsum": [651, 660, 669, 852, 985, 1354, 1356], "cumul": [19, 20, 351, 352, 353, 354, 355, 648, 649, 650, 651, 660, 669, 851, 852, 969, 1166, 1169, 1170, 1171, 1173, 1175, 1180, 1182, 1184, 1186, 1187, 1188, 1189, 1191, 1193, 1196, 1197, 1199, 1201, 1202, 1203, 1204, 1206, 1208, 1217, 1222, 1223, 1229, 1230, 1236, 1239, 1243, 1244, 1252, 1254, 1256, 1258, 1259, 1262, 1269, 1270, 1272, 1274, 1275, 1278, 1354, 1356], "cumulative_sum": [649, 852, 969, 1354], "cupi": 1354, "cupti": 1496, "cupti_callbackfunc": 1496, "cupti_cb_domain_driver_api": 1496, "cupti_error_insufficient_privileg": 1496, "cupti_error_not_initi": 1496, "cupti_interface_": 1496, "cupti_trac": 1496, "cur_abstract_mesh": 1390, "cur_metr": 1503, "cur_slot": 1487, "curat": 1352, "curiou": 1377, "current": [29, 81, 98, 136, 165, 168, 222, 240, 283, 360, 379, 399, 403, 404, 409, 424, 461, 543, 544, 671, 1002, 1014, 1016, 1071, 1072, 1073, 1074, 1083, 1094, 1105, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1341, 1344, 1345, 1346, 1348, 1349, 1354, 1356, 1357, 1359, 1364, 1366, 1369, 1370, 1371, 1374, 1377, 1378, 1384, 1385, 1390, 1404, 1414, 1415, 1424, 1434, 1439, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1457, 1462, 1470, 1471, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1503, 1506], "current_interpret": 1349, "current_phase_slic": 1490, "curri": [495, 1354, 1449], "curs": 1447, "cursed_ident": 1447, "curv": [958, 1075, 1377], "curvatur": [1342, 1467], "cusolv": 1354, "custom": [10, 69, 72, 75, 76, 77, 79, 80, 110, 126, 127, 248, 253, 283, 284, 285, 286, 287, 378, 544, 730, 777, 832, 864, 868, 877, 934, 1135, 1163, 1164, 1292, 1294, 1308, 1309, 1310, 1334, 1341, 1343, 1350, 1354, 1375, 1376, 1377, 1402, 1407, 1415, 1416, 1443, 1445, 1446, 1452, 1453, 1458, 1465, 1467, 1469, 1474, 1478, 1479, 1480, 1486, 1488, 1490, 1493, 1494, 1503], "custom_bind": 1354, "custom_cal": [284, 1354, 1371, 1378, 1415], "custom_call_api_vers": [283, 1378], "custom_call_target": 1378, "custom_dc": [1354, 1398], "custom_deriv": [80, 534, 541, 542, 1131, 1133, 1135, 1141, 1148, 1150, 1157, 1163, 1164, 1165, 1354], "custom_hook": 1495, "custom_jvp": [111, 534, 541, 542, 1131, 1133, 1135, 1141, 1148, 1150, 1157, 1163, 1164, 1165, 1348, 1354, 1356, 1378, 1449, 1453], "custom_jvp_cal": 1449, "custom_jvp_call_jaxpr": 1449, "custom_jvp_call_jaxpr_p": 1354, "custom_lin": 1449, "custom_linear_solv": [810, 1098, 1116, 1117, 1118], "custom_method": 1452, "custom_operation_for_gpu": 1390, "custom_pad": 877, "custom_partit": [1354, 1378, 1398, 1480], "custom_requirements_lock": 1366, "custom_root": [1342, 1463], "custom_transform": [1354, 1449], "custom_transpos": [111, 1356], "custom_vjp": [69, 72, 75, 111, 1346, 1354, 1356, 1361, 1363, 1368, 1371, 1378, 1443, 1445, 1449, 1474, 1480, 1492], "custom_vjp_cal": 1449, "custom_vmap": [74, 1378, 1480], "customarrai": 1452, "customcal": [1390, 1480], "customcallop": 1402, "customcalltargettrait": 1334, "customcallwithlayout": 1354, "customcallwithoutlayout": 1354, "customiz": 1455, "customnod": [1307, 1460, 1497], "customvjpprim": 80, "cut": [573, 574, 575, 576, 577, 579, 798, 1341, 1363, 1445, 1461], "cutlass": 1484, "cutoff": [807, 886, 889], "cval": 1103, "cwh": 345, "cxx": 1378, "cy": 1390, "cycl": [1345, 1354, 1356, 1370, 1381, 1438, 1457, 1484, 1497], "cycle_back": 1381, "cython": 1366, "cz": 1390, "czpf": 1366, "d": [82, 90, 346, 398, 409, 410, 502, 503, 504, 614, 620, 655, 658, 684, 687, 692, 698, 699, 721, 726, 742, 804, 934, 956, 1018, 1026, 1083, 1105, 1123, 1125, 1127, 1128, 1130, 1131, 1133, 1136, 1137, 1138, 1154, 1158, 1170, 1171, 1180, 1182, 1188, 1189, 1196, 1197, 1203, 1204, 1216, 1217, 1236, 1239, 1252, 1254, 1269, 1270, 1275, 1333, 1342, 1344, 1346, 1348, 1349, 1352, 1354, 1356, 1359, 1363, 1366, 1369, 1371, 1374, 1376, 1378, 1381, 1382, 1387, 1402, 1411, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1453, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1496, 1502], "d0": 1490, "d1": 955, "d2": 955, "d2fdx": 1350, "d2h": 1471, "d3fdx": 1350, "d4fdx": 1350, "d_ff": 1445, "d_k": 508, "da": 1440, "dag": [1348, 1402, 1456, 1497], "dai": [1341, 1344, 1371, 1387, 1444, 1446, 1450, 1495], "damnit": 1445, "danger": [1442, 1459, 1479], "dangl": 1503, "dash": 1354, "data": [13, 24, 45, 90, 95, 97, 104, 131, 132, 134, 136, 137, 160, 166, 198, 199, 205, 208, 220, 225, 237, 240, 284, 289, 290, 293, 295, 297, 356, 357, 360, 378, 424, 435, 458, 488, 495, 500, 501, 502, 543, 544, 572, 584, 591, 620, 628, 629, 668, 701, 708, 709, 710, 720, 721, 726, 739, 740, 741, 742, 755, 756, 757, 758, 762, 767, 816, 820, 857, 859, 868, 879, 887, 900, 901, 918, 922, 923, 927, 928, 958, 959, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 985, 998, 999, 1000, 1001, 1002, 1016, 1027, 1032, 1038, 1061, 1075, 1110, 1111, 1113, 1114, 1115, 1135, 1209, 1265, 1283, 1307, 1308, 1310, 1331, 1332, 1342, 1343, 1349, 1354, 1356, 1361, 1363, 1364, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1390, 1396, 1411, 1415, 1424, 1427, 1428, 1434, 1435, 1437, 1438, 1440, 1442, 1444, 1445, 1447, 1448, 1450, 1451, 1452, 1454, 1455, 1456, 1460, 1462, 1463, 1466, 1467, 1469, 1470, 1475, 1477, 1479, 1483, 1484, 1487, 1488, 1490, 1491, 1492, 1496, 1497, 1502, 1504, 1506], "data_callback": 500, "data_dir": 1473, "data_field": [1307, 1354, 1506], "data_parallel": 1369, "data_shd": 1378, "data_slic": 1487, "datacent": 1490, "dataclass": [178, 1307, 1308, 1309, 1311, 1349, 1354, 1478, 1503, 1506], "datafram": 1456, "dataload": 1465, "dataset": [1209, 1216, 1342, 1343, 1350, 1369, 1378, 1383, 1414, 1465, 1467, 1469, 1500, 1503, 1506], "dataset_as_numpi": 1473, "datatyp": [341, 343, 345, 346, 347, 637, 641, 664, 670, 687, 753, 799, 813, 817, 833, 954, 988, 989, 1378, 1424, 1464, 1500], "date": [1365, 1366, 1371, 1383, 1387, 1444, 1445, 1450, 1507], "datset": 1503, "davmr": 1476, "db": [305, 306, 1464, 1465, 1473], "dblquad": 1448, "dce": [126, 127, 1354], "dce_rul": [126, 127], "dcmake_build_typ": 1378, "dcn": [132, 1356], "dcn_mesh_shap": 132, "dct": [290, 1072, 1073, 1074, 1333, 1342, 1463], "dctn": [1071, 1073, 1074], "ddf": 1403, "ddkq8": 1461, "ddof": [53, 60, 645, 860, 862, 946, 987, 1266], "ddot": 1492, "de": [1415, 1462, 1469, 1503], "deactiv": 98, "dead": [98, 126, 1349, 1354], "deadlock": [1354, 1356, 1381, 1461, 1465, 1484], "deal": [1348, 1371, 1390, 1442, 1459, 1479, 1484, 1494, 1502, 1503], "dealloc": 1380, "dealt": 1348, "debian": [397, 1366], "debug": [74, 97, 118, 130, 178, 257, 267, 499, 505, 506, 1016, 1098, 1099, 1337, 1354, 1366, 1370, 1372, 1377, 1378, 1380, 1388, 1435, 1445, 1449, 1459, 1461, 1464, 1466, 1474, 1478, 1480, 1482, 1490, 1495, 1497, 1500, 1501, 1506], "debug_bwd": [1342, 1463], "debug_check": [1356, 1478], "debug_fwd": [1342, 1463], "debug_inf": 1354, "debug_info": [257, 267, 272, 1344, 1354, 1390, 1435], "debug_key_reus": [1370, 1404], "debug_nan": 1354, "debug_options_flag": 1507, "debug_print": [84, 1478], "debugg": [65, 66, 81, 1342, 1356, 1360, 1363, 1449, 1462, 1463], "debuginfo": [257, 267, 1354], "decai": 1396, "decay_r": 1396, "decay_step": [1396, 1503], "decemb": [1354, 1365, 1450, 1456], "decentr": 1341, "decid": [178, 240, 1374, 1385, 1411, 1440, 1446, 1449, 1464, 1470, 1471, 1480], "decim": [46, 585, 701, 920, 1485], "decis": [1341, 1349, 1354, 1381, 1382, 1444, 1446, 1448, 1455, 1468, 1470, 1472, 1480, 1489, 1500], "deck": 1449, "declar": [1354, 1370, 1378, 1385, 1434, 1444, 1448, 1484, 1503], "decod": [1378, 1503], "decode_shard": 1402, "decompos": [337, 783, 1090, 1342, 1424, 1447, 1449, 1467, 1481, 1487, 1492], "decomposit": [337, 395, 396, 401, 403, 404, 405, 406, 788, 794, 796, 802, 808, 809, 811, 1078, 1079, 1080, 1082, 1090, 1091, 1094, 1095, 1096, 1097, 1101, 1118, 1342, 1354, 1424, 1467, 1492], "decor": [67, 72, 74, 75, 76, 77, 79, 126, 242, 252, 253, 268, 296, 337, 506, 1009, 1016, 1307, 1309, 1311, 1312, 1342, 1346, 1353, 1354, 1360, 1363, 1366, 1378, 1382, 1390, 1396, 1440, 1443, 1454, 1459, 1460, 1463, 1464, 1468, 1470, 1475, 1478, 1497, 1500, 1503, 1506], "decorator_kwarg": 1009, "decoupl": 1494, "decreas": [171, 661, 986, 1118, 1356, 1377, 1380, 1381, 1495], "decrement": 1490, "dedic": [337, 1302], "dedup_refer": 1354, "deem": 1448, "deep": [1342, 1348, 1379, 1459, 1460, 1463, 1467, 1469, 1474, 1479, 1489, 1492, 1503], "deepcopi": [1354, 1428], "deeper": [1350, 1452, 1503], "deepli": 1352, "deepmind": [1341, 1397, 1398, 1448], "def": [0, 67, 69, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 97, 112, 113, 118, 119, 120, 126, 242, 293, 295, 296, 303, 305, 306, 315, 316, 337, 339, 378, 415, 422, 424, 436, 458, 481, 483, 488, 495, 500, 503, 506, 570, 625, 723, 733, 784, 804, 832, 877, 914, 991, 1002, 1009, 1016, 1052, 1086, 1304, 1307, 1308, 1309, 1310, 1311, 1312, 1332, 1333, 1342, 1344, 1346, 1348, 1349, 1350, 1351, 1354, 1359, 1360, 1361, 1362, 1363, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1385, 1390, 1396, 1402, 1414, 1428, 1439, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1495, 1497, 1498, 1500, 1502, 1503, 1506], "def_abstract_ev": [1371, 1390, 1446], "def_dc": 126, "def_impl": [1390, 1446], "def_partit": [1378, 1402], "def_vmap": 72, "default": [10, 13, 67, 77, 80, 81, 89, 90, 91, 92, 95, 96, 98, 110, 111, 120, 131, 132, 134, 137, 150, 178, 198, 210, 211, 226, 237, 240, 241, 246, 248, 250, 251, 283, 284, 286, 289, 290, 291, 292, 293, 295, 296, 297, 304, 305, 306, 331, 341, 343, 344, 345, 346, 347, 349, 356, 360, 362, 364, 372, 373, 375, 380, 381, 387, 397, 403, 404, 411, 412, 424, 436, 437, 449, 454, 456, 457, 458, 471, 474, 475, 478, 484, 485, 493, 495, 496, 503, 505, 506, 507, 508, 509, 512, 518, 519, 526, 528, 529, 530, 533, 538, 540, 543, 544, 554, 563, 564, 567, 568, 569, 572, 582, 583, 586, 587, 589, 591, 592, 595, 602, 625, 626, 632, 637, 640, 641, 644, 645, 646, 648, 649, 650, 651, 655, 656, 658, 659, 660, 661, 664, 669, 670, 671, 672, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 703, 705, 720, 721, 723, 726, 727, 731, 733, 739, 740, 741, 742, 747, 751, 753, 761, 762, 764, 769, 787, 788, 789, 790, 794, 796, 798, 799, 800, 802, 804, 805, 807, 808, 809, 811, 813, 816, 817, 818, 819, 831, 833, 836, 838, 839, 840, 842, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 868, 873, 876, 877, 878, 879, 881, 885, 886, 887, 888, 889, 896, 898, 899, 901, 905, 906, 910, 911, 917, 918, 919, 920, 922, 923, 924, 925, 927, 928, 937, 938, 941, 946, 948, 950, 951, 954, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 975, 976, 977, 978, 979, 980, 981, 985, 986, 987, 988, 989, 991, 995, 998, 999, 1000, 1001, 1002, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1118, 1151, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1245, 1265, 1266, 1283, 1302, 1306, 1307, 1331, 1332, 1334, 1342, 1348, 1350, 1354, 1359, 1361, 1366, 1367, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1385, 1396, 1402, 1403, 1404, 1411, 1424, 1428, 1431, 1434, 1440, 1443, 1445, 1447, 1455, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1474, 1475, 1477, 1480, 1483, 1484, 1485, 1487, 1489, 1490, 1493, 1495, 1496, 1497, 1498, 1499, 1501, 1504, 1505, 1506, 1507], "default_backend": 1354, "default_col": 1465, "default_devic": [1354, 1377, 1503], "default_export_platform": 1371, "default_input_handl": 1348, "default_lowering_platform": 1371, "default_matmul_precis": [343, 1489], "default_mesh": 1464, "default_prng_impl": 1354, "default_rng": [720, 985, 1376, 1500], "defaultdict": 1348, "defeat": [67, 1361, 1370], "defens": [1350, 1447, 1451, 1456, 1467, 1474], "defer": [305, 306, 1342, 1348, 1400, 1415, 1456, 1463], "defici": [802, 807, 1376], "defin": [10, 61, 69, 72, 73, 75, 76, 77, 78, 79, 80, 110, 113, 120, 126, 127, 130, 136, 178, 223, 238, 244, 248, 283, 296, 305, 306, 337, 356, 357, 359, 362, 363, 364, 365, 366, 367, 381, 396, 398, 422, 451, 459, 460, 461, 462, 463, 464, 466, 470, 508, 531, 536, 543, 544, 549, 574, 576, 579, 589, 591, 628, 629, 637, 641, 643, 645, 708, 709, 710, 738, 746, 755, 756, 757, 758, 776, 789, 864, 881, 892, 894, 906, 919, 923, 934, 936, 953, 969, 971, 972, 973, 974, 991, 1002, 1016, 1026, 1088, 1135, 1136, 1149, 1160, 1161, 1163, 1164, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1184, 1186, 1187, 1188, 1189, 1191, 1193, 1196, 1197, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1217, 1218, 1219, 1236, 1239, 1243, 1244, 1248, 1249, 1252, 1254, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1269, 1270, 1272, 1274, 1275, 1278, 1307, 1308, 1309, 1310, 1311, 1312, 1341, 1345, 1346, 1348, 1349, 1353, 1354, 1356, 1368, 1369, 1371, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1396, 1411, 1424, 1435, 1438, 1441, 1444, 1446, 1448, 1449, 1452, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 1483, 1484, 1485, 1488, 1494, 1495, 1497, 1498, 1500, 1501, 1503, 1506, 1507], "define_": 1354, "definit": [76, 79, 290, 395, 551, 788, 958, 1045, 1075, 1078, 1079, 1080, 1094, 1098, 1100, 1117, 1162, 1302, 1342, 1353, 1354, 1376, 1377, 1378, 1382, 1390, 1396, 1411, 1416, 1427, 1444, 1449, 1452, 1456, 1460, 1463, 1467, 1468, 1474, 1502, 1506], "definitely_equ": 1354, "defjvp": [76, 1342, 1376, 1449, 1463], "defragment": 1354, "defvjp": [69, 72, 79, 1342, 1346, 1361, 1363, 1378, 1449, 1453, 1463], "defvjp_al": 1449, "deg": [567, 887], "deg2rad": [903, 904, 985], "degrad": [1354, 1457, 1462, 1471, 1484, 1489], "degre": [567, 645, 652, 860, 862, 887, 903, 919, 946, 985, 987, 1025, 1031, 1055, 1119, 1120, 1152, 1153, 1162, 1188, 1189, 1190, 1191, 1192, 1193, 1266, 1267, 1268, 1342, 1356, 1403, 1444, 1448, 1450, 1452, 1467, 1479], "del": [1348, 1378, 1475, 1494, 1497, 1498, 1503, 1506], "delai": [84, 112, 168, 1348, 1354, 1363, 1365, 1374, 1397, 1443, 1449, 1484, 1490], "delay_releas": [150, 168, 1483], "deleg": 1455, "delet": [95, 296, 304, 569, 638, 754, 1023, 1337, 1354, 1356, 1371, 1443, 1457, 1495], "deliber": [722, 724, 1364, 1462, 1470], "delight": 1449, "delimit": 1356, "delta": [519, 1051, 1342], "delta_theta": 1342, "delta_theta_original_calcul": 1342, "demand": [1374, 1380, 1445], "demo": [1449, 1461, 1469], "demonstr": [74, 670, 811, 821, 1016, 1101, 1113, 1345, 1361, 1369, 1370, 1376, 1378, 1381, 1390, 1464, 1469, 1471, 1472, 1476, 1480, 1490, 1494, 1500, 1503, 1506], "denomin": 1031, "denomni": 578, "denorm": [421, 701], "denormal_numb": 701, "denot": [75, 134, 458, 1082, 1152, 1153, 1188, 1189, 1190, 1191, 1192, 1193, 1342, 1374, 1377, 1441, 1456, 1467, 1483, 1490, 1493, 1494], "dens": [98, 199, 206, 207, 210, 211, 213, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 243, 290, 531, 751, 841, 872, 1265, 1342, 1344, 1378, 1381, 1397, 1414, 1448, 1465, 1467, 1473, 1491], "dense_dim": 199, "dense_mat": 1494, "denseelementsattr": 1348, "densegener": 1381, "densiti": [739, 740, 742, 1020, 1024, 1025, 1028, 1029, 1030, 1031, 1033, 1034, 1036, 1039, 1041, 1042, 1043, 1045, 1046, 1048, 1053, 1055, 1056, 1057, 1059, 1060, 1110, 1115, 1155, 1170, 1171, 1188, 1189, 1194, 1195, 1196, 1197, 1203, 1204, 1209, 1214, 1215, 1217, 1222, 1223, 1229, 1230, 1236, 1239, 1252, 1254, 1260, 1261, 1469], "depart": [1428, 1462], "depend": [9, 61, 67, 75, 95, 97, 107, 120, 132, 137, 139, 143, 283, 321, 339, 422, 424, 432, 528, 538, 582, 584, 595, 637, 641, 658, 672, 679, 704, 762, 804, 805, 868, 873, 878, 883, 927, 928, 975, 976, 977, 978, 979, 980, 995, 1002, 1016, 1094, 1099, 1105, 1106, 1107, 1108, 1109, 1112, 1136, 1140, 1151, 1342, 1345, 1348, 1349, 1350, 1353, 1354, 1357, 1359, 1360, 1363, 1370, 1374, 1376, 1377, 1378, 1381, 1384, 1385, 1387, 1411, 1415, 1424, 1428, 1435, 1440, 1441, 1442, 1444, 1445, 1446, 1448, 1451, 1455, 1456, 1457, 1459, 1461, 1462, 1463, 1467, 1474, 1475, 1477, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1494, 1502, 1503, 1506], "depict": [1483, 1487, 1490, 1494], "deploi": [1371, 1490], "deploy": [1356, 1369, 1461], "deprec": [98, 110, 111, 283, 543, 583, 626, 802, 807, 857, 859, 879, 901, 922, 938, 1016, 1162, 1345, 1354, 1356, 1371, 1376, 1384, 1400, 1411, 1428, 1429, 1440, 1444, 1446, 1448, 1452, 1455, 1478], "deprecatedarg": [283, 626, 802, 807, 857, 859, 879, 901, 1016], "deprecationwan": 1354, "deprecationwarn": [626, 802, 807, 857, 859, 879, 901, 1342, 1345, 1354, 1467], "depriv": 1498, "depth": [198, 495, 590, 627, 666, 667, 743, 744, 941, 945, 992, 993, 1148, 1291, 1298, 1342, 1366, 1389, 1460, 1467, 1474, 1500, 1506, 1507], "dereferenc": [1483, 1484, 1493], "deriv": [69, 76, 80, 346, 422, 493, 552, 730, 885, 888, 934, 1085, 1116, 1117, 1135, 1152, 1158, 1163, 1164, 1343, 1348, 1349, 1350, 1354, 1374, 1376, 1378, 1390, 1403, 1416, 1431, 1449, 1453, 1455, 1465, 1467, 1473, 1484], "deriv1": 1348, "deriv2": 1348, "deriv3": 1348, "deriv4": 1348, "deriv5": 1348, "derivative_fn": 1475, "derivi": 1463, "descend": [8, 51, 583, 938, 1354], "descent": [1396, 1502, 1506], "describ": [91, 148, 178, 180, 283, 346, 379, 381, 398, 408, 409, 459, 460, 461, 462, 463, 464, 500, 502, 503, 553, 562, 605, 610, 612, 625, 627, 634, 667, 668, 744, 827, 829, 830, 847, 913, 945, 947, 969, 993, 998, 999, 1000, 1001, 1010, 1016, 1094, 1100, 1119, 1152, 1153, 1301, 1342, 1349, 1354, 1356, 1366, 1369, 1374, 1378, 1381, 1385, 1386, 1390, 1391, 1402, 1415, 1424, 1430, 1431, 1434, 1440, 1441, 1445, 1449, 1450, 1451, 1453, 1456, 1461, 1462, 1463, 1470, 1471, 1472, 1474, 1477, 1480, 1484, 1488, 1489, 1494, 1496, 1498, 1500, 1502, 1503, 1505], "descript": [140, 267, 637, 641, 922, 923, 994, 1106, 1107, 1108, 1109, 1162, 1348, 1354, 1357, 1385, 1415, 1450, 1470, 1500], "descriptor": [62, 346, 1415, 1479, 1490], "deseri": [248, 252, 253, 1354, 1371, 1374, 1385, 1396, 1415], "deserialize_auxdata": 253, "desiderata": [1449, 1451], "desideratum": 1442, "design": [82, 98, 130, 458, 501, 571, 1002, 1016, 1110, 1341, 1345, 1348, 1351, 1354, 1363, 1376, 1379, 1383, 1389, 1395, 1411, 1414, 1428, 1442, 1445, 1446, 1448, 1449, 1450, 1454, 1458, 1459, 1460, 1462, 1471, 1475, 1477, 1479, 1483, 1489, 1490, 1493, 1498, 1500, 1503, 1505], "desir": [131, 132, 239, 494, 572, 721, 726, 857, 859, 868, 879, 901, 1110, 1114, 1115, 1302, 1356, 1366, 1369, 1451, 1452, 1456, 1462, 1480, 1484, 1488, 1495, 1498, 1501, 1505], "despit": [239, 730, 1366, 1448, 1492, 1495], "destin": [166, 431, 432, 433, 846, 900, 1382, 1456, 1474, 1490, 1498], "destination_index": [431, 432, 433, 1474], "destroi": [1346, 1354], "det": [809, 1045, 1248, 1249], "detail": [1, 9, 10, 33, 67, 74, 76, 79, 95, 128, 129, 139, 140, 178, 245, 254, 283, 288, 296, 303, 304, 305, 306, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 503, 590, 595, 666, 672, 732, 743, 776, 793, 800, 818, 864, 873, 895, 897, 913, 926, 992, 994, 995, 1002, 1095, 1105, 1148, 1265, 1302, 1333, 1344, 1345, 1346, 1349, 1350, 1352, 1354, 1357, 1360, 1361, 1363, 1366, 1367, 1369, 1371, 1374, 1376, 1377, 1378, 1379, 1384, 1385, 1386, 1402, 1403, 1411, 1415, 1424, 1431, 1434, 1440, 1441, 1444, 1446, 1447, 1449, 1451, 1454, 1456, 1459, 1460, 1461, 1462, 1464, 1466, 1467, 1471, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1493, 1495, 1496, 1497, 1498, 1502, 1503, 1507], "detailed_log": 493, "detect": [77, 80, 87, 88, 98, 1342, 1344, 1354, 1356, 1360, 1362, 1363, 1369, 1370, 1377, 1378, 1384, 1402, 1404, 1453, 1459, 1462, 1463], "determin": [69, 80, 83, 178, 277, 281, 282, 288, 290, 296, 305, 306, 360, 378, 404, 406, 424, 458, 466, 475, 572, 627, 634, 639, 667, 723, 744, 761, 769, 791, 802, 807, 809, 945, 976, 993, 998, 999, 1000, 1001, 1017, 1023, 1026, 1036, 1037, 1081, 1094, 1113, 1341, 1354, 1356, 1370, 1374, 1377, 1378, 1379, 1381, 1382, 1411, 1431, 1445, 1450, 1452, 1455, 1456, 1460, 1471, 1472, 1474, 1475, 1477, 1479, 1480, 1488, 1498, 1500, 1505], "determinist": [1032, 1291, 1354, 1431, 1451, 1470, 1475, 1490, 1498, 1500], "detrend": [1110, 1114, 1115], "dev": [13, 83, 136, 245, 248, 254, 255, 288, 572, 1013, 1015, 1283, 1288, 1333, 1342, 1354, 1356, 1359, 1366, 1374, 1378, 1384, 1390, 1407, 1415, 1431, 1439, 1454, 1456, 1459, 1462, 1464, 1467, 1472, 1474, 1475, 1496], "dev20240416": 1366, "develop": [701, 1342, 1349, 1352, 1353, 1354, 1357, 1364, 1366, 1372, 1378, 1383, 1384, 1404, 1414, 1447, 1448, 1449, 1450, 1456, 1457, 1463, 1471, 1480, 1486, 1489, 1501], "deviaiton": [860, 946], "deviat": [53, 239, 526, 529, 531, 860, 862, 946, 987, 1042, 1105, 1271, 1273, 1348, 1490], "devic": [9, 13, 18, 29, 57, 83, 90, 93, 95, 98, 100, 130, 131, 132, 135, 136, 138, 170, 196, 198, 296, 303, 304, 315, 316, 426, 435, 436, 437, 493, 497, 498, 500, 501, 502, 504, 572, 586, 592, 595, 672, 673, 680, 684, 698, 720, 727, 728, 819, 873, 874, 995, 996, 1002, 1007, 1010, 1011, 1012, 1013, 1015, 1016, 1283, 1339, 1341, 1343, 1344, 1347, 1348, 1354, 1359, 1361, 1363, 1372, 1376, 1378, 1379, 1381, 1382, 1384, 1385, 1402, 1405, 1411, 1415, 1424, 1428, 1434, 1435, 1440, 1441, 1442, 1444, 1448, 1451, 1454, 1456, 1458, 1461, 1462, 1470, 1474, 1478, 1479, 1484, 1487, 1489, 1490, 1493, 1494, 1495, 1496, 1498, 1500, 1504, 1505], "device0": 435, "device1": 435, "device2": 435, "device3": 435, "device_assign": [493, 1390, 1435], "device_buff": [1354, 1440, 1462], "device_count": [96, 501, 502, 1369, 1415, 1461], "device_get": 1504, "device_id": [155, 170, 1478, 1479, 1490], "device_id_typ": 1490, "device_indices_map": 1434, "device_kind": [1470, 1490, 1494], "device_local_layout": 1354, "device_memory_profil": [1011, 1471], "device_put": [13, 94, 502, 1354, 1371, 1377, 1378, 1381, 1382, 1415, 1434, 1440, 1461, 1464, 1470, 1472, 1474, 1490, 1500, 1503, 1504], "device_put_repl": [94, 1354], "device_put_shard": 94, "device_set": [501, 1434, 1440], "device_to_devic": 1504, "device_to_host": 1504, "device_typ": 1473, "device_under_test": 1354, "device_variance_typ": 1447, "devicearrai": [1354, 1440, 1444, 1504, 1505], "deviceassign": [296, 1354, 1411], "deviceid": 155, "deviceidtyp": 1490, "devicelocallayout": 1354, "devices_indices_map": 1434, "devot": 1484, "dex": [1346, 1480], "df": [1025, 1031, 1055, 1188, 1189, 1190, 1191, 1192, 1193, 1267, 1268, 1377, 1403], "dfden": 1031, "dfdx": 1350, "dfm": 1446, "dfnum": 1031, "dg": 1377, "dh": 1503, "di": [98, 1342, 1403, 1462, 1467], "diag": [658, 659, 792, 811, 956, 1082, 1083, 1101, 1354], "diag_indic": 657, "diag_indices_from": 656, "diagflat": [655, 659, 956], "diagnos": [1345, 1484], "diagnost": [356, 357], "diagon": [58, 237, 401, 404, 408, 409, 410, 640, 645, 655, 656, 657, 658, 670, 680, 700, 811, 816, 956, 959, 960, 961, 962, 964, 965, 966, 1077, 1082, 1083, 1095, 1097, 1099, 1101, 1102, 1469, 1494], "diagram": [1434, 1487, 1490, 1493, 1494], "dialect": [1348, 1354, 1356, 1378, 1390, 1435, 1449, 1480], "dict": [67, 69, 77, 80, 113, 114, 178, 258, 268, 283, 286, 296, 339, 378, 458, 488, 493, 494, 503, 668, 877, 1002, 1284, 1307, 1333, 1348, 1349, 1354, 1377, 1379, 1385, 1396, 1411, 1435, 1438, 1444, 1462, 1473, 1497, 1503, 1506], "dictat": [1403, 1490], "dictionari": [178, 283, 284, 668, 923, 1105, 1306, 1333, 1377, 1460, 1466, 1478, 1497, 1503, 1506], "dictkei": [1292, 1294, 1354, 1506], "did": [1342, 1346, 1349, 1354, 1377, 1385, 1445, 1451, 1470, 1474, 1478, 1479], "didact": 1502, "didn": [1304, 1342, 1349, 1357, 1382, 1445, 1447, 1451, 1459, 1461, 1467, 1468, 1474, 1476, 1501, 1502], "diff": [669, 739, 740, 742, 1366, 1494], "diff_bas": 1367, "differ": [9, 13, 61, 75, 93, 100, 119, 136, 180, 296, 304, 380, 424, 451, 455, 482, 488, 495, 502, 572, 578, 582, 591, 595, 604, 658, 660, 664, 668, 669, 700, 701, 720, 723, 733, 762, 776, 777, 787, 793, 795, 804, 807, 849, 850, 877, 878, 882, 883, 884, 885, 886, 889, 890, 897, 899, 900, 910, 919, 922, 923, 927, 928, 950, 951, 969, 975, 982, 985, 988, 991, 994, 1002, 1086, 1103, 1105, 1110, 1116, 1117, 1118, 1161, 1285, 1286, 1287, 1304, 1307, 1333, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1352, 1354, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1378, 1379, 1380, 1382, 1384, 1385, 1387, 1396, 1411, 1415, 1428, 1431, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1455, 1456, 1459, 1461, 1462, 1463, 1464, 1466, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507], "differenc": 927, "different": 1470, "differenti": [67, 69, 75, 76, 77, 79, 80, 198, 289, 290, 293, 295, 297, 356, 357, 402, 461, 481, 488, 495, 507, 541, 542, 733, 788, 794, 796, 885, 934, 994, 1085, 1105, 1116, 1117, 1163, 1164, 1283, 1285, 1286, 1287, 1331, 1332, 1337, 1348, 1352, 1354, 1359, 1368, 1371, 1376, 1377, 1379, 1382, 1383, 1389, 1403, 1415, 1440, 1441, 1443, 1449, 1452, 1453, 1460, 1462, 1468, 1471, 1474, 1475, 1480], "difficult": [1346, 1351, 1354, 1364, 1369, 1370, 1377, 1444, 1445, 1448, 1450, 1451, 1456, 1462, 1475, 1484, 1490, 1494], "diffrax": 1383, "dig": 1475, "digamma": [1158, 1448], "digest": 1458, "digit": [604, 701, 1349, 1485], "digraph": 1456, "dilat": [343, 344, 345, 346, 347, 423, 449, 1354], "dilogarithm": 1161, "dim": [501, 544, 619, 902, 906, 1354, 1378, 1471, 1492], "dim1": 1371, "dim_args_spec": 1371, "dim_var_valu": 1390, "dimens": [38, 74, 139, 150, 168, 205, 206, 209, 211, 216, 219, 222, 223, 226, 239, 241, 245, 249, 254, 255, 283, 284, 291, 292, 301, 303, 304, 305, 306, 311, 313, 322, 324, 325, 326, 327, 329, 330, 335, 336, 338, 343, 344, 345, 346, 347, 359, 360, 363, 364, 365, 366, 367, 368, 374, 381, 382, 383, 392, 414, 418, 419, 421, 423, 430, 436, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 463, 464, 467, 468, 469, 474, 475, 476, 477, 480, 482, 501, 508, 512, 520, 521, 522, 523, 524, 525, 531, 537, 538, 540, 543, 549, 569, 570, 580, 581, 584, 586, 599, 600, 601, 614, 619, 625, 627, 632, 644, 646, 656, 657, 664, 667, 677, 680, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 706, 707, 723, 733, 739, 740, 742, 744, 747, 751, 753, 776, 779, 799, 800, 805, 816, 817, 818, 832, 833, 834, 835, 836, 842, 849, 850, 853, 856, 857, 859, 860, 862, 865, 876, 877, 879, 880, 884, 890, 898, 901, 902, 906, 911, 944, 946, 951, 955, 956, 959, 976, 987, 989, 990, 991, 993, 1002, 1016, 1018, 1028, 1034, 1045, 1047, 1061, 1072, 1074, 1077, 1102, 1111, 1118, 1119, 1151, 1154, 1160, 1245, 1266, 1284, 1333, 1342, 1348, 1351, 1354, 1361, 1369, 1371, 1372, 1378, 1382, 1385, 1390, 1402, 1411, 1415, 1424, 1427, 1431, 1434, 1440, 1445, 1448, 1452, 1454, 1455, 1462, 1464, 1468, 1470, 1471, 1472, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1500, 1501, 1503], "dimension": [26, 42, 230, 234, 237, 341, 343, 344, 345, 346, 347, 357, 362, 363, 364, 365, 366, 367, 387, 423, 449, 473, 474, 486, 571, 583, 584, 599, 600, 604, 614, 625, 626, 628, 629, 632, 633, 634, 637, 640, 641, 645, 646, 648, 649, 650, 651, 657, 658, 659, 660, 664, 669, 679, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 703, 708, 709, 710, 731, 733, 739, 740, 741, 742, 743, 753, 754, 755, 756, 757, 758, 761, 769, 776, 778, 779, 787, 790, 799, 804, 805, 806, 810, 813, 818, 819, 831, 833, 840, 841, 851, 852, 857, 859, 868, 872, 876, 877, 879, 899, 901, 902, 905, 906, 910, 924, 938, 939, 941, 950, 951, 954, 957, 971, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 988, 989, 991, 1018, 1070, 1072, 1074, 1076, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1112, 1194, 1195, 1245, 1266, 1351, 1354, 1378, 1379, 1402, 1444, 1448, 1455, 1460, 1465, 1472, 1474, 1485, 1487, 1489, 1500], "dimension_as_valu": 1354, "dimension_numb": [207, 208, 212, 224, 342, 343, 344, 345, 346, 360, 361, 381, 459, 460, 461, 462, 463, 464, 543, 1354, 1382, 1397, 1466, 1468, 1469, 1475], "dimension_semant": [150, 1483, 1489, 1490, 1492, 1493], "dimensionsemant": 150, "dims_compl": 1348, "dims_in": 1348, "dimsiz": [249, 255, 572, 618, 680, 747, 911, 955, 961, 965, 1354], "dir": [1366, 1378, 1387], "dirac": 1051, "direct": [119, 239, 240, 421, 454, 493, 501, 570, 582, 619, 670, 787, 797, 809, 867, 902, 919, 1078, 1085, 1089, 1091, 1106, 1107, 1108, 1109, 1112, 1285, 1286, 1287, 1342, 1344, 1348, 1350, 1354, 1366, 1377, 1390, 1415, 1445, 1454, 1456, 1463, 1467, 1474, 1480, 1484, 1491, 1504], "direct_transl": 1348, "directli": [0, 69, 80, 84, 113, 286, 298, 299, 300, 301, 309, 310, 312, 313, 314, 321, 322, 323, 324, 325, 331, 332, 334, 336, 346, 348, 349, 350, 356, 359, 360, 361, 368, 372, 375, 377, 381, 382, 383, 386, 391, 392, 397, 402, 411, 412, 414, 416, 417, 418, 419, 420, 421, 429, 430, 439, 451, 456, 457, 459, 460, 467, 468, 469, 470, 471, 472, 478, 482, 484, 485, 570, 572, 582, 583, 750, 801, 868, 878, 921, 991, 1063, 1135, 1148, 1304, 1312, 1342, 1344, 1346, 1348, 1353, 1354, 1356, 1363, 1366, 1369, 1370, 1371, 1377, 1378, 1381, 1382, 1384, 1390, 1414, 1424, 1441, 1444, 1448, 1452, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1467, 1468, 1472, 1475, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1493, 1496, 1502, 1503], "directori": [150, 1013, 1015, 1356, 1357, 1366, 1371, 1378, 1381, 1400, 1484, 1496], "dirichlet": 1354, "disabl": [10, 65, 66, 68, 97, 128, 129, 248, 864, 1342, 1354, 1360, 1362, 1366, 1370, 1371, 1380, 1381, 1384, 1385, 1390, 1415, 1444, 1447, 1467, 1474, 1484, 1493, 1495, 1496, 1499, 1505], "disable_jit": 1445, "disable_omnistag": 1454, "disable_x64": [129, 1354], "disabled_check": [248, 1354, 1371], "disabled_safety_check": 1415, "disabledsafetycheck": [248, 1354, 1371, 1415], "disadvantag": [1385, 1456], "disagre": [1377, 1447, 1470], "disallow": [556, 922, 923, 1344, 1354, 1371, 1455, 1504], "disallow_explicit": [1356, 1504], "disappear": [1356, 1498], "disastr": 1359, "discard": [359, 557, 910, 1342, 1348, 1364, 1378, 1382, 1387, 1424, 1456, 1467, 1468, 1485, 1498, 1503], "discharg": [1348, 1361], "disconnect": 1442, "discont": 985, "discontinu": [985, 1377], "discourag": [454, 455, 1444], "discov": [98, 1341, 1461, 1495], "discover": [1377, 1448, 1458], "discrep": 1103, "discret": [682, 683, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 1071, 1072, 1073, 1074, 1402, 1448], "discuss": [339, 481, 584, 670, 703, 897, 900, 950, 951, 1065, 1341, 1349, 1351, 1352, 1354, 1357, 1366, 1370, 1371, 1374, 1377, 1378, 1379, 1382, 1389, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1456, 1458, 1459, 1462, 1464, 1468, 1475, 1477, 1480, 1484, 1485, 1487, 1490, 1492, 1498, 1502, 1503], "disequ": 1374, "disjoint": [1461, 1480, 1488, 1490], "disk": [531, 985, 1367, 1376, 1377, 1400, 1495], "disp": 1086, "dispatch": [723, 1346, 1349, 1354, 1367, 1377, 1378, 1440, 1442, 1445, 1454, 1459, 1460, 1475, 1477, 1490, 1492, 1496], "displai": [1086, 1380, 1456, 1500], "disrupt": 1361, "dissect": 1488, "dist": [305, 306, 1070, 1346, 1366, 1387], "distanc": [306, 701, 1070, 1448], "distil": [1441, 1447], "distinct": [343, 344, 776, 877, 1002, 1346, 1348, 1363, 1374, 1456, 1460, 1471, 1480, 1484, 1492], "distinguish": [291, 1348, 1349, 1376, 1434, 1455, 1488, 1504], "distrax": 1383, "distribut": [136, 305, 306, 454, 455, 489, 501, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 640, 645, 1019, 1020, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1048, 1050, 1051, 1053, 1055, 1056, 1059, 1060, 1122, 1123, 1124, 1137, 1138, 1148, 1155, 1156, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1338, 1341, 1343, 1345, 1354, 1367, 1378, 1381, 1388, 1434, 1440, 1446, 1448, 1451, 1457, 1461, 1465, 1471, 1472, 1473, 1474, 1475, 1484, 1486, 1487, 1491, 1498, 1500, 1503], "distributed_arrays_and_automatic_parallel": 1431, "div": [120, 1342, 1459, 1462, 1463], "div_check": 120, "div_p": 1462, "dive": [1442, 1456, 1471, 1488, 1490, 1494], "diverg": [1135, 1147, 1424, 1448, 1489], "divers": 1480, "divid": [10, 136, 304, 337, 359, 436, 508, 590, 666, 715, 743, 864, 941, 992, 1033, 1115, 1342, 1354, 1361, 1377, 1445, 1462, 1463, 1474, 1483, 1484, 1485, 1487, 1488, 1492, 1503], "dividend": [451, 663, 715, 718, 886, 909, 967], "divis": [120, 359, 415, 436, 451, 512, 554, 663, 715, 718, 884, 886, 889, 890, 909, 967, 1354, 1361, 1371, 1374, 1440, 1447, 1462, 1474, 1478, 1484, 1485, 1489, 1494], "divisionbyzeroerror": [116, 117, 121, 122], "divisor": [451, 663, 715, 718, 729, 782, 860, 862, 886, 909, 946, 967, 987], "divmod": [718, 845, 909, 1474], "djv_dz": 1376, "dl": [410, 1503], "dlerror": 1496, "dlopen": 397, "dlpack": [586, 592, 720, 1345, 1354, 1388], "dlpackmanagedtensortobuff": 1354, "dm": 1448, "dma": [1479, 1489], "dma_descriptor": 1490, "dn": [955, 1469], "do": [69, 71, 72, 98, 113, 150, 160, 167, 174, 198, 216, 239, 253, 381, 430, 459, 460, 495, 503, 544, 625, 637, 641, 701, 750, 799, 833, 921, 985, 998, 999, 1000, 1001, 1106, 1107, 1108, 1109, 1112, 1116, 1117, 1118, 1285, 1286, 1287, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1366, 1369, 1370, 1371, 1374, 1376, 1378, 1380, 1381, 1382, 1384, 1385, 1387, 1390, 1396, 1397, 1400, 1414, 1415, 1431, 1439, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1472, 1474, 1475, 1478, 1480, 1481, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1502, 1503, 1505, 1506], "do_wgmma": 1483, "doc": [13, 84, 184, 245, 248, 254, 255, 288, 343, 572, 1283, 1288, 1312, 1333, 1345, 1354, 1356, 1359, 1366, 1374, 1378, 1390, 1407, 1415, 1431, 1439, 1440, 1444, 1445, 1447, 1449, 1453, 1454, 1456, 1458, 1459, 1461, 1462, 1470, 1471, 1474, 1475, 1484, 1496, 1500, 1501], "docker": 1387, "docstr": [91, 139, 344, 345, 378, 503, 994, 1333, 1348, 1354, 1356, 1366, 1371, 1386, 1390, 1415], "doctest": 1374, "doctre": 1366, "document": [3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 73, 74, 140, 145, 185, 186, 188, 189, 190, 191, 192, 248, 254, 255, 283, 303, 304, 360, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 590, 666, 670, 732, 743, 793, 895, 926, 992, 994, 1011, 1095, 1103, 1119, 1265, 1335, 1336, 1338, 1339, 1344, 1345, 1350, 1352, 1354, 1356, 1357, 1358, 1367, 1369, 1370, 1372, 1373, 1374, 1377, 1378, 1381, 1384, 1386, 1387, 1390, 1407, 1415, 1424, 1428, 1434, 1441, 1443, 1447, 1448, 1449, 1450, 1452, 1456, 1458, 1459, 1462, 1466, 1469, 1475, 1478, 1480, 1483, 1484, 1485, 1486, 1487, 1491, 1496, 1497, 1498, 1503, 1505, 1507], "docutil": 1366, "doe": [18, 71, 84, 98, 99, 132, 148, 170, 178, 222, 252, 253, 291, 381, 422, 431, 432, 433, 447, 448, 459, 460, 461, 462, 463, 464, 505, 506, 529, 578, 590, 620, 632, 654, 666, 679, 743, 776, 783, 848, 868, 891, 905, 911, 922, 941, 944, 985, 988, 991, 992, 1017, 1083, 1086, 1093, 1100, 1105, 1118, 1134, 1136, 1139, 1165, 1285, 1286, 1287, 1308, 1342, 1344, 1347, 1348, 1350, 1351, 1354, 1356, 1359, 1363, 1366, 1367, 1370, 1371, 1374, 1376, 1377, 1385, 1387, 1390, 1402, 1403, 1414, 1415, 1424, 1431, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1451, 1452, 1456, 1459, 1460, 1461, 1462, 1466, 1467, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1494, 1498, 1501, 1503, 1506], "doesn": [67, 68, 83, 131, 132, 337, 677, 834, 846, 905, 911, 917, 944, 949, 957, 1002, 1013, 1015, 1342, 1346, 1348, 1349, 1354, 1359, 1361, 1363, 1369, 1378, 1381, 1382, 1424, 1440, 1445, 1446, 1447, 1449, 1451, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1473, 1474, 1476, 1480, 1481, 1488, 1495, 1498, 1501, 1506], "doi": [239, 701], "dollar": 1503, "domain": [881, 1020, 1021, 1024, 1025, 1030, 1031, 1033, 1034, 1035, 1042, 1043, 1046, 1048, 1051, 1053, 1056, 1057, 1059, 1060, 1135, 1281, 1282, 1341, 1342, 1352, 1379, 1448, 1467, 1480, 1489, 1507], "domin": [1367, 1487], "don": [74, 132, 150, 239, 1308, 1310, 1342, 1348, 1349, 1357, 1359, 1360, 1361, 1363, 1366, 1369, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1440, 1442, 1447, 1448, 1449, 1451, 1459, 1461, 1462, 1463, 1465, 1467, 1468, 1470, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1488, 1492, 1494, 1495, 1501, 1502, 1506], "donat": [95, 296, 638, 1002, 1346, 1354, 1411], "donate_argnam": [296, 1354, 1411], "donate_argnum": [296, 638, 1002, 1354, 1377, 1411, 1471], "done": [150, 223, 397, 404, 529, 620, 794, 796, 803, 957, 1156, 1341, 1348, 1349, 1351, 1354, 1368, 1371, 1377, 1378, 1380, 1384, 1387, 1402, 1442, 1444, 1457, 1460, 1461, 1470, 1475, 1479, 1480, 1483, 1490, 1493, 1495, 1496, 1497, 1501, 1505, 1506], "dot": [91, 113, 305, 306, 361, 506, 508, 511, 543, 670, 753, 799, 813, 817, 833, 954, 988, 989, 1002, 1008, 1009, 1333, 1342, 1347, 1350, 1351, 1354, 1363, 1382, 1414, 1424, 1441, 1443, 1445, 1464, 1465, 1466, 1467, 1468, 1473, 1474, 1475, 1476, 1478, 1480, 1489, 1492, 1494], "dot_dict": 1503, "dot_gener": [360, 543, 664, 670, 813, 833, 954, 988, 989, 991, 1354, 1374, 1381, 1382, 1424, 1466, 1468, 1475, 1489, 1492], "dot_general_p": 1414, "dot_product": [305, 506], "dot_product_attent": 1503, "dot_with_no_batch_dim": 1468, "dotalgorithm": [360, 664, 670, 753, 833, 954, 988, 989, 1424], "dotalgorithmpreset": [91, 360, 664, 670, 753, 833, 954, 988, 989, 1356, 1424, 1478], "dotdimensionnumb": [207, 208, 224, 360, 361, 543], "dotgener": 360, "dots_sav": [1382, 1468], "dots_with_no_batch_dims_sav": [1382, 1468], "doubl": [502, 913, 1019, 1023, 1026, 1029, 1036, 1141, 1142, 1148, 1342, 1354, 1369, 1377, 1471, 1479, 1483], "double_barri": 1490, "double_buffered_pipelin": 1487, "double_out": 1440, "doubli": 614, "doubly_norm": 1002, "doubt": [1344, 1377, 1498], "dougalm": [1447, 1449], "down": [98, 99, 288, 623, 702, 705, 715, 919, 968, 1002, 1023, 1026, 1342, 1348, 1349, 1363, 1367, 1369, 1370, 1371, 1378, 1385, 1442, 1444, 1455, 1461, 1463, 1467, 1480, 1483, 1489, 1492, 1496, 1500], "downcast": [913, 1424, 1492], "download": [1354, 1366, 1378, 1465], "downsampl": [291, 292], "downsid": [1448, 1456, 1479, 1487], "downstream": [1345, 1354, 1447, 1452, 1455, 1459, 1484, 1497], "downward": [714, 920, 1377], "dozen": [1354, 1502], "dp": 1474, "dr": 1382, "draft": [1335, 1336, 1338, 1339, 1340, 1348], "drag": 1496, "drain": 1487, "dram": [1487, 1488, 1493], "dramat": [1116, 1117, 1118, 1385, 1454], "drastic": [1377, 1503], "draw": [1036, 1356, 1447, 1451, 1456, 1475, 1498], "draw_sampl": 1451, "drawback": [1385, 1455, 1484, 1503], "drawn": [531, 640, 645, 994, 1026], "driven": [1366, 1448], "driver": [1101, 1354, 1384], "drop": [10, 82, 220, 296, 381, 459, 460, 461, 462, 463, 464, 604, 864, 998, 999, 1000, 1001, 1350, 1354, 1365, 1371, 1384, 1411, 1415, 1444, 1445, 1451, 1454, 1456, 1457, 1467, 1470, 1475, 1484], "drop_field": 1307, "dropdown": 1496, "dropout": [1397, 1451], "dsd": 1494, "dsd_kernel": 1494, "dso_load": 1496, "dsplit": [590, 743, 941, 992], "dst": [166, 167, 1348, 1474], "dst_ref": 1490, "dstack": [614, 627, 744, 945, 993], "dt": [1135, 1155, 1161, 1455], "dtdloss_dtheta": 1342, "dtype": [9, 10, 19, 20, 35, 40, 53, 54, 58, 60, 61, 63, 67, 72, 74, 75, 77, 78, 80, 83, 94, 97, 101, 113, 128, 129, 130, 159, 178, 179, 194, 199, 211, 226, 228, 229, 230, 232, 233, 234, 236, 237, 239, 240, 241, 242, 244, 248, 254, 280, 283, 288, 289, 290, 295, 296, 298, 299, 300, 301, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 330, 331, 332, 334, 336, 337, 340, 345, 348, 349, 350, 359, 360, 362, 363, 364, 365, 366, 367, 368, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 386, 387, 389, 390, 391, 392, 395, 398, 401, 408, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 429, 430, 432, 435, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 481, 482, 484, 485, 486, 488, 494, 495, 500, 502, 503, 508, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 540, 541, 544, 557, 559, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 592, 595, 599, 600, 601, 602, 604, 605, 606, 610, 612, 614, 616, 618, 619, 620, 621, 623, 625, 626, 627, 632, 633, 634, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 731, 734, 735, 738, 739, 740, 741, 742, 744, 745, 746, 747, 749, 751, 753, 754, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 866, 867, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 924, 925, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 993, 994, 995, 996, 998, 999, 1000, 1001, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1064, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1119, 1120, 1135, 1148, 1155, 1156, 1161, 1245, 1265, 1266, 1304, 1307, 1308, 1309, 1312, 1330, 1331, 1333, 1342, 1344, 1346, 1347, 1348, 1350, 1351, 1354, 1359, 1360, 1363, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1385, 1388, 1390, 1402, 1411, 1414, 1424, 1427, 1428, 1431, 1439, 1444, 1446, 1447, 1452, 1456, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1492, 1493, 1494, 1497, 1498, 1499, 1500, 1503, 1506], "dtype1": 1456, "dtype2": 1456, "dtype_to_etyp": 1354, "dtypelik": [9, 19, 20, 23, 35, 40, 53, 54, 58, 60, 61, 101, 105, 211, 226, 228, 232, 236, 237, 307, 308, 321, 330, 341, 343, 346, 347, 348, 360, 361, 379, 380, 390, 500, 502, 543, 544, 572, 595, 634, 637, 641, 648, 649, 650, 651, 667, 680, 684, 698, 721, 723, 726, 744, 747, 751, 767, 777, 799, 813, 816, 817, 838, 851, 852, 854, 858, 860, 861, 862, 896, 897, 945, 946, 948, 956, 959, 987, 993, 1354, 1424, 1439, 1444], "dtypelikefloat": [1018, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1031, 1033, 1034, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1053, 1055, 1056, 1057, 1058, 1059, 1060], "dtypelikeinexact": [518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "dtypelikeint": [1035, 1050, 1051, 1052], "dtypelikeuint": 1022, "du": 410, "dual": [1349, 1447], "dual_numb": 1349, "dual_number_in": 1349, "dual_number_out": 1349, "dualnumb": 1349, "duchi11a": 1396, "duck": [113, 494, 1348, 1374, 1472, 1475], "ducktypedarrai": [380, 673, 728, 874, 996], "due": [10, 572, 864, 866, 886, 889, 1052, 1105, 1348, 1350, 1354, 1365, 1377, 1380, 1384, 1415, 1444, 1445, 1448, 1449, 1452, 1454, 1459, 1460, 1462, 1471, 1475, 1480, 1483, 1484, 1485, 1489, 1490, 1494, 1501], "dummi": [1371, 1381, 1442], "dummy_data": 1381, "dummy_slic": 1381, "dummy_slice_fwd": 1381, "dump": [1013, 1015, 1354, 1371, 1374, 1484, 1496, 1501], "dump_dir": 1381, "duplic": [82, 199, 205, 210, 220, 461, 654, 762, 787, 927, 928, 998, 999, 1000, 1001, 1376, 1496], "durat": [1007, 1008, 1495], "duration_in_m": 1496, "dure": [69, 118, 166, 252, 253, 380, 424, 441, 481, 1118, 1308, 1310, 1342, 1344, 1348, 1354, 1356, 1361, 1363, 1366, 1368, 1370, 1371, 1374, 1376, 1377, 1381, 1382, 1385, 1390, 1411, 1441, 1442, 1443, 1444, 1449, 1452, 1454, 1457, 1459, 1462, 1463, 1470, 1471, 1484, 1487, 1489, 1494, 1495, 1497, 1500, 1501, 1503, 1504, 1505, 1506], "dw": [1464, 1465, 1473], "dx": [739, 740, 742, 934, 958, 1075], "dy": [740, 742], "dynam": [97, 113, 141, 209, 285, 362, 363, 364, 365, 403, 458, 723, 868, 927, 975, 976, 1094, 1307, 1342, 1353, 1354, 1359, 1360, 1363, 1370, 1377, 1402, 1441, 1444, 1448, 1449, 1454, 1455, 1467, 1480, 1491, 1496, 1497, 1503], "dynamax": 1353, "dynamic_block_example_kernel": 1493, "dynamic_index_in_dim": [363, 364, 365, 387, 1445], "dynamic_shap": 403, "dynamic_slic": [209, 362, 364, 473, 1354, 1381, 1480, 1494], "dynamic_slice_in_dim": [362, 363, 367, 474, 1474], "dynamic_slice_kernel": 1494, "dynamic_slice_p": 1414, "dynamic_trac": 1348, "dynamic_update_index_in_dim": [366, 367], "dynamic_update_slic": [365, 367, 1354, 1381], "dynamic_update_slice_in_dim": 366, "dynamicjaxprtrac": [1348, 1374, 1377, 1454], "dynamicslic": 363, "dynamicupdateslic": 366, "dz": 742, "e": [10, 29, 62, 67, 68, 69, 75, 77, 80, 82, 84, 90, 95, 96, 98, 112, 113, 131, 132, 135, 136, 137, 139, 141, 150, 161, 178, 223, 236, 237, 245, 286, 288, 289, 290, 292, 303, 304, 311, 318, 319, 335, 343, 345, 348, 356, 372, 373, 375, 378, 409, 411, 412, 413, 421, 423, 424, 425, 426, 427, 435, 437, 456, 458, 470, 494, 495, 500, 503, 508, 535, 545, 546, 547, 550, 555, 583, 584, 589, 590, 591, 602, 625, 627, 640, 643, 645, 666, 667, 675, 676, 677, 701, 719, 743, 744, 761, 771, 776, 777, 783, 789, 805, 808, 811, 823, 864, 877, 915, 923, 927, 931, 936, 938, 941, 945, 950, 951, 953, 957, 991, 992, 993, 1002, 1016, 1017, 1025, 1026, 1029, 1030, 1033, 1034, 1036, 1037, 1039, 1041, 1043, 1045, 1046, 1050, 1057, 1083, 1084, 1085, 1090, 1095, 1097, 1101, 1127, 1128, 1130, 1131, 1132, 1133, 1136, 1137, 1138, 1144, 1146, 1148, 1155, 1165, 1190, 1192, 1198, 1200, 1205, 1207, 1237, 1238, 1241, 1242, 1255, 1257, 1263, 1264, 1271, 1273, 1279, 1280, 1291, 1304, 1327, 1333, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1354, 1355, 1356, 1357, 1360, 1361, 1362, 1363, 1364, 1366, 1368, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1382, 1385, 1390, 1396, 1403, 1411, 1414, 1415, 1424, 1427, 1431, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1472, 1474, 1475, 1476, 1479, 1480, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1492, 1493, 1494, 1496, 1497, 1501, 1504, 1505, 1506], "e1": [245, 255], "e2": [245, 255], "e48aedf368ad": 1468, "e4m3": 1354, "e5m2": 1354, "e_1": 1130, "e_n": 1133, "each": [71, 73, 76, 78, 80, 83, 91, 96, 98, 126, 131, 134, 136, 137, 139, 143, 150, 166, 170, 178, 180, 183, 194, 198, 205, 211, 217, 226, 248, 257, 277, 281, 282, 283, 284, 290, 292, 301, 303, 304, 311, 313, 322, 323, 324, 325, 327, 334, 343, 344, 345, 346, 347, 359, 363, 366, 381, 398, 399, 415, 418, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 442, 443, 444, 445, 447, 448, 449, 450, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 482, 499, 500, 501, 502, 505, 506, 508, 531, 540, 559, 567, 573, 574, 575, 576, 577, 579, 604, 606, 625, 627, 628, 629, 633, 634, 639, 640, 642, 643, 645, 656, 667, 675, 676, 678, 683, 689, 694, 695, 697, 699, 703, 708, 709, 710, 712, 715, 716, 717, 723, 733, 739, 740, 742, 744, 747, 753, 755, 756, 757, 758, 762, 768, 769, 770, 771, 772, 773, 779, 781, 784, 804, 809, 821, 822, 823, 824, 837, 840, 843, 868, 877, 881, 906, 908, 910, 914, 916, 923, 925, 933, 936, 940, 945, 952, 953, 955, 961, 962, 965, 966, 969, 971, 972, 973, 974, 976, 977, 978, 979, 993, 998, 999, 1000, 1001, 1002, 1007, 1010, 1016, 1026, 1044, 1049, 1051, 1070, 1090, 1105, 1110, 1113, 1114, 1115, 1118, 1245, 1283, 1284, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1310, 1332, 1333, 1342, 1344, 1348, 1349, 1351, 1353, 1354, 1356, 1359, 1365, 1366, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1385, 1387, 1390, 1395, 1396, 1397, 1402, 1403, 1411, 1415, 1424, 1434, 1440, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1450, 1452, 1455, 1456, 1457, 1459, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1503, 1505, 1506], "eafp": 1444, "eager": [97, 112, 126, 670, 671, 1359, 1443, 1445, 1449, 1471], "eager_constant_fold": 1356, "eagerli": [112, 1349, 1359, 1361, 1362, 1377, 1442, 1445, 1447, 1449, 1474], "earli": [83, 239, 1118, 1354, 1448, 1450, 1458, 1487], "earlier": [283, 286, 424, 1349, 1354, 1369, 1376, 1378, 1387, 1441, 1471, 1479, 1480, 1493, 1503], "earliest": [1349, 1371], "eas": [985, 1354, 1383, 1444], "easi": [1342, 1349, 1350, 1353, 1362, 1385, 1445, 1447, 1451, 1453, 1455, 1457, 1464, 1466, 1467, 1470, 1475, 1479, 1480, 1488, 1489, 1494, 1503], "easier": [67, 337, 1342, 1346, 1354, 1366, 1369, 1370, 1445, 1446, 1447, 1449, 1456, 1457, 1461, 1474, 1476, 1480, 1484, 1489, 1490, 1492, 1506], "easiest": [1352, 1357, 1366, 1377, 1390, 1440, 1452, 1454, 1456, 1461, 1500, 1501], "easili": [1354, 1360, 1362, 1366, 1369, 1370, 1378, 1384, 1387, 1435, 1441, 1448, 1449, 1451, 1464, 1480, 1503], "easylm": 1383, "echo": [1354, 1366, 1387, 1461, 1496], "econom": [1095, 1348, 1354], "ecosystem": [1341, 1357, 1448, 1475, 1502], "ed": [1016, 1333, 1342, 1363, 1463, 1480, 1506], "edg": [637, 641, 661, 739, 740, 741, 742, 877, 1106, 1107, 1108, 1109, 1112, 1341, 1342, 1378, 1381, 1384, 1443, 1447, 1466, 1467, 1469, 1479, 1486, 1490, 1501], "edge_ord": 733, "ediff1d": 660, "edit": [1354, 1357, 1382, 1468, 1474], "editor": [1357, 1366], "edu": 239, "educ": [1479, 1490], "effect": [82, 90, 94, 97, 118, 119, 165, 170, 257, 258, 283, 291, 292, 296, 387, 408, 422, 474, 481, 679, 692, 696, 697, 699, 722, 724, 851, 852, 922, 1016, 1116, 1117, 1118, 1271, 1273, 1304, 1342, 1346, 1348, 1354, 1356, 1359, 1361, 1363, 1369, 1370, 1371, 1374, 1376, 1377, 1379, 1381, 1390, 1400, 1411, 1415, 1424, 1438, 1443, 1444, 1445, 1449, 1452, 1455, 1456, 1457, 1458, 1459, 1462, 1463, 1471, 1475, 1479, 1484, 1490, 1492, 1498, 1502, 1507], "effects_barri": [1363, 1442], "effectul": 1442, "effici": [10, 130, 337, 415, 436, 481, 495, 504, 582, 762, 769, 798, 804, 807, 811, 864, 878, 925, 927, 928, 950, 991, 1064, 1086, 1342, 1346, 1350, 1351, 1354, 1369, 1377, 1378, 1381, 1383, 1396, 1431, 1440, 1445, 1448, 1451, 1458, 1459, 1460, 1461, 1463, 1467, 1474, 1475, 1480, 1483, 1484, 1490, 1492, 1498, 1507], "effort": [95, 1345, 1354, 1377, 1444, 1458], "eg": [118, 120, 1361, 1495], "eig": [404, 794, 795, 796, 1082, 1354, 1356], "eigen": 1354, "eigendecomposit": [397, 398, 793, 794, 795, 1354], "eigenpair": 239, "eigenvalu": [239, 397, 398, 793, 794, 795, 796, 1082, 1083, 1086, 1094, 1097, 1354], "eigenvector": [239, 397, 398, 793, 794, 795, 796, 1082, 1083], "eigh": [239, 793, 795, 796, 1045, 1083, 1354], "eigh_tridiagon": [1082, 1354], "eighresult": 794, "eight": [1461, 1474, 1495, 1503], "eigval": [793, 1082, 1083, 1354], "eigvals_ful": 1083, "eigvals_onli": [1082, 1083], "eigvalsh": 794, "eigvec": 1082, "einop": 1402, "einstein": [670, 875, 1414], "einsum": [360, 544, 671, 813, 875, 954, 1354, 1382, 1402, 1445, 1501, 1503], "einsum_path": 670, "either": [100, 120, 132, 141, 150, 178, 207, 224, 255, 291, 292, 296, 297, 339, 341, 343, 344, 345, 346, 347, 378, 395, 408, 415, 432, 441, 466, 501, 536, 538, 549, 570, 625, 664, 670, 674, 712, 716, 717, 718, 720, 721, 730, 734, 735, 738, 745, 753, 768, 771, 772, 773, 784, 785, 786, 799, 804, 813, 817, 826, 833, 836, 837, 842, 843, 853, 856, 867, 868, 869, 881, 894, 909, 923, 941, 950, 951, 954, 988, 989, 994, 1002, 1076, 1094, 1148, 1151, 1209, 1333, 1346, 1347, 1348, 1349, 1354, 1366, 1369, 1370, 1371, 1376, 1377, 1378, 1380, 1385, 1390, 1402, 1403, 1411, 1424, 1434, 1441, 1444, 1447, 1451, 1454, 1460, 1461, 1465, 1472, 1473, 1474, 1480, 1484, 1487, 1490, 1493, 1501, 1505], "elabor": 1386, "elapsed_sec": 268, "elbo_v": 1476, "elbo_val_and_grad": 1476, "elem": 311, "elem_indic": 1485, "element": [3, 4, 11, 31, 32, 34, 35, 36, 37, 39, 40, 44, 46, 50, 54, 56, 73, 75, 77, 80, 116, 117, 120, 121, 122, 123, 124, 125, 139, 194, 211, 213, 214, 215, 220, 226, 241, 248, 263, 277, 281, 282, 283, 288, 289, 290, 291, 293, 295, 297, 299, 300, 307, 308, 309, 310, 311, 312, 313, 314, 334, 335, 343, 344, 345, 349, 350, 360, 372, 373, 375, 381, 397, 399, 401, 409, 411, 412, 413, 415, 420, 429, 442, 443, 444, 445, 447, 448, 450, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 484, 485, 486, 495, 503, 507, 508, 509, 510, 513, 514, 515, 516, 533, 535, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 553, 554, 555, 559, 562, 563, 564, 567, 568, 573, 574, 575, 576, 577, 579, 584, 587, 588, 605, 606, 610, 612, 621, 626, 636, 639, 642, 643, 644, 648, 649, 655, 658, 660, 663, 664, 668, 669, 671, 674, 675, 676, 678, 679, 681, 703, 705, 706, 707, 712, 715, 716, 717, 718, 721, 723, 729, 734, 735, 745, 749, 762, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 781, 782, 783, 784, 785, 786, 787, 821, 822, 823, 824, 826, 827, 828, 829, 830, 836, 837, 838, 839, 842, 843, 845, 847, 851, 852, 853, 854, 855, 856, 858, 860, 861, 862, 866, 867, 868, 869, 877, 882, 888, 892, 894, 896, 898, 899, 900, 907, 908, 909, 910, 912, 914, 915, 916, 927, 928, 930, 931, 933, 936, 937, 942, 943, 946, 947, 948, 950, 951, 952, 953, 955, 956, 959, 960, 962, 964, 966, 967, 969, 975, 976, 977, 978, 979, 980, 987, 994, 1016, 1026, 1028, 1049, 1051, 1064, 1067, 1083, 1093, 1099, 1105, 1135, 1149, 1151, 1152, 1153, 1160, 1161, 1291, 1292, 1298, 1305, 1331, 1332, 1333, 1342, 1344, 1348, 1354, 1359, 1361, 1377, 1378, 1390, 1411, 1414, 1424, 1431, 1434, 1441, 1451, 1455, 1456, 1462, 1463, 1467, 1475, 1478, 1480, 1484, 1487, 1488, 1489, 1490, 1493, 1494, 1497, 1500, 1503, 1506], "element_count": 1378, "element_s": 1492, "element_typ": 1378, "elementari": [399, 400, 409], "elementwis": [67, 184, 194, 298, 299, 300, 301, 309, 310, 311, 312, 313, 314, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 336, 340, 348, 349, 350, 358, 359, 368, 369, 370, 371, 372, 373, 375, 377, 382, 383, 384, 385, 386, 389, 391, 392, 393, 411, 412, 413, 414, 416, 417, 418, 419, 420, 428, 429, 430, 439, 440, 451, 456, 457, 467, 468, 469, 470, 471, 472, 478, 479, 482, 484, 485, 491, 578, 605, 610, 612, 827, 829, 830, 967, 1134, 1359, 1397, 1414, 1443, 1460, 1462, 1464, 1470, 1480], "elems_128b": 1483, "elid": [465, 1376, 1377, 1428, 1441, 1498], "elif": [67, 1348, 1382, 1390, 1456, 1468], "elimin": [67, 126, 422, 436, 1349, 1354, 1376, 1454, 1471, 1475], "ellipsi": 1488, "ellipsistyp": 1346, "els": [67, 98, 112, 126, 137, 229, 230, 233, 234, 339, 567, 1002, 1019, 1020, 1023, 1025, 1028, 1031, 1033, 1035, 1040, 1045, 1048, 1050, 1053, 1055, 1056, 1057, 1059, 1085, 1087, 1090, 1307, 1312, 1342, 1348, 1349, 1354, 1359, 1363, 1366, 1370, 1371, 1374, 1377, 1382, 1390, 1441, 1443, 1445, 1447, 1449, 1451, 1452, 1455, 1456, 1457, 1459, 1460, 1462, 1463, 1467, 1468, 1470, 1474, 1475, 1487, 1490, 1492, 1494, 1497, 1506], "else_valu": 1381, "elsewher": [959, 960, 964, 1341, 1445, 1455], "elt": 1346, "eltwise_kernel": 1480, "elu": 545, "emb": [1445, 1480, 1503], "embarrass": 1447, "embarrassingli": 1493, "embed": [1354, 1385, 1480, 1489, 1503], "embed_dim": 1503, "emerg": [1341, 1445, 1494], "emit": [168, 248, 337, 1354, 1356, 1367, 1385, 1480], "emit_pipelin": [1478, 1479, 1483, 1484, 1490], "emit_pipeline_warp_speci": [1483, 1484], "emitt": [1381, 1483, 1487, 1490, 1494], "emphas": [1341, 1378, 1431, 1498], "empir": 1431, "emploi": [529, 1348, 1445, 1449, 1503], "employ": 1357, "empow": 1503, "empti": [116, 117, 121, 122, 123, 124, 125, 263, 288, 458, 466, 502, 673, 727, 873, 874, 877, 995, 1283, 1298, 1303, 1307, 1348, 1354, 1356, 1359, 1371, 1374, 1385, 1474, 1479, 1495], "empty_arrai": 1354, "empty_lik": [672, 728, 996], "empty_ref": 1480, "emul": [1424, 1486, 1489], "en": [13, 245, 248, 254, 255, 288, 357, 572, 701, 1283, 1288, 1333, 1354, 1356, 1359, 1366, 1374, 1390, 1407, 1415, 1431, 1439, 1454, 1456, 1459, 1462, 1474, 1475], "enabl": [65, 66, 80, 82, 83, 98, 110, 111, 120, 128, 129, 132, 198, 239, 348, 397, 458, 493, 1007, 1010, 1016, 1141, 1142, 1283, 1341, 1342, 1346, 1348, 1353, 1354, 1360, 1361, 1362, 1370, 1371, 1374, 1377, 1380, 1381, 1384, 1385, 1391, 1400, 1404, 1414, 1428, 1438, 1444, 1446, 1449, 1451, 1459, 1460, 1461, 1462, 1466, 1471, 1474, 1475, 1479, 1480, 1483, 1484, 1486, 1488, 1489, 1493, 1494, 1495, 1496, 1499, 1500, 1507], "enable_check": 1354, "enable_debug_check": 1478, "enable_march_n": 1354, "enable_pgl": 1381, "enable_runtime_assert": 1478, "enable_x64": [128, 1354, 1376], "enable_xla": 1354, "enablecallback": 1496, "encapsul": [287, 337, 1354, 1370, 1378, 1390, 1441, 1466, 1503], "encapsulateffical": 1378, "enclos": [296, 1007, 1008, 1356, 1385, 1441, 1445], "encod": [140, 431, 432, 433, 434, 540, 1091, 1092, 1348, 1371, 1441, 1445, 1447, 1450, 1456, 1460, 1465, 1473, 1474, 1475, 1497, 1503], "encompass": [304, 437], "encound": 1428, "encount": [69, 506, 654, 868, 927, 975, 976, 985, 1356, 1361, 1370, 1374, 1385, 1390, 1428, 1449, 1452, 1454, 1455, 1462, 1483, 1486, 1487, 1490, 1496, 1501, 1503, 1506], "encourag": [305, 306, 1341, 1350, 1484], "encrypt": 1495, "end": [10, 143, 160, 217, 333, 335, 343, 362, 363, 364, 365, 366, 367, 398, 423, 470, 474, 475, 507, 509, 516, 533, 545, 551, 552, 569, 572, 738, 811, 815, 831, 846, 864, 868, 877, 888, 917, 922, 930, 963, 981, 1013, 1056, 1102, 1114, 1118, 1126, 1140, 1147, 1148, 1155, 1159, 1161, 1167, 1168, 1190, 1192, 1198, 1200, 1260, 1261, 1271, 1273, 1276, 1277, 1342, 1346, 1348, 1349, 1350, 1353, 1354, 1357, 1359, 1367, 1369, 1371, 1376, 1378, 1381, 1382, 1387, 1415, 1441, 1442, 1444, 1445, 1447, 1448, 1450, 1454, 1461, 1462, 1466, 1467, 1468, 1470, 1474, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1496, 1497, 1498, 1503], "end_valu": 877, "endian": [876, 981], "endlessli": 1349, "endpoint": [578, 731, 819, 831, 902, 1354, 1359], "endswith": 1348, "enforc": [81, 82, 84, 422, 432, 433, 1354, 1376, 1455, 1457, 1462, 1472, 1475, 1479, 1490, 1492], "engend": 1348, "engin": [1377, 1379, 1383, 1444, 1451, 1484], "enhanc": [1341, 1358, 1402, 1456, 1477], "enjoi": 1349, "enorm": 1502, "enough": [882, 991, 1354, 1366, 1377, 1378, 1381, 1387, 1414, 1448, 1449, 1451, 1454, 1456, 1470, 1479, 1480, 1487, 1490, 1492, 1493, 1496, 1501, 1503], "enqueu": [1347, 1503], "ensur": [98, 112, 131, 150, 160, 166, 283, 422, 551, 552, 654, 927, 975, 1017, 1285, 1286, 1287, 1342, 1348, 1351, 1354, 1356, 1357, 1363, 1366, 1367, 1374, 1377, 1384, 1411, 1424, 1431, 1442, 1443, 1444, 1445, 1447, 1451, 1452, 1456, 1461, 1467, 1469, 1471, 1473, 1474, 1479, 1483, 1484, 1490, 1495, 1497, 1501, 1503], "ensure_arraylik": 1452, "ensure_compile_time_ev": [67, 1354, 1443], "ensure_typed_key_arrai": 1455, "entail": [83, 1449, 1503], "enter": [81, 506, 1348, 1362, 1449, 1484, 1490, 1496], "entir": [80, 406, 781, 1111, 1342, 1345, 1346, 1348, 1349, 1354, 1366, 1369, 1376, 1377, 1424, 1431, 1434, 1442, 1446, 1449, 1456, 1459, 1461, 1467, 1474, 1478, 1483, 1484, 1489, 1490, 1492, 1494, 1495, 1496, 1497, 1498, 1506], "entireti": 1354, "entr": [1147, 1159], "entri": [139, 199, 228, 232, 240, 301, 322, 323, 324, 325, 359, 380, 418, 442, 443, 444, 445, 447, 448, 450, 459, 460, 465, 467, 468, 469, 482, 486, 504, 582, 604, 625, 632, 640, 645, 654, 658, 679, 686, 691, 700, 703, 754, 762, 767, 787, 788, 848, 868, 878, 881, 882, 899, 900, 910, 925, 927, 928, 940, 975, 976, 977, 978, 979, 980, 982, 1026, 1070, 1342, 1354, 1366, 1378, 1381, 1434, 1446, 1447, 1454, 1456, 1462, 1467, 1474, 1475, 1478, 1480, 1483, 1487, 1489, 1493, 1495, 1497, 1506], "entropi": [1126, 1159, 1498], "entry_comput": 1381, "entry_computation_layout": 1378, "enum": [341, 343, 344, 345, 346, 347, 360, 394, 664, 670, 753, 799, 804, 813, 817, 833, 954, 988, 989, 1349, 1354, 1356, 1424, 1493], "enumer": [625, 1348, 1382, 1456, 1460, 1461, 1468], "env": [1348, 1349, 1354, 1366, 1378, 1390, 1449, 1462, 1465, 1466], "env_options_overrid": 493, "environ": [98, 397, 421, 503, 1003, 1342, 1349, 1354, 1356, 1357, 1362, 1364, 1366, 1368, 1369, 1370, 1371, 1374, 1377, 1378, 1380, 1381, 1384, 1385, 1428, 1431, 1440, 1443, 1449, 1454, 1457, 1461, 1462, 1466, 1474, 1484, 1495, 1496, 1498, 1499, 1501, 1507], "envisag": 1457, "enzym": 1480, "eof": 1461, "ep": [403, 701, 807, 887, 940, 1094, 1285, 1286, 1287, 1349, 1350, 1378, 1396, 1467, 1475, 1503], "epath": 1381, "epilogu": [1483, 1487, 1490], "episode_step": 1506, "epoch": [1465, 1473], "epoch_tim": [1465, 1473], "eps_root": 1503, "epsilon": [239, 554, 1094, 1349, 1378, 1396, 1397, 1476], "epsilon_shap": 1476, "epsneg": 701, "eq": [382, 383, 392, 414, 419], "eqn": [257, 1348, 1349, 1441, 1466], "eqn1": 1348, "eqn2": 1348, "eqn_count_pprof": 1356, "eqn_ctx": 1390, "eqnarrai": 1376, "eqns1": 1348, "eqns2": 1348, "equal": [29, 77, 80, 96, 105, 131, 132, 198, 206, 209, 210, 255, 291, 292, 296, 297, 303, 304, 305, 306, 338, 343, 345, 363, 368, 380, 381, 382, 383, 392, 398, 414, 419, 437, 466, 477, 486, 495, 502, 508, 564, 584, 587, 588, 623, 641, 657, 687, 714, 739, 740, 742, 764, 777, 838, 839, 855, 869, 887, 896, 939, 940, 941, 944, 948, 958, 959, 1002, 1019, 1021, 1023, 1025, 1028, 1031, 1033, 1035, 1040, 1042, 1044, 1048, 1050, 1053, 1055, 1056, 1059, 1061, 1075, 1100, 1102, 1156, 1283, 1285, 1286, 1287, 1332, 1333, 1342, 1348, 1354, 1377, 1378, 1403, 1411, 1424, 1431, 1440, 1445, 1447, 1451, 1457, 1463, 1474, 1484, 1485, 1487, 1489, 1497, 1498, 1506], "equal_nan": [564, 587, 764, 976, 977, 978, 979, 980], "equalstor": 267, "equat": [257, 311, 356, 408, 798, 810, 815, 887, 1078, 1079, 1091, 1092, 1098, 1099, 1100, 1161, 1342, 1348, 1349, 1356, 1441, 1463, 1466, 1467], "equinox": [1354, 1383], "equip": 1506, "equiv": [620, 1460], "equival": [10, 29, 119, 167, 170, 174, 205, 206, 303, 304, 339, 344, 362, 364, 381, 387, 397, 424, 425, 426, 427, 431, 433, 434, 435, 437, 458, 459, 460, 473, 474, 475, 481, 494, 501, 544, 570, 578, 584, 590, 625, 627, 632, 633, 634, 640, 643, 645, 646, 664, 666, 667, 677, 679, 701, 703, 715, 718, 743, 744, 762, 763, 784, 787, 789, 801, 804, 813, 815, 828, 864, 876, 892, 897, 899, 905, 909, 911, 914, 917, 919, 924, 925, 931, 936, 943, 944, 945, 949, 950, 951, 953, 954, 957, 969, 976, 977, 978, 979, 980, 992, 993, 994, 1002, 1033, 1064, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1085, 1342, 1354, 1359, 1363, 1366, 1374, 1396, 1411, 1424, 1428, 1434, 1438, 1444, 1445, 1451, 1452, 1456, 1459, 1460, 1461, 1463, 1467, 1469, 1471, 1474, 1475, 1480, 1484, 1485, 1490, 1497, 1501, 1503, 1505, 1506], "erf": [370, 371, 1128, 1129, 1148, 1155], "erf_inv": 1478, "erfc": [510, 1127, 1129, 1155], "erfinv": [1127, 1128], "ergo": 1489, "ergonom": 1486, "err": [118, 119, 120, 1344, 1360, 1361, 1494], "err1": 1346, "err2": 1346, "err3": 1346, "err4": 1346, "err5": 1346, "err6": 1346, "err_msg": [1286, 1287], "erron": [1141, 1142], "error": [13, 57, 75, 98, 100, 112, 113, 118, 119, 120, 178, 180, 223, 239, 252, 253, 296, 328, 331, 349, 357, 369, 370, 371, 372, 373, 375, 397, 411, 412, 424, 447, 448, 457, 471, 478, 484, 485, 510, 572, 592, 604, 664, 669, 672, 720, 733, 798, 849, 850, 857, 859, 873, 879, 886, 889, 901, 927, 944, 975, 976, 995, 1002, 1016, 1052, 1086, 1111, 1116, 1117, 1118, 1127, 1128, 1129, 1266, 1286, 1287, 1308, 1342, 1344, 1346, 1349, 1351, 1354, 1355, 1359, 1361, 1362, 1363, 1366, 1369, 1371, 1376, 1377, 1378, 1380, 1384, 1390, 1411, 1414, 1415, 1428, 1440, 1444, 1445, 1447, 1449, 1453, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1465, 1467, 1470, 1471, 1472, 1474, 1475, 1476, 1478, 1480, 1484, 1486, 1487, 1489, 1490, 1494, 1496, 1497, 1499, 1501, 1502, 1503, 1506], "error_messag": 1371, "errorcategori": 120, "erroreffect": 114, "escap": [1370, 1445, 1447, 1454, 1480], "escaped_tracer_error": [1354, 1454], "especi": [67, 572, 1135, 1354, 1361, 1377, 1385, 1442, 1443, 1445, 1449, 1454, 1455, 1474, 1484, 1489, 1501], "essenc": [1342, 1441, 1450, 1453, 1463, 1471], "essenti": [84, 436, 543, 564, 584, 764, 1342, 1348, 1350, 1376, 1377, 1444, 1445, 1446, 1447, 1448, 1452, 1460, 1461, 1462, 1463, 1466, 1467, 1471, 1474, 1475, 1484, 1487, 1498, 1502, 1503], "establish": [1381, 1448, 1471, 1496], "estim": [239, 645, 804, 1104, 1110, 1115, 1118, 1209, 1216, 1344, 1353, 1356, 1381, 1396, 1435, 1467, 1476, 1478], "estimate_cost": 1478, "et": [1431, 1503], "etc": [0, 10, 98, 119, 178, 289, 864, 923, 1016, 1312, 1331, 1349, 1354, 1356, 1364, 1370, 1374, 1376, 1377, 1378, 1414, 1429, 1435, 1439, 1444, 1446, 1448, 1449, 1455, 1457, 1462, 1466, 1467, 1470, 1475, 1478, 1480, 1484, 1496, 1501, 1502, 1506], "ethernet": 1461, "etil": [1381, 1495], "euclidean": [1070, 1342, 1467], "eval": [495, 1348, 1354, 1356, 1368, 1449], "eval_atom": 1349, "eval_jaxpr": [1348, 1349, 1466], "eval_jaxpr_transpos": 1348, "eval_shap": 63, "eval_trac": 1460, "evalinterpret": 1349, "evaltrac": [1348, 1354, 1460], "evalu": [3, 4, 67, 75, 112, 113, 120, 289, 290, 293, 295, 297, 305, 306, 422, 436, 465, 481, 494, 495, 563, 564, 568, 671, 733, 761, 764, 766, 775, 801, 804, 881, 883, 885, 887, 888, 891, 918, 934, 976, 1086, 1103, 1104, 1105, 1148, 1158, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1289, 1304, 1331, 1332, 1342, 1347, 1349, 1356, 1359, 1360, 1361, 1363, 1374, 1377, 1382, 1403, 1447, 1449, 1450, 1451, 1460, 1461, 1462, 1463, 1464, 1468, 1473, 1474, 1475, 1498, 1503], "even": [67, 97, 100, 118, 160, 210, 283, 303, 356, 403, 424, 458, 494, 501, 687, 692, 696, 697, 720, 776, 877, 886, 889, 891, 906, 915, 920, 934, 1094, 1114, 1116, 1117, 1285, 1286, 1287, 1341, 1342, 1344, 1346, 1347, 1348, 1354, 1356, 1357, 1359, 1361, 1363, 1366, 1369, 1371, 1374, 1376, 1377, 1378, 1380, 1384, 1424, 1435, 1440, 1441, 1442, 1444, 1445, 1447, 1448, 1449, 1451, 1454, 1457, 1462, 1463, 1464, 1466, 1467, 1470, 1474, 1475, 1479, 1480, 1484, 1487, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1500, 1503, 1506], "evenli": [572, 590, 666, 731, 743, 819, 831, 920, 941, 992, 1445, 1474, 1483, 1485, 1492], "event": [150, 1007, 1008, 1009, 1023, 1356], "event_nam": 1009, "eventu": [1349, 1354, 1442, 1445, 1446, 1460, 1470, 1479, 1489, 1495], "ever": [150, 160, 239, 381, 459, 460, 1342, 1346, 1348, 1354, 1457, 1467, 1484, 1488, 1489], "everi": [67, 87, 88, 210, 434, 502, 925, 950, 951, 976, 1002, 1348, 1356, 1359, 1361, 1366, 1369, 1370, 1377, 1411, 1446, 1447, 1449, 1451, 1452, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1466, 1470, 1480, 1483, 1484, 1489, 1490, 1495, 1497, 1500, 1506], "everyon": [1357, 1479, 1484], "everyth": [67, 1345, 1348, 1351, 1356, 1366, 1382, 1387, 1447, 1451, 1453, 1454, 1461, 1465, 1468, 1473, 1474, 1479, 1496, 1500, 1506], "everything_sav": [1382, 1468], "everywher": [97, 1342, 1361, 1377, 1444, 1451, 1455, 1467], "evict": [1354, 1495], "eviction_polici": [145, 181, 182], "evid": 1479, "evidenc": 1444, "evolut": [1371, 1445, 1474], "evolv": [458, 1345, 1371, 1377, 1383, 1445], "ex": 157, "ex1": 1454, "exact": [494, 510, 733, 1093, 1116, 1117, 1134, 1345, 1354, 1370, 1374, 1380, 1381, 1431, 1444, 1476, 1484], "exactli": [303, 304, 425, 426, 427, 434, 435, 436, 437, 483, 915, 920, 928, 1002, 1302, 1342, 1348, 1349, 1360, 1363, 1369, 1376, 1377, 1378, 1380, 1428, 1442, 1445, 1451, 1452, 1454, 1456, 1458, 1461, 1466, 1467, 1470, 1474, 1480, 1484, 1487, 1490, 1492, 1494, 1495, 1506], "examin": [199, 1342, 1463, 1503], "examine_jaxpr": 1466, "exampl": [0, 10, 13, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 91, 94, 97, 98, 106, 112, 113, 118, 119, 120, 126, 135, 136, 160, 166, 167, 179, 198, 199, 238, 242, 244, 255, 283, 285, 289, 290, 296, 297, 303, 305, 306, 311, 315, 316, 328, 335, 337, 343, 344, 345, 362, 363, 364, 365, 366, 367, 378, 380, 381, 387, 398, 415, 421, 422, 423, 426, 435, 436, 449, 452, 456, 458, 459, 460, 473, 474, 481, 486, 488, 489, 494, 495, 500, 501, 502, 503, 504, 506, 517, 519, 520, 521, 522, 523, 524, 525, 528, 541, 543, 544, 559, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 595, 599, 600, 601, 602, 603, 604, 605, 606, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 623, 625, 626, 627, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 753, 754, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1007, 1008, 1009, 1016, 1027, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1119, 1120, 1162, 1245, 1265, 1266, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1326, 1327, 1328, 1333, 1337, 1341, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1364, 1365, 1367, 1370, 1371, 1374, 1377, 1379, 1381, 1382, 1384, 1385, 1387, 1390, 1395, 1396, 1397, 1402, 1403, 1411, 1415, 1416, 1424, 1428, 1431, 1434, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1460, 1462, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1478, 1479, 1482, 1484, 1485, 1486, 1489, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1505], "example_arg": 69, "example_contain": 1497, "example_fun": 1359, "example_kernel": 1490, "example_librari": [1345, 1354, 1388], "example_tre": 1506, "exce": [1356, 1381, 1471, 1489], "excel": [1350, 1448, 1467, 1490], "except": [72, 76, 79, 98, 115, 119, 174, 206, 253, 266, 304, 305, 306, 338, 380, 415, 436, 501, 508, 541, 542, 557, 569, 578, 633, 634, 638, 699, 778, 804, 1016, 1342, 1346, 1348, 1349, 1354, 1356, 1359, 1360, 1361, 1362, 1363, 1366, 1368, 1369, 1370, 1374, 1377, 1378, 1382, 1387, 1390, 1424, 1442, 1444, 1449, 1455, 1456, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1470, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1483, 1484, 1485, 1487, 1489, 1490, 1494, 1495, 1497, 1498, 1504], "exchang": [191, 1484], "excit": 1475, "exclud": [731, 819, 831, 991, 1028, 1044, 1045, 1216, 1297, 1298, 1366, 1474], "exclude_pattern": 1366, "exclus": [322, 323, 324, 325, 335, 378, 572, 1052, 1058, 1349, 1354, 1440, 1445, 1447, 1490, 1503], "exdb": 1465, "execut": [10, 69, 97, 98, 118, 130, 150, 168, 178, 179, 184, 193, 196, 198, 283, 286, 296, 339, 415, 424, 505, 506, 654, 864, 922, 923, 950, 1002, 1009, 1010, 1012, 1016, 1064, 1283, 1342, 1344, 1347, 1348, 1352, 1354, 1356, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1371, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1387, 1390, 1411, 1424, 1431, 1435, 1441, 1442, 1443, 1447, 1448, 1449, 1451, 1454, 1459, 1460, 1462, 1463, 1464, 1466, 1467, 1471, 1474, 1475, 1478, 1479, 1483, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1495, 1496, 1498, 1502, 1503, 1507], "execute_compil": 1348, "execution_devic": 196, "execution_platform": 424, "exercis": [1378, 1443, 1479, 1490, 1492, 1502], "exhibit": [1110, 1447], "exist": [69, 82, 106, 303, 403, 455, 503, 614, 627, 633, 634, 667, 672, 744, 804, 873, 917, 945, 969, 993, 995, 1069, 1094, 1103, 1148, 1302, 1342, 1346, 1348, 1354, 1356, 1360, 1366, 1371, 1381, 1384, 1385, 1402, 1434, 1440, 1444, 1446, 1447, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1462, 1463, 1474, 1479, 1480, 1483, 1484, 1501, 1502], "exist_ok": 1381, "existenti": 1348, "exit": [239, 1363, 1378, 1449, 1490], "exot": 501, "exp": [150, 296, 373, 375, 411, 507, 509, 534, 536, 537, 538, 549, 676, 678, 712, 733, 809, 821, 825, 826, 1040, 1042, 1059, 1060, 1086, 1149, 1151, 1153, 1160, 1162, 1218, 1219, 1222, 1223, 1224, 1226, 1229, 1230, 1231, 1233, 1248, 1249, 1342, 1371, 1374, 1377, 1415, 1448, 1459, 1460, 1463, 1466, 1470, 1475, 1476, 1480, 1489], "exp1": [1131, 1133], "exp2": [372, 675, 678, 712, 826, 1371], "exp_mesh": 1415, "exp_multi": 1371, "exp_p": 1466, "exp_profil": 1381, "exp_singl": 1371, "exp_static_k": 1374, "exp_unsaf": 1371, "expa_1": 1086, "expa_2": 1086, "expand": [205, 677, 1342, 1354, 1357, 1378, 1452, 1463], "expand_dim": [452, 944, 1016, 1348, 1378], "expans": [1135, 1148], "expect": [130, 187, 194, 267, 283, 284, 291, 292, 529, 584, 654, 723, 733, 868, 927, 975, 976, 991, 1016, 1342, 1345, 1346, 1349, 1353, 1354, 1359, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1385, 1390, 1402, 1439, 1442, 1443, 1449, 1450, 1452, 1454, 1455, 1456, 1462, 1463, 1467, 1470, 1472, 1474, 1475, 1476, 1478, 1484, 1486, 1487, 1489, 1490, 1492, 1494, 1495, 1501, 1503, 1504, 1506], "expectnotimplementederror": 1390, "expedi": [1447, 1503], "expens": [67, 113, 170, 701, 924, 1285, 1286, 1287, 1353, 1361, 1369, 1442, 1447, 1459, 1461, 1471, 1479, 1484, 1489, 1496], "expensiveto": 1356, "experi": [1342, 1354, 1380, 1382, 1414, 1424, 1444, 1446, 1449, 1464, 1468, 1483, 1492, 1507], "experiment": [80, 82, 83, 93, 96, 296, 302, 397, 404, 454, 455, 458, 489, 498, 504, 505, 506, 670, 1002, 1005, 1006, 1016, 1027, 1342, 1354, 1370, 1372, 1376, 1377, 1378, 1381, 1384, 1388, 1395, 1428, 1431, 1440, 1445, 1446, 1448, 1449, 1455, 1459, 1461, 1463, 1472, 1478, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495], "experimental_cpp_jit": 1354, "experimental_cpp_pjit": 1354, "experimental_cpp_pmap": 1354, "expert": [1474, 1480], "expi": [1130, 1133], "expir": 1384, "expit": [1354, 1449, 1476], "explain": [61, 248, 268, 1342, 1366, 1369, 1374, 1378, 1387, 1390, 1403, 1434, 1440, 1449, 1454, 1459, 1467, 1480, 1484, 1495, 1503, 1506], "explan": [82, 130, 268, 1016, 1350, 1354, 1356, 1377, 1495, 1503], "explanatori": [1465, 1473], "explicit": [69, 97, 120, 337, 501, 504, 543, 572, 627, 633, 634, 638, 667, 670, 672, 744, 813, 873, 945, 954, 993, 995, 1016, 1283, 1284, 1342, 1343, 1344, 1348, 1349, 1354, 1370, 1374, 1377, 1431, 1434, 1435, 1440, 1442, 1445, 1447, 1448, 1451, 1452, 1453, 1455, 1456, 1460, 1463, 1471, 1472, 1474, 1475, 1479, 1490, 1501, 1503, 1504, 1505], "explicit_ax": [1354, 1470], "explicit_g": 1470, "explicit_mesh": 1500, "explicitli": [13, 92, 199, 223, 283, 397, 401, 501, 562, 605, 610, 612, 723, 739, 740, 797, 847, 944, 947, 1016, 1089, 1116, 1117, 1118, 1302, 1304, 1333, 1346, 1348, 1349, 1356, 1361, 1364, 1366, 1370, 1371, 1374, 1376, 1377, 1378, 1384, 1414, 1435, 1440, 1441, 1442, 1446, 1449, 1450, 1451, 1452, 1456, 1460, 1461, 1462, 1464, 1470, 1471, 1472, 1474, 1475, 1479, 1480, 1483, 1484, 1490, 1494, 1498, 1500, 1502, 1505], "explod": 1360, "exploit": [441, 687, 692, 1298, 1342, 1445, 1447, 1451, 1461, 1463, 1474, 1494], "explor": [239, 1348, 1352, 1364, 1367, 1442, 1444, 1448, 1452, 1459, 1471, 1480, 1500], "expm": [1085, 1086, 1100], "expm1": [412, 675, 676, 823], "expm_a": 1085, "expm_frechet": 1084, "expm_frechet_a": 1085, "expm_frechet_ae2": 1085, "expma": 1085, "expma2": 1085, "expn": [1130, 1131], "expon": [389, 430, 570, 701, 712, 719, 783, 801, 894, 1084, 1086, 1354, 1456], "exponent": [372, 373, 375, 411], "exponent_bit": [446, 1382], "exponenti": [318, 319, 372, 373, 375, 507, 509, 538, 545, 675, 676, 678, 712, 746, 783, 821, 826, 894, 942, 943, 1084, 1085, 1086, 1130, 1131, 1133, 1144, 1146, 1151, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1342, 1354, 1396, 1459, 1463], "exponential_decai": 1396, "exponential_minus_on": 375, "export": [721, 1343, 1344, 1354, 1366, 1374, 1381, 1385, 1387, 1388, 1431, 1435, 1439, 1444, 1461, 1495, 1496], "export_devic": 1371, "export_ignore_forward_compat": 1390, "export_mesh": 1371, "export_test": 1371, "expos": [454, 730, 1341, 1345, 1354, 1356, 1361, 1378, 1442, 1446, 1457, 1479, 1480, 1483, 1484, 1487, 1489, 1493, 1496], "expr": 1441, "express": [10, 61, 67, 112, 198, 245, 255, 304, 375, 381, 412, 459, 460, 570, 670, 750, 864, 921, 1002, 1283, 1342, 1345, 1346, 1348, 1349, 1350, 1354, 1359, 1361, 1363, 1366, 1369, 1370, 1374, 1377, 1379, 1382, 1415, 1434, 1441, 1444, 1445, 1446, 1448, 1449, 1451, 1454, 1456, 1457, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1473, 1474, 1475, 1479, 1480, 1487, 1488, 1492, 1494, 1499, 1505, 1506], "ext": 1366, "extend": [160, 543, 1113, 1114, 1136, 1307, 1308, 1309, 1310, 1311, 1348, 1354, 1375, 1376, 1377, 1388, 1390, 1447, 1451, 1452, 1458, 1462, 1466, 1471, 1479, 1481, 1483, 1484, 1506], "extend_axis_env_nd": 1354, "extendeddtyp": [103, 105, 348, 1455], "extendnamestackcontextmanag": 506, "extens": [105, 777, 922, 923, 1114, 1341, 1345, 1354, 1358, 1378, 1384, 1390, 1407, 1416, 1438, 1444, 1447, 1458, 1465, 1480, 1486, 1488, 1497, 1501], "extern": [82, 98, 100, 130, 285, 720, 1016, 1341, 1354, 1360, 1370, 1371, 1377, 1378, 1381, 1415, 1444, 1446, 1448, 1462, 1496], "external_arrai": [100, 720], "external_ip": 1461, "externalip": 1461, "extra": [67, 267, 284, 286, 343, 504, 881, 902, 918, 969, 1002, 1105, 1162, 1308, 1310, 1333, 1342, 1348, 1354, 1356, 1366, 1369, 1371, 1384, 1385, 1424, 1431, 1439, 1441, 1446, 1452, 1454, 1457, 1462, 1470, 1475, 1479, 1480, 1483, 1489, 1492, 1495, 1496, 1498, 1500, 1503], "extract": [69, 210, 225, 336, 340, 345, 381, 386, 439, 632, 655, 703, 792, 868, 899, 900, 906, 950, 951, 976, 977, 978, 979, 980, 1067, 1378, 1381, 1396, 1442, 1460, 1465, 1475, 1484, 1494, 1506], "extran": 1356, "extrapol": 761, "extrem": [1371, 1382, 1462, 1468, 1492, 1503], "ey": [747, 790, 797, 807, 808, 811, 814, 1082, 1089, 1095, 1097, 1101, 1342, 1346, 1348, 1467, 1475], "eyebal": 1349, "ezd": 1445, "f": [0, 69, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 97, 112, 113, 118, 119, 120, 126, 180, 198, 242, 267, 272, 290, 293, 295, 303, 311, 315, 316, 357, 415, 422, 436, 458, 494, 495, 503, 505, 632, 638, 723, 733, 763, 787, 820, 905, 906, 911, 922, 934, 963, 1002, 1009, 1019, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1050, 1051, 1053, 1055, 1056, 1057, 1059, 1060, 1110, 1113, 1114, 1115, 1167, 1168, 1172, 1174, 1176, 1177, 1178, 1179, 1183, 1185, 1190, 1192, 1194, 1195, 1198, 1200, 1205, 1207, 1218, 1219, 1220, 1221, 1234, 1237, 1238, 1241, 1242, 1246, 1247, 1248, 1249, 1250, 1251, 1255, 1257, 1260, 1261, 1263, 1264, 1267, 1268, 1271, 1273, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1295, 1296, 1304, 1307, 1308, 1309, 1312, 1319, 1320, 1332, 1333, 1342, 1344, 1346, 1348, 1349, 1350, 1354, 1355, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1390, 1402, 1403, 1411, 1414, 1415, 1428, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1449, 1451, 1452, 1453, 1454, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1474, 1475, 1479, 1480, 1484, 1487, 1490, 1492, 1494, 1495, 1497, 1498, 1500, 1505, 1506], "f0": [668, 1403], "f1": [67, 481, 668, 1002, 1374, 1376, 1382, 1403, 1445, 1447, 1468, 1474], "f16": 1456, "f16_f16_f16": [1356, 1424], "f16_f16_f32": [1356, 1424], "f1_better": 1447, "f1_transpos": 1447, "f2": [67, 481, 668, 1002, 1376, 1382, 1403, 1445, 1447, 1461, 1468, 1474, 1505], "f2e2c413b437": 1462, "f2f2f2f2f2f2f2f2f2f2f4f2f4f8c8c16f2f2c8": 1505, "f3": [1382, 1445, 1468, 1474], "f32": [305, 503, 1342, 1348, 1371, 1374, 1377, 1378, 1382, 1390, 1441, 1445, 1447, 1456, 1459, 1460, 1463, 1466, 1468, 1470, 1474, 1475, 1487, 1492], "f32_f32_f32": [1356, 1424], "f32type": 1348, "f4": [620, 1382, 1445, 1447, 1468, 1474], "f4_better": 1447, "f4_transpos": 1447, "f4f4f4f4f4f4f4f4f4f4f4f4f4f8c8c16f4f4c8": 1505, "f5": [1445, 1447, 1474], "f510dde58e22": 1468, "f5_transpos": 1447, "f6": 1474, "f64": [239, 1348, 1354, 1456], "f64_f64_f64": [1356, 1424], "f64type": 1348, "f7": 1474, "f8": [620, 668, 1474], "f811": 1348, "f8f8f8f8f8f8f8f8f8f8f8f8f8f8c16c16f8f8c16": 1505, "f9": 1474, "f_": [83, 1166, 1170, 1171, 1173, 1175, 1180, 1182, 1184, 1187, 1188, 1189, 1191, 1193, 1196, 1197, 1199, 1202, 1203, 1204, 1206, 1208, 1217, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1235, 1236, 1239, 1244, 1252, 1254, 1256, 1259, 1262, 1269, 1270, 1272, 1274, 1275, 1382, 1468], "f_0": 1403, "f_1": 1403, "f_bwd": [72, 79, 80, 1342, 1382, 1449, 1463, 1468], "f_bwd2": [1382, 1468], "f_check": 1361, "f_checkpoint": [1382, 1468], "f_checkpoint_grad": [1382, 1468], "f_contract": 1500, "f_dce_rul": 126, "f_elementwis": 1500, "f_elementwise_shard": 1500, "f_flat": 1348, "f_fwd": [72, 79, 80, 1342, 1449, 1463], "f_grad_bad": [1382, 1468], "f_grad_bad2": [1382, 1468], "f_host": 1376, "f_inv": 1466, "f_jaxpr1": 1348, "f_jaxpr2": 1348, "f_jit": [1348, 1377], "f_jit_correct": 1459, "f_jvp": [76, 77, 495, 1286, 1342, 1348, 1449, 1463], "f_k": 1403, "f_lin": 1348, "f_lin_flat": 1348, "f_nre": 1348, "f_out_uk": 1348, "f_part1": 1474, "f_part2": 1474, "f_primit": 1449, "f_shmap": 1474, "f_shmapped_ref": 1474, "f_sp": 1414, "f_transform": 267, "f_transpos": 494, "f_vjp": [1286, 1287, 1332, 1342, 1348, 1382, 1449, 1463, 1467, 1468], "f_vjp_checkpoint": [1382, 1468], "f_vjp_flat": 1348, "f_vmap_rul": 72, "fab": 1354, "face": [1348, 1349, 1383, 1444, 1456, 1469], "facil": [1371, 1484], "facilit": [239, 1354], "fact": [536, 549, 1149, 1160, 1298, 1342, 1345, 1348, 1360, 1363, 1374, 1377, 1390, 1441, 1444, 1445, 1447, 1448, 1449, 1455, 1459, 1461, 1467, 1474, 1479, 1488, 1489, 1490, 1503, 1505], "facto": 1450, "factor": [67, 240, 343, 344, 345, 346, 347, 399, 400, 404, 409, 531, 538, 543, 554, 602, 788, 985, 1045, 1078, 1079, 1080, 1091, 1092, 1094, 1098, 1151, 1153, 1162, 1354, 1381, 1402, 1448, 1455, 1474, 1487, 1490, 1494], "factori": [1093, 1136, 1148, 1403, 1503], "factorial_sc": 1403, "fail": [69, 118, 119, 120, 395, 397, 654, 927, 975, 1104, 1286, 1287, 1354, 1356, 1359, 1360, 1361, 1366, 1370, 1374, 1376, 1380, 1384, 1444, 1448, 1454, 1456, 1459, 1460, 1465, 1475, 1484, 1496, 1497, 1501, 1506], "fail_messag": 133, "failedcheckerror": [116, 118, 120, 125], "failur": [119, 160, 201, 203, 395, 1354, 1357, 1366, 1374, 1449, 1484, 1494], "fair": [1377, 1459], "fairli": [1348, 1385, 1442, 1445, 1448, 1480, 1487, 1489], "fake": [1369, 1381, 1487, 1495], "fall": [81, 240, 337, 543, 1354, 1371, 1378, 1444, 1447, 1449, 1455, 1475, 1490, 1501], "fallback": [132, 1356, 1470], "fals": [3, 4, 8, 9, 10, 34, 35, 36, 40, 41, 51, 53, 54, 56, 60, 61, 63, 65, 66, 67, 68, 77, 80, 81, 82, 84, 95, 100, 103, 107, 118, 120, 130, 131, 132, 137, 144, 145, 148, 150, 173, 178, 198, 199, 200, 201, 210, 212, 229, 230, 233, 234, 238, 241, 242, 244, 257, 283, 284, 289, 290, 293, 294, 295, 296, 297, 303, 304, 305, 306, 311, 339, 346, 351, 352, 353, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 378, 381, 387, 391, 395, 397, 398, 403, 404, 405, 406, 407, 408, 409, 436, 458, 459, 460, 461, 462, 463, 464, 465, 493, 495, 503, 508, 510, 537, 538, 563, 564, 565, 566, 567, 568, 583, 587, 588, 589, 591, 592, 595, 602, 620, 632, 640, 644, 645, 650, 651, 654, 661, 668, 670, 671, 672, 673, 674, 679, 681, 700, 720, 721, 725, 727, 731, 734, 735, 739, 740, 742, 750, 751, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 785, 786, 788, 798, 800, 805, 807, 811, 818, 819, 827, 828, 830, 831, 832, 836, 838, 839, 840, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 869, 879, 881, 882, 886, 887, 889, 896, 898, 899, 900, 901, 918, 921, 925, 927, 928, 931, 938, 946, 948, 950, 969, 976, 986, 987, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1013, 1015, 1023, 1026, 1049, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1095, 1098, 1099, 1101, 1110, 1113, 1114, 1115, 1134, 1151, 1245, 1266, 1289, 1290, 1291, 1292, 1294, 1296, 1306, 1316, 1318, 1320, 1327, 1331, 1332, 1344, 1348, 1349, 1350, 1354, 1356, 1359, 1362, 1364, 1366, 1368, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1385, 1390, 1396, 1403, 1411, 1424, 1435, 1440, 1441, 1443, 1444, 1445, 1454, 1455, 1460, 1462, 1465, 1467, 1468, 1471, 1474, 1475, 1484, 1490, 1492, 1495, 1501, 1504], "false_bodi": 1441, "false_branch": 1348, "false_const": 1348, "false_fn": [1348, 1360, 1363], "false_fun": [339, 1348, 1359], "false_jaxpr": 1348, "falsei": [1368, 1440, 1454], "famili": [1374, 1469], "familiar": [283, 460, 461, 462, 463, 464, 1084, 1342, 1346, 1376, 1377, 1378, 1383, 1414, 1441, 1445, 1447, 1453, 1460, 1463, 1467, 1474, 1475, 1480, 1483, 1490], "familiari": 459, "familiaris": 1484, "famous": 1470, "fan": 1397, "fan_avg": [520, 521, 531], "fan_geo_avg": 531, "fan_in": [522, 523, 524, 525, 531], "fan_out": 531, "fanci": 1387, "faninconcat": 1397, "faninsum": 1397, "fanout": 1397, "faq": [13, 95, 296, 994, 1002, 1352, 1411, 1454, 1464], "far": [1342, 1348, 1349, 1377, 1378, 1382, 1444, 1454, 1456, 1460, 1468, 1479, 1480, 1484, 1488, 1503], "fare": 1448, "fashion": [501, 1341, 1376, 1451, 1484, 1490], "fast": [1106, 1107, 1108, 1109, 1112, 1342, 1354, 1376, 1379, 1385, 1448, 1457, 1467, 1484, 1487, 1490, 1492, 1502, 1503], "fast_count": 1502, "fast_f": 1466, "fastcach": 1354, "faster": [132, 303, 356, 1310, 1345, 1347, 1354, 1356, 1387, 1424, 1443, 1459, 1475, 1484, 1489, 1490, 1492], "fastest": [91, 343, 804, 1342, 1356, 1424, 1431, 1464, 1467, 1484, 1488], "fastpath": 1354, "fatal": [1354, 1356, 1445], "faulti": 1444, "favor": [239, 1354, 1371, 1376, 1380, 1444, 1448, 1450, 1456, 1489], "favorit": [1357, 1378], "fa\u00e0": 1403, "fb": 963, "fc0ed1c14b8d": 1468, "fct": 1390, "fd": 1465, "fdo_profil": [493, 1381], "feasibl": 1364, "feat": 1474, "featur": [61, 93, 96, 248, 296, 343, 344, 458, 498, 1002, 1005, 1006, 1012, 1341, 1344, 1345, 1348, 1350, 1353, 1354, 1356, 1364, 1365, 1366, 1367, 1368, 1371, 1374, 1378, 1389, 1391, 1395, 1396, 1397, 1415, 1424, 1430, 1440, 1441, 1444, 1445, 1446, 1448, 1454, 1455, 1456, 1459, 1464, 1470, 1471, 1473, 1474, 1475, 1478, 1483, 1484, 1488, 1489, 1490, 1491, 1494, 1495, 1496, 1500], "feature_group_count": 343, "feature_length": 501, "februari": 1371, "fed": [131, 132, 1342, 1381, 1447, 1467], "feed": [1342, 1381, 1447, 1475, 1498], "feedback": [493, 1344, 1357], "feel": [1346, 1444, 1467], "fenc": 170, "fenchel": 552, "ferri": 1503, "fetch": [500, 1357, 1448, 1461, 1473, 1478, 1487, 1488, 1493, 1494, 1503, 1504], "fetch_a_b": 1484, "few": [380, 503, 572, 604, 637, 700, 750, 921, 985, 991, 1106, 1107, 1108, 1109, 1112, 1342, 1348, 1350, 1354, 1357, 1361, 1363, 1366, 1370, 1374, 1377, 1378, 1380, 1381, 1387, 1403, 1414, 1424, 1428, 1444, 1445, 1448, 1449, 1450, 1452, 1455, 1456, 1461, 1462, 1463, 1465, 1467, 1473, 1474, 1475, 1479, 1483, 1484, 1487, 1488, 1492, 1494, 1495, 1506], "fewer": [762, 868, 884, 890, 927, 928, 975, 976, 977, 978, 979, 980, 1002, 1026, 1116, 1117, 1118, 1445, 1449, 1454, 1474, 1483, 1492], "ff": 1445, "ffi": [1334, 1354, 1388], "ffi_cal": [126, 284, 1354, 1378], "ffi_low": 1354, "ffilayoutopt": [283, 284], "fft": [1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1342, 1354, 1402, 1424, 1467], "fft2": [689, 1354], "fft_length": 376, "fft_type": 376, "fftfreq": [686, 691, 698, 1354], "fftn": [682, 683, 688, 690, 1354], "fftshift": 691, "ffttype": [376, 1354, 1424], "fidel": 1354, "field": [80, 253, 345, 531, 668, 1307, 1341, 1344, 1348, 1354, 1366, 1371, 1396, 1441, 1444, 1478, 1506], "fig": [1456, 1469], "figsiz": [1456, 1469, 1476], "figur": [1348, 1367, 1369, 1462, 1469, 1476, 1479, 1483, 1487, 1494, 1500], "file": [178, 722, 820, 922, 923, 1003, 1011, 1013, 1015, 1348, 1349, 1354, 1357, 1359, 1362, 1364, 1366, 1371, 1377, 1378, 1381, 1387, 1390, 1438, 1440, 1444, 1448, 1454, 1458, 1460, 1461, 1462, 1465, 1473, 1484, 1489, 1495, 1496, 1501], "file1": 1357, "file2": 1357, "filelock": 1465, "filenam": [922, 923, 1011], "filesystem": [1356, 1495], "fill": [10, 220, 240, 254, 255, 379, 380, 381, 407, 431, 432, 433, 459, 460, 461, 462, 463, 464, 518, 584, 632, 658, 679, 700, 701, 727, 728, 762, 864, 868, 877, 882, 910, 927, 928, 950, 951, 959, 975, 976, 977, 978, 979, 980, 1103, 1107, 1109, 1354, 1370, 1374, 1424, 1456, 1462, 1464, 1483, 1484, 1485, 1487], "fill_diagon": 1354, "fill_or_drop": [1354, 1424], "fill_valu": [10, 14, 39, 56, 212, 379, 380, 381, 584, 632, 679, 703, 727, 728, 762, 864, 868, 927, 928, 950, 951, 975, 976, 977, 978, 979, 980, 994, 1076, 1354, 1455, 1462], "fillvalu": [1107, 1109], "filt": 963, "filter": [81, 291, 292, 508, 1354, 1381, 1448, 1469], "filter_fram": 81, "filter_shap": [344, 345, 1397], "final": [168, 216, 360, 378, 403, 452, 458, 488, 614, 899, 910, 1066, 1094, 1104, 1135, 1333, 1337, 1342, 1346, 1349, 1354, 1357, 1361, 1369, 1370, 1402, 1431, 1444, 1445, 1446, 1449, 1451, 1459, 1460, 1461, 1463, 1466, 1470, 1471, 1472, 1474, 1479, 1483, 1484, 1487, 1488, 1491, 1494, 1499, 1500, 1501, 1503], "final_acc": 1483, "final_b": [1465, 1473], "final_qdd": 262, "final_step_s": 1396, "final_w": [1465, 1473], "find": [69, 239, 296, 357, 486, 580, 581, 582, 584, 661, 797, 849, 850, 878, 887, 891, 918, 924, 940, 976, 1023, 1052, 1085, 1089, 1335, 1336, 1338, 1339, 1342, 1353, 1354, 1366, 1376, 1377, 1384, 1411, 1444, 1446, 1455, 1456, 1459, 1463, 1470, 1475, 1479, 1484, 1496, 1501, 1502], "find_top_trac": 1348, "fine": [139, 1346, 1357, 1359, 1366, 1378, 1381, 1447, 1449, 1456, 1457, 1458, 1486, 1496, 1501, 1502, 1503, 1506], "finer": [501, 1457, 1460, 1462], "finfo": [421, 807, 940], "finish": [166, 173, 1002, 1348, 1411, 1442, 1461, 1474, 1487, 1490, 1496], "finit": [716, 717, 733, 768, 770, 771, 772, 773, 837, 843, 1285, 1286, 1287, 1349, 1350, 1354, 1377, 1467, 1475], "fire": 1503, "first": [67, 73, 75, 77, 80, 82, 83, 84, 105, 120, 134, 150, 166, 210, 268, 288, 289, 290, 293, 295, 297, 303, 304, 311, 343, 344, 360, 363, 366, 399, 409, 415, 425, 426, 427, 435, 436, 437, 458, 475, 486, 495, 500, 502, 503, 543, 564, 587, 588, 604, 619, 637, 641, 659, 660, 664, 668, 680, 703, 729, 746, 762, 764, 781, 782, 799, 804, 813, 833, 875, 885, 888, 894, 902, 910, 925, 927, 928, 939, 943, 949, 954, 956, 961, 965, 969, 975, 976, 977, 978, 979, 980, 985, 988, 993, 1002, 1020, 1087, 1102, 1103, 1106, 1107, 1108, 1109, 1112, 1121, 1145, 1146, 1152, 1153, 1291, 1292, 1295, 1296, 1297, 1298, 1306, 1308, 1310, 1331, 1332, 1333, 1341, 1342, 1344, 1346, 1348, 1349, 1350, 1351, 1354, 1356, 1357, 1359, 1360, 1366, 1367, 1368, 1369, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1387, 1390, 1396, 1402, 1403, 1431, 1434, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1454, 1456, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1476, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1502, 1503, 1506], "first_finite_differ": 1475, "first_param": 1474, "fist": 1498, "fit": [366, 367, 501, 883, 887, 891, 918, 1111, 1348, 1353, 1369, 1386, 1411, 1414, 1440, 1451, 1456, 1461, 1480, 1487, 1488, 1490, 1494, 1502, 1503], "fit_logreg": 1414, "fit_logreg_sp": 1414, "five": 1354, "fix": [97, 378, 458, 488, 544, 572, 623, 668, 714, 718, 894, 920, 943, 968, 1103, 1105, 1342, 1345, 1346, 1348, 1349, 1357, 1359, 1367, 1370, 1374, 1377, 1380, 1424, 1441, 1443, 1447, 1448, 1450, 1453, 1463, 1464, 1467, 1470, 1474, 1478, 1479, 1480, 1484, 1487, 1490, 1494, 1501, 1502], "fix_import": 922, "fixed_point": [1342, 1449, 1463], "fixed_point_fwd": [1342, 1463], "fixed_point_rev": [1342, 1463], "flag": [67, 80, 110, 111, 150, 397, 404, 493, 668, 672, 721, 873, 913, 922, 995, 1017, 1037, 1343, 1345, 1354, 1356, 1357, 1366, 1368, 1370, 1371, 1376, 1377, 1378, 1431, 1440, 1443, 1444, 1446, 1454, 1455, 1462, 1477, 1479, 1495, 1496, 1499, 1504, 1505], "flag1": 1507, "flag2": 1507, "flash": [508, 1484], "flashattent": 1484, "flat": [504, 619, 902, 906, 982, 1305, 1348, 1415, 1465, 1466, 1497], "flat_fun": 1348, "flatbuff": [1354, 1371], "flatnonzero": 868, "flatten": [25, 42, 178, 288, 290, 345, 569, 580, 581, 583, 632, 644, 648, 649, 658, 669, 679, 700, 703, 754, 762, 805, 818, 839, 849, 850, 851, 852, 853, 854, 855, 856, 858, 860, 861, 862, 875, 876, 898, 899, 900, 905, 906, 910, 911, 916, 938, 944, 950, 951, 956, 976, 981, 988, 989, 1265, 1266, 1289, 1290, 1292, 1293, 1295, 1297, 1298, 1299, 1301, 1307, 1308, 1310, 1311, 1315, 1354, 1374, 1396, 1415, 1441, 1445, 1451, 1466, 1478, 1489, 1490, 1497, 1503, 1506], "flatten_and_cast": 1465, "flatten_fun": 1348, "flatten_func": [253, 1308, 1310], "flatten_pytre": 290, "flatten_util": [290, 1354, 1388], "flatten_with_kei": 1310, "flatten_with_keys_func": 1308, "flatten_with_path": [1294, 1296, 1316, 1354], "flavor": [805, 1360, 1444, 1452, 1456, 1503], "flaw": 1445, "flax": [81, 1352, 1353, 1381, 1383, 1395, 1397, 1452, 1503], "flaxform": 1443, "fledg": 1444, "flesh": 1479, "flexattent": 1494, "flexibl": [298, 429, 442, 443, 444, 445, 447, 448, 450, 668, 790, 1346, 1354, 1360, 1366, 1368, 1369, 1377, 1378, 1382, 1396, 1397, 1440, 1441, 1444, 1452, 1460, 1468, 1469, 1483, 1489, 1506, 1507], "flexibli": [416, 417], "flight": [173, 175, 1483, 1490], "flip": [346, 706, 707, 919, 1342, 1467, 1490], "fliplr": [705, 707, 919], "flipud": [705, 706, 919], "float": [9, 31, 53, 60, 86, 102, 120, 184, 239, 250, 251, 268, 289, 298, 299, 300, 305, 306, 309, 310, 312, 313, 314, 318, 319, 320, 331, 332, 336, 349, 350, 358, 369, 370, 371, 372, 373, 375, 377, 384, 385, 391, 393, 399, 403, 407, 409, 411, 412, 413, 421, 428, 430, 446, 451, 456, 457, 470, 471, 472, 475, 478, 484, 485, 491, 494, 508, 529, 531, 536, 540, 549, 551, 567, 572, 582, 583, 587, 589, 591, 595, 620, 631, 664, 673, 680, 681, 684, 698, 701, 715, 718, 719, 721, 723, 726, 727, 728, 731, 747, 752, 753, 767, 777, 780, 787, 798, 802, 804, 807, 819, 831, 833, 835, 838, 857, 859, 867, 874, 875, 878, 879, 882, 885, 886, 887, 889, 897, 899, 900, 901, 908, 909, 931, 938, 939, 940, 946, 950, 951, 954, 959, 967, 987, 988, 989, 990, 996, 1018, 1019, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1070, 1083, 1094, 1103, 1105, 1107, 1109, 1111, 1116, 1117, 1118, 1134, 1149, 1155, 1156, 1160, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1329, 1342, 1348, 1349, 1354, 1356, 1364, 1366, 1374, 1376, 1377, 1378, 1390, 1396, 1424, 1439, 1443, 1451, 1454, 1460, 1462, 1463, 1470, 1475, 1480, 1484, 1485, 1487, 1489, 1492, 1503, 1505], "float0": [289, 295, 1331, 1470], "float16": [263, 543, 767, 838, 897, 1135, 1354, 1424, 1456, 1483, 1484, 1485, 1505], "float32": [10, 67, 72, 75, 77, 78, 80, 83, 91, 94, 113, 128, 159, 199, 238, 244, 248, 263, 288, 290, 336, 365, 366, 367, 386, 421, 422, 439, 449, 456, 459, 460, 481, 486, 494, 495, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 540, 541, 543, 544, 559, 567, 572, 573, 574, 575, 576, 577, 579, 586, 592, 595, 599, 600, 601, 602, 614, 620, 621, 623, 627, 633, 634, 637, 639, 640, 641, 643, 645, 652, 663, 667, 672, 676, 678, 680, 681, 686, 687, 691, 693, 694, 695, 700, 701, 702, 712, 714, 715, 716, 717, 718, 719, 720, 723, 726, 727, 728, 731, 738, 740, 741, 742, 744, 745, 746, 747, 749, 761, 767, 776, 777, 783, 788, 789, 790, 791, 794, 796, 797, 800, 801, 805, 807, 808, 809, 810, 811, 812, 813, 816, 818, 819, 821, 823, 824, 831, 837, 838, 839, 841, 843, 845, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 866, 867, 872, 873, 879, 883, 885, 886, 888, 889, 891, 892, 894, 897, 901, 902, 903, 906, 907, 908, 909, 913, 915, 920, 930, 934, 935, 936, 940, 942, 943, 946, 950, 951, 953, 954, 958, 959, 967, 968, 985, 987, 993, 995, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1030, 1031, 1033, 1034, 1036, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1053, 1055, 1056, 1057, 1058, 1059, 1068, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1119, 1120, 1135, 1148, 1152, 1153, 1155, 1156, 1161, 1265, 1266, 1307, 1308, 1309, 1333, 1342, 1344, 1346, 1347, 1348, 1350, 1351, 1354, 1356, 1359, 1360, 1364, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1385, 1390, 1411, 1414, 1424, 1428, 1431, 1439, 1441, 1455, 1456, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1480, 1483, 1484, 1487, 1489, 1490, 1492, 1493, 1494, 1497, 1500, 1505, 1506], "float4_e2m1fn": [263, 544], "float64": [128, 129, 241, 263, 336, 386, 439, 494, 620, 665, 672, 701, 711, 721, 767, 838, 873, 897, 913, 995, 1018, 1020, 1021, 1024, 1025, 1028, 1030, 1031, 1033, 1034, 1036, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1053, 1055, 1056, 1057, 1058, 1059, 1084, 1148, 1152, 1153, 1155, 1156, 1161, 1348, 1354, 1364, 1428, 1439, 1441, 1444, 1456, 1462], "float8": [1135, 1354, 1424], "float8_": [572, 767], "float8_e3m4": 263, "float8_e4m3": 263, "float8_e4m3b11fnuz": 263, "float8_e4m3fn": [263, 544, 1484], "float8_e4m3fnuz": 263, "float8_e5m2": [263, 544, 1484], "float8_e5m2fnuz": 263, "float8_e8m0fnu": [263, 544], "float_": 540, "float_check": [120, 1360, 1361], "float_pow": [894, 943], "floatingpointerror": [1360, 1362, 1462], "floor": [332, 359, 456, 623, 663, 702, 715, 909, 920, 968, 1354], "floor_divid": [359, 663, 967, 1371, 1462], "floordiv": [255, 1354, 1371, 1374], "flop": [67, 113, 671, 804, 1342, 1344, 1354, 1382, 1447, 1463, 1467, 1468, 1474, 1487, 1492], "flow": [67, 75, 112, 415, 481, 1342, 1352, 1362, 1370, 1377, 1382, 1389, 1390, 1441, 1442, 1444, 1445, 1449, 1451, 1454, 1459, 1461, 1463, 1468, 1471, 1475, 1480, 1484, 1493, 1497, 1503], "flush": [421, 1462, 1483], "flux": 1354, "fmax": 837, "fmin": 843, "fmod": 909, "fmt": [84, 143, 1363], "fmt_arg": 118, "fmt_kwarg": 118, "fn": [285, 286, 311, 923, 1334, 1354, 1378, 1474], "focu": [1377, 1445, 1447, 1448, 1456, 1466, 1474, 1484, 1487, 1498], "focus": [994, 1341, 1358, 1381, 1383, 1444, 1445, 1448, 1465, 1471, 1473, 1489], "focuss": 1470, "foil": [67, 1382, 1468], "fold": [112, 1002, 1032, 1344, 1349, 1354, 1385, 1411, 1446, 1454], "fold_in": [276, 277, 281, 282, 1017, 1037, 1054, 1431, 1455, 1503], "folder": 1366, "folk": 1364, "follow": [67, 69, 73, 75, 82, 83, 98, 110, 111, 160, 291, 292, 296, 305, 306, 321, 328, 346, 357, 360, 362, 364, 436, 473, 483, 508, 529, 543, 564, 573, 574, 575, 576, 577, 579, 625, 675, 676, 687, 701, 764, 840, 877, 887, 896, 899, 925, 948, 977, 978, 979, 1002, 1016, 1040, 1103, 1105, 1110, 1136, 1188, 1189, 1190, 1191, 1192, 1193, 1267, 1268, 1344, 1345, 1346, 1347, 1348, 1351, 1352, 1354, 1356, 1357, 1363, 1365, 1366, 1367, 1369, 1370, 1371, 1374, 1377, 1378, 1380, 1381, 1383, 1384, 1385, 1390, 1402, 1414, 1415, 1424, 1428, 1439, 1440, 1441, 1442, 1446, 1447, 1451, 1452, 1454, 1455, 1456, 1457, 1461, 1462, 1469, 1470, 1471, 1472, 1474, 1479, 1480, 1483, 1484, 1487, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1503, 1504, 1505, 1506], "fontsiz": 1456, "foo": [67, 285, 1306, 1333, 1342, 1346, 1348, 1349, 1366, 1382, 1443, 1451, 1463, 1466, 1468, 1470, 1498, 1500, 1506], "foo_dual": 1349, "foot": [1445, 1459], "footgun": [1354, 1445, 1479], "footnot": 1449, "footprint": [1363, 1380, 1484], "footstep": 1445, "for_export": 1390, "for_loop": 1489, "foral": 1456, "forbid": [1354, 1457], "forc": [586, 1342, 1347, 1354, 1363, 1366, 1371, 1382, 1387, 1443, 1444, 1468, 1479, 1487, 1490, 1503], "force_color": 1464, "force_jupyt": [1382, 1468], "foreign": [283, 284, 286, 1343, 1354], "foremost": 1364, "forev": 1498, "forg": [397, 1384], "forget": [1346, 1476], "fori_loop": [458, 1377, 1441, 1448, 1462, 1474, 1479, 1484, 1489], "fork": [1357, 1451, 1465, 1473, 1498], "forkpti": 1465, "form": [69, 131, 135, 136, 178, 207, 208, 224, 245, 255, 290, 342, 343, 344, 356, 360, 397, 399, 409, 415, 441, 614, 619, 640, 645, 670, 740, 779, 816, 887, 902, 958, 1022, 1032, 1075, 1087, 1094, 1096, 1097, 1105, 1153, 1162, 1342, 1348, 1351, 1354, 1356, 1371, 1374, 1381, 1390, 1396, 1431, 1435, 1441, 1444, 1445, 1447, 1449, 1450, 1451, 1462, 1467, 1474, 1480, 1484, 1487, 1501, 1502, 1503], "formal": [69, 283, 1349, 1354, 1450, 1492], "format": [84, 95, 118, 143, 199, 205, 207, 211, 213, 214, 215, 222, 224, 226, 228, 231, 232, 235, 236, 237, 240, 500, 668, 763, 922, 923, 1010, 1342, 1354, 1356, 1361, 1363, 1366, 1367, 1371, 1376, 1390, 1414, 1415, 1431, 1446, 1448, 1449, 1460, 1463, 1465, 1467, 1472, 1473, 1476, 1483, 1489, 1490, 1492, 1494, 1497, 1503, 1506], "format_shape_dtype_str": 1354, "formatt": 763, "former": [306, 776, 1103, 1110, 1366, 1447, 1451], "formerli": 1354, "formul": 510, "formula": [1348, 1403], "forth": 69, "forthcom": 1443, "fortran": [905, 906, 911], "fortun": [1351, 1377], "forty_two_subkei": 1498, "forward": [67, 75, 79, 80, 293, 297, 346, 458, 481, 494, 495, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 917, 1285, 1354, 1360, 1361, 1363, 1378, 1379, 1381, 1382, 1384, 1424, 1443, 1444, 1445, 1448, 1449, 1452, 1455, 1457, 1468, 1471, 1474, 1475, 1479, 1484, 1496, 1500, 1502, 1506], "forward_compat_mod": 1371, "found": [397, 404, 867, 928, 1118, 1354, 1356, 1371, 1374, 1376, 1377, 1378, 1381, 1387, 1390, 1423, 1444, 1445, 1453, 1454, 1460, 1465, 1466, 1471, 1494, 1496, 1506, 1507], "foundat": [1471, 1487], "four": [98, 403, 977, 1354, 1382, 1456, 1461, 1471, 1495, 1503], "fourier": [682, 683, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1402], "fourth": 1378, "fp": 761, "fp16": 1484, "fp32": 1484, "frac": [395, 398, 413, 507, 508, 510, 512, 513, 531, 536, 537, 546, 547, 548, 549, 551, 552, 553, 554, 555, 579, 640, 643, 645, 652, 746, 903, 930, 934, 936, 953, 1024, 1031, 1039, 1041, 1042, 1044, 1045, 1046, 1050, 1051, 1055, 1056, 1059, 1088, 1094, 1122, 1125, 1127, 1128, 1130, 1131, 1132, 1133, 1137, 1138, 1141, 1142, 1143, 1145, 1148, 1149, 1150, 1155, 1157, 1158, 1160, 1161, 1162, 1165, 1172, 1174, 1176, 1177, 1183, 1185, 1190, 1192, 1194, 1195, 1205, 1207, 1218, 1219, 1222, 1223, 1224, 1226, 1229, 1230, 1231, 1233, 1237, 1238, 1241, 1242, 1246, 1247, 1248, 1249, 1255, 1257, 1263, 1264, 1267, 1268, 1271, 1273, 1279, 1280, 1281, 1282, 1342, 1378, 1463], "fraction": [241, 346, 359, 595, 845, 1354], "fragment": [1354, 1380, 1454], "frame": [81, 1354, 1359, 1363, 1370, 1444, 1449, 1460, 1462], "framework": [1342, 1354, 1357, 1366, 1369, 1384, 1456, 1457, 1480, 1496, 1498, 1505], "francesco": 1047, "frechet": 1085, "free": [356, 810, 998, 999, 1000, 1001, 1098, 1118, 1348, 1354, 1356, 1369, 1376, 1441, 1442, 1443, 1448, 1459, 1466, 1470, 1474, 1479, 1484, 1489, 1490, 1492, 1498, 1506], "freed": [1356, 1479], "freedom": [645, 860, 862, 946, 987, 1025, 1031, 1055, 1188, 1189, 1190, 1191, 1192, 1193, 1266, 1267, 1268, 1342, 1354, 1374, 1411, 1449, 1467, 1498], "freeli": [1342, 1457, 1467], "freevar": 1354, "freez": [1346, 1503], "freq": [686, 691], "freq_axi": 1113, "frequenc": [645, 661, 684, 686, 691, 698, 1110, 1113, 1114, 1115], "frequent": [1040, 1341, 1352, 1356, 1371, 1444, 1448, 1484, 1486], "fresh": [303, 1354, 1366, 1442, 1500, 1503], "fresh_var": 1349, "fresnlf": 1135, "frexp": 783, "friendli": [239, 454, 1342, 1357, 1448, 1456, 1467, 1490, 1506], "friendlier": 1354, "fro": [789, 800, 805], "frobeniu": [800, 805], "from": [10, 11, 22, 44, 52, 56, 61, 67, 69, 80, 81, 83, 96, 100, 103, 106, 112, 113, 118, 119, 120, 126, 130, 134, 135, 136, 137, 143, 145, 148, 150, 160, 165, 166, 167, 168, 173, 194, 196, 198, 199, 210, 211, 219, 220, 225, 226, 228, 232, 238, 239, 242, 244, 245, 247, 248, 250, 251, 254, 255, 285, 291, 292, 296, 315, 316, 321, 328, 337, 344, 345, 348, 357, 378, 380, 381, 397, 403, 406, 421, 422, 423, 424, 431, 434, 435, 451, 452, 456, 459, 460, 461, 462, 463, 464, 466, 480, 488, 493, 494, 500, 501, 502, 504, 531, 572, 582, 586, 592, 604, 614, 620, 625, 626, 640, 645, 652, 654, 655, 658, 659, 664, 668, 670, 679, 682, 683, 685, 687, 703, 720, 721, 723, 725, 726, 729, 730, 739, 740, 741, 742, 751, 754, 776, 778, 779, 782, 788, 792, 793, 795, 807, 816, 819, 820, 832, 840, 846, 849, 850, 864, 878, 882, 883, 885, 886, 889, 897, 899, 900, 903, 906, 910, 911, 912, 922, 923, 925, 931, 944, 950, 951, 955, 956, 963, 976, 977, 978, 979, 980, 981, 985, 986, 991, 994, 998, 999, 1000, 1001, 1002, 1009, 1016, 1018, 1023, 1026, 1029, 1032, 1033, 1034, 1043, 1044, 1047, 1051, 1054, 1060, 1067, 1070, 1073, 1074, 1077, 1080, 1086, 1097, 1103, 1105, 1111, 1113, 1116, 1117, 1118, 1119, 1120, 1136, 1140, 1155, 1156, 1209, 1216, 1271, 1273, 1283, 1284, 1285, 1286, 1287, 1295, 1297, 1298, 1300, 1301, 1303, 1304, 1307, 1310, 1311, 1328, 1332, 1333, 1341, 1342, 1344, 1346, 1347, 1350, 1352, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1369, 1370, 1372, 1376, 1377, 1378, 1380, 1381, 1382, 1385, 1387, 1390, 1396, 1397, 1402, 1403, 1411, 1414, 1415, 1424, 1427, 1428, 1431, 1434, 1437, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1505, 1506], "from_": 620, "from_ansi": [1382, 1468], "from_callback": 1440, "from_children": 253, "from_dict_of_list": 1456, "from_dlpack": [586, 592, 1354], "from_eul": [1119, 1120], "from_gda": 1354, "from_it": 1348, "from_iter": 1348, "from_tensor_slic": 1369, "frombuff": [586, 592, 726, 1354], "fromdens": [199, 238, 242, 244, 1414], "fromfunct": 1354, "frompyfunc": [969, 1354], "fromstr": [721, 1354], "front": [126, 326, 423, 902, 1348, 1354, 1378, 1449, 1459, 1479], "frontend": [1425, 1446, 1480], "frontier": 1341, "frostig": 1455, "froystig": 1446, "frozen": [1390, 1503], "frozendict": 1390, "frozenset": [116, 117, 120, 121, 122, 123, 124, 125, 198, 257, 991, 1283, 1390, 1434, 1474], "frustrat": [1444, 1448], "fry": [281, 1431, 1455, 1475, 1498], "fspath": 1381, "fsspec": 1465, "fst": 1348, "ft": [1390, 1503], "fulfil": 1056, "full": [0, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 91, 380, 381, 395, 397, 403, 404, 406, 435, 494, 518, 527, 532, 582, 584, 614, 637, 641, 672, 673, 703, 723, 728, 811, 873, 878, 887, 910, 995, 996, 1067, 1083, 1095, 1101, 1106, 1107, 1108, 1109, 1112, 1118, 1290, 1342, 1349, 1353, 1354, 1360, 1366, 1377, 1378, 1384, 1385, 1443, 1445, 1448, 1452, 1454, 1455, 1456, 1460, 1461, 1463, 1465, 1467, 1473, 1474, 1475, 1478, 1483, 1485, 1487, 1489, 1490, 1496, 1500, 1503], "full_lik": [673, 727, 874, 996], "full_low": [1348, 1354, 1460], "full_matric": [404, 406, 811, 1101], "full_rais": 1348, "full_random_st": 1498, "full_tre": [1290, 1314], "fuller": 61, "fulli": [29, 30, 137, 170, 489, 501, 637, 641, 1106, 1107, 1108, 1109, 1112, 1344, 1354, 1366, 1369, 1378, 1382, 1395, 1396, 1397, 1434, 1440, 1444, 1445, 1447, 1450, 1452, 1455, 1459, 1465, 1468, 1470, 1472, 1473, 1484, 1487, 1489, 1490, 1493, 1500], "fun": [67, 69, 72, 75, 76, 79, 113, 120, 126, 238, 244, 268, 270, 271, 289, 290, 293, 294, 295, 296, 297, 494, 495, 503, 505, 1002, 1016, 1104, 1105, 1331, 1332, 1333, 1342, 1354, 1363, 1382, 1390, 1397, 1402, 1403, 1411, 1445, 1460, 1463, 1466, 1467, 1468, 1470, 1475], "fun_jit": 248, "fun_kwarg": 1397, "fun_nam": [248, 1371, 1415, 1435], "fun_vjp": [1342, 1467], "fun_with_nested_calls_2": 1348, "func": [357, 461, 571, 725, 920, 969, 1009, 1086, 1304, 1344, 1348, 1354, 1370, 1371, 1377, 1378, 1390, 1444], "func1": [1367, 1441], "func10": 1441, "func11": [1441, 1462], "func12": 1441, "func1d": 570, "func2": [1367, 1441], "func3": 1441, "func4": 1441, "func7": 1441, "func8": 1441, "func_dialect": 1354, "func_op": 1348, "func_wrapp": 1390, "funclist": 881, "funcop": 1390, "funcptr": 285, "function": [0, 10, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 90, 91, 95, 97, 98, 107, 112, 113, 118, 119, 120, 126, 127, 130, 131, 132, 135, 136, 145, 160, 165, 168, 172, 178, 180, 198, 201, 203, 209, 241, 242, 245, 248, 252, 253, 264, 267, 268, 270, 271, 277, 281, 282, 283, 284, 285, 286, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 309, 310, 311, 312, 313, 314, 318, 319, 321, 322, 323, 324, 325, 331, 332, 334, 336, 337, 339, 340, 342, 343, 344, 346, 348, 349, 350, 356, 357, 359, 360, 363, 368, 369, 370, 371, 372, 373, 375, 377, 378, 381, 382, 383, 384, 385, 386, 391, 392, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 439, 449, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 477, 478, 481, 482, 483, 484, 485, 488, 489, 491, 494, 495, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 529, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 559, 562, 564, 570, 571, 572, 578, 583, 584, 588, 591, 595, 599, 600, 601, 604, 605, 610, 612, 620, 625, 632, 633, 634, 638, 646, 661, 663, 670, 671, 674, 677, 679, 701, 703, 722, 723, 724, 725, 733, 738, 746, 761, 762, 763, 764, 766, 775, 776, 777, 792, 799, 804, 805, 806, 820, 821, 827, 829, 830, 832, 841, 847, 864, 865, 868, 869, 872, 877, 881, 886, 887, 889, 891, 897, 905, 906, 911, 917, 918, 927, 928, 929, 934, 937, 938, 944, 947, 949, 957, 969, 975, 976, 977, 978, 979, 980, 982, 985, 991, 994, 998, 999, 1000, 1001, 1002, 1009, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1050, 1051, 1053, 1055, 1056, 1057, 1059, 1060, 1064, 1078, 1086, 1091, 1094, 1100, 1101, 1102, 1103, 1104, 1105, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1298, 1299, 1302, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1321, 1331, 1332, 1333, 1334, 1345, 1349, 1351, 1353, 1354, 1355, 1356, 1359, 1362, 1363, 1364, 1366, 1367, 1370, 1371, 1374, 1376, 1379, 1381, 1382, 1383, 1385, 1386, 1390, 1391, 1396, 1397, 1400, 1402, 1403, 1404, 1411, 1414, 1424, 1427, 1428, 1429, 1431, 1434, 1435, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1460, 1461, 1464, 1468, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1479, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1494, 1495, 1496, 1498, 1500, 1502, 1507], "functionaliz": 119, "functool": [66, 67, 113, 264, 270, 271, 296, 305, 306, 315, 316, 543, 991, 1002, 1009, 1016, 1286, 1287, 1304, 1307, 1342, 1348, 1354, 1370, 1376, 1377, 1378, 1381, 1382, 1390, 1414, 1443, 1445, 1453, 1459, 1463, 1466, 1468, 1470, 1474, 1475, 1479, 1484, 1488, 1490, 1492, 1494, 1500, 1506], "fund": 1503, "fundament": [128, 129, 668, 1341, 1342, 1350, 1379, 1389, 1444, 1448, 1449, 1456, 1459, 1460, 1461, 1463, 1474, 1479, 1490, 1492], "funni": 1349, "funzional": 1462, "further": [404, 458, 1095, 1119, 1354, 1357, 1376, 1384, 1385, 1390, 1444, 1448, 1449, 1451, 1454, 1456, 1458, 1459, 1474, 1475, 1484, 1495, 1498, 1507], "furthermor": [248, 1363, 1369, 1385, 1390, 1424, 1442, 1445, 1466, 1480, 1484, 1485, 1489], "fuse": [296, 344, 422, 544, 1445, 1447, 1454, 1475, 1479, 1480, 1488, 1489, 1490, 1494, 1498], "fused_comput": 1378, "fused_matmul": 1480, "fusion": [422, 1354, 1363, 1378, 1445, 1492], "fut": 1479, "futur": [18, 83, 95, 110, 111, 283, 379, 395, 460, 461, 462, 463, 464, 543, 1016, 1116, 1117, 1118, 1342, 1347, 1348, 1354, 1356, 1374, 1376, 1378, 1381, 1385, 1404, 1411, 1439, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1452, 1455, 1457, 1467, 1478, 1480, 1483, 1492], "futurewarn": 1354, "fwd": [69, 80, 1285, 1346, 1359, 1361, 1382, 1453, 1468], "fwd_edge_data": 1381, "fwd_recv_data": 1381, "fwd_send_token": 1381, "fweight": 645, "g": [10, 62, 67, 68, 69, 72, 75, 77, 79, 80, 84, 90, 96, 112, 131, 132, 139, 150, 161, 178, 236, 237, 245, 286, 290, 296, 303, 304, 343, 348, 356, 357, 424, 425, 426, 427, 435, 437, 456, 494, 500, 503, 508, 589, 591, 701, 761, 776, 864, 915, 923, 950, 951, 991, 1016, 1017, 1026, 1037, 1304, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1354, 1355, 1356, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1368, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1385, 1390, 1396, 1403, 1411, 1414, 1415, 1424, 1427, 1431, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1455, 1457, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1470, 1472, 1474, 1479, 1480, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1493, 1494, 1495, 1496, 1497, 1501, 1502, 1504, 1506], "g_": [1382, 1468], "g_aot": 1344, "g_inner_jit": 1459, "g_inner_jitted_lambda": 1459, "g_inner_jitted_norm": 1459, "g_inner_jitted_parti": 1459, "g_jit": 1344, "g_jit_correct": 1459, "g_jit_decor": 1459, "g_vjp": [1382, 1468], "gain": [1342, 1359, 1366, 1484, 1493], "gamma": [384, 385, 393, 1040, 1122, 1125, 1134, 1137, 1138, 1139, 1140, 1154, 1157, 1158, 1172, 1174, 1190, 1192, 1218, 1219, 1267, 1268, 1354, 1396, 1495], "gamma_d": 1154, "gamma_init": 1397, "gammainc": 1138, "gammaincc": 1137, "gammaln": [1136, 1140, 1448], "gammasgn": [1136, 1139, 1354], "gap": [701, 1487, 1492, 1498], "garbag": [1348, 1354, 1479, 1485, 1487], "gate": 512, "gather": [82, 84, 137, 212, 303, 431, 434, 950, 951, 1344, 1378, 1402, 1424, 1444, 1445, 1462, 1470, 1480, 1503], "gather_p": 1414, "gatherdimensionnumb": [212, 381, 1424], "gatherscattermod": [10, 212, 381, 459, 460, 461, 462, 463, 464, 864, 951, 998, 999, 1000, 1001, 1424], "gauss": [1342, 1467], "gaussian": [510, 1155, 1209, 1210, 1212, 1213, 1469], "gaussian_kd": [1354, 1448], "gave": 1449, "gb": [1471, 1492], "gc": [1354, 1495], "gcc": [1354, 1378], "gcd": 782, "gcloud": [1461, 1496], "gda": [135, 136], "gda1": 1440, "gda2": 1440, "gda_seri": 1354, "gdm": 1501, "ge": [368, 383, 392, 414, 419, 533, 1102, 1147, 1159, 1176, 1177, 1190, 1192, 1198, 1200, 1205, 1207, 1220, 1221, 1250, 1251, 1260, 1261, 1263, 1264, 1279, 1280, 1441], "gelu": [1471, 1480, 1503], "gemm": [671, 1381], "gemm_tp": 1474, "gen": [267, 1098, 1445], "gen_static_arg": 267, "gender": 668, "gener": [67, 74, 96, 110, 120, 130, 150, 201, 203, 207, 224, 239, 241, 267, 290, 292, 343, 344, 360, 397, 432, 441, 454, 455, 465, 466, 493, 495, 501, 508, 511, 531, 543, 572, 582, 614, 625, 645, 659, 664, 670, 680, 686, 691, 723, 731, 751, 753, 777, 792, 794, 795, 796, 800, 803, 813, 817, 818, 819, 831, 832, 833, 834, 835, 840, 841, 846, 872, 878, 902, 905, 917, 930, 944, 949, 954, 977, 978, 979, 980, 985, 986, 988, 989, 990, 991, 1007, 1008, 1009, 1013, 1015, 1016, 1026, 1034, 1037, 1047, 1082, 1083, 1097, 1098, 1099, 1105, 1116, 1121, 1133, 1217, 1218, 1219, 1302, 1307, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1354, 1356, 1357, 1359, 1360, 1361, 1366, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1382, 1385, 1395, 1396, 1397, 1402, 1414, 1424, 1427, 1428, 1431, 1438, 1440, 1441, 1443, 1444, 1446, 1447, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1471, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1492, 1493, 1494, 1495, 1497, 1498, 1503, 1505, 1506, 1507], "generalconv": 1397, "generalconvtranspos": 1397, "generalized_norm": 1354, "generate_block_sparse_mat": 1494, "gennorm": 1354, "geometr": [531, 731, 819, 831, 1220, 1221], "geometri": [1350, 1467, 1503], "geomspac": [819, 831, 1354], "geomtric": 731, "geq": 382, "gesdd": 1101, "get": [10, 84, 120, 136, 381, 424, 511, 701, 730, 864, 877, 950, 951, 976, 1002, 1293, 1294, 1299, 1308, 1337, 1341, 1342, 1346, 1348, 1349, 1350, 1354, 1358, 1359, 1360, 1361, 1363, 1366, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1385, 1387, 1390, 1400, 1411, 1414, 1415, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1453, 1454, 1456, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1473, 1474, 1475, 1476, 1479, 1480, 1484, 1485, 1487, 1489, 1490, 1492, 1494, 1496, 1498, 1500, 1501, 1502, 1503, 1506], "get_abstract_mesh": 1470, "get_av": 1348, "get_backend": [1348, 1354], "get_barrier_semaphor": [1479, 1490], "get_compile_opt": 1354, "get_compute_cap": 1354, "get_dataset": 1503, "get_dataset_on_devic": 1503, "get_dimension_s": 1371, "get_executable_and_tim": 1400, "get_grid_map": 1478, "get_neg": 1475, "get_or_make_const_trac": 1348, "get_param": 1396, "get_param_st": 1503, "get_primitive_transpos": 1390, "get_printopt": [589, 591], "get_profiled_instructions_proto": 1381, "get_refer": 1354, "get_runtime_token": 1442, "get_scaled_dot_general_config": 543, "get_signless": 1348, "get_stat": 1498, "get_topology_for_devic": 1354, "get_train_batch": 1473, "get_typ": 1354, "getattr": 1348, "getattrkei": [1310, 1311, 1354, 1506], "getdim": 1378, "getitemkeypathentri": 1354, "getvalu": 1348, "getvar": 1348, "gf": 1495, "gg": [468, 469], "ghcr": [1387, 1461], "giant": 1461, "gigabyt": 1484, "gil": 1503, "gist": [1470, 1500], "git": [1357, 1366, 1387], "github": [927, 975, 1341, 1352, 1354, 1364, 1366, 1367, 1377, 1378, 1384, 1387, 1443, 1444, 1448, 1457, 1462], "give": [236, 326, 329, 343, 344, 345, 346, 347, 389, 423, 430, 459, 460, 461, 462, 463, 464, 503, 762, 787, 797, 802, 902, 911, 950, 1023, 1082, 1089, 1113, 1118, 1304, 1342, 1344, 1348, 1350, 1354, 1357, 1359, 1360, 1361, 1369, 1377, 1378, 1380, 1424, 1440, 1442, 1443, 1445, 1446, 1450, 1451, 1452, 1456, 1459, 1462, 1463, 1464, 1466, 1467, 1469, 1470, 1473, 1474, 1479, 1480, 1483, 1484, 1485, 1487, 1490, 1496, 1498, 1503, 1507], "given": [3, 4, 14, 34, 35, 36, 40, 41, 46, 53, 54, 60, 69, 80, 91, 95, 96, 97, 100, 145, 152, 153, 162, 163, 169, 174, 177, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 208, 215, 225, 250, 251, 255, 290, 304, 305, 306, 311, 336, 345, 378, 394, 396, 398, 406, 415, 436, 458, 461, 483, 488, 489, 498, 501, 503, 505, 506, 508, 540, 554, 563, 568, 627, 632, 633, 634, 644, 645, 648, 649, 657, 660, 667, 669, 672, 682, 683, 685, 689, 705, 706, 707, 720, 723, 731, 744, 745, 808, 810, 811, 819, 831, 836, 837, 838, 839, 842, 843, 851, 852, 853, 854, 855, 856, 858, 860, 861, 862, 873, 883, 885, 887, 891, 896, 898, 899, 900, 911, 916, 917, 918, 919, 920, 930, 934, 937, 940, 945, 946, 948, 956, 958, 960, 961, 962, 964, 965, 966, 985, 987, 991, 993, 995, 1002, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1030, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1045, 1046, 1048, 1049, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1066, 1070, 1075, 1094, 1095, 1098, 1099, 1101, 1103, 1111, 1116, 1117, 1118, 1190, 1192, 1205, 1207, 1210, 1211, 1220, 1221, 1237, 1238, 1241, 1242, 1246, 1247, 1250, 1251, 1255, 1257, 1260, 1261, 1263, 1264, 1267, 1268, 1271, 1273, 1276, 1277, 1279, 1280, 1281, 1282, 1290, 1295, 1296, 1303, 1305, 1342, 1345, 1346, 1348, 1349, 1354, 1356, 1359, 1367, 1369, 1371, 1374, 1377, 1378, 1382, 1390, 1397, 1403, 1411, 1423, 1424, 1435, 1440, 1444, 1445, 1447, 1448, 1451, 1456, 1457, 1459, 1460, 1462, 1466, 1467, 1468, 1470, 1474, 1480, 1484, 1485, 1488, 1493, 1494, 1502, 1503, 1505, 1506, 1507], "glanc": [1377, 1456], "glob": [1366, 1378, 1381], "global": [27, 135, 136, 500, 501, 502, 1007, 1348, 1349, 1354, 1359, 1363, 1364, 1366, 1371, 1376, 1377, 1390, 1404, 1411, 1431, 1434, 1440, 1442, 1449, 1451, 1454, 1455, 1461, 1462, 1470, 1475, 1483, 1484, 1490, 1492, 1495, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506], "global_arg_shap": [1002, 1354], "global_arrai": 1461, "global_array_to_host_local_arrai": [136, 1354, 1440], "global_batch": 1461, "global_batch_arrai": 1369, "global_const": 1371, "global_constant_comput": 1390, "global_data": [1348, 1461], "global_inp": 1440, "global_input": [135, 136], "global_input_data": 500, "global_list": 1459, "global_loss": 1447, "global_mesh": [135, 136, 500], "global_out": [135, 136, 1440], "global_output": 1440, "global_result": 1461, "global_rng": 1376, "global_scal": [511, 543], "global_shap": [501, 502, 1434], "global_step": 1007, "globaldevicearrai": [1354, 1440], "gloo": 1354, "glorot": [520, 521], "gloss": 1503, "glossari": 1312, "gmem": [166, 167, 168, 173, 1483], "gmem_ref": [160, 1484], "gmre": 1448, "gnash": [1360, 1462], "gnu": [1366, 1378], "go": [1342, 1348, 1349, 1350, 1352, 1354, 1363, 1367, 1369, 1378, 1382, 1384, 1385, 1390, 1442, 1444, 1447, 1448, 1449, 1451, 1453, 1455, 1459, 1460, 1461, 1463, 1465, 1466, 1467, 1468, 1473, 1474, 1475, 1479, 1480, 1484, 1487, 1490, 1492, 1494, 1497], "goal": [1345, 1348, 1349, 1369, 1377, 1414, 1442, 1444, 1447, 1448, 1451, 1466, 1479, 1487, 1490, 1494, 1495, 1503], "goe": [119, 1052, 1342, 1348, 1349, 1354, 1441, 1442, 1461, 1467, 1501], "gone": [1354, 1369, 1479], "good": [131, 504, 1341, 1342, 1349, 1352, 1357, 1359, 1366, 1369, 1370, 1376, 1378, 1381, 1382, 1387, 1424, 1442, 1443, 1448, 1449, 1450, 1454, 1456, 1459, 1462, 1463, 1464, 1467, 1468, 1472, 1474, 1476, 1479, 1480, 1483, 1487, 1492, 1503], "good_example_jit": 1359, "googl": [1341, 1354, 1366, 1367, 1371, 1374, 1397, 1443, 1444, 1461, 1489, 1496, 1500], "googleapi": [1354, 1384], "gopath": 1367, "gopher": 1445, "got": [944, 991, 1342, 1354, 1359, 1361, 1374, 1387, 1439, 1443, 1460, 1461, 1462, 1464, 1467, 1475], "gotcha": [722, 724, 1342, 1359, 1364, 1462, 1463, 1475, 1497], "govern": [1341, 1356, 1465, 1473], "gperftool": 1367, "gpipe": 1474, "gpu": [18, 62, 67, 93, 96, 98, 143, 150, 166, 167, 170, 178, 240, 296, 397, 404, 409, 432, 433, 498, 544, 720, 793, 924, 1002, 1005, 1006, 1012, 1013, 1015, 1095, 1118, 1341, 1343, 1344, 1353, 1354, 1357, 1363, 1369, 1376, 1377, 1379, 1383, 1387, 1390, 1408, 1411, 1424, 1431, 1440, 1454, 1456, 1457, 1459, 1462, 1465, 1473, 1474, 1475, 1477, 1478, 1485, 1487, 1488, 1489, 1492, 1493, 1495, 1500, 1503, 1505, 1507], "gpu_cor": 174, "gpu_exampl": 1461, "gpu_hlo_schedul": 1381, "gpu_memory_fract": 1380, "gpu_test": 1366, "gpucompilerparam": 1483, "gpudevic": 96, "gpumemoryspac": 1483, "gqa": 508, "grab": [1369, 1442, 1465, 1473], "gracefulli": 1457, "grad": [67, 72, 75, 76, 79, 128, 129, 201, 203, 481, 503, 733, 934, 994, 1332, 1344, 1346, 1353, 1354, 1355, 1359, 1360, 1368, 1370, 1371, 1376, 1377, 1378, 1379, 1382, 1390, 1396, 1414, 1415, 1441, 1444, 1445, 1447, 1449, 1452, 1460, 1462, 1463, 1464, 1465, 1466, 1468, 1471, 1473, 1474, 1497, 1502, 1503, 1506], "grad_f": [1361, 1390], "grad_tanh": [289, 1350, 1467], "grad_tre": 1396, "grade": 1484, "gradf_exact": 733, "gradfun": [1348, 1464], "gradient": [75, 238, 239, 244, 289, 295, 346, 356, 357, 458, 481, 543, 660, 669, 934, 994, 1104, 1105, 1116, 1117, 1285, 1286, 1287, 1331, 1343, 1346, 1354, 1360, 1361, 1362, 1376, 1381, 1390, 1396, 1453, 1460, 1462, 1468, 1471, 1474, 1475, 1502, 1506], "grads_ref": 1346, "gradual": [1349, 1444, 1501], "grain": [139, 501, 1357, 1383, 1457, 1462, 1486, 1496], "grammar": [1441, 1447], "granul": 132, "granular": [1381, 1457, 1489], "graph": [1342, 1348, 1359, 1371, 1390, 1402, 1456, 1466, 1479, 1490, 1496, 1497], "graphic": [1379, 1489, 1490], "graphviz": 1367, "grayscal": 1469, "great": [1342, 1350, 1353, 1366, 1442, 1445, 1446, 1449, 1462, 1465, 1467, 1473, 1474, 1489, 1496, 1503], "greater": [305, 306, 368, 382, 383, 392, 414, 419, 551, 552, 623, 674, 735, 785, 786, 802, 869, 1348, 1354, 1356, 1360, 1363, 1374, 1377, 1384, 1457, 1484, 1492], "greater_equ": [382, 674, 734, 785, 786, 869], "greater_jvp": 1348, "greater_p": 1348, "greatest": [729, 782], "greatli": [804, 1484], "greedi": [670, 671], "green": [1369, 1382, 1461, 1468, 1505], "grep": [1387, 1461], "grid": [140, 150, 168, 177, 178, 179, 193, 501, 723, 751, 779, 840, 841, 872, 958, 1075, 1076, 1103, 1456, 1478, 1480, 1483, 1484, 1486, 1490, 1492, 1493, 1494, 1500], "grid_axi": 1487, "grid_idx": 1493, "grid_indic": [1480, 1494], "grid_k": 1483, "grid_m": 1483, "grid_n": 1483, "grid_nam": [1483, 1484], "grid_siz": [1485, 1487], "grid_spec": [178, 1489, 1490, 1492, 1494], "griddimensionsemant": 1493, "gridspec": [178, 1478, 1494], "ground": 1446, "group": [167, 174, 303, 304, 425, 426, 427, 435, 436, 437, 508, 998, 999, 1000, 1001, 1047, 1369, 1371, 1381, 1474, 1484, 1494, 1495], "grow": [797, 1089, 1341, 1349, 1356, 1367, 1380, 1447, 1462, 1492, 1494, 1495], "grown": 1484, "growth": [1367, 1380], "gspmd": [489, 1354, 1411, 1470, 1501], "gspmdshard": [1354, 1402], "gt": [368, 382, 392, 414, 419, 1348, 1382, 1454, 1460, 1468], "guarante": [10, 61, 148, 161, 170, 172, 381, 407, 459, 460, 461, 462, 463, 464, 654, 864, 1135, 1342, 1344, 1345, 1354, 1356, 1363, 1372, 1376, 1377, 1378, 1381, 1416, 1435, 1441, 1446, 1447, 1450, 1451, 1459, 1462, 1463, 1474, 1479, 1480, 1483, 1484, 1485, 1488, 1489, 1490, 1498, 1501], "guard": [1288, 1339, 1343, 1484], "guard_level": 1504, "guardrail": 1477, "guess": [357, 1105, 1116, 1117, 1118, 1342, 1467], "gui": 311, "guid": [1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1341, 1354, 1356, 1366, 1369, 1381, 1389, 1390, 1402, 1440, 1446, 1448, 1454, 1466, 1469, 1470, 1472, 1483, 1484, 1487, 1488, 1490, 1492, 1493, 1496, 1503, 1507], "guidanc": 1366, "guidelin": [1357, 1444], "gumbel": [1023, 1026, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1345], "gumbel_l": 1231, "gumbl": 1356, "gz": [1013, 1015, 1366, 1465], "h": [343, 344, 395, 398, 403, 405, 508, 788, 811, 1080, 1087, 1097, 1101, 1312, 1342, 1371, 1378, 1382, 1387, 1403, 1441, 1443, 1462, 1467, 1468, 1469, 1473], "h0": 1403, "h1": 1403, "h100": [1408, 1424, 1487], "h2": 1403, "h2d": [1354, 1471], "h_": [1088, 1094], "h_0": 1403, "h_1": 1403, "h_2": 1403, "h_k": 1403, "h_vjp": [1382, 1468], "ha": [61, 67, 75, 80, 94, 97, 100, 131, 132, 135, 136, 145, 160, 161, 166, 180, 198, 201, 203, 239, 252, 283, 288, 289, 290, 291, 292, 296, 297, 303, 311, 339, 345, 402, 404, 408, 436, 483, 495, 500, 604, 638, 639, 640, 645, 670, 678, 687, 692, 700, 733, 776, 778, 781, 800, 810, 868, 911, 919, 922, 944, 955, 991, 1002, 1016, 1026, 1051, 1052, 1084, 1087, 1090, 1094, 1102, 1116, 1117, 1118, 1162, 1295, 1296, 1308, 1310, 1327, 1331, 1342, 1344, 1346, 1347, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1357, 1359, 1362, 1363, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1384, 1385, 1390, 1396, 1398, 1403, 1411, 1414, 1415, 1424, 1431, 1432, 1434, 1435, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1470, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1484, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1496, 1498, 1500, 1504, 1506], "habit": 1446, "hack": [1356, 1445], "had": [1304, 1342, 1348, 1349, 1354, 1361, 1371, 1374, 1376, 1378, 1382, 1440, 1443, 1444, 1445, 1448, 1454, 1456, 1463, 1467, 1468, 1474, 1479, 1484, 1487, 1490, 1493], "hadn": 1349, "haiku": [1352, 1395, 1397], "half": [292, 436, 915, 1135, 1354, 1382, 1445, 1447, 1468, 1469, 1474, 1484, 1490, 1494], "half_db_norm": 306, "half_db_norm_sq": 306, "halfwai": [456, 920, 1424], "hallei": [403, 1094], "halo": 1474, "halt": [1118, 1356, 1376], "halv": [1447, 1484, 1492], "ham": [603, 613, 737, 780], "hammarl": 1100, "hammer": 1479, "hamper": [1444, 1498], "han": [603, 613, 736, 780], "hand": [136, 174, 240, 410, 501, 637, 641, 798, 810, 815, 817, 989, 1079, 1092, 1106, 1107, 1108, 1109, 1112, 1116, 1117, 1118, 1341, 1342, 1348, 1349, 1354, 1366, 1374, 1376, 1377, 1378, 1444, 1445, 1446, 1448, 1449, 1456, 1463, 1470, 1474, 1475, 1480, 1488], "handi": [1348, 1359, 1449], "handl": [77, 80, 105, 168, 197, 201, 203, 356, 381, 459, 460, 461, 462, 463, 464, 543, 584, 723, 761, 777, 857, 899, 906, 991, 998, 999, 1000, 1001, 1148, 1265, 1308, 1348, 1349, 1354, 1356, 1362, 1374, 1376, 1377, 1378, 1379, 1386, 1414, 1424, 1438, 1442, 1445, 1447, 1449, 1451, 1452, 1453, 1455, 1460, 1462, 1465, 1466, 1469, 1471, 1473, 1476, 1479, 1480, 1483, 1487, 1489, 1490, 1492, 1493, 1500, 1501, 1502, 1503], "handle_result": [1348, 1462], "handler": [283, 286, 1334, 1354], "handshak": 1490, "hang": [1354, 1461, 1490], "hann": [1110, 1113, 1114, 1115], "happen": [13, 18, 83, 118, 160, 1342, 1344, 1345, 1349, 1356, 1359, 1363, 1364, 1369, 1370, 1371, 1374, 1377, 1378, 1385, 1387, 1411, 1415, 1440, 1442, 1446, 1453, 1456, 1459, 1460, 1466, 1467, 1470, 1474, 1479, 1480, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1495, 1497, 1500, 1503, 1506], "happi": [1342, 1454, 1462, 1463], "happili": 1361, "hard": [513, 514, 515, 516, 1342, 1354, 1374, 1382, 1445, 1449, 1450, 1454, 1467, 1468, 1470, 1492, 1496, 1498, 1501, 1506], "hard_sigmoid": [514, 515], "hard_silu": 515, "hard_swish": 514, "harder": [1346, 1445, 1457], "hardest": 1374, "hardwar": [10, 67, 337, 864, 1341, 1354, 1364, 1366, 1376, 1384, 1424, 1434, 1445, 1451, 1457, 1464, 1474, 1479, 1480, 1483, 1485, 1487, 1488, 1489, 1490, 1492, 1498, 1503, 1507], "harmless": [1342, 1363, 1463], "harmon": [1153, 1162], "has_aux": [238, 244, 289, 290, 293, 294, 295, 297, 356, 357, 495, 1331, 1332], "has_opaque_dtyp": 1354, "has_side_effect": [283, 1354, 1378], "has_vjp": 1415, "hasattr": [720, 1456], "hash": [280, 296, 1348, 1354, 1356, 1366, 1374, 1377, 1385, 1411, 1431, 1446, 1451, 1459, 1495, 1497], "hashabl": [180, 198, 267, 276, 296, 303, 304, 315, 316, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 1002, 1307, 1308, 1310, 1312, 1333, 1348, 1354, 1377, 1385, 1411, 1506], "hashable_const": 1348, "hashable_jaxpr": 1348, "hashablefunct": 1354, "haskel": [75, 378, 458, 488, 1342, 1348, 1441, 1463, 1467], "hasn": [98, 1014, 1443, 1449, 1451, 1484], "hat": 790, "hatch": [1445, 1447, 1480], "have": [9, 61, 62, 65, 66, 71, 72, 75, 83, 97, 98, 113, 130, 133, 134, 136, 137, 148, 166, 172, 206, 209, 210, 223, 239, 252, 253, 254, 283, 289, 290, 295, 296, 298, 299, 300, 301, 304, 309, 310, 312, 313, 314, 322, 323, 324, 325, 331, 332, 334, 335, 336, 338, 340, 349, 350, 359, 360, 362, 363, 368, 372, 373, 375, 377, 380, 382, 383, 386, 389, 391, 392, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 429, 430, 431, 432, 433, 437, 439, 442, 445, 447, 448, 450, 451, 456, 457, 458, 465, 466, 467, 468, 469, 471, 472, 478, 482, 484, 485, 489, 494, 501, 502, 508, 528, 569, 571, 582, 595, 600, 601, 614, 623, 625, 627, 633, 634, 637, 641, 646, 657, 660, 664, 667, 674, 677, 679, 681, 683, 687, 689, 694, 697, 699, 700, 701, 712, 714, 716, 717, 718, 723, 729, 734, 735, 738, 744, 745, 781, 782, 784, 785, 786, 787, 788, 799, 804, 805, 811, 814, 826, 833, 834, 836, 837, 842, 843, 846, 848, 853, 856, 857, 859, 867, 869, 877, 878, 879, 881, 887, 888, 891, 894, 896, 901, 905, 906, 909, 911, 917, 918, 919, 922, 925, 944, 945, 948, 949, 951, 955, 956, 957, 960, 962, 963, 964, 966, 976, 984, 986, 988, 991, 993, 994, 1002, 1016, 1044, 1078, 1079, 1080, 1085, 1092, 1094, 1101, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1116, 1117, 1118, 1162, 1290, 1295, 1300, 1304, 1307, 1308, 1331, 1333, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1359, 1360, 1363, 1364, 1365, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1390, 1396, 1411, 1414, 1415, 1424, 1428, 1429, 1431, 1434, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1502, 1503, 1505, 1506, 1507], "haven": [1342, 1348, 1390, 1445, 1479, 1480], "hbm": [1483, 1487, 1488, 1489, 1492, 1493, 1494, 1503], "hbm_block_spec": 1493, "hbm_scratch": 1490, "hbm_vmem_kernel": 1493, "hcb": 1354, "hd": 1503, "hde": 1445, "he": [522, 523], "he_init": 1503, "he_norm": 1503, "head": [508, 1357, 1445, 1457, 1480, 1503], "head_dim": 1503, "header": 1378, "health": 98, "heap": 1354, "heap_profil": 1354, "hear": 1490, "heard": 1365, "heart": [1341, 1453, 1460, 1492], "heartbeat": 98, "heartbeat_timeout_second": 98, "heavi": [1377, 1378, 1441, 1444, 1445, 1483], "heavili": [1341, 1377, 1444, 1456, 1470, 1500], "heavisid": 1377, "heavyweight": 1346, "hed": 1445, "height": [1348, 1469], "held": [1356, 1478], "hello": [84, 668, 1376, 1442, 1486], "help": [951, 1118, 1341, 1342, 1344, 1345, 1346, 1354, 1357, 1360, 1363, 1366, 1374, 1378, 1381, 1382, 1387, 1403, 1440, 1442, 1443, 1444, 1445, 1446, 1454, 1457, 1459, 1462, 1467, 1471, 1478, 1484, 1490, 1492, 1494, 1495, 1498, 1500, 1501, 1502, 1506], "helper": [10, 864, 1306, 1342, 1346, 1348, 1354, 1366, 1371, 1378, 1390, 1441, 1461, 1464, 1465, 1467, 1469, 1473, 1483, 1484, 1494, 1500, 1503], "henc": [1374, 1382, 1385, 1445, 1449, 1451, 1454, 1468, 1474, 1484, 1485], "her": 1098, "here": [67, 69, 75, 97, 112, 267, 362, 363, 364, 365, 366, 367, 381, 387, 432, 433, 449, 459, 460, 473, 474, 495, 503, 614, 625, 632, 640, 645, 646, 668, 670, 725, 787, 834, 877, 881, 951, 977, 978, 979, 980, 991, 1031, 1085, 1135, 1162, 1180, 1182, 1269, 1270, 1275, 1304, 1308, 1309, 1310, 1333, 1342, 1344, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1363, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1390, 1404, 1414, 1439, 1441, 1442, 1443, 1444, 1445, 1447, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1478, 1479, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1494, 1495, 1497, 1498, 1499, 1500, 1502, 1503, 1506, 1507], "herk": 1023, "hermet": 1354, "hermetic_cuda_vers": 1366, "hermetic_cudnn_vers": 1366, "hermetic_python_prefix": 1366, "hermetic_python_sha256": 1366, "hermetic_python_url": 1366, "hermetic_python_vers": 1366, "hermetic_requirements_lock": 1366, "hermitian": [239, 395, 398, 403, 409, 687, 692, 788, 793, 794, 795, 796, 807, 811, 1078, 1079, 1080, 1082, 1083, 1094, 1098, 1102, 1117, 1354], "hesit": 1462, "hess1": 1348, "hess2": 1348, "hess3": 1348, "hess4": 1348, "hess5": 1348, "hess6": 1348, "hess7": 1348, "hess_inv": 1104, "hessenberg": 1354, "hessian": [1104, 1376, 1475], "heterogen": 415, "heurist": [1484, 1500, 1501], "hfft": [692, 1354], "hi": [1342, 1348, 1354, 1453, 1463, 1474], "hidden": [1356, 1359, 1460, 1470, 1472, 1475, 1487, 1498, 1506], "hide": [168, 1347, 1381, 1387, 1448, 1455, 1462, 1471, 1480, 1487, 1490, 1492, 1503], "hierarch": 1448, "hierarchi": [105, 777, 1438, 1455, 1456, 1480, 1486, 1488, 1489, 1493, 1503], "high": [67, 204, 337, 341, 343, 344, 345, 346, 347, 423, 543, 664, 670, 753, 799, 804, 813, 817, 833, 891, 954, 988, 989, 1019, 1023, 1026, 1036, 1082, 1141, 1142, 1211, 1369, 1381, 1385, 1403, 1414, 1424, 1448, 1451, 1460, 1461, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1488, 1489, 1490, 1493, 1496], "higher": [69, 82, 97, 337, 356, 360, 599, 600, 664, 678, 857, 859, 879, 891, 901, 902, 934, 991, 1341, 1346, 1348, 1349, 1350, 1354, 1356, 1359, 1369, 1371, 1376, 1377, 1378, 1379, 1403, 1414, 1424, 1442, 1447, 1449, 1454, 1455, 1456, 1463, 1466, 1467, 1474, 1480, 1483, 1484, 1487, 1488, 1492], "highest": [81, 291, 292, 341, 343, 344, 345, 346, 347, 664, 670, 753, 799, 804, 813, 817, 833, 954, 988, 989, 1348, 1356, 1382, 1424], "highli": [150, 1408, 1469, 1472, 1489, 1503], "highlight": [1356, 1378, 1456, 1488, 1505], "highter": 1503, "hindsight": 1458, "hint": [160, 360, 489, 1366, 1445, 1464, 1470, 1484, 1493, 1501, 1503], "histogram": [604, 661, 740, 741, 742], "histogram2d": [739, 741, 742], "histogram_bin_edg": [739, 740, 742], "histogramdd": [739, 740, 741], "histor": [1348, 1353, 1384, 1444, 1457, 1488], "histori": [1371, 1387], "hit": [1348, 1354, 1356, 1359, 1363, 1378, 1385, 1387, 1480, 1484, 1487, 1490], "hline": 1359, "hlo": [67, 178, 343, 349, 413, 431, 432, 433, 471, 1342, 1344, 1348, 1354, 1361, 1371, 1374, 1378, 1380, 1381, 1385, 1390, 1402, 1435, 1442, 1446, 1447, 1454, 1463, 1474, 1479, 1480, 1495, 1496], "hlo_batch": 1378, "hlo_cal": 1449, "hlo_data": 1378, "hlo_data_partit": 1378, "hlo_data_shmap": 1378, "hlo_modul": 1402, "hlo_transl": 1348, "hlomodul": 1378, "hloshard": [1354, 1415], "hoc": 1456, "hoist": [69, 112, 1385, 1441], "hoist_constants_as_arg": [1385, 1390], "hold": [245, 378, 458, 488, 675, 1040, 1084, 1104, 1342, 1348, 1377, 1396, 1441, 1447, 1456, 1457, 1463, 1483, 1484, 1489, 1490], "hollow": 1344, "holomorph": [289, 290, 293, 294, 295, 1331, 1342, 1467], "home": [1378, 1390, 1454, 1465], "homogen": 668, "hood": [360, 1348, 1350, 1363, 1366, 1442, 1460, 1462, 1474, 1488, 1498], "hoof": 1023, "hook": [1442, 1496], "hope": [1342, 1354, 1455, 1457, 1463, 1467], "hopefulli": [1446, 1492], "hopper": [1354, 1482], "horizon": 1348, "horizont": [590, 614, 627, 666, 667, 743, 744, 941, 945, 992, 993], "host": [18, 29, 71, 94, 98, 130, 133, 134, 135, 136, 137, 138, 397, 404, 501, 1016, 1338, 1343, 1347, 1354, 1360, 1361, 1363, 1369, 1370, 1376, 1381, 1385, 1406, 1445, 1448, 1451, 1454, 1462, 1475, 1488, 1495, 1496, 1504], "host_batch_s": 1503, "host_callback": [1354, 1376, 1390, 1442], "host_count": 1354, "host_id": [136, 498, 1354], "host_local_array_to_global_arrai": [135, 1354, 1440], "host_local_data": 501, "host_local_input": [135, 136], "host_local_output": [135, 136], "host_side_random_lik": 1376, "host_to_devic": 1504, "host_tracer_level": 1496, "hot": [540, 1342, 1346, 1465, 1467, 1473], "hour": 1387, "hous": 1503, "household": [399, 400, 409, 1354], "householder_product": 1354, "how": [61, 67, 139, 178, 198, 254, 283, 378, 381, 431, 432, 433, 458, 459, 460, 461, 462, 463, 464, 489, 500, 502, 670, 671, 761, 899, 906, 991, 998, 999, 1000, 1001, 1010, 1016, 1019, 1023, 1026, 1036, 1047, 1063, 1110, 1114, 1115, 1265, 1283, 1308, 1311, 1341, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1361, 1363, 1366, 1369, 1370, 1371, 1374, 1376, 1378, 1381, 1382, 1384, 1385, 1387, 1390, 1391, 1395, 1396, 1402, 1403, 1411, 1414, 1424, 1430, 1434, 1441, 1442, 1444, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1460, 1461, 1462, 1463, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1477, 1480, 1481, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1497, 1498, 1500, 1502, 1503, 1506, 1507], "howev": [10, 61, 75, 83, 93, 97, 113, 136, 160, 223, 239, 252, 339, 481, 483, 489, 495, 677, 701, 750, 797, 834, 846, 864, 905, 911, 917, 921, 925, 944, 949, 957, 1002, 1064, 1084, 1089, 1118, 1302, 1342, 1347, 1348, 1350, 1351, 1353, 1354, 1356, 1361, 1369, 1370, 1374, 1376, 1377, 1378, 1380, 1381, 1390, 1402, 1414, 1428, 1435, 1442, 1444, 1448, 1449, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1467, 1475, 1479, 1480, 1484, 1485, 1487, 1489, 1490, 1492, 1494, 1495, 1497, 1498, 1501, 1503, 1506], "hparam": 1445, "hpc": 98, "hq": [808, 1095], "hsplit": [590, 666, 941, 992], "hstack": [614, 627, 667, 945, 993], "html": [13, 184, 245, 248, 254, 255, 288, 572, 1023, 1283, 1288, 1312, 1333, 1354, 1356, 1359, 1366, 1374, 1378, 1382, 1384, 1390, 1407, 1415, 1431, 1439, 1444, 1454, 1456, 1459, 1462, 1468, 1474, 1475], "http": [13, 75, 184, 239, 245, 248, 254, 255, 288, 305, 306, 344, 345, 357, 454, 508, 553, 572, 701, 1013, 1015, 1018, 1023, 1047, 1283, 1288, 1312, 1333, 1354, 1356, 1357, 1359, 1364, 1366, 1374, 1378, 1379, 1384, 1387, 1390, 1396, 1407, 1415, 1431, 1439, 1445, 1454, 1456, 1459, 1460, 1461, 1462, 1465, 1473, 1474, 1475, 1496], "http_proxi": 98, "https_proxi": 98, "hu": [788, 811, 1080, 1101], "hudr": 1484, "hug": 1383, "hugepag": 1354, "human": 1435, "hundr": [1377, 1444], "hurdl": 1390, "hurt": [1461, 1464], "hurwitz": [491, 1165], "hv": [811, 1101], "hvp": [1342, 1467], "hvp_revfwd": [1342, 1467], "hvp_revrev": [1342, 1467], "hwdio": 1469, "hwio": [343, 344, 1469], "hx": [1092, 1099], "hybrid": [132, 1471], "hybrid_lay": 1471, "hybrid_scan": 1471, "hyperbol": [184, 300, 310, 314, 350, 472, 485, 574, 576, 579, 643, 936, 953], "hypergeometr": [1141, 1142], "hypervisor": 1354, "hypot": 1354, "hypotenus": 745, "hypothesi": 1448, "hypothet": [1448, 1449], "i": [0, 9, 10, 13, 18, 29, 30, 61, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 112, 113, 118, 119, 120, 126, 128, 129, 130, 132, 134, 135, 136, 137, 139, 141, 143, 145, 148, 150, 157, 160, 161, 166, 167, 168, 170, 174, 175, 178, 179, 180, 198, 201, 203, 206, 207, 215, 220, 222, 223, 224, 237, 238, 239, 240, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 267, 268, 277, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 295, 296, 297, 301, 303, 304, 305, 306, 311, 313, 315, 316, 322, 324, 325, 327, 331, 335, 336, 337, 339, 343, 344, 345, 346, 347, 348, 349, 356, 357, 359, 360, 362, 363, 364, 365, 366, 367, 368, 372, 373, 375, 378, 380, 381, 382, 383, 387, 389, 391, 392, 395, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 441, 449, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 477, 478, 481, 482, 483, 484, 485, 486, 488, 489, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 505, 506, 508, 512, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 534, 536, 537, 538, 540, 544, 549, 551, 552, 554, 559, 562, 564, 567, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 586, 587, 589, 590, 591, 592, 595, 599, 600, 601, 602, 604, 605, 610, 612, 614, 623, 625, 626, 627, 632, 633, 634, 637, 638, 640, 641, 643, 645, 646, 650, 651, 652, 654, 655, 658, 659, 660, 664, 666, 667, 668, 670, 677, 678, 679, 680, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 703, 705, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 733, 738, 739, 740, 741, 742, 743, 744, 745, 746, 750, 751, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 781, 783, 784, 787, 788, 789, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 807, 808, 809, 810, 811, 813, 815, 818, 819, 820, 823, 827, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 841, 842, 843, 847, 848, 849, 850, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 867, 868, 872, 876, 877, 878, 879, 881, 882, 883, 885, 886, 887, 888, 889, 891, 892, 894, 896, 897, 898, 899, 900, 901, 903, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 934, 936, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 948, 950, 951, 953, 954, 955, 957, 958, 959, 961, 963, 965, 969, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 991, 992, 993, 994, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1122, 1123, 1124, 1125, 1128, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1146, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1216, 1217, 1218, 1219, 1220, 1221, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1290, 1291, 1292, 1294, 1295, 1296, 1298, 1302, 1303, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1327, 1331, 1332, 1333, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1369, 1370, 1371, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1390, 1395, 1396, 1397, 1400, 1402, 1403, 1404, 1411, 1414, 1415, 1416, 1424, 1425, 1427, 1428, 1431, 1434, 1435, 1438, 1439, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1476, 1478, 1479, 1480, 1482, 1483, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1507], "i0": [318, 1145, 1146, 1279, 1280, 1354], "i0619": 1371, "i1": [319, 668, 746, 1143, 1144, 1371], "i16": 1456, "i1i1i2i4i8f": 1505, "i1i2i4i8bff2f4f8c8c16i1f": 1505, "i2": [668, 1505], "i2i2i2i4i8f": 1505, "i2i2i4i8bff2f4f8c8c16i2f": 1505, "i32": [305, 1344, 1348, 1371, 1374, 1378, 1441, 1447, 1456, 1459, 1460, 1462, 1466, 1470, 1474], "i32_scalar": 1344, "i4": [620, 668], "i4i4i4i4i8f": 1505, "i4i4i4i8bff2f4f8c8c16i4f": 1505, "i64": [1348, 1371, 1456], "i8": [620, 668, 1456], "i8i8i8i8bff2f4f8c8c16i8f": 1505, "i8i8i8i8i8f": 1505, "i_0": [746, 1143, 1144, 1279, 1280], "i_1": [1145, 1146], "i_k": 1492, "i_m": [1047, 1492], "i_n": 1047, "iaxi": 877, "ib": [298, 559], "ici": [132, 1369, 1445, 1461, 1490], "id": [98, 180, 287, 303, 493, 504, 1348, 1354, 1377, 1378, 1385, 1390, 1415, 1428, 1444, 1461, 1464, 1466, 1475, 1478, 1484, 1487, 1490, 1500], "id_": 1348, "id_print": [1354, 1442], "id_psumrev": [1445, 1447], "id_tap": 1354, "idct": [1071, 1072, 1074], "idctn": [1071, 1072, 1073], "idea": [1342, 1348, 1350, 1369, 1378, 1381, 1382, 1395, 1402, 1443, 1445, 1446, 1447, 1456, 1457, 1461, 1462, 1463, 1467, 1468, 1470, 1474, 1480, 1484, 1489, 1493, 1500], "ideal": [239, 1369, 1456, 1487, 1492], "ident": [95, 136, 237, 346, 441, 452, 481, 501, 578, 680, 725, 754, 797, 811, 957, 969, 1002, 1027, 1089, 1101, 1136, 1298, 1322, 1342, 1348, 1354, 1374, 1377, 1382, 1390, 1402, 1431, 1438, 1441, 1444, 1447, 1452, 1453, 1455, 1461, 1463, 1466, 1467, 1468, 1475, 1479, 1480, 1483, 1487, 1490, 1496, 1498, 1503, 1506], "identif": [1342, 1378, 1445, 1451, 1467, 1474], "identifi": [87, 88, 96, 245, 311, 343, 344, 1002, 1333, 1342, 1348, 1356, 1357, 1367, 1377, 1387, 1445, 1451, 1454, 1467, 1470, 1474, 1480, 1487, 1500], "idhash": 1348, "idl": [1483, 1487, 1489, 1492, 1503], "idx": [10, 145, 181, 182, 185, 186, 188, 189, 190, 191, 192, 388, 582, 625, 864, 951, 1064, 1067, 1068, 1069, 1292, 1294, 1296, 1346, 1354, 1370, 1447, 1474, 1475, 1480, 1506], "idx1": 1465, "idx3": 1465, "idx_i": 1494, "idx_j": 1494, "idxs_i_ref": 1494, "idxs_k_ref": 1494, "ieee": [701, 1505], "ieeestd": 701, "iexp": 701, "ifft": [682, 684, 685, 689, 690, 693, 698, 1424], "ifft2": [683, 1354], "ifftn": [682, 685, 688, 689, 1354], "ifftshift": 686, "ifop": 1348, "igammagrada": 1354, "ignor": [10, 291, 379, 381, 395, 398, 408, 409, 520, 521, 522, 523, 524, 525, 527, 531, 532, 543, 580, 581, 632, 648, 649, 650, 651, 761, 837, 843, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 879, 887, 896, 901, 922, 946, 948, 950, 987, 1085, 1094, 1099, 1102, 1342, 1348, 1349, 1354, 1366, 1371, 1380, 1387, 1402, 1411, 1438, 1444, 1447, 1449, 1456, 1460, 1503], "ignore_exception_detail": 1374, "ihfft": [687, 1354], "ii": [69, 640, 670], "iinfo": [701, 1348], "ij": [640, 645, 670, 671, 742, 840, 1088, 1102, 1382, 1492], "ijk": [670, 813, 954], "ik": [645, 1382, 1492], "il": [670, 671], "ill": [789, 797, 802, 887, 1026, 1089, 1448], "illeg": [1354, 1470], "illus": 1442, "illustr": [1350, 1381, 1461, 1474, 1490, 1494], "ilp": 1484, "im": [386, 670, 813, 954], "imag": [336, 340, 345, 439, 636, 907, 1102, 1342, 1345, 1354, 1369, 1379, 1388, 1424, 1448, 1461, 1465, 1467, 1469, 1473, 1484], "image_rel_amd64_addr32nb": 1354, "imagepullpolici": 1461, "imagepullsecret": 1461, "imagin": [1348, 1361, 1369, 1378, 1442, 1446, 1456, 1472, 1479, 1480], "imaginari": [28, 336, 340, 386, 416, 417, 439, 475, 557, 636, 701, 749, 766, 775, 841, 872, 902, 907, 939, 1086, 1342, 1456, 1467], "imbalanc": 1445, "img": 1469, "immedi": [83, 95, 160, 168, 1289, 1293, 1295, 1297, 1298, 1299, 1326, 1342, 1346, 1347, 1357, 1363, 1369, 1382, 1384, 1444, 1446, 1450, 1462, 1467, 1468, 1475, 1478, 1493, 1498, 1503], "immut": [100, 116, 117, 121, 122, 123, 124, 125, 296, 638, 700, 720, 882, 899, 900, 1002, 1303, 1307, 1346, 1354, 1377, 1411, 1428, 1462, 1475, 1480, 1484, 1488, 1500], "impact": [65, 66, 677, 701, 834, 846, 891, 905, 911, 917, 944, 949, 957, 1356, 1424, 1440, 1444, 1471, 1489], "impenetr": 1348, "imper": 1363, "impl": [278, 1017, 1037, 1061, 1348, 1354, 1378, 1431, 1455, 1460], "impl_rul": 1348, "implement": [9, 10, 25, 57, 73, 76, 79, 84, 92, 95, 97, 110, 111, 119, 150, 199, 200, 201, 202, 203, 206, 209, 216, 217, 219, 239, 240, 277, 281, 282, 283, 296, 298, 305, 306, 311, 331, 337, 339, 349, 356, 359, 362, 363, 364, 365, 366, 367, 372, 373, 375, 378, 381, 397, 398, 399, 404, 405, 409, 411, 412, 415, 422, 424, 451, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 471, 478, 484, 485, 488, 508, 534, 538, 543, 557, 559, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 590, 592, 595, 599, 600, 601, 602, 603, 604, 605, 606, 610, 612, 613, 614, 616, 617, 618, 619, 621, 623, 625, 626, 627, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 726, 727, 728, 729, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 751, 753, 754, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 924, 925, 927, 928, 929, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1002, 1017, 1037, 1040, 1044, 1061, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1332, 1333, 1341, 1348, 1349, 1350, 1351, 1354, 1355, 1357, 1358, 1359, 1360, 1364, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1389, 1390, 1396, 1402, 1403, 1411, 1414, 1424, 1428, 1431, 1440, 1442, 1443, 1445, 1446, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1466, 1468, 1469, 1470, 1474, 1475, 1480, 1481, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1498, 1503], "implemnet": 783, "impli": [1102, 1116, 1117, 1118, 1354, 1370, 1377, 1411, 1440, 1456, 1457, 1465, 1473, 1474, 1492], "implic": [1342, 1457, 1467, 1498], "implicit": [97, 356, 357, 637, 641, 670, 1106, 1107, 1108, 1109, 1112, 1116, 1117, 1354, 1356, 1370, 1374, 1424, 1434, 1440, 1448, 1450, 1451, 1452, 1456, 1462, 1477, 1484, 1498, 1504, 1505], "implicit_function_theorem": 357, "implicitli": [356, 828, 1342, 1374, 1439, 1444, 1448, 1452, 1455, 1456, 1460, 1463, 1474, 1484, 1502, 1503], "import": [67, 83, 94, 97, 106, 112, 113, 118, 119, 120, 135, 136, 238, 242, 244, 248, 285, 289, 290, 293, 295, 296, 297, 305, 306, 315, 316, 381, 421, 423, 449, 456, 494, 495, 500, 501, 502, 503, 506, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 543, 586, 589, 591, 592, 620, 645, 668, 701, 720, 721, 725, 750, 778, 820, 897, 900, 921, 922, 923, 991, 998, 999, 1000, 1001, 1002, 1009, 1016, 1027, 1064, 1066, 1067, 1068, 1069, 1119, 1120, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1326, 1327, 1328, 1332, 1333, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1385, 1390, 1396, 1397, 1402, 1403, 1404, 1411, 1414, 1415, 1428, 1431, 1434, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1506, 1507], "importantli": [1449, 1459, 1466, 1470, 1475, 1498, 1500], "importerror": 1354, "impos": [1456, 1462], "imposs": [1052, 1342, 1369, 1377, 1444, 1445, 1462, 1467, 1484], "imprecis": 1348, "impress": 1449, "improv": [239, 381, 459, 460, 461, 462, 463, 464, 891, 1000, 1001, 1033, 1086, 1116, 1117, 1118, 1342, 1345, 1346, 1354, 1356, 1357, 1366, 1374, 1381, 1382, 1403, 1440, 1444, 1446, 1447, 1448, 1449, 1451, 1454, 1457, 1463, 1468, 1474, 1478, 1483, 1484, 1489, 1490, 1494, 1495, 1501, 1503], "impur": [82, 130, 1016, 1376, 1448, 1459], "impure1": 1346, "impure2": 1346, "impure_func": 1377, "impure_print_side_effect": 1462, "impure_saves_glob": 1462, "impure_uses_glob": 1462, "imshow": 1469, "in1": [290, 1106, 1107, 1108, 1109, 1112], "in1d": 1354, "in2": [290, 1106, 1107, 1108, 1109, 1112], "in_1_1": 290, "in_1_2": 290, "in_2_1": 290, "in_2_2": 290, "in_arr": 1441, "in_av": [248, 1348, 1371, 1374, 1385, 1415], "in_ax": [570, 1002, 1016, 1284, 1333, 1342, 1348, 1351, 1354, 1390, 1445, 1447, 1455, 1465, 1467, 1473, 1474, 1497, 1506], "in_axes_flat": 1348, "in_axi": [520, 521, 522, 523, 524, 525, 531], "in_axis_resourc": [1354, 1440], "in_batch": 72, "in_bia": 1503, "in_bind": 1348, "in_block_shap": 1484, "in_hbm": 1487, "in_index_map": 1484, "in_kernel": 1503, "in_layout": 1385, "in_part": 1354, "in_pspec": [135, 136, 1440], "in_ref": 1479, "in_shard": [83, 296, 489, 1354, 1361, 1371, 1385, 1402, 1411, 1415, 1440, 1470, 1472, 1495], "in_shardings_hlo": [1354, 1371, 1415], "in_shardings_jax": [1354, 1371, 1415], "in_slic": 1487, "in_spec": [140, 168, 178, 198, 316, 1283, 1378, 1381, 1447, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1495, 1500], "in_specs_tre": 1478, "in_sram": 1487, "in_tang": 495, "in_trac": 1348, "in_tre": [133, 134, 137, 196, 253, 1348, 1382, 1415, 1435, 1468], "in_tree2": 1348, "in_typ": [267, 1348], "in_uk": 1348, "in_unknown": 1348, "in_val": 1348, "inaccur": [802, 1354], "inaccuraci": 1444, "inadvert": [1354, 1370, 1456], "inc": [155, 170, 1490], "incident": 1502, "includ": [67, 69, 75, 97, 113, 143, 289, 291, 296, 397, 407, 434, 502, 536, 537, 538, 543, 549, 563, 568, 586, 592, 645, 650, 651, 661, 670, 671, 681, 701, 731, 750, 819, 831, 836, 842, 853, 854, 856, 858, 860, 861, 862, 888, 896, 902, 921, 922, 923, 931, 946, 948, 969, 987, 1002, 1003, 1013, 1015, 1097, 1151, 1286, 1287, 1331, 1337, 1342, 1345, 1350, 1354, 1357, 1360, 1361, 1362, 1366, 1369, 1370, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1385, 1389, 1390, 1396, 1397, 1411, 1414, 1415, 1428, 1431, 1434, 1435, 1439, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1454, 1455, 1456, 1459, 1460, 1461, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1484, 1485, 1487, 1489, 1490, 1495, 1496, 1497, 1500, 1502, 1503, 1506], "include_initi": [650, 651], "inclus": [335, 378, 572, 578, 1052, 1058, 1448, 1456], "incompat": [328, 617, 868, 906, 1344, 1345, 1354, 1364, 1370, 1371, 1374, 1428, 1444, 1448, 1450, 1451, 1457, 1462, 1464, 1465, 1475, 1476], "incomplet": [320, 384, 385, 1123, 1137, 1138, 1354, 1447], "inconclus": [1354, 1374], "inconclusivedimensionoper": 1374, "inconsist": [886, 889, 1354, 1435, 1449], "inconveni": [1382, 1451, 1468], "incorpor": [1457, 1480], "incorrect": [1019, 1342, 1354, 1356, 1369, 1377, 1384, 1444, 1445, 1455, 1462, 1467, 1474, 1479, 1487, 1494, 1495], "incorrect_sum": 1487, "incorrect_sum_kernel": 1487, "incorrectli": [1354, 1474, 1476, 1490], "increas": [67, 118, 131, 132, 171, 223, 239, 404, 458, 661, 891, 986, 1036, 1095, 1118, 1351, 1354, 1363, 1367, 1377, 1380, 1381, 1382, 1385, 1411, 1445, 1449, 1450, 1451, 1457, 1468, 1471, 1484, 1490, 1494], "increasingli": [1444, 1457], "increat": 985, "increment": [378, 1118, 1345, 1348, 1387, 1441, 1450, 1457, 1479, 1484, 1490, 1502], "incur": [67, 495, 1363, 1380, 1443, 1448, 1503], "ind": [814, 899, 950, 962, 966], "indbidx": 1354, "inde": [495, 1341, 1349, 1384, 1445, 1447, 1472, 1474, 1503], "indefinit": [1356, 1461, 1490], "indent": [1348, 1390], "indented_block": 1348, "independ": [239, 646, 723, 1049, 1105, 1342, 1354, 1359, 1369, 1415, 1442, 1451, 1455, 1457, 1467, 1474, 1475, 1484, 1493, 1496, 1498], "index": [5, 6, 10, 98, 120, 132, 137, 139, 141, 145, 148, 166, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 210, 220, 236, 237, 303, 307, 308, 315, 345, 362, 363, 364, 365, 366, 367, 378, 381, 387, 404, 431, 432, 433, 434, 459, 460, 461, 462, 463, 464, 474, 483, 486, 498, 500, 501, 502, 540, 580, 581, 582, 625, 654, 677, 679, 742, 750, 754, 762, 787, 840, 846, 849, 850, 864, 878, 881, 882, 899, 900, 917, 921, 925, 928, 941, 949, 950, 951, 962, 966, 982, 1002, 1005, 1064, 1067, 1068, 1069, 1095, 1333, 1346, 1354, 1359, 1360, 1361, 1366, 1369, 1370, 1371, 1374, 1378, 1384, 1390, 1396, 1404, 1414, 1415, 1424, 1428, 1434, 1441, 1449, 1456, 1461, 1470, 1474, 1475, 1478, 1480, 1483, 1484, 1487, 1488, 1490, 1491, 1493, 1506], "index_add": [1354, 1429, 1462], "index_check": [120, 1360, 1361], "index_dtyp": [211, 226, 228, 232, 236, 237, 307, 308], "index_exp": 921, "index_in_dim": [362, 473, 474], "index_map": [139, 149, 1354, 1478, 1480, 1484, 1485, 1487, 1490, 1493, 1494], "index_trick": [619, 841, 872, 902], "index_upd": [1354, 1429], "index_vector_dim": 1424, "indexerror": 1462, "indexexpress": [750, 921], "indexing_mod": [1478, 1485], "indic": [7, 8, 10, 39, 56, 67, 77, 80, 81, 82, 84, 98, 126, 127, 136, 145, 166, 167, 168, 178, 199, 208, 209, 210, 211, 217, 218, 220, 225, 226, 228, 232, 240, 241, 283, 289, 290, 293, 295, 296, 297, 303, 304, 305, 306, 313, 337, 339, 341, 343, 344, 345, 346, 347, 356, 357, 360, 362, 363, 364, 365, 366, 367, 381, 398, 406, 425, 426, 427, 431, 432, 433, 435, 436, 437, 449, 459, 460, 461, 462, 463, 464, 473, 483, 486, 493, 495, 498, 500, 501, 508, 538, 540, 554, 564, 582, 583, 584, 587, 588, 625, 637, 640, 641, 646, 654, 656, 657, 661, 664, 670, 700, 703, 723, 733, 750, 753, 754, 762, 764, 765, 767, 768, 770, 771, 772, 773, 774, 787, 799, 809, 811, 813, 814, 817, 832, 833, 840, 841, 846, 864, 866, 868, 872, 878, 881, 882, 887, 892, 899, 900, 906, 921, 924, 927, 928, 930, 937, 938, 941, 950, 951, 954, 961, 962, 965, 966, 969, 975, 976, 977, 978, 979, 980, 982, 988, 989, 998, 999, 1000, 1001, 1002, 1006, 1037, 1047, 1054, 1064, 1070, 1083, 1151, 1284, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1305, 1331, 1332, 1333, 1342, 1344, 1346, 1348, 1351, 1354, 1356, 1369, 1370, 1374, 1377, 1378, 1382, 1411, 1414, 1415, 1424, 1440, 1444, 1445, 1447, 1450, 1453, 1455, 1456, 1462, 1463, 1468, 1470, 1471, 1472, 1474, 1475, 1480, 1484, 1485, 1487, 1488, 1489, 1490, 1493, 1494, 1498, 1500, 1503, 1506], "indices_2d": 982, "indices_are_sort": [10, 56, 212, 381, 459, 460, 461, 462, 463, 464, 864, 950, 998, 999, 1000, 1001, 1354], "indices_dtyp": 241, "indices_flat": 906, "indices_i": 1494, "indices_j": 1494, "indices_k": 1494, "indices_or_sect": [590, 666, 743, 941, 992], "indices_sort": [199, 200], "indirect": [582, 878, 1348], "indirectli": [346, 1374, 1484], "indistinguish": 578, "individu": [94, 97, 139, 148, 910, 916, 1021, 1035, 1049, 1307, 1377, 1379, 1455, 1462, 1475, 1492, 1498, 1503], "indptr": [225, 240], "inductor": 1480, "industri": 1489, "indygreg": 1366, "ineffect": 1495, "ineffici": [223, 1342, 1346, 1382, 1467, 1468, 1490], "inefficient_perex_grad": 1342, "inequ": [1354, 1374], "inevit": [1377, 1480], "inexact": [10, 289, 381, 573, 574, 575, 576, 577, 579, 639, 642, 643, 675, 676, 678, 712, 738, 745, 821, 822, 823, 824, 845, 848, 864, 883, 886, 889, 894, 915, 933, 934, 936, 943, 950, 952, 953, 1376], "inf": [87, 120, 536, 549, 564, 574, 576, 577, 579, 716, 717, 764, 768, 770, 771, 772, 773, 789, 805, 810, 848, 908, 931, 1098, 1149, 1160, 1342, 1354, 1360, 1361, 1363, 1377, 1456, 1463, 1480], "infe": [1342, 1354, 1463], "infeed_p": 1354, "infer": [113, 296, 501, 544, 586, 592, 739, 740, 741, 742, 911, 1283, 1284, 1300, 1302, 1333, 1343, 1344, 1354, 1371, 1374, 1411, 1445, 1447, 1470, 1472, 1474, 1483, 1497, 1503, 1506], "infer_sharding_from_operand": [1378, 1402, 1501], "infer_vari": 1302, "inferfromarg": 1283, "infin": [332, 377, 456, 536, 715, 768, 770, 771, 772, 773, 931, 1155, 1396], "infiniband": 1461, "infinit": [391, 770, 772, 773, 848, 934, 1118, 1349, 1449], "infinitesim": 1377, "infix": [1348, 1349], "influenc": [541, 1484, 1507], "info": [267, 1116, 1117, 1118, 1354, 1371, 1378, 1381, 1473, 1501], "inform": [13, 83, 90, 98, 104, 178, 257, 283, 378, 380, 452, 493, 502, 504, 505, 506, 507, 510, 539, 541, 545, 552, 578, 584, 591, 701, 722, 724, 985, 994, 1003, 1010, 1011, 1062, 1066, 1086, 1116, 1117, 1118, 1288, 1307, 1348, 1354, 1356, 1357, 1360, 1363, 1366, 1367, 1370, 1371, 1374, 1377, 1378, 1381, 1387, 1390, 1396, 1428, 1431, 1434, 1435, 1439, 1440, 1444, 1447, 1454, 1456, 1459, 1462, 1464, 1469, 1470, 1471, 1474, 1475, 1479, 1480, 1484, 1485, 1487, 1496, 1498, 1500, 1506, 1507], "infrastructur": [1442, 1454, 1455, 1457, 1480, 1495], "infrequ": 1345, "infti": [391, 536, 746, 1024, 1025, 1030, 1031, 1033, 1034, 1043, 1046, 1048, 1053, 1059, 1060, 1126, 1128, 1130, 1131, 1133, 1136, 1138, 1140, 1141, 1142, 1143, 1145, 1147, 1149, 1155, 1156, 1159, 1165, 1170, 1171, 1180, 1182, 1188, 1189, 1196, 1197, 1203, 1204, 1217, 1236, 1239, 1252, 1254, 1269, 1270, 1275, 1342, 1463], "ing": [1363, 1479], "ingest": [1341, 1369, 1411], "ingredi": [1348, 1451, 1465, 1473, 1474], "inher": [687, 692, 1363, 1444], "inherit": [296, 424, 493, 1354, 1411, 1445, 1449, 1462], "init": [458, 1120, 1354, 1381, 1396, 1397, 1441, 1454, 1471, 1474, 1483, 1484, 1502], "init_adam_st": 1503, "init_arrai": 1484, "init_carri": [168, 1441], "init_ex": 1472, "init_fn": [1396, 1472], "init_fun": [1396, 1397, 1451], "init_lay": [1464, 1474], "init_mlp_param": 1506, "init_model": 1464, "init_network_param": [1465, 1473], "init_param_st": 1503, "init_train_st": 1503, "init_v": [378, 488, 1065, 1346, 1359], "init_valu": [441, 449, 1503], "initfn": 1396, "initi": [18, 34, 36, 40, 54, 168, 239, 357, 378, 449, 458, 488, 565, 566, 650, 651, 672, 673, 701, 836, 842, 853, 856, 858, 861, 896, 948, 1065, 1105, 1297, 1303, 1321, 1342, 1344, 1346, 1349, 1350, 1354, 1356, 1370, 1381, 1390, 1396, 1400, 1426, 1441, 1444, 1445, 1446, 1449, 1450, 1461, 1465, 1467, 1473, 1474, 1478, 1480, 1483, 1484, 1487, 1489, 1490, 1492, 1494, 1496, 1498, 1502, 1507], "initial_copi": 1490, "initial_guess": 357, "initial_left_copi": 1490, "initial_qdd": 262, "initial_right_copi": 1490, "initialization_timeout": 98, "initialize_cach": [1354, 1400], "initramf": 1496, "inject": [119, 1442, 1479], "inlin": [194, 257, 296, 1348, 1354, 1378, 1385, 1390, 1411, 1441, 1444, 1449, 1461, 1474, 1480, 1482], "inner": [132, 305, 415, 614, 670, 875, 1002, 1300, 1342, 1354, 1363, 1370, 1371, 1377, 1385, 1415, 1441, 1445, 1459, 1467, 1474, 1479, 1490, 1493, 1494, 1506], "inner_av": 1062, "inner_block_s": 1490, "inner_block_spec": 1490, "inner_grid": 1490, "inner_kernel": 1490, "inner_kernel_alloc": 1490, "inner_kernel_arg": 1490, "inner_param": 1474, "inner_pipeline_bodi": 1493, "inner_structur": 1300, "inner_treedef": [1300, 1324, 1354, 1506], "inner_xla_cal": 1348, "innermost": [816, 1487, 1488], "innocu": [82, 1363], "inp": [1382, 1434], "inp1": 1354, "inp2": 1354, "inp_data": 502, "inp_shard": 500, "inplac": [700, 725, 882, 899, 900, 969, 1069], "inpuat": 636, "input": [13, 61, 64, 67, 71, 73, 76, 77, 78, 80, 84, 91, 95, 113, 119, 135, 136, 137, 139, 143, 150, 168, 178, 198, 206, 207, 216, 223, 224, 228, 232, 243, 252, 257, 267, 283, 284, 288, 289, 290, 292, 295, 296, 298, 299, 300, 301, 304, 305, 306, 309, 310, 311, 312, 313, 314, 321, 322, 323, 324, 325, 331, 332, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 357, 359, 360, 362, 368, 372, 373, 375, 377, 380, 382, 383, 386, 387, 389, 391, 392, 397, 398, 404, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429, 430, 434, 435, 436, 437, 439, 449, 451, 452, 457, 458, 467, 468, 469, 470, 471, 472, 475, 478, 481, 482, 483, 484, 485, 494, 495, 500, 502, 507, 509, 510, 512, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 531, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559, 563, 564, 568, 570, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 586, 587, 588, 589, 591, 592, 595, 599, 600, 601, 606, 614, 616, 617, 618, 619, 621, 623, 627, 636, 637, 638, 639, 641, 642, 643, 644, 646, 648, 649, 655, 657, 658, 659, 660, 663, 664, 667, 669, 670, 674, 675, 676, 677, 678, 681, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 712, 714, 715, 716, 717, 720, 723, 725, 726, 729, 734, 735, 738, 742, 744, 746, 749, 751, 753, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 781, 782, 783, 784, 785, 786, 787, 788, 793, 794, 795, 796, 797, 799, 802, 805, 807, 808, 811, 813, 815, 817, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 833, 834, 836, 837, 838, 839, 840, 842, 843, 845, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 868, 869, 875, 876, 878, 879, 880, 881, 882, 883, 884, 886, 889, 890, 892, 894, 896, 898, 899, 900, 901, 902, 905, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 927, 928, 929, 930, 931, 933, 934, 936, 937, 939, 942, 943, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 985, 986, 987, 988, 989, 991, 994, 1002, 1016, 1026, 1032, 1071, 1072, 1073, 1074, 1077, 1078, 1080, 1081, 1082, 1089, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1125, 1127, 1128, 1129, 1135, 1136, 1139, 1141, 1142, 1148, 1149, 1151, 1157, 1160, 1245, 1265, 1266, 1283, 1284, 1285, 1286, 1287, 1295, 1296, 1305, 1307, 1309, 1311, 1312, 1331, 1333, 1341, 1342, 1344, 1345, 1346, 1349, 1350, 1351, 1354, 1356, 1359, 1366, 1369, 1370, 1371, 1376, 1377, 1378, 1379, 1381, 1382, 1385, 1390, 1396, 1397, 1402, 1403, 1411, 1414, 1415, 1424, 1431, 1434, 1435, 1439, 1441, 1442, 1448, 1449, 1451, 1453, 1456, 1459, 1460, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1478, 1479, 1480, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1497, 1498, 1500, 1502, 1503, 1504, 1505, 1506], "input_arg": 1494, "input_arr": 1490, "input_batching_dim": 1424, "input_buf": 1348, "input_buff": [1381, 1487], "input_data": [1361, 1381], "input_format": [1354, 1472], "input_handl": 1348, "input_layout": [283, 1354, 1378], "input_onesid": 1113, "input_output_alias": [178, 283, 1378, 1479, 1487, 1494], "input_ref": [168, 1490, 1494], "input_s": 1454, "input_shap": [500, 1441, 1451], "input_slic": 1381, "inputtyp": [267, 1354], "ins": [1341, 1460, 1475], "ins1": 1348, "ins2": 1348, "insert": [150, 304, 374, 423, 452, 569, 589, 591, 654, 661, 677, 750, 882, 921, 924, 1342, 1348, 1354, 1381, 1402, 1424, 1447, 1449, 1456, 1461, 1463, 1464, 1474, 1478, 1479, 1483, 1484, 1487, 1490, 1494, 1503], "inserted_window_dim": [459, 460, 1424], "insertionpoint": [1348, 1390], "insid": [0, 10, 67, 82, 83, 143, 209, 363, 489, 506, 701, 864, 891, 923, 1044, 1348, 1354, 1355, 1359, 1361, 1363, 1367, 1370, 1374, 1377, 1382, 1387, 1391, 1395, 1442, 1445, 1447, 1449, 1457, 1459, 1462, 1464, 1470, 1474, 1480, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1500, 1503, 1506], "insight": [1342, 1463, 1471, 1487], "insignific": 1349, "inspect": [81, 83, 248, 296, 503, 1342, 1344, 1347, 1354, 1371, 1377, 1378, 1382, 1390, 1391, 1402, 1411, 1441, 1449, 1461, 1462, 1463, 1468, 1470, 1474, 1475, 1498], "inspect_array_callback": 83, "inspir": [1395, 1452, 1475, 1476], "inst": 1348, "instal": [98, 397, 922, 923, 1003, 1354, 1357, 1371, 1377, 1378, 1383, 1387, 1457, 1461, 1465, 1495], "install_onli": 1366, "instanc": [0, 64, 69, 71, 76, 77, 79, 80, 97, 104, 194, 198, 250, 251, 253, 291, 292, 500, 502, 701, 750, 777, 913, 921, 1120, 1283, 1284, 1308, 1310, 1312, 1342, 1344, 1348, 1354, 1357, 1369, 1377, 1434, 1435, 1441, 1442, 1445, 1446, 1447, 1449, 1455, 1460, 1461, 1463, 1464, 1469, 1470, 1472, 1474, 1475, 1483, 1488, 1489, 1490, 1492, 1495, 1496, 1497, 1498, 1506], "instanti": [106, 701, 704, 969, 1342, 1348, 1381, 1428, 1447, 1455, 1467, 1483], "instantiate_const": 1348, "instantiate_const_output": 1354, "instead": [0, 10, 25, 67, 72, 76, 79, 80, 84, 98, 112, 113, 130, 136, 170, 239, 283, 306, 337, 345, 360, 381, 415, 424, 454, 459, 460, 503, 572, 583, 722, 724, 797, 864, 902, 917, 938, 950, 1002, 1017, 1047, 1089, 1110, 1116, 1117, 1162, 1307, 1342, 1344, 1346, 1347, 1348, 1349, 1353, 1354, 1356, 1361, 1363, 1366, 1368, 1369, 1370, 1371, 1374, 1377, 1378, 1380, 1382, 1385, 1390, 1395, 1396, 1400, 1402, 1411, 1424, 1428, 1429, 1431, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1457, 1460, 1462, 1463, 1464, 1465, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1496, 1498, 1501, 1502, 1503, 1504, 1505, 1506], "instruct": [150, 184, 337, 1349, 1354, 1366, 1367, 1381, 1384, 1387, 1390, 1483, 1487, 1489, 1490, 1495, 1496, 1506, 1507], "instrument": [1010, 1361, 1457, 1496], "insuffici": [98, 1354, 1377, 1487, 1490, 1495], "int": [5, 6, 7, 8, 9, 14, 22, 31, 32, 37, 38, 39, 44, 46, 48, 50, 51, 53, 55, 56, 57, 58, 60, 67, 76, 79, 81, 86, 93, 98, 114, 126, 131, 132, 139, 141, 142, 148, 149, 150, 155, 156, 157, 158, 159, 166, 168, 171, 173, 175, 176, 177, 178, 179, 183, 194, 199, 200, 201, 202, 203, 204, 205, 206, 209, 211, 215, 216, 217, 219, 220, 222, 223, 226, 228, 232, 237, 238, 239, 244, 250, 251, 255, 276, 277, 278, 281, 282, 283, 286, 289, 290, 292, 293, 294, 295, 296, 304, 305, 306, 307, 308, 311, 316, 318, 319, 320, 326, 327, 329, 330, 335, 337, 338, 341, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 358, 360, 362, 364, 365, 367, 369, 370, 371, 374, 376, 378, 384, 385, 387, 388, 389, 390, 393, 398, 402, 403, 406, 415, 423, 428, 431, 432, 433, 434, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 458, 473, 474, 475, 476, 477, 480, 486, 487, 491, 493, 497, 498, 503, 504, 508, 512, 519, 520, 521, 522, 523, 524, 525, 528, 531, 537, 538, 540, 563, 568, 569, 570, 571, 580, 581, 582, 583, 584, 585, 586, 589, 590, 591, 592, 595, 603, 604, 613, 632, 633, 634, 644, 645, 646, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 664, 666, 668, 670, 671, 672, 673, 677, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 705, 721, 723, 725, 726, 727, 728, 731, 733, 736, 737, 743, 747, 751, 753, 754, 762, 763, 780, 784, 787, 792, 800, 801, 805, 811, 813, 814, 815, 816, 817, 818, 819, 831, 832, 833, 835, 836, 838, 839, 842, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 868, 873, 874, 875, 876, 877, 878, 879, 880, 882, 885, 887, 888, 891, 896, 897, 898, 899, 900, 901, 906, 910, 912, 914, 916, 917, 919, 920, 927, 928, 929, 937, 938, 939, 941, 944, 945, 946, 948, 949, 950, 951, 954, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 969, 975, 976, 977, 978, 979, 980, 981, 984, 985, 986, 987, 988, 989, 990, 992, 995, 996, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1012, 1017, 1018, 1023, 1026, 1035, 1037, 1044, 1047, 1049, 1050, 1051, 1052, 1054, 1071, 1072, 1073, 1074, 1075, 1082, 1084, 1088, 1092, 1093, 1094, 1099, 1100, 1103, 1104, 1105, 1110, 1111, 1112, 1113, 1114, 1115, 1121, 1148, 1149, 1151, 1152, 1153, 1154, 1160, 1162, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1329, 1331, 1333, 1334, 1344, 1346, 1348, 1354, 1356, 1364, 1366, 1374, 1377, 1385, 1411, 1415, 1424, 1434, 1435, 1439, 1441, 1444, 1445, 1447, 1451, 1456, 1460, 1461, 1470, 1478, 1480, 1483, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1498, 1500, 1502, 1503, 1505, 1506], "int128": 1456, "int16": [61, 263, 668, 767, 1354, 1456, 1505], "int2": 263, "int256": 1451, "int32": [72, 74, 97, 179, 199, 211, 226, 228, 232, 236, 237, 242, 263, 296, 311, 315, 316, 362, 363, 364, 381, 387, 401, 402, 423, 452, 473, 474, 486, 508, 559, 562, 569, 570, 571, 572, 580, 581, 582, 583, 584, 586, 589, 592, 595, 599, 600, 604, 605, 610, 612, 616, 618, 619, 620, 625, 626, 627, 632, 633, 634, 636, 638, 644, 646, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 667, 668, 669, 670, 671, 673, 677, 679, 680, 700, 703, 705, 706, 707, 715, 716, 717, 718, 719, 721, 723, 725, 726, 727, 728, 729, 740, 744, 747, 749, 751, 754, 762, 767, 776, 777, 779, 781, 782, 783, 784, 787, 792, 799, 802, 803, 806, 813, 816, 817, 832, 833, 834, 835, 836, 837, 841, 842, 843, 847, 849, 850, 868, 872, 874, 875, 877, 878, 880, 881, 882, 884, 890, 894, 896, 897, 898, 899, 902, 905, 906, 907, 909, 910, 911, 912, 913, 914, 916, 919, 924, 925, 927, 928, 938, 943, 944, 945, 947, 948, 951, 954, 955, 956, 957, 960, 961, 962, 963, 964, 965, 966, 969, 975, 976, 977, 978, 979, 980, 982, 984, 986, 989, 990, 993, 994, 996, 998, 999, 1000, 1001, 1035, 1050, 1052, 1064, 1066, 1067, 1068, 1069, 1102, 1245, 1304, 1307, 1312, 1344, 1346, 1348, 1354, 1359, 1360, 1364, 1370, 1371, 1374, 1376, 1381, 1414, 1439, 1441, 1446, 1451, 1452, 1454, 1455, 1456, 1459, 1460, 1462, 1464, 1466, 1470, 1475, 1476, 1480, 1484, 1485, 1488, 1490, 1493, 1494, 1499, 1500, 1505, 1506], "int4": [263, 767, 1489], "int64": [263, 620, 668, 759, 767, 897, 1035, 1050, 1052, 1348, 1354, 1364, 1441, 1456, 1462, 1505], "int64_t": 1378, "int8": [61, 263, 668, 767, 1354, 1456, 1484, 1492, 1505], "int_": [1127, 1128, 1131, 1155, 1170, 1171, 1180, 1182, 1188, 1189, 1196, 1197, 1203, 1204, 1217, 1236, 1239, 1252, 1254, 1269, 1270, 1275], "int_0": [958, 1075, 1123, 1135, 1136, 1137, 1161], "int_1": 1161, "int_liter": 1447, "int_smin": [359, 451], "int_typ": 748, "int_x": [1130, 1133, 1138], "integ": [63, 73, 143, 178, 206, 209, 216, 217, 219, 220, 236, 239, 250, 251, 255, 280, 283, 289, 290, 291, 292, 293, 295, 296, 298, 305, 306, 311, 315, 316, 322, 323, 324, 325, 326, 328, 332, 334, 341, 342, 343, 344, 345, 346, 347, 359, 363, 377, 378, 379, 381, 387, 389, 415, 420, 423, 429, 430, 431, 432, 433, 434, 435, 436, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 456, 458, 466, 467, 468, 469, 470, 475, 483, 486, 494, 498, 503, 536, 549, 554, 570, 572, 580, 581, 582, 583, 584, 586, 590, 602, 604, 605, 606, 610, 612, 617, 623, 625, 645, 648, 649, 650, 651, 654, 659, 661, 663, 666, 677, 680, 681, 683, 685, 686, 689, 690, 691, 694, 695, 697, 699, 701, 702, 703, 705, 712, 714, 715, 718, 719, 721, 723, 725, 726, 729, 733, 740, 742, 743, 747, 751, 763, 767, 777, 782, 783, 784, 787, 801, 805, 813, 814, 816, 819, 832, 845, 849, 850, 851, 852, 857, 865, 866, 868, 877, 878, 879, 880, 883, 885, 894, 896, 906, 908, 909, 910, 911, 914, 915, 916, 919, 920, 929, 931, 932, 937, 938, 940, 941, 943, 944, 948, 950, 951, 954, 955, 956, 957, 967, 968, 982, 983, 984, 985, 991, 992, 994, 998, 999, 1000, 1001, 1002, 1005, 1006, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1070, 1071, 1072, 1073, 1074, 1104, 1116, 1117, 1118, 1121, 1134, 1136, 1140, 1148, 1158, 1176, 1177, 1178, 1179, 1216, 1265, 1266, 1284, 1306, 1331, 1333, 1342, 1348, 1351, 1354, 1359, 1364, 1370, 1371, 1374, 1376, 1396, 1397, 1424, 1431, 1441, 1444, 1451, 1453, 1455, 1457, 1460, 1462, 1463, 1472, 1480, 1484, 1485, 1487, 1488, 1489, 1490, 1493, 1494, 1503, 1505], "integer_pow": [430, 894, 943], "integerarrai": [1032, 1052], "integertyp": 1348, "integr": [320, 767, 845, 885, 888, 958, 1123, 1130, 1131, 1133, 1135, 1137, 1138, 1154, 1155, 1161, 1211, 1212, 1213, 1341, 1353, 1354, 1444, 1471, 1480], "intellisens": 1444, "intend": [357, 1345, 1354, 1364, 1369, 1396, 1397, 1435, 1448, 1452, 1453, 1459, 1470, 1499], "intens": [131, 132, 1377, 1484, 1490, 1492, 1503], "intent": [1354, 1356, 1366, 1446, 1450], "intention": [239, 1016, 1345, 1362, 1376, 1455, 1472], "intenum": 1354, "inter": [341, 343, 344, 345, 347, 1461, 1474, 1500], "interact": [81, 245, 1342, 1344, 1354, 1366, 1378, 1382, 1442, 1445, 1449, 1456, 1459, 1463, 1468, 1475, 1477, 1480, 1484, 1488, 1494, 1496], "intercept": 1348, "interchang": [1342, 1467, 1475, 1503], "interchip": 1490, "interconnect": [1369, 1461, 1474, 1490], "interest": [493, 1342, 1349, 1350, 1352, 1369, 1378, 1382, 1441, 1448, 1449, 1451, 1452, 1456, 1461, 1463, 1467, 1468, 1470, 1480, 1483, 1484, 1487, 1489, 1496, 1498, 1503], "interestingli": [1342, 1377, 1385, 1447, 1467], "interfac": [0, 98, 283, 284, 327, 586, 592, 720, 721, 726, 991, 1105, 1116, 1117, 1309, 1311, 1343, 1348, 1354, 1359, 1366, 1375, 1390, 1414, 1431, 1435, 1441, 1444, 1448, 1452, 1460, 1469, 1475, 1484], "interfer": [1363, 1366, 1442, 1498], "interior": 423, "interleav": [1354, 1442, 1474, 1490], "intermedi": [67, 75, 83, 91, 178, 489, 503, 671, 1342, 1344, 1346, 1348, 1356, 1360, 1363, 1370, 1371, 1374, 1376, 1377, 1379, 1382, 1390, 1441, 1443, 1445, 1446, 1459, 1460, 1462, 1463, 1466, 1467, 1468, 1470, 1471, 1474, 1479, 1483, 1487, 1489, 1493, 1506], "intermediate_dtyp": 1445, "intermitt": 1356, "intern": [67, 81, 109, 110, 111, 199, 248, 357, 481, 483, 503, 506, 543, 804, 808, 1023, 1086, 1307, 1308, 1309, 1310, 1311, 1341, 1342, 1343, 1344, 1346, 1348, 1349, 1354, 1356, 1357, 1359, 1368, 1370, 1371, 1377, 1378, 1379, 1382, 1385, 1389, 1416, 1425, 1440, 1444, 1446, 1447, 1449, 1452, 1455, 1459, 1460, 1462, 1466, 1467, 1468, 1479, 1490, 1496, 1503, 1506], "internet": 1366, "interoper": [1341, 1371, 1372, 1438], "interp_rot": 1120, "interplai": 1503, "interpol": [291, 292, 761, 857, 859, 879, 901, 1103, 1120, 1354, 1423], "interpret": [113, 178, 250, 251, 337, 363, 366, 508, 721, 1010, 1103, 1113, 1308, 1344, 1345, 1350, 1354, 1366, 1367, 1371, 1375, 1377, 1378, 1390, 1441, 1445, 1454, 1455, 1462, 1467, 1474, 1478, 1485, 1487, 1488, 1489, 1498, 1503, 1506], "interpret_op": 1349, "intersect": [762, 927, 928, 975], "intersect1d": [927, 928, 975, 1354, 1448], "interspers": [1002, 1411], "interv": [531, 572, 573, 575, 661, 819, 1057, 1279, 1280], "intric": 1341, "introduc": [67, 223, 257, 554, 1345, 1346, 1348, 1349, 1352, 1354, 1360, 1361, 1369, 1374, 1377, 1431, 1440, 1441, 1444, 1446, 1447, 1448, 1449, 1451, 1455, 1456, 1457, 1460, 1462, 1471, 1474, 1479, 1480, 1483, 1484, 1490, 1503, 1506], "introduct": [76, 79, 131, 198, 311, 1336, 1337, 1338, 1342, 1343, 1349, 1352, 1376, 1378, 1389, 1430, 1444, 1463, 1471, 1475, 1481, 1503], "introductori": [1350, 1462], "introspect": [1376, 1466], "intuit": [917, 1361, 1363, 1447, 1474, 1479, 1488, 1492], "inu": 1363, "inv": [789, 801, 807, 1084], "inv_a": 801, "inval": [1348, 1466], "invalid": [894, 950, 951, 1066, 1344, 1346, 1354, 1374, 1377, 1378, 1456, 1462, 1465, 1473, 1490], "invalidargu": 1378, "invalidargumenterror": [1456, 1496], "invar": [257, 258, 1385, 1441, 1466], "invari": [109, 356, 776, 1302, 1354, 1356, 1396, 1451, 1452, 1474], "invers": [119, 292, 300, 310, 314, 323, 350, 370, 472, 485, 573, 574, 575, 576, 577, 579, 642, 643, 677, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 719, 763, 797, 801, 807, 814, 821, 876, 906, 933, 936, 944, 945, 952, 953, 976, 977, 978, 979, 980, 981, 982, 984, 1071, 1072, 1073, 1074, 1089, 1104, 1113, 1114, 1116, 1117, 1118, 1129, 1156, 1169, 1181, 1186, 1201, 1227, 1240, 1243, 1253, 1258, 1278, 1301, 1354, 1377, 1396, 1424, 1462], "inverse_indic": [977, 978, 979], "inverse_jaxpr": 1466, "inverse_registri": 1466, "inverse_time_decai": 1396, "invert": [323, 324, 356, 607, 609, 769, 797, 807, 814, 828, 981, 1084, 1089], "invest": 1480, "investig": 1358, "invis": [1363, 1442], "invoc": [139, 150, 245, 1344, 1370, 1374, 1385, 1390, 1415, 1435, 1441, 1461, 1483, 1484, 1485, 1487, 1488, 1489, 1490], "invocation_indic": 1485, "invok": [13, 130, 178, 268, 424, 1016, 1342, 1344, 1349, 1366, 1371, 1374, 1377, 1390, 1415, 1459, 1462, 1463, 1472, 1487, 1488, 1492], "involv": [13, 61, 67, 69, 77, 80, 91, 112, 245, 255, 290, 503, 784, 1333, 1341, 1342, 1344, 1346, 1348, 1351, 1354, 1356, 1359, 1363, 1366, 1368, 1370, 1374, 1377, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1453, 1454, 1456, 1461, 1463, 1467, 1471, 1474, 1475, 1478, 1479, 1480, 1484, 1487, 1489, 1490, 1492, 1502, 1503], "io": [820, 1348, 1376, 1377, 1387, 1461, 1492], "io_callback": [82, 1016, 1354, 1377, 1459], "iota": [330, 572, 1454, 1488], "iota_2d_kernel": 1485, "iota_dimens": 1454, "iota_kernel": 1488, "ip": [98, 1390], "ipykernel_24415": 1382, "ipykernel_24980": 1342, "ipykernel_25069": 1459, "ipykernel_25504": 1390, "ipykernel_26740": 1359, "ipykernel_28452": 1378, "ipykernel_28720": 1475, "ipykernel_28938": 1460, "ipykernel_29108": 1462, "ipykernel_29358": 1346, "ipykernel_29839": 1467, "ipykernel_launch": 1390, "ipynb": 1473, "ipython": [1342, 1354, 1356, 1377, 1456, 1462, 1463, 1468, 1475, 1496], "ir": [284, 337, 1344, 1348, 1354, 1358, 1390, 1441, 1446, 1474, 1480, 1484], "ir_const": [1348, 1385], "irfft": [684, 694, 695, 696, 698, 1354, 1424], "irfft2": [695, 697, 1354], "irfftn": [693, 694, 696, 699, 1354], "irregular": [958, 1075], "irrelev": [730, 1348], "irvalu": 1385, "is_": 1348, "is_cache_first_us": 268, "is_caus": [508, 1503], "is_converg": 403, "is_custom_cal": 1415, "is_dir": 1381, "is_end": 1494, "is_equivalent_to": 1434, "is_even": 1359, "is_finit": [1360, 1363], "is_first_cycl": 1381, "is_first_devic": 1381, "is_forward_compat": 1371, "is_fully_address": [1434, 1440], "is_fully_repl": 1434, "is_hermitian": 403, "is_high": 257, "is_initi": 1400, "is_invocable_r_v": 1378, "is_known": 1348, "is_last_devic": 1381, "is_leaf": [1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1305, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1354, 1506], "is_leaf_takes_path": [1292, 1294, 1296, 1316, 1318, 1320], "is_literal": 1385, "is_loc": [29, 1434], "is_nonzero": 1494, "is_norm": 1153, "is_opaque_dtyp": 1354, "is_poly_dim": 1354, "is_readi": 1354, "is_ref": 63, "is_schedul": 1378, "is_sourc": 134, "is_stabl": [475, 476, 1354], "is_start": [1490, 1494], "is_start_of_kernel": 1490, "is_supported_dtyp": 1354, "is_symbolic_dim": 1354, "is_train": [67, 1443], "is_undefined_prim": 1390, "is_unknown": 1348, "is_user_file_cach": 1390, "isalignedstruct": 668, "isclos": [564, 1354], "iscomplex": [766, 774], "iscomplexobj": [765, 775], "isdtyp": 777, "isf": [1180, 1182, 1183, 1184, 1185, 1186, 1187, 1239, 1241, 1242, 1243, 1244, 1252, 1254, 1255, 1256, 1257, 1258, 1259], "isfinit": [391, 770, 771, 772, 773, 1360, 1363], "isin": 1354, "isinf": [391, 768, 771, 772, 773], "isinst": [0, 778, 1348, 1349, 1354, 1377, 1385, 1390, 1439, 1440, 1444, 1452, 1475, 1497, 1506], "isn": [1342, 1347, 1348, 1350, 1354, 1359, 1369, 1377, 1378, 1382, 1447, 1449, 1451, 1453, 1455, 1456, 1463, 1467, 1468, 1476, 1480, 1496, 1501, 1502], "isnan": [391, 768, 770, 772, 773, 848, 1362, 1462], "isneginf": [768, 770, 771, 773, 848], "isol": [1342, 1366, 1467, 1474], "isomorph": [1342, 1396, 1467], "ispec": 1495, "isposinf": [768, 770, 771, 772, 848], "isreal": 775, "isrealobj": [765, 766, 774], "isscalar": [1354, 1439], "issu": [150, 165, 172, 669, 776, 976, 1341, 1345, 1348, 1354, 1356, 1357, 1359, 1369, 1370, 1377, 1378, 1382, 1384, 1385, 1387, 1444, 1445, 1446, 1447, 1448, 1449, 1453, 1455, 1456, 1458, 1461, 1462, 1468, 1475, 1479, 1483, 1487, 1489, 1490, 1498], "issubdtyp": [106, 1348, 1354, 1376, 1455], "issubsctyp": 1354, "ist": 1363, "istft": 1114, "itali": 1462, "item": [502, 604, 721, 726, 1303, 1306, 1342, 1348, 1354, 1446, 1456, 1462, 1465, 1467, 1473, 1475, 1503], "item_shap": 1484, "items": [321, 1483, 1484, 1492], "iter": [116, 117, 121, 122, 123, 124, 125, 168, 178, 239, 263, 296, 378, 403, 458, 488, 503, 570, 724, 1002, 1094, 1104, 1105, 1116, 1117, 1118, 1288, 1301, 1303, 1305, 1308, 1310, 1325, 1328, 1348, 1367, 1377, 1380, 1381, 1382, 1387, 1396, 1411, 1441, 1444, 1448, 1457, 1462, 1468, 1470, 1471, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1497, 1498, 1503, 1506], "iter_operand": 1462, "itertool": [1348, 1354, 1480], "itr": 1487, "its": [18, 64, 67, 69, 71, 73, 75, 76, 77, 80, 81, 83, 97, 131, 132, 137, 180, 239, 268, 297, 337, 340, 344, 348, 357, 380, 386, 398, 401, 407, 408, 439, 454, 455, 458, 460, 461, 462, 463, 464, 481, 486, 501, 503, 508, 531, 557, 584, 591, 671, 687, 692, 701, 722, 724, 752, 763, 788, 885, 897, 916, 917, 923, 924, 940, 957, 969, 982, 998, 999, 1000, 1001, 1002, 1011, 1016, 1026, 1047, 1049, 1052, 1066, 1080, 1085, 1091, 1092, 1100, 1113, 1114, 1116, 1117, 1118, 1292, 1294, 1310, 1333, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1352, 1353, 1354, 1356, 1359, 1360, 1361, 1363, 1366, 1367, 1369, 1376, 1377, 1378, 1379, 1381, 1382, 1384, 1385, 1389, 1390, 1397, 1398, 1403, 1411, 1425, 1428, 1431, 1434, 1435, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1468, 1470, 1471, 1472, 1474, 1475, 1479, 1480, 1483, 1484, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1497, 1498, 1500, 1502, 1503, 1504, 1506], "itself": [360, 623, 668, 714, 1100, 1296, 1348, 1354, 1361, 1366, 1376, 1378, 1382, 1383, 1385, 1390, 1444, 1446, 1448, 1452, 1458, 1459, 1468, 1474, 1479, 1480, 1487, 1494, 1503], "iv": 1350, "j": [315, 316, 586, 592, 614, 636, 637, 641, 643, 645, 670, 682, 683, 685, 687, 688, 689, 690, 692, 696, 697, 699, 753, 793, 794, 795, 832, 866, 883, 889, 892, 915, 918, 930, 936, 939, 942, 943, 953, 967, 988, 989, 1086, 1088, 1096, 1100, 1102, 1113, 1342, 1366, 1378, 1382, 1402, 1441, 1445, 1447, 1461, 1462, 1467, 1468, 1474, 1480, 1485, 1487, 1488, 1490, 1492, 1494], "j1": 1376, "j12": 1366, "j_": 1376, "j_1": 1376, "j_dict": [1342, 1467], "jac": 1104, "jacfun": [1342, 1467], "jacfwd": [1348, 1390, 1475], "jacobi": 1354, "jacobian": [80, 293, 295, 297, 357, 495, 1104, 1332, 1349, 1379, 1382, 1390, 1443, 1463, 1468, 1475, 1497, 1506], "jacrev": [294, 1475], "jake": [1352, 1448, 1455, 1456], "jakevdp": [1444, 1446, 1452], "januari": [1365, 1445], "jargon": [1348, 1349], "jax": [1335, 1336, 1338, 1339, 1340, 1343, 1344, 1346, 1347, 1351, 1355, 1356, 1358, 1359, 1364, 1365, 1370, 1372, 1374, 1376, 1378, 1379, 1380, 1381, 1385, 1387, 1445, 1447, 1452, 1453, 1465, 1472, 1473, 1474, 1476, 1477, 1479, 1481, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1499, 1500, 1502, 1503, 1504], "jax2tf": [505, 506, 1354, 1371, 1373, 1415], "jax2tf_associative_scan_reduct": [1354, 1356], "jax2tf_default_experimental_native_low": 1354, "jax2tf_default_native_seri": 1356, "jax2tf_native_seri": 1354, "jax_accelerator_count": 1366, "jax_arrai": [1354, 1440, 1452, 1462], "jax_array_garbage_collection_guard": 1356, "jax_array_migr": 1354, "jax_array_new": 1462, "jax_backend_target": 1356, "jax_bcoo_cusparse_low": 1356, "jax_cach": [1381, 1495], "jax_captured_constants_report_fram": 1356, "jax_captured_constants_warn_byt": 1356, "jax_check_positive_even": 1359, "jax_check_proxy_env": 1356, "jax_check_tracer_leak": [65, 66, 1356, 1370], "jax_compilation_cache_dir": [1356, 1381, 1495], "jax_compilation_cache_expect_pgl": [1356, 1381], "jax_compilation_cache_include_metadata_in_kei": 1356, "jax_compilation_cache_max_s": [1354, 1356], "jax_compiler_detailed_logging_min_op": 1356, "jax_compiler_enable_remat_pass": [1356, 1380], "jax_coordination_servic": 1354, "jax_cpp_pmap": 1354, "jax_cpu_collectives_implement": [1354, 1356], "jax_cpu_enable_async_dispatch": [1354, 1356], "jax_cpu_enable_gloo_collect": [1354, 1356], "jax_cpu_get_global_topology_timeout_minut": 1356, "jax_cpu_get_local_topology_timeout_minut": 1356, "jax_cross_host_transfer_socket_address": 1356, "jax_cross_host_transfer_timeout_second": 1356, "jax_cross_host_transfer_transfer_s": 1356, "jax_cross_host_transport_address": 1356, "jax_cuda_releas": 1384, "jax_cuda_visible_devic": [1354, 1356], "jax_custom_vjp_disable_shape_check": 1356, "jax_data_dependent_tracing_fallback": 1354, "jax_debug_inf": [87, 1356], "jax_debug_key_reus": [1356, 1370, 1404], "jax_debug_log_modul": [1356, 1371, 1495], "jax_debug_nan": [88, 1356, 1360, 1462], "jax_default_devic": [90, 1356], "jax_default_matmul_precis": [91, 1356], "jax_default_prng_impl": [92, 1017, 1037, 1356, 1431], "jax_disable_jit": [1356, 1360], "jax_disable_most_optim": 1356, "jax_disable_vmap_shmap_error": 1356, "jax_disallow_mesh_context_manag": 1356, "jax_distributed_debug": 1356, "jax_dump_ir_mod": 1356, "jax_dump_ir_to": [1354, 1356, 1371, 1374], "jax_dynamic_shap": 1356, "jax_eager_pmap": 1354, "jax_enable_check": [109, 1356], "jax_enable_compilation_cach": [68, 1356, 1381], "jax_enable_custom_prng": [110, 1356], "jax_enable_custom_vjp_by_custom_transpos": [111, 1356], "jax_enable_memori": 1354, "jax_enable_pgl": [1356, 1381], "jax_enable_recover": 1356, "jax_enable_x64": [721, 913, 1018, 1020, 1021, 1022, 1024, 1025, 1028, 1030, 1031, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1354, 1356, 1357, 1364, 1366, 1385, 1456, 1462], "jax_error_checking_behavior_divid": 1356, "jax_error_checking_behavior_nan": 1356, "jax_error_checking_behavior_oob": 1356, "jax_exec_time_optimization_effort": [1354, 1356], "jax_experimental_name_stack": 1354, "jax_experimental_unsafe_xla_runtime_error": 1356, "jax_explain_cache_miss": [1356, 1495], "jax_export_calling_convention_vers": [1356, 1371], "jax_export_ignore_forward_compat": [1356, 1371], "jax_fn": 112, "jax_gpu_magma_path": 397, "jax_high_dynamic_range_gumbel": 1356, "jax_hlo_source_file_canonicalization_regex": 1356, "jax_host_callback_ad_transform": 1354, "jax_host_callback_legaci": 1354, "jax_hypothesis_profil": 1366, "jax_include_debug_info_in_dump": 1356, "jax_include_full_tracebacks_in_loc": 1356, "jax_ir0_jit_sin_export": 1371, "jax_ir1_jit_sin_compil": 1371, "jax_ir2_jit_call_exported_compil": 1371, "jax_ir3_jit_my_fun_export": 1371, "jax_jit": 1460, "jax_jit_pjit_api_merg": 1354, "jax_legacy_prng_kei": [1356, 1455], "jax_log_checkpoint_residu": 1356, "jax_log_compil": [499, 1356], "jax_logging_level": [1356, 1495], "jax_memory_fitting_effort": [1354, 1356], "jax_memory_fitting_level": 1356, "jax_mock_gpu_topologi": [1356, 1495], "jax_mosaic_allow_hlo": 1356, "jax_mutable_array_check": [1346, 1356], "jax_new_checkpoint": 1443, "jax_no_trac": [556, 1356], "jax_num_cpu_devic": [1354, 1356, 1461, 1470, 1500], "jax_num_generated_cas": 1366, "jax_numpy_dtype_promot": [1356, 1505], "jax_numpy_rank_promot": [997, 1354, 1356, 1499], "jax_omnistag": 1454, "jax_optimization_level": 1356, "jax_pallas_dump_promela_to": 1356, "jax_pallas_enable_debug_check": 1356, "jax_pallas_use_mosaic_gpu": 1356, "jax_pallas_verbose_error": 1356, "jax_parallel_functions_output_gda": 1354, "jax_persistent_cache_enable_xla_cach": [1356, 1495], "jax_persistent_cache_min_compile_time_sec": [1354, 1356, 1495], "jax_persistent_cache_min_entry_size_byt": [1356, 1495], "jax_pgle_aggregation_percentil": [1356, 1381], "jax_pgle_profiling_run": [1356, 1381], "jax_pjrt_client_create_opt": 1356, "jax_platform": [1354, 1356, 1377], "jax_platform_nam": 1356, "jax_pmap_no_rank_reduct": [1354, 1356], "jax_pmap_shmap_merg": 1356, "jax_pprint_use_color": 1356, "jax_ragged_dot_use_ragged_dot_instruct": 1356, "jax_raise_persistent_cache_error": [1354, 1356], "jax_random_seed_offset": 1356, "jax_releas": 1354, "jax_remove_custom_partitioning_ptr_from_cache_kei": [1356, 1378], "jax_rocm_visible_devic": 1356, "jax_safer_randint": 1356, "jax_serialization_vers": 1354, "jax_share_binary_between_host": 1356, "jax_share_binary_between_hosts_timeout_m": 1356, "jax_skip_cuda_constraints_check": 1384, "jax_skip_slow_test": [1354, 1366], "jax_softmax_custom_jvp": 1356, "jax_tests_per_acceler": 1366, "jax_threefry_gpu_kernel_low": [1354, 1356], "jax_threefry_partition": [1354, 1356, 1431], "jax_traceback_filt": [1354, 1356, 1366], "jax_traceback_in_locations_limit": 1356, "jax_tracer_error_num_traceback_fram": 1356, "jax_transfer_guard": [1356, 1504], "jax_transfer_guard_device_to_devic": 1356, "jax_transfer_guard_device_to_host": 1356, "jax_transfer_guard_host_to_devic": [1356, 1504], "jax_triton_compile_via_xla": 1354, "jax_typ": 1348, "jax_use_direct_linear": [1356, 1368], "jax_use_magma": [397, 404, 1356], "jax_use_pjrt_c_api_on_tpu": 1354, "jax_use_shardy_partition": [1356, 1501], "jax_use_simplified_const": 1385, "jax_use_simplified_jaxpr_const": [1356, 1385], "jax_xla_backend": 1356, "jax_xla_profile_vers": 1356, "jaxcomputationbuild": 1390, "jaxexporttest": 1371, "jaxircontext": 1390, "jaxjob": 1461, "jaxlib": [1371, 1378, 1381, 1385, 1390, 1435, 1446, 1458, 1475, 1495], "jaxlib_extension_vers": 1457, "jaxlib_nightly_cuda12_releas": 1384, "jaxlib_vers": 1371, "jaxopt": [1353, 1448], "jaxpr": [256, 296, 424, 503, 1342, 1343, 1344, 1349, 1352, 1354, 1374, 1375, 1378, 1379, 1382, 1385, 1435, 1445, 1446, 1447, 1449, 1459, 1462, 1463, 1468, 1470, 1474, 1475], "jaxpr1": 1348, "jaxpr1_typ": 1348, "jaxpr1ti": 1348, "jaxpr2": 1348, "jaxpr2_typ": 1348, "jaxpr2ti": 1348, "jaxpr_as_fun": [1348, 1354], "jaxpr_const_arg": 1385, "jaxpr_eqn_ctx": 1390, "jaxpr_subcomp": [1348, 1385], "jaxpr_typ": 1348, "jaxpr_util": 1354, "jaxprbuild": 1348, "jaxpreqn": [257, 1348, 1354], "jaxpreqncontext": [258, 1390], "jaxpreqnrecip": 1348, "jaxprrecip": 1348, "jaxprti": 1348, "jaxprtrac": [1348, 1390], "jaxprtyp": 1348, "jaxruntimeerror": [118, 119, 120, 1354, 1370], "jaxspars": 243, "jaxstacktracebeforetransform": [1354, 1390], "jaxtestcas": 1354, "jaxtestload": 1354, "jaxtyp": [1396, 1444, 1449], "jekbradburi": 1445, "jep": [1341, 1345, 1354, 1358, 1416, 1431, 1439, 1444, 1447, 1474, 1477, 1498], "jet": [1354, 1398], "jex": 1446, "ji": 670, "jinja2": 1465, "jit": [10, 67, 83, 87, 88, 90, 97, 112, 118, 119, 120, 126, 128, 129, 178, 209, 220, 248, 305, 306, 363, 378, 379, 380, 422, 458, 488, 489, 499, 500, 503, 506, 556, 584, 604, 632, 638, 654, 655, 659, 677, 679, 722, 724, 762, 776, 804, 820, 834, 840, 846, 864, 868, 905, 906, 910, 911, 917, 918, 927, 928, 944, 949, 956, 957, 975, 976, 977, 978, 979, 980, 998, 999, 1000, 1001, 1002, 1016, 1105, 1304, 1307, 1308, 1309, 1312, 1342, 1344, 1345, 1346, 1350, 1351, 1352, 1353, 1354, 1355, 1360, 1362, 1363, 1367, 1370, 1371, 1374, 1376, 1378, 1379, 1381, 1382, 1385, 1389, 1400, 1404, 1411, 1414, 1415, 1428, 1431, 1434, 1435, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1451, 1452, 1454, 1456, 1457, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1476, 1480, 1488, 1489, 1490, 1492, 1494, 1495, 1497, 1498, 1501, 1502, 1503, 1505, 1506, 1507], "jit__unnamed_wrapped_funct": 1378, "jit_bincount": 604, "jit_bind": 1371, "jit_delet": 654, "jit_f": [1344, 1454], "jit_of_checkifi": 1361, "jit_p": 1354, "jit_repeat": 910, "jit_rms_norm_cross_platform": 1378, "jit_rms_norm_shmap": 1378, "jit_select_tril": 1454, "jit_setdiff1d": 927, "jit_union1d": 975, "jit_uniqu": 976, "jittabl": 1356, "jittable_f": [1360, 1361], "jitted_batch_convolv": 1351, "jitter": [1445, 1484], "jittrac": [97, 1304, 1359, 1360, 1376, 1390, 1459, 1460, 1462, 1475], "jitwrap": [296, 1411], "jj": 640, "jk": [670, 671, 1382], "jkm": [813, 954], "jlk": 670, "jmlr": 1396, "jmp": 1387, "jn": 645, "jnp": [0, 10, 61, 67, 72, 74, 76, 77, 78, 79, 80, 83, 106, 112, 113, 118, 120, 126, 128, 129, 159, 199, 238, 239, 242, 244, 248, 290, 293, 295, 296, 311, 315, 316, 328, 337, 362, 363, 364, 365, 366, 367, 381, 387, 415, 421, 423, 452, 456, 459, 460, 473, 474, 481, 486, 495, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 540, 543, 544, 559, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 590, 592, 595, 599, 600, 601, 602, 603, 604, 605, 606, 610, 612, 613, 614, 616, 617, 618, 619, 621, 623, 625, 626, 627, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 702, 703, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 751, 753, 754, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 924, 925, 927, 928, 929, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1008, 1009, 1016, 1029, 1040, 1043, 1051, 1060, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1120, 1162, 1245, 1265, 1266, 1304, 1307, 1308, 1309, 1310, 1333, 1342, 1344, 1346, 1347, 1350, 1351, 1354, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1385, 1390, 1411, 1414, 1424, 1428, 1439, 1440, 1441, 1443, 1444, 1445, 1447, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1497, 1499, 1500, 1502, 1503, 1504, 1505, 1506], "jnp_dtype": 1456, "jnp_dtype_to_cod": 1456, "jnp_result_cod": 1456, "job": [98, 1354, 1356, 1461, 1480], "jobs_per_acc": 1366, "jobset": 1461, "join": [344, 345, 633, 634, 945, 1306, 1348, 1349, 1390, 1396, 1456, 1460, 1461, 1505], "join_effect": 1354, "joinpoint": 1396, "jointli": 167, "jokingli": 1348, "json": [178, 1013, 1015], "jsp": [1469, 1476], "jt": [1342, 1467], "jtu": [1354, 1382], "judg": [1444, 1448, 1450], "judgment": 1448, "juli": [1365, 1371, 1385], "jump": [1352, 1445], "jun": 1371, "june": [1365, 1367, 1371], "jupyt": [1366, 1382, 1468], "jupyterrender": [1382, 1468], "jupytext": 1366, "just": [107, 296, 346, 378, 424, 458, 488, 501, 505, 506, 668, 1337, 1342, 1344, 1346, 1348, 1349, 1350, 1352, 1354, 1356, 1359, 1360, 1361, 1363, 1364, 1366, 1368, 1369, 1371, 1374, 1377, 1378, 1379, 1382, 1383, 1385, 1387, 1389, 1390, 1396, 1402, 1411, 1435, 1440, 1441, 1442, 1445, 1447, 1449, 1451, 1453, 1456, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1473, 1474, 1476, 1479, 1480, 1484, 1487, 1488, 1489, 1492, 1498, 1499, 1501, 1502, 1503, 1506], "justifi": 1456, "jv": 1376, "jv_minus_1": 1376, "jv_plus_1": 1376, "jvp": [76, 77, 78, 495, 1085, 1135, 1286, 1287, 1354, 1368, 1371, 1376, 1377, 1378, 1379, 1382, 1390, 1403, 1424, 1453, 1458, 1468, 1475, 1480], "jvp_flat": 1348, "jvp_interpret": 1349, "jvp_jaxpr": 1348, "jvp_rule": 1348, "jvp_traceabl": 1348, "jvp_v1": 1348, "jvpinterpr": 1349, "jvpinterpret": 1349, "jvptrace": 1348, "jvptracer": [1348, 1368, 1390, 1446], "jy": 336, "k": [139, 178, 237, 239, 277, 281, 282, 292, 305, 306, 311, 400, 402, 486, 508, 544, 582, 586, 614, 637, 641, 645, 655, 658, 680, 746, 792, 798, 802, 808, 811, 812, 813, 832, 833, 878, 887, 888, 905, 919, 954, 959, 960, 961, 962, 964, 965, 966, 991, 1019, 1021, 1023, 1028, 1035, 1045, 1050, 1051, 1070, 1090, 1091, 1092, 1094, 1095, 1101, 1134, 1141, 1142, 1143, 1145, 1166, 1167, 1168, 1169, 1176, 1177, 1178, 1179, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1206, 1208, 1217, 1220, 1221, 1236, 1239, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1262, 1263, 1264, 1333, 1343, 1348, 1354, 1357, 1371, 1374, 1378, 1382, 1403, 1441, 1445, 1448, 1451, 1459, 1462, 1465, 1467, 1468, 1469, 1473, 1474, 1476, 1479, 1480, 1483, 1484, 1486, 1487, 1488, 1489, 1492, 1494, 1500], "k1": [1356, 1464, 1474, 1488, 1492, 1497, 1506], "k2": [1356, 1464, 1474, 1488, 1492, 1497, 1506], "k8": 1461, "k_": 1102, "k_a": 544, "k_b": 544, "k_fetch": 1494, "k_i": 1492, "k_slice": 1492, "kaim": [522, 523], "kaiser": [603, 613, 736, 737], "kalways_inlin": 1378, "kappa": [1279, 1280], "kcontrol": 1378, "kde": [1210, 1213], "kdecodebuff": 1378, "keep": [131, 296, 506, 638, 800, 818, 1052, 1245, 1266, 1333, 1342, 1347, 1348, 1349, 1354, 1356, 1357, 1369, 1374, 1376, 1377, 1381, 1385, 1387, 1395, 1396, 1402, 1445, 1446, 1447, 1449, 1451, 1454, 1455, 1456, 1457, 1460, 1467, 1471, 1474, 1483, 1484, 1487, 1489, 1490, 1494, 1497, 1498, 1502, 1503, 1505], "keep_unus": [296, 1411], "keepal": [1354, 1390], "keepdim": [3, 4, 5, 6, 34, 35, 36, 40, 41, 53, 54, 60, 362, 387, 537, 538, 563, 565, 566, 568, 571, 580, 581, 602, 644, 800, 805, 818, 836, 838, 839, 842, 849, 850, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 879, 896, 898, 900, 901, 946, 948, 951, 987, 1151, 1245, 1266, 1378, 1445, 1500, 1503], "kei": [106, 112, 132, 241, 252, 268, 277, 280, 281, 282, 283, 286, 291, 292, 296, 311, 339, 454, 475, 476, 508, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 623, 640, 645, 671, 702, 714, 742, 787, 804, 814, 815, 923, 968, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1071, 1072, 1073, 1074, 1085, 1216, 1292, 1294, 1296, 1306, 1307, 1310, 1311, 1337, 1342, 1345, 1347, 1348, 1350, 1352, 1353, 1354, 1367, 1370, 1374, 1377, 1378, 1381, 1385, 1411, 1423, 1427, 1440, 1444, 1446, 1447, 1449, 1451, 1454, 1456, 1458, 1459, 1462, 1464, 1465, 1466, 1467, 1469, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1483, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1503, 1505, 1507], "kepler": [1354, 1384], "kept": [257, 701, 1342, 1371, 1382, 1441, 1456, 1458, 1463, 1490], "kera": [346, 1383, 1427, 1452], "kernel": [80, 113, 126, 139, 143, 150, 160, 168, 178, 179, 183, 193, 198, 291, 292, 296, 337, 341, 342, 343, 344, 345, 346, 347, 422, 519, 531, 1209, 1335, 1343, 1354, 1371, 1378, 1407, 1423, 1478, 1481, 1482, 1488, 1490, 1491, 1493, 1495, 1496, 1503], "kernel1": 1480, "kernel2": 1480, "kernel_bodi": [1483, 1484, 1493], "kernel_nam": 178, "kernel_rot": 1469, "key1": [671, 787, 804, 815, 1085, 1455, 1475, 1483], "key2": [671, 787, 804, 815, 1085, 1455, 1475, 1483], "key3": [671, 804], "key_arr": 1455, "key_bits_arrai": 1061, "key_data": [1354, 1431, 1455], "key_path": 1506, "key_reus": [1027, 1398], "key_rot": 1120, "key_shap": [276, 277, 281, 282], "key_tim": 1120, "key_value_seq_length": 508, "keyarrai": [1354, 1444, 1455], "keyentri": [1303, 1306], "keyerror": 1390, "keyleafpair": [1308, 1310], "keypair": 280, "keypath": [1292, 1294, 1306, 1316, 1318], "keyreuseerror": [1370, 1404], "keystr": [1354, 1506], "keyword": [67, 81, 82, 84, 113, 118, 130, 180, 236, 237, 241, 267, 283, 284, 286, 337, 361, 424, 504, 570, 723, 787, 877, 923, 976, 981, 1002, 1007, 1016, 1307, 1333, 1342, 1348, 1350, 1354, 1378, 1415, 1431, 1435, 1449, 1463, 1467], "khd": 1503, "ki": 1484, "kick": [1348, 1370], "kind": [8, 51, 583, 591, 620, 701, 746, 767, 805, 938, 1093, 1152, 1153, 1342, 1348, 1354, 1360, 1363, 1369, 1370, 1376, 1378, 1385, 1434, 1440, 1444, 1449, 1451, 1452, 1456, 1461, 1463, 1465, 1473, 1474, 1475, 1489, 1502], "kinda": 1479, "kinlin": 1378, "kj": 1492, "kl": [670, 671, 1147], "kl_div": [1126, 1159], "kloop": 1378, "know": [1308, 1342, 1344, 1346, 1348, 1354, 1357, 1359, 1361, 1366, 1369, 1370, 1371, 1377, 1378, 1382, 1384, 1390, 1414, 1444, 1447, 1449, 1451, 1455, 1457, 1459, 1462, 1467, 1468, 1470, 1479, 1480, 1484, 1488, 1492, 1494], "knowledg": [1342, 1357, 1451, 1479], "known": [126, 141, 201, 203, 209, 343, 344, 345, 346, 347, 363, 378, 381, 424, 459, 460, 461, 462, 463, 464, 495, 654, 821, 927, 975, 998, 999, 1000, 1001, 1052, 1161, 1348, 1354, 1366, 1370, 1371, 1374, 1379, 1382, 1384, 1397, 1415, 1424, 1428, 1441, 1447, 1450, 1456, 1460, 1462, 1466, 1471, 1475, 1487, 1488, 1490], "known_trac": 1348, "known_val": 1348, "kool": 1023, "kool19a": 1023, "kp": 1296, "kron": 1354, "kroneck": 781, "krylov": [239, 1118], "kstd": 1378, "kth": [7, 582, 878], "kubectl": 1461, "kullback": 1147, "kv": 1445, "kv_cach": 1445, "kvcach": 1445, "kw": [881, 1304], "kw_onli": 1503, "kw_type": 180, "kwarg": [62, 81, 82, 84, 85, 113, 130, 238, 244, 248, 286, 337, 570, 722, 723, 724, 820, 877, 881, 895, 926, 1007, 1008, 1016, 1304, 1312, 1354, 1363, 1371, 1382, 1390, 1415, 1434, 1435, 1449, 1466, 1468, 1470, 1492, 1494, 1502], "kwarg_format": 1472, "kwarn": 1378, "kwd": [152, 153, 236, 237, 241, 394, 923], "l": [395, 401, 788, 794, 796, 1080, 1090, 1091, 1092, 1152, 1153, 1162, 1342, 1348, 1350, 1363, 1370, 1371, 1382, 1441, 1461, 1462, 1467, 1468, 1474, 1496], "l1": [1084, 1348, 1480, 1487], "l1789": 1455, "l1802": 1455, "l2": [239, 306, 1348, 1396, 1471, 1487], "l2_ann": 306, "l2_norm": 1396, "l2_reg": 1471, "l2phy": 1445, "l_max": [1152, 1153], "la": 1475, "label": [343, 344, 1312, 1342, 1350, 1366, 1458, 1459, 1465, 1467, 1471, 1473, 1476, 1502, 1503], "label_prob": [1350, 1467], "lack": [1447, 1448, 1451, 1452, 1489], "lai": [1446, 1464, 1472], "laid": [335, 500, 502, 658, 956, 1369, 1434, 1456, 1472, 1484, 1500], "lam": 1050, "lambda": [67, 75, 78, 84, 113, 178, 238, 239, 244, 290, 303, 337, 357, 426, 435, 436, 494, 501, 503, 545, 632, 638, 763, 804, 881, 1002, 1050, 1295, 1296, 1333, 1342, 1344, 1346, 1348, 1349, 1350, 1354, 1359, 1370, 1371, 1374, 1376, 1378, 1382, 1385, 1390, 1402, 1403, 1411, 1415, 1434, 1440, 1441, 1445, 1446, 1447, 1449, 1456, 1459, 1462, 1463, 1467, 1468, 1471, 1474, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1497, 1502, 1506], "lambda_": [1459, 1460], "lambdabindingrecip": 1348, "lanczo": [291, 292, 1423], "lanczos3": [291, 292, 1423], "lanczos5": [291, 292, 1423], "land": [1354, 1369, 1444, 1447], "landmark": 1503, "landscap": 1341, "lane": [150, 1484, 1489], "langl": 554, "languag": [503, 1335, 1343, 1344, 1366, 1378, 1379, 1435, 1444, 1449, 1459, 1460, 1462, 1465, 1466, 1473, 1480, 1492], "lapack": [397, 404, 808], "lapack_driv": 1101, "laptop": [1384, 1457], "larg": [170, 239, 357, 366, 367, 397, 404, 458, 488, 866, 924, 927, 975, 1135, 1285, 1286, 1287, 1342, 1348, 1354, 1357, 1359, 1366, 1367, 1369, 1374, 1377, 1378, 1382, 1383, 1385, 1396, 1414, 1443, 1444, 1448, 1454, 1456, 1457, 1461, 1463, 1467, 1468, 1471, 1474, 1480, 1484, 1487, 1489, 1492, 1503], "larger": [201, 203, 220, 223, 397, 582, 604, 626, 701, 716, 837, 877, 878, 910, 912, 976, 985, 1002, 1056, 1071, 1073, 1118, 1342, 1352, 1354, 1357, 1371, 1377, 1381, 1382, 1456, 1458, 1461, 1467, 1468, 1469, 1471, 1474, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1494, 1495], "largest": [10, 381, 398, 486, 671, 701, 789, 805, 811, 864, 950, 1036, 1134, 1454, 1456, 1480, 1484, 1492], "largest_singular_valu": [798, 802, 807], "largest_valu": [582, 878], "largish": 1371, "laser": [1465, 1473], "last": [10, 61, 118, 119, 120, 303, 304, 328, 425, 426, 427, 435, 436, 437, 486, 544, 554, 583, 614, 617, 619, 625, 638, 646, 654, 683, 689, 694, 695, 697, 699, 753, 787, 804, 813, 834, 846, 864, 868, 881, 884, 890, 902, 910, 927, 938, 939, 944, 950, 954, 957, 975, 976, 991, 1028, 1044, 1045, 1111, 1114, 1118, 1216, 1308, 1342, 1344, 1345, 1348, 1354, 1359, 1370, 1371, 1374, 1377, 1378, 1382, 1390, 1402, 1404, 1424, 1449, 1454, 1455, 1457, 1460, 1461, 1462, 1463, 1465, 1468, 1469, 1473, 1474, 1478, 1483, 1484, 1485, 1487, 1489, 1490, 1492, 1505, 1506], "last_iter": 1490, "last_param": 1474, "last_slot": 1487, "lastdim": 1378, "lastli": 1359, "late": [424, 1348, 1487], "latenc": [168, 1356, 1381, 1445, 1471, 1483, 1484, 1487, 1489, 1490, 1503], "later": [81, 100, 720, 1103, 1342, 1348, 1357, 1363, 1369, 1370, 1371, 1374, 1381, 1385, 1435, 1444, 1446, 1456, 1458, 1460, 1466, 1467, 1480, 1484, 1489, 1490, 1498], "latest": [13, 245, 248, 254, 255, 288, 572, 1283, 1288, 1333, 1354, 1356, 1359, 1366, 1367, 1371, 1374, 1390, 1407, 1415, 1431, 1439, 1454, 1456, 1459, 1462, 1474, 1475, 1484], "latter": [343, 344, 776, 1110, 1342, 1346, 1348, 1356, 1366, 1371, 1390, 1446, 1447, 1451, 1452, 1461, 1463], "lattic": 1505, "lattice_join": 1354, "launch": [98, 1371, 1378, 1461, 1483, 1484, 1496], "launch_new_inst": 1390, "launcher": 98, "laundri": 1444, "law": [1465, 1473], "lax": [9, 10, 23, 61, 91, 112, 113, 205, 206, 209, 212, 216, 217, 219, 296, 543, 572, 582, 583, 595, 619, 625, 633, 634, 637, 641, 664, 677, 787, 788, 793, 794, 799, 804, 808, 810, 811, 813, 817, 833, 834, 841, 846, 864, 872, 878, 881, 891, 894, 902, 905, 911, 925, 938, 943, 944, 949, 950, 951, 954, 957, 969, 988, 989, 994, 998, 999, 1000, 1001, 1002, 1044, 1080, 1082, 1090, 1095, 1097, 1098, 1101, 1106, 1107, 1108, 1109, 1110, 1116, 1117, 1118, 1333, 1342, 1345, 1346, 1348, 1354, 1356, 1359, 1360, 1362, 1369, 1371, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1385, 1388, 1390, 1398, 1414, 1428, 1441, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1454, 1455, 1459, 1462, 1463, 1464, 1466, 1468, 1470, 1471, 1472, 1474, 1478, 1479, 1480, 1483, 1484, 1487, 1489, 1492, 1494, 1497, 1500, 1503, 1506], "lax_control_flow": 1449, "lax_linalg": 1354, "lax_numpi": [1354, 1366, 1462], "lax_numpy_test": 1366, "lax_reduce_sum_scatt": 1490, "lax_scipy_test": 1357, "lax_sum": 1490, "layer": [344, 346, 506, 531, 1341, 1348, 1363, 1381, 1382, 1397, 1427, 1445, 1447, 1449, 1451, 1465, 1468, 1471, 1473, 1474, 1500, 1502, 1503, 1506], "layer0_output": [1382, 1468], "layer1_output": [1382, 1468], "layer_auto": 1500, "layer_nam": 1471, "layer_s": [1464, 1465, 1473, 1474], "layer_shard": 1500, "layer_width": 1506, "layernorm": 1495, "layernorm_matmul_with_shard_map": 1495, "layernorm_matmul_without_shard_map": 1495, "layerparam": [1382, 1468], "layout": [160, 169, 223, 283, 284, 1343, 1354, 1385, 1445, 1464, 1474, 1480, 1482, 1483, 1492, 1500], "layout_cast": 1483, "lazi": [1377, 1454], "lazili": [1354, 1371, 1466], "lceil": 332, "lcm": 729, "ld": 1377, "ld_library_path": [1354, 1377, 1384, 1496], "ldexp": [719, 1354], "ldot": [512, 1044], "le": [368, 382, 383, 414, 419, 507, 509, 516, 545, 564, 640, 764, 1019, 1020, 1028, 1030, 1033, 1043, 1048, 1088, 1102, 1172, 1174, 1178, 1179, 1220, 1221, 1250, 1251, 1271, 1273, 1276, 1277, 1279, 1280, 1281, 1282], "lead": [10, 57, 67, 100, 130, 223, 283, 326, 327, 329, 334, 415, 429, 458, 465, 488, 572, 584, 627, 664, 677, 700, 701, 720, 723, 769, 787, 788, 794, 796, 797, 799, 833, 835, 849, 864, 886, 889, 918, 950, 963, 990, 991, 998, 999, 1000, 1001, 1002, 1016, 1054, 1061, 1089, 1102, 1135, 1141, 1142, 1333, 1348, 1354, 1356, 1364, 1370, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1390, 1431, 1440, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1461, 1462, 1465, 1468, 1474, 1479, 1484, 1485, 1489, 1490, 1493, 1495, 1499, 1500, 1503, 1505], "leaf": [71, 80, 126, 130, 288, 290, 303, 304, 425, 426, 427, 431, 433, 434, 435, 437, 1016, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1310, 1315, 1317, 1325, 1327, 1348, 1354, 1438, 1460, 1497, 1503, 1506], "leak": [65, 66, 1354, 1370, 1459], "leaked_tracer_error": 1354, "leaki": 533, "lean": [1341, 1448, 1456], "learn": [254, 552, 1023, 1341, 1342, 1348, 1350, 1353, 1360, 1369, 1376, 1379, 1382, 1383, 1384, 1390, 1395, 1396, 1431, 1441, 1459, 1460, 1461, 1462, 1464, 1466, 1467, 1470, 1474, 1475, 1480, 1489, 1490, 1492, 1494, 1498, 1500, 1502, 1503, 1506], "learning_r": [1396, 1471, 1502, 1503, 1506], "least": [64, 71, 91, 150, 306, 404, 599, 600, 601, 627, 657, 659, 667, 706, 707, 729, 744, 766, 775, 782, 798, 883, 887, 891, 918, 1118, 1333, 1342, 1348, 1354, 1356, 1359, 1364, 1365, 1374, 1377, 1381, 1384, 1424, 1442, 1445, 1446, 1447, 1451, 1456, 1457, 1459, 1463, 1474, 1478, 1484, 1485, 1487, 1489, 1490, 1501, 1502], "leav": [64, 71, 80, 113, 130, 134, 198, 288, 290, 291, 296, 378, 458, 488, 503, 848, 1016, 1283, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1305, 1307, 1310, 1312, 1317, 1325, 1342, 1354, 1356, 1377, 1378, 1396, 1411, 1435, 1438, 1440, 1444, 1445, 1448, 1460, 1470, 1471, 1474, 1483, 1484, 1495, 1497, 1503], "leaves_with_path": [1296, 1318], "lecun": [524, 525, 1465], "led": [1341, 1377, 1450], "left": [47, 174, 239, 332, 360, 377, 378, 397, 406, 436, 458, 467, 468, 469, 507, 509, 510, 512, 536, 538, 563, 568, 602, 637, 641, 644, 661, 705, 722, 724, 761, 784, 811, 817, 836, 838, 839, 842, 853, 854, 855, 856, 858, 860, 861, 862, 896, 898, 919, 924, 946, 948, 986, 987, 989, 1031, 1042, 1055, 1056, 1059, 1094, 1101, 1106, 1107, 1108, 1109, 1112, 1149, 1151, 1162, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1245, 1248, 1249, 1266, 1291, 1342, 1374, 1376, 1377, 1378, 1445, 1447, 1449, 1456, 1461, 1463, 1474, 1479, 1480, 1483, 1484, 1489, 1490, 1492, 1494, 1496, 1503], "left_capacity_sem": 1490, "left_copi": 1490, "left_copy_devic": 1490, "left_copy_slic": 1490, "left_neighbor": [1479, 1490], "left_or_right": 1490, "left_recv_sem": 1490, "left_send_sem": 1490, "left_shift": [467, 608], "left_sid": 408, "left_window_s": 508, "leg": 745, "legaci": [98, 283, 720, 1016, 1017, 1116, 1117, 1118, 1378, 1384, 1431, 1455], "legacy_backend_config": [283, 1378], "legacy_vector": 1016, "legal": 1479, "legend": [1476, 1502], "legendr": [1152, 1153, 1448], "leibler": 1147, "leisur": 1503, "lemma": 1342, "len": [67, 241, 466, 477, 483, 498, 501, 502, 625, 632, 679, 695, 699, 751, 840, 868, 877, 881, 887, 906, 941, 986, 1152, 1153, 1295, 1296, 1342, 1348, 1351, 1359, 1369, 1371, 1378, 1382, 1402, 1440, 1444, 1451, 1460, 1461, 1464, 1465, 1467, 1468, 1472, 1473, 1474, 1475, 1484, 1485, 1494, 1503, 1506], "length": [32, 52, 75, 77, 80, 96, 139, 209, 216, 217, 288, 291, 292, 297, 343, 344, 345, 363, 381, 449, 452, 458, 495, 508, 540, 599, 604, 632, 646, 656, 657, 677, 683, 684, 687, 689, 694, 697, 698, 704, 721, 723, 733, 739, 742, 751, 792, 840, 868, 881, 883, 891, 910, 911, 925, 941, 944, 957, 976, 1002, 1070, 1071, 1073, 1076, 1103, 1110, 1113, 1114, 1115, 1333, 1342, 1354, 1359, 1371, 1378, 1382, 1390, 1397, 1403, 1411, 1434, 1441, 1455, 1463, 1468, 1470, 1474, 1485, 1489, 1493, 1503, 1506], "leq": [392, 551, 552, 1047, 1056], "less": [306, 368, 382, 383, 392, 397, 414, 419, 451, 551, 552, 674, 701, 714, 734, 735, 786, 869, 1002, 1023, 1026, 1118, 1342, 1346, 1348, 1354, 1374, 1377, 1380, 1382, 1424, 1428, 1444, 1445, 1448, 1457, 1459, 1467, 1468, 1474, 1475, 1476, 1479, 1484, 1487, 1490, 1492, 1494, 1502, 1503, 1505], "less_equ": [392, 674, 734, 735, 785, 869], "less_jvp": 1348, "less_p": 1348, "lesson": 1489, "let": [178, 503, 504, 632, 638, 981, 1342, 1344, 1348, 1349, 1354, 1359, 1360, 1361, 1369, 1371, 1376, 1377, 1378, 1379, 1384, 1387, 1403, 1414, 1440, 1441, 1442, 1449, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1475, 1479, 1480, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1500, 1502, 1503], "letter": [255, 508, 1402, 1490], "levant": 1383, "level": [67, 91, 97, 204, 337, 356, 357, 360, 381, 442, 443, 444, 445, 447, 448, 450, 454, 459, 499, 503, 583, 595, 701, 938, 1288, 1341, 1342, 1346, 1348, 1349, 1354, 1359, 1366, 1369, 1371, 1374, 1378, 1381, 1382, 1390, 1396, 1414, 1431, 1438, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1454, 1455, 1456, 1457, 1460, 1461, 1462, 1463, 1468, 1470, 1479, 1480, 1484, 1486, 1487, 1488, 1489, 1493, 1495, 1496, 1500, 1504], "leverag": [337, 1354, 1480, 1503], "lexic": [75, 1342, 1346, 1453, 1467], "lexicograph": [241, 416, 417, 475, 583, 787, 938, 939, 1457, 1489], "lexsort": [583, 938, 1354], "lfloor": 377, "lh": [207, 208, 213, 214, 224, 317, 341, 343, 344, 345, 346, 347, 360, 361, 543, 544, 1348, 1381, 1424, 1464, 1474, 1483, 1492, 1494], "lhs_batch_dim": [207, 208, 224, 360, 543], "lhs_block": 1474, "lhs_component_count": 1424, "lhs_contracting_dim": [207, 208, 224, 360, 543], "lhs_dilat": [343, 344, 345, 347], "lhs_dtype": 1424, "lhs_precision_typ": 1424, "lhs_ref": 1484, "lhs_ref2": 1484, "lhs_rhs_accum": 1424, "lhs_scale": 544, "lhs_shape": 342, "lhs_spec": [343, 344, 345, 1424, 1469, 1474], "li": 578, "lib": [285, 750, 921, 922, 923, 1345, 1354, 1366, 1371, 1378, 1390, 1446, 1457, 1460, 1465], "lib64": 1496, "libcupti": 1496, "libdevic": 1354, "libdevice10": 1384, "libfoo": 285, "librari": [81, 97, 285, 397, 404, 804, 922, 923, 1305, 1342, 1354, 1357, 1366, 1370, 1378, 1382, 1383, 1384, 1390, 1395, 1396, 1397, 1415, 1423, 1424, 1426, 1428, 1431, 1438, 1440, 1444, 1446, 1448, 1449, 1450, 1451, 1456, 1457, 1463, 1465, 1468, 1473, 1474, 1475, 1480, 1496, 1498, 1502, 1503, 1507], "librms_norm": 1378, "libtpu": [1354, 1384], "libtpu_releas": 1384, "licens": [1465, 1473], "lie": 640, "life": [1354, 1370], "lifecycl": 1495, "lifegiv": 1498, "lifetim": [1346, 1484], "lift": [1346, 1348, 1349, 1378, 1440, 1441, 1447, 1470, 1488], "light": 1448, "lightgrai": [1456, 1469], "lightweight": [1447, 1448, 1458], "like": [10, 63, 67, 75, 76, 77, 79, 80, 81, 82, 84, 91, 93, 95, 96, 97, 98, 105, 112, 119, 120, 126, 128, 129, 198, 216, 255, 277, 281, 282, 283, 296, 346, 348, 356, 357, 360, 364, 378, 380, 381, 415, 436, 458, 488, 495, 498, 500, 501, 504, 505, 506, 508, 559, 572, 584, 586, 592, 604, 606, 616, 619, 620, 625, 632, 638, 654, 666, 673, 679, 715, 728, 743, 767, 776, 777, 797, 804, 820, 864, 865, 874, 902, 913, 914, 915, 923, 924, 925, 929, 937, 941, 969, 976, 992, 996, 1002, 1005, 1006, 1016, 1026, 1054, 1089, 1116, 1117, 1118, 1135, 1292, 1294, 1302, 1310, 1329, 1341, 1342, 1344, 1346, 1348, 1349, 1350, 1351, 1354, 1355, 1356, 1359, 1361, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1374, 1376, 1377, 1378, 1382, 1384, 1385, 1386, 1390, 1395, 1396, 1397, 1402, 1404, 1411, 1414, 1424, 1428, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1476, 1479, 1480, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507], "likelihood": [1350, 1353, 1467], "likewis": [1490, 1493], "limit": [12, 380, 404, 473, 500, 505, 506, 701, 934, 1023, 1026, 1056, 1123, 1137, 1138, 1211, 1342, 1344, 1346, 1348, 1349, 1354, 1355, 1357, 1360, 1374, 1376, 1378, 1380, 1381, 1384, 1387, 1390, 1431, 1441, 1445, 1451, 1452, 1456, 1459, 1461, 1462, 1463, 1465, 1469, 1473, 1475, 1479, 1480, 1484, 1485, 1489, 1490, 1494], "limit_index": 474, "limit_indic": [217, 473, 1444], "lin_fn": 495, "linalg": [306, 357, 646, 670, 833, 835, 954, 989, 990, 1342, 1354, 1356, 1467, 1503], "line": [178, 1104, 1105, 1342, 1348, 1349, 1354, 1356, 1359, 1362, 1366, 1368, 1370, 1371, 1377, 1382, 1384, 1387, 1390, 1395, 1448, 1449, 1452, 1454, 1455, 1456, 1460, 1461, 1462, 1463, 1464, 1468, 1472, 1484, 1487, 1499, 1502, 1503, 1504], "line2d": [1342, 1463], "linear": [67, 75, 240, 291, 292, 356, 357, 410, 494, 507, 509, 510, 512, 533, 541, 542, 545, 551, 552, 761, 797, 798, 810, 857, 859, 877, 879, 881, 901, 991, 1076, 1078, 1079, 1089, 1090, 1091, 1092, 1098, 1099, 1100, 1103, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1120, 1342, 1353, 1354, 1363, 1371, 1374, 1378, 1379, 1382, 1390, 1414, 1423, 1441, 1445, 1446, 1447, 1448, 1449, 1459, 1460, 1463, 1467, 1468, 1471, 1475, 1484, 1492, 1507], "linear_in": 1503, "linear_out": 1503, "linear_ramp": 877, "linear_transpos": 1354, "linear_util": [1348, 1354, 1416], "linearize_flat": 1348, "linearizetrac": [1368, 1390], "linearli": [239, 1382, 1390, 1441, 1462, 1468, 1490], "linearoper": [1116, 1117], "lineax": [1383, 1448], "linen": 1381, "linewidth": [589, 591], "link": [1013, 1015, 1333, 1349, 1354, 1366, 1369, 1384, 1456, 1458, 1461, 1466, 1496], "linker": 1377, "linspac": [572, 578, 586, 592, 731, 733, 831, 841, 872, 902, 958, 1075, 1342, 1354, 1378, 1428, 1444, 1463, 1469, 1475], "linter": 1366, "linux": [1354, 1365, 1366, 1475], "list": [2, 27, 67, 69, 77, 80, 84, 96, 113, 150, 209, 215, 222, 257, 258, 267, 296, 297, 303, 304, 339, 342, 363, 366, 378, 397, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 458, 466, 488, 493, 494, 498, 502, 503, 543, 586, 590, 592, 599, 600, 601, 614, 616, 666, 670, 671, 731, 733, 740, 742, 743, 819, 831, 840, 865, 881, 923, 929, 937, 941, 992, 1002, 1006, 1284, 1285, 1291, 1292, 1293, 1294, 1306, 1307, 1315, 1316, 1317, 1318, 1326, 1333, 1348, 1349, 1351, 1352, 1354, 1356, 1359, 1365, 1366, 1367, 1369, 1370, 1371, 1376, 1377, 1378, 1379, 1383, 1385, 1387, 1396, 1403, 1411, 1415, 1424, 1428, 1435, 1441, 1442, 1444, 1448, 1455, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1472, 1474, 1478, 1484, 1488, 1489, 1494, 1497, 1506, 1507], "list_of_list": 1506, "list_of_tre": 1506, "listedcolormap": 1469, "listen": 98, "lit": 1348, "lit_bind": 1348, "lit_val": 1348, "lite": 1494, "liter": [171, 178, 250, 251, 378, 404, 406, 495, 503, 508, 511, 531, 538, 543, 1082, 1085, 1087, 1090, 1095, 1101, 1151, 1332, 1348, 1349, 1354, 1385, 1441, 1447, 1466, 1483, 1505], "literatur": 1349, "littl": [82, 201, 203, 876, 981, 1348, 1354, 1378, 1382, 1387, 1448, 1450, 1459, 1468, 1476, 1479, 1484, 1503], "live": [18, 285, 496, 1354, 1367, 1369, 1371, 1439, 1442, 1457, 1466, 1471, 1479, 1483, 1487, 1488, 1490, 1493, 1501], "lj": 671, "ll": [150, 423, 467, 788, 840, 985, 1056, 1080, 1085, 1148, 1308, 1309, 1310, 1342, 1348, 1349, 1361, 1363, 1368, 1376, 1377, 1378, 1381, 1390, 1442, 1444, 1447, 1448, 1452, 1453, 1454, 1456, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1473, 1474, 1475, 1476, 1479, 1480, 1484, 1487, 1488, 1492, 1493, 1502, 1503], "ll128": 1381, "llm": [1383, 1443, 1447], "llo": 1480, "llvm": [194, 1354, 1366, 1457, 1484], "lm": 670, "lm1b": 1381, "lmbda": 296, "lmpn": 1448, "ln": [574, 576, 579], "ln_2": 1459, "ln_out": 1495, "ln_x": 1459, "lo": [1342, 1354, 1453, 1463], "load": [150, 160, 165, 166, 172, 181, 182, 285, 501, 922, 923, 1013, 1015, 1343, 1356, 1378, 1380, 1381, 1383, 1415, 1448, 1449, 1452, 1461, 1469, 1471, 1478, 1483, 1485, 1487, 1488, 1489, 1490, 1493, 1494, 1496, 1501], "load_i": 1484, "load_slot": 1484, "loadabl": [922, 923], "loader": [1369, 1461, 1465, 1473], "loadlibrari": [285, 1378], "lobpcg": 239, "loc": [1029, 1060, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1371, 1476], "local": [82, 84, 96, 98, 131, 135, 136, 239, 344, 397, 404, 498, 501, 502, 508, 1002, 1003, 1016, 1288, 1343, 1354, 1357, 1359, 1361, 1369, 1382, 1397, 1404, 1442, 1447, 1455, 1461, 1474, 1475, 1484, 1494, 1495, 1496, 1499, 1500, 1503, 1504, 1505], "local_arrai": 1461, "local_barri": 1490, "local_batch": 1474, "local_copi": 1490, "local_copy_op": 1490, "local_copy_sem": 1490, "local_cuda_path": 1366, "local_cudnn_path": 1366, "local_data": [501, 1440], "local_devic": [501, 1354, 1369, 1371, 1434, 1461, 1464], "local_device_count": [93, 136, 501, 1002, 1381, 1461, 1490], "local_device_id": 98, "local_inp": 1440, "local_input": [136, 1440, 1480], "local_loss": [1447, 1474], "local_nccl_path": 1366, "local_out": 1440, "local_output": 1480, "local_param": 1474, "local_scratch": 1490, "local_scratch_ref": 1490, "local_shap": 501, "local_shard": 1440, "local_test_job": 1366, "local_wheel_dist_fold": 1366, "local_wheel_exclusion_list": 1366, "local_wheel_inclusion_list": 1366, "local_window_s": 508, "local_xla_path": 1366, "localhost": [98, 1461, 1496], "locat": [10, 292, 326, 344, 424, 739, 740, 754, 864, 882, 925, 985, 1029, 1059, 1333, 1344, 1348, 1351, 1354, 1366, 1370, 1377, 1435, 1456, 1471, 1478, 1484, 1488, 1494, 1495, 1496, 1502], "location_cach": 1390, "lock": [239, 1366], "lockstep": 1484, "log": [84, 268, 372, 373, 375, 393, 412, 493, 499, 534, 535, 536, 537, 538, 550, 675, 809, 823, 825, 826, 1013, 1015, 1023, 1033, 1040, 1042, 1124, 1125, 1126, 1136, 1139, 1140, 1147, 1148, 1149, 1150, 1151, 1154, 1158, 1159, 1161, 1163, 1164, 1167, 1171, 1172, 1173, 1176, 1178, 1182, 1183, 1184, 1187, 1189, 1190, 1191, 1194, 1197, 1198, 1199, 1204, 1205, 1206, 1214, 1218, 1220, 1223, 1224, 1225, 1227, 1230, 1231, 1232, 1234, 1237, 1241, 1246, 1248, 1250, 1254, 1255, 1256, 1260, 1263, 1267, 1270, 1271, 1272, 1274, 1276, 1279, 1281, 1342, 1350, 1360, 1361, 1362, 1366, 1371, 1374, 1376, 1377, 1378, 1381, 1414, 1442, 1459, 1461, 1463, 1466, 1467, 1478, 1484, 1496, 1501, 1504], "log1p": [375, 678, 821, 1414], "log1pexp": [1342, 1463], "log1pexp_jvp": [1342, 1463], "log2": [676, 821, 823, 826, 1084, 1459], "log2_if_rank_2": 1459, "log2_with_print": 1459, "log_2": [389, 826, 1382, 1468], "log_compil": 1354, "log_dir": [1013, 1014, 1015, 1496], "log_explicit": [1356, 1504], "log_joint": 1476, "log_metr": 1503, "log_plus_on": 412, "log_prob": 1476, "log_sigmoid": 546, "log_softmax": [549, 1160, 1354, 1503], "log_valu": [1360, 1376, 1442], "logabsdet": 809, "logaddexp": [826, 1354], "logaddexp2": 1354, "logarithm": [372, 373, 411, 412, 536, 538, 675, 676, 678, 731, 809, 819, 821, 822, 823, 824, 826, 831, 1149, 1151, 1298, 1354, 1377], "logcdf": [1170, 1172, 1173, 1174, 1175, 1180, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1269, 1271, 1272, 1273, 1274], "logdir": 1496, "loggamma": [1033, 1354], "logger": 1356, "logic": [82, 84, 131, 132, 296, 304, 321, 442, 445, 450, 467, 468, 469, 493, 504, 614, 620, 625, 723, 827, 829, 830, 925, 1308, 1310, 1348, 1352, 1356, 1360, 1366, 1369, 1370, 1371, 1377, 1378, 1381, 1382, 1389, 1402, 1411, 1434, 1440, 1445, 1447, 1449, 1452, 1455, 1459, 1461, 1462, 1464, 1470, 1474, 1480, 1483, 1484, 1490, 1492, 1494, 1497, 1500, 1506], "logical_and": [1354, 1359, 1484, 1490], "logical_not": [763, 1359], "logical_or": 1359, "logical_to_phys": 1445, "logist": [1132, 1467], "logit": [506, 508, 1023, 1036, 1342, 1354, 1363, 1449, 1465, 1467, 1473, 1503], "logmeanexp": [538, 1151], "logpdf": [1170, 1171, 1173, 1174, 1175, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1217, 1219, 1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1242, 1243, 1244, 1246, 1249, 1250, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1280, 1282, 1354, 1476], "logpmf": [1166, 1168, 1169, 1177, 1179, 1221, 1247, 1251, 1262, 1264, 1354], "logsf": [1170, 1171, 1172, 1174, 1175, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1196, 1197, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1269, 1270, 1271, 1273, 1274], "logspac": [731, 819], "logsumexp": [351, 537, 1354, 1465, 1473], "lollipop": 1348, "long": [98, 807, 1342, 1348, 1354, 1364, 1366, 1371, 1377, 1385, 1390, 1415, 1442, 1444, 1446, 1447, 1448, 1452, 1454, 1456, 1457, 1462, 1463, 1480, 1483, 1487, 1496, 1506], "long_mask": 679, "longer": [83, 296, 589, 591, 638, 1002, 1342, 1345, 1346, 1354, 1365, 1370, 1377, 1378, 1380, 1384, 1411, 1428, 1440, 1443, 1449, 1452, 1455, 1456, 1458, 1464, 1467, 1477, 1478, 1479, 1484, 1487, 1495, 1496, 1500, 1502], "longitud": [1153, 1162], "longitudin": 1162, "longlong": 263, "look": [132, 198, 252, 253, 501, 1341, 1342, 1346, 1348, 1349, 1353, 1354, 1360, 1366, 1370, 1376, 1377, 1378, 1382, 1383, 1384, 1395, 1396, 1400, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1454, 1456, 1459, 1460, 1461, 1463, 1464, 1466, 1467, 1468, 1471, 1474, 1479, 1480, 1484, 1487, 1490, 1492, 1496, 1500, 1501, 1502, 1503, 1506], "lookahead": 1478, "lookup": [501, 1494], "loop": [74, 168, 170, 178, 183, 378, 402, 415, 458, 488, 991, 1016, 1342, 1346, 1351, 1354, 1359, 1367, 1369, 1370, 1377, 1378, 1381, 1411, 1441, 1451, 1459, 1463, 1464, 1466, 1467, 1471, 1475, 1478, 1480, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1496, 1498], "loop_bodi": [1459, 1484], "loop_indic": 1480, "loop_jmp": [1342, 1467], "loop_mjp": [1342, 1467], "loop_v": [1342, 1467], "loopi": 1448, "loos": 1348, "lose": [578, 669, 1396, 1442, 1456, 1492], "loss": [552, 797, 1089, 1342, 1350, 1382, 1414, 1447, 1464, 1467, 1468, 1471, 1474, 1502, 1503, 1506], "loss2": [1350, 1467], "loss_checkpoint": [1382, 1468], "loss_checkpoint2": [1382, 1468], "loss_dp": 1474, "loss_fn": [1342, 1396, 1503, 1506], "loss_fsdp": 1474, "loss_fsdp_tp": 1474, "loss_jit": 1464, "loss_pp": 1474, "loss_spmd": 1474, "loss_tp": 1474, "loss_valu": [1350, 1467], "lost": [337, 1356, 1363, 1385, 1444], "lot": [750, 921, 1348, 1354, 1359, 1361, 1378, 1396, 1443, 1447, 1448, 1457, 1462, 1465, 1466, 1470, 1473, 1479, 1488, 1492], "loud": [1453, 1454], "love": [1352, 1395], "low": [337, 343, 344, 345, 347, 357, 381, 423, 442, 443, 444, 445, 447, 448, 450, 454, 459, 543, 1019, 1023, 1026, 1036, 1082, 1211, 1342, 1354, 1356, 1378, 1390, 1446, 1448, 1463, 1480, 1483, 1484, 1485, 1489, 1492, 1496], "lower": [83, 105, 178, 237, 248, 284, 298, 299, 300, 301, 309, 310, 312, 313, 314, 321, 322, 323, 324, 325, 331, 332, 334, 336, 337, 340, 348, 349, 350, 359, 360, 368, 372, 375, 377, 378, 381, 382, 383, 386, 389, 391, 392, 395, 398, 400, 401, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 424, 429, 430, 436, 439, 451, 456, 457, 458, 459, 460, 467, 468, 469, 470, 471, 472, 478, 482, 484, 485, 486, 488, 503, 529, 572, 583, 595, 680, 777, 788, 794, 796, 804, 857, 859, 879, 894, 901, 938, 959, 960, 961, 962, 964, 965, 966, 994, 1056, 1057, 1078, 1079, 1080, 1082, 1090, 1091, 1092, 1093, 1098, 1099, 1106, 1107, 1108, 1109, 1137, 1138, 1148, 1162, 1335, 1341, 1343, 1345, 1348, 1354, 1361, 1371, 1374, 1377, 1378, 1380, 1381, 1390, 1402, 1414, 1415, 1424, 1435, 1442, 1445, 1446, 1447, 1448, 1454, 1456, 1457, 1460, 1471, 1472, 1474, 1478, 1479, 1483, 1484, 1486, 1487, 1488, 1489, 1494], "lower_cal": 1435, "lower_fn": 1402, "lower_jaxpr_as_fun": 1385, "lower_jaxpr_to_fun": 1385, "lower_jaxpr_to_modul": 1385, "lower_seg": 1148, "lower_sharding_comput": 1385, "lowered_with_x": 1344, "lowering_arg": 284, "lowering_cach": 1390, "lowering_paramet": [1371, 1390], "lowering_platform": [1354, 1371, 1435], "lowering_semant": 150, "loweringcachekei": 1390, "loweringcachevalu": 1390, "loweringparamet": [1385, 1390, 1435], "loweringrul": 284, "loweringrulecontext": [1371, 1385, 1390], "loweringsemant": 150, "lowest": [335, 1461, 1480, 1484, 1489], "lp": 1018, "lpmn": [1153, 1354, 1448], "lpmn_valu": [1354, 1448], "lr": 1342, "lru": 1354, "lru_cach": [1348, 1495], "lst": 1348, "lst1": 1348, "lst2": 1348, "lsu": 1484, "lt": [368, 382, 383, 392, 419, 1348, 1382, 1441, 1468], "lu": [402, 809, 1091, 1092, 1098, 1354, 1390], "lu_and_piv": 1092, "lu_factor": 1092, "lu_solv": [1090, 1091, 1098], "luck": 1348, "luckili": [1342, 1369, 1467], "lufac": [1091, 1092], "lurk": [1342, 1463], "lwork": 1095, "lx": 1457, "ly": 1457, "lz": 1457, "m": [157, 199, 237, 239, 242, 400, 401, 403, 404, 405, 406, 407, 408, 410, 428, 544, 601, 603, 613, 640, 645, 664, 670, 680, 687, 693, 694, 695, 705, 706, 707, 719, 736, 737, 780, 781, 783, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 807, 808, 809, 810, 811, 812, 813, 816, 833, 835, 883, 885, 887, 888, 891, 919, 954, 959, 960, 961, 962, 964, 965, 966, 976, 990, 991, 1026, 1047, 1070, 1090, 1091, 1092, 1094, 1095, 1098, 1099, 1101, 1102, 1116, 1117, 1118, 1152, 1153, 1157, 1162, 1307, 1308, 1309, 1310, 1342, 1347, 1348, 1354, 1357, 1359, 1366, 1377, 1378, 1382, 1387, 1414, 1441, 1445, 1459, 1462, 1464, 1465, 1467, 1468, 1473, 1474, 1483, 1484, 1485, 1487, 1492, 1494, 1496], "m1": [919, 1354], "m_i": [1342, 1467, 1492], "m_slice": [1483, 1492], "m_sp": [199, 1414], "ma": [589, 1390, 1445], "mac": [1354, 1366], "machep": 701, "machin": [424, 701, 1023, 1341, 1342, 1350, 1354, 1366, 1369, 1371, 1378, 1382, 1383, 1384, 1395, 1441, 1461, 1462, 1464, 1467, 1470, 1474, 1475, 1480, 1488, 1489, 1494, 1498, 1502, 1503, 1506, 1507], "machineri": [113, 1342, 1349, 1354, 1374, 1376, 1416, 1441, 1442, 1446, 1447, 1449, 1463, 1466], "maco": [1366, 1384, 1475], "macro": [1366, 1378, 1450], "made": [145, 337, 424, 631, 1345, 1349, 1354, 1367, 1390, 1414, 1431, 1449, 1451, 1455, 1456, 1457, 1480, 1484, 1485, 1493, 1503], "magic": [1377, 1460], "magma": [397, 404], "magnitud": [340, 1052, 1342, 1443, 1456, 1475, 1487], "mai": [9, 10, 18, 61, 62, 65, 66, 67, 69, 77, 79, 80, 83, 84, 95, 97, 98, 100, 112, 126, 130, 143, 209, 241, 283, 296, 356, 360, 363, 381, 395, 397, 403, 408, 415, 422, 424, 441, 447, 448, 452, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 494, 557, 570, 582, 595, 620, 625, 640, 645, 654, 655, 658, 659, 668, 670, 671, 701, 720, 722, 723, 724, 727, 728, 739, 740, 742, 763, 802, 804, 840, 864, 876, 877, 878, 881, 883, 886, 889, 897, 911, 913, 922, 923, 957, 1013, 1015, 1016, 1052, 1086, 1097, 1105, 1118, 1141, 1142, 1302, 1305, 1335, 1336, 1338, 1339, 1341, 1342, 1345, 1346, 1348, 1351, 1353, 1355, 1356, 1357, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1385, 1390, 1396, 1402, 1411, 1415, 1424, 1428, 1431, 1435, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1452, 1454, 1455, 1456, 1457, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 1480, 1483, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1506], "main": [0, 237, 655, 656, 657, 658, 659, 777, 792, 806, 816, 956, 959, 960, 961, 962, 964, 965, 966, 1341, 1344, 1345, 1348, 1354, 1356, 1357, 1362, 1363, 1364, 1366, 1371, 1378, 1381, 1384, 1385, 1387, 1414, 1416, 1440, 1442, 1443, 1444, 1447, 1448, 1450, 1451, 1454, 1455, 1457, 1458, 1461, 1462, 1470, 1479, 1480, 1487, 1489, 1490, 1492, 1493, 1494, 1497, 1500, 1501, 1503, 1506], "mainli": [495, 1376, 1447, 1448, 1452, 1494], "mainlin": 1348, "maintain": [239, 776, 924, 1341, 1346, 1354, 1357, 1366, 1371, 1383, 1385, 1442, 1443, 1448, 1451, 1452, 1455, 1456, 1457, 1471, 1479, 1480, 1483, 1487, 1489, 1501, 1502, 1505], "mainten": [1378, 1448], "maintrac": 1348, "major": [283, 284, 335, 891, 905, 906, 911, 1345, 1348, 1354, 1378, 1444, 1445, 1450, 1455, 1457, 1472, 1479, 1480, 1484, 1487, 1490, 1492, 1494, 1506], "major_to_minor": 1472, "make": [67, 81, 109, 164, 170, 242, 296, 336, 346, 366, 367, 458, 488, 489, 505, 506, 508, 604, 646, 668, 671, 701, 976, 985, 1002, 1026, 1114, 1304, 1308, 1328, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1354, 1356, 1357, 1359, 1360, 1361, 1366, 1369, 1370, 1371, 1374, 1376, 1380, 1381, 1384, 1387, 1389, 1390, 1391, 1396, 1403, 1411, 1430, 1440, 1441, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1484, 1487, 1489, 1490, 1492, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1506], "make_alpha": 1469, "make_array_from_callback": [136, 501, 1440], "make_array_from_process_local_data": [502, 1369, 1461, 1503], "make_array_from_single_device_arrai": [136, 1354, 1440, 1461], "make_async_copi": [1479, 1490], "make_async_remote_copi": [1478, 1479, 1490], "make_classif": 1414, "make_device_arrai": 1440, "make_jaxpr": [1342, 1348, 1354, 1377, 1378, 1382, 1441, 1446, 1459, 1460, 1462, 1463, 1466, 1468, 1470, 1474, 1475], "make_jaxpr_v1": 1348, "make_jnp_zero": 1456, "make_kernel": 1480, "make_lay": 1397, "make_mesh": [316, 1354, 1369, 1378, 1445, 1461, 1464, 1470, 1474, 1490, 1500, 1503], "make_np_zero": 1456, "make_pair": 1378, "make_ref": 1479, "make_schedul": 1396, "make_sharded_device_arrai": [1354, 1440], "make_tf_zero": 1456, "make_torch_zero": 1456, "make_z": 1344, "make_zero": 1390, "maketupl": [750, 921], "maml": 1342, "manag": [65, 66, 87, 88, 90, 91, 92, 97, 109, 110, 111, 112, 128, 129, 343, 499, 506, 556, 997, 1007, 1008, 1015, 1283, 1341, 1349, 1354, 1360, 1370, 1377, 1390, 1404, 1411, 1434, 1453, 1457, 1461, 1470, 1471, 1474, 1478, 1479, 1484, 1490, 1493, 1495, 1496, 1499, 1502, 1503, 1504, 1505], "mandat": 1371, "mandatori": 1381, "mani": [67, 178, 223, 378, 403, 415, 458, 466, 495, 700, 730, 882, 1019, 1023, 1026, 1036, 1094, 1341, 1342, 1345, 1350, 1354, 1359, 1363, 1366, 1369, 1370, 1371, 1374, 1377, 1378, 1382, 1383, 1385, 1424, 1440, 1441, 1442, 1444, 1445, 1446, 1448, 1449, 1450, 1452, 1454, 1456, 1457, 1459, 1461, 1462, 1467, 1468, 1470, 1472, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1488, 1489, 1492, 1494, 1497, 1498, 1501, 1502, 1503, 1506], "manifest": [1354, 1461, 1484, 1494], "manifold": [1350, 1467], "manipul": [1119, 1355, 1448, 1455, 1457, 1466, 1480], "manner": [239, 305, 306, 654, 969, 1304, 1341, 1370, 1376, 1428, 1435, 1444, 1460, 1475, 1498, 1500], "mantissa": [701, 719, 783, 1456], "mantissa_bit": [446, 1382], "manual": [168, 1283, 1284, 1302, 1342, 1343, 1344, 1349, 1354, 1356, 1361, 1363, 1366, 1370, 1371, 1378, 1380, 1382, 1387, 1428, 1445, 1457, 1461, 1462, 1468, 1470, 1475, 1479, 1483, 1484, 1487, 1490, 1493, 1502, 1503], "manual_ax": 1474, "manual_clip": 1370, "manually_batched_convolv": 1351, "manually_vectorized_convolv": 1351, "manylinux2010": 1354, "manylinux2014": 1354, "manylinux_2_27_x86_64": 1366, "map": [178, 198, 283, 284, 292, 303, 304, 315, 316, 356, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 458, 501, 503, 504, 570, 723, 742, 877, 1002, 1016, 1103, 1105, 1116, 1117, 1118, 1283, 1284, 1296, 1297, 1298, 1305, 1310, 1319, 1333, 1342, 1346, 1348, 1349, 1354, 1360, 1361, 1363, 1376, 1385, 1396, 1402, 1428, 1431, 1434, 1438, 1451, 1452, 1455, 1456, 1458, 1460, 1463, 1464, 1466, 1467, 1470, 1471, 1475, 1478, 1480, 1484, 1485, 1487, 1488, 1489, 1493, 1494, 1497, 1500, 1502, 1503], "map_coordin": 1448, "map_with_path": [1292, 1320, 1354], "mapped_av": 1348, "mapprimit": 1354, "mapsto": [1342, 1463, 1467], "march": [1371, 1377, 1440], "margin": [1342, 1371, 1467], "marin": 1383, "mark": [95, 100, 296, 638, 720, 1002, 1007, 1302, 1307, 1312, 1354, 1357, 1370, 1396, 1411, 1444, 1449, 1456, 1471, 1475, 1483, 1487, 1493, 1506], "markdown": 1366, "marked_pytre": 1396, "marker": 1497, "markupsaf": 1465, "martin": 534, "mask": [145, 181, 182, 185, 186, 188, 189, 190, 191, 192, 508, 536, 549, 554, 632, 679, 832, 881, 882, 899, 900, 1354, 1370, 1449, 1454, 1462, 1480, 1491, 1499], "mask_block": 1494, "mask_data": 1494, "mask_func": 832, "mask_index_map": 1494, "mask_kei": 1494, "mask_map": 1494, "mask_ref": 1494, "mask_types_find": 1494, "maskedarrai": 589, "mass": [1019, 1021, 1035, 1044, 1050, 1051, 1166, 1167, 1168, 1176, 1177, 1178, 1179, 1220, 1221, 1246, 1247, 1250, 1251, 1262, 1263, 1264, 1396], "mat": [199, 205, 209, 211, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 311, 1475], "mat_bcoo": 211, "mat_bcsr": 226, "mat_coo": [228, 232], "mat_dens": [221, 231, 235], "mat_out": [218, 220, 223], "match": [80, 130, 134, 178, 216, 223, 239, 254, 283, 301, 311, 313, 322, 324, 325, 336, 337, 343, 344, 348, 359, 360, 365, 367, 368, 382, 383, 392, 414, 416, 417, 418, 419, 421, 430, 432, 436, 449, 451, 452, 466, 467, 468, 469, 482, 494, 501, 502, 544, 569, 578, 614, 632, 648, 649, 668, 733, 767, 816, 817, 838, 851, 852, 868, 881, 886, 889, 900, 910, 911, 918, 985, 989, 1016, 1017, 1105, 1116, 1117, 1152, 1153, 1285, 1286, 1287, 1290, 1301, 1333, 1348, 1349, 1353, 1354, 1356, 1357, 1366, 1374, 1377, 1378, 1381, 1390, 1402, 1411, 1424, 1434, 1445, 1448, 1452, 1461, 1470, 1471, 1472, 1474, 1475, 1478, 1484, 1487, 1497, 1500, 1506], "materi": [304, 1342, 1361, 1385, 1386, 1441, 1454, 1461, 1467, 1483], "math": [150, 500, 502, 536, 549, 1018, 1047, 1120, 1149, 1160, 1346, 1354, 1377, 1382, 1460, 1462, 1463, 1470, 1503], "mathbb": [1342, 1463, 1467, 1492], "mathbf": [1194, 1195, 1342], "mathcal": [1382, 1468], "mathemat": [75, 289, 290, 293, 295, 297, 495, 544, 931, 1047, 1331, 1332, 1342, 1346, 1350, 1353, 1354, 1377, 1390, 1448, 1449, 1456, 1463, 1467], "mathit": [333, 391, 408, 470, 1094, 1148], "mathrm": [184, 299, 300, 309, 310, 312, 313, 314, 318, 319, 333, 349, 350, 369, 370, 371, 372, 373, 375, 386, 391, 393, 411, 412, 416, 417, 439, 470, 471, 472, 484, 485, 507, 508, 509, 510, 512, 513, 514, 515, 516, 533, 535, 536, 539, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 738, 746, 930, 934, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1167, 1168, 1170, 1171, 1180, 1182, 1188, 1189, 1190, 1192, 1196, 1197, 1198, 1200, 1203, 1204, 1217, 1236, 1239, 1252, 1254, 1269, 1270, 1271, 1273, 1275, 1276, 1277], "mathsf": [1342, 1463, 1467], "mathtt": [564, 764], "matmul": [91, 174, 311, 360, 543, 544, 664, 670, 753, 801, 804, 817, 835, 988, 989, 990, 991, 1094, 1116, 1117, 1118, 1354, 1374, 1390, 1445, 1461, 1474, 1482, 1484, 1488, 1492, 1494], "matmul_2d_wg_manu": 1445, "matmul_allgath": 1474, "matmul_allgather_overlap": 1474, "matmul_allgather_overlapped_bidi": 1474, "matmul_bas": [1445, 1474], "matmul_flop": 1492, "matmul_flops_intens": 1492, "matmul_kernel": [1480, 1488, 1492], "matmul_membw": 1492, "matmul_psumscatt": 1474, "matmul_psumscatter_overlap": 1474, "matmul_psumscatter_overlapped_bidi": 1474, "matmul_reduce_scatt": 1445, "matmul_reducescatt": 1445, "matmul_refer": 1474, "matmul_sharded_x": 1440, "matmul_smal": 1492, "matmul_warp_speci": 1483, "matplotlib": [1342, 1387, 1456, 1463, 1469, 1475, 1476, 1502], "matric": [242, 283, 311, 395, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 528, 680, 747, 781, 792, 800, 802, 803, 804, 805, 807, 811, 816, 818, 957, 1045, 1047, 1084, 1090, 1101, 1102, 1342, 1354, 1448, 1467, 1468, 1471, 1474, 1475, 1483, 1488, 1492, 1494], "matrix": [33, 91, 199, 200, 201, 202, 203, 211, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 317, 356, 360, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 508, 544, 640, 645, 655, 664, 670, 680, 747, 753, 781, 788, 789, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 810, 811, 812, 813, 816, 817, 818, 833, 834, 835, 840, 883, 887, 954, 957, 986, 988, 989, 990, 991, 1045, 1047, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1116, 1117, 1118, 1119, 1248, 1249, 1333, 1347, 1354, 1356, 1377, 1382, 1414, 1424, 1443, 1445, 1448, 1461, 1464, 1468, 1471, 1475, 1480, 1482, 1484, 1486, 1487, 1488, 1490, 1491, 1493, 1495, 1500, 1503], "matrix_norm": 818, "matrix_pow": 1354, "matrix_rank": 1354, "matrix_transpos": [33, 880, 957], "matrix_vector_product": 991, "matter": [98, 489, 1342, 1354, 1369, 1371, 1377, 1445, 1447, 1456, 1461, 1463, 1467, 1469, 1474, 1490, 1498], "mattjj": [1445, 1447, 1453, 1454], "matur": [1345, 1384, 1444, 1480], "matvec": [356, 990], "max": [10, 12, 188, 255, 305, 333, 417, 425, 443, 462, 541, 542, 565, 604, 626, 701, 805, 807, 839, 842, 864, 896, 948, 998, 999, 1000, 1001, 1023, 1084, 1104, 1116, 1117, 1118, 1162, 1265, 1348, 1354, 1370, 1374, 1377, 1489, 1490, 1494], "max_cache_size_": 1354, "max_concurrent_step": [150, 168, 1483], "max_dim": [1354, 1374], "max_iter": [403, 1094], "max_line_width": [589, 591], "max_norm": 1396, "max_shared_dim": 1402, "max_siz": 1493, "max_squar": 1084, "max_width": 86, "maxa": 1484, "maxexp": 701, "maxim": [305, 1464, 1490, 1503], "maximum": [5, 10, 34, 150, 168, 171, 173, 239, 307, 352, 403, 416, 417, 443, 481, 580, 581, 626, 716, 836, 839, 842, 843, 848, 849, 850, 853, 854, 855, 856, 858, 861, 864, 877, 896, 948, 985, 998, 1052, 1058, 1105, 1116, 1117, 1118, 1148, 1152, 1153, 1162, 1353, 1354, 1356, 1377, 1382, 1396, 1415, 1456, 1464, 1465, 1468, 1473, 1483, 1493, 1494], "maximum_supported_calling_convention_vers": 1371, "maximum_supported_serialization_vers": 1415, "maxit": [1105, 1116, 1117, 1118], "maxlen": 1445, "maxpool": 1397, "maxtext": [1381, 1383], "maxval": [623, 671, 702, 714, 968, 1052, 1058], "maxwel": [1029, 1384], "may_alia": 95, "mayb": [1342, 1348, 1377, 1387, 1442, 1446, 1451, 1453, 1467, 1480], "maybe_find_leaked_trac": 1354, "mb": 1471, "mbarrier": 1484, "mcmc": 1353, "md": [1345, 1354, 1356, 1374, 1383, 1431, 1458], "mdc": 1506, "mdl": [131, 132], "me": [1445, 1447, 1474], "mean": [10, 69, 82, 83, 98, 100, 135, 136, 178, 181, 182, 250, 251, 296, 341, 343, 344, 345, 346, 347, 360, 378, 421, 424, 426, 458, 495, 500, 526, 529, 531, 537, 554, 602, 620, 637, 641, 645, 664, 670, 720, 732, 753, 763, 787, 789, 799, 804, 813, 817, 833, 839, 853, 854, 855, 856, 858, 860, 861, 862, 864, 877, 895, 913, 917, 926, 939, 946, 954, 987, 988, 989, 998, 999, 1000, 1001, 1002, 1016, 1019, 1045, 1050, 1059, 1104, 1110, 1111, 1114, 1115, 1212, 1248, 1249, 1266, 1304, 1341, 1342, 1344, 1345, 1348, 1349, 1350, 1351, 1354, 1356, 1359, 1361, 1363, 1365, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1385, 1390, 1396, 1397, 1411, 1414, 1415, 1416, 1424, 1435, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1453, 1454, 1456, 1459, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1494, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1506], "meaning": [501, 1356, 1369, 1377, 1460, 1489, 1497], "meaningfulli": 1344, "meant": [76, 79, 132, 1342, 1344, 1345, 1348, 1354, 1376, 1378, 1389, 1395, 1431, 1438, 1447, 1455, 1461, 1463, 1464, 1474, 1478, 1480, 1489, 1493], "meantim": [1444, 1484], "meanwhil": [1374, 1390, 1445, 1472], "measur": [985, 1347, 1377, 1381, 1448, 1452, 1471, 1484, 1492], "mechan": [67, 97, 135, 489, 670, 1342, 1348, 1349, 1350, 1354, 1361, 1363, 1364, 1366, 1370, 1374, 1377, 1378, 1389, 1416, 1445, 1446, 1449, 1451, 1452, 1455, 1461, 1463, 1467, 1471, 1474, 1479, 1480, 1490, 1495], "median": [855, 857, 859, 877, 879, 901, 1110, 1115], "medium": 1489, "meet": [1364, 1448, 1450], "megascal": 1356, "melissa": [1378, 1390], "mellon": 311, "member": [1341, 1342, 1377, 1424, 1444, 1448, 1480], "membership": 769, "membw": 1492, "memoiz": [268, 1385, 1447], "memori": [67, 100, 118, 150, 157, 170, 283, 296, 415, 458, 488, 495, 820, 1002, 1010, 1011, 1065, 1339, 1341, 1342, 1343, 1344, 1348, 1354, 1363, 1377, 1378, 1381, 1382, 1385, 1396, 1411, 1434, 1435, 1443, 1445, 1454, 1461, 1463, 1467, 1468, 1472, 1473, 1474, 1477, 1478, 1479, 1480, 1482, 1486, 1488, 1491, 1492, 1494, 1496, 1500, 1501, 1503], "memory1": 1367, "memory9": 1367, "memory_analysi": [1435, 1471], "memory_kind": [1434, 1461, 1471, 1475, 1500], "memory_regist": 1483, "memory_spac": [139, 149, 1062, 1065, 1479, 1483, 1484, 1487, 1488, 1490, 1493], "memory_stat": 1354, "memory_thread_idx": 1483, "memory_view": 1367, "memoryref": 180, "memoryreftransform": 149, "memoryspac": [151, 154, 1478, 1487, 1488, 1490, 1493, 1494], "memoryview": 1354, "memref": 158, "mental": [1442, 1487, 1490], "mention": [198, 381, 424, 459, 460, 1283, 1349, 1353, 1366, 1369, 1377, 1440, 1444, 1445, 1447, 1448, 1456, 1464, 1474, 1484, 1490, 1495, 1498], "menu": 1496, "mere": [1364, 1495], "merg": [302, 1354, 1361, 1395, 1440, 1445, 1470], "merge_list": 1348, "merit": 1484, "mersenn": 1498, "mesh": [83, 131, 132, 135, 136, 198, 316, 493, 500, 501, 502, 504, 779, 840, 1283, 1284, 1354, 1361, 1369, 1371, 1378, 1381, 1382, 1402, 1405, 1411, 1415, 1434, 1440, 1445, 1447, 1464, 1471, 1484, 1490, 1495, 1500], "mesh1d": 1474, "mesh2d": 1474, "mesh_axis_nam": 1503, "mesh_col": [501, 502], "mesh_devic": 1369, "mesh_lib": [504, 1415], "mesh_row": [501, 502], "mesh_shap": [131, 132, 1503], "mesh_shard": 1464, "mesh_util": [198, 504, 1354, 1381, 1398], "meshaxisnam": 1434, "meshexecut": 1385, "meshexecutablefastpathdata": 1385, "meshgrid": [742, 751, 779, 841, 872], "meshpspecshard": 1354, "meso": [1354, 1450], "mess": [1349, 1447], "messag": [118, 119, 120, 178, 499, 1286, 1287, 1354, 1356, 1357, 1361, 1366, 1370, 1390, 1415, 1453, 1462, 1478, 1484, 1489, 1496], "messi": 1351, "meta": [1307, 1342], "meta_field": [1307, 1354, 1506], "meta_grad": 1342, "meta_loss_fn": 1342, "metaclass": 1444, "metadata": [178, 505, 506, 668, 1307, 1348, 1354, 1366, 1371, 1378, 1447, 1452, 1455, 1461, 1484, 1497, 1506], "metal": [1341, 1384], "method": [0, 10, 47, 62, 63, 64, 71, 72, 73, 76, 79, 98, 100, 102, 106, 114, 126, 139, 140, 141, 148, 149, 150, 152, 155, 156, 157, 158, 159, 183, 199, 200, 201, 202, 203, 204, 239, 245, 256, 257, 258, 259, 260, 261, 262, 267, 291, 292, 348, 456, 586, 592, 624, 628, 629, 631, 632, 638, 648, 649, 661, 668, 701, 704, 708, 709, 710, 713, 720, 725, 730, 748, 752, 755, 756, 757, 758, 760, 769, 778, 798, 802, 809, 851, 852, 857, 859, 864, 870, 871, 879, 901, 905, 911, 924, 932, 944, 949, 957, 969, 971, 972, 973, 974, 983, 1007, 1045, 1052, 1062, 1063, 1076, 1084, 1085, 1094, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1115, 1118, 1119, 1120, 1209, 1265, 1304, 1342, 1344, 1347, 1348, 1349, 1350, 1353, 1354, 1356, 1360, 1361, 1369, 1370, 1371, 1378, 1384, 1387, 1390, 1396, 1414, 1415, 1423, 1428, 1431, 1442, 1444, 1448, 1449, 1452, 1461, 1462, 1463, 1471, 1475, 1478, 1479, 1490, 1494, 1496, 1497, 1500, 1502, 1506], "metric": [1346, 1354, 1448, 1471, 1503], "mezzadri": 1047, "mgpu": [150, 167, 1484], "mgrid": [751, 779, 840, 872, 1469], "mha": 508, "mhlo": [1344, 1354, 1371, 1378], "mi": [1342, 1456, 1467], "micro": [1450, 1461], "microbatch": [1461, 1474], "microbenchmark": [1347, 1377, 1496], "micromamba": [1378, 1390], "microsoft": [1384, 1444], "mid": 1444, "middl": [410, 686, 691, 1445], "midpoint": [857, 859, 879, 901], "might": [84, 97, 112, 113, 119, 136, 150, 160, 170, 379, 460, 461, 462, 463, 464, 578, 804, 985, 1306, 1342, 1345, 1346, 1348, 1349, 1352, 1354, 1356, 1357, 1359, 1360, 1361, 1363, 1366, 1370, 1376, 1377, 1378, 1381, 1382, 1384, 1396, 1439, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1467, 1468, 1470, 1474, 1475, 1476, 1479, 1480, 1484, 1489, 1502, 1503], "migrat": [1354, 1356, 1372, 1484], "million": [1342, 1467], "millisecond": 1496, "min": [10, 12, 98, 189, 255, 306, 333, 400, 401, 404, 416, 427, 444, 463, 542, 566, 571, 626, 701, 805, 808, 811, 812, 836, 839, 864, 896, 948, 999, 1090, 1091, 1092, 1095, 1101, 1265, 1354, 1370, 1374, 1378, 1402, 1489], "min_dim": [1354, 1374], "min_width": 86, "mind": [1052, 1357, 1363, 1376, 1377, 1381, 1444, 1446, 1452, 1456, 1480, 1484, 1487, 1488, 1500, 1503, 1505], "mindless": 1476, "minexp": 701, "ming": 1447, "mini": [1395, 1465, 1466, 1473], "miniconda": 1366, "miniforge3": 1465, "minim": [69, 201, 203, 1341, 1342, 1345, 1348, 1349, 1354, 1356, 1363, 1366, 1378, 1380, 1395, 1414, 1442, 1448, 1449, 1461, 1462, 1467, 1475, 1484, 1490, 1503], "minimum": [6, 10, 36, 308, 353, 416, 417, 444, 580, 581, 586, 604, 619, 626, 679, 717, 836, 837, 839, 842, 848, 850, 853, 854, 855, 856, 858, 861, 864, 877, 896, 902, 927, 948, 951, 975, 976, 977, 978, 979, 980, 998, 999, 1000, 1001, 1052, 1058, 1354, 1356, 1370, 1371, 1378, 1415, 1457, 1484, 1487, 1492, 1494, 1495, 1503], "minimum_supported_calling_convention_vers": 1371, "minimum_supported_serialization_vers": [1371, 1415], "minlength": 604, "minor": [283, 284, 335, 1105, 1345, 1354, 1371, 1450, 1457, 1472, 1492, 1494], "minormost": [1484, 1485], "minu": [375, 536, 1155], "minuend": 890, "minval": [623, 671, 702, 714, 968, 1052, 1058], "mip": 305, "mirror": [1103, 1374, 1384, 1424, 1448, 1475, 1480, 1503], "miscellan": 1383, "miscompil": 1354, "mise": [1279, 1280], "mishandl": 1354, "mislead": 1347, "mismatch": [1344, 1447, 1462, 1472], "miss": [178, 255, 268, 1348, 1354, 1361, 1378, 1382, 1385, 1387, 1390, 1444, 1468, 1470, 1490], "mission": 1479, "mistak": [1453, 1470, 1478], "mistakenli": 1354, "misus": 1455, "mitig": [1378, 1380, 1382, 1462, 1468], "mix": [216, 301, 359, 418, 482, 501, 1342, 1353, 1369, 1374, 1440, 1442, 1444, 1448, 1460, 1467, 1470, 1474, 1475, 1494, 1505], "mixtur": [1444, 1474], "mkdir": [1366, 1381], "mkvirtualenv": 1366, "ml": [112, 128, 129, 927, 975, 1103, 1342, 1354, 1356, 1357, 1364, 1366, 1369, 1384, 1387, 1454, 1462, 1480, 1487, 1492], "ml_dtype": [263, 1354], "mlir": [248, 284, 1348, 1354, 1356, 1371, 1374, 1385, 1390, 1416, 1435, 1446, 1449, 1457, 1480, 1484, 1501], "mlir_api_vers": 1354, "mlir_modul": [1371, 1415], "mlir_module_seri": [1371, 1415], "mlir_module_serialization_vers": [1354, 1371], "mlircontext": 1348, "mlp": [1445, 1465, 1473, 1503, 1506], "mlp_dim": 1503, "mlp_in": 1503, "mlp_out": 1503, "mlp_skip": 1503, "mlperf": 1443, "mlr": 1023, "mlup": 1387, "mlups3d": 1387, "mm": [1333, 1354, 1492], "mm2": 1333, "mm_flop": 1492, "mm_func": 1492, "mma": [161, 164, 165, 1482], "mma_async": 1484, "mma_transform": 1484, "mnist": [1465, 1473], "mnist_data": 1473, "mnist_dataset": 1465, "mnist_dataset_test": 1465, "moc": 1506, "mock": [1354, 1366, 1495], "mock_num_gpu_process": 1356, "mod": [255, 718, 909, 1354, 1374, 1490], "modal": 1245, "mode": [10, 11, 56, 67, 69, 72, 75, 79, 118, 126, 128, 129, 212, 293, 295, 297, 331, 348, 349, 356, 372, 373, 375, 378, 379, 381, 411, 412, 457, 459, 460, 461, 462, 463, 464, 471, 478, 481, 484, 485, 488, 495, 511, 520, 521, 522, 523, 524, 525, 531, 592, 625, 637, 641, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 761, 808, 864, 877, 899, 900, 906, 950, 951, 994, 998, 999, 1000, 1001, 1019, 1023, 1026, 1036, 1056, 1071, 1072, 1073, 1074, 1095, 1103, 1106, 1107, 1108, 1109, 1112, 1284, 1285, 1332, 1346, 1354, 1357, 1359, 1364, 1366, 1372, 1374, 1377, 1378, 1379, 1381, 1385, 1390, 1397, 1403, 1415, 1424, 1445, 1448, 1449, 1451, 1452, 1462, 1466, 1469, 1474, 1475, 1478, 1484, 1496, 1500, 1505], "model": [339, 1002, 1342, 1350, 1352, 1353, 1354, 1356, 1364, 1370, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1396, 1411, 1414, 1431, 1440, 1442, 1443, 1444, 1445, 1448, 1450, 1452, 1456, 1462, 1465, 1467, 1468, 1470, 1473, 1474, 1475, 1477, 1480, 1483, 1484, 1486, 1487, 1491, 1492, 1495, 1496, 1500, 1501, 1502], "model_appli": 1503, "model_replica": 1369, "moder": [1487, 1490], "moderesult": 1245, "modern": [1350, 1366, 1444, 1484, 1487, 1492, 1498, 1503, 1505, 1506], "modif": [10, 864, 1341, 1361, 1456, 1501], "modifi": [10, 100, 318, 319, 700, 720, 746, 864, 877, 882, 899, 900, 1115, 1143, 1144, 1145, 1146, 1279, 1280, 1344, 1354, 1357, 1370, 1402, 1414, 1431, 1448, 1456, 1462, 1471, 1475, 1479, 1480, 1489, 1490, 1493, 1498, 1502, 1503], "modprob": 1496, "modul": [152, 153, 248, 267, 394, 586, 592, 701, 721, 806, 1341, 1344, 1345, 1346, 1348, 1354, 1366, 1374, 1375, 1377, 1378, 1381, 1385, 1387, 1388, 1390, 1441, 1442, 1444, 1448, 1449, 1458, 1461, 1462, 1486, 1489, 1498, 1500, 1506], "module_context": 1390, "module_kept_var_idx": [1371, 1415], "modulecontext": 1390, "modulo": [718, 909, 1374, 1484], "modulu": 1052, "mojav": 1354, "moment": [150, 1348, 1354, 1374, 1385, 1396, 1444, 1456, 1462, 1484, 1485, 1489, 1503], "momentum": 1396, "monei": 1503, "monitor": 1471, "monoid": 441, "monolith": [1354, 1384], "monoton": [539, 551, 661], "monotoni": 1498, "month": [1345, 1354, 1365, 1371, 1443, 1450, 1501], "moor": 807, "moral": [1447, 1449], "more": [10, 13, 52, 67, 69, 74, 76, 79, 82, 87, 88, 90, 95, 98, 112, 130, 139, 140, 150, 173, 175, 198, 245, 248, 283, 286, 296, 298, 302, 303, 304, 328, 337, 356, 375, 378, 412, 415, 416, 417, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 442, 443, 444, 445, 447, 448, 450, 454, 459, 481, 495, 501, 504, 507, 510, 538, 539, 541, 545, 552, 570, 571, 572, 582, 584, 599, 600, 601, 614, 616, 617, 618, 625, 627, 664, 667, 670, 671, 672, 677, 678, 703, 722, 724, 744, 745, 762, 763, 769, 776, 787, 790, 792, 793, 797, 798, 800, 802, 803, 804, 807, 811, 813, 818, 823, 864, 868, 873, 878, 900, 911, 913, 917, 924, 927, 928, 944, 949, 950, 951, 954, 985, 991, 993, 994, 995, 1002, 1010, 1011, 1016, 1017, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1084, 1089, 1105, 1151, 1288, 1296, 1302, 1306, 1307, 1310, 1333, 1341, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1357, 1359, 1361, 1362, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1387, 1389, 1390, 1395, 1396, 1397, 1402, 1403, 1411, 1414, 1415, 1416, 1423, 1424, 1428, 1431, 1434, 1435, 1439, 1440, 1441, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1477, 1478, 1479, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1496, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506], "moreov": [495, 1342, 1346, 1348, 1445, 1451, 1453, 1459, 1463, 1464, 1474, 1494], "mortem": 1462, "mosaic": [143, 150, 166, 167, 1385, 1409, 1478, 1485, 1487, 1488], "mosaic_gpu": [178, 1407, 1478, 1483, 1484], "mosaic_gpu_dump_llvm": 1484, "mosaic_gpu_dump_mlir_pass": 1484, "mosaic_gpu_dump_ptx": 1484, "mosaic_gpu_dump_ptxa": 1484, "mosaic_gpu_dump_sass": 1484, "mosaic_gpu_dump_sass_ctrl": 1484, "mosaic_gpu_dump_to": 1484, "mosaic_gpu_llvm_debug_onli": 1484, "mosaic_tpu": 178, "most": [80, 93, 118, 119, 120, 131, 132, 328, 360, 381, 424, 454, 455, 459, 460, 461, 462, 463, 464, 501, 617, 638, 654, 670, 701, 730, 778, 797, 804, 868, 884, 890, 917, 924, 927, 944, 969, 975, 976, 991, 1005, 1063, 1077, 1089, 1245, 1308, 1342, 1344, 1345, 1348, 1350, 1351, 1354, 1355, 1359, 1363, 1366, 1369, 1370, 1371, 1374, 1377, 1378, 1379, 1380, 1381, 1384, 1385, 1390, 1404, 1411, 1414, 1415, 1424, 1428, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1452, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1467, 1470, 1473, 1474, 1480, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1503, 1505, 1506], "mostli": [72, 239, 357, 1337, 1346, 1348, 1368, 1447, 1448, 1457, 1461, 1474, 1480, 1496, 1503], "motion": 1381, "motiv": [1342, 1354, 1444, 1448, 1451, 1456, 1463, 1481, 1505], "move": [126, 136, 422, 815, 846, 949, 957, 1345, 1346, 1348, 1354, 1356, 1377, 1382, 1398, 1440, 1444, 1445, 1446, 1448, 1452, 1462, 1464, 1471, 1478, 1479, 1484, 1487, 1490, 1494, 1496, 1502], "move_batch_axi": 1348, "moveaxi": [917, 949, 957, 1348], "movement": [1376, 1445, 1461, 1471, 1474], "mpi": [98, 1354, 1356], "mpi4pi": 98, "mpiexec": 98, "mpirun": 98, "mpl": 1469, "mpmath": 1465, "mpmd": 493, "mqa": 508, "msg": [118, 1370, 1390, 1454, 1460, 1472], "msort": 1354, "msvc": [1354, 1366], "msys2": 1366, "mt": [803, 834, 1484], "mt19937": 1498, "mu": [1029, 1045, 1059, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1248, 1249, 1262, 1263, 1264, 1503], "mu_hat": 1503, "much": [67, 82, 223, 356, 378, 495, 678, 1118, 1342, 1348, 1349, 1352, 1354, 1366, 1377, 1378, 1379, 1382, 1384, 1387, 1397, 1441, 1443, 1445, 1447, 1448, 1451, 1453, 1455, 1456, 1459, 1460, 1463, 1464, 1467, 1468, 1472, 1479, 1480, 1484, 1487, 1489, 1490, 1498, 1503], "mul": [449, 503, 1342, 1344, 1348, 1349, 1361, 1374, 1377, 1382, 1390, 1441, 1446, 1447, 1449, 1460, 1463, 1468, 1474, 1489], "mul_add": 1446, "mul_add_abstract": 1446, "mul_add_mlir": 1446, "mul_add_p": 1446, "mul_dual": 1349, "mul_jvp": 1348, "mul_p": [1348, 1414, 1466], "mul_transpose_rul": 1348, "mulop": [1390, 1446], "mult_transpos": 1390, "multi": [29, 90, 93, 98, 198, 424, 501, 508, 646, 664, 679, 731, 753, 754, 779, 787, 799, 819, 831, 833, 834, 841, 872, 876, 906, 939, 951, 976, 982, 1002, 1005, 1105, 1245, 1266, 1295, 1296, 1338, 1343, 1354, 1356, 1369, 1372, 1374, 1378, 1379, 1384, 1411, 1415, 1431, 1434, 1440, 1445, 1447, 1451, 1460, 1469, 1474, 1480, 1485, 1487, 1490, 1498, 1500, 1503, 1506], "multi_device_test": 1377, "multi_dot": [670, 1354], "multi_gpu": 1366, "multi_index": 906, "multi_process": 1366, "multiacceler": 1366, "multicast": [166, 1484], "multicontrol": 1354, "multidimension": [656, 682, 683, 685, 688, 689, 690, 693, 694, 695, 696, 697, 699, 982, 1071, 1072, 1073, 1074, 1354, 1434, 1480], "multigamma": 1154, "multihost": 1354, "multihost_util": [1354, 1398, 1440, 1461], "multinomi": 1354, "multipl": [10, 11, 29, 91, 98, 120, 170, 213, 214, 248, 252, 253, 317, 331, 349, 372, 373, 375, 398, 411, 412, 418, 457, 458, 459, 461, 464, 466, 471, 478, 481, 484, 485, 495, 508, 544, 570, 583, 599, 600, 601, 654, 664, 677, 721, 723, 729, 753, 754, 782, 783, 787, 799, 807, 811, 813, 817, 833, 835, 841, 846, 847, 864, 872, 876, 938, 954, 976, 988, 989, 990, 991, 1002, 1016, 1081, 1100, 1101, 1114, 1295, 1342, 1344, 1347, 1348, 1349, 1354, 1355, 1356, 1357, 1359, 1361, 1366, 1369, 1371, 1374, 1376, 1377, 1380, 1381, 1382, 1383, 1385, 1390, 1402, 1406, 1411, 1424, 1440, 1441, 1442, 1445, 1447, 1451, 1454, 1463, 1464, 1466, 1467, 1468, 1471, 1472, 1474, 1475, 1476, 1478, 1479, 1480, 1482, 1485, 1486, 1487, 1488, 1490, 1491, 1497, 1500, 1503, 1506, 1507], "multiple_result": [1354, 1466], "multipli": [10, 303, 304, 373, 389, 418, 464, 529, 648, 650, 664, 723, 781, 797, 804, 851, 864, 1033, 1089, 1090, 1094, 1342, 1344, 1348, 1354, 1361, 1381, 1390, 1424, 1443, 1447, 1452, 1454, 1463, 1467, 1483, 1485, 1487, 1488, 1489, 1492, 1494], "multiply_add": 1390, "multiply_add_abstract_ev": 1390, "multiply_add_batch": 1390, "multiply_add_impl": 1390, "multiply_add_lax": 1390, "multiply_add_low": 1390, "multiply_add_numpi": 1390, "multiply_add_p": 1390, "multiply_add_prim": 1390, "multiply_add_transpos": 1390, "multiply_add_value_and_jvp": 1390, "multiply_dynam": 1378, "multiprocess": [502, 1503], "multiprocessor": [1483, 1484], "multistream": 1451, "multithread": 1465, "multivari": [1045, 1154, 1248, 1249, 1342], "mung": [1348, 1465, 1473], "must": [67, 69, 72, 75, 80, 95, 98, 100, 118, 119, 130, 134, 135, 136, 143, 150, 166, 168, 178, 198, 206, 209, 216, 220, 239, 241, 245, 250, 251, 252, 253, 255, 287, 289, 296, 298, 299, 300, 301, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 331, 332, 334, 336, 338, 339, 340, 349, 350, 356, 359, 360, 363, 368, 372, 373, 375, 377, 378, 381, 382, 383, 386, 389, 391, 392, 395, 397, 406, 408, 411, 412, 413, 414, 416, 417, 418, 419, 421, 423, 425, 426, 427, 429, 430, 435, 436, 437, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 456, 457, 458, 465, 466, 467, 468, 469, 471, 472, 477, 478, 482, 483, 484, 485, 488, 493, 494, 500, 501, 502, 508, 512, 519, 538, 544, 562, 569, 570, 571, 584, 602, 604, 605, 610, 612, 614, 623, 625, 627, 632, 633, 634, 637, 639, 641, 646, 657, 659, 660, 661, 664, 667, 679, 681, 683, 687, 689, 694, 697, 700, 714, 716, 717, 720, 721, 729, 733, 734, 735, 738, 744, 745, 762, 763, 782, 783, 784, 785, 786, 787, 788, 789, 799, 804, 814, 815, 817, 827, 829, 830, 833, 834, 835, 836, 842, 847, 853, 856, 868, 881, 882, 885, 887, 888, 891, 899, 900, 906, 910, 911, 914, 918, 919, 920, 925, 927, 941, 945, 947, 951, 956, 960, 962, 963, 964, 966, 975, 976, 977, 978, 979, 980, 984, 986, 988, 989, 990, 991, 993, 994, 998, 999, 1000, 1001, 1002, 1017, 1019, 1020, 1021, 1023, 1025, 1028, 1031, 1033, 1035, 1040, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1057, 1059, 1078, 1079, 1080, 1083, 1092, 1093, 1102, 1105, 1106, 1107, 1108, 1109, 1112, 1116, 1117, 1118, 1151, 1162, 1245, 1266, 1283, 1284, 1301, 1302, 1307, 1308, 1310, 1312, 1331, 1333, 1342, 1344, 1346, 1347, 1348, 1349, 1354, 1355, 1356, 1357, 1359, 1361, 1366, 1369, 1370, 1371, 1377, 1378, 1380, 1382, 1384, 1385, 1390, 1411, 1415, 1424, 1428, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1451, 1455, 1456, 1457, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1470, 1472, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1503, 1506], "mutabl": [1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1343, 1348, 1349, 1368, 1377, 1475, 1480, 1484, 1488], "mutat": [100, 720, 1064, 1068, 1069, 1346, 1354, 1377, 1428, 1442, 1462, 1475, 1479, 1488, 1498, 1503], "mutual": [625, 925, 1047, 1445, 1447], "mv": 1333, "mv1": 1333, "mv2": 1333, "mx": 1457, "mxfp8": [511, 543, 544], "mxn": 816, "mxnxk": 1484, "mxu": [1489, 1492, 1493], "my": [337, 1381, 1449, 1457], "my_arrai": 1470, "my_bucket": 1381, "my_cmap": 1469, "my_fft": 1402, "my_funct": 1439, "my_id": 1490, "my_label": 1008, "my_lay": 1445, "my_log": 1377, "my_log_or_i": 1377, "my_lowering_rul": 1371, "my_new_bind": 1371, "my_new_prim": 1371, "my_program": 1356, "my_python": 1366, "my_scop": 1374, "my_softmax_composit": 337, "my_tangent_composit": 337, "my_target": 1371, "my_top_k": 1374, "my_top_k_with_dimens": 1374, "mycontain": [1308, 1309, 1310], "mydataclasscontain": 1506, "mylog": 1371, "myothercontain": 1506, "mypi": [1354, 1357, 1366], "myriad": 1497, "myst": 1366, "mysteri": [1354, 1355], "mystruct": 1307, "mytestcas": 1354, "mytre": [1497, 1506], "mz": 1457, "m\u00e4chler": 534, "n": [157, 171, 173, 175, 222, 237, 239, 296, 341, 343, 344, 345, 346, 347, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 434, 486, 508, 512, 531, 537, 544, 571, 600, 601, 625, 626, 632, 640, 645, 646, 648, 649, 650, 651, 656, 658, 659, 660, 664, 669, 680, 682, 684, 686, 687, 688, 691, 692, 693, 696, 698, 700, 703, 723, 731, 733, 739, 740, 741, 742, 747, 753, 761, 769, 779, 781, 787, 788, 789, 790, 792, 797, 798, 799, 800, 801, 802, 803, 805, 807, 808, 810, 811, 812, 813, 816, 818, 819, 831, 832, 833, 835, 840, 851, 852, 857, 859, 860, 862, 868, 876, 879, 881, 887, 899, 901, 910, 924, 925, 941, 946, 950, 954, 955, 957, 959, 961, 962, 965, 966, 976, 977, 978, 979, 980, 981, 986, 987, 988, 989, 990, 991, 1021, 1026, 1028, 1044, 1045, 1047, 1070, 1071, 1073, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1108, 1112, 1121, 1130, 1133, 1134, 1136, 1148, 1152, 1153, 1158, 1162, 1165, 1176, 1177, 1178, 1179, 1246, 1247, 1250, 1251, 1342, 1347, 1348, 1349, 1354, 1356, 1357, 1359, 1366, 1378, 1379, 1380, 1381, 1382, 1384, 1402, 1403, 1441, 1445, 1447, 1451, 1459, 1460, 1461, 1462, 1464, 1465, 1467, 1468, 1470, 1471, 1473, 1474, 1483, 1484, 1485, 1487, 1489, 1490, 1492, 1494, 1496, 1497, 1498, 1500, 1502, 1506], "n1": 1348, "n10": [1342, 1467], "n2": 1348, "n_batch": [211, 223, 226, 241], "n_class": 1414, "n_data": 1209, "n_dens": [211, 223, 226, 241], "n_dimens": 1209, "n_i": 1492, "n_in": [1464, 1474, 1506], "n_l": 1153, "n_max": 1162, "n_n": 1162, "n_out": [1464, 1474, 1506], "n_slice": [1483, 1492], "n_spars": 199, "n_target": [1465, 1473], "n_trial": 1494, "n_uniqu": [976, 977, 978, 979, 980], "nabla": [541, 542, 1342, 1350, 1467], "naiv": [375, 412, 671, 678, 823, 934, 1342, 1351, 1378, 1442, 1467, 1475, 1487, 1488, 1490, 1492, 1494], "naively_batched_apply_matrix": 1475, "name": [29, 89, 91, 104, 138, 152, 153, 178, 198, 260, 267, 276, 283, 284, 285, 286, 287, 296, 303, 304, 315, 316, 337, 348, 394, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 503, 504, 505, 506, 668, 670, 671, 923, 946, 969, 977, 978, 979, 987, 1002, 1007, 1009, 1010, 1011, 1103, 1110, 1113, 1114, 1115, 1267, 1268, 1283, 1284, 1307, 1334, 1342, 1345, 1348, 1349, 1354, 1357, 1363, 1366, 1367, 1370, 1371, 1374, 1378, 1379, 1382, 1384, 1385, 1390, 1400, 1402, 1411, 1415, 1423, 1424, 1428, 1431, 1434, 1441, 1442, 1443, 1444, 1445, 1446, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1463, 1464, 1467, 1468, 1473, 1474, 1478, 1480, 1483, 1484, 1489, 1490, 1495, 1496, 1498, 1499, 1500, 1501, 1504, 1506], "name_count": 1349, "name_scop": 505, "name_stack": 1390, "named_arg": 118, "named_cal": 1354, "named_scop": [1354, 1445], "named_shap": 1354, "named_shard": 1434, "namedshap": 1444, "namedshard": [44, 83, 198, 452, 500, 501, 502, 572, 618, 672, 813, 833, 873, 910, 954, 995, 1283, 1354, 1369, 1371, 1378, 1381, 1382, 1402, 1415, 1434, 1440, 1445, 1461, 1474, 1490, 1500], "namedtupl": [69, 113, 252, 253, 494, 794, 977, 978, 979, 1342, 1348, 1354, 1396, 1460, 1463, 1497, 1502, 1506], "namegen": 1348, "names_which_can_be_offload": [1382, 1471], "names_which_can_be_sav": [1382, 1471], "namespac": [328, 813, 816, 817, 1354, 1378, 1428, 1437, 1444, 1502], "namestack": 1390, "nan": [10, 88, 120, 381, 391, 395, 397, 470, 475, 536, 538, 549, 564, 573, 574, 575, 576, 579, 580, 581, 582, 587, 648, 649, 650, 651, 712, 716, 717, 764, 768, 770, 771, 772, 773, 788, 810, 837, 843, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 878, 879, 894, 901, 918, 931, 934, 942, 946, 950, 951, 976, 987, 994, 1076, 1098, 1136, 1140, 1149, 1151, 1160, 1161, 1266, 1342, 1354, 1360, 1361, 1362, 1363, 1449, 1463, 1474, 1478, 1480, 1485], "nan_check": [120, 1361], "nan_polici": [1245, 1265, 1266], "nanargmax": [580, 850, 1462], "nanargmin": [581, 849, 1462], "nancumprod": [648, 650], "nancumsum": [649, 651], "nanerror": [116, 117, 122, 124], "nanj": 918, "nanmax": [837, 854, 855, 856, 858, 861], "nanmean": [853, 855, 856, 858, 860, 861, 862], "nanmin": [843, 853, 854, 855, 858, 861], "nanobind": 1378, "nanpercentil": [859, 879], "nanprod": [853, 854, 856, 861], "nanquantil": [857, 901], "nanstd": [862, 946, 987], "nansum": [853, 854, 856, 858, 1462], "nansum_2": 1462, "nanvar": [860, 946, 987], "narg": 969, "narrow": [447, 448, 1357, 1446, 1489], "narrowli": 1383, "naryop": 1354, "naryop_dtype_rul": 1354, "nativ": [74, 252, 253, 458, 488, 1348, 1354, 1371, 1374, 1448, 1449, 1456, 1475, 1489, 1492, 1498, 1506], "native_seri": [1354, 1356], "native_serializaation_disabled_check": 1354, "native_serialization_strict_check": 1354, "natur": [372, 373, 411, 412, 809, 821, 1124, 1136, 1139, 1140, 1154, 1341, 1348, 1442, 1444, 1447, 1456, 1459, 1480, 1490, 1502, 1503], "navig": [1484, 1496], "nb": [136, 501, 1348, 1378], "nb_execution_mod": 1366, "nb_gpu": 1366, "nb_modul": 1378, "nbit": [420, 1052], "nccl": [432, 433, 1354, 1366, 1384], "nccl_ll128_buffsiz": 1381, "nccl_ll_buffsiz": 1381, "nccl_proto": 1381, "ncclrecv": 1381, "ncclsend": 1381, "nchw": [343, 344, 345, 1469], "nchwd": 345, "nd": [637, 641, 1106, 1107, 1108, 1109, 1490], "ndarrai": [9, 113, 131, 132, 199, 207, 208, 213, 215, 222, 224, 225, 263, 318, 319, 320, 358, 362, 363, 364, 365, 366, 367, 369, 370, 371, 380, 381, 384, 385, 387, 393, 428, 459, 460, 461, 462, 463, 464, 473, 474, 487, 491, 493, 494, 500, 582, 583, 589, 591, 625, 627, 634, 664, 667, 673, 727, 728, 730, 731, 744, 753, 780, 787, 819, 831, 833, 835, 874, 875, 877, 878, 882, 899, 900, 938, 939, 945, 950, 951, 954, 988, 989, 990, 993, 996, 1026, 1103, 1116, 1117, 1118, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1307, 1329, 1342, 1347, 1348, 1354, 1370, 1374, 1377, 1379, 1382, 1385, 1396, 1428, 1429, 1434, 1439, 1444, 1445, 1452, 1462, 1464, 1467, 1468, 1475, 1492, 1497, 1502, 1503], "ndebug": 1484, "ndim": [178, 209, 217, 363, 381, 442, 443, 444, 445, 447, 448, 450, 473, 563, 568, 571, 584, 632, 637, 641, 656, 660, 669, 683, 689, 694, 697, 700, 799, 815, 833, 834, 836, 838, 839, 842, 853, 854, 855, 856, 858, 861, 868, 880, 896, 917, 919, 948, 951, 956, 957, 960, 962, 963, 964, 966, 984, 986, 991, 1106, 1107, 1108, 1109, 1112, 1284, 1333, 1346, 1348, 1354, 1381, 1414, 1434, 1459, 1469], "ndindex": 625, "ndmin": 586, "ndtr": 1148, "ne": [368, 382, 383, 392, 414, 930, 1376], "nearest": [291, 306, 332, 377, 456, 623, 701, 702, 714, 715, 857, 859, 879, 901, 915, 920, 968, 982, 1070, 1076, 1103, 1423, 1424, 1448], "nearli": [1118, 1414, 1428], "neat": [1467, 1479], "neatli": 1342, "necessari": [67, 98, 100, 131, 132, 166, 220, 430, 586, 592, 595, 638, 720, 798, 1016, 1118, 1342, 1344, 1349, 1354, 1356, 1366, 1369, 1371, 1378, 1442, 1444, 1447, 1448, 1450, 1452, 1453, 1464, 1483, 1484, 1489, 1490, 1496, 1503], "necessarili": [1345, 1347, 1354, 1376, 1440, 1461, 1480, 1490, 1501], "necula": 1371, "need": [67, 77, 98, 100, 112, 113, 118, 139, 174, 239, 253, 296, 356, 365, 367, 381, 415, 458, 459, 460, 501, 614, 632, 720, 723, 920, 922, 923, 969, 991, 994, 998, 999, 1000, 1001, 1002, 1013, 1015, 1105, 1116, 1117, 1118, 1295, 1304, 1310, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1353, 1354, 1356, 1357, 1360, 1363, 1364, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1385, 1387, 1390, 1395, 1396, 1400, 1402, 1411, 1415, 1428, 1431, 1435, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1506], "needless": 1503, "neg": [10, 209, 237, 323, 332, 362, 363, 364, 365, 366, 367, 377, 378, 381, 456, 503, 533, 538, 582, 604, 621, 645, 655, 658, 659, 680, 701, 712, 715, 768, 770, 771, 772, 773, 792, 801, 809, 816, 864, 878, 881, 892, 894, 902, 917, 919, 930, 931, 942, 943, 950, 956, 981, 982, 1002, 1050, 1136, 1137, 1138, 1140, 1151, 1161, 1176, 1177, 1178, 1179, 1250, 1251, 1342, 1348, 1350, 1354, 1356, 1360, 1361, 1370, 1377, 1467, 1475], "neg1": 1460, "neg_jvp": 1348, "neg_p": [1348, 1414], "neg_transpose_rul": 1348, "negat": [420, 866, 1348, 1374], "negative_slop": 533, "negep": 701, "neginf": 848, "neighbor": [291, 305, 306, 1103, 1423, 1448, 1474, 1479, 1490], "neighborhood": [1342, 1463], "neither": [145, 240, 296, 301, 313, 322, 324, 325, 336, 359, 368, 382, 383, 392, 414, 416, 417, 418, 419, 421, 430, 451, 467, 468, 469, 482, 695, 699, 1354, 1359, 1381, 1411, 1446, 1474], "nep": [1354, 1444], "neq": 419, "nervanasystem": 1484, "nest": [67, 69, 77, 80, 94, 95, 113, 290, 296, 311, 339, 356, 378, 415, 458, 481, 488, 494, 614, 925, 1002, 1284, 1333, 1342, 1348, 1349, 1382, 1396, 1411, 1435, 1438, 1445, 1460, 1463, 1485, 1487, 1492, 1493, 1503, 1506], "nesterov": 1396, "net": [346, 1379, 1382, 1397, 1448, 1451, 1460, 1468, 1471, 1502], "netlib": 1156, "network": [98, 131, 132, 545, 1337, 1342, 1343, 1352, 1353, 1354, 1364, 1369, 1381, 1382, 1383, 1397, 1426, 1427, 1447, 1460, 1461, 1467, 1468, 1469, 1471, 1487, 1489, 1490, 1496, 1500, 1503, 1505], "networkx": [1456, 1465], "neural": [346, 545, 1337, 1342, 1343, 1352, 1353, 1364, 1379, 1381, 1382, 1383, 1397, 1426, 1427, 1447, 1451, 1460, 1467, 1468, 1469, 1471, 1489, 1500, 1502, 1503, 1505], "neural_network_and_data_load": 1473, "never": [100, 106, 150, 160, 381, 424, 459, 460, 720, 969, 991, 1140, 1342, 1349, 1353, 1377, 1444, 1447, 1449, 1452, 1456, 1457, 1461, 1463, 1467, 1475, 1484, 1487, 1490, 1492, 1494, 1498, 1503], "nevertheless": [1441, 1447, 1448, 1454], "new": [45, 61, 67, 119, 137, 223, 255, 263, 292, 303, 321, 326, 327, 348, 365, 366, 367, 379, 396, 458, 569, 614, 633, 634, 668, 764, 765, 774, 781, 846, 911, 912, 945, 955, 1016, 1032, 1054, 1103, 1288, 1295, 1296, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1345, 1348, 1349, 1354, 1356, 1357, 1359, 1361, 1365, 1368, 1370, 1371, 1374, 1378, 1381, 1382, 1384, 1385, 1387, 1395, 1397, 1402, 1428, 1431, 1434, 1438, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1466, 1467, 1468, 1470, 1471, 1474, 1475, 1478, 1479, 1484, 1487, 1488, 1490, 1494, 1496, 1497, 1498, 1500, 1502, 1503, 1506], "new_arg": 1348, "new_axi": 1348, "new_base_main": 1354, "new_compiler_token": 1442, "new_const": 1348, "new_const_bind": 1348, "new_dtyp": [321, 348, 1441, 1462], "new_dynam": 1348, "new_eqn": 1348, "new_interpret": 1349, "new_jax_arrai": 1462, "new_jaxpr": 1348, "new_jaxpr1": 1348, "new_jaxpr2": 1348, "new_kei": [1455, 1475, 1476, 1498], "new_layout": 169, "new_main": 1348, "new_opt_st": 1471, "new_optimizer_st": 1502, "new_out": 1348, "new_param": [1348, 1471, 1502], "new_prim": 1371, "new_r": 1348, "new_rng": 1451, "new_runtime_token": 1442, "new_shap": [912, 1348], "new_siz": [216, 452], "new_token": 1371, "new_trac": 1348, "new_val": [65, 87, 88, 90, 91, 92, 109, 110, 111, 129, 499, 556, 997, 1288], "new_valu": 1370, "newaxi": 1469, "newer": [917, 1012, 1354, 1366, 1371, 1378, 1381, 1384, 1404, 1439, 1444, 1464, 1489], "newest": 1384, "newli": [1366, 1390, 1449, 1504], "newlin": [589, 591], "newshap": [1354, 1460], "newton": [1342, 1463, 1467], "newton_sqrt": [1342, 1463], "newval": [1301, 1346], "nexp": 701, "next": [168, 332, 377, 421, 456, 701, 867, 940, 1114, 1348, 1354, 1369, 1371, 1378, 1381, 1414, 1431, 1441, 1445, 1449, 1451, 1456, 1457, 1459, 1461, 1462, 1463, 1464, 1465, 1471, 1475, 1478, 1479, 1483, 1484, 1487, 1492, 1493, 1494, 1496, 1503, 1506], "next_aft": 421, "next_block_chang": 1494, "next_i": 1494, "next_j": 1494, "next_mask_type_idx": 1494, "next_nonzero_block": 1494, "next_slot": 1487, "nextaft": [701, 940, 1354], "nf": 1495, "nfev": 1104, "nfft": [1110, 1113, 1114, 1115], "nfound": 1390, "ngc": 1461, "ngradient": 1390, "nhw": 345, "nhwc": [343, 344, 1469], "nhwdc": 1469, "nice": [1442, 1443, 1444, 1456, 1492], "niceerrormessag": 1374, "nicer": [750, 921], "nich": 455, "nightli": [1345, 1354, 1496], "nightly_upd": 1366, "nin": [725, 969], "nine": 1365, "ninf": 1354, "nit": 1104, "njaxlib": 1366, "njev": 1104, "nmant": 701, "nn": [337, 413, 481, 506, 1151, 1345, 1354, 1356, 1363, 1377, 1388, 1461, 1469, 1474, 1480, 1488, 1489, 1492, 1500, 1503, 1506], "nnormal": 1390, "nnx": 1452, "no_kwarg": 1435, "no_perfetto_link": 1496, "noblockspec": [140, 178], "nobodi": 1476, "node": [80, 98, 252, 253, 1295, 1296, 1307, 1308, 1309, 1310, 1311, 1327, 1348, 1350, 1354, 1381, 1438, 1456, 1490, 1497], "node_color": 1456, "node_metadata": 1348, "node_s": 1456, "node_typ": 1348, "nodetyp": [252, 253, 1307, 1308, 1310, 1348, 1354], "nois": [1356, 1469, 1483, 1502], "noise_rng": 1502, "noisi": [1381, 1469], "noisy_imag": 1469, "nomenclatur": [1271, 1273], "nomin": 1104, "non": [0, 57, 127, 131, 136, 137, 209, 222, 240, 360, 363, 381, 382, 383, 392, 404, 414, 416, 417, 421, 466, 486, 501, 508, 539, 543, 584, 604, 621, 680, 700, 712, 722, 723, 724, 747, 753, 793, 795, 810, 817, 828, 838, 849, 894, 942, 943, 944, 989, 1002, 1026, 1050, 1082, 1095, 1098, 1101, 1137, 1138, 1176, 1177, 1178, 1179, 1307, 1333, 1344, 1345, 1346, 1348, 1349, 1354, 1356, 1360, 1361, 1366, 1370, 1371, 1374, 1377, 1378, 1381, 1384, 1385, 1390, 1403, 1434, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1447, 1448, 1451, 1452, 1453, 1455, 1456, 1461, 1467, 1470, 1474, 1478, 1483, 1484, 1489, 1490, 1494, 1495, 1500, 1503, 1505, 1506], "non_contracting_dim_s": 1381, "non_negative_dim": 1354, "nonconcretebooleanindexerror": [1370, 1462, 1475], "noncontigu": 1480, "nondeterminist": [10, 160, 864], "nondiff_argnam": [76, 79], "nondiff_argnum": [69, 76, 77, 78, 79, 80, 1378, 1449, 1458], "none": [3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 19, 20, 23, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 56, 57, 58, 60, 61, 63, 67, 78, 80, 81, 82, 83, 84, 86, 90, 93, 95, 96, 98, 100, 105, 114, 118, 119, 120, 126, 127, 130, 131, 132, 134, 139, 141, 144, 145, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 166, 167, 168, 173, 174, 178, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 196, 198, 205, 207, 210, 211, 212, 216, 217, 220, 223, 224, 226, 228, 232, 236, 237, 239, 241, 248, 253, 254, 255, 257, 262, 267, 268, 272, 283, 284, 286, 287, 296, 303, 304, 317, 326, 327, 330, 331, 335, 337, 341, 342, 343, 344, 345, 346, 347, 349, 356, 360, 361, 372, 373, 375, 378, 379, 380, 381, 394, 397, 398, 403, 404, 405, 406, 411, 412, 413, 415, 424, 425, 426, 427, 435, 436, 437, 449, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464, 471, 473, 474, 478, 484, 485, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 511, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 536, 537, 538, 540, 543, 549, 554, 562, 563, 565, 566, 568, 569, 572, 580, 581, 583, 584, 585, 586, 589, 591, 592, 595, 602, 604, 605, 610, 612, 618, 625, 626, 632, 633, 634, 637, 638, 640, 641, 644, 645, 646, 648, 649, 650, 651, 654, 660, 661, 664, 667, 669, 670, 672, 673, 677, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 702, 703, 705, 720, 725, 727, 728, 731, 733, 739, 740, 741, 742, 744, 747, 750, 751, 753, 754, 761, 762, 772, 773, 776, 789, 794, 796, 798, 799, 802, 804, 805, 807, 809, 811, 813, 815, 816, 817, 818, 819, 825, 826, 827, 829, 830, 831, 832, 833, 836, 837, 838, 839, 842, 843, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 866, 868, 873, 874, 875, 876, 879, 881, 887, 888, 896, 898, 899, 900, 901, 905, 910, 911, 916, 920, 921, 923, 924, 927, 928, 937, 938, 944, 945, 946, 947, 948, 950, 951, 954, 956, 957, 958, 959, 961, 965, 969, 975, 976, 977, 978, 979, 980, 981, 985, 986, 987, 988, 989, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1031, 1033, 1035, 1036, 1037, 1040, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1082, 1083, 1085, 1086, 1093, 1094, 1095, 1099, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1149, 1151, 1160, 1162, 1165, 1209, 1245, 1248, 1265, 1266, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1305, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1333, 1334, 1342, 1344, 1346, 1348, 1351, 1354, 1356, 1361, 1363, 1371, 1374, 1376, 1378, 1382, 1390, 1397, 1400, 1402, 1411, 1415, 1423, 1424, 1434, 1435, 1440, 1441, 1444, 1445, 1447, 1448, 1453, 1454, 1455, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1473, 1474, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1490, 1493, 1495, 1497, 1500, 1503], "nonlinear": [67, 1342, 1348, 1463], "nonneg": [342, 998, 999, 1000, 1001, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1030, 1031, 1033, 1035, 1036, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1216, 1424], "nonsens": 1354, "nonsingular": 1094, "nonsymmetr": [397, 1116], "nontrivi": 1492, "nonzero": [201, 203, 584, 644, 703, 832, 994, 1342, 1354, 1370, 1428, 1448, 1467, 1494], "nonzero_jit": 868, "noop": 1356, "noqa": 1348, "nor": [145, 222, 240, 296, 430, 695, 699, 1354, 1381, 1411, 1435, 1446, 1474], "norm": [239, 306, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 742, 789, 800, 818, 1018, 1071, 1072, 1073, 1074, 1084, 1116, 1117, 1118, 1396, 1469, 1475, 1476, 1503], "norm_compil": 1475, "normal": [10, 18, 97, 296, 398, 421, 481, 520, 522, 524, 529, 531, 543, 544, 545, 602, 640, 645, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 739, 740, 742, 794, 804, 814, 815, 820, 864, 917, 934, 1002, 1017, 1034, 1042, 1045, 1057, 1071, 1072, 1073, 1074, 1085, 1148, 1153, 1155, 1156, 1162, 1217, 1218, 1219, 1248, 1249, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1269, 1270, 1271, 1272, 1273, 1274, 1279, 1280, 1281, 1282, 1304, 1342, 1346, 1350, 1351, 1354, 1357, 1363, 1366, 1367, 1370, 1377, 1378, 1390, 1397, 1404, 1414, 1431, 1441, 1444, 1451, 1453, 1454, 1456, 1464, 1465, 1466, 1467, 1469, 1470, 1473, 1474, 1475, 1476, 1484, 1488, 1489, 1490, 1492, 1493, 1494, 1496, 1498, 1500, 1502, 1506], "normal_sampl": 1476, "normalis": 1342, "normed_sum": [739, 740], "not_equ": [419, 674], "not_map": 1348, "not_side_effect": 1370, "notabl": [778, 1428, 1456, 1475, 1484, 1485, 1498, 1505], "notat": [1162, 1342, 1348, 1350, 1402, 1447, 1456, 1467, 1503], "note": [29, 72, 97, 98, 113, 118, 136, 166, 168, 201, 203, 239, 253, 254, 283, 284, 291, 292, 337, 361, 363, 365, 367, 379, 404, 410, 420, 421, 447, 448, 461, 470, 494, 501, 508, 529, 543, 544, 570, 614, 620, 625, 632, 677, 679, 701, 721, 750, 761, 776, 778, 783, 788, 793, 794, 795, 796, 797, 802, 805, 807, 838, 846, 877, 905, 911, 917, 921, 922, 923, 924, 944, 949, 988, 991, 994, 1002, 1007, 1013, 1015, 1017, 1064, 1067, 1068, 1069, 1084, 1086, 1089, 1095, 1100, 1102, 1103, 1110, 1116, 1117, 1121, 1125, 1127, 1128, 1129, 1134, 1135, 1136, 1139, 1157, 1161, 1162, 1297, 1298, 1304, 1307, 1341, 1344, 1345, 1349, 1354, 1356, 1361, 1363, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1384, 1385, 1390, 1403, 1411, 1414, 1415, 1431, 1438, 1439, 1440, 1441, 1442, 1444, 1446, 1454, 1456, 1457, 1459, 1460, 1462, 1465, 1466, 1470, 1471, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1504, 1505, 1506, 1507], "notebook": [572, 1283, 1342, 1349, 1351, 1354, 1357, 1382, 1431, 1449, 1453, 1463, 1464, 1467, 1468, 1470, 1474, 1476, 1490, 1492, 1494, 1507], "noteworthi": [1485, 1488, 1491], "noth": [71, 99, 1354, 1361, 1376, 1459, 1475, 1479, 1490, 1493, 1496, 1502, 1503], "nothing_sav": [1382, 1468], "notic": [97, 582, 679, 733, 787, 878, 1047, 1087, 1102, 1342, 1346, 1348, 1349, 1354, 1360, 1363, 1371, 1376, 1382, 1390, 1396, 1402, 1414, 1442, 1445, 1447, 1451, 1454, 1456, 1459, 1460, 1463, 1466, 1467, 1468, 1470, 1474, 1475, 1479, 1484, 1487, 1502, 1506], "notimplementederror": [283, 1016, 1152, 1153, 1348, 1354, 1390, 1466], "notion": [1444, 1447, 1460, 1480], "notmap": 1348, "notset": 1356, "nout": [725, 969], "noverlap": [1110, 1113, 1114, 1115], "now": [134, 504, 543, 640, 645, 725, 815, 982, 985, 1308, 1310, 1312, 1337, 1342, 1346, 1348, 1349, 1354, 1361, 1368, 1369, 1371, 1374, 1376, 1378, 1379, 1381, 1387, 1390, 1402, 1411, 1438, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1455, 1456, 1457, 1461, 1462, 1464, 1465, 1466, 1467, 1470, 1473, 1474, 1478, 1479, 1480, 1484, 1487, 1488, 1490, 1492, 1493, 1494, 1496, 1500, 1502, 1503, 1506], "np": [13, 24, 128, 129, 131, 132, 136, 248, 303, 304, 305, 306, 345, 357, 362, 363, 364, 365, 366, 367, 380, 387, 415, 426, 435, 436, 458, 474, 487, 494, 500, 501, 502, 586, 589, 591, 592, 620, 625, 627, 634, 658, 667, 668, 701, 720, 722, 723, 724, 744, 750, 776, 777, 778, 865, 877, 883, 886, 889, 908, 913, 918, 921, 922, 923, 929, 937, 945, 985, 993, 1019, 1021, 1023, 1035, 1040, 1042, 1049, 1059, 1266, 1344, 1347, 1348, 1354, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1382, 1385, 1390, 1402, 1403, 1411, 1414, 1415, 1424, 1434, 1439, 1440, 1441, 1444, 1445, 1448, 1449, 1451, 1452, 1454, 1455, 1456, 1460, 1461, 1462, 1464, 1465, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1483, 1484, 1485, 1487, 1488, 1492, 1493, 1494, 1498, 1500, 1503, 1505, 1506], "np_array1": 1440, "np_array2": 1440, "np_dtype": 1456, "np_dtype_to_cod": 1456, "np_inp": 1382, "np_result_cod": 1456, "nperseg": [1110, 1113, 1114, 1115], "npy": [820, 922, 923], "npyio": 923, "npz": [820, 922, 923], "npzfile": 923, "nr_devic": [1371, 1415], "nse": [199, 201, 203, 211, 220, 226, 228, 232, 238, 241, 244, 1414], "nstep": 1492, "nsy": 1381, "nt": 508, "nth_order_deriv": 1349, "ntrial": [1492, 1494], "nu": [1025, 1055, 1267, 1268, 1376, 1503], "nu_1": 1031, "nu_2": 1031, "nu_hat": 1503, "nuc": 805, "nuclear": 805, "null": 1461, "nullari": 1470, "num": [731, 819, 831, 1054, 1397, 1474, 1498], "num_addressable_indic": 501, "num_arg": 1349, "num_arriv": 148, "num_barri": 148, "num_batch_dim": 1378, "num_block": 1494, "num_carri": [1378, 1441], "num_circ_repeat": 1381, "num_class": [540, 1473], "num_col": 807, "num_compute_wg": 1483, "num_const": [1348, 1378, 1435, 1441], "num_const_arg": 1385, "num_cor": [1470, 1490], "num_covec": [1342, 1467], "num_devic": [1381, 1390, 1434, 1490], "num_elem": 311, "num_epoch": [1465, 1473], "num_featur": 1476, "num_fram": 81, "num_head": 1503, "num_it": 403, "num_iter": 1381, "num_kei": 475, "num_label": 1473, "num_lay": 1503, "num_m_block": 1494, "num_microbatch": 1381, "num_model_replicas_per_process": 1369, "num_model_replicas_tot": 1369, "num_n_block": 1494, "num_partit": [493, 1344, 1371, 1378], "num_pixel": 1473, "num_point": 1476, "num_primitive_oper": 1424, "num_proc": 1461, "num_process": [98, 136, 1369, 1461], "num_program": [1485, 1490, 1494], "num_r": 1348, "num_replica": [493, 1344, 1371, 1378], "num_row": 807, "num_scalar_prefetch": [1489, 1490, 1492, 1494], "num_seg": [998, 999, 1000, 1001], "num_shard": 1369, "num_stag": 183, "num_step": [1007, 1396, 1431, 1451, 1484], "num_thread": [1483, 1484], "num_train_step": 1503, "num_vec": [1342, 1467], "num_warp": 183, "numba": 1354, "number": [38, 50, 77, 80, 81, 93, 98, 110, 131, 132, 148, 150, 168, 171, 173, 178, 183, 194, 201, 203, 211, 219, 220, 222, 223, 226, 228, 232, 237, 239, 241, 250, 251, 283, 291, 292, 297, 301, 305, 306, 311, 313, 318, 319, 320, 322, 324, 325, 334, 335, 336, 340, 343, 344, 345, 358, 359, 368, 369, 370, 371, 374, 382, 383, 384, 385, 386, 392, 393, 403, 414, 416, 417, 418, 419, 420, 421, 422, 428, 429, 430, 439, 451, 455, 458, 467, 468, 469, 475, 480, 481, 482, 486, 491, 493, 495, 497, 508, 531, 540, 557, 567, 569, 572, 580, 581, 582, 583, 584, 586, 589, 591, 604, 606, 619, 625, 631, 644, 645, 656, 660, 661, 664, 669, 670, 673, 679, 701, 703, 716, 717, 721, 725, 726, 727, 728, 731, 739, 740, 741, 742, 752, 753, 762, 766, 768, 770, 771, 772, 773, 775, 780, 787, 789, 802, 804, 805, 814, 819, 831, 833, 835, 837, 843, 849, 850, 857, 859, 860, 862, 865, 867, 868, 874, 875, 876, 877, 878, 879, 882, 887, 891, 899, 900, 901, 902, 910, 916, 919, 920, 927, 928, 937, 938, 939, 940, 946, 950, 951, 954, 955, 961, 965, 969, 975, 976, 977, 978, 979, 980, 981, 986, 987, 988, 989, 990, 996, 998, 999, 1000, 1001, 1002, 1004, 1007, 1021, 1026, 1037, 1044, 1047, 1054, 1084, 1103, 1104, 1105, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1271, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1329, 1332, 1333, 1337, 1348, 1349, 1352, 1353, 1354, 1356, 1359, 1366, 1370, 1371, 1374, 1376, 1378, 1381, 1382, 1384, 1389, 1396, 1397, 1403, 1411, 1414, 1415, 1424, 1427, 1431, 1434, 1441, 1444, 1445, 1447, 1448, 1450, 1451, 1452, 1455, 1456, 1457, 1458, 1460, 1461, 1463, 1468, 1474, 1478, 1483, 1484, 1485, 1487, 1490, 1492, 1493, 1494, 1495, 1496, 1499, 1502, 1503, 1506], "numer": [67, 112, 239, 301, 356, 359, 360, 389, 418, 447, 448, 482, 534, 541, 578, 668, 733, 745, 752, 767, 797, 802, 805, 870, 881, 882, 1000, 1001, 1031, 1089, 1116, 1117, 1118, 1153, 1341, 1348, 1352, 1353, 1354, 1356, 1357, 1359, 1361, 1363, 1364, 1368, 1378, 1383, 1385, 1396, 1431, 1435, 1439, 1444, 1446, 1448, 1449, 1451, 1455, 1456, 1462, 1466, 1471, 1474, 1475, 1480, 1489, 1493, 1497, 1498, 1506], "numpi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 67, 77, 80, 83, 94, 97, 104, 105, 112, 113, 118, 120, 137, 159, 211, 226, 228, 232, 241, 263, 289, 290, 293, 295, 296, 297, 298, 301, 305, 306, 321, 322, 323, 324, 325, 328, 348, 359, 360, 362, 363, 364, 365, 366, 367, 368, 378, 381, 382, 383, 387, 391, 392, 414, 416, 417, 418, 419, 423, 429, 442, 443, 444, 445, 447, 448, 449, 450, 451, 454, 456, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 473, 474, 482, 488, 495, 500, 501, 502, 503, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 541, 543, 544, 997, 1002, 1064, 1066, 1067, 1068, 1069, 1075, 1080, 1081, 1082, 1089, 1090, 1095, 1096, 1098, 1101, 1106, 1107, 1108, 1109, 1112, 1304, 1307, 1332, 1333, 1341, 1342, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1378, 1379, 1381, 1382, 1383, 1385, 1387, 1388, 1390, 1402, 1403, 1411, 1414, 1415, 1424, 1429, 1431, 1434, 1439, 1440, 1441, 1443, 1445, 1447, 1451, 1452, 1455, 1458, 1459, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1476, 1477, 1480, 1483, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1497, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507], "numpy_arrai": 1462, "numpy_array_new": 1462, "numpy_col": 1465, "numpy_dtype_promot": 1505, "numpy_random_lik": 1376, "numpy_random_like_ord": 1376, "numpy_rank_promot": 1499, "numpy_resid": 798, "numpyro": 1383, "nutshel": [1359, 1489], "nvcc": [1366, 1384], "nvfp4": [511, 543, 544], "nvidia": [184, 544, 1341, 1354, 1366, 1377, 1387, 1461, 1475, 1484, 1496], "nvlink": [1369, 1384, 1461], "nvmap": [1342, 1467], "nvreg_restrictprofilingtoadminus": 1496, "nvvm": 1384, "nwc": 1469, "nx": [1428, 1456], "nzero": 1354, "o": [75, 343, 344, 389, 396, 820, 871, 1013, 1015, 1047, 1148, 1348, 1354, 1371, 1378, 1381, 1382, 1441, 1449, 1462, 1465, 1468, 1469, 1474, 1479, 1490, 1492, 1494, 1495, 1507], "o0": 1356, "o1": 1356, "o2": 1356, "o3": 1356, "o_gmem": 1483, "o_hbm": 1493, "o_map": 1494, "o_ref": [1480, 1484, 1485, 1487, 1488, 1490, 1494], "o_smem": 1483, "o_vmem": 1493, "o_wo": 1445, "ob": [1070, 1506], "obei": [1345, 1349], "obj": [287, 654, 668, 754, 778, 1308, 1310, 1377, 1497, 1506], "obj1": 1377, "obj2": 1377, "object": [63, 65, 66, 69, 70, 77, 80, 87, 88, 90, 91, 92, 100, 104, 109, 110, 111, 113, 116, 117, 120, 121, 122, 123, 124, 125, 130, 135, 136, 159, 178, 204, 245, 248, 263, 277, 281, 282, 283, 285, 286, 287, 296, 303, 304, 315, 316, 331, 339, 342, 343, 344, 348, 349, 372, 373, 375, 381, 411, 412, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 457, 459, 460, 461, 462, 463, 464, 471, 478, 483, 484, 485, 494, 499, 500, 503, 504, 534, 541, 542, 556, 559, 586, 592, 606, 616, 619, 625, 638, 639, 668, 671, 673, 701, 715, 720, 721, 722, 724, 726, 728, 750, 754, 766, 775, 776, 777, 778, 803, 820, 841, 865, 871, 872, 874, 897, 902, 913, 914, 915, 921, 922, 923, 929, 937, 941, 969, 996, 997, 1002, 1010, 1016, 1054, 1064, 1066, 1067, 1068, 1069, 1076, 1086, 1094, 1104, 1105, 1116, 1117, 1118, 1119, 1131, 1133, 1135, 1141, 1148, 1150, 1157, 1163, 1164, 1165, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1303, 1307, 1308, 1310, 1321, 1322, 1329, 1333, 1334, 1342, 1344, 1348, 1349, 1353, 1354, 1356, 1359, 1370, 1371, 1374, 1377, 1378, 1379, 1390, 1396, 1402, 1411, 1414, 1415, 1424, 1428, 1434, 1435, 1438, 1439, 1444, 1449, 1451, 1452, 1455, 1459, 1460, 1462, 1463, 1464, 1467, 1471, 1472, 1475, 1478, 1480, 1483, 1484, 1485, 1488, 1490, 1493, 1495, 1496, 1498, 1500, 1502, 1503, 1505, 1506], "objective_fn": 69, "obscur": 985, "observ": [170, 640, 645, 985, 1070, 1135, 1342, 1371, 1374, 1377, 1385, 1390, 1443, 1449, 1479, 1484, 1485, 1492, 1501, 1503, 1506], "observed_id": 1503, "obstacl": 1503, "obtain": [91, 247, 543, 687, 982, 1115, 1342, 1344, 1354, 1356, 1366, 1371, 1374, 1377, 1390, 1434, 1441, 1465, 1473, 1483, 1484, 1487, 1490, 1492, 1500], "obviat": 1346, "obviou": [1367, 1377, 1442, 1448, 1469, 1470], "occas": 1444, "occasion": [1377, 1452, 1497, 1506], "occup": 1483, "occupi": [701, 1471, 1484, 1489], "occur": [83, 120, 311, 620, 927, 975, 976, 1007, 1008, 1009, 1040, 1348, 1356, 1359, 1361, 1362, 1363, 1370, 1377, 1380, 1440, 1442, 1447, 1459, 1460, 1462, 1475, 1490, 1495, 1496], "occurr": [604, 739, 976, 977, 978, 1374, 1390, 1499], "oct": [1381, 1453], "octob": [1365, 1371, 1448], "od": [1354, 1448], "odd": [303, 343, 687, 692, 696, 697, 877, 1114, 1462], "odeint": [1342, 1354, 1448, 1449, 1463], "odrpack": 1448, "off": [67, 91, 640, 645, 798, 1083, 1348, 1349, 1354, 1356, 1366, 1370, 1380, 1381, 1382, 1443, 1468, 1469, 1471, 1503], "offer": [0, 91, 201, 203, 1341, 1344, 1354, 1356, 1357, 1360, 1362, 1363, 1364, 1369, 1371, 1390, 1414, 1416, 1442, 1444, 1445, 1446, 1447, 1448, 1452, 1456, 1462, 1466, 1469, 1479, 1480, 1487, 1490, 1492, 1502, 1503], "offici": [1366, 1479, 1507], "offload": 1343, "offload_dot_with_no_batch_dim": 1382, "offload_dst": [1382, 1471], "offload_opt_st": 1471, "offload_src": [1382, 1471], "offset": [22, 58, 655, 658, 659, 668, 680, 721, 747, 792, 816, 832, 902, 956, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1403, 1424, 1489, 1490], "offset_dim": [381, 1424], "often": [63, 112, 130, 283, 924, 1016, 1118, 1152, 1153, 1341, 1342, 1344, 1347, 1348, 1349, 1366, 1369, 1370, 1371, 1377, 1379, 1380, 1382, 1385, 1397, 1428, 1442, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1455, 1456, 1459, 1460, 1461, 1462, 1464, 1467, 1468, 1469, 1474, 1475, 1480, 1484, 1489, 1490, 1492, 1493, 1496, 1497, 1503, 1506], "oftentim": 1489, "og": 1447, "ogrid": [751, 779, 840, 841], "oh": 1502, "oi": [344, 345], "oihw": [343, 344, 1469], "oihwd": 345, "oiwh": 345, "ok": [1346, 1359, 1369, 1377, 1457, 1459, 1461], "okai": [1346, 1442, 1479], "old": [182, 1017, 1335, 1336, 1338, 1339, 1345, 1347, 1354, 1368, 1371, 1440, 1449, 1453, 1455, 1457, 1475, 1478, 1479, 1490, 1498, 1501], "older": [846, 949, 1307, 1337, 1354, 1365, 1367, 1371, 1457, 1484], "omit": [98, 337, 1266, 1356, 1378, 1434, 1464, 1471, 1483], "omni": 1454, "omnistag": [1348, 1349, 1354, 1458], "ompi": 98, "on_fals": 465, "on_ineffici": 223, "on_tru": 465, "onc": [81, 83, 98, 165, 172, 296, 303, 304, 415, 425, 426, 427, 434, 435, 436, 437, 458, 495, 599, 600, 601, 1002, 1016, 1307, 1342, 1346, 1348, 1349, 1356, 1357, 1366, 1369, 1374, 1377, 1381, 1390, 1411, 1441, 1442, 1444, 1445, 1447, 1452, 1455, 1459, 1460, 1461, 1462, 1464, 1467, 1470, 1472, 1474, 1475, 1479, 1483, 1484, 1487, 1488, 1490, 1494, 1495, 1496, 1498, 1500, 1502, 1503], "one": [32, 52, 67, 75, 78, 92, 97, 98, 110, 113, 148, 178, 209, 223, 230, 234, 245, 248, 291, 292, 296, 302, 313, 328, 339, 343, 344, 348, 360, 362, 363, 364, 366, 387, 424, 435, 442, 443, 444, 445, 447, 448, 449, 450, 452, 454, 474, 483, 531, 538, 540, 571, 625, 637, 640, 641, 645, 650, 651, 668, 670, 671, 678, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 707, 716, 717, 740, 743, 744, 745, 750, 761, 766, 775, 776, 779, 804, 813, 821, 823, 837, 843, 857, 859, 876, 879, 901, 911, 913, 921, 922, 923, 924, 928, 944, 951, 954, 959, 961, 962, 965, 966, 991, 1002, 1013, 1015, 1016, 1043, 1045, 1070, 1071, 1072, 1073, 1074, 1093, 1103, 1105, 1110, 1111, 1113, 1114, 1115, 1135, 1151, 1162, 1284, 1300, 1333, 1342, 1344, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1357, 1359, 1360, 1363, 1364, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1390, 1395, 1397, 1411, 1428, 1431, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1502, 1503, 1506], "one_hot": [1354, 1465, 1473, 1503], "one_of_thre": 1441, "oneapi": 1384, "oner": 1354, "ones": [0, 72, 237, 238, 244, 365, 366, 367, 415, 459, 460, 544, 600, 601, 614, 627, 633, 634, 640, 645, 667, 672, 727, 744, 753, 813, 832, 846, 851, 865, 874, 917, 929, 937, 949, 954, 959, 960, 964, 991, 993, 995, 1008, 1009, 1077, 1103, 1307, 1308, 1310, 1333, 1342, 1344, 1348, 1359, 1360, 1361, 1364, 1366, 1369, 1370, 1374, 1377, 1382, 1385, 1397, 1431, 1441, 1444, 1449, 1454, 1457, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1471, 1472, 1479, 1480, 1487, 1488, 1489, 1492, 1493, 1494, 1506], "ones_lik": [673, 728, 873, 996, 1378, 1464], "ongo": [1364, 1448], "onli": [10, 61, 67, 77, 80, 81, 82, 84, 97, 98, 113, 120, 126, 134, 160, 166, 170, 178, 180, 198, 209, 216, 239, 240, 253, 254, 283, 296, 305, 306, 339, 363, 378, 395, 397, 398, 399, 404, 405, 406, 407, 409, 415, 436, 455, 465, 474, 494, 498, 501, 504, 508, 538, 572, 582, 586, 592, 595, 602, 606, 620, 625, 637, 641, 668, 687, 705, 730, 762, 784, 793, 794, 795, 808, 811, 836, 838, 840, 842, 848, 853, 854, 856, 858, 861, 864, 878, 884, 886, 889, 890, 892, 896, 914, 922, 923, 927, 928, 948, 961, 963, 965, 975, 976, 977, 978, 979, 980, 991, 994, 1002, 1013, 1015, 1016, 1071, 1072, 1073, 1074, 1082, 1083, 1084, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1116, 1117, 1127, 1128, 1129, 1134, 1135, 1141, 1142, 1151, 1153, 1157, 1161, 1245, 1265, 1266, 1283, 1284, 1285, 1286, 1287, 1295, 1298, 1307, 1310, 1333, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1354, 1356, 1357, 1359, 1360, 1361, 1363, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1387, 1390, 1395, 1396, 1397, 1402, 1411, 1415, 1416, 1424, 1431, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1461, 1462, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1506], "onlin": [1349, 1396], "onlinedoc": 1378, "ont": 1363, "onto": [100, 365, 366, 367, 459, 460, 462, 463, 464, 720, 1348, 1369, 1377, 1378, 1440, 1442, 1461, 1464, 1474, 1484, 1489, 1490, 1494], "oob": 1480, "ooberror": [116, 117, 123], "oom": [1354, 1356], "oop": [1444, 1502], "op": [97, 331, 337, 349, 372, 373, 375, 408, 411, 412, 433, 457, 471, 478, 484, 485, 969, 1307, 1345, 1348, 1349, 1354, 1377, 1388, 1402, 1440, 1443, 1447, 1454, 1459, 1462, 1466, 1470, 1474, 1475, 1489, 1492, 1493, 1494, 1496], "op_nam": 1378, "opaqu": [80, 126, 283, 285, 1354, 1367, 1378, 1449, 1455, 1490, 1497, 1506], "opaquetracest": 1354, "open": [98, 779, 840, 841, 872, 922, 923, 1013, 1015, 1057, 1342, 1350, 1354, 1357, 1366, 1367, 1377, 1378, 1415, 1444, 1463, 1467, 1475, 1480, 1496, 1501, 1507], "open_mesh": 779, "openai": 1480, "openxla": [344, 345, 454, 1341, 1354, 1378, 1379, 1384, 1460], "oper": [10, 13, 67, 82, 87, 88, 90, 91, 95, 97, 118, 120, 126, 148, 150, 160, 161, 164, 165, 167, 170, 175, 185, 186, 187, 188, 189, 190, 191, 192, 194, 198, 207, 208, 224, 245, 277, 281, 282, 292, 296, 298, 299, 300, 301, 302, 309, 310, 311, 312, 313, 314, 321, 322, 323, 324, 325, 327, 331, 332, 334, 336, 337, 338, 339, 343, 344, 348, 349, 350, 356, 359, 360, 363, 366, 368, 372, 373, 375, 377, 381, 382, 383, 386, 390, 391, 392, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 429, 430, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 478, 482, 483, 484, 485, 487, 505, 506, 543, 544, 562, 583, 605, 610, 612, 637, 641, 646, 654, 674, 677, 718, 723, 725, 763, 781, 783, 799, 803, 804, 807, 814, 827, 828, 829, 830, 833, 834, 847, 864, 869, 892, 894, 897, 909, 938, 945, 947, 957, 960, 964, 969, 1002, 1013, 1015, 1027, 1064, 1067, 1068, 1069, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1148, 1283, 1297, 1298, 1305, 1322, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1356, 1361, 1363, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1389, 1390, 1396, 1411, 1414, 1428, 1431, 1438, 1440, 1441, 1445, 1447, 1448, 1449, 1452, 1454, 1455, 1456, 1459, 1461, 1464, 1467, 1468, 1469, 1471, 1474, 1475, 1480, 1481, 1483, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1500, 1503, 1506], "operand": [82, 84, 95, 174, 205, 206, 209, 212, 216, 284, 302, 305, 306, 307, 308, 321, 326, 327, 335, 338, 339, 348, 351, 352, 353, 354, 355, 362, 363, 364, 365, 366, 367, 381, 387, 422, 423, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 459, 460, 461, 462, 463, 464, 473, 474, 475, 477, 483, 486, 487, 544, 584, 670, 671, 1344, 1348, 1354, 1359, 1371, 1390, 1402, 1424, 1441, 1444, 1447, 1462, 1483, 1492, 1503, 1506], "operand_batching_dim": 1424, "operand_layout": [284, 1378], "operand_layout_constraint": 1378, "operand_map": 1402, "operation": 481, "operation_semant": [344, 345, 454], "operatornam": [538, 1151], "opinion": 1470, "oplu": 325, "oppos": [1449, 1480, 1483, 1492], "opposit": [1444, 1445, 1474, 1490], "opresult": 1390, "opset": 1371, "opshard": [1354, 1440, 1445, 1446], "opshardingshard": 1354, "opt": [840, 1304, 1353, 1354, 1387, 1443, 1444, 1452, 1456, 1465, 1483, 1489, 1503], "opt_barrier_st": 1479, "opt_einsum": [670, 671, 804], "opt_init": 1396, "opt_mak": 1396, "opt_stat": [1396, 1471], "opt_upd": 1396, "optax": [1353, 1354, 1383, 1396, 1398, 1471], "optic": 1489, "optim": [67, 80, 112, 198, 220, 239, 337, 339, 422, 493, 670, 671, 677, 798, 804, 834, 846, 905, 911, 917, 944, 949, 957, 1283, 1307, 1344, 1346, 1348, 1353, 1354, 1363, 1376, 1377, 1378, 1381, 1382, 1383, 1395, 1414, 1428, 1442, 1443, 1445, 1459, 1460, 1462, 1467, 1468, 1470, 1474, 1475, 1479, 1480, 1483, 1484, 1487, 1488, 1490, 1492, 1495, 1500, 1502, 1507], "optimis": 1445, "optimistix": [1383, 1448], "optimization_barri": [1354, 1381, 1479], "optimize_remat": 80, "optimizer_st": 1502, "optimizeresult": 1105, "optimizerst": 1396, "optimzation_barri": 433, "option": [10, 63, 65, 66, 67, 68, 77, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 95, 96, 98, 100, 109, 110, 111, 120, 130, 131, 132, 134, 145, 160, 168, 178, 198, 216, 220, 223, 236, 237, 248, 254, 255, 267, 289, 290, 293, 295, 296, 297, 303, 304, 305, 306, 331, 337, 341, 343, 344, 345, 346, 347, 349, 360, 372, 373, 375, 378, 379, 380, 397, 398, 403, 411, 412, 415, 424, 425, 426, 427, 435, 436, 437, 449, 452, 457, 458, 459, 460, 471, 473, 474, 478, 484, 485, 493, 495, 498, 499, 501, 503, 504, 505, 508, 518, 526, 529, 530, 537, 540, 543, 544, 554, 556, 572, 580, 581, 584, 586, 589, 591, 592, 595, 602, 604, 620, 625, 626, 627, 632, 634, 640, 644, 645, 648, 649, 650, 651, 655, 656, 658, 659, 660, 661, 667, 668, 669, 670, 671, 672, 673, 679, 680, 683, 684, 686, 687, 689, 691, 692, 694, 695, 697, 698, 699, 703, 720, 721, 723, 725, 726, 727, 728, 731, 732, 733, 739, 740, 742, 744, 747, 761, 762, 769, 800, 802, 804, 805, 809, 811, 815, 818, 819, 831, 832, 838, 839, 840, 848, 849, 850, 851, 852, 855, 857, 859, 860, 862, 864, 868, 873, 874, 876, 877, 879, 895, 898, 900, 901, 905, 906, 919, 922, 923, 924, 926, 927, 937, 945, 946, 950, 951, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 975, 976, 977, 978, 979, 980, 981, 986, 987, 991, 993, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1010, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1065, 1075, 1082, 1084, 1086, 1092, 1093, 1098, 1099, 1102, 1105, 1106, 1107, 1108, 1109, 1112, 1114, 1116, 1117, 1118, 1209, 1216, 1265, 1266, 1283, 1284, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1307, 1310, 1331, 1332, 1333, 1342, 1344, 1348, 1351, 1352, 1353, 1354, 1357, 1359, 1364, 1366, 1368, 1370, 1371, 1374, 1377, 1378, 1380, 1381, 1384, 1396, 1402, 1411, 1415, 1428, 1431, 1434, 1435, 1442, 1447, 1448, 1450, 1457, 1461, 1462, 1463, 1464, 1469, 1472, 1474, 1478, 1480, 1483, 1484, 1490, 1493, 1495, 1499, 1504, 1506], "optix": [1354, 1398], "optstatepytre": 1396, "or_": 1348, "orang": 1490, "orbax": [1383, 1387], "orchestr": [1461, 1503], "ord": [800, 805, 818], "order": [8, 10, 26, 42, 45, 51, 67, 69, 81, 82, 84, 130, 131, 132, 150, 170, 216, 222, 241, 283, 284, 305, 306, 318, 319, 337, 343, 344, 345, 398, 422, 433, 452, 459, 475, 503, 504, 582, 583, 584, 586, 592, 620, 632, 638, 660, 661, 669, 670, 671, 679, 705, 706, 707, 733, 746, 787, 789, 794, 796, 804, 813, 864, 876, 878, 885, 888, 891, 905, 906, 910, 911, 919, 924, 927, 934, 938, 950, 954, 957, 975, 976, 981, 986, 1002, 1088, 1093, 1103, 1143, 1144, 1145, 1146, 1152, 1153, 1158, 1162, 1285, 1291, 1307, 1308, 1310, 1341, 1344, 1346, 1348, 1349, 1350, 1351, 1354, 1356, 1357, 1360, 1364, 1366, 1369, 1371, 1374, 1376, 1378, 1379, 1381, 1382, 1389, 1403, 1411, 1414, 1415, 1424, 1428, 1431, 1434, 1444, 1445, 1447, 1449, 1451, 1452, 1456, 1460, 1461, 1463, 1464, 1466, 1467, 1468, 1472, 1474, 1475, 1478, 1479, 1480, 1483, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1498, 1501, 1503], "orderabilti": 1450, "ordered_effect": 1415, "ordereddict": 1497, "orders_tensor_cor": [148, 165, 172, 1484], "ordin": 1265, "ordinari": [1349, 1361, 1390, 1503], "ordinarili": 1503, "org": [75, 239, 305, 306, 344, 345, 357, 454, 508, 553, 701, 1018, 1047, 1312, 1366, 1378, 1379, 1384, 1396, 1445, 1460, 1465, 1473, 1496], "org_tensorflow": 1496, "organ": [1460, 1484], "orient": [1309, 1311, 1383, 1431, 1444, 1449, 1451, 1475, 1502], "orig_ind": 1348, "origin": [10, 80, 100, 120, 126, 127, 569, 619, 638, 686, 691, 719, 720, 821, 864, 902, 906, 912, 916, 982, 985, 1087, 1090, 1094, 1110, 1135, 1304, 1342, 1344, 1354, 1356, 1357, 1360, 1363, 1366, 1374, 1377, 1379, 1382, 1387, 1428, 1442, 1444, 1447, 1454, 1455, 1456, 1457, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1475, 1479, 1487, 1497], "ortho": [682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 1071, 1072, 1073, 1074], "orthogon": [239, 400, 404, 519, 808, 1095, 1354, 1448], "orthonorm": [239, 528, 808, 811, 1047, 1082, 1094, 1095, 1101, 1153, 1162], "oryx": 1446, "ospec": 1495, "oss": [1371, 1374, 1384], "ossci": 1465, "ostream": 1378, "other": [63, 65, 66, 67, 81, 82, 84, 97, 98, 128, 129, 134, 136, 145, 148, 178, 220, 284, 290, 292, 337, 357, 360, 378, 381, 398, 408, 409, 415, 424, 435, 442, 443, 444, 445, 447, 448, 450, 458, 459, 460, 461, 462, 463, 464, 488, 501, 503, 505, 506, 508, 543, 599, 600, 601, 604, 646, 654, 670, 671, 672, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 716, 717, 722, 724, 745, 762, 790, 805, 821, 868, 873, 906, 910, 918, 927, 928, 951, 975, 976, 977, 978, 979, 980, 995, 1002, 1017, 1135, 1213, 1307, 1309, 1333, 1341, 1344, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1364, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1384, 1390, 1397, 1411, 1415, 1424, 1428, 1431, 1434, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1474, 1475, 1477, 1479, 1484, 1485, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1503, 1504, 1506, 1507], "other_bind": 1348, "other_mesh": 1371, "other_platforms_cod": 424, "otherwis": [10, 61, 67, 77, 80, 81, 95, 96, 98, 132, 143, 168, 240, 296, 304, 305, 306, 333, 337, 378, 381, 391, 398, 404, 405, 406, 408, 499, 508, 674, 734, 735, 761, 766, 768, 770, 771, 772, 773, 775, 776, 778, 785, 786, 799, 808, 810, 811, 833, 864, 869, 931, 950, 1017, 1018, 1020, 1021, 1022, 1024, 1025, 1028, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1082, 1095, 1101, 1126, 1135, 1147, 1159, 1167, 1168, 1190, 1192, 1198, 1200, 1271, 1273, 1276, 1277, 1298, 1327, 1342, 1344, 1348, 1349, 1351, 1354, 1356, 1366, 1374, 1380, 1400, 1402, 1424, 1431, 1444, 1448, 1449, 1451, 1461, 1462, 1463, 1467, 1470, 1471, 1479, 1483, 1484, 1489, 1494, 1496, 1503], "ought": [1357, 1374, 1446], "our": [985, 1161, 1308, 1341, 1342, 1344, 1345, 1348, 1349, 1357, 1359, 1377, 1378, 1384, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1453, 1455, 1456, 1457, 1459, 1461, 1463, 1465, 1467, 1468, 1470, 1471, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1500, 1502, 1503], "our_jacfwd": [1342, 1467], "our_jacrev": [1342, 1467], "ourselv": 1442, "out": [3, 4, 5, 6, 10, 11, 14, 19, 20, 34, 35, 36, 40, 41, 46, 53, 54, 56, 58, 60, 69, 81, 82, 83, 84, 112, 113, 118, 119, 120, 126, 139, 209, 216, 217, 219, 335, 362, 363, 364, 365, 366, 367, 381, 424, 452, 459, 460, 461, 462, 463, 464, 483, 489, 500, 502, 505, 506, 508, 536, 543, 549, 562, 563, 565, 566, 568, 580, 581, 585, 602, 605, 610, 612, 620, 625, 632, 648, 649, 658, 670, 702, 762, 772, 773, 825, 826, 827, 829, 830, 836, 837, 838, 839, 842, 843, 845, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 866, 875, 879, 896, 898, 899, 900, 901, 906, 920, 928, 944, 945, 946, 947, 948, 950, 951, 956, 982, 987, 998, 999, 1000, 1001, 1002, 1333, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1356, 1357, 1360, 1361, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1372, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1385, 1387, 1390, 1397, 1424, 1431, 1434, 1435, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1451, 1454, 1455, 1456, 1459, 1460, 1461, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1489, 1490, 1492, 1493, 1494, 1496, 1497, 1498, 1500, 1502, 1503, 1506], "out1": 290, "out2": 290, "out_1": 290, "out_2": 290, "out_av": [1348, 1374, 1415], "out_ax": [495, 1002, 1284, 1333, 1351, 1354, 1390, 1445, 1447, 1474, 1497, 1506], "out_axi": [520, 521, 522, 523, 524, 525, 531], "out_axis_resourc": [1354, 1361], "out_batch": 72, "out_bdim": 1348, "out_bia": 1503, "out_bind": 1348, "out_binders1": 1348, "out_binders2": 1348, "out_block": 1474, "out_block_shap": 1484, "out_buf": 1348, "out_chan": 1397, "out_ct": 1390, "out_dev": 1471, "out_dim": 1397, "out_flat": [1348, 1390], "out_hbm": 1487, "out_host": 1471, "out_index_map": 1484, "out_info": 1354, "out_kernel": 1503, "out_nod": 1348, "out_part": 1354, "out_prim": 1348, "out_pspec": [135, 136, 1440], "out_ram": 1487, "out_ref": [1346, 1479, 1484], "out_shap": [178, 432, 1381, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1503], "out_shard": [26, 42, 44, 45, 83, 207, 224, 296, 326, 327, 330, 360, 361, 452, 454, 527, 532, 572, 618, 664, 670, 672, 813, 833, 873, 905, 910, 911, 954, 995, 1022, 1036, 1046, 1049, 1052, 1057, 1058, 1354, 1359, 1361, 1378, 1402, 1411, 1440, 1466, 1470, 1471, 1472, 1495, 1503], "out_shardings_hlo": 1415, "out_shardings_jax": 1415, "out_slic": 1487, "out_spec": [140, 168, 178, 198, 316, 343, 344, 345, 1283, 1378, 1381, 1424, 1469, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494, 1495, 1500], "out_specs_tre": 1478, "out_sram": 1487, "out_stor": 267, "out_summand": 1474, "out_summand_hi": 1474, "out_summand_lo": 1474, "out_tan": 1348, "out_tang": 495, "out_trac": 1348, "out_tre": [196, 253, 1348, 1415, 1435], "out_tree_": 1348, "out_typ": [1016, 1348, 1378], "out_types1": 1348, "out_types2": 1348, "out_uk": 1348, "out_unknown": 1348, "out_val": 1348, "out_var": 1348, "out_vmem_ref": 1493, "outcom": [1044, 1355], "outdbidx": 1354, "outer": [132, 614, 670, 725, 781, 813, 954, 969, 1002, 1300, 1342, 1354, 1370, 1377, 1396, 1467, 1470, 1480, 1483, 1490, 1493, 1494, 1495, 1506], "outer_block_s": 1490, "outer_grid": 1490, "outer_kernel": 1490, "outer_step": 1490, "outer_structur": 1300, "outer_treedef": [1300, 1324, 1506], "outfe": [1342, 1354, 1463], "outfeed_p": 1354, "outfeed_receiv": 1354, "outfil": [922, 923], "outinfo": 1354, "outlin": [1376, 1444, 1448, 1450, 1452, 1455, 1456, 1458, 1477, 1484, 1487, 1489, 1503], "outperform": [1377, 1480], "output": [10, 67, 69, 73, 75, 77, 78, 80, 87, 88, 113, 119, 120, 126, 127, 130, 135, 137, 143, 150, 168, 178, 198, 208, 210, 220, 223, 237, 252, 253, 257, 267, 283, 284, 288, 289, 290, 291, 292, 293, 295, 296, 297, 303, 304, 321, 343, 344, 345, 346, 348, 360, 362, 379, 380, 381, 387, 402, 407, 415, 422, 434, 436, 437, 449, 458, 459, 460, 461, 462, 463, 464, 483, 488, 489, 494, 495, 500, 501, 502, 503, 508, 520, 521, 522, 523, 524, 525, 529, 531, 536, 538, 543, 549, 551, 552, 563, 568, 582, 584, 586, 592, 595, 604, 617, 632, 637, 641, 646, 648, 649, 650, 651, 654, 668, 679, 683, 684, 687, 689, 694, 695, 697, 698, 699, 701, 723, 725, 731, 733, 762, 763, 781, 800, 804, 805, 807, 816, 818, 820, 831, 832, 836, 838, 839, 842, 851, 852, 853, 854, 855, 856, 858, 860, 861, 862, 864, 868, 878, 883, 886, 889, 896, 902, 908, 910, 911, 914, 918, 923, 927, 928, 942, 946, 948, 949, 950, 956, 962, 966, 969, 975, 976, 977, 978, 979, 980, 981, 986, 987, 991, 998, 999, 1000, 1001, 1002, 1010, 1011, 1016, 1026, 1033, 1051, 1079, 1092, 1097, 1106, 1107, 1108, 1109, 1112, 1151, 1160, 1283, 1284, 1285, 1286, 1287, 1291, 1331, 1332, 1333, 1342, 1344, 1345, 1346, 1347, 1350, 1351, 1354, 1356, 1359, 1361, 1362, 1363, 1366, 1367, 1371, 1376, 1378, 1379, 1381, 1382, 1387, 1390, 1397, 1402, 1403, 1411, 1415, 1424, 1428, 1431, 1435, 1439, 1440, 1441, 1446, 1448, 1449, 1451, 1453, 1456, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1500, 1502, 1505, 1506], "output_buff": [1381, 1487], "output_copi": 1490, "output_format": [1354, 1472], "output_global_arrai": 501, "output_layout": [283, 1354, 1378], "output_ref": [168, 1490, 1494], "output_shap": 321, "output_shape_dtyp": 1354, "output_size_in_byt": 1471, "output_tang": 1390, "output_token": 1442, "output_typ": 1390, "outs1": 1348, "outs1_r": 1348, "outs2": 1348, "outs_flat": 1348, "outs_transpos": 1348, "outshardingtyp": [527, 532], "outsid": [0, 67, 72, 119, 292, 422, 466, 540, 576, 579, 998, 999, 1000, 1001, 1027, 1076, 1103, 1135, 1341, 1342, 1354, 1359, 1361, 1370, 1377, 1391, 1431, 1442, 1447, 1449, 1456, 1462, 1467, 1479, 1480, 1494, 1503], "outsiz": 1448, "outstand": [1103, 1403, 1454, 1484], "outval": 1466, "outvar": [257, 258, 1348, 1466], "outweigh": [1448, 1450], "over": [40, 54, 67, 75, 139, 168, 178, 198, 215, 303, 304, 306, 311, 313, 339, 357, 359, 381, 415, 425, 426, 427, 435, 436, 437, 440, 442, 443, 444, 445, 447, 448, 449, 450, 457, 458, 475, 483, 538, 570, 571, 646, 723, 742, 778, 805, 813, 818, 839, 855, 860, 862, 866, 896, 899, 946, 948, 950, 954, 958, 969, 987, 1002, 1016, 1026, 1075, 1086, 1114, 1151, 1211, 1283, 1284, 1289, 1295, 1296, 1297, 1298, 1333, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1351, 1354, 1356, 1357, 1360, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1374, 1378, 1381, 1382, 1384, 1386, 1411, 1431, 1438, 1440, 1441, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1489, 1490, 1492, 1493, 1494, 1496, 1497, 1498, 1500, 1503, 1506], "overal": [305, 306, 1366, 1369, 1377, 1380, 1381, 1444, 1449, 1471, 1478, 1484, 1485, 1489, 1494], "overarch": 1414, "overfit": 1501, "overflow": [359, 451, 701, 825, 826, 1153, 1354, 1377, 1456], "overflowerror": 1354, "overhead": [65, 66, 67, 223, 494, 1118, 1342, 1347, 1356, 1369, 1376, 1377, 1378, 1380, 1439, 1442, 1444, 1446, 1454, 1459, 1462, 1467, 1479, 1484, 1492, 1493, 1494], "overlai": [1431, 1455, 1475, 1498], "overlap": [381, 459, 460, 461, 462, 463, 464, 501, 637, 641, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1381, 1444, 1445, 1448, 1471, 1474, 1479, 1480, 1483, 1484, 1487, 1489, 1490, 1492, 1493, 1503], "overli": [1443, 1444, 1454], "overlin": [340, 641, 645], "overload": [670, 1349, 1374], "overpromot": 1505, "overrid": [253, 305, 306, 356, 397, 404, 646, 670, 673, 728, 848, 874, 996, 1348, 1354, 1356, 1377, 1380, 1384, 1470, 1495], "overridden": [1377, 1457, 1470, 1487, 1496, 1506], "override_lowering_rul": 1390, "override_repositori": 1366, "overrun": 363, "overus": 1489, "overview": [1352, 1354, 1475, 1483, 1490, 1493, 1507], "overwhelmingli": 1443, "overwrit": [150, 160, 1462, 1483, 1484, 1490], "overwrite_a": [1078, 1079, 1080, 1081, 1082, 1087, 1089, 1090, 1091, 1095, 1098, 1101], "overwrite_b": [1079, 1082, 1092, 1098, 1099], "overwrite_data": 1111, "overwrite_input": [839, 855, 857, 859, 879, 901], "overwritten": [95, 172, 296, 700, 1484], "own": [171, 180, 501, 957, 969, 1002, 1052, 1349, 1350, 1354, 1357, 1363, 1366, 1369, 1377, 1380, 1385, 1398, 1408, 1442, 1444, 1445, 1447, 1451, 1457, 1460, 1462, 1466, 1467, 1474, 1479, 1484, 1490, 1492, 1493, 1495, 1496, 1506], "owner": 1341, "ownership": 1354, "p": [95, 249, 316, 401, 404, 452, 500, 501, 502, 572, 618, 781, 789, 813, 885, 887, 888, 891, 910, 918, 985, 1018, 1019, 1021, 1026, 1034, 1035, 1044, 1090, 1094, 1095, 1147, 1150, 1156, 1159, 1166, 1167, 1168, 1169, 1178, 1179, 1220, 1221, 1227, 1234, 1246, 1247, 1250, 1251, 1262, 1342, 1348, 1349, 1354, 1363, 1371, 1378, 1381, 1382, 1390, 1402, 1434, 1440, 1445, 1451, 1461, 1462, 1463, 1464, 1468, 1470, 1471, 1473, 1474, 1490, 1494, 1500, 1503, 1506], "p_": 891, "p_0": 891, "p_1": [891, 1044], "p_i": [1246, 1247], "p_k": 1044, "p_l": 1153, "p_n": 1162, "p_transpos": 1390, "pack": [194, 876, 1342, 1366, 1441, 1463, 1484, 1497, 1506], "pack_optimizer_st": 1396, "packag": [397, 534, 670, 671, 1344, 1345, 1348, 1353, 1354, 1363, 1366, 1367, 1371, 1377, 1378, 1384, 1390, 1398, 1425, 1431, 1441, 1444, 1446, 1448, 1452, 1454, 1460, 1465, 1472, 1475, 1496], "packbit": [981, 1348], "packed_st": 1396, "pacman": 1366, "pad": [113, 220, 341, 343, 344, 345, 346, 347, 403, 449, 632, 637, 641, 668, 679, 703, 762, 868, 876, 927, 928, 975, 976, 977, 978, 979, 980, 981, 1071, 1073, 1106, 1107, 1108, 1109, 1110, 1112, 1114, 1115, 1354, 1366, 1377, 1381, 1382, 1397, 1460, 1468, 1478, 1484, 1485, 1489], "pad_func": 877, "pad_width": 877, "padding_config": 423, "padding_valu": 423, "paddingtyp": 1354, "padtype_to_pad": 449, "padvaluelik": 877, "page": [1357, 1370, 1377, 1378, 1381, 1383, 1484, 1489], "pai": [1382, 1456, 1468, 1505], "paid": 1380, "pain": [1348, 1361], "pair": [69, 75, 77, 80, 120, 248, 280, 288, 289, 290, 293, 295, 297, 301, 322, 324, 325, 343, 344, 345, 347, 359, 399, 404, 405, 416, 417, 418, 431, 432, 433, 449, 458, 467, 468, 469, 482, 495, 503, 538, 716, 717, 740, 742, 837, 843, 969, 1082, 1097, 1151, 1291, 1292, 1294, 1308, 1310, 1331, 1332, 1333, 1342, 1348, 1349, 1353, 1354, 1356, 1369, 1378, 1381, 1382, 1390, 1397, 1403, 1434, 1435, 1441, 1445, 1447, 1449, 1456, 1461, 1463, 1467, 1468, 1472, 1474, 1479, 1484, 1487, 1490, 1494, 1497, 1498, 1505, 1506], "palla": [80, 198, 1335, 1346, 1354, 1368, 1371, 1378, 1398, 1483, 1485, 1492, 1493, 1494], "pallas_cal": [126, 140, 1478, 1479, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494], "pallas_cor": [168, 178, 1483], "pallas_impl": 1494, "pallas_primit": 155, "pallas_reduce_scatt": 1490, "pallas_result": 1490, "pallas_thread": 1484, "palm": 1445, "panda": 1456, "paper": [1346, 1348, 1396, 1431, 1445, 1489, 1498], "paradigm": [1378, 1379, 1503], "parallel": [94, 132, 150, 184, 198, 311, 415, 489, 503, 1002, 1298, 1333, 1337, 1346, 1352, 1354, 1356, 1363, 1366, 1378, 1379, 1383, 1389, 1397, 1411, 1431, 1434, 1440, 1442, 1443, 1444, 1445, 1447, 1451, 1461, 1470, 1475, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1498], "parallel_accelerator_execut": 1366, "paralleliz": [1451, 1493, 1498], "param": [258, 267, 268, 272, 1306, 1342, 1348, 1377, 1378, 1382, 1387, 1390, 1396, 1414, 1415, 1431, 1441, 1443, 1445, 1447, 1451, 1460, 1464, 1465, 1466, 1467, 1468, 1471, 1473, 1474, 1478, 1497, 1502, 1503, 1506], "param_se": 1503, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 31, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 267, 268, 270, 271, 272, 276, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 620, 621, 623, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 753, 754, 755, 756, 757, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1331, 1332, 1333, 1334, 1342, 1344, 1348, 1349, 1353, 1354, 1356, 1360, 1366, 1370, 1371, 1374, 1377, 1378, 1381, 1385, 1396, 1397, 1403, 1411, 1414, 1415, 1424, 1434, 1435, 1441, 1444, 1445, 1447, 1453, 1454, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1473, 1474, 1476, 1482, 1483, 1485, 1487, 1489, 1490, 1494, 1495, 1496, 1500, 1502], "parameter": [1348, 1374, 1490], "parameteris": 1342, "parameterpytre": 1396, "parametr": 1354, "paramount": 1503, "params_": 1474, "params_dens": 1414, "params_dict": [1350, 1467], "params_fn": 1396, "params_frag": 1474, "params_out_shard": 1435, "params_singl": 1464, "params_spars": 1414, "params_stack": 1474, "params_without_jaxpr": 1348, "paramsfn": 1396, "paramslist": [1382, 1468], "paramspec": 1444, "parent": [1348, 1381], "parenthes": 255, "pari": 1381, "parlanc": 1456, "pars": [255, 493, 721, 726, 1368, 1374, 1440, 1443, 1452, 1454, 1462, 1480, 1501], "parse_flags_with_absl": [1356, 1362, 1462], "part": [28, 43, 82, 119, 253, 268, 296, 336, 340, 359, 386, 436, 439, 475, 508, 557, 636, 749, 766, 775, 794, 796, 845, 907, 939, 1086, 1099, 1344, 1350, 1351, 1354, 1357, 1358, 1366, 1367, 1369, 1374, 1378, 1382, 1395, 1411, 1424, 1434, 1440, 1441, 1443, 1444, 1445, 1448, 1450, 1452, 1454, 1455, 1456, 1457, 1459, 1467, 1468, 1470, 1474, 1475, 1479, 1484, 1488, 1490, 1497, 1498, 1500, 1501, 1502, 1503, 1507], "parti": [1341, 1444], "partial": [7, 66, 67, 69, 76, 113, 264, 270, 271, 296, 305, 306, 311, 315, 316, 337, 401, 495, 543, 582, 878, 991, 1002, 1009, 1016, 1286, 1287, 1307, 1342, 1348, 1354, 1356, 1368, 1370, 1376, 1377, 1378, 1381, 1382, 1390, 1396, 1403, 1414, 1441, 1442, 1443, 1445, 1448, 1449, 1452, 1453, 1456, 1457, 1459, 1463, 1466, 1467, 1468, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1488, 1489, 1490, 1492, 1493, 1494, 1500, 1503, 1506], "partial_0": [1342, 1463, 1467], "partial_1": [1342, 1463, 1467], "partial_ev": [1348, 1354, 1377, 1390, 1446, 1454, 1480], "partial_eval_flat": 1348, "partial_eval_jaxpr": 1348, "partial_eval_jaxpr_rul": 1348, "partial_eval_rul": 1348, "partial_i": [1342, 1350, 1467], "partial_j": 1342, "partial_prod": 311, "partialevaltrac": 1348, "partialv": 1348, "particip": [1002, 1341, 1461, 1484], "particular": [9, 10, 61, 170, 290, 304, 380, 381, 422, 501, 595, 705, 864, 969, 1052, 1118, 1307, 1342, 1344, 1346, 1348, 1350, 1353, 1354, 1357, 1366, 1371, 1376, 1378, 1382, 1389, 1390, 1397, 1414, 1431, 1439, 1444, 1447, 1448, 1449, 1450, 1451, 1454, 1455, 1456, 1459, 1460, 1463, 1464, 1467, 1468, 1474, 1475, 1479, 1483, 1489, 1492, 1493, 1496, 1497, 1498, 1500, 1506], "particularli": [98, 128, 129, 924, 1002, 1016, 1134, 1345, 1351, 1354, 1378, 1382, 1444, 1448, 1456, 1468, 1470, 1471, 1503], "partir": 1501, "partit": [82, 84, 98, 136, 166, 493, 582, 1354, 1402, 1411, 1431, 1434, 1440, 1445, 1461, 1464, 1470, 1471, 1474, 1483, 1484, 1489, 1490, 1493, 1494, 1500, 1501, 1503], "partition": [489, 493, 1354, 1402, 1411, 1445, 1480, 1501], "partition_index": 98, "partition_list": 1348, "partition_spec": [83, 1440], "partitioned_axi": [166, 1484], "partitioned_rms_norm": 1378, "partitionspec": [44, 83, 135, 136, 198, 316, 500, 501, 502, 672, 833, 873, 954, 995, 1283, 1354, 1361, 1369, 1371, 1378, 1381, 1402, 1411, 1415, 1434, 1440, 1445, 1461, 1464, 1470, 1471, 1474, 1490, 1495, 1500], "partli": [160, 1444, 1448], "pass": [10, 57, 67, 69, 73, 75, 77, 80, 81, 82, 84, 94, 97, 98, 113, 120, 130, 136, 194, 236, 237, 241, 243, 252, 253, 267, 283, 284, 286, 292, 296, 335, 337, 363, 366, 424, 493, 494, 508, 519, 543, 570, 572, 599, 600, 601, 604, 614, 654, 661, 671, 679, 720, 723, 832, 841, 864, 868, 872, 877, 881, 902, 910, 923, 924, 927, 950, 975, 976, 991, 1002, 1007, 1009, 1014, 1016, 1017, 1044, 1105, 1116, 1117, 1118, 1295, 1302, 1304, 1307, 1308, 1310, 1312, 1333, 1342, 1344, 1346, 1347, 1348, 1350, 1354, 1355, 1357, 1359, 1360, 1361, 1363, 1366, 1368, 1369, 1370, 1371, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1390, 1396, 1402, 1404, 1411, 1414, 1415, 1424, 1431, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1451, 1452, 1453, 1459, 1460, 1462, 1463, 1468, 1470, 1471, 1472, 1474, 1475, 1478, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1496, 1497, 1498, 1500, 1502, 1506], "past": [1377, 1450], "patch": [345, 1354, 1366, 1456, 1457], "patchwork": 1444, "path": [397, 670, 671, 804, 820, 922, 923, 1292, 1294, 1296, 1306, 1310, 1345, 1346, 1347, 1354, 1356, 1359, 1366, 1377, 1378, 1381, 1384, 1385, 1400, 1435, 1440, 1445, 1448, 1456, 1457, 1480, 1484, 1490, 1496, 1501, 1505], "path_info": 671, "path_val": 1292, "pathlib": [922, 923, 1378], "pathlik": [820, 1013, 1015], "pattern": [210, 238, 244, 296, 337, 501, 1346, 1348, 1353, 1354, 1370, 1376, 1377, 1378, 1381, 1382, 1402, 1439, 1444, 1445, 1455, 1456, 1459, 1460, 1468, 1470, 1471, 1479, 1483, 1484, 1487, 1488, 1489, 1491, 1498, 1502, 1503], "paus": [1360, 1363], "pave": 1445, "pax": [1381, 1443], "payload": 114, "pb": 1381, "pbroadcast": [1445, 1447], "pci": 1461, "pd": 1456, "pdb": [1342, 1362, 1363, 1445, 1449, 1463], "pdf": [239, 1156, 1170, 1171, 1172, 1173, 1175, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1243, 1244, 1248, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1267, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1278, 1279, 1281, 1354, 1396, 1445, 1469], "pe": 1385, "peac": 1484, "peak": [41, 898, 1056, 1494], "pearson": 640, "peculiar": 1431, "ped": [1378, 1445, 1474], "pedagog": [1349, 1490], "peel": 1348, "peer": [1354, 1461], "penalti": [1374, 1456, 1465, 1473, 1505], "pendulum": 1449, "penros": 807, "peopl": [1444, 1462, 1470], "pep": [1302, 1354, 1384, 1444, 1457], "pepper": 1444, "per": [98, 209, 363, 366, 501, 502, 739, 740, 742, 1007, 1113, 1348, 1354, 1356, 1366, 1377, 1381, 1396, 1402, 1442, 1458, 1459, 1461, 1464, 1465, 1467, 1470, 1471, 1473, 1474, 1475, 1483, 1487, 1490, 1492, 1493, 1495, 1496, 1500, 1503], "per_device_batch_s": 1461, "per_device_shap": 501, "per_host_data": 501, "per_host_gener": 501, "per_host_shap": 501, "per_platform": 424, "per_process_batch": 1369, "per_process_batch_s": 1461, "percent": [1169, 1186, 1201, 1227, 1234, 1243, 1258, 1278], "percentag": [1492, 1494], "percentil": [857, 859, 901, 1354], "perceptron": 1506, "perex_grad": 1342, "perfect": 640, "perfectli": [640, 645, 1445, 1503], "perfetto": [1013, 1015, 1354], "perfetto_trac": [1013, 1015], "perform": [10, 47, 65, 66, 67, 75, 76, 79, 91, 98, 100, 112, 113, 126, 131, 150, 160, 166, 167, 170, 174, 187, 215, 239, 296, 306, 311, 348, 356, 362, 381, 387, 397, 401, 402, 415, 425, 426, 427, 431, 432, 433, 435, 436, 455, 458, 459, 460, 461, 462, 463, 464, 499, 508, 543, 544, 654, 677, 720, 753, 797, 799, 833, 834, 838, 846, 864, 891, 905, 911, 917, 924, 944, 945, 949, 957, 969, 988, 989, 998, 999, 1000, 1001, 1002, 1007, 1023, 1026, 1064, 1071, 1073, 1089, 1105, 1113, 1118, 1298, 1337, 1342, 1348, 1349, 1354, 1356, 1366, 1369, 1370, 1374, 1376, 1377, 1378, 1379, 1382, 1384, 1387, 1390, 1396, 1411, 1414, 1415, 1424, 1442, 1443, 1445, 1447, 1448, 1449, 1451, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1465, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1486, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1500, 1502, 1505, 1507], "perhap": [378, 381, 670, 1342, 1348, 1371, 1377, 1382, 1444, 1448, 1454, 1456, 1463, 1467, 1468, 1480, 1487], "period": [98, 761, 985, 1345, 1354, 1384, 1484, 1498], "periodogram": [1110, 1115], "perk": 1378, "perm": [431, 432, 433, 434, 1348, 1381, 1474, 1490], "permalink": 1496, "permiss": [1342, 1355, 1357, 1461, 1462, 1463, 1465, 1473, 1495], "permissive_sum": 1462, "permit": [363, 366, 1354, 1355, 1424], "permut": [158, 216, 222, 401, 402, 431, 432, 433, 434, 452, 475, 476, 487, 846, 880, 917, 949, 957, 1090, 1348, 1354, 1369, 1381, 1469, 1474, 1479, 1484, 1489], "permutation_s": 402, "permute_l": 1090, "permuted_devic": 1464, "persist": [68, 160, 248, 1343, 1348, 1354, 1378, 1381, 1400, 1415, 1493], "perspect": [1371, 1376, 1444, 1455, 1470, 1493], "perturb": [80, 1342, 1349, 1368, 1377, 1390, 1467, 1480], "perus": 1503, "pervas": [1354, 1385], "pessim": 1484, "pgle_profil": 1390, "pgle_profiling_run": 1381, "ph": 1047, "phase": [470, 930, 985, 1345, 1366, 1487, 1489, 1490], "phi": [1153, 1162], "philosophi": [1445, 1451], "philox": 1424, "phrase": 1450, "physic": [131, 132, 493, 504, 1354, 1371, 1383, 1440, 1445, 1447, 1448, 1461, 1464, 1474, 1480, 1484, 1487, 1492, 1500], "pi": [337, 510, 573, 575, 577, 578, 642, 652, 761, 903, 933, 934, 952, 958, 985, 1042, 1045, 1046, 1059, 1075, 1127, 1128, 1135, 1148, 1154, 1155, 1162, 1183, 1185, 1248, 1249, 1255, 1257, 1267, 1268, 1271, 1273, 1279, 1280, 1281, 1282, 1342, 1377, 1467, 1469, 1471, 1476, 1503], "pic": 1465, "pick": [81, 1356, 1366, 1369, 1377, 1467, 1484, 1487, 1488, 1490, 1492], "pickl": [922, 923, 1354, 1412, 1428], "pictur": [1472, 1484], "pid": 1465, "pid_m": 1483, "pid_n": 1483, "piec": [1156, 1348, 1349, 1369, 1390, 1445, 1457, 1464, 1474, 1487], "piecewis": [1111, 1359], "piecewise_const": 1396, "pil": 1465, "pillow": [1366, 1465], "pin": [1354, 1366, 1370, 1446, 1457, 1461, 1471], "ping": [1378, 1445, 1484], "pink": 1369, "pinned_host": [1382, 1471], "pinpoint": [1363, 1387], "pinv": 1354, "pip": [1354, 1357, 1377, 1387, 1457, 1461, 1465, 1475, 1495, 1496], "pipe": 1502, "pipelin": [168, 183, 305, 306, 501, 1473, 1478, 1480, 1482, 1484, 1486, 1491, 1494], "pipeline_bodi": 1493, "pipeline_mod": [139, 149, 1493], "pipeline_parallelism_opt_level_en": 1381, "pipeline_step": 1483, "pitfal": 1381, "piv": [1091, 1092], "pivot": [401, 402, 404, 582, 878, 1091, 1092, 1095, 1354, 1507], "pivot_valu": [582, 878], "pix": [1423, 1448], "pixel": [292, 1445], "pjit": [83, 135, 136, 296, 489, 1354, 1356, 1360, 1362, 1363, 1377, 1385, 1390, 1398, 1402, 1431, 1447, 1480], "pjit_fft": 1402, "pjit_my_fft": 1402, "pjit_p": 1354, "pjit_transformer_lay": 1445, "pjitted_f": 1440, "pjitted_fun": [135, 136], "pjrt": [1341, 1354, 1366, 1384], "pkg": 1384, "pl": [139, 170, 178, 1356, 1478, 1479, 1480, 1485, 1487, 1488, 1490, 1492, 1493, 1494], "place": [10, 13, 57, 80, 100, 311, 348, 437, 481, 501, 655, 658, 700, 720, 864, 877, 899, 900, 1016, 1064, 1068, 1077, 1301, 1341, 1342, 1344, 1346, 1352, 1354, 1360, 1366, 1370, 1371, 1374, 1377, 1382, 1385, 1411, 1428, 1434, 1439, 1444, 1445, 1449, 1454, 1456, 1463, 1464, 1468, 1471, 1472, 1474, 1475, 1479, 1480, 1483, 1484, 1488, 1490, 1493, 1494, 1495, 1496, 1502, 1503], "placehold": [143, 254, 255, 1116, 1117, 1118, 1335, 1336, 1338, 1339, 1340, 1348, 1374, 1441, 1461, 1464, 1494], "placement": [13, 90, 95, 1356, 1434, 1445, 1464, 1472, 1474, 1500], "plai": [1382, 1462, 1465, 1468, 1473, 1507], "plain": [923, 1347, 1484], "plan": [1105, 1354, 1357, 1368, 1371, 1385, 1445, 1452, 1455], "plane": [919, 1342, 1467], "platform": [10, 61, 89, 91, 93, 132, 178, 246, 248, 285, 286, 287, 407, 424, 432, 433, 454, 492, 496, 864, 1002, 1005, 1334, 1341, 1344, 1345, 1354, 1366, 1372, 1374, 1377, 1380, 1390, 1411, 1415, 1424, 1457, 1461, 1464, 1471, 1475, 1480, 1485, 1487, 1493, 1496], "platform_depend": 1378, "platform_index": [1371, 1378], "platformstream": 1378, "player": 1503, "pleas": [98, 104, 136, 923, 1026, 1101, 1337, 1345, 1354, 1356, 1357, 1366, 1374, 1376, 1377, 1378, 1384, 1387, 1395, 1411, 1429, 1440, 1443, 1449, 1455, 1462, 1470, 1487, 1489, 1490, 1494, 1501, 1503, 1507], "plenti": 1470, "plgpu": [160, 1483], "plot": [1342, 1363, 1463, 1469, 1475, 1476, 1502], "plot_scal": 1476, "plt": [1342, 1456, 1463, 1469, 1475, 1476, 1502], "pltpu": [1478, 1479, 1488, 1489, 1490, 1492, 1494], "plu": [551, 678, 750, 821, 823, 921, 1344, 1446, 1469, 1471, 1492, 1496], "plug": [1341, 1366, 1465, 1473], "pluggabl": [1458, 1498], "plugin": [1354, 1356, 1366, 1381, 1384, 1457, 1496], "plumb": [1343, 1348, 1354, 1361, 1479, 1480], "pm": [391, 1136, 1140], "pmap": [67, 90, 119, 303, 304, 315, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 499, 503, 1016, 1312, 1333, 1353, 1354, 1360, 1362, 1370, 1377, 1379, 1434, 1435, 1439, 1440, 1442, 1447, 1454, 1462, 1466, 1474, 1480], "pmapshard": [1434, 1440], "pmean": [1447, 1474], "pmf": [1166, 1167, 1169, 1176, 1178, 1220, 1246, 1250, 1262, 1263, 1354], "pmlr": 1023, "po": [1098, 1354, 1456], "poch": 1141, "pochamm": [1141, 1142, 1157], "pocketfft": 1354, "pod": [1002, 1354, 1411, 1461, 1490], "point": [67, 81, 102, 110, 111, 120, 184, 239, 250, 251, 289, 299, 300, 309, 310, 312, 313, 314, 332, 336, 349, 350, 372, 373, 375, 377, 391, 399, 409, 411, 412, 413, 421, 456, 470, 471, 472, 475, 484, 485, 495, 536, 549, 572, 578, 589, 591, 631, 640, 645, 680, 684, 698, 701, 713, 715, 718, 719, 723, 731, 739, 740, 742, 747, 752, 761, 777, 798, 802, 804, 807, 819, 831, 838, 857, 859, 867, 879, 886, 887, 889, 901, 908, 909, 920, 931, 958, 967, 985, 1052, 1075, 1076, 1103, 1104, 1110, 1113, 1114, 1115, 1149, 1152, 1153, 1160, 1163, 1164, 1169, 1186, 1201, 1210, 1227, 1234, 1243, 1258, 1278, 1342, 1344, 1346, 1348, 1349, 1354, 1356, 1360, 1364, 1366, 1367, 1370, 1377, 1378, 1384, 1390, 1403, 1424, 1442, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1455, 1456, 1457, 1460, 1461, 1462, 1463, 1465, 1467, 1471, 1473, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1492, 1494, 1496, 1497, 1498, 1505, 1506], "pointer": [240, 285, 286, 287, 1334, 1349, 1356, 1378, 1480, 1495], "pointless": 346, "pointwis": 1390, "poison": 1364, "poke": [1360, 1449], "polar": [403, 1162, 1354], "polar_unitari": 1354, "pole": [1136, 1140], "poli": [887, 891, 918, 1354], "polici": [67, 83, 110, 111, 1344, 1345, 1354, 1356, 1464, 1474, 1477, 1495], "policy_1": 1382, "policy_2": 1382, "polyadd": [886, 889, 890, 1448], "polyd": 888, "polydiv": [884, 889, 890, 1448], "polyfit": [883, 891, 918], "polygamma": 1125, "polyint": 885, "polymoni": 1349, "polymorph": [254, 1354, 1372, 1478], "polymul": [884, 886, 890], "polynomi": [883, 884, 885, 886, 887, 888, 889, 890, 891, 918, 1349, 1403], "polynomial_decai": 1396, "polyshap": 1354, "polysub": [884, 886, 889], "polyv": [883, 885, 887, 888, 918], "ponder": 1503, "pong": 1484, "pool": [1380, 1397, 1484], "poor": [67, 797, 1089, 1135, 1380, 1475], "poorli": [1448, 1475], "pop": [1348, 1479], "popcnt": 429, "popcount": 429, "popul": [18, 136, 1354, 1444, 1461, 1495], "popular": [1466, 1480, 1484, 1494], "population_count": 334, "port": [98, 1012, 1377, 1496], "portabl": [922, 923, 1371, 1435, 1480], "portion": [637, 641, 701, 1082, 1106, 1107, 1108, 1109, 1112, 1353, 1366, 1378, 1445, 1456, 1488, 1496], "pos_emb": 1503, "posdef": 1094, "pose": [1444, 1502, 1503], "posinf": 848, "posit": [10, 65, 66, 78, 82, 84, 113, 118, 119, 137, 178, 179, 180, 198, 206, 210, 237, 283, 289, 290, 293, 295, 296, 297, 303, 304, 305, 306, 332, 337, 343, 344, 357, 361, 377, 381, 395, 436, 437, 456, 458, 494, 495, 503, 531, 570, 572, 619, 645, 655, 658, 659, 677, 680, 701, 768, 770, 771, 772, 773, 788, 792, 814, 816, 846, 848, 864, 866, 881, 885, 902, 916, 917, 923, 930, 950, 956, 957, 981, 985, 991, 1002, 1045, 1054, 1078, 1079, 1080, 1087, 1094, 1098, 1113, 1117, 1136, 1137, 1138, 1141, 1142, 1148, 1161, 1283, 1284, 1295, 1296, 1331, 1332, 1333, 1342, 1348, 1350, 1354, 1356, 1359, 1361, 1362, 1370, 1374, 1377, 1390, 1396, 1397, 1402, 1403, 1411, 1415, 1435, 1444, 1448, 1449, 1462, 1463, 1467, 1474, 1479, 1480, 1498, 1503], "position": 1354, "positive_valu": 1370, "possibl": [82, 83, 95, 97, 100, 112, 422, 456, 465, 489, 501, 654, 677, 700, 720, 834, 846, 882, 899, 900, 905, 911, 917, 923, 944, 949, 957, 1002, 1017, 1036, 1052, 1304, 1342, 1345, 1348, 1354, 1357, 1366, 1368, 1369, 1370, 1371, 1374, 1377, 1378, 1380, 1381, 1382, 1384, 1402, 1423, 1424, 1428, 1440, 1444, 1445, 1447, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1467, 1468, 1474, 1475, 1478, 1479, 1487, 1489, 1490, 1492, 1493, 1494, 1495, 1497, 1501, 1503], "possibli": [311, 362, 364, 1344, 1371, 1374, 1378, 1435, 1455, 1474, 1501], "post": [1381, 1450, 1462, 1484], "post_norm_batch": 1445, "post_norm_emb": 1445, "post_process_cal": 1354, "posterior": [1353, 1476], "postmortem": 1362, "potenti": [67, 82, 337, 363, 501, 639, 722, 724, 752, 849, 1345, 1348, 1356, 1363, 1366, 1380, 1442, 1443, 1444, 1445, 1447, 1448, 1454, 1456, 1462, 1474, 1480, 1483, 1484, 1487, 1489, 1490, 1499, 1501, 1505, 1506], "pow": [331, 389, 457, 478, 894, 1354, 1489], "power": [10, 290, 331, 389, 430, 457, 478, 670, 701, 801, 864, 893, 942, 943, 986, 1052, 1110, 1115, 1296, 1310, 1342, 1374, 1376, 1396, 1441, 1444, 1449, 1460, 1466, 1467, 1471, 1475, 1479, 1484, 1485, 1487, 1490, 1496, 1498], "powershel": 1366, "pp": [701, 1348, 1354, 1363, 1390], "pp_": 1354, "pp_eqn": 1348, "pp_jaxpr": 1348, "pp_param": 1348, "pp_rule": 1348, "pp_valu": 1390, "ppermut": [434, 1381, 1445, 1479], "ppermute_add_one_kernel": 1479, "ppermute_and_add_on": 1479, "ppermute_bwd": 1381, "ppermute_bwd_data": 1381, "ppermute_don": 1479, "ppermute_done_kernel": 1479, "ppermute_done_st": 1479, "ppermute_kernel": 1479, "ppermute_ref": 1474, "ppermute_start": 1479, "ppermute_start_kernel": 1479, "ppermute_start_st": 1479, "ppf": [1166, 1167, 1168, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1196, 1197, 1198, 1199, 1200, 1202, 1222, 1223, 1224, 1226, 1229, 1230, 1231, 1233, 1239, 1240, 1241, 1242, 1244, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1275, 1276, 1277], "ppmerut": 1445, "pprint": 1348, "pprint_cond": 1348, "pprint_xla_cal": 1348, "pprof": [1010, 1356, 1367], "pr": [1357, 1366, 1371, 1377, 1387, 1395, 1444, 1449, 1453, 1457], "practic": [10, 677, 834, 846, 864, 905, 911, 917, 944, 949, 957, 1345, 1353, 1366, 1369, 1378, 1424, 1442, 1444, 1445, 1449, 1450, 1451, 1452, 1454, 1457, 1459, 1460, 1461, 1464, 1471, 1474, 1475, 1479, 1480, 1483, 1484, 1490, 1492, 1494, 1503], "practition": 1364, "pre": [670, 969, 1342, 1357, 1359, 1366, 1374, 1377, 1380, 1381, 1384, 1390, 1411, 1454, 1459, 1467, 1472, 1487], "prealloc": [1354, 1380, 1484], "prebuilt": [1353, 1366, 1457], "preced": [250, 251, 1356, 1390, 1444, 1449, 1452, 1461, 1474, 1493], "precis": [23, 69, 77, 78, 80, 87, 88, 91, 144, 207, 223, 224, 291, 292, 317, 337, 341, 343, 344, 345, 346, 347, 360, 361, 543, 544, 567, 572, 573, 574, 575, 576, 577, 578, 579, 589, 591, 603, 613, 621, 623, 637, 640, 641, 642, 643, 645, 664, 669, 670, 675, 678, 682, 683, 685, 687, 688, 689, 690, 693, 694, 695, 696, 697, 699, 701, 702, 714, 731, 733, 736, 737, 745, 753, 780, 793, 794, 795, 797, 798, 799, 801, 802, 804, 807, 813, 816, 817, 822, 831, 833, 838, 860, 862, 887, 913, 933, 934, 936, 942, 946, 952, 953, 954, 968, 987, 988, 989, 1040, 1071, 1072, 1073, 1074, 1087, 1089, 1090, 1093, 1094, 1096, 1100, 1106, 1107, 1108, 1109, 1111, 1112, 1116, 1117, 1135, 1141, 1142, 1148, 1266, 1342, 1348, 1354, 1362, 1371, 1374, 1377, 1382, 1424, 1443, 1444, 1445, 1448, 1460, 1466, 1467, 1474, 1478, 1480, 1485, 1492, 1500, 1505], "precisionlik": [23, 317, 341, 343, 344, 346, 347, 360, 361, 637, 641, 799, 804, 813, 817, 1106, 1107, 1108, 1109, 1424], "preclud": [79, 1445, 1449], "precompil": [1354, 1356, 1412], "precondit": [239, 1116, 1117, 1118], "precondition": [1116, 1117, 1118], "precv": 433, "precv_token": 1381, "pred": [118, 339, 465, 466, 1348, 1350, 1359, 1441, 1454, 1465, 1467, 1473, 1502], "pred_dim": 1348, "pred_trac": 1348, "pred_tracer_": 1348, "pred_typ": 1348, "pred_unk": 1348, "predefin": [704, 750, 921], "predic": [118, 119, 167, 339, 465, 483, 1348, 1354, 1359, 1441], "predict": [1342, 1350, 1382, 1443, 1445, 1447, 1456, 1464, 1467, 1468, 1474, 1479, 1498, 1502, 1503], "predict_dict": [1342, 1467], "predict_fsdp": 1474, "predict_fsdp_tp": 1474, "predict_pp": 1474, "predict_tp": 1474, "predicted_class": [1465, 1473], "prefer": [201, 203, 361, 381, 452, 459, 460, 461, 462, 463, 464, 917, 1078, 1091, 1302, 1348, 1349, 1352, 1354, 1356, 1364, 1366, 1370, 1377, 1384, 1424, 1451, 1455, 1457, 1458, 1484, 1489, 1505, 1506], "preferenti": 1356, "preferred_element_typ": [23, 207, 224, 341, 343, 345, 346, 347, 360, 361, 543, 544, 637, 641, 664, 670, 753, 799, 813, 817, 833, 954, 988, 989, 1354, 1382, 1424, 1466, 1475, 1489, 1492, 1494], "prefetch": [1473, 1486, 1489, 1491], "prefetch_arg": 1494, "prefetch_i": 1494, "prefetch_j": 1494, "prefetch_map": 1494, "prefetch_mask": 1494, "prefetch_ref": 1494, "prefetchscalargridspec": [1489, 1490, 1492, 1494], "prefix": [95, 198, 254, 296, 311, 505, 506, 1028, 1044, 1045, 1216, 1283, 1290, 1295, 1296, 1333, 1345, 1354, 1366, 1374, 1411, 1489, 1497, 1506], "prefix_tre": [1290, 1314, 1503], "preinstal": [1366, 1384], "preliminari": [1354, 1446], "prepar": [98, 1354, 1357, 1371, 1415, 1490, 1495, 1503], "prepend": [600, 601, 660, 669, 1385], "preprocess": 1494, "prerequisit": 1366, "prescript": 1395, "presenc": [82, 769, 1346, 1354, 1363, 1364, 1371, 1415, 1442, 1479], "present": [67, 178, 252, 253, 793, 795, 981, 1010, 1095, 1342, 1346, 1348, 1349, 1354, 1356, 1363, 1366, 1371, 1377, 1378, 1384, 1402, 1415, 1444, 1452, 1459, 1462, 1463, 1464, 1478, 1496], "preserv": [321, 337, 387, 436, 452, 505, 506, 537, 620, 644, 860, 862, 898, 946, 987, 1354, 1356, 1363, 1366, 1376, 1414, 1438, 1440, 1442, 1449, 1452, 1462, 1503], "preset": 1424, "press": [1023, 1496], "pressur": [1471, 1503], "pretend": [1342, 1390, 1442, 1495], "pretransform": 1354, "pretti": [1306, 1342, 1348, 1350, 1354, 1356, 1363, 1366, 1446, 1449, 1450, 1463, 1464, 1465, 1466, 1467, 1473, 1484, 1492], "prev": [1069, 1460], "prev_compute_r": 1381, "prev_dynamic_trac": 1348, "prev_i": 1459, "prev_interpret": 1349, "prev_metr": 1503, "prev_stage_slice_bwd": 1381, "prev_stage_slice_fwd": 1381, "prev_trac": 1460, "prevent": [67, 239, 422, 481, 886, 889, 1354, 1356, 1364, 1380, 1387, 1449, 1455, 1462, 1479, 1484, 1490, 1495, 1503, 1505], "prevent_cs": [67, 1382, 1468, 1471], "previou": [168, 1069, 1342, 1349, 1350, 1351, 1354, 1366, 1369, 1371, 1381, 1440, 1441, 1442, 1444, 1451, 1456, 1459, 1467, 1474, 1475, 1479, 1483, 1484, 1487, 1490, 1492, 1494, 1496, 1503, 1506], "previous": [167, 172, 1354, 1356, 1368, 1370, 1376, 1378, 1390, 1404, 1440, 1444, 1446, 1448, 1452, 1454, 1455, 1456, 1478, 1484, 1490, 1496], "prim": [1348, 1460], "prim_requires_devices_during_low": 1354, "primaci": 1456, "primal": [67, 75, 76, 77, 78, 80, 297, 494, 495, 1332, 1342, 1348, 1349, 1354, 1361, 1371, 1376, 1378, 1382, 1403, 1415, 1449, 1463, 1467, 1468, 1470], "primal_env": 1348, "primal_out": [76, 77, 78, 1342, 1348, 1390, 1463], "primal_pv": 1348, "primal_pvals_in": 1348, "primals_and_tang": 1348, "primals_flat": 1348, "primals_in": 1348, "primals_in_flat": 1348, "primals_out": [297, 495, 1332, 1348, 1403], "primals_out_flat": 1348, "primals_tangents_in": 1348, "primari": [285, 475, 787, 1344, 1354, 1379, 1414, 1438, 1447, 1448, 1449, 1480, 1483, 1503], "primarili": [1302, 1354, 1448, 1457, 1483, 1484, 1493, 1497, 1503], "primer": 1376, "primit": [67, 82, 97, 120, 170, 178, 248, 258, 413, 415, 454, 458, 488, 1002, 1341, 1342, 1343, 1346, 1349, 1352, 1354, 1356, 1360, 1361, 1362, 1371, 1374, 1376, 1377, 1379, 1382, 1385, 1403, 1414, 1424, 1428, 1442, 1445, 1446, 1448, 1449, 1451, 1452, 1454, 1459, 1460, 1462, 1463, 1466, 1467, 1468, 1474, 1478, 1482, 1489, 1490, 1492, 1495, 1497], "primitive_batch": 1390, "primitive_jvp": 1390, "primitive_transpos": 1390, "primitives_with_limited_support": 1354, "primitivetyp": 1354, "principl": [1118, 1342, 1349, 1377, 1445, 1449, 1455, 1461, 1463, 1480, 1490, 1503], "print": [72, 74, 75, 77, 78, 80, 81, 82, 83, 97, 113, 128, 129, 130, 143, 178, 289, 290, 293, 295, 296, 297, 303, 315, 337, 415, 426, 435, 436, 495, 503, 567, 578, 582, 590, 601, 603, 613, 623, 638, 640, 642, 645, 666, 671, 675, 678, 682, 685, 687, 688, 690, 702, 714, 720, 723, 732, 733, 736, 737, 739, 743, 763, 780, 787, 798, 804, 822, 825, 840, 860, 862, 878, 887, 895, 900, 922, 926, 933, 934, 941, 946, 952, 968, 976, 982, 984, 987, 992, 1002, 1003, 1013, 1015, 1016, 1070, 1071, 1072, 1073, 1074, 1087, 1090, 1093, 1094, 1096, 1100, 1102, 1111, 1112, 1113, 1304, 1306, 1332, 1333, 1342, 1344, 1346, 1347, 1348, 1349, 1350, 1354, 1356, 1359, 1361, 1362, 1364, 1368, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1390, 1391, 1402, 1403, 1411, 1414, 1435, 1441, 1442, 1445, 1446, 1452, 1454, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1480, 1485, 1487, 1490, 1492, 1494, 1497, 1498, 1500, 1502, 1503, 1504, 1505, 1506], "print_binari": [784, 914], "print_exc": 1390, "print_except": 1464, "print_fwd_bwd": [1382, 1468], "print_grad": 1363, "print_grad_bwd": 1363, "print_grad_fwd": 1363, "print_large_const": 1354, "print_saved_residu": [1382, 1468], "print_someth": 1376, "print_truncated_random_st": 1498, "print_zero": 1304, "printabl": 671, "printer": [1348, 1356], "printopt": [77, 78, 80, 337, 567, 573, 574, 575, 576, 577, 578, 579, 603, 613, 621, 623, 640, 642, 643, 645, 675, 678, 682, 683, 685, 687, 688, 689, 690, 693, 694, 695, 696, 697, 699, 702, 714, 731, 732, 733, 736, 737, 745, 763, 780, 793, 794, 795, 798, 801, 822, 831, 860, 862, 887, 926, 933, 934, 936, 942, 946, 952, 953, 968, 987, 1071, 1072, 1073, 1074, 1087, 1090, 1093, 1094, 1096, 1100, 1111, 1112, 1266, 1377], "prior": [98, 182, 185, 186, 187, 188, 189, 190, 191, 192, 424, 1344, 1354, 1357, 1365, 1366, 1371, 1382, 1385, 1400, 1428, 1435, 1446, 1450, 1472, 1495], "priorit": [1342, 1381, 1449, 1452], "prioriti": [81, 1377, 1451], "pristin": 1400, "privat": [1354, 1371, 1444, 1455, 1461, 1478, 1484], "prng": [92, 106, 241, 277, 281, 282, 454, 455, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1216, 1345, 1354, 1370, 1385, 1424, 1427, 1446, 1448, 1454, 1458, 1478, 1498, 1502, 1503], "prng_kei": [105, 1061, 1354, 1455], "prngimpl": [278, 1455], "prngkei": [543, 544, 1354, 1431, 1440, 1454, 1455, 1498], "prngkeyarrai": [277, 278, 281, 282, 1354, 1455], "prngspecdesc": [1017, 1037, 1061], "pro": 1450, "prob": 508, "probabilist": 1383, "probabl": [645, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1050, 1051, 1053, 1055, 1056, 1057, 1059, 1060, 1155, 1166, 1167, 1168, 1170, 1171, 1172, 1174, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1185, 1188, 1189, 1190, 1192, 1194, 1195, 1196, 1197, 1198, 1200, 1203, 1204, 1205, 1207, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1224, 1226, 1227, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1242, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1257, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1342, 1350, 1356, 1357, 1370, 1383, 1447, 1448, 1457, 1461, 1467, 1470, 1474, 1488, 1494], "problem": [126, 239, 578, 701, 797, 804, 1082, 1083, 1089, 1099, 1118, 1346, 1354, 1359, 1361, 1367, 1370, 1377, 1378, 1384, 1414, 1440, 1443, 1444, 1445, 1451, 1454, 1456, 1459, 1462, 1479, 1480, 1483, 1484, 1487, 1490, 1492, 1498, 1501, 1502, 1506], "problemat": [1052, 1345, 1354, 1370, 1377, 1456, 1459, 1479, 1484, 1498, 1505, 1506], "proc_id": 1461, "proce": [1390, 1441, 1490, 1495, 1503], "procedur": [1342, 1345, 1463, 1470, 1489], "proceed": 1023, "process": [29, 93, 98, 100, 131, 132, 137, 178, 248, 284, 287, 415, 497, 498, 501, 502, 720, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1013, 1015, 1118, 1338, 1343, 1344, 1354, 1363, 1366, 1368, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1390, 1400, 1411, 1434, 1435, 1440, 1441, 1444, 1446, 1447, 1449, 1450, 1455, 1456, 1458, 1462, 1470, 1471, 1474, 1475, 1487, 1488, 1489, 1490, 1495, 1496, 1498, 1502, 1503], "process_allgath": 1461, "process_batch": 1461, "process_count": [136, 498, 1354, 1369, 1461], "process_id": [98, 1461], "process_idx": 1369, "process_index": [96, 136, 498, 1002, 1354, 1369, 1461], "process_indic": 1354, "process_is_granul": 132, "process_primit": [1348, 1460], "processed_eqn": 1348, "processor": [1354, 1487, 1488], "prod": [178, 345, 447, 500, 501, 502, 571, 648, 814, 836, 842, 851, 948, 1344, 1354, 1374, 1382, 1454, 1460, 1485, 1487, 1488, 1494], "prod_": [1028, 1134, 1154, 1194, 1195, 1246, 1247], "produc": [67, 77, 80, 87, 88, 119, 131, 132, 194, 198, 290, 306, 343, 359, 378, 451, 458, 495, 670, 687, 712, 781, 804, 866, 942, 991, 1017, 1019, 1020, 1021, 1023, 1025, 1028, 1031, 1032, 1033, 1035, 1040, 1042, 1044, 1045, 1048, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1283, 1284, 1295, 1296, 1342, 1344, 1346, 1347, 1348, 1349, 1351, 1354, 1356, 1360, 1361, 1362, 1364, 1369, 1371, 1374, 1377, 1378, 1380, 1382, 1385, 1390, 1402, 1441, 1447, 1449, 1451, 1453, 1454, 1455, 1456, 1459, 1462, 1463, 1464, 1466, 1468, 1470, 1472, 1474, 1475, 1480, 1484, 1487, 1488, 1489, 1490, 1494, 1495, 1496, 1497, 1498, 1503, 1506], "producer_thread": 1484, "product": [19, 23, 40, 91, 131, 132, 229, 230, 233, 234, 290, 297, 305, 311, 354, 360, 400, 407, 418, 447, 449, 464, 495, 508, 543, 646, 648, 650, 664, 670, 753, 781, 790, 799, 804, 806, 811, 813, 814, 817, 833, 835, 836, 842, 851, 853, 854, 856, 858, 861, 875, 884, 886, 889, 890, 896, 948, 954, 969, 988, 989, 990, 1000, 1002, 1101, 1116, 1117, 1118, 1213, 1332, 1333, 1349, 1353, 1354, 1356, 1379, 1390, 1414, 1424, 1441, 1462, 1463, 1470, 1475, 1480, 1489, 1500], "prof": 1367, "profil": [150, 493, 505, 506, 1337, 1345, 1354, 1363, 1388, 1442, 1445, 1471, 1474, 1490, 1492], "profile_dir": [150, 1381], "profile_spac": 150, "profileopt": [1013, 1015, 1496], "profiler_opt": [1013, 1015, 1496], "profilerserv": 1012, "program": [81, 82, 98, 119, 126, 179, 180, 198, 503, 505, 506, 1002, 1013, 1015, 1016, 1337, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1352, 1354, 1356, 1360, 1363, 1364, 1368, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1385, 1389, 1390, 1404, 1411, 1414, 1415, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1454, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1470, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1489, 1490, 1493, 1494, 1501, 1502, 1503], "program_id": [1483, 1484, 1485, 1487, 1488, 1490, 1492, 1494], "program_ids_kernel": 1485, "programm": [1344, 1445, 1451, 1470, 1475, 1477, 1493, 1502], "programmat": 1449, "programmazion": 1462, "progress": [1337, 1348, 1354, 1377, 1439, 1446, 1449, 1467, 1470, 1479, 1484, 1489, 1490], "prohibit": [1285, 1286, 1287], "project": [1118, 1345, 1352, 1354, 1357, 1359, 1366, 1378, 1384, 1390, 1416, 1444, 1445, 1446, 1448, 1460, 1469, 1495], "projector": 1496, "prologu": [1350, 1467, 1479, 1483, 1487, 1490], "promis": [10, 198, 289, 290, 293, 295, 381, 459, 460, 461, 462, 463, 464, 494, 864, 1283, 1331, 1342, 1354, 1371, 1424, 1442, 1445, 1446, 1451, 1467, 1474, 1479, 1484], "promise_in_bound": [10, 381, 459, 460, 461, 462, 463, 464, 864, 1424], "promot": [107, 288, 360, 378, 458, 488, 572, 573, 574, 575, 576, 577, 579, 627, 634, 639, 642, 643, 667, 675, 676, 678, 712, 738, 744, 745, 816, 821, 822, 823, 824, 845, 883, 886, 889, 894, 896, 897, 908, 913, 915, 933, 934, 936, 943, 945, 948, 952, 953, 993, 997, 1354, 1376, 1379, 1428, 1447, 1458, 1460, 1462, 1475, 1477, 1503], "promote_integ": [40, 54, 896, 948], "promote_typ": 1505, "prompt": [1360, 1363, 1496], "prone": [1351, 1380, 1386, 1455, 1456, 1475, 1479], "prop": [1342, 1463], "propag": [851, 852, 994, 1245, 1265, 1266, 1342, 1349, 1354, 1365, 1371, 1378, 1403, 1411, 1463, 1464, 1470, 1484, 1500, 1501], "propagate_user_shard": [1402, 1501], "proper": [253, 1390, 1462, 1471, 1478], "properli": [197, 777, 1354, 1366, 1449, 1455, 1462, 1480, 1484, 1490, 1502], "properti": [1, 2, 10, 13, 21, 24, 25, 27, 28, 29, 30, 32, 33, 37, 38, 43, 48, 49, 50, 62, 241, 441, 460, 461, 462, 463, 464, 675, 676, 776, 803, 821, 834, 864, 865, 929, 937, 957, 977, 978, 979, 1084, 1098, 1099, 1118, 1342, 1344, 1348, 1354, 1356, 1377, 1390, 1424, 1429, 1431, 1434, 1435, 1449, 1451, 1455, 1462, 1467, 1485, 1488, 1491, 1492, 1498, 1506], "proport": 1487, "propos": [1341, 1357, 1358, 1439, 1445, 1446, 1447, 1448, 1449, 1450, 1452, 1477], "propto": [1020, 1024, 1025, 1028, 1029, 1031, 1033, 1034, 1043, 1053, 1055, 1057, 1060], "prospect": 1451, "protect": 1370, "proto": 1381, "protobuf": 1381, "protocol": [586, 592, 668, 720, 1010, 1354, 1435, 1444, 1458, 1490, 1503], "prototyp": [673, 1354, 1444, 1445], "prove": 1374, "proven": [1448, 1480], "provid": [10, 67, 76, 83, 92, 98, 126, 143, 168, 283, 284, 296, 339, 356, 357, 360, 378, 415, 454, 458, 500, 501, 502, 504, 508, 562, 605, 610, 612, 674, 763, 767, 783, 841, 847, 864, 869, 872, 876, 888, 923, 946, 947, 956, 958, 961, 965, 984, 987, 991, 994, 998, 999, 1000, 1001, 1002, 1007, 1010, 1016, 1033, 1040, 1075, 1086, 1101, 1295, 1309, 1311, 1333, 1342, 1344, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1356, 1359, 1361, 1366, 1369, 1374, 1378, 1381, 1382, 1383, 1384, 1390, 1395, 1402, 1411, 1414, 1416, 1424, 1427, 1428, 1431, 1435, 1438, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1479, 1480, 1484, 1485, 1486, 1487, 1488, 1490, 1493, 1494, 1496, 1498, 1500, 1501, 1503, 1506, 1507], "proxi": [98, 1496], "prune": [81, 296, 1348, 1354, 1411], "pscatter": [1447, 1474], "psd": [1110, 1115], "psend": 432, "pseudo": [110, 807, 1032, 1037, 1342, 1356, 1431, 1462, 1475, 1498, 1502], "pseudocod": [1479, 1487], "pseudorandom": [1337, 1345, 1352, 1370, 1389, 1431, 1455, 1462, 1502, 1503], "psi": [358, 428, 1125, 1158], "pspec": [135, 136, 1440, 1445, 1464, 1474], "pspect": 136, "psum": [304, 436, 437, 1002, 1333, 1354, 1445, 1461, 1470, 1479, 1484, 1500], "psum2": 1447, "psum_idrev": [1445, 1447], "psum_invari": 1474, "psum_ref": 1474, "psum_scatt": [1445, 1447], "psum_scatter_ref": 1474, "pt": [1342, 1463], "pt_dot": [1342, 1463], "ptx": [1354, 1484], "ptx84": 1354, "ptxa": [1384, 1484], "pty": 1465, "pu": 1094, "public": [0, 1344, 1345, 1354, 1371, 1378, 1384, 1416, 1439, 1444, 1446, 1452, 1455, 1461], "publicli": [1354, 1357], "publish": [1354, 1384, 1457, 1489], "pull": [1341, 1342, 1354, 1366, 1385, 1395, 1444, 1455, 1458, 1461, 1462, 1467], "pullback": [1342, 1467], "punt": 1444, "pura": 1462, "pure": [10, 69, 82, 130, 296, 722, 724, 864, 1002, 1016, 1342, 1348, 1349, 1354, 1359, 1361, 1363, 1369, 1370, 1376, 1377, 1378, 1379, 1384, 1411, 1428, 1442, 1444, 1448, 1455, 1457, 1459, 1467, 1474, 1490, 1492, 1502, 1503], "pure1": 1346, "pure2": 1346, "pure_callback": [82, 130, 283, 1354, 1377, 1378], "pure_uses_internal_st": 1462, "purer": 1444, "puriti": [1346, 1361, 1376], "purpos": [67, 130, 455, 985, 1002, 1016, 1342, 1344, 1345, 1348, 1360, 1369, 1370, 1376, 1377, 1378, 1379, 1384, 1390, 1395, 1435, 1438, 1447, 1449, 1456, 1457, 1459, 1460, 1465, 1467, 1473, 1475, 1483, 1484, 1487, 1490, 1493, 1494, 1497, 1502, 1503], "pursu": 1342, "purview": 1470, "push": [902, 1002, 1023, 1026, 1342, 1348, 1357, 1366, 1462, 1467, 1483, 1487, 1490], "pushforward": [495, 1342, 1467], "pushfwd": [495, 1348], "put": [882, 900, 1342, 1348, 1349, 1366, 1377, 1411, 1415, 1442, 1444, 1445, 1452, 1456, 1467, 1470, 1475, 1484, 1492, 1496], "put_along_axi": 1354, "put_executable_and_tim": 1400, "pval": 1348, "pvals_in": 1348, "pvals_out": 1348, "pvari": 1474, "pwd": [1366, 1387], "pxla": [1354, 1385, 1440, 1446], "pxx": [1110, 1115], "pxy": 1110, "py": [927, 975, 1342, 1346, 1348, 1354, 1356, 1357, 1359, 1364, 1366, 1371, 1374, 1377, 1378, 1381, 1382, 1387, 1390, 1396, 1444, 1449, 1454, 1455, 1457, 1459, 1460, 1461, 1462, 1465, 1467, 1475, 1497, 1499, 1507], "py_val": 1462, "pybind11": [1378, 1444], "pybuff": [586, 592, 721], "pyc": 1462, "pycapsul": [286, 287, 1334, 1378], "pyfunc": 991, "pygment": 1366, "pyi": [1354, 1444, 1452], "pylanc": 1444, "pylint": 1390, "pymc": [1353, 1383], "pypi": [1354, 1366, 1384], "pyplot": [1342, 1456, 1463, 1469, 1475, 1476, 1502], "pyright": 1444, "pytensor": 1353, "pytest": [1357, 1371], "python": [10, 31, 65, 66, 67, 69, 75, 77, 80, 82, 84, 94, 95, 112, 113, 119, 130, 268, 289, 290, 296, 297, 303, 304, 311, 315, 316, 339, 362, 364, 378, 415, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 458, 473, 483, 488, 494, 495, 503, 505, 506, 572, 586, 592, 620, 672, 715, 721, 750, 864, 871, 873, 921, 922, 923, 927, 975, 981, 991, 995, 1002, 1010, 1013, 1015, 1016, 1116, 1117, 1118, 1148, 1284, 1307, 1308, 1310, 1312, 1331, 1332, 1333, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1354, 1355, 1356, 1357, 1361, 1362, 1363, 1364, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1381, 1383, 1384, 1385, 1387, 1390, 1398, 1403, 1411, 1424, 1425, 1435, 1438, 1439, 1441, 1442, 1444, 1445, 1446, 1448, 1451, 1453, 1454, 1455, 1457, 1459, 1460, 1461, 1462, 1466, 1467, 1470, 1472, 1475, 1477, 1478, 1480, 1484, 1492, 1495, 1496, 1497, 1498, 1500, 1501, 1503, 1504, 1506, 1507], "python3": [1366, 1378, 1387, 1390, 1461, 1465, 1507], "python_check_positive_even": 1359, "python_init_repositori": 1366, "python_tracer_level": 1496, "python_vers": 1366, "pythonpath": 1387, "pytorch": [1342, 1343, 1354, 1359, 1371, 1449, 1463, 1480, 1494, 1503, 1505], "pytre": [64, 69, 71, 73, 80, 81, 83, 94, 113, 126, 127, 130, 134, 135, 136, 137, 178, 197, 198, 248, 252, 253, 254, 288, 290, 296, 303, 304, 339, 415, 422, 424, 425, 426, 427, 431, 433, 434, 435, 437, 458, 481, 488, 489, 494, 503, 723, 1016, 1283, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1304, 1307, 1308, 1309, 1310, 1311, 1312, 1328, 1332, 1333, 1337, 1350, 1352, 1354, 1363, 1374, 1378, 1379, 1389, 1396, 1411, 1415, 1416, 1434, 1438, 1445, 1449, 1453, 1457, 1474, 1475, 1478, 1487, 1493, 1494], "pytree_arg": 1348, "pytree_to_transpos": [1300, 1324, 1506], "pytreedef": [114, 1291, 1292, 1299, 1300, 1301, 1307, 1315, 1316, 1323, 1324, 1325, 1326, 1327, 1328, 1348, 1354, 1415, 1435, 1460, 1497], "pytyp": [1354, 1454], "pytype_aval_map": 1354, "pyvista": 1387, "pzero": 1354, "q": [404, 405, 491, 508, 781, 808, 857, 859, 879, 901, 1087, 1095, 1147, 1159, 1165, 1169, 1181, 1186, 1201, 1253, 1258, 1278, 1342, 1348, 1363, 1382, 1387, 1441, 1445, 1461, 1462, 1463, 1468], "q1": 1354, "q_wi": 1445, "q_wi_per_head": 1445, "qdwh": [1094, 1354], "qk": 508, "qkv": [1445, 1503], "qkv_shape": 1503, "qquad": [1342, 1463, 1467], "qr": [240, 403, 809, 1094, 1118, 1354], "qrresult": 808, "quad": 1448, "quadrant": [313, 578], "quadrat": [1349, 1487, 1492], "quadrupl": 1490, "qualiti": [1357, 1366, 1431, 1489], "qualnam": [152, 153, 394, 1423, 1424], "quantifi": [1348, 1448], "quantil": [857, 859, 879, 1227, 1234, 1354], "quantiti": [670, 1342, 1370, 1456, 1463, 1474, 1487], "quantiz": [511, 543], "quarter": [1369, 1484], "quartil": [857, 859, 879, 901], "quasi": [1096, 1097, 1476], "quasidynamicdata": 262, "quat": 1119, "queri": [508, 923, 924, 1344, 1435, 1461, 1470, 1483, 1487, 1494, 1500, 1503], "query_point": 1076, "query_seq_length": 508, "queryabl": [1470, 1500], "question": [1003, 1352, 1357, 1369, 1444, 1448, 1456, 1480, 1487], "queue": [1483, 1484, 1503], "quick": [1349, 1387, 1443, 1454, 1462, 1475, 1492, 1494], "quickli": [1377, 1378, 1456, 1475, 1488], "quickstart": [178, 1352, 1465, 1473, 1485, 1486, 1487], "quiet_remove_fram": 1356, "quit": [1342, 1350, 1353, 1357, 1444, 1445, 1450, 1467, 1474, 1476, 1484, 1489, 1496], "quo": 1452, "quotient": [359, 663, 715, 718, 845, 884, 886, 889, 890, 909, 967], "qy": [305, 306], "qy_siz": 305, "r": [76, 82, 84, 239, 311, 396, 404, 619, 808, 902, 1095, 1102, 1119, 1342, 1346, 1348, 1354, 1357, 1359, 1366, 1371, 1382, 1390, 1441, 1451, 1460, 1462, 1463, 1464, 1467, 1468, 1476, 1479, 1492], "r1": 1447, "r2": [1119, 1447], "r3": [1119, 1342, 1467], "r_": [619, 640, 1102], "r_0": 1102, "r_matrix": 396, "r_n": 1148, "r_t": 1342, "race": [160, 1356, 1475, 1483, 1484, 1487, 1488, 1489], "rad2deg": [652, 653, 985], "radian": [567, 573, 575, 577, 578, 642, 652, 903, 933, 952], "radiu": [291, 292, 1423], "rag": [131, 1474], "ragged_dot": 1356, "ragged_dot_general_p": 1356, "rais": [11, 13, 75, 98, 100, 112, 113, 119, 120, 131, 132, 223, 239, 283, 296, 328, 397, 501, 557, 625, 712, 720, 801, 849, 850, 865, 883, 894, 906, 929, 937, 943, 944, 997, 1002, 1013, 1014, 1015, 1016, 1148, 1152, 1153, 1155, 1156, 1161, 1285, 1286, 1287, 1307, 1342, 1344, 1345, 1348, 1349, 1354, 1359, 1360, 1361, 1362, 1363, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1411, 1424, 1428, 1439, 1444, 1445, 1449, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1470, 1474, 1484, 1499, 1504, 1506], "raise_concretization_error": 1454, "raise_if_neg": 1376, "raise_to_shap": [1348, 1354], "raise_to_shaped_map": 1354, "raise_via_callback": 1376, "ram": 1488, "ramif": 1489, "ramp": 877, "ran": [1376, 1462, 1465, 1473, 1479, 1495], "rand": [305, 306, 1451, 1461, 1475, 1476, 1498], "rand_uniform": 1354, "randint": [112, 671, 1354], "randint_via_uniform": 1052, "randn": [1402, 1451, 1475, 1476], "random": [106, 110, 112, 241, 296, 305, 306, 311, 454, 455, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 543, 544, 623, 640, 645, 671, 702, 714, 720, 742, 804, 814, 815, 968, 985, 1071, 1072, 1073, 1074, 1085, 1216, 1342, 1347, 1350, 1354, 1367, 1369, 1370, 1376, 1381, 1388, 1402, 1404, 1416, 1427, 1440, 1444, 1451, 1454, 1455, 1461, 1464, 1465, 1466, 1467, 1469, 1473, 1474, 1475, 1476, 1483, 1487, 1488, 1490, 1492, 1493, 1494, 1496, 1500, 1502, 1503, 1506], "random_bit": [276, 277, 281, 282], "random_flattened_imag": [1465, 1473], "random_kei": 1381, "random_layer_param": [1465, 1473], "random_se": [277, 281, 282], "random_st": 1414, "random_unwrap": 1446, "random_wrap": 1446, "randomalgorithm": [454, 1424], "randomgamma": 1354, "randomli": [1049, 1216, 1285, 1286, 1287, 1465, 1473], "randomst": 1451, "rang": [10, 12, 41, 98, 296, 364, 365, 378, 398, 406, 455, 466, 494, 529, 530, 536, 538, 540, 549, 572, 573, 574, 575, 576, 577, 579, 586, 592, 614, 626, 640, 739, 740, 741, 742, 752, 811, 864, 880, 881, 898, 906, 934, 957, 998, 999, 1000, 1001, 1049, 1052, 1058, 1083, 1149, 1151, 1160, 1284, 1333, 1348, 1349, 1351, 1354, 1357, 1359, 1364, 1367, 1369, 1371, 1374, 1377, 1378, 1381, 1396, 1402, 1424, 1431, 1441, 1443, 1448, 1451, 1456, 1461, 1462, 1464, 1465, 1469, 1471, 1473, 1474, 1475, 1476, 1480, 1484, 1485, 1487, 1490, 1492, 1494, 1498, 1502, 1503], "range_select": 398, "rangl": 554, "rank": [205, 301, 329, 341, 343, 344, 345, 346, 347, 359, 362, 378, 387, 396, 403, 404, 416, 417, 418, 436, 458, 482, 488, 627, 667, 744, 798, 802, 807, 887, 918, 997, 1095, 1248, 1249, 1265, 1354, 1374, 1377, 1378, 1402, 1411, 1434, 1447, 1455, 1470, 1477, 1484, 1485, 1489, 1495], "rankdata": [1354, 1448], "rankedtensortyp": [1348, 1390], "rare": [424, 1345, 1354, 1359, 1371, 1444, 1490, 1501], "rate": [1033, 1050, 1116, 1117, 1118, 1396, 1397, 1448, 1451, 1487, 1492, 1503, 1506], "rather": [10, 67, 69, 106, 198, 284, 346, 356, 361, 402, 570, 582, 664, 677, 700, 750, 753, 766, 775, 776, 834, 846, 864, 878, 879, 882, 899, 900, 905, 910, 911, 917, 921, 944, 949, 957, 969, 991, 1002, 1003, 1063, 1103, 1116, 1117, 1283, 1342, 1348, 1349, 1354, 1356, 1359, 1360, 1361, 1369, 1371, 1382, 1428, 1438, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1453, 1454, 1455, 1456, 1457, 1460, 1461, 1463, 1467, 1468, 1470, 1472, 1474, 1475, 1478, 1479, 1483, 1490, 1493, 1497, 1498, 1505], "ratio": [789, 798, 1487, 1492], "ration": 1156, "rational": 1354, "ravel": [26, 288, 335, 703, 906, 911, 944, 950, 1354, 1449, 1465, 1469], "ravel_multi_index": [982, 1354], "ravel_pytre": 1354, "raw": [808, 1354, 1356, 1369, 1371, 1440, 1445, 1455, 1465, 1498], "raw_kei": 1455, "rb": 922, "rbac": 1461, "rbg": [277, 1354, 1356, 1431, 1455], "rbg_kei": 1354, "rc": 1384, "rceil": 332, "rclass": 902, "rcond": [798, 807, 887, 1354], "rdma": 1491, "re": [67, 69, 72, 79, 80, 119, 120, 424, 439, 495, 582, 878, 1136, 1341, 1342, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1359, 1362, 1363, 1366, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1390, 1402, 1411, 1415, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1459, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1470, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1494, 1496, 1497, 1498, 1500, 1501, 1502, 1503], "reach": [1104, 1116, 1117, 1118, 1354, 1376, 1378, 1381, 1384, 1443, 1450, 1490, 1492, 1494], "read": [150, 160, 161, 172, 173, 360, 616, 617, 618, 721, 726, 1067, 1341, 1342, 1346, 1347, 1348, 1349, 1354, 1356, 1360, 1366, 1370, 1376, 1377, 1381, 1389, 1445, 1456, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1474, 1475, 1476, 1479, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1495, 1500, 1503, 1507], "read_cotang": 1348, "read_prim": 1348, "readabl": [1356, 1435, 1479], "reader": [1378, 1490, 1492, 1502, 1506], "readi": [64, 1347, 1352, 1354, 1357, 1366, 1387, 1435, 1442, 1444, 1456, 1461, 1479, 1484, 1490, 1503], "readili": [83, 1456], "readm": [245, 1354, 1356, 1366, 1449, 1466], "real": [112, 336, 340, 386, 395, 398, 408, 416, 417, 475, 494, 526, 530, 531, 557, 573, 574, 575, 579, 636, 641, 645, 681, 687, 692, 693, 694, 695, 696, 697, 699, 701, 719, 749, 767, 774, 783, 788, 794, 796, 811, 866, 883, 892, 930, 939, 940, 942, 1078, 1079, 1080, 1083, 1086, 1096, 1097, 1101, 1105, 1110, 1114, 1115, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1150, 1154, 1157, 1158, 1159, 1161, 1163, 1164, 1165, 1209, 1342, 1348, 1354, 1371, 1377, 1381, 1387, 1424, 1444, 1456, 1461, 1463, 1464, 1467, 1470, 1484, 1488, 1492, 1503], "realarrai": [1019, 1020, 1021, 1023, 1025, 1026, 1028, 1029, 1031, 1033, 1035, 1040, 1042, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1057, 1058, 1059, 1060], "realist": [1447, 1487], "realiti": 1484, "realiz": [1448, 1479, 1484, 1494, 1503], "realli": [360, 1346, 1348, 1349, 1354, 1377, 1387, 1442, 1447, 1448, 1449, 1455, 1459, 1474, 1475, 1479, 1488, 1492], "realnumer": [519, 526, 528, 529, 530, 531], "realpath": 1366, "reap": 1480, "rearrang": [1342, 1369, 1377, 1381, 1402, 1456, 1463, 1484, 1489, 1492], "reason": [112, 285, 306, 776, 802, 922, 923, 1103, 1342, 1346, 1348, 1349, 1354, 1365, 1368, 1369, 1370, 1371, 1374, 1377, 1428, 1431, 1440, 1441, 1444, 1445, 1447, 1448, 1449, 1454, 1455, 1456, 1457, 1460, 1462, 1463, 1470, 1474, 1480, 1484, 1487, 1488, 1489, 1490, 1492, 1494, 1497, 1502, 1503], "reassign": 1495, "rebas": 1357, "rebind": 1462, "reboot": 1496, "rebound": 1462, "rebuild": [1118, 1366, 1371, 1387, 1457], "rebuilt": 1384, "recal": [305, 306, 1342, 1360, 1382, 1445, 1456, 1460, 1461, 1467, 1468, 1474, 1483, 1500, 1503], "recall_target": [305, 306], "recap": 1484, "receiv": [166, 168, 178, 1354, 1369, 1378, 1444, 1464, 1474, 1479, 1480, 1484, 1485, 1489, 1490], "receive_scratch": 1490, "receiving_slot": 1490, "recent": [118, 119, 120, 328, 617, 638, 654, 868, 884, 890, 927, 944, 975, 976, 991, 1308, 1344, 1349, 1354, 1356, 1359, 1366, 1370, 1371, 1374, 1377, 1381, 1390, 1404, 1444, 1448, 1455, 1460, 1462, 1484, 1486, 1505], "recept": [344, 345, 531], "recip": [1346, 1348, 1447, 1497, 1498, 1503, 1506], "recipe_to_eqn": 1348, "recipor": [331, 457, 478], "reciproc": 457, "recogn": [337, 1307, 1308, 1354, 1366, 1377, 1414, 1444, 1456, 1475, 1497], "recogniz": 1450, "recommend": [65, 66, 337, 360, 1017, 1292, 1294, 1345, 1354, 1356, 1357, 1365, 1366, 1367, 1376, 1377, 1380, 1381, 1384, 1414, 1431, 1439, 1444, 1448, 1450, 1455, 1462, 1469, 1483, 1484, 1489, 1490, 1495, 1496], "recommonmark": 1366, "recompil": [296, 1002, 1354, 1356, 1359, 1381, 1387, 1400, 1411, 1459, 1495], "recomput": [67, 1382, 1443, 1468, 1471], "reconcil": 1484, "reconfigur": [223, 1489], "reconstruct": [578, 682, 683, 685, 687, 719, 783, 788, 808, 811, 815, 976, 1073, 1074, 1080, 1087, 1090, 1094, 1095, 1096, 1097, 1101, 1113, 1301, 1370, 1459, 1497, 1506], "record": [80, 148, 1369, 1459, 1466, 1475], "record_writ": 1503, "recordwrit": 1503, "recours": 1446, "recov": [578, 686, 691, 906, 985, 1016, 1038, 1354, 1455, 1484], "rectangular": [407, 680, 1076], "rectifi": [533, 541, 542], "recurr": 1376, "recurs": [67, 311, 660, 1100, 1308, 1348, 1349, 1438, 1449, 1488, 1497, 1506], "recursive_checkpoint": [67, 1382, 1468], "recv": [432, 1381, 1479, 1490], "recv_fwd": 1381, "recv_sem": [1479, 1490], "recycl": [296, 1002, 1411], "red": [1464, 1502], "redefin": 1459, "redeploi": 1371, "redesign": 1484, "redirect": 1496, "redistribut": [1357, 1366, 1384, 1474], "redo": 1348, "reduc": [67, 240, 296, 399, 404, 406, 409, 415, 425, 426, 427, 435, 436, 442, 443, 444, 445, 449, 450, 458, 488, 504, 537, 538, 563, 568, 602, 644, 701, 725, 798, 800, 804, 805, 808, 818, 836, 838, 839, 842, 853, 854, 855, 856, 858, 860, 861, 862, 896, 898, 946, 948, 969, 987, 998, 999, 1000, 1002, 1052, 1151, 1245, 1266, 1289, 1295, 1298, 1321, 1353, 1354, 1371, 1377, 1378, 1381, 1382, 1411, 1434, 1443, 1447, 1449, 1451, 1454, 1459, 1460, 1468, 1471, 1478, 1483, 1484, 1487, 1492, 1493, 1494, 1503], "reduce_and": [443, 444, 445, 447, 448, 450, 1354], "reduce_associ": [1297, 1322, 1354], "reduce_ax": [289, 494, 1331, 1332, 1445], "reduce_max": [416, 442, 444, 445, 447, 448, 450, 1354], "reduce_min": [417, 442, 443, 445, 447, 448, 450, 1354], "reduce_or": [442, 443, 444, 447, 448, 450, 1354], "reduce_precis": 1382, "reduce_prod": [442, 443, 444, 445, 448, 450, 1354, 1454, 1460], "reduce_scatt": [1474, 1490], "reduce_scatter_kernel": 1490, "reduce_sum": [442, 443, 444, 445, 447, 450, 1348, 1354, 1441, 1462], "reduce_sum_abstract_ev": 1348, "reduce_sum_batching_rul": 1348, "reduce_sum_jvp": 1348, "reduce_sum_p": [1348, 1414], "reduce_sum_transl": 1348, "reduce_sum_transpose_rul": 1348, "reduce_xor": [442, 443, 444, 445, 447, 448, 1354], "reduceat": [969, 1354], "reduceop": 1348, "reduceprecis": 446, "reducer_region": 1348, "reducescatt": [1381, 1445, 1503], "reducescattersum": [1447, 1474], "reducewindow": [1354, 1356], "reducewindowwithgeneralpad": 449, "reduct": [3, 4, 19, 20, 34, 35, 36, 40, 41, 52, 53, 54, 60, 111, 167, 305, 306, 378, 435, 442, 443, 444, 445, 447, 448, 449, 450, 537, 538, 571, 670, 805, 838, 887, 951, 969, 1151, 1297, 1298, 1342, 1354, 1381, 1414, 1460, 1471, 1474, 1483, 1492, 1493], "reduction_dim": [305, 306], "reduction_dimens": [305, 306], "reduction_input_size_overrid": [305, 306], "reduction_op": 167, "reduction_s": 1487, "reductionop": 167, "redund": [1356, 1382, 1468, 1503], "reexpress": 1370, "ref": [145, 148, 155, 157, 161, 166, 168, 178, 182, 185, 186, 187, 188, 189, 190, 191, 192, 1346, 1348, 1354, 1388, 1479, 1483, 1484, 1487, 1488, 1490, 1492, 1494, 1503], "ref_get": 1064, "ref_impl": 1494, "ref_set": 1064, "ref_swap": 1069, "refactor": [1354, 1357, 1444, 1448, 1455], "refer": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 69, 148, 150, 160, 161, 166, 167, 168, 174, 180, 198, 237, 296, 303, 481, 534, 590, 637, 641, 666, 668, 701, 703, 743, 864, 899, 913, 959, 960, 961, 962, 964, 965, 966, 992, 994, 1002, 1018, 1023, 1047, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1100, 1106, 1107, 1108, 1109, 1141, 1306, 1337, 1342, 1346, 1348, 1354, 1356, 1360, 1363, 1366, 1368, 1369, 1370, 1371, 1376, 1377, 1378, 1379, 1381, 1382, 1384, 1385, 1390, 1411, 1428, 1438, 1441, 1447, 1449, 1456, 1458, 1461, 1464, 1466, 1468, 1471, 1474, 1475, 1478, 1483, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1497, 1498, 1501, 1503, 1506, 1507], "referenc": [296, 877, 994, 1098, 1354, 1371, 1490], "referencetyp": 1348, "referenti": 1497, "refin": [1348, 1359, 1371, 1374, 1415], "refine_polymorphic_shap": 1374, "reflect": [536, 549, 604, 670, 877, 1103, 1149, 1160, 1344, 1376, 1384, 1390, 1431, 1435, 1441, 1446, 1447, 1450, 1458, 1464, 1484, 1500], "reflect_typ": 877, "reflector": [399, 400, 409], "reformat": 1484, "refrain": 1371, "refresh": [1382, 1496], "regard": [61, 1357, 1371, 1446, 1448, 1450, 1452, 1477, 1490], "regardless": [502, 918, 994, 1348, 1354, 1356, 1366, 1376, 1504], "regex": 1402, "regim": [1348, 1487], "region": [150, 160, 172, 508, 1484, 1489, 1495], "regist": [81, 171, 252, 253, 283, 285, 286, 287, 1292, 1294, 1307, 1308, 1309, 1310, 1311, 1312, 1334, 1348, 1354, 1377, 1390, 1416, 1438, 1444, 1446, 1452, 1466, 1467, 1478, 1480, 1483, 1484, 1487, 1488, 1489, 1493, 1497, 1506], "register_backend_cach": 1354, "register_collective_primit": 1354, "register_custom_call_target": [285, 286, 1354, 1378], "register_dataclass": [1308, 1309, 1311, 1354, 1506], "register_dialect": 1348, "register_ffi_target": [283, 1378], "register_ffi_type_id": 1354, "register_keypath": 1354, "register_low": [1354, 1371, 1390, 1446], "register_pytree_nod": [252, 253, 1309, 1310, 1311, 1348, 1377, 1497, 1506], "register_pytree_node_class": [1308, 1311, 1497], "register_pytree_with_kei": [1292, 1294, 1296, 1308, 1309, 1311, 1354], "register_pytree_with_keys_class": [1307, 1308, 1309, 1310], "register_stat": [1308, 1309, 1311, 1503], "register_transl": 1354, "registeredspeci": [1497, 1506], "registeredspecial2": 1497, "registr": [252, 253, 1307, 1366, 1378, 1444, 1452, 1497, 1506], "registri": [1307, 1309, 1311, 1312, 1354, 1384, 1438, 1461, 1466, 1497, 1506], "regress": [150, 1354, 1358, 1448, 1462, 1467, 1489], "regular": [320, 344, 384, 385, 539, 958, 1075, 1076, 1123, 1137, 1138, 1359, 1361, 1366, 1370, 1371, 1374, 1377, 1385, 1453, 1459, 1471, 1479, 1480, 1484, 1489, 1499], "regulargridinterpol": 1448, "regularli": [1366, 1446], "rehydr": [248, 1371], "rehydrated_exp": 1371, "rehydrated_f": 1371, "reimplement": [1354, 1378, 1390], "reinforc": [1342, 1506], "reiniti": 1354, "reinstal": [1366, 1496], "reinterpret_cast": 1378, "reintroduc": 1446, "reinvent": [1349, 1465, 1473], "reject": 1448, "rel": [362, 363, 364, 365, 366, 367, 564, 645, 764, 887, 1159, 1285, 1286, 1287, 1363, 1369, 1376, 1377, 1414, 1431, 1447, 1448, 1456, 1458, 1484, 1492, 1494], "rel_entr": [1126, 1147], "relaid": 1472, "relat": [148, 381, 459, 460, 461, 462, 463, 464, 1136, 1335, 1336, 1338, 1339, 1342, 1352, 1354, 1377, 1379, 1381, 1384, 1441, 1442, 1446, 1448, 1452, 1455, 1458, 1463, 1474, 1484, 1489, 1495, 1498, 1506, 1507], "relatedli": [1344, 1428], "relationship": [1348, 1376, 1501], "relax": [170, 1354, 1359, 1364, 1384, 1443, 1456, 1478, 1484, 1490], "relayout": 1492, "releas": [61, 543, 1342, 1345, 1354, 1365, 1366, 1371, 1376, 1378, 1381, 1384, 1387, 1416, 1439, 1444, 1446, 1450, 1467, 1477, 1479, 1490], "relev": [1354, 1359, 1371, 1377, 1378, 1381, 1411, 1443, 1444, 1448, 1477, 1483, 1484, 1495, 1503, 1507], "reli": [239, 380, 1349, 1354, 1356, 1361, 1366, 1374, 1377, 1382, 1403, 1411, 1444, 1446, 1447, 1449, 1452, 1454, 1455, 1459, 1460, 1468, 1484, 1503], "reliabl": [1344, 1435, 1480, 1484], "reload": 1484, "reloc": [1354, 1446], "relu": [506, 533, 542, 1363, 1377, 1461, 1465, 1473, 1474, 1488, 1489, 1492, 1506], "relu6": [513, 541], "rem": [1462, 1479, 1484, 1490], "remain": [98, 126, 128, 129, 475, 551, 658, 671, 762, 817, 910, 927, 928, 975, 976, 977, 978, 979, 980, 989, 1002, 1266, 1342, 1344, 1345, 1348, 1354, 1361, 1363, 1377, 1435, 1449, 1451, 1455, 1456, 1461, 1463, 1471, 1479, 1483, 1484, 1489, 1492, 1496], "remaind": [415, 451, 663, 718, 844, 845, 884, 886, 889, 890, 1371, 1374], "remat": [67, 80, 1343, 1346, 1354, 1371, 1380, 1458, 1471, 1474], "remat2": [1382, 1468], "remat_cal": 1354, "remat_lay": 1471, "remateri": [67, 422, 1346, 1356, 1380, 1382, 1468, 1471, 1474], "rememb": [750, 921, 1359, 1366, 1377, 1390, 1441, 1444, 1492], "remind": [700, 882, 899, 900], "reminisc": 1456, "remot": [1354, 1356, 1357, 1366, 1387, 1479, 1491, 1495], "remote_copi": 1490, "remote_copy_op": 1490, "remote_recv_sem": 1490, "remote_send_sem": 1490, "remov": [52, 97, 118, 126, 304, 436, 442, 443, 444, 445, 447, 448, 450, 452, 455, 543, 670, 677, 886, 889, 911, 944, 1016, 1110, 1111, 1114, 1115, 1345, 1348, 1354, 1366, 1368, 1371, 1376, 1377, 1380, 1384, 1429, 1444, 1446, 1448, 1452, 1454, 1455, 1457, 1462, 1478, 1479, 1480, 1489, 1496, 1501], "remove_dupl": 1348, "remove_fram": [1354, 1356], "renam": [1354, 1371, 1455, 1465, 1478], "render": [1356, 1379], "reopen": [922, 923], "reorder": [82, 240, 670, 815, 1016, 1363, 1442, 1443, 1454, 1480, 1484, 1498], "rep": [955, 1444], "rep149": 239, "repartit": 1402, "repeat": [398, 544, 571, 700, 801, 877, 882, 912, 955, 991, 998, 999, 1000, 1001, 1354, 1369, 1371, 1377, 1378, 1403, 1454, 1470, 1474, 1498, 1502], "repeatedli": [488, 570, 571, 701, 1382, 1495], "repetit": [389, 955], "repl": 1462, "replac": [126, 127, 254, 257, 290, 337, 407, 459, 461, 501, 805, 848, 851, 852, 911, 1023, 1026, 1344, 1348, 1349, 1354, 1369, 1370, 1374, 1377, 1380, 1411, 1444, 1445, 1446, 1448, 1449, 1454, 1455, 1461, 1462, 1475, 1489, 1490, 1496, 1501, 1503], "replai": 1366, "replic": [29, 30, 136, 137, 198, 489, 501, 798, 1002, 1110, 1283, 1354, 1359, 1378, 1381, 1402, 1411, 1434, 1440, 1445, 1446, 1461, 1462, 1464, 1470, 1472, 1474, 1490, 1495, 1500, 1503], "replica": [131, 132, 303, 304, 425, 426, 427, 435, 437, 493, 501, 1002, 1348, 1369, 1431, 1445, 1451, 1461], "replica_devic": 1369, "replica_group": 1378, "replica_id": 1415, "replicaid": [1447, 1474], "replicate_sharding_on_last_dim": 1378, "replicated_arrai": [1470, 1500], "replicated_shard": 1464, "replicatedjob": 1461, "repo": [1357, 1366], "repo_env": 1366, "report": [239, 311, 1116, 1117, 1118, 1370, 1384, 1444, 1454, 1461, 1462, 1475, 1489], "repositori": [1357, 1378, 1384, 1457], "repr": [1347, 1348, 1354, 1364, 1452, 1506], "repres": [62, 63, 75, 77, 80, 93, 94, 95, 96, 97, 100, 119, 120, 157, 198, 201, 203, 223, 229, 230, 233, 234, 239, 240, 250, 251, 267, 283, 288, 290, 291, 296, 303, 315, 316, 328, 341, 342, 343, 344, 345, 347, 348, 378, 401, 425, 426, 427, 431, 432, 433, 435, 436, 458, 488, 498, 501, 503, 508, 529, 554, 578, 589, 591, 628, 629, 640, 645, 671, 672, 708, 709, 710, 720, 721, 742, 755, 756, 757, 758, 776, 777, 781, 788, 798, 804, 834, 873, 877, 885, 913, 918, 929, 930, 971, 972, 973, 974, 991, 995, 998, 999, 1000, 1001, 1002, 1005, 1006, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1046, 1048, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1065, 1070, 1078, 1079, 1080, 1086, 1092, 1110, 1114, 1115, 1116, 1117, 1118, 1134, 1283, 1284, 1291, 1292, 1299, 1300, 1307, 1326, 1327, 1328, 1332, 1342, 1346, 1348, 1349, 1350, 1359, 1361, 1369, 1370, 1374, 1379, 1385, 1396, 1397, 1403, 1411, 1424, 1431, 1435, 1440, 1441, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1471, 1474, 1475, 1479, 1480, 1484, 1485, 1487, 1488, 1490, 1491, 1500, 1502, 1506], "represent": [100, 199, 211, 223, 226, 228, 232, 255, 283, 401, 409, 420, 421, 503, 505, 506, 589, 591, 606, 701, 752, 763, 776, 808, 848, 867, 876, 931, 940, 981, 985, 1306, 1344, 1348, 1349, 1354, 1363, 1364, 1370, 1374, 1377, 1379, 1414, 1415, 1428, 1431, 1435, 1439, 1440, 1441, 1442, 1449, 1455, 1456, 1460, 1462, 1466, 1470, 1480, 1484, 1494, 1495, 1500, 1505], "reproduc": [1354, 1366, 1371, 1378, 1387, 1431, 1451, 1454, 1475, 1498, 1501], "reproduce_failur": 1366, "request": [18, 100, 283, 331, 349, 363, 372, 373, 375, 411, 412, 457, 471, 478, 484, 485, 848, 1026, 1052, 1341, 1354, 1364, 1366, 1384, 1395, 1442, 1444, 1449, 1452, 1455, 1458, 1462, 1472, 1489, 1492, 1500], "requir": [18, 67, 82, 84, 98, 100, 126, 131, 132, 136, 166, 170, 178, 252, 253, 283, 356, 361, 454, 455, 458, 488, 494, 501, 582, 632, 654, 670, 679, 720, 804, 820, 878, 881, 922, 923, 991, 998, 999, 1000, 1001, 1002, 1084, 1105, 1140, 1308, 1310, 1311, 1341, 1342, 1344, 1348, 1349, 1354, 1357, 1359, 1361, 1365, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1404, 1411, 1424, 1428, 1431, 1435, 1440, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1484, 1486, 1487, 1488, 1489, 1490, 1493, 1496, 1498, 1499, 1500, 1502, 1503, 1505, 1506], "requirement_lock": 1366, "requirements_lock": [1354, 1366], "requirements_lock_": 1366, "requirements_lock_3_11": 1366, "requirements_lock_3_12": 1366, "requirements_lock_3_13": 1366, "requirements_nightli": 1366, "requirements_upd": [1354, 1366], "requisit": 1356, "reraise_with_filtered_traceback": 1390, "rerun": [1381, 1384], "res1": [1348, 1371], "res2": [1348, 1371], "res_": 1348, "res_norm_bwd": 1378, "res_norm_fwd": 1378, "res_trac": 1348, "resampl": [291, 292, 1423], "rescal": [536, 549, 1149, 1160, 1447], "research": [1341, 1364, 1366, 1383, 1384, 1449, 1475, 1480], "resembl": [1348, 1447, 1456, 1480], "reserv": [1345, 1371, 1479, 1490], "reset": 1502, "reset_cach": 1400, "reset_trace_st": 1354, "reshap": [136, 216, 217, 219, 242, 303, 362, 363, 364, 387, 435, 436, 473, 474, 500, 501, 502, 544, 570, 614, 619, 627, 666, 667, 670, 705, 728, 744, 792, 813, 816, 882, 905, 912, 916, 944, 954, 956, 982, 993, 1002, 1103, 1333, 1344, 1346, 1348, 1354, 1369, 1371, 1374, 1378, 1381, 1382, 1402, 1414, 1428, 1434, 1440, 1445, 1454, 1460, 1461, 1464, 1465, 1470, 1471, 1473, 1474, 1484, 1490, 1494, 1499, 1500, 1503], "reshape_p": 1414, "reshard": [1354, 1371, 1378, 1464, 1470], "resid": [95, 798, 887, 1377, 1472, 1484, 1489, 1490, 1493], "residu": [67, 80, 239, 798, 887, 1116, 1117, 1118, 1342, 1348, 1378, 1382, 1449, 1453, 1463, 1468], "residual_batch": 1445, "residual_emb": 1445, "residual_tim": 1445, "resiz": [292, 877, 1354, 1369, 1423], "resizemethod": [291, 292, 1423], "resnet": 1354, "resolut": [701, 1036, 1366, 1501], "resolv": [424, 1354, 1374, 1377, 1402, 1444, 1449, 1501], "resort": 1378, "resourc": [1352, 1354, 1358, 1411, 1434, 1445, 1448, 1461, 1471, 1484, 1503], "respect": [81, 238, 240, 244, 289, 290, 293, 295, 311, 313, 336, 337, 343, 344, 357, 397, 501, 664, 902, 1094, 1095, 1153, 1162, 1331, 1342, 1344, 1348, 1349, 1354, 1363, 1366, 1369, 1370, 1371, 1376, 1380, 1390, 1424, 1440, 1441, 1445, 1447, 1453, 1456, 1463, 1464, 1465, 1473, 1474, 1475, 1478, 1479, 1484, 1485, 1487, 1489, 1493, 1503, 1505], "respond": 1448, "respons": [248, 1367, 1369, 1371, 1377, 1378, 1440, 1454, 1457, 1470, 1474, 1479, 1487, 1500, 1501, 1503], "rest": [127, 248, 1295, 1296, 1319, 1320, 1348, 1349, 1366, 1374, 1390, 1441, 1447, 1461, 1470, 1480, 1497, 1506], "rest1": 1348, "rest2": 1348, "restart": [1118, 1400, 1461, 1490, 1495], "restartpolici": 1461, "restor": [820, 1354, 1456, 1505], "restrict": [98, 143, 887, 1344, 1356, 1366, 1374, 1376, 1378, 1384, 1444, 1456, 1462, 1478, 1480, 1484, 1485, 1488, 1491, 1495], "restructur": 1444, "result": [10, 13, 61, 95, 100, 128, 129, 130, 136, 145, 157, 160, 180, 194, 207, 208, 213, 214, 215, 216, 223, 224, 239, 248, 253, 284, 296, 303, 304, 305, 306, 311, 326, 327, 328, 336, 341, 343, 344, 345, 346, 347, 356, 357, 362, 363, 364, 365, 366, 367, 379, 380, 403, 415, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 441, 451, 452, 455, 461, 465, 494, 536, 538, 543, 549, 562, 563, 567, 568, 570, 571, 572, 578, 582, 599, 600, 601, 602, 604, 605, 610, 612, 614, 619, 625, 626, 627, 633, 634, 637, 641, 644, 646, 664, 667, 668, 669, 670, 672, 679, 682, 683, 685, 687, 688, 690, 693, 703, 718, 720, 723, 731, 744, 753, 769, 776, 777, 778, 781, 784, 788, 790, 799, 802, 807, 810, 813, 817, 819, 820, 821, 825, 826, 827, 829, 830, 831, 833, 836, 838, 839, 842, 847, 849, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 866, 868, 873, 878, 879, 881, 885, 886, 888, 889, 896, 898, 901, 902, 909, 910, 913, 914, 924, 928, 934, 944, 945, 946, 947, 948, 950, 954, 955, 958, 977, 978, 979, 987, 988, 989, 993, 995, 998, 999, 1000, 1002, 1008, 1009, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1050, 1053, 1055, 1056, 1057, 1058, 1059, 1072, 1073, 1074, 1075, 1078, 1079, 1083, 1085, 1086, 1091, 1092, 1094, 1098, 1099, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1115, 1134, 1135, 1141, 1142, 1149, 1151, 1160, 1162, 1216, 1245, 1266, 1289, 1297, 1298, 1304, 1305, 1333, 1342, 1344, 1346, 1347, 1348, 1349, 1351, 1354, 1356, 1357, 1360, 1361, 1366, 1368, 1369, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1387, 1390, 1397, 1402, 1404, 1411, 1414, 1415, 1428, 1431, 1435, 1439, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1451, 1452, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1472, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1500, 1501, 1503, 1505], "result1": [784, 804, 825, 826, 1452], "result2": [804, 825, 826, 1452], "result3": 804, "result_activ": 1471, "result_av": 1378, "result_both": 1471, "result_cod": 1456, "result_dtyp": 1462, "result_info": [1344, 1371, 1378], "result_layout": [284, 1378], "result_map": 1402, "result_shap": [1376, 1402, 1462], "result_shape_dtyp": [130, 194, 283, 1016, 1376], "result_shard": [1378, 1402], "result_typ": [620, 668, 994, 1016, 1348, 1354, 1371, 1376], "resultbuff": 1378, "resultmetadata": 283, "resum": 1363, "ret": 1378, "retain": [436, 1354, 1357, 1400, 1492, 1498], "rethink": 1487, "retrac": [67, 1354], "retri": 98, "retriev": [246, 296, 498, 1002, 1342, 1411, 1462, 1463, 1503], "retstep": 819, "return": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 28, 31, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 97, 100, 101, 103, 105, 107, 108, 112, 113, 114, 118, 119, 120, 126, 127, 130, 131, 132, 134, 135, 136, 137, 139, 141, 142, 145, 148, 149, 150, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 268, 270, 271, 272, 276, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 620, 621, 623, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 753, 754, 755, 756, 757, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1331, 1332, 1333, 1334, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1354, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1390, 1396, 1397, 1400, 1402, 1403, 1411, 1414, 1415, 1424, 1427, 1428, 1434, 1435, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1502, 1503, 1505, 1506], "return_": 1348, "return_count": [976, 977, 978], "return_index": [976, 977], "return_indic": 762, "return_invers": [976, 977, 979, 1354], "return_onesid": [1110, 1114, 1115], "return_shap": 503, "return_sign": [538, 1151, 1354], "return_str": 1003, "return_v": 1349, "return_weak_typ": 107, "return_weak_type_flag": 107, "returnvalu": [76, 77, 78, 79, 80], "reus": [67, 150, 160, 168, 296, 1002, 1027, 1348, 1359, 1366, 1369, 1370, 1374, 1377, 1380, 1385, 1411, 1431, 1459, 1462, 1471, 1475, 1479, 1480, 1484, 1490, 1498], "reusabl": 1302, "rev": [69, 1285, 1359, 1387], "rev_it": [1342, 1463], "reveal": [82, 404, 1095, 1342, 1363, 1402, 1442, 1444, 1467], "reveng": 1481, "revers": [67, 69, 72, 75, 79, 295, 311, 351, 352, 353, 354, 355, 378, 458, 481, 488, 495, 661, 705, 706, 707, 919, 957, 994, 1162, 1332, 1346, 1348, 1349, 1354, 1372, 1377, 1378, 1379, 1415, 1441, 1449, 1462, 1466, 1474, 1475], "revert": [1345, 1354, 1357, 1443], "review": [1344, 1357, 1444, 1484, 1493, 1494], "revis": [1442, 1447, 1449, 1454, 1474], "revisit": [1444, 1446, 1452, 1455, 1479, 1485], "reward": 1342, "rewrit": [339, 1349, 1351, 1357, 1361, 1374, 1377, 1442, 1445, 1449, 1453, 1454, 1456, 1459, 1474, 1475, 1479, 1487, 1506], "rewritten": [1349, 1374, 1378, 1381, 1442, 1447, 1449, 1475, 1502], "rfft": [684, 687, 692, 693, 697, 698, 699, 1354, 1424], "rfft2": [694, 699, 1354], "rfftfreq": [684, 1354], "rfftn": [693, 695, 696, 697, 1354], "rfloor": 377, "rg": 239, "rgb": 1469, "rh": [207, 208, 213, 214, 224, 317, 341, 343, 344, 345, 346, 347, 360, 361, 543, 544, 1348, 1424, 1464, 1474, 1483, 1492, 1494], "rhs_batch_dim": [207, 208, 224, 360, 543], "rhs_block": 1474, "rhs_block_hi": 1474, "rhs_block_lo": 1474, "rhs_component_count": 1424, "rhs_contracting_dim": [207, 208, 224, 360, 543], "rhs_dilat": [343, 344, 345, 346, 347], "rhs_dtype": 1424, "rhs_precision_typ": 1424, "rhs_ref": 1484, "rhs_ref2": 1484, "rhs_scale": 544, "rhs_shape": 342, "rhs_smem_ref": 1484, "rhs_spec": [343, 344, 345, 1424, 1469, 1474], "rich": [86, 1382, 1468], "richer": 1348, "riemann": [1165, 1342, 1467], "right": [174, 240, 332, 356, 377, 397, 406, 410, 467, 468, 469, 507, 509, 510, 512, 536, 637, 641, 661, 679, 705, 745, 761, 784, 798, 810, 811, 815, 817, 876, 902, 914, 919, 924, 986, 989, 1031, 1042, 1055, 1056, 1059, 1079, 1092, 1094, 1101, 1106, 1107, 1108, 1109, 1112, 1116, 1117, 1118, 1149, 1162, 1222, 1223, 1224, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1248, 1249, 1291, 1342, 1345, 1349, 1354, 1369, 1371, 1374, 1376, 1378, 1381, 1382, 1385, 1390, 1447, 1449, 1456, 1457, 1463, 1468, 1474, 1476, 1479, 1480, 1483, 1484, 1487, 1494], "right_capacity_sem": 1490, "right_copi": 1490, "right_copy_devic": 1490, "right_copy_slic": 1490, "right_neighbor": [1479, 1490], "right_permut": 1490, "right_permute_kernel": 1490, "right_recv_sem": 1490, "right_send_sem": 1490, "right_shift": [468, 469, 611, 784], "right_window_s": 508, "rigor": [1342, 1467], "ring": [504, 1381, 1474, 1479], "rint": 1354, "risk": [1380, 1408, 1489, 1490], "rm": [529, 1057, 1378, 1387], "rmpfr": 534, "rms_norm": 1378, "rms_norm_bwd": 1378, "rms_norm_cross_platform": 1378, "rms_norm_cuda": 1378, "rms_norm_fwd": 1378, "rms_norm_infer_sharding_from_operand": 1378, "rms_norm_lib": 1378, "rms_norm_lib_cuda": 1378, "rms_norm_partit": 1378, "rms_norm_ref": 1378, "rms_norm_sequenti": 1378, "rms_norm_shmap": 1378, "rmsnorm": 1378, "rmsnormbwd": 1378, "rmsnormfwd": 1378, "rmsnormimpl": 1378, "rmsprop": 1396, "rmsprop_momentum": 1396, "rng": [720, 985, 1446, 1448, 1451, 1458, 1476, 1494, 1498, 1500, 1502], "rng_1": 1451, "rng_2": 1451, "rng_3": 1451, "rng_bit_gener": [1354, 1424], "rng_default": [454, 1424], "rng_input": 1451, "rng_philox": 1424, "rng_three_fri": 1424, "rngbitgener": 454, "rnn": 1471, "roadmap": [1378, 1458], "robin": 1484, "robust": [239, 1354, 1382, 1468], "robustifi": 1453, "rocket": 1476, "rocm": [246, 248, 424, 1371, 1384, 1415], "roi": 1455, "role": [98, 1484, 1502, 1507], "roll": [378, 458, 917, 1354, 1359, 1444, 1474, 1487, 1497], "rollaxi": [846, 916, 949, 1354], "rollout": 1356, "rooflin": 1496, "room": 1444, "root": [331, 357, 457, 478, 508, 621, 883, 887, 891, 942, 943, 1100, 1341, 1342, 1348, 1354, 1360, 1366, 1378, 1381, 1449, 1454, 1463], "root_kei": 1503, "rot": 1120, "rot90": 1469, "rotat": [919, 985, 1118, 1120, 1342, 1354, 1448, 1467, 1469, 1490], "rotvec": 1120, "rough": [1378, 1480], "roughli": [91, 239, 362, 364, 458, 1348, 1349, 1356, 1363, 1371, 1378, 1445, 1447, 1472, 1474, 1487, 1492, 1494, 1503], "round": [332, 377, 447, 448, 585, 623, 702, 714, 715, 883, 908, 915, 968, 985, 1052, 1094, 1342, 1349, 1354, 1424, 1428, 1449, 1462, 1463, 1484, 1489, 1503], "round_": 1354, "rounding_method": 456, "roundingmethod": [456, 1424], "roundoff": 1349, "rout": [1354, 1444, 1474, 1480, 1497, 1506], "routin": [0, 239, 357, 671, 672, 873, 991, 995, 1342, 1354, 1376, 1414, 1428, 1431, 1448, 1463, 1474, 1492], "row": [237, 240, 241, 283, 284, 292, 295, 401, 402, 435, 501, 528, 570, 632, 640, 645, 646, 779, 877, 902, 905, 906, 911, 959, 961, 965, 1002, 1026, 1047, 1070, 1090, 1094, 1102, 1342, 1346, 1369, 1414, 1445, 1467, 1472, 1474, 1475, 1480, 1484, 1485, 1488, 1492, 1494, 1498, 1506], "row_norm": 1002, "row_stack": 1354, "rows_per_devic": 501, "rows_sort": 201, "rowvar": [640, 645], "rpath": 1377, "rpc": 1369, "rr": 1359, "rsf2csf": [1097, 1354], "rsqrt": [331, 478, 1503], "rst": 1366, "rtd": 1366, "rtol": [564, 764, 802, 807, 1040, 1084, 1086, 1285, 1286, 1287, 1342, 1354, 1378, 1467, 1471, 1474, 1475, 1492], "rtree": 1387, "rudin": [1342, 1463], "ruff": [1357, 1366], "rule": [69, 72, 73, 75, 76, 77, 79, 80, 126, 127, 150, 248, 284, 328, 360, 378, 422, 452, 458, 488, 616, 617, 618, 620, 627, 634, 667, 744, 913, 934, 945, 958, 993, 1075, 1163, 1164, 1343, 1346, 1348, 1349, 1350, 1354, 1356, 1360, 1368, 1371, 1374, 1376, 1378, 1381, 1382, 1402, 1403, 1424, 1441, 1443, 1446, 1447, 1452, 1453, 1456, 1457, 1458, 1462, 1467, 1468, 1474, 1475, 1478, 1479, 1480, 1484, 1487, 1489, 1490, 1498, 1499, 1501, 1505], "rules_python": 1366, "run": [81, 83, 98, 99, 118, 120, 126, 178, 194, 296, 303, 304, 345, 378, 424, 436, 437, 458, 505, 1002, 1013, 1014, 1015, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1354, 1357, 1361, 1362, 1367, 1369, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1387, 1390, 1400, 1411, 1415, 1440, 1441, 1444, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1487, 1488, 1489, 1492, 1494, 1495, 1496, 1500, 1501, 1503, 1505, 1507], "run_arg": 1415, "run_kernel": 1484, "run_mesh": 1415, "run_scop": [174, 1478, 1490], "run_stat": [1479, 1483, 1484], "run_und": 1366, "rundir": 1381, "runpi": 1390, "runtim": [95, 130, 891, 1016, 1086, 1341, 1342, 1344, 1354, 1360, 1361, 1363, 1371, 1376, 1377, 1378, 1384, 1428, 1435, 1439, 1445, 1449, 1452, 1454, 1457, 1459, 1463, 1474, 1478, 1479, 1483, 1484, 1487, 1492, 1494, 1503, 1507], "runtime_execut": [1402, 1435], "runtime_token": 1442, "runtimeerror": [98, 638, 1013, 1014, 1015, 1354, 1356, 1377, 1461, 1504], "runtimewarn": 1465, "rw": 1371, "s1": [477, 668, 1447], "s10": 668, "s2": [477, 1447], "s25": 668, "s3": 1465, "s32": 1454, "s4": 620, "s_": [750, 1094, 1342], "s_dev": 1471, "s_grad": 1342, "s_host": 1471, "s_sha256_sum": 1366, "s_t": 1342, "s_tm1": 1342, "sa": 1461, "sacrif": 1490, "sad": 1498, "saddl": 1104, "safe": [61, 150, 172, 248, 296, 356, 424, 620, 1002, 1016, 1032, 1344, 1348, 1354, 1361, 1363, 1366, 1411, 1439, 1442, 1444, 1445, 1474, 1475, 1483, 1484, 1498, 1502, 1505], "safe_for_grad_log": 1377, "safe_map": [1354, 1466], "safe_zip": 1354, "safer": [1445, 1507], "safeti": [248, 1354, 1371, 1415, 1455], "sai": [985, 1342, 1344, 1348, 1349, 1359, 1369, 1371, 1378, 1382, 1384, 1434, 1440, 1442, 1444, 1445, 1447, 1462, 1463, 1464, 1467, 1468, 1470, 1472, 1474, 1479, 1480, 1484, 1488, 1490, 1492, 1502], "said": [1345, 1349, 1378, 1448, 1456, 1475, 1476, 1489], "sake": [106, 1376, 1444, 1452, 1456, 1503], "salient": 1377, "salmon": 1431, "same": [10, 13, 45, 61, 64, 67, 69, 71, 72, 73, 75, 80, 93, 98, 100, 104, 113, 120, 126, 127, 132, 133, 134, 135, 136, 137, 139, 145, 150, 166, 180, 210, 223, 238, 240, 244, 245, 252, 253, 280, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 321, 322, 323, 324, 325, 331, 332, 334, 336, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 356, 357, 359, 362, 368, 372, 373, 375, 377, 380, 382, 383, 386, 389, 391, 392, 395, 398, 400, 401, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 456, 457, 458, 459, 465, 467, 468, 469, 470, 471, 472, 475, 476, 478, 481, 482, 483, 484, 485, 489, 494, 495, 501, 502, 503, 508, 514, 515, 547, 554, 555, 559, 563, 567, 568, 569, 570, 574, 576, 579, 580, 581, 588, 595, 606, 623, 627, 633, 634, 637, 638, 640, 641, 645, 661, 667, 670, 671, 673, 674, 680, 681, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 712, 714, 716, 717, 718, 720, 728, 730, 734, 735, 738, 740, 742, 744, 745, 750, 751, 763, 768, 770, 771, 772, 773, 784, 785, 786, 787, 798, 799, 803, 805, 814, 826, 833, 834, 836, 837, 842, 843, 849, 850, 853, 854, 856, 857, 858, 859, 861, 864, 866, 867, 869, 874, 877, 879, 881, 882, 883, 891, 892, 894, 896, 901, 902, 905, 906, 908, 909, 914, 916, 920, 921, 925, 930, 931, 934, 939, 940, 945, 948, 949, 951, 960, 963, 964, 968, 982, 991, 993, 996, 1002, 1017, 1023, 1072, 1074, 1083, 1085, 1086, 1096, 1098, 1099, 1106, 1107, 1108, 1109, 1110, 1112, 1116, 1117, 1118, 1149, 1160, 1209, 1245, 1266, 1295, 1296, 1303, 1310, 1331, 1332, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1359, 1360, 1363, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1390, 1396, 1397, 1403, 1404, 1411, 1414, 1415, 1424, 1428, 1431, 1434, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1502, 1503, 1505, 1506], "same_data": 1027, "same_kind": 620, "same_low": [343, 449], "sampl": [292, 531, 640, 645, 684, 698, 733, 742, 958, 1012, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1075, 1110, 1113, 1114, 1115, 1152, 1153, 1216, 1342, 1354, 1356, 1383, 1395, 1451, 1465, 1469, 1471, 1475, 1494, 1498], "sample_s": 1451, "sampler": [1023, 1026, 1040, 1354], "saniti": 1461, "sass": [1354, 1484], "satisfi": [150, 239, 241, 311, 331, 349, 356, 372, 373, 375, 403, 411, 412, 442, 443, 444, 445, 447, 448, 450, 457, 471, 478, 484, 485, 501, 571, 640, 679, 811, 957, 984, 985, 1028, 1082, 1087, 1094, 1097, 1101, 1357, 1390, 1444, 1455, 1456, 1459, 1465, 1484, 1495, 1498], "satur": 1487, "save": [67, 820, 923, 1011, 1013, 1014, 1015, 1342, 1343, 1354, 1356, 1359, 1366, 1371, 1374, 1381, 1382, 1400, 1443, 1449, 1453, 1454, 1462, 1463, 1467, 1471, 1474, 1490, 1492, 1494, 1495, 1503], "save_and_offload_only_these_nam": [1382, 1471], "save_any_names_but_thes": [1382, 1468], "save_anything_but_these_nam": [1382, 1468], "save_device_memory_profil": 1367, "save_for_backward": [1342, 1463], "save_from_both_polici": 1382, "save_only_these_nam": [1382, 1468], "savetxt": [922, 923], "savez": 922, "savez_compress": 923, "saw": [1366, 1441, 1461], "scaffold": 1452, "scalabl": 1460, "scalar": [31, 67, 69, 91, 94, 95, 104, 106, 108, 113, 137, 143, 209, 257, 288, 289, 290, 296, 297, 301, 313, 321, 322, 324, 325, 336, 339, 348, 357, 359, 363, 365, 366, 367, 368, 380, 382, 383, 389, 392, 399, 400, 407, 409, 414, 416, 417, 418, 419, 421, 430, 451, 456, 458, 466, 467, 468, 469, 482, 483, 488, 494, 495, 503, 507, 509, 533, 564, 573, 574, 575, 576, 577, 579, 584, 586, 587, 588, 592, 599, 600, 601, 619, 620, 621, 623, 624, 627, 628, 629, 631, 636, 642, 643, 645, 646, 652, 658, 660, 664, 667, 668, 669, 674, 675, 676, 678, 681, 684, 698, 700, 704, 708, 709, 710, 712, 713, 714, 716, 717, 718, 723, 725, 727, 728, 729, 730, 731, 733, 734, 735, 738, 739, 741, 744, 745, 746, 749, 752, 755, 756, 757, 758, 760, 761, 768, 770, 771, 772, 773, 776, 777, 782, 785, 786, 819, 821, 823, 826, 831, 832, 837, 843, 845, 857, 859, 865, 866, 867, 869, 870, 879, 881, 882, 883, 884, 886, 888, 889, 890, 892, 894, 897, 901, 902, 903, 907, 908, 909, 912, 913, 914, 920, 929, 930, 932, 933, 936, 937, 942, 943, 952, 953, 968, 971, 972, 973, 974, 981, 983, 988, 991, 993, 1002, 1037, 1064, 1068, 1069, 1084, 1086, 1105, 1209, 1307, 1331, 1332, 1342, 1348, 1350, 1354, 1356, 1359, 1370, 1371, 1374, 1379, 1385, 1390, 1396, 1397, 1403, 1411, 1424, 1439, 1441, 1444, 1448, 1455, 1461, 1462, 1467, 1470, 1474, 1475, 1478, 1486, 1488, 1489, 1491, 1493, 1497, 1498, 1500, 1503, 1505], "scalar_or_schedul": 1396, "scalar_typ": 1348, "scale": [86, 292, 318, 319, 495, 508, 511, 519, 520, 521, 522, 523, 524, 525, 528, 530, 531, 538, 543, 544, 545, 572, 671, 746, 887, 1029, 1033, 1052, 1053, 1060, 1084, 1110, 1115, 1144, 1146, 1148, 1151, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1341, 1342, 1349, 1354, 1378, 1381, 1382, 1383, 1396, 1397, 1403, 1445, 1451, 1459, 1461, 1465, 1467, 1468, 1471, 1473, 1474, 1476, 1480, 1484, 1485, 1487, 1490, 1492, 1501, 1503], "scaled_dot_gener": 511, "scaled_dot_general_fn": 543, "scaled_matmul": 543, "scan": [47, 67, 97, 112, 118, 119, 178, 311, 378, 415, 891, 924, 1044, 1348, 1354, 1359, 1361, 1362, 1366, 1376, 1377, 1378, 1381, 1382, 1385, 1445, 1449, 1462, 1468, 1470, 1471, 1474, 1480, 1497, 1506], "scan_out": 1382, "scan_p": 1414, "scan_unrol": 924, "scatter": [436, 460, 461, 462, 463, 464, 1348, 1354, 1424, 1462, 1469, 1470, 1474, 1480, 1502], "scatter_add": 969, "scatter_dimens": [436, 1445, 1474], "scatter_dims_to_operand_dim": [459, 460, 1424], "scatter_indic": [459, 460, 461, 462, 463, 464, 1424], "scatter_indices_batching_dim": 1424, "scatterdimensionnumb": [459, 460, 461, 462, 463, 464, 1424], "scenario": [150, 1354, 1366, 1369, 1411, 1462, 1479], "scenario1": 1366, "scenario1_requirements_lock_3_13": 1366, "scenario2": 1366, "scenario2_requirements_lock_3_13": 1366, "scene": [18, 1474], "schedul": [543, 1354, 1381, 1396, 1445, 1461, 1471, 1480, 1483, 1484, 1487, 1489, 1493, 1503], "schemat": 1449, "scheme": [240, 1385, 1431, 1450, 1456, 1484, 1490, 1503], "school": [311, 1342, 1445, 1467, 1500], "schur": [1096, 1100, 1354], "scienc": [311, 1341, 1476], "scientif": [1364, 1365, 1366, 1441, 1462, 1480, 1498], "scipi": [240, 538, 637, 641, 746, 788, 791, 794, 797, 808, 810, 811, 1345, 1354, 1364, 1365, 1370, 1376, 1377, 1388, 1414, 1431, 1458, 1465, 1469, 1473, 1476], "scope": [245, 254, 255, 505, 506, 1341, 1346, 1349, 1354, 1370, 1383, 1434, 1441, 1449, 1452, 1458, 1459, 1470, 1479, 1484, 1490, 1504], "scott": 1209, "scp": 1461, "scratch": [1118, 1353, 1358, 1369, 1397, 1448, 1479, 1483, 1484, 1487, 1490, 1492, 1493, 1494, 1500], "scratch_ref": [1484, 1494], "scratch_shap": [140, 178, 1478, 1483, 1484, 1490, 1492, 1493, 1494], "scratch_vmem_ref": 1493, "scratchshapetre": [140, 178], "screen": [1363, 1379], "screenshot": 1444, "script": [1354, 1366, 1382, 1387, 1461, 1468, 1484, 1495, 1496, 1503, 1507], "sda": 1440, "sdy_batch": 1402, "sdyshardingrul": [1402, 1501], "seamlessli": [1307, 1414, 1428], "search": [47, 239, 305, 306, 493, 924, 1104, 1105, 1366, 1371, 1377, 1402, 1448], "searchsort": [661, 1354], "sec": [98, 1346, 1445, 1465, 1473], "second": [75, 77, 80, 98, 120, 166, 288, 289, 290, 293, 295, 297, 356, 357, 458, 495, 503, 564, 587, 588, 614, 659, 660, 664, 668, 680, 729, 733, 744, 762, 764, 781, 782, 799, 804, 833, 875, 885, 888, 894, 927, 928, 943, 949, 956, 969, 975, 988, 1020, 1110, 1291, 1292, 1296, 1331, 1332, 1333, 1341, 1342, 1344, 1346, 1348, 1349, 1354, 1360, 1369, 1371, 1374, 1376, 1377, 1381, 1382, 1385, 1390, 1396, 1434, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1454, 1456, 1461, 1462, 1463, 1464, 1467, 1468, 1471, 1472, 1474, 1484, 1485, 1487, 1489, 1490, 1492, 1494, 1495, 1496, 1497, 1500, 1503, 1506], "second_barri": 1490, "secondari": 1449, "secondli": 150, "secret": 1461, "section": [510, 552, 670, 941, 1017, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1349, 1350, 1351, 1354, 1360, 1364, 1366, 1369, 1371, 1381, 1384, 1386, 1414, 1440, 1444, 1445, 1448, 1450, 1451, 1452, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1471, 1474, 1477, 1479, 1484, 1486, 1489, 1490, 1496, 1498, 1501, 1502, 1503, 1506], "secur": [922, 923], "see": [10, 13, 67, 72, 73, 74, 75, 76, 78, 79, 82, 84, 90, 91, 95, 97, 104, 120, 128, 129, 130, 139, 140, 178, 181, 182, 184, 225, 239, 245, 248, 254, 255, 267, 283, 288, 296, 303, 304, 305, 306, 311, 321, 339, 343, 378, 404, 408, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 449, 456, 465, 489, 494, 501, 503, 504, 507, 510, 539, 541, 545, 552, 584, 638, 661, 670, 672, 701, 703, 722, 723, 724, 732, 776, 789, 793, 800, 805, 815, 818, 820, 864, 873, 877, 895, 897, 900, 922, 923, 924, 926, 941, 950, 951, 969, 977, 978, 979, 980, 994, 995, 1002, 1010, 1011, 1016, 1017, 1023, 1027, 1065, 1095, 1096, 1103, 1119, 1135, 1148, 1265, 1283, 1288, 1302, 1307, 1308, 1333, 1341, 1342, 1344, 1345, 1346, 1349, 1350, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1384, 1385, 1387, 1389, 1390, 1396, 1402, 1407, 1411, 1414, 1415, 1416, 1424, 1428, 1430, 1431, 1434, 1435, 1438, 1439, 1440, 1442, 1443, 1444, 1446, 1447, 1449, 1452, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1472, 1473, 1475, 1477, 1478, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1506], "seed": [92, 276, 277, 278, 281, 282, 1017, 1037, 1342, 1354, 1431, 1467, 1475, 1476, 1498], "seek": [820, 922, 923, 1345, 1357, 1444, 1456], "seem": [1342, 1348, 1369, 1381, 1442, 1443, 1452, 1453, 1463, 1467, 1479, 1480, 1484, 1492, 1502], "seemingli": 1484, "seen": [1342, 1348, 1349, 1378, 1414, 1454, 1455, 1456, 1462, 1467, 1484, 1487, 1488, 1490, 1502, 1505], "segfault": [1354, 1501], "segment": [998, 999, 1000, 1001, 1110, 1113, 1114, 1115, 1354, 1503], "segment_id": [998, 999, 1000, 1001], "segment_sum": [969, 1354], "seldom": 1443, "select": [14, 92, 331, 339, 349, 372, 373, 375, 411, 412, 457, 466, 471, 478, 483, 484, 485, 508, 881, 944, 994, 1026, 1083, 1101, 1110, 1115, 1342, 1348, 1354, 1356, 1359, 1361, 1366, 1378, 1381, 1382, 1424, 1431, 1441, 1454, 1455, 1462, 1467, 1468, 1471, 1484, 1485, 1487, 1489, 1494, 1496, 1504], "select_cal": 405, "select_n": [881, 925, 1460], "select_on_first_cycl": 1381, "select_on_first_devic": 1381, "select_on_last_devic": 1381, "select_rang": 1083, "select_tril": 1454, "selector": 543, "self": [3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 31, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 210, 508, 539, 545, 1007, 1008, 1209, 1308, 1309, 1310, 1311, 1348, 1349, 1357, 1359, 1366, 1382, 1384, 1390, 1415, 1434, 1435, 1445, 1452, 1460, 1468, 1480, 1494, 1497, 1502, 1503, 1506], "selu": [296, 509, 1459, 1460], "selu_jit": [1459, 1460], "sem": [170, 1354, 1479, 1490], "semant": [10, 82, 119, 135, 136, 145, 150, 337, 339, 360, 378, 381, 415, 421, 432, 433, 451, 458, 459, 460, 461, 462, 463, 464, 483, 488, 503, 571, 584, 625, 627, 634, 667, 700, 744, 776, 864, 882, 897, 899, 900, 913, 917, 945, 991, 993, 1002, 1016, 1304, 1307, 1346, 1348, 1354, 1361, 1363, 1371, 1374, 1376, 1378, 1379, 1390, 1411, 1424, 1428, 1440, 1445, 1447, 1448, 1451, 1452, 1454, 1458, 1462, 1466, 1474, 1475, 1476, 1477, 1479, 1480, 1483, 1484, 1485, 1490, 1503], "semaphor": [170, 1479, 1493], "semaphore_read": 1490, "semaphore_sign": [170, 1478, 1479, 1490], "semaphore_wait": [1479, 1490], "semaphoresign": 170, "semaphoretyp": [1479, 1490], "semi": [1047, 1345, 1354, 1447], "semidefinit": 1094, "semver": 1450, "send": [433, 1357, 1366, 1369, 1381, 1395, 1459, 1461, 1474, 1479, 1490], "send_fwd": 1381, "send_sem": [1479, 1490], "sender": 1490, "sens": [1342, 1346, 1348, 1350, 1440, 1444, 1447, 1448, 1449, 1451, 1456, 1467, 1470, 1472, 1474, 1475, 1479, 1480, 1484, 1498, 1502], "sensibl": [1342, 1444, 1456, 1463], "sensit": 1356, "sent": [98, 1353, 1479, 1490], "sentinel": [1348, 1472], "sep": [726, 1384, 1503], "separ": [76, 78, 112, 248, 255, 337, 344, 415, 572, 640, 645, 668, 670, 671, 726, 877, 998, 999, 1000, 1001, 1306, 1342, 1344, 1345, 1349, 1354, 1355, 1356, 1369, 1371, 1396, 1402, 1440, 1441, 1442, 1444, 1445, 1449, 1456, 1459, 1461, 1462, 1463, 1474, 1479, 1483, 1484, 1487, 1488, 1489, 1492, 1493, 1500, 1502, 1507], "sept": 1454, "septemb": 1365, "seq": [941, 1387, 1461], "seq_length": 1503, "seq_of_zero": 883, "sequel": 1474, "sequenc": [2, 11, 27, 63, 67, 76, 78, 79, 86, 98, 126, 131, 132, 139, 149, 150, 160, 168, 176, 194, 196, 199, 200, 204, 205, 206, 209, 215, 216, 217, 219, 222, 236, 238, 244, 245, 248, 254, 255, 256, 257, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 326, 327, 338, 341, 343, 344, 345, 346, 347, 349, 360, 363, 366, 374, 376, 379, 381, 388, 389, 401, 413, 423, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 471, 473, 475, 477, 480, 483, 487, 502, 503, 504, 508, 520, 521, 522, 523, 524, 525, 531, 538, 571, 572, 578, 582, 590, 602, 617, 625, 627, 633, 634, 640, 644, 645, 654, 666, 667, 670, 671, 672, 677, 683, 685, 686, 689, 690, 691, 694, 695, 697, 699, 705, 727, 733, 739, 740, 741, 742, 743, 744, 751, 778, 779, 787, 804, 805, 813, 838, 839, 846, 853, 854, 855, 856, 858, 860, 861, 862, 873, 881, 883, 887, 898, 906, 911, 916, 918, 925, 937, 941, 944, 945, 946, 954, 955, 957, 985, 987, 992, 993, 995, 1002, 1023, 1072, 1074, 1076, 1103, 1111, 1112, 1151, 1284, 1302, 1303, 1307, 1331, 1332, 1333, 1342, 1346, 1348, 1354, 1359, 1371, 1374, 1377, 1379, 1390, 1397, 1411, 1415, 1424, 1428, 1431, 1434, 1439, 1441, 1444, 1445, 1451, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1474, 1475, 1480, 1483, 1487, 1498, 1503, 1506], "sequencekei": [1292, 1294, 1354, 1506], "sequenti": [74, 130, 150, 283, 1016, 1346, 1360, 1366, 1376, 1378, 1381, 1389, 1445, 1451, 1471, 1483, 1484, 1485, 1488, 1489, 1493], "sequential_unrol": 1016, "seri": [925, 1110, 1113, 1114, 1115, 1120, 1135, 1148, 1354, 1384, 1403, 1503], "serial": [178, 196, 247, 248, 252, 253, 424, 1343, 1344, 1354, 1385, 1396, 1397, 1415, 1435, 1449, 1451, 1484, 1487, 1488], "serializ": [197, 1431], "serialize_auxdata": 253, "serialize_execut": 1398, "serialized_nam": [252, 253], "series_ord": 1148, "series_out": 1403, "seriou": 1489, "serv": [98, 502, 981, 1302, 1348, 1364, 1381, 1390, 1395, 1444, 1448, 1471, 1490, 1493, 1496, 1500, 1503], "server": [1012, 1496], "servic": [98, 1381, 1461, 1496], "serviceaccountnam": 1461, "session": [1354, 1360, 1366, 1380], "set": [10, 67, 68, 76, 77, 79, 80, 90, 91, 97, 98, 100, 120, 131, 132, 150, 167, 168, 171, 180, 198, 239, 252, 257, 263, 292, 296, 305, 306, 334, 346, 360, 368, 378, 380, 381, 382, 383, 392, 397, 404, 414, 419, 429, 459, 460, 461, 462, 463, 464, 499, 501, 503, 504, 508, 540, 582, 626, 632, 640, 644, 645, 668, 700, 720, 721, 762, 769, 788, 794, 796, 813, 838, 860, 862, 864, 877, 878, 882, 887, 891, 898, 899, 900, 918, 927, 928, 946, 950, 954, 959, 960, 964, 975, 976, 977, 978, 979, 980, 987, 991, 998, 999, 1000, 1001, 1002, 1007, 1017, 1019, 1049, 1069, 1070, 1083, 1103, 1148, 1153, 1162, 1245, 1266, 1283, 1307, 1308, 1309, 1310, 1311, 1342, 1344, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1384, 1385, 1390, 1400, 1402, 1404, 1411, 1414, 1415, 1424, 1425, 1428, 1431, 1434, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1454, 1455, 1456, 1459, 1463, 1464, 1465, 1466, 1467, 1469, 1473, 1474, 1475, 1478, 1479, 1480, 1484, 1487, 1488, 1489, 1490, 1492, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1507], "set_cache_dir": [1356, 1400, 1495], "set_current_trac": 1460, "set_interpret": 1349, "set_linestyl": 1456, "set_mesh": [1283, 1354, 1470, 1474, 1500, 1503], "set_printopt": [589, 591, 732, 895], "set_titl": 1469, "set_trac": [1342, 1460, 1463], "set_valu": 1348, "set_visible_devic": [1380, 1473], "set_ylim": 1456, "setdiff1d": [762, 928, 975, 1448], "setop": [927, 975], "setter": [1354, 1470], "setup": [1350, 1354, 1366, 1369, 1381, 1384, 1461, 1467], "setuptool": [1366, 1465], "setxor1d": [762, 927, 975], "seussian": 1445, "sever": [239, 459, 460, 922, 923, 1094, 1105, 1341, 1342, 1345, 1354, 1356, 1357, 1359, 1366, 1368, 1369, 1371, 1374, 1376, 1377, 1379, 1384, 1385, 1431, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1458, 1460, 1462, 1466, 1471, 1474, 1475, 1480, 1489, 1490, 1492, 1493, 1494, 1498, 1499, 1500], "sf": [1170, 1171, 1172, 1173, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1241, 1242, 1243, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1269, 1270, 1271, 1272, 1273], "sfu": 1484, "sgd": [1342, 1396, 1502, 1506], "sh": [1354, 1366, 1387, 1474], "sha256_sum": 1366, "shape": [26, 42, 45, 61, 63, 72, 86, 97, 113, 130, 131, 132, 134, 135, 136, 137, 142, 157, 159, 166, 178, 179, 194, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 215, 216, 229, 230, 233, 234, 236, 241, 245, 248, 254, 255, 277, 280, 281, 282, 283, 284, 289, 290, 291, 292, 297, 298, 299, 300, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 321, 323, 326, 327, 328, 330, 331, 332, 334, 335, 338, 340, 342, 344, 345, 348, 349, 350, 360, 363, 365, 367, 368, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 386, 389, 391, 392, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 419, 420, 421, 425, 426, 427, 429, 431, 432, 434, 435, 436, 437, 439, 442, 443, 444, 445, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 461, 465, 466, 470, 471, 472, 474, 478, 484, 485, 488, 493, 494, 500, 501, 502, 503, 504, 508, 519, 527, 528, 531, 532, 538, 544, 554, 559, 562, 567, 574, 576, 579, 583, 584, 588, 595, 599, 600, 601, 605, 606, 610, 612, 614, 616, 617, 618, 619, 623, 625, 632, 633, 634, 638, 639, 640, 645, 646, 654, 661, 664, 667, 668, 671, 672, 673, 674, 677, 679, 680, 681, 683, 685, 687, 689, 690, 694, 695, 697, 699, 702, 712, 714, 716, 717, 718, 723, 727, 728, 734, 735, 738, 740, 742, 744, 745, 747, 751, 753, 761, 762, 763, 768, 769, 770, 771, 772, 773, 779, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 807, 808, 809, 810, 811, 812, 814, 815, 816, 826, 827, 829, 830, 832, 833, 835, 837, 840, 843, 846, 847, 866, 867, 868, 869, 873, 874, 875, 882, 883, 884, 886, 887, 889, 890, 891, 892, 894, 902, 905, 906, 908, 909, 911, 912, 914, 916, 917, 920, 924, 927, 930, 931, 934, 937, 938, 939, 940, 941, 944, 945, 947, 949, 955, 957, 959, 960, 964, 968, 975, 976, 977, 978, 979, 980, 982, 986, 988, 990, 991, 993, 995, 996, 998, 999, 1000, 1001, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1070, 1071, 1072, 1073, 1074, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1116, 1117, 1118, 1137, 1138, 1149, 1151, 1152, 1153, 1160, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1216, 1217, 1218, 1219, 1220, 1221, 1241, 1246, 1247, 1250, 1251, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1279, 1280, 1281, 1282, 1331, 1332, 1333, 1342, 1344, 1347, 1348, 1350, 1351, 1354, 1359, 1360, 1363, 1369, 1370, 1372, 1376, 1377, 1378, 1381, 1382, 1390, 1397, 1402, 1411, 1414, 1424, 1427, 1428, 1431, 1434, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1451, 1452, 1453, 1455, 1459, 1460, 1461, 1464, 1465, 1466, 1467, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1494, 1498, 1499, 1500, 1503, 1506], "shape_assert": [1354, 1371], "shape_depend": 1397, "shape_dtyp": 1484, "shape_dtype_struct": 113, "shape_from_pyv": 1354, "shape_poli": [245, 254, 255, 1354, 1356, 1374], "shape_poly_st": 1390, "shape_poly_test": 1374, "shape_spec": [254, 255], "shapecheck": 1354, "shaped_arrai": 1447, "shapedarrai": [97, 248, 503, 1348, 1354, 1359, 1370, 1371, 1374, 1377, 1378, 1390, 1415, 1446, 1454, 1470], "shapedtypespec": 254, "shapedtypestruct": [113, 130, 178, 194, 248, 254, 283, 432, 494, 1016, 1344, 1354, 1371, 1374, 1376, 1378, 1381, 1472, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1494], "shapelik": 1444, "shapepolyloweringst": 1390, "shapepolytest": 1374, "shapes_spec": 254, "sharad_map": 1445, "sharadmv": [1442, 1445, 1446], "shard": [2, 9, 21, 27, 29, 57, 63, 82, 83, 84, 85, 86, 95, 100, 130, 131, 132, 135, 136, 198, 205, 216, 296, 316, 360, 379, 380, 489, 493, 500, 501, 502, 504, 572, 586, 592, 595, 672, 673, 680, 684, 698, 720, 727, 728, 819, 873, 874, 995, 996, 1002, 1016, 1283, 1284, 1343, 1354, 1356, 1359, 1361, 1369, 1371, 1381, 1385, 1388, 1402, 1411, 1415, 1431, 1440, 1441, 1444, 1445, 1462, 1466, 1472, 1484, 1490, 1495, 1501, 1504], "shard_map": [316, 1284, 1343, 1346, 1354, 1356, 1381, 1398, 1458, 1470, 1480, 1490, 1495], "shard_map_test": 1381, "shard_shap": 1434, "shardabl": 1431, "sharded_arg": 1371, "sharded_arrai": [1470, 1500], "sharded_cal": 1354, "sharded_dim": 1434, "sharded_jit": 1354, "sharded_x": 1440, "shardeddevicearrai": [1354, 1440], "shardi": [1354, 1402], "sharding1": 1464, "sharding2": 1464, "sharding_rul": [1378, 1402, 1501], "sharding_spec": [1434, 1440], "shardingcontext": 1390, "shardingspec": 1434, "shardy_jax_migr": 1356, "share": [75, 98, 100, 166, 245, 360, 397, 914, 1346, 1348, 1354, 1374, 1377, 1378, 1442, 1445, 1449, 1451, 1457, 1461, 1471, 1480, 1483, 1484, 1487, 1490, 1493, 1495, 1496, 1503], "sharp": [913, 1352, 1360, 1377, 1459, 1475, 1479, 1486, 1502], "sheet": 1490, "shelf": 1498, "shell": [1364, 1366, 1368, 1381, 1440, 1443, 1454, 1462, 1495, 1496, 1501], "shelv": 1498, "shick": 1445, "shift": [467, 468, 469, 686, 691, 784, 914, 916, 1381, 1474], "shift_dn": 1474, "shift_left": [468, 469], "shift_right": 1381, "shift_right_arithmet": [467, 469, 1478], "shift_right_log": [467, 468], "shift_up": 1474, "shifted_freq": [686, 691], "shim": 1465, "ship": [1354, 1384], "shmap": [1447, 1458], "sho": 1445, "sholto": 1445, "sholto_map": 1445, "shoot": 1459, "short": [1110, 1113, 1114, 1115, 1359, 1365, 1366, 1377, 1379, 1444, 1451, 1456, 1458, 1460, 1475, 1480, 1496, 1503], "short_mask": 679, "shortcom": 1445, "shortcut": [976, 1354, 1435], "shorter": 1477, "shortest": 1495, "shorthand": [767, 1342, 1463, 1464, 1503], "should": [0, 61, 67, 73, 75, 77, 80, 81, 95, 98, 100, 106, 113, 126, 127, 130, 132, 135, 136, 139, 160, 167, 178, 183, 198, 201, 203, 241, 248, 254, 277, 281, 282, 283, 284, 289, 290, 291, 292, 296, 297, 311, 321, 337, 357, 360, 362, 381, 387, 401, 408, 431, 432, 433, 434, 454, 455, 459, 460, 461, 462, 463, 464, 466, 495, 501, 503, 508, 512, 519, 520, 521, 522, 523, 524, 525, 528, 531, 536, 540, 549, 563, 568, 570, 578, 583, 620, 626, 674, 705, 712, 718, 720, 722, 724, 730, 733, 739, 740, 742, 776, 797, 801, 815, 826, 836, 837, 838, 842, 843, 853, 854, 856, 857, 858, 859, 860, 861, 862, 867, 869, 877, 879, 888, 894, 896, 897, 901, 905, 909, 911, 917, 923, 938, 946, 948, 956, 987, 991, 994, 998, 999, 1000, 1001, 1002, 1010, 1011, 1016, 1044, 1063, 1089, 1100, 1116, 1117, 1118, 1149, 1160, 1162, 1283, 1284, 1286, 1287, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1307, 1308, 1310, 1331, 1332, 1333, 1342, 1345, 1346, 1348, 1349, 1354, 1356, 1361, 1363, 1364, 1366, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1386, 1387, 1400, 1403, 1411, 1415, 1424, 1431, 1434, 1440, 1441, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1502, 1503, 1506], "should_accumulate_out": 1490, "should_be_zero": 1349, "should_comput": 1494, "should_sort_granules_by_kei": 132, "shouldn": [1366, 1382, 1442, 1453, 1459, 1462, 1468, 1502], "show": [505, 506, 670, 763, 765, 774, 790, 815, 1007, 1008, 1009, 1012, 1342, 1344, 1350, 1354, 1356, 1367, 1370, 1377, 1378, 1384, 1387, 1402, 1414, 1441, 1442, 1444, 1448, 1451, 1454, 1459, 1462, 1464, 1465, 1466, 1467, 1470, 1471, 1473, 1474, 1480, 1484, 1485, 1496, 1504], "show_exampl": 1497, "show_head": [1382, 1468], "show_lin": [1382, 1468], "show_program_id": 1485, "showcas": 1503, "shown": [1353, 1382, 1390, 1441, 1456, 1468, 1471, 1474, 1485, 1502, 1506], "shpecialized_xmap": 1445, "shuffl": [431, 432, 433, 1049, 1354, 1444], "shut": [98, 99, 1496], "shutdown": 1354, "side": [47, 82, 97, 119, 170, 174, 240, 283, 343, 356, 410, 528, 722, 724, 798, 810, 815, 817, 924, 989, 1016, 1029, 1043, 1079, 1092, 1094, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1136, 1140, 1342, 1347, 1348, 1354, 1359, 1360, 1361, 1363, 1370, 1374, 1376, 1377, 1379, 1411, 1444, 1445, 1447, 1448, 1449, 1458, 1459, 1462, 1463, 1470, 1496, 1502], "side_effect": 1370, "sig": 1461, "sight": [1342, 1463], "sigma": [811, 1029, 1042, 1045, 1053, 1060, 1101, 1248, 1249, 1476], "sigmoid": [413, 512, 513, 535, 547, 552, 555, 1132, 1342, 1350, 1377, 1414, 1467, 1500], "sign": [10, 298, 313, 359, 381, 451, 468, 538, 548, 639, 701, 718, 767, 809, 864, 866, 892, 909, 931, 932, 950, 1094, 1136, 1139, 1140, 1151, 1354, 1357, 1377], "signal": [170, 172, 637, 641, 985, 1354, 1450, 1469, 1483, 1484, 1490], "signatur": [75, 80, 119, 126, 241, 277, 281, 282, 296, 311, 337, 378, 458, 488, 495, 570, 571, 572, 832, 877, 991, 1342, 1344, 1348, 1354, 1371, 1378, 1396, 1402, 1411, 1441, 1449, 1457, 1463, 1465, 1467, 1473, 1478, 1480, 1487, 1490, 1493, 1494, 1495, 1503], "signedinteg": 1348, "signifi": 1354, "signific": [1354, 1364, 1376, 1377, 1443, 1445, 1450, 1453, 1456, 1471, 1474, 1483, 1484, 1489, 1494, 1503, 1505], "significantli": [170, 701, 1354, 1471, 1484, 1489, 1503], "signigic": 1380, "silenc": [223, 1354], "silent": [1354, 1376, 1384, 1459, 1462, 1474, 1476, 1483, 1490, 1499, 1504], "silli": 1378, "silu": [514, 515, 555], "silverman": 1209, "simd": [1451, 1488, 1498], "similar": [10, 91, 112, 119, 198, 241, 253, 304, 328, 348, 380, 424, 436, 465, 495, 571, 572, 591, 668, 725, 777, 806, 816, 817, 841, 864, 872, 882, 918, 969, 998, 999, 1000, 1001, 1084, 1110, 1283, 1304, 1310, 1311, 1342, 1344, 1354, 1356, 1359, 1360, 1361, 1363, 1369, 1370, 1374, 1376, 1377, 1378, 1380, 1382, 1428, 1440, 1443, 1444, 1448, 1449, 1450, 1451, 1452, 1456, 1460, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1474, 1475, 1483, 1484, 1489, 1490, 1493, 1494, 1495, 1500, 1503, 1504, 1505], "similarli": [76, 79, 126, 136, 148, 292, 951, 1002, 1342, 1348, 1351, 1353, 1354, 1360, 1371, 1377, 1378, 1444, 1445, 1446, 1448, 1454, 1455, 1461, 1463, 1466, 1472, 1474, 1478, 1479, 1480, 1483, 1484, 1485, 1492, 1506], "simpl": [67, 363, 449, 452, 473, 481, 570, 578, 583, 602, 614, 680, 733, 747, 810, 820, 835, 881, 938, 990, 998, 999, 1000, 1001, 1082, 1098, 1099, 1111, 1306, 1337, 1341, 1342, 1343, 1348, 1350, 1351, 1354, 1363, 1366, 1369, 1370, 1374, 1376, 1377, 1381, 1382, 1384, 1414, 1435, 1441, 1442, 1443, 1444, 1446, 1447, 1449, 1450, 1451, 1454, 1456, 1458, 1460, 1461, 1462, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1476, 1479, 1480, 1484, 1485, 1488, 1492, 1493, 1497, 1500, 1503, 1506], "simple_typ": 1444, "simpler": [327, 680, 750, 921, 1308, 1309, 1311, 1348, 1349, 1368, 1369, 1377, 1390, 1440, 1443, 1444, 1445, 1447, 1456, 1461, 1464, 1497], "simplest": [625, 679, 1348, 1369, 1378, 1448, 1452, 1464, 1474, 1475, 1484, 1500, 1503], "simpli": [112, 291, 503, 1002, 1342, 1344, 1351, 1357, 1366, 1367, 1370, 1377, 1384, 1385, 1442, 1449, 1454, 1457, 1459, 1462, 1463, 1484, 1486, 1487, 1490, 1494, 1497, 1500], "simplic": [1353, 1378, 1448, 1449, 1456, 1461, 1484], "simplif": [1348, 1356, 1377, 1390], "simplifi": [1306, 1344, 1353, 1354, 1369, 1371, 1374, 1376, 1377, 1440, 1446, 1447, 1449, 1454, 1471, 1484, 1490], "simul": [922, 923, 1342, 1381, 1383, 1449, 1463, 1480], "simultan": [946, 987, 1378, 1461, 1487, 1490, 1493, 1498, 1503], "sin": [67, 72, 76, 77, 78, 79, 80, 83, 112, 120, 126, 248, 293, 295, 297, 309, 337, 349, 422, 484, 495, 503, 575, 578, 642, 733, 761, 923, 934, 936, 952, 958, 985, 1075, 1086, 1135, 1332, 1342, 1346, 1348, 1349, 1360, 1361, 1363, 1370, 1371, 1374, 1376, 1382, 1390, 1403, 1428, 1440, 1441, 1443, 1445, 1449, 1452, 1461, 1463, 1464, 1467, 1468, 1469, 1470, 1475, 1480, 1489, 1500], "sin_deriv_at_3": 1348, "sin_inplac": 1346, "sin_jvp": 1348, "sin_lin": 1348, "sin_p": 1348, "sin_sharded_x": 1440, "sin_vjp": [1382, 1468], "sin_vjp2": [1382, 1468], "sin_x": [72, 79, 80, 1342, 1463], "sinc": [81, 83, 113, 143, 458, 488, 638, 641, 888, 922, 957, 998, 999, 1000, 1001, 1266, 1342, 1346, 1347, 1348, 1349, 1350, 1354, 1363, 1366, 1369, 1371, 1374, 1376, 1378, 1381, 1382, 1384, 1385, 1390, 1402, 1428, 1440, 1441, 1442, 1445, 1447, 1448, 1449, 1450, 1451, 1457, 1459, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1472, 1474, 1475, 1480, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1494, 1495, 1496, 1502, 1503, 1506], "sine": [299, 300, 309, 310, 312, 314, 349, 350, 471, 472, 484, 485, 573, 574, 575, 576, 577, 579, 642, 643, 933, 936, 952, 953, 985, 1348], "singl": [21, 76, 79, 98, 132, 143, 150, 170, 194, 198, 254, 290, 296, 335, 337, 344, 345, 357, 365, 367, 378, 423, 458, 465, 488, 502, 508, 571, 572, 591, 614, 627, 633, 634, 640, 645, 646, 667, 701, 720, 733, 744, 754, 787, 792, 803, 804, 805, 816, 818, 911, 923, 924, 925, 941, 945, 949, 985, 993, 1002, 1026, 1070, 1090, 1111, 1116, 1117, 1118, 1283, 1284, 1285, 1286, 1287, 1326, 1327, 1328, 1342, 1348, 1349, 1350, 1351, 1354, 1359, 1361, 1363, 1366, 1369, 1371, 1374, 1376, 1378, 1379, 1381, 1396, 1411, 1434, 1438, 1440, 1442, 1445, 1446, 1449, 1452, 1455, 1456, 1457, 1461, 1462, 1464, 1465, 1467, 1470, 1471, 1472, 1473, 1474, 1475, 1483, 1484, 1487, 1488, 1489, 1490, 1493, 1494, 1496, 1497, 1498, 1500, 1503, 1506], "single_device_shard": 1434, "single_lay": 1471, "singledeivceshard": 1471, "singledeviceshard": [130, 1016, 1354, 1434, 1471, 1472, 1475, 1500], "singleton": [1348, 1354, 1470, 1489], "singular": [240, 406, 789, 798, 802, 805, 807, 810, 811, 812, 887, 1045, 1094, 1098, 1101, 1354], "sinh": [310, 350, 485, 576, 643, 953], "sit": [1348, 1378, 1489], "site": [1010, 1366, 1371, 1374, 1378, 1382, 1390, 1411, 1465, 1468], "situat": [61, 67, 201, 203, 638, 985, 1342, 1344, 1345, 1361, 1370, 1374, 1376, 1377, 1441, 1447, 1462, 1463, 1490, 1495, 1501], "six": [1002, 1448], "size": [14, 39, 61, 139, 141, 166, 177, 205, 209, 216, 219, 223, 230, 234, 240, 303, 304, 305, 306, 311, 316, 321, 326, 343, 345, 363, 364, 365, 374, 381, 390, 402, 403, 415, 423, 425, 426, 427, 434, 435, 436, 437, 449, 452, 458, 477, 480, 495, 501, 503, 508, 512, 538, 544, 563, 568, 572, 583, 584, 600, 601, 602, 603, 604, 613, 614, 632, 637, 641, 644, 656, 666, 668, 679, 683, 689, 694, 695, 697, 699, 700, 703, 704, 721, 736, 737, 739, 743, 747, 762, 780, 781, 797, 805, 817, 819, 832, 836, 838, 839, 842, 853, 854, 855, 856, 858, 860, 861, 862, 868, 875, 877, 882, 896, 898, 906, 910, 911, 927, 928, 938, 941, 944, 946, 948, 961, 962, 965, 966, 975, 976, 977, 978, 979, 980, 985, 987, 988, 989, 991, 992, 994, 998, 999, 1000, 1001, 1002, 1016, 1088, 1089, 1093, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1118, 1151, 1245, 1266, 1285, 1286, 1287, 1308, 1310, 1333, 1348, 1350, 1354, 1359, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1385, 1396, 1411, 1424, 1428, 1440, 1445, 1447, 1448, 1454, 1455, 1461, 1462, 1464, 1465, 1467, 1469, 1471, 1473, 1474, 1475, 1478, 1480, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1498, 1500, 1501, 1503, 1506], "skeleton": [1466, 1490], "sketch": 1348, "skew": [1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1354], "skh": 508, "skip": [98, 284, 721, 1348, 1349, 1354, 1359, 1366, 1378, 1415, 1440, 1447, 1459, 1460, 1462, 1489, 1490, 1493, 1494, 1503], "skip_app": 1453, "skip_app_bwd": 1453, "skip_app_fwd": 1453, "skip_canonic": 1460, "skip_ffi_layout_process": 284, "skip_on_devic": 1354, "sklearn": 1414, "slate": 1444, "sleep": [1496, 1503], "sleev": [1342, 1467], "sleight": 1456, "slerp": [1354, 1448], "slice": [10, 14, 132, 136, 139, 209, 217, 362, 363, 364, 365, 366, 367, 381, 387, 431, 434, 458, 459, 460, 461, 462, 463, 464, 474, 501, 570, 619, 625, 654, 700, 750, 751, 754, 776, 841, 864, 872, 877, 900, 902, 921, 950, 951, 976, 998, 999, 1000, 1001, 1067, 1346, 1354, 1356, 1371, 1374, 1378, 1381, 1402, 1415, 1424, 1434, 1444, 1445, 1447, 1461, 1462, 1474, 1480, 1484, 1485, 1487, 1489, 1490, 1491, 1492, 1493], "slice_for_invoc": 1485, "slice_fus": 1378, "slice_i": 1494, "slice_in_dim": [364, 387, 473, 1374], "slice_index": [98, 132], "slice_j": 1494, "slice_p": 1414, "slice_s": [209, 212, 363, 364, 381, 1424, 1494], "slices_for_invoc": 1485, "slices_hbm": 1493, "slices_smem": 1493, "slide": 1449, "slight": [1377, 1501], "slightli": [9, 595, 723, 1052, 1110, 1116, 1117, 1347, 1348, 1368, 1377, 1382, 1385, 1443, 1456, 1457, 1461, 1468, 1479, 1484, 1488, 1494, 1501, 1503], "slogdet": 1354, "slogdetresult": 809, "slope": 533, "slot": [1484, 1490, 1493], "slow": [1118, 1354, 1356, 1362, 1363, 1364, 1366, 1369, 1380, 1385, 1431, 1470, 1480, 1489, 1490, 1492], "slowdown": [1387, 1483], "slower": [109, 132, 397, 1342, 1346, 1354, 1356, 1377, 1424, 1431, 1484, 1487, 1489, 1503], "slowest": [283, 335, 1342, 1424, 1464, 1467, 1484, 1489, 1490], "slurm": [98, 1354, 1381, 1461], "sm": [1354, 1378, 1384, 1483, 1484], "sm3": 1396, "sm_35": 1354, "small": [397, 554, 678, 788, 798, 802, 807, 811, 823, 924, 927, 975, 1019, 1033, 1052, 1078, 1079, 1080, 1081, 1091, 1092, 1101, 1342, 1347, 1348, 1349, 1354, 1356, 1369, 1371, 1381, 1383, 1395, 1396, 1397, 1438, 1441, 1443, 1445, 1447, 1448, 1450, 1456, 1463, 1471, 1474, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1501, 1503], "smaller": [150, 220, 403, 528, 582, 589, 591, 626, 717, 798, 802, 807, 843, 877, 878, 910, 976, 1002, 1071, 1073, 1354, 1359, 1363, 1366, 1370, 1377, 1385, 1387, 1440, 1447, 1456, 1460, 1474, 1478, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1494, 1495], "smallest": [239, 421, 701, 762, 789, 805, 928, 1492], "smallest_norm": 701, "smallest_subnorm": 701, "smallest_valu": [582, 878], "smem": [150, 164, 166, 167, 168, 173, 1354, 1483, 1488, 1493, 1494], "smem_ref": [160, 1484], "smem_ref2": 1484, "smooth": [551, 553, 934, 1342, 1353, 1377, 1467, 1469, 1503], "smooth_imag": 1469, "smoother": 1115, "snapshot": [1010, 1342, 1371, 1467, 1480], "sneak": 1479, "snippet": [136, 1490, 1495, 1496], "so": [65, 66, 67, 69, 75, 77, 80, 84, 98, 112, 126, 135, 160, 197, 252, 253, 285, 291, 296, 343, 344, 345, 378, 381, 413, 415, 434, 436, 447, 448, 458, 459, 460, 461, 462, 463, 464, 488, 495, 570, 578, 604, 632, 677, 701, 723, 732, 763, 783, 807, 834, 846, 895, 905, 911, 917, 923, 926, 944, 949, 957, 1002, 1023, 1064, 1083, 1116, 1117, 1118, 1163, 1164, 1302, 1307, 1333, 1341, 1342, 1345, 1346, 1348, 1349, 1350, 1354, 1356, 1357, 1359, 1361, 1363, 1364, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1385, 1387, 1390, 1395, 1396, 1400, 1403, 1411, 1414, 1431, 1434, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1479, 1480, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506], "societi": 1047, "soft": [239, 548, 1495], "soft_pmap": 1354, "soft_sign": 1377, "softmax": [337, 481, 508, 536, 1023, 1149, 1354, 1377], "softplu": [539, 551, 1377], "softwar": [183, 1341, 1353, 1384, 1441, 1448, 1449, 1450, 1451, 1457, 1465, 1473, 1483, 1484, 1486, 1489, 1493], "sole": [1377, 1445, 1487, 1502], "solidli": 1446, "solut": [240, 356, 357, 410, 797, 798, 1079, 1082, 1089, 1092, 1098, 1099, 1104, 1116, 1117, 1118, 1342, 1370, 1377, 1380, 1444, 1456, 1463, 1479, 1503, 1506], "solv": [356, 357, 408, 797, 815, 1078, 1079, 1082, 1083, 1089, 1091, 1092, 1099, 1116, 1117, 1118, 1342, 1354, 1374, 1377, 1449, 1451, 1463, 1490], "solve_method": 1118, "solve_triangular": 1098, "solver": [240, 356, 357, 797, 810, 1083, 1089, 1090, 1098, 1100, 1104, 1105, 1116, 1117, 1342, 1353, 1354, 1383, 1448, 1449, 1463], "some": [9, 10, 13, 64, 65, 66, 67, 71, 73, 81, 91, 98, 112, 150, 178, 248, 253, 296, 328, 381, 387, 421, 459, 460, 461, 462, 463, 464, 473, 474, 481, 494, 501, 508, 578, 595, 617, 658, 670, 733, 864, 922, 950, 985, 1002, 1016, 1052, 1105, 1306, 1308, 1310, 1333, 1335, 1336, 1338, 1339, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1366, 1368, 1370, 1371, 1374, 1376, 1378, 1381, 1382, 1384, 1385, 1387, 1389, 1390, 1395, 1396, 1403, 1411, 1414, 1415, 1424, 1428, 1435, 1439, 1440, 1441, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1479, 1480, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1506], "some_arrai": [1470, 1500], "some_directori": 1501, "some_funct": 1443, "some_i": 1470, "some_kernel": 1485, "some_plumbing_ref": 1346, "some_x": 1470, "somebodi": 1366, "somehow": 1449, "somelayout": [160, 169], "someon": 1387, "someth": [381, 459, 460, 1342, 1344, 1348, 1349, 1354, 1363, 1366, 1368, 1374, 1376, 1377, 1382, 1384, 1440, 1444, 1447, 1449, 1452, 1453, 1454, 1456, 1462, 1463, 1467, 1468, 1470, 1479, 1480, 1488, 1496, 1501, 1502], "sometim": [131, 356, 1341, 1342, 1349, 1354, 1360, 1364, 1369, 1371, 1374, 1377, 1378, 1379, 1380, 1385, 1428, 1444, 1447, 1448, 1454, 1455, 1459, 1461, 1467, 1474, 1483, 1489, 1492, 1496, 1497, 1501, 1505], "sometru": 1354, "somewhat": [670, 1363, 1366, 1371, 1374, 1378, 1414, 1444, 1462, 1490, 1503], "somewher": [1490, 1496, 1501], "sonnet": 1427, "soon": [65, 66, 1345, 1354, 1356, 1366, 1370, 1382, 1448, 1455, 1468, 1480, 1488, 1493], "sophist": [67, 1414, 1448], "sort": [7, 8, 10, 47, 132, 218, 220, 241, 305, 306, 381, 398, 459, 460, 461, 462, 463, 464, 476, 582, 583, 661, 761, 762, 769, 787, 794, 796, 864, 878, 923, 924, 927, 928, 939, 950, 951, 975, 976, 977, 978, 979, 980, 998, 999, 1000, 1001, 1348, 1349, 1354, 1370, 1371, 1415, 1442, 1452, 1462, 1474], "sort_eig_v": 405, "sort_eigenvalu": [398, 1354], "sorted_indic": 241, "sorted_nod": 1348, "sorter": [47, 924], "sought": 1456, "sound": [1342, 1374, 1449, 1467], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 112, 113, 114, 115, 118, 119, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 276, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 611, 613, 614, 616, 617, 618, 621, 623, 625, 626, 627, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 751, 753, 754, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 828, 831, 832, 833, 834, 835, 836, 838, 839, 840, 842, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 867, 868, 869, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1331, 1332, 1333, 1341, 1342, 1344, 1353, 1354, 1357, 1358, 1363, 1374, 1377, 1378, 1381, 1382, 1387, 1390, 1395, 1396, 1397, 1400, 1402, 1403, 1411, 1415, 1423, 1424, 1434, 1435, 1442, 1444, 1456, 1460, 1461, 1463, 1474, 1475, 1478, 1484, 1487, 1490, 1495, 1507], "source_column": 1378, "source_end_column": 1378, "source_end_lin": 1378, "source_fil": [1356, 1378], "source_index": [431, 432, 433, 1474], "source_info": 258, "source_info_util": [258, 506, 1354, 1390], "source_lin": 1378, "source_path": 1356, "sourceinfo": 258, "sp": 1476, "sp_mat": 213, "space": [178, 289, 295, 493, 572, 578, 684, 698, 701, 731, 733, 761, 819, 831, 958, 1033, 1040, 1065, 1075, 1118, 1154, 1194, 1195, 1285, 1286, 1287, 1331, 1342, 1353, 1354, 1402, 1467, 1472, 1479, 1480, 1482, 1487, 1488, 1489, 1490, 1491, 1492, 1507], "spam": [1354, 1498], "span": [29, 1007, 1008, 1341, 1434, 1440, 1464, 1478, 1484, 1500], "sparingli": 1490, "sparr": 210, "spars": [551, 552, 751, 840, 841, 872, 1354, 1398, 1456, 1486, 1489, 1491, 1496], "sparse_format": [236, 237], "sparse_mask_data": 1494, "sparse_mask_matmul": 1494, "sparse_plu": 552, "sparsecor": 1354, "sparseefficiencyerror": 223, "sparsif": 242, "sparsify_mask": 1494, "sparsiti": [210, 238, 244, 1414, 1484, 1494], "spatial": [291, 292, 343, 344, 345, 346, 347, 531, 1354, 1369, 1424, 1469, 1474], "spatial_dim": 292, "spawn": 1504, "speak": [1377, 1444, 1456, 1488], "spec": [143, 198, 254, 1283, 1365, 1378, 1397, 1402, 1411, 1424, 1434, 1440, 1444, 1445, 1460, 1461, 1470, 1471, 1474, 1478, 1480, 1485, 1490, 1493, 1500], "spec_detect_method": 98, "special": [67, 69, 74, 77, 80, 98, 437, 455, 458, 501, 508, 520, 521, 522, 523, 524, 525, 538, 584, 619, 746, 750, 776, 802, 805, 857, 902, 921, 931, 994, 1118, 1311, 1332, 1342, 1344, 1346, 1348, 1354, 1356, 1359, 1362, 1364, 1366, 1371, 1374, 1376, 1377, 1379, 1390, 1411, 1431, 1435, 1441, 1444, 1445, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1459, 1462, 1465, 1466, 1467, 1472, 1473, 1476, 1478, 1480, 1482, 1484, 1489, 1490, 1492, 1497, 1498, 1503, 1506], "special2": 1445, "special_flatten": [1497, 1506], "special_unflatten": [1497, 1506], "specici": 646, "specif": [62, 67, 91, 97, 98, 178, 236, 237, 239, 255, 283, 337, 343, 344, 346, 360, 379, 380, 424, 432, 433, 454, 489, 505, 563, 568, 569, 654, 704, 836, 838, 842, 853, 854, 856, 858, 860, 861, 862, 883, 885, 887, 888, 891, 896, 916, 918, 946, 948, 987, 994, 1002, 1086, 1104, 1105, 1148, 1333, 1341, 1342, 1344, 1354, 1356, 1357, 1359, 1362, 1366, 1367, 1370, 1371, 1374, 1378, 1379, 1382, 1384, 1387, 1396, 1397, 1403, 1409, 1410, 1411, 1414, 1415, 1424, 1431, 1434, 1439, 1441, 1442, 1444, 1447, 1448, 1449, 1455, 1457, 1463, 1465, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1478, 1479, 1480, 1482, 1483, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1497, 1498, 1500, 1501, 1503, 1506, 1507], "specifi": [9, 10, 12, 22, 57, 67, 73, 75, 91, 98, 126, 130, 139, 145, 166, 167, 178, 180, 206, 211, 216, 217, 219, 220, 223, 228, 229, 230, 232, 233, 234, 236, 237, 241, 245, 248, 254, 255, 277, 281, 282, 283, 289, 290, 292, 293, 295, 296, 305, 306, 331, 344, 345, 349, 360, 361, 362, 364, 365, 367, 372, 373, 375, 380, 387, 397, 411, 412, 415, 423, 442, 443, 444, 445, 447, 448, 449, 450, 452, 454, 457, 458, 471, 474, 475, 478, 484, 485, 486, 489, 503, 504, 505, 506, 508, 533, 543, 554, 564, 569, 570, 571, 572, 580, 581, 583, 584, 586, 592, 595, 602, 604, 616, 617, 618, 619, 620, 625, 626, 627, 632, 633, 634, 637, 640, 641, 644, 645, 646, 648, 649, 652, 654, 655, 658, 659, 660, 661, 667, 669, 670, 671, 672, 673, 677, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 703, 705, 712, 718, 721, 723, 725, 726, 727, 728, 731, 733, 738, 739, 740, 741, 742, 744, 745, 746, 747, 753, 754, 761, 762, 764, 767, 769, 777, 784, 792, 794, 796, 797, 800, 802, 805, 807, 813, 814, 815, 818, 831, 832, 836, 842, 849, 850, 851, 852, 853, 856, 857, 859, 862, 864, 865, 867, 868, 873, 874, 876, 877, 879, 880, 881, 885, 887, 888, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 909, 910, 911, 912, 913, 914, 916, 917, 919, 920, 923, 924, 927, 928, 937, 938, 941, 944, 945, 948, 949, 950, 951, 954, 955, 956, 957, 959, 960, 961, 962, 963, 964, 965, 966, 969, 975, 976, 977, 978, 979, 980, 981, 986, 993, 994, 995, 996, 1002, 1016, 1017, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1061, 1064, 1072, 1074, 1076, 1078, 1079, 1082, 1083, 1085, 1089, 1094, 1097, 1098, 1099, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1216, 1265, 1266, 1271, 1273, 1284, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1303, 1307, 1331, 1333, 1342, 1351, 1354, 1356, 1359, 1361, 1371, 1376, 1377, 1378, 1382, 1390, 1402, 1411, 1414, 1424, 1428, 1434, 1435, 1441, 1444, 1449, 1452, 1453, 1455, 1456, 1457, 1459, 1460, 1461, 1463, 1465, 1469, 1470, 1471, 1473, 1475, 1478, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1503, 1505, 1506, 1507], "spectacular": 1503, "spectral": [1110, 1115, 1354], "spectrum": [686, 687, 692, 1110, 1114, 1115], "speed": [18, 91, 1100, 1341, 1354, 1356, 1364, 1366, 1377, 1380, 1381, 1387, 1411, 1424, 1449, 1459, 1461, 1465, 1473, 1474, 1487, 1489, 1494, 1502, 1506], "speedi": 1492, "speedup": [508, 671, 1443, 1465, 1473, 1489], "spell": 1461, "spend": [1354, 1459, 1487, 1492], "spent": [1381, 1487], "sph_harm": [1354, 1448], "sph_harm_i": [1162, 1354], "spheric": [1120, 1153, 1162], "sphinx": 1444, "spill": [1483, 1484, 1489], "spiral": 1354, "spirit": 1461, "spivak": [1350, 1467], "splash": 1494, "splat": 1484, "split": [131, 132, 276, 277, 281, 282, 303, 343, 458, 512, 590, 666, 671, 719, 743, 804, 815, 984, 992, 1017, 1032, 1037, 1085, 1342, 1350, 1354, 1369, 1370, 1378, 1381, 1431, 1446, 1451, 1454, 1455, 1457, 1464, 1465, 1467, 1470, 1471, 1473, 1475, 1476, 1479, 1483, 1488, 1492, 1493, 1494, 1498, 1500, 1502, 1503], "split_axi": [304, 1474], "split_dict": 1354, "split_half": 1348, "split_list": [1348, 1354], "split_list_check": 1354, "split_merg": 1354, "splitlin": 1348, "splittabl": [1451, 1498], "spmd": [198, 305, 306, 493, 1002, 1348, 1354, 1379, 1381, 1402, 1411, 1445, 1484, 1488, 1490, 1500, 1501, 1503], "spmd_axis_nam": [1333, 1354], "spmd_pipelin": 1474, "spoiler": 1447, "spong": 1356, "spot": [1446, 1485], "spread": [1369, 1411, 1503], "spuriou": [1356, 1374], "sq_err": 1474, "sqeez": 944, "sqrt": [298, 331, 457, 508, 510, 531, 553, 554, 559, 574, 576, 621, 640, 745, 943, 1042, 1046, 1059, 1127, 1128, 1148, 1155, 1162, 1255, 1257, 1267, 1268, 1271, 1273, 1342, 1350, 1361, 1377, 1378, 1463, 1464, 1467, 1471, 1474, 1503, 1506], "sqrt_a": 1100, "sqrtm": 1354, "squar": [83, 239, 306, 331, 395, 397, 398, 399, 405, 408, 457, 478, 481, 508, 528, 621, 656, 680, 700, 747, 789, 793, 797, 798, 801, 807, 883, 887, 891, 918, 942, 1084, 1089, 1100, 1118, 1188, 1189, 1190, 1191, 1192, 1193, 1342, 1354, 1378, 1390, 1441, 1448, 1463, 1467, 1471, 1502], "square_add_lax": 1390, "square_add_numpi": 1390, "square_add_prim": 1390, "squareplu": [1354, 1377], "squash": 1357, "squeez": [139, 219, 436, 452, 602, 677, 911, 1354, 1485, 1487, 1489], "squeeze_p": 1414, "sram": [1487, 1488, 1493], "src": [95, 160, 166, 167, 388, 1348, 1474, 1490], "src_ref": 1490, "sreg": 1493, "ssh": [1461, 1496], "stabil": [248, 1000, 1001, 1118, 1153, 1345, 1354, 1356, 1371, 1378, 1380, 1396, 1444, 1450], "stabl": [8, 51, 356, 454, 475, 534, 583, 745, 938, 1116, 1342, 1345, 1354, 1366, 1371, 1415, 1424, 1448, 1449, 1450, 1457, 1463, 1471], "stablehlo": [298, 301, 313, 321, 322, 323, 324, 325, 331, 332, 334, 336, 340, 348, 349, 359, 360, 368, 372, 373, 375, 377, 382, 383, 386, 389, 391, 392, 411, 412, 414, 416, 417, 418, 419, 420, 424, 429, 430, 439, 451, 456, 457, 467, 468, 469, 470, 471, 478, 482, 484, 485, 1341, 1344, 1348, 1354, 1356, 1371, 1374, 1378, 1385, 1415, 1424, 1435, 1442, 1445, 1457, 1460, 1480], "stack": [81, 137, 303, 415, 458, 506, 614, 619, 625, 627, 633, 634, 640, 645, 664, 667, 744, 753, 792, 800, 803, 818, 984, 993, 1010, 1342, 1348, 1350, 1351, 1354, 1356, 1360, 1363, 1367, 1370, 1378, 1382, 1383, 1385, 1390, 1414, 1445, 1449, 1451, 1454, 1462, 1468, 1474, 1475, 1478, 1484, 1490, 1494, 1498], "stackedbias": 1468, "stackedweight": 1468, "stackless": [1349, 1354], "stackoverflow": 1352, "stage": [68, 81, 82, 84, 112, 118, 119, 126, 150, 168, 183, 196, 197, 248, 286, 424, 505, 506, 1344, 1354, 1356, 1358, 1360, 1361, 1363, 1366, 1368, 1370, 1372, 1374, 1381, 1382, 1385, 1388, 1391, 1445, 1446, 1447, 1449, 1454, 1464, 1466, 1468, 1470, 1471, 1474, 1479, 1487, 1500], "stage_param": 1474, "stageabl": 82, "stagger": 1479, "staginginterpret": 1349, "stai": [1346, 1364, 1377, 1447, 1483, 1497, 1506], "staircas": 1396, "stakehold": 1444, "stale": [1356, 1386, 1484, 1487], "stall": [1483, 1487, 1492], "stand": [239, 255, 1374, 1377, 1441, 1444, 1445, 1456, 1460, 1475, 1498], "standalon": [1353, 1354, 1366, 1496], "standard": [31, 53, 67, 69, 77, 80, 94, 95, 113, 220, 239, 289, 290, 296, 297, 494, 495, 503, 526, 529, 531, 640, 645, 649, 672, 701, 725, 750, 753, 777, 783, 790, 849, 851, 852, 860, 862, 873, 921, 946, 987, 995, 1002, 1033, 1040, 1042, 1046, 1057, 1082, 1162, 1266, 1271, 1273, 1284, 1304, 1331, 1332, 1333, 1342, 1350, 1354, 1356, 1357, 1362, 1363, 1366, 1370, 1377, 1378, 1379, 1403, 1411, 1414, 1424, 1444, 1448, 1449, 1452, 1455, 1456, 1460, 1463, 1467, 1475, 1480, 1483, 1484, 1490, 1493, 1494, 1495, 1503, 1504, 1505], "standard_abstract_ev": 1354, "standard_insert_pvari": 1460, "standard_naryop": 1354, "standard_primit": 1354, "standard_unop": 1354, "standin": 1379, "standpoint": 1444, "starmap": 1503, "start": [71, 141, 152, 153, 217, 255, 267, 296, 335, 362, 363, 364, 366, 367, 394, 398, 473, 474, 572, 731, 811, 819, 831, 841, 872, 902, 917, 982, 1012, 1013, 1014, 1015, 1116, 1117, 1118, 1307, 1337, 1342, 1348, 1349, 1354, 1356, 1359, 1366, 1367, 1371, 1376, 1378, 1380, 1381, 1383, 1385, 1387, 1389, 1390, 1415, 1423, 1424, 1428, 1441, 1442, 1444, 1446, 1447, 1454, 1455, 1456, 1461, 1462, 1463, 1469, 1470, 1471, 1475, 1479, 1480, 1484, 1487, 1488, 1489, 1490, 1493, 1494, 1496, 1500, 1501, 1502, 1503], "start_dimens": 335, "start_idx": 1485, "start_index": [364, 367, 474], "start_index_map": [381, 1424], "start_indic": [209, 212, 217, 363, 366, 381, 459, 461, 462, 463, 464, 473, 1424, 1444, 1494], "start_indices_batching_dim": 1424, "start_serv": [1354, 1496], "start_tim": [1465, 1473], "start_trac": [1014, 1354, 1381, 1496], "starter": 1456, "startup": [1354, 1462, 1487], "stash": [1346, 1348, 1449], "stash_grad": 1346, "stash_grads_bwd": 1346, "stash_grads_fwd": 1346, "stat": [1354, 1469, 1476, 1496], "stat_length": 877, "state": [65, 66, 87, 88, 90, 91, 92, 109, 110, 111, 159, 162, 163, 168, 311, 455, 458, 499, 556, 913, 997, 1010, 1065, 1307, 1337, 1342, 1343, 1346, 1348, 1352, 1353, 1354, 1376, 1377, 1378, 1384, 1389, 1396, 1400, 1431, 1444, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1462, 1474, 1475, 1476, 1478, 1480, 1481, 1484, 1487, 1490], "stateful_method": 1502, "statefulclass": 1502, "stateless": [454, 1370, 1478, 1502], "stateless_method": 1502, "statelessclass": 1502, "statement": [67, 74, 925, 991, 1363, 1370, 1376, 1377, 1440, 1444, 1454, 1456, 1460, 1475, 1501, 1503], "static": [63, 67, 77, 80, 113, 126, 127, 141, 209, 254, 267, 296, 363, 364, 378, 389, 430, 458, 488, 582, 584, 604, 632, 654, 659, 679, 703, 723, 762, 832, 868, 878, 885, 887, 888, 891, 910, 920, 927, 956, 975, 976, 977, 978, 979, 980, 998, 999, 1000, 1001, 1002, 1283, 1302, 1307, 1308, 1309, 1310, 1311, 1312, 1354, 1357, 1359, 1360, 1363, 1370, 1374, 1378, 1379, 1402, 1411, 1428, 1439, 1441, 1443, 1445, 1448, 1462, 1472, 1474, 1483, 1488, 1493, 1494, 1497, 1506], "static_argnam": [296, 305, 306, 604, 654, 868, 910, 927, 975, 976, 1312, 1354, 1359, 1370, 1381, 1411, 1459, 1480, 1492, 1495, 1506], "static_argnum": [67, 126, 127, 296, 503, 998, 999, 1000, 1001, 1312, 1344, 1354, 1359, 1370, 1374, 1377, 1378, 1390, 1402, 1411, 1443, 1449, 1454, 1459, 1460, 1475, 1476, 1494, 1506], "static_assert": 1378, "static_broadcast_argnum": 1354, "static_broadcasted_argnum": [1002, 1312, 1377], "static_cast": 348, "staticmethod": 1348, "staticscalar": 56, "staticstr": 1312, "statist": [877, 1032, 1346, 1349, 1354, 1448, 1471, 1502, 1503], "statu": [1104, 1400, 1452, 1461, 1498], "stax": [1354, 1395, 1451], "std": [554, 701, 860, 987, 1342, 1378, 1459, 1464, 1467, 1475], "stddev": [526, 529], "stdin": 1377, "stdout": [1003, 1360, 1363], "steadi": 1487, "stem": [1346, 1377, 1451], "step": [150, 168, 403, 415, 572, 731, 738, 819, 831, 841, 872, 891, 902, 985, 1007, 1094, 1116, 1117, 1285, 1286, 1287, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1344, 1348, 1354, 1357, 1363, 1366, 1368, 1369, 1371, 1374, 1377, 1378, 1381, 1396, 1424, 1442, 1446, 1447, 1449, 1451, 1463, 1464, 1467, 1474, 1483, 1484, 1487, 1489, 1493, 1496, 1502], "step_num": 1007, "step_siz": [1396, 1464, 1465, 1473, 1476], "steptraceannot": 1354, "steptracecontext": 1354, "sterbenz": 1342, "stft": [1110, 1113, 1115, 1354], "stick": [1448, 1452, 1461], "sticki": [668, 1348, 1377], "still": [97, 170, 198, 766, 775, 1002, 1305, 1342, 1344, 1346, 1348, 1354, 1356, 1359, 1361, 1366, 1368, 1369, 1371, 1374, 1377, 1378, 1380, 1381, 1384, 1385, 1402, 1411, 1431, 1440, 1442, 1443, 1446, 1447, 1451, 1454, 1455, 1456, 1457, 1459, 1462, 1463, 1467, 1470, 1471, 1475, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1495, 1496, 1500, 1501, 1505], "stochast": [1023, 1396, 1498, 1503, 1506], "stop": [481, 572, 731, 819, 831, 841, 872, 902, 1014, 1116, 1117, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1359, 1371, 1381, 1456, 1484], "stop_dimens": 335, "stop_gradi": 1346, "stop_serv": 1496, "stop_trac": [1013, 1354, 1381, 1496], "storag": [223, 1354, 1384, 1414, 1424, 1464, 1471, 1495, 1500, 1503], "store": [67, 69, 80, 150, 161, 167, 182, 199, 223, 226, 267, 296, 495, 646, 820, 922, 923, 1002, 1116, 1117, 1118, 1308, 1310, 1342, 1348, 1354, 1370, 1374, 1382, 1385, 1396, 1411, 1414, 1415, 1448, 1461, 1463, 1464, 1466, 1467, 1468, 1471, 1472, 1474, 1475, 1478, 1483, 1485, 1487, 1489, 1490, 1493, 1494, 1495, 1497, 1500, 1503, 1506], "stori": [1342, 1378, 1467, 1480], "storm": 1480, "str": [11, 26, 42, 45, 47, 56, 76, 79, 81, 84, 89, 93, 96, 98, 118, 133, 138, 143, 150, 166, 178, 194, 196, 212, 223, 236, 237, 245, 246, 248, 252, 253, 254, 255, 258, 260, 267, 276, 283, 284, 286, 287, 291, 292, 296, 337, 341, 343, 344, 345, 346, 347, 376, 381, 449, 459, 460, 461, 462, 463, 464, 492, 493, 497, 498, 504, 505, 506, 543, 586, 589, 592, 625, 637, 638, 641, 661, 664, 670, 671, 672, 673, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 726, 727, 728, 731, 753, 761, 767, 794, 796, 800, 805, 808, 809, 818, 819, 820, 831, 833, 840, 857, 859, 873, 874, 876, 877, 879, 899, 900, 901, 905, 906, 911, 922, 923, 924, 950, 951, 954, 963, 969, 981, 988, 989, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016, 1019, 1023, 1026, 1036, 1045, 1069, 1071, 1072, 1073, 1074, 1083, 1085, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1245, 1265, 1266, 1288, 1302, 1306, 1307, 1312, 1330, 1334, 1347, 1348, 1349, 1354, 1356, 1363, 1370, 1382, 1390, 1411, 1415, 1424, 1434, 1435, 1460, 1464, 1468, 1472, 1474, 1476, 1483, 1494, 1498, 1503, 1506], "str_eqn_compact": 1354, "str_short": 1348, "straight_through_f": 1342, "straightforward": [381, 1348, 1350, 1376, 1377, 1378, 1448, 1451, 1452, 1456, 1467, 1480, 1484, 1503], "strang": [1444, 1456], "strategi": [67, 1342, 1369, 1374, 1382, 1387, 1424, 1442, 1450, 1459, 1467, 1468, 1471, 1474, 1483, 1487, 1488, 1490, 1500, 1503], "strawperson": 1447, "stream": [57, 1032, 1369, 1378, 1442, 1451, 1455, 1483, 1484, 1489, 1496, 1498], "stream_executor": [1354, 1496], "strength": [1360, 1444, 1487], "stress": 1348, "stretch": 1449, "strict": [489, 632, 679, 1356, 1442, 1444, 1445, 1447, 1451, 1460], "stricter": [1444, 1460], "strictest": 1444, "strictli": [150, 421, 1356, 1365, 1374, 1378, 1381, 1459], "stride": [141, 217, 341, 343, 344, 345, 346, 347, 449, 473, 474, 1397, 1444], "strike": 1456, "string": [10, 84, 93, 96, 98, 118, 119, 120, 143, 178, 223, 236, 237, 250, 251, 252, 253, 254, 255, 283, 291, 292, 296, 341, 342, 343, 344, 345, 347, 449, 498, 508, 589, 591, 619, 624, 668, 670, 671, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 721, 726, 761, 767, 769, 777, 800, 818, 820, 864, 877, 887, 897, 899, 902, 922, 923, 963, 1002, 1003, 1005, 1006, 1010, 1016, 1017, 1037, 1071, 1072, 1073, 1074, 1209, 1306, 1312, 1342, 1345, 1348, 1349, 1354, 1356, 1363, 1366, 1371, 1374, 1378, 1402, 1411, 1415, 1424, 1431, 1434, 1435, 1439, 1444, 1453, 1463, 1495, 1499, 1503, 1505, 1506], "stringio": 1348, "strip": [918, 1349, 1366, 1378, 1444, 1470], "strip_zero": [918, 1354], "strive": [1341, 1364, 1475, 1498], "strong": [1448, 1470], "strongli": [730, 897, 1345, 1356, 1384, 1505], "strorbytessequ": 1302, "strsequenc": 1302, "struct": [668, 1348], "structur": [64, 71, 73, 80, 126, 127, 130, 178, 198, 254, 288, 290, 296, 297, 311, 356, 357, 378, 422, 449, 458, 483, 488, 494, 503, 668, 1016, 1116, 1117, 1118, 1283, 1290, 1291, 1292, 1293, 1295, 1296, 1300, 1301, 1323, 1326, 1327, 1328, 1333, 1341, 1342, 1344, 1349, 1350, 1354, 1374, 1377, 1378, 1387, 1396, 1403, 1411, 1415, 1424, 1435, 1437, 1438, 1441, 1444, 1446, 1448, 1458, 1460, 1463, 1466, 1467, 1482, 1487, 1490, 1492, 1494, 1497, 1500, 1503, 1506], "stub": 1354, "student": [1055, 1267, 1268], "studi": [1342, 1467, 1503], "studio": [1357, 1366, 1384], "stuff": [1366, 1378], "style": [298, 301, 321, 348, 359, 381, 416, 417, 418, 429, 442, 443, 444, 445, 447, 448, 450, 451, 459, 460, 482, 595, 616, 617, 618, 788, 791, 797, 808, 810, 811, 882, 899, 900, 905, 906, 911, 991, 997, 1017, 1064, 1067, 1068, 1069, 1075, 1080, 1081, 1082, 1089, 1090, 1095, 1097, 1098, 1101, 1346, 1349, 1354, 1356, 1359, 1368, 1383, 1431, 1444, 1446, 1449, 1456, 1462, 1470, 1475, 1480, 1488, 1498], "stype": 1080, "sub": [501, 505, 590, 666, 743, 941, 959, 960, 961, 962, 964, 965, 966, 992, 1356, 1374, 1382, 1385, 1441, 1455, 1460, 1468, 1487, 1489, 1497, 1506], "sub_kei": 1476, "subarrai": [387, 950], "subclass": [62, 96, 498, 1348, 1349, 1444, 1455, 1506], "subcommand": 1354, "subcomput": 505, "subcub": [135, 136], "subdiagon": [399, 409, 1087], "subdirectori": [1366, 1457], "subdivid": 668, "subdivis": 1484, "subdtyp": 1061, "subexpress": [67, 422, 1354, 1447, 1451, 1471], "subfunct": [1359, 1460], "subgradi": 1396, "subject": [198, 202, 248, 345, 447, 448, 1414, 1431, 1480, 1489], "subkei": [1342, 1350, 1431, 1454, 1455, 1467, 1475, 1498], "subkey1": [1342, 1467], "subkey2": [1342, 1467], "sublan": 1489, "sublanguag": 1454, "sublevel": 1354, "submesh": 131, "submiss": 1443, "submit": [1357, 1366, 1387], "submodul": [285, 1354, 1377, 1378, 1439, 1444, 1448, 1457, 1478], "subnorm": [701, 1462], "subpackag": 1506, "subplot": [1456, 1469], "subproblem": 1487, "subroutin": 1451, "subscrib": 1496, "subscriber_": 1496, "subscript": [670, 671, 1484], "subsect": 1484, "subsequ": [1295, 1344, 1354, 1366, 1376, 1377, 1382, 1442, 1459, 1462, 1468, 1487, 1489, 1490, 1495, 1502], "subset": [248, 305, 306, 508, 1002, 1342, 1354, 1371, 1378, 1444, 1445, 1461, 1474, 1487, 1489], "subset_by_index": [398, 406, 811], "subspac": [238, 239, 244, 1118], "substanti": [1366, 1487], "substitut": 848, "substitute_vars_in_output_ti": 1354, "substrat": 1480, "subsum": [1354, 1440, 1447, 1456], "subsystem": 1483, "subtl": [1354, 1359, 1377, 1442, 1444, 1452, 1455, 1479, 1484, 1487, 1490], "subtleti": [1349, 1370], "subtli": 1377, "subtract": [10, 482, 864, 1374, 1471], "subtrahend": 890, "subtre": [198, 1283, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1396, 1411, 1503], "subtree_def": 1396, "subtyp": [606, 784, 914, 1302], "subunit": [1484, 1489], "subval": 1354, "succe": [148, 1374, 1390], "succeed": 1104, "success": [1021, 1035, 1104, 1378, 1448, 1480, 1502], "successful": 148, "successfulli": [98, 1356, 1384, 1461, 1472, 1490], "succinctli": [677, 1390, 1444], "sudo": [1354, 1496], "suffer": 1474, "suffic": [1342, 1346, 1446, 1463], "suffici": [397, 404, 1342, 1354, 1356, 1384, 1444, 1457, 1463, 1469, 1479, 1484, 1487, 1490, 1492], "suffix": [1424, 1489, 1504], "sugar": [991, 1354, 1462], "suggest": [378, 730, 1354, 1387, 1402, 1444, 1448, 1449, 1470, 1479, 1495], "suit": [1354, 1378, 1384, 1444, 1448, 1484, 1503, 1505], "suitabl": [98, 131, 957, 1078, 1091, 1354, 1378, 1444, 1448, 1484], "sum": [20, 58, 112, 199, 210, 215, 220, 301, 311, 355, 435, 447, 448, 460, 477, 538, 549, 570, 571, 602, 604, 649, 651, 660, 669, 670, 739, 740, 742, 798, 805, 813, 826, 836, 838, 842, 852, 853, 854, 856, 858, 861, 884, 886, 887, 889, 890, 896, 910, 954, 956, 958, 969, 1001, 1002, 1075, 1148, 1151, 1160, 1342, 1346, 1348, 1349, 1350, 1351, 1354, 1370, 1374, 1378, 1382, 1414, 1439, 1441, 1448, 1449, 1461, 1462, 1463, 1464, 1467, 1468, 1470, 1471, 1474, 1475, 1476, 1487, 1489, 1492, 1494, 1498, 1500], "sum_": [537, 645, 746, 1028, 1141, 1142, 1143, 1145, 1148, 1165, 1166, 1262, 1378], "sum_i": [538, 1151, 1246, 1247], "sum_in_shard": 1500, "sum_j": [536, 549, 637, 641, 1149, 1160], "sum_k": 1492, "sum_logist": 1475, "sum_of_posit": 1370, "summar": [1342, 1348, 1366, 1431, 1444, 1447, 1456, 1467, 1471, 1503], "summari": [1360, 1361, 1362, 1363, 1377, 1384, 1431, 1435, 1448, 1457, 1458, 1470, 1474, 1500], "summat": [448, 670, 875, 1414, 1500], "summed_chunk": 1474, "summer": [1342, 1467], "sumpool": 1397, "supercomput": 1489, "superdiagon": 409, "superset": 257, "supplant": 1496, "supplement": 1480, "suppli": [76, 79, 882, 1116, 1117, 1162, 1344, 1353, 1448, 1470, 1487, 1493, 1500, 1503], "support": [72, 74, 98, 101, 143, 206, 209, 222, 239, 240, 252, 253, 283, 286, 290, 301, 337, 359, 363, 378, 404, 418, 459, 460, 482, 494, 501, 508, 543, 544, 562, 583, 586, 592, 605, 610, 612, 620, 621, 661, 670, 671, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 720, 738, 745, 746, 769, 772, 773, 801, 808, 827, 829, 830, 840, 847, 877, 892, 899, 905, 911, 922, 931, 938, 947, 982, 991, 998, 999, 1000, 1001, 1002, 1071, 1072, 1073, 1074, 1083, 1093, 1094, 1095, 1100, 1103, 1105, 1107, 1109, 1111, 1127, 1128, 1129, 1134, 1135, 1136, 1139, 1157, 1245, 1248, 1249, 1265, 1266, 1334, 1341, 1342, 1348, 1351, 1352, 1354, 1355, 1356, 1361, 1366, 1370, 1372, 1376, 1377, 1381, 1385, 1390, 1411, 1412, 1414, 1415, 1424, 1428, 1431, 1435, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1462, 1467, 1471, 1475, 1477, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1505, 1506, 1507], "supported_dtyp": 1354, "supported_lhs_typ": 1424, "supported_output_typ": 1424, "supported_rhs_typ": 1424, "supported_shard": 1402, "supportsdtyp": [586, 592, 664, 670, 672, 673, 727, 728, 731, 753, 819, 831, 833, 873, 874, 954, 988, 989, 995, 996, 1330], "supportsjaxarrai": 1452, "supportsndim": 865, "supportss": 937, "supportsshap": [929, 937, 962, 966], "suppos": [98, 435, 804, 1344, 1349, 1351, 1369, 1376, 1459, 1470, 1484, 1487, 1488, 1490, 1492, 1497, 1502, 1503], "suppress": [337, 567, 573, 574, 575, 576, 577, 578, 579, 589, 591, 603, 613, 621, 623, 642, 643, 675, 678, 682, 683, 685, 687, 688, 689, 690, 693, 694, 695, 696, 697, 699, 702, 714, 731, 733, 736, 737, 745, 780, 822, 831, 860, 862, 887, 933, 934, 936, 942, 946, 952, 953, 968, 987, 1071, 1072, 1073, 1074, 1087, 1094, 1096, 1100, 1111, 1266, 1356, 1377, 1447], "suppress_smal": [589, 591], "supremum": 1456, "sure": [1026, 1342, 1350, 1356, 1357, 1366, 1369, 1377, 1381, 1384, 1387, 1390, 1411, 1447, 1449, 1459, 1464, 1467, 1479, 1487, 1490, 1492, 1496, 1497, 1501, 1506], "surfac": [1444, 1445, 1448, 1480], "surnam": 668, "surpris": [363, 1347, 1363, 1377, 1378, 1382, 1447, 1456, 1459, 1462, 1468, 1474, 1484, 1499], "surprisingli": [1347, 1451], "surround": [250, 251, 1341], "survei": 1469, "surviv": [1173, 1175, 1181, 1184, 1187, 1191, 1193, 1199, 1201, 1202, 1206, 1208, 1225, 1228, 1232, 1235, 1240, 1244, 1253, 1256, 1259, 1272, 1274], "sussman": [1350, 1467], "sustain": 1448, "svc": 1461, "svd": [394, 802, 812, 1045, 1094, 1354], "svdalgorithm": 406, "svdresult": 811, "svg": 1484, "swap": [55, 187, 346, 401, 402, 437, 846, 917, 949, 957, 1162, 1346, 1348, 1455, 1474, 1483, 1503], "swap_thread_local_state_disable_jit": 1460, "swapax": [846, 917, 957, 1492], "sweep": 1492, "swiglu": 1445, "swish": [514, 515, 547], "swish2": 1445, "switch": [424, 625, 881, 887, 1342, 1354, 1359, 1366, 1369, 1377, 1382, 1414, 1441, 1443, 1445, 1447, 1450, 1455, 1462, 1464, 1467, 1468, 1479, 1484], "swizzl": [156, 1483, 1484], "swizzle_byt": 1484, "swizzle_elem": [1483, 1484], "swizzle_in_byt": 1484, "swizzletransform": [1483, 1484], "sy": [1347, 1354, 1461], "sylvest": 1100, "sym": 1098, "sym_po": 1354, "symamd": 240, "symbol": [77, 80, 245, 249, 254, 255, 1141, 1142, 1157, 1354, 1356, 1366, 1446, 1449, 1452, 1496], "symbol_t": [1348, 1390], "symbolic_args_spec": [1354, 1374], "symbolic_constraint": 1354, "symbolic_equal_dim": 1354, "symbolic_scop": 1354, "symbolic_shap": [254, 1354, 1374], "symbolic_zero": [77, 80], "symbolicscop": [254, 255, 1374], "symbolt": [1348, 1390], "symmetr": [356, 395, 398, 407, 409, 508, 641, 788, 793, 794, 795, 796, 877, 1083, 1093, 1097, 1098, 1118, 1342, 1354, 1467, 1490], "symmetri": [687, 692, 1118], "symmetrize_input": [395, 398, 788, 794, 796], "symmetrize_output": 407, "sympi": 1465, "symptom": [1490, 1501], "symrcm": 240, "sync": [1357, 1387, 1479, 1490, 1497, 1503, 1506], "sync_copi": 1493, "synchron": [150, 160, 178, 193, 1354, 1363, 1376, 1377, 1406, 1454, 1478, 1482, 1483, 1496, 1498, 1503], "synergist": 1471, "synonym": 1461, "syntact": [991, 1349, 1354, 1381, 1462], "syntax": [10, 84, 362, 364, 381, 459, 460, 461, 462, 463, 464, 473, 750, 751, 840, 864, 882, 899, 921, 950, 951, 1064, 1067, 1068, 1069, 1302, 1346, 1348, 1356, 1441, 1444, 1447, 1460, 1475, 1480, 1483, 1484, 1493], "synthet": 1469, "system": [81, 90, 98, 99, 240, 357, 410, 543, 810, 1010, 1079, 1091, 1092, 1098, 1099, 1116, 1117, 1118, 1341, 1342, 1348, 1350, 1354, 1356, 1366, 1371, 1374, 1377, 1378, 1384, 1431, 1442, 1444, 1446, 1449, 1450, 1456, 1461, 1462, 1463, 1466, 1467, 1470, 1471, 1474, 1480, 1495, 1497, 1501, 1503, 1504, 1505], "sz": [1445, 1474], "t": [67, 68, 74, 76, 77, 82, 83, 84, 95, 98, 118, 126, 131, 132, 150, 168, 239, 242, 252, 253, 306, 337, 396, 402, 407, 458, 481, 488, 508, 677, 788, 808, 811, 834, 846, 905, 911, 917, 944, 946, 949, 957, 987, 1002, 1008, 1009, 1013, 1014, 1015, 1045, 1080, 1082, 1087, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1113, 1114, 1123, 1127, 1128, 1130, 1131, 1133, 1135, 1136, 1137, 1138, 1155, 1161, 1248, 1249, 1297, 1298, 1302, 1304, 1308, 1310, 1321, 1322, 1332, 1342, 1346, 1347, 1348, 1349, 1350, 1354, 1357, 1359, 1360, 1361, 1363, 1366, 1369, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1387, 1390, 1414, 1424, 1440, 1442, 1443, 1446, 1447, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1480, 1481, 1483, 1484, 1487, 1488, 1492, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1503, 1506], "t0": 1442, "t1": [1348, 1442, 1456], "t10k": 1465, "t2": [1348, 1456], "t2v": 1348, "t5x": 1443, "t_jaxpr1": 1348, "t_jaxpr2": 1348, "t_new": 1371, "t_nre": 1348, "t_out_uk": 1348, "t_ref": 1348, "ta": 1449, "tab": [1367, 1496], "tabl": [723, 1360, 1382, 1384, 1445, 1447, 1466, 1468, 1470, 1474, 1493, 1500, 1505], "tag": [276, 1348, 1366, 1371], "taggeddualnumb": 1349, "tagless": 1348, "take": [67, 69, 78, 80, 83, 98, 119, 126, 127, 136, 198, 238, 244, 248, 253, 268, 357, 408, 500, 501, 504, 508, 541, 542, 543, 570, 582, 659, 723, 725, 790, 800, 805, 816, 818, 832, 878, 899, 900, 951, 956, 976, 991, 1015, 1086, 1148, 1209, 1283, 1284, 1295, 1296, 1308, 1310, 1341, 1344, 1345, 1346, 1348, 1349, 1354, 1359, 1366, 1367, 1369, 1371, 1374, 1376, 1377, 1378, 1379, 1382, 1385, 1390, 1395, 1397, 1400, 1402, 1415, 1427, 1428, 1441, 1442, 1444, 1445, 1447, 1448, 1452, 1453, 1456, 1459, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1478, 1479, 1480, 1483, 1485, 1487, 1488, 1489, 1490, 1492, 1496, 1497, 1499, 1500, 1503, 1504, 1506], "take_along_axi": [583, 900, 950, 1354], "taken": [362, 364, 365, 367, 381, 451, 466, 477, 722, 724, 818, 994, 1295, 1344, 1354, 1367, 1378, 1480, 1483, 1497, 1498], "talk": [1442, 1489, 1493], "tall": [1342, 1467], "tan": [312, 313, 337, 349, 471, 577, 578, 642, 933, 953, 1390], "tandem": 1377, "tangent": [67, 76, 77, 78, 184, 297, 299, 300, 309, 310, 312, 313, 314, 337, 349, 350, 357, 471, 472, 484, 485, 495, 573, 574, 575, 576, 577, 578, 579, 642, 643, 933, 936, 952, 953, 1342, 1348, 1349, 1354, 1376, 1378, 1382, 1390, 1449, 1463, 1467, 1468, 1470], "tangent_out": [76, 77, 1342, 1348, 1463], "tangent_pvals_in": 1348, "tangent_solv": 357, "tangenti": 1348, "tangentof": 1470, "tangents_flat": 1348, "tangents_in": 1348, "tangents_in_flat": 1348, "tangents_out": [297, 1348], "tangents_out_flat": 1348, "tanh": [113, 184, 289, 314, 350, 472, 510, 516, 539, 579, 643, 936, 1342, 1350, 1354, 1414, 1466, 1467, 1471, 1489], "tanh_p": 1466, "tao": [1342, 1463], "tap": 1354, "taper": [1110, 1113, 1114, 1115], "tar": 1366, "tarbal": 1366, "target": [61, 69, 170, 205, 215, 283, 284, 286, 287, 305, 306, 327, 348, 501, 508, 1334, 1341, 1342, 1344, 1350, 1354, 1366, 1369, 1371, 1378, 1379, 1381, 1408, 1415, 1445, 1447, 1456, 1461, 1462, 1464, 1465, 1467, 1473, 1474, 1479, 1480, 1484, 1490], "target_class": [1465, 1473], "target_cpu_featur": 1354, "target_devic": 1490, "target_id": 1503, "target_info": 1378, "target_nam": [283, 1378, 1415], "target_shap": 1348, "task": [1348, 1356, 1381, 1449, 1461, 1483, 1489, 1495, 1496, 1503], "tast": 1475, "tau": [399, 400, 409], "taylor": 1403, "tb": [1366, 1390, 1496], "tbp": 1496, "tc": 1096, "tcgen05_commit": 1484, "tcgen05_mma": 1484, "td": 1342, "td_loss": 1342, "td_updat": 1342, "teach": 1377, "team": [1341, 1384, 1444, 1448, 1450, 1454, 1501], "teardown": 1487, "technic": [311, 1341, 1442, 1457, 1461, 1474, 1484, 1492], "techniqu": [1148, 1342, 1379, 1381, 1445, 1467, 1471, 1475, 1483, 1484, 1487, 1491, 1500], "technologi": [1341, 1503], "ted": [83, 1348, 1362, 1442, 1464, 1492], "tediou": [1349, 1378, 1456], "tee": 1496, "teeth": [1360, 1462], "telemetri": 1503, "tell": [505, 506, 1349, 1359, 1370, 1378, 1381, 1385, 1400, 1440, 1447, 1454, 1459, 1462, 1470, 1479, 1480, 1490, 1492, 1494, 1497, 1501], "temp": [1441, 1471], "temp_size_in_byt": 1471, "tempfil": [922, 923], "templat": [1378, 1461, 1491, 1493], "tempor": 1342, "temporari": [178, 1346, 1354, 1356, 1387, 1444, 1454, 1459, 1471, 1475, 1478, 1483, 1496, 1501, 1503], "temporarili": [128, 129, 1346, 1348, 1349, 1354, 1366, 1377, 1381, 1440, 1445, 1454, 1470, 1493, 1501], "temporaryfil": [922, 923], "tempt": [578, 1349, 1377, 1448], "ten": [1377, 1484, 1489], "tend": [924, 1364, 1377, 1382, 1448, 1468, 1484], "tendenc": [1456, 1462], "tensor": [100, 501, 508, 531, 540, 543, 670, 720, 753, 799, 813, 814, 815, 817, 833, 954, 1344, 1371, 1378, 1379, 1390, 1465, 1469, 1471, 1473, 1483, 1484, 1490], "tensorboard": [505, 506, 1007, 1009, 1012, 1013, 1015, 1354, 1367], "tensorboard_plugin_profil": 1496, "tensorcor": [148, 1482, 1483, 1488, 1493], "tensordot": [360, 670, 753, 799, 814, 815, 817, 833, 1342, 1467], "tensorfloat32": [91, 1356, 1424], "tensorflow": [75, 343, 344, 346, 505, 506, 534, 998, 999, 1000, 1001, 1012, 1343, 1354, 1369, 1371, 1372, 1377, 1380, 1383, 1469, 1496], "tensorflow_dataset": 1473, "tensorflow_prob": 1448, "tensorinv": 815, "tensorsolv": 814, "term": [312, 313, 373, 378, 415, 424, 484, 495, 572, 804, 811, 834, 846, 881, 905, 911, 925, 949, 950, 951, 957, 991, 994, 1121, 1312, 1342, 1348, 1349, 1354, 1359, 1366, 1369, 1370, 1371, 1376, 1390, 1403, 1431, 1441, 1444, 1446, 1448, 1449, 1450, 1451, 1452, 1454, 1456, 1459, 1460, 1461, 1463, 1467, 1474, 1475, 1484, 1487, 1488, 1489, 1490, 1494, 1497, 1503], "termcolor": [1387, 1464], "termin": [403, 1094, 1105, 1118], "terminologi": [1348, 1371, 1480], "test": [3, 4, 563, 568, 769, 922, 1040, 1305, 1342, 1345, 1348, 1354, 1371, 1374, 1378, 1381, 1384, 1387, 1431, 1442, 1443, 1444, 1449, 1452, 1454, 1455, 1457, 1461, 1465, 1472, 1473, 1475, 1480, 1483, 1484, 1487, 1488, 1492, 1493, 1501], "test2": 1387, "test_acc": [1465, 1473], "test_bas": 1371, "test_computation_follows_data": 1377, "test_data": [1465, 1473], "test_el": 769, "test_env": 1366, "test_imag": [1465, 1473], "test_label": [1465, 1473], "test_psend_precv_basic_with_no_deadlock_cycl": 1381, "test_runn": 1387, "test_runner2": 1387, "test_simple_unari": 1374, "test_tag_filt": 1366, "test_target": 1366, "test_undeclared_outputs_dir": 1356, "test_util": [1345, 1350, 1354, 1382, 1388, 1467], "testcas": 1354, "testlogsumexp": 1357, "testpad": 1366, "text": [333, 537, 589, 591, 721, 726, 923, 1344, 1356, 1366, 1382, 1435, 1456, 1459, 1468], "textrm": 1359, "texttt": 1403, "textwrap": 1464, "tf": [75, 1342, 1354, 1356, 1359, 1369, 1380, 1415, 1456, 1467, 1469, 1473, 1496], "tf1": [1380, 1449], "tf2": 1380, "tf32_tf32_f32": [1356, 1424], "tf32_tf32_f32_x3": [1356, 1424], "tf_cpp_min_log_level": 1381, "tf_cpp_vmodul": 1374, "tf_cuda_malloc_async_supported_prealloc": 1380, "tf_dtype": 1456, "tf_dtype_to_cod": 1456, "tf_gpu_alloc": 1380, "tf_xla_call_module_disabled_check": 1415, "tf_xla_flag": 1415, "tfd": 1473, "tflop": 1492, "tfrt": 1354, "tfrt_cpu_0": [1371, 1461, 1474], "tfrt_cpu_1": [1371, 1461, 1474], "tfrt_cpu_131072": 1461, "tfrt_cpu_131073": 1461, "tfrt_cpu_2": [1371, 1461, 1474], "tfrt_cpu_262144": 1461, "tfrt_cpu_262145": 1461, "tfrt_cpu_3": [1371, 1461, 1474], "tfrt_cpu_393216": 1461, "tfrt_cpu_393217": 1461, "tfrt_cpu_4": 1461, "tfrt_cpu_5": 1461, "tfrt_cpu_6": 1461, "tfrt_cpu_7": 1461, "tgz": 1366, "th": [222, 237, 311, 486, 660, 669, 1403, 1487], "than": [9, 10, 67, 98, 150, 173, 175, 198, 201, 203, 220, 223, 248, 284, 303, 346, 356, 361, 368, 382, 383, 392, 397, 402, 414, 419, 436, 451, 551, 552, 570, 582, 589, 591, 595, 604, 623, 626, 664, 677, 678, 701, 714, 750, 753, 762, 766, 775, 777, 798, 802, 823, 834, 846, 864, 868, 878, 879, 905, 910, 911, 912, 917, 921, 927, 928, 944, 949, 951, 957, 975, 976, 977, 978, 979, 980, 985, 991, 1002, 1003, 1023, 1026, 1056, 1071, 1073, 1103, 1116, 1117, 1283, 1304, 1306, 1333, 1342, 1345, 1346, 1347, 1348, 1349, 1354, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1365, 1369, 1370, 1371, 1376, 1378, 1381, 1382, 1424, 1438, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1453, 1454, 1455, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1489, 1490, 1492, 1493, 1494, 1495, 1497, 1498, 1501, 1502, 1503, 1505], "thank": [1442, 1479], "thead_nam": 1483, "theano": 1342, "thei": [10, 67, 69, 98, 126, 197, 254, 255, 296, 363, 366, 432, 433, 459, 529, 640, 645, 664, 864, 881, 882, 899, 914, 923, 969, 976, 991, 994, 1002, 1099, 1116, 1117, 1302, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1357, 1363, 1364, 1366, 1371, 1374, 1376, 1377, 1381, 1382, 1384, 1385, 1389, 1390, 1400, 1411, 1415, 1424, 1428, 1431, 1434, 1438, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1489, 1490, 1492, 1493, 1494, 1497, 1498, 1502, 1503, 1506], "them": [67, 69, 82, 100, 164, 178, 197, 242, 296, 304, 481, 572, 614, 720, 819, 851, 852, 857, 859, 923, 994, 1002, 1023, 1297, 1298, 1331, 1341, 1342, 1345, 1346, 1348, 1349, 1352, 1354, 1357, 1360, 1361, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1390, 1395, 1396, 1411, 1414, 1428, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1459, 1461, 1462, 1465, 1467, 1468, 1470, 1471, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1489, 1490, 1492, 1494, 1497, 1500, 1502, 1503, 1506], "theme": [1366, 1484], "themselv": [529, 923, 1342, 1348, 1350, 1353, 1377, 1390, 1456, 1458, 1461, 1463, 1475, 1485, 1490], "then_valu": 1381, "theorem": [357, 1342, 1463], "theoret": [671, 1084, 1135, 1494], "therebi": 1503, "therefor": [82, 345, 923, 1002, 1118, 1369, 1378, 1382, 1385, 1390, 1424, 1444, 1456, 1459, 1462, 1479, 1483, 1487, 1488, 1490, 1492, 1493, 1494, 1501, 1503], "therein": 1503, "thereof": [67, 69, 77, 80, 94, 95, 290, 296, 339, 458, 488, 495, 503, 670, 1002, 1284, 1332, 1333, 1411, 1448, 1488], "theta": [239, 578, 985, 1153, 1162, 1342], "theta_out": 985, "thi": [9, 10, 14, 18, 21, 29, 30, 61, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 91, 93, 95, 96, 97, 98, 105, 106, 110, 111, 112, 113, 118, 119, 120, 126, 127, 128, 129, 131, 132, 135, 136, 145, 148, 150, 165, 166, 167, 170, 172, 174, 178, 198, 201, 203, 216, 220, 223, 239, 250, 251, 252, 253, 255, 267, 283, 284, 285, 287, 291, 292, 296, 298, 299, 300, 301, 303, 304, 305, 306, 309, 310, 312, 313, 314, 321, 322, 323, 324, 325, 328, 331, 332, 334, 336, 337, 339, 340, 345, 346, 348, 349, 350, 356, 357, 359, 360, 362, 363, 364, 368, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 386, 387, 389, 391, 392, 397, 403, 404, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 439, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 474, 477, 478, 481, 482, 483, 484, 485, 488, 489, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 529, 531, 534, 536, 543, 544, 549, 551, 552, 557, 559, 562, 564, 570, 571, 572, 578, 582, 584, 586, 588, 591, 592, 595, 604, 605, 610, 612, 614, 620, 625, 627, 632, 633, 634, 638, 640, 645, 646, 650, 651, 654, 655, 658, 659, 664, 667, 668, 670, 671, 672, 674, 675, 677, 679, 687, 700, 701, 703, 715, 721, 722, 724, 730, 733, 744, 750, 753, 761, 762, 763, 764, 776, 777, 783, 788, 793, 794, 795, 796, 798, 799, 801, 804, 805, 810, 814, 820, 827, 828, 829, 830, 832, 834, 841, 846, 847, 849, 850, 864, 865, 868, 869, 872, 873, 878, 882, 897, 899, 900, 905, 906, 910, 911, 914, 917, 918, 921, 922, 923, 924, 925, 927, 928, 929, 931, 934, 937, 944, 947, 949, 950, 951, 957, 969, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 988, 991, 993, 994, 995, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1013, 1015, 1016, 1017, 1023, 1026, 1027, 1033, 1036, 1037, 1040, 1044, 1047, 1052, 1063, 1064, 1067, 1068, 1069, 1078, 1079, 1084, 1085, 1086, 1091, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1110, 1111, 1113, 1115, 1118, 1128, 1134, 1140, 1141, 1142, 1148, 1149, 1153, 1156, 1160, 1161, 1162, 1163, 1164, 1267, 1268, 1285, 1286, 1287, 1296, 1297, 1298, 1302, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1333, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1390, 1396, 1397, 1400, 1402, 1403, 1404, 1411, 1414, 1415, 1416, 1424, 1427, 1428, 1431, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1444, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507], "thin": [84, 1309, 1311, 1363, 1378, 1424, 1484], "thing": [109, 1342, 1346, 1348, 1349, 1350, 1356, 1357, 1359, 1363, 1366, 1369, 1377, 1378, 1382, 1384, 1414, 1444, 1445, 1446, 1447, 1449, 1450, 1453, 1454, 1456, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1473, 1474, 1475, 1479, 1480, 1489, 1492, 1500, 1501, 1502, 1503], "think": [436, 1342, 1348, 1349, 1352, 1366, 1369, 1377, 1428, 1441, 1442, 1444, 1445, 1449, 1450, 1453, 1454, 1456, 1457, 1460, 1462, 1463, 1464, 1467, 1470, 1474, 1479, 1480, 1484, 1488, 1489, 1490, 1492, 1493, 1502, 1503], "thinking_in_jax": 1366, "third": [667, 1341, 1349, 1354, 1378, 1390, 1444, 1456, 1462, 1474, 1489], "third_parti": 1440, "thorough": [1342, 1382, 1463, 1468, 1503], "those": [67, 97, 98, 112, 113, 178, 378, 494, 501, 503, 531, 543, 776, 802, 962, 966, 1002, 1102, 1103, 1283, 1284, 1333, 1342, 1346, 1348, 1349, 1354, 1357, 1361, 1363, 1366, 1371, 1374, 1377, 1378, 1382, 1384, 1387, 1390, 1411, 1415, 1424, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1453, 1454, 1456, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1474, 1479, 1483, 1484, 1488, 1489, 1490, 1493, 1495, 1500, 1503, 1505], "though": [98, 160, 501, 570, 614, 840, 911, 1005, 1341, 1342, 1344, 1348, 1349, 1354, 1369, 1374, 1376, 1382, 1428, 1441, 1442, 1444, 1445, 1447, 1449, 1451, 1456, 1458, 1459, 1463, 1464, 1467, 1468, 1470, 1474, 1475, 1480, 1484, 1489, 1492, 1494, 1503], "thought": [1002, 1342, 1444, 1445, 1446, 1452, 1456, 1467, 1490, 1500, 1505], "thousand": 1377, "thread": [95, 148, 150, 165, 172, 183, 184, 1288, 1354, 1355, 1361, 1363, 1442, 1451, 1475, 1479, 1483, 1488, 1490, 1493, 1502, 1504], "thread0_bodi": 1484, "thread1_bodi": 1484, "thread_id": 1484, "thread_nam": [1483, 1484], "threadid": 1480, "three": [337, 345, 423, 486, 572, 614, 667, 742, 790, 804, 941, 994, 1090, 1342, 1345, 1349, 1354, 1359, 1366, 1368, 1370, 1376, 1377, 1385, 1390, 1427, 1440, 1444, 1446, 1448, 1450, 1456, 1461, 1462, 1467, 1470, 1471, 1479, 1480, 1484, 1489, 1490, 1498, 1503, 1505], "threefri": [280, 1354, 1424, 1431, 1451, 1498], "threefry2x32": [279, 281, 1017, 1037, 1354, 1356, 1431, 1455, 1489], "threefry2x32_kei": 1354, "threefry2x32_p": 1354, "threefry_2x32": [1354, 1446], "threefry_fold_in": 281, "threefry_partition": 1390, "threefry_random_bit": 281, "threefry_se": 281, "threefry_split": 281, "threshold": [1356, 1381], "thrive": 1341, "through": [73, 98, 119, 120, 172, 243, 248, 284, 345, 356, 570, 1116, 1117, 1302, 1307, 1341, 1348, 1350, 1353, 1354, 1356, 1357, 1359, 1361, 1363, 1366, 1369, 1370, 1374, 1377, 1378, 1381, 1382, 1402, 1403, 1414, 1440, 1441, 1443, 1445, 1449, 1451, 1452, 1453, 1454, 1459, 1461, 1462, 1463, 1466, 1467, 1470, 1471, 1475, 1479, 1480, 1483, 1484, 1487, 1490, 1497, 1500, 1506], "throughout": [508, 1362, 1378, 1444, 1448, 1484, 1501], "throughput": [1483, 1484, 1503], "throw": [118, 119, 120, 1354, 1361, 1362, 1369, 1462, 1470, 1494], "thrown": [508, 1354, 1361, 1462, 1503], "thu": [67, 119, 290, 380, 436, 501, 722, 724, 1094, 1342, 1348, 1350, 1359, 1371, 1374, 1376, 1385, 1403, 1442, 1444, 1445, 1447, 1449, 1451, 1462, 1463, 1466, 1474, 1480, 1487, 1488, 1492, 1493, 1506], "thumb": [1360, 1381, 1475, 1479, 1484, 1487, 1489, 1490, 1498], "thunk": [1348, 1449], "ti": [924, 1265, 1479], "tick": 1503, "tickl": 1470, "tid": 1484, "tie_in": 1354, "tier": 1446, "tight": [1443, 1454], "tighten": [1354, 1453], "tightli": 1472, "tile": [137, 157, 158, 166, 303, 304, 436, 877, 910, 1016, 1354, 1367, 1444, 1472, 1480, 1483, 1484, 1489, 1490, 1496], "tile_k": 1483, "tile_m": 1483, "tile_n": 1483, "tile_shap": 1484, "tiletransform": 1484, "tilingtransform": [1483, 1484], "time": [67, 83, 92, 98, 112, 118, 120, 141, 178, 296, 378, 396, 418, 424, 455, 458, 488, 495, 499, 505, 506, 645, 646, 660, 670, 701, 790, 804, 891, 910, 919, 924, 1002, 1013, 1015, 1016, 1037, 1094, 1110, 1113, 1114, 1115, 1118, 1120, 1245, 1284, 1333, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1352, 1354, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1387, 1389, 1411, 1415, 1428, 1435, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1455, 1456, 1457, 1460, 1462, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1494, 1495, 1496, 1500, 1503, 1507], "time_axi": 1113, "timedelta": 1120, "timeit": [1342, 1377, 1459, 1464, 1467, 1475, 1492, 1494], "timelin": [1007, 1008, 1009, 1496], "timeout": 98, "timeslot": 1487, "timestamp": 1450, "tini": [421, 701, 1378, 1465], "tip": [1297, 1298, 1343, 1384, 1457, 1460, 1494, 1507], "titl": [1390, 1456, 1458, 1492, 1493, 1503], "tl": 1382, "tldr": [1431, 1451], "tma": [164, 1483, 1484], "tmem": [160, 161, 165, 172], "tmem_ref": [160, 1484], "tmp": [1342, 1346, 1359, 1371, 1374, 1378, 1381, 1382, 1387, 1390, 1459, 1460, 1461, 1462, 1465, 1467, 1473, 1475, 1495, 1496], "tnh": 508, "to_begin": 669, "to_devic": 1354, "to_dlpack": 1354, "to_end": 669, "to_html": 1456, "to_it": 1348, "to_iter": 1348, "to_lojax": 1460, "to_nearest_even": [456, 1424], "to_pi": [1354, 1462], "to_str": 1402, "todai": [1341, 1445, 1446, 1448], "todens": [199, 223, 1414], "todo": [1348, 1385, 1455, 1484], "toeplitz": 1354, "togeth": [78, 84, 120, 257, 441, 495, 614, 817, 833, 989, 1045, 1090, 1333, 1342, 1348, 1349, 1354, 1357, 1360, 1361, 1366, 1368, 1369, 1374, 1377, 1403, 1435, 1445, 1451, 1456, 1457, 1463, 1464, 1467, 1468, 1470, 1471, 1472, 1474, 1475, 1484, 1487, 1488, 1489, 1492, 1494, 1500, 1503], "toi": [1342, 1350, 1376, 1382, 1443, 1467, 1468, 1502], "token": [81, 283, 302, 432, 433, 508, 1354, 1371, 1385, 1503], "token_in": 1371, "token_out": 1371, "tokens_in": 1390, "tokens_out": 1390, "tokenset": 1390, "tol": [239, 240, 802, 1083, 1105, 1116, 1117, 1118, 1354], "told": [1390, 1444], "toler": [239, 240, 331, 349, 372, 373, 375, 411, 412, 457, 471, 478, 484, 485, 564, 764, 802, 1040, 1083, 1105, 1116, 1117, 1118, 1285, 1286, 1287, 1357, 1443, 1454, 1471], "too": [97, 239, 357, 366, 367, 700, 882, 927, 975, 1341, 1342, 1346, 1348, 1350, 1365, 1366, 1377, 1378, 1381, 1386, 1443, 1445, 1447, 1448, 1449, 1451, 1456, 1461, 1463, 1464, 1466, 1467, 1470, 1474, 1480, 1484, 1487, 1489, 1492, 1500, 1505], "took": [1342, 1464, 1467, 1502], "tool": [804, 1010, 1341, 1352, 1354, 1360, 1362, 1363, 1364, 1366, 1367, 1370, 1383, 1395, 1425, 1428, 1442, 1444, 1445, 1448, 1449, 1455, 1478, 1480, 1490, 1496, 1506], "toolbox": [1381, 1384, 1387, 1461], "toolchain": [1366, 1457], "toolkit": 1384, "top": [239, 305, 306, 486, 582, 878, 1023, 1341, 1342, 1346, 1348, 1349, 1354, 1357, 1362, 1364, 1366, 1374, 1378, 1381, 1423, 1440, 1441, 1448, 1449, 1451, 1454, 1462, 1470, 1484, 1490, 1495, 1496], "top_k": [582, 878, 1354, 1374], "top_main": 1348, "top_trac": 1348, "topic": [1342, 1343, 1350, 1448, 1467, 1477], "topk": 1354, "topolog": 1348, "topologi": [98, 504, 1354, 1445, 1464, 1484, 1491, 1495], "toposort": [1348, 1354], "torch": [1456, 1465, 1480], "torch_dtyp": 1456, "torch_dtype_to_cod": 1456, "torch_result_cod": 1456, "torchvis": 1465, "toru": 1490, "tot": 1474, "total": [37, 50, 67, 93, 804, 937, 1342, 1347, 1354, 1356, 1369, 1371, 1374, 1378, 1380, 1381, 1390, 1411, 1445, 1447, 1461, 1463, 1471, 1474, 1476, 1484, 1487, 1490, 1492, 1494, 1503], "total_ord": 1354, "total_repeat_length": [44, 910], "total_shap": 1487, "totals": 1378, "touch": [1357, 1444, 1454, 1457, 1487, 1494], "toward": [150, 250, 251, 332, 377, 456, 623, 701, 702, 714, 715, 867, 902, 917, 920, 968, 1354, 1448, 1449, 1452, 1456], "toy_": 1461, "tpu": [18, 91, 93, 96, 98, 143, 178, 246, 248, 296, 424, 425, 426, 427, 498, 504, 811, 924, 1002, 1005, 1006, 1012, 1013, 1015, 1341, 1344, 1353, 1354, 1356, 1357, 1363, 1366, 1369, 1371, 1376, 1377, 1379, 1383, 1407, 1411, 1415, 1424, 1431, 1440, 1443, 1456, 1457, 1459, 1462, 1464, 1474, 1475, 1478, 1481, 1483, 1485, 1487, 1488, 1492, 1494, 1496, 1500, 1503, 1505, 1507], "tpu_cod": 424, "tpu_nam": 1461, "tpu_num_chips_to_profile_per_task": 1496, "tpu_num_sparse_core_tiles_to_trac": 1496, "tpu_num_sparse_cores_to_trac": 1496, "tpu_test": 1366, "tpu_trace_mod": 1496, "tpucompilerparam": 1478, "tpudevic": 1461, "tpumemoryspac": 1478, "tpuv2": 1489, "tpuv3": 1489, "tpuv4i": 1489, "tpuv5p": 1354, "tr": 1096, "trace": [0, 65, 66, 67, 76, 79, 97, 112, 118, 126, 141, 150, 296, 339, 378, 380, 415, 424, 503, 556, 654, 670, 868, 894, 927, 975, 976, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1304, 1342, 1346, 1349, 1351, 1352, 1354, 1355, 1359, 1360, 1362, 1363, 1368, 1370, 1371, 1374, 1376, 1377, 1379, 1381, 1390, 1411, 1428, 1435, 1441, 1443, 1446, 1449, 1452, 1454, 1456, 1459, 1462, 1463, 1467, 1470, 1471, 1472, 1478, 1480, 1486, 1495, 1500, 1502, 1503], "trace_comput": 1496, "trace_compute_and_sync": 1496, "trace_ctx": 1460, "trace_func": 1390, "trace_funct": 1354, "trace_mod": 1496, "trace_only_host": 1496, "trace_only_xla": 1496, "trace_stack": 1348, "trace_state_clean": 1354, "trace_to_jaxpr_dynam": 1385, "trace_typ": 1348, "trace_view": 1496, "traceabl": [881, 1348, 1359, 1390], "traceannot": [1354, 1496], "traceback": [81, 118, 119, 120, 328, 617, 638, 654, 868, 884, 890, 927, 944, 975, 976, 991, 1308, 1344, 1354, 1359, 1370, 1371, 1374, 1377, 1390, 1404, 1454, 1455, 1460, 1462, 1505], "traceback_cach": 1390, "traceback_to_location_cach": 1390, "traceback_util": [1354, 1390], "tracebackcach": 1390, "tracebackhid": 1356, "tracebacktolocationcach": 1390, "tracecontext": 1354, "tracem": 1496, "tracer": [0, 65, 66, 97, 654, 868, 927, 975, 976, 1342, 1344, 1348, 1354, 1359, 1360, 1361, 1370, 1379, 1439, 1444, 1445, 1446, 1449, 1452, 1453, 1454, 1459, 1460, 1463, 1475], "tracer_leak_debugger_warn": 1354, "tracer_out": 1348, "tracer_par": 1348, "tracer_refs_out": 1348, "tracer_to_var": 1348, "tracerarrayconversionerror": [1354, 1370], "tracerboolconversionerror": [1359, 1370, 1459, 1475], "tracerintegerconversionerror": [1354, 1370], "tracers_in": 1348, "tracers_out": 1348, "tracers_to_jaxpr": 1348, "traceview": 1354, "track": [118, 166, 506, 578, 1342, 1348, 1349, 1353, 1354, 1356, 1361, 1366, 1367, 1370, 1374, 1378, 1396, 1444, 1455, 1463, 1475, 1479, 1484, 1493, 1498, 1502, 1503], "tracker": [1341, 1354, 1378, 1384, 1443, 1444, 1490], "tractabl": 1503, "trade": [67, 91, 1356, 1380, 1381, 1382, 1468, 1471], "tradeoff": [1342, 1348, 1359, 1382, 1424, 1442, 1443, 1444, 1456, 1463, 1468, 1479, 1487], "tradit": [1349, 1360, 1362, 1470, 1490, 1503], "tradition": [1342, 1467, 1503], "traffic": 1503, "trail": [569, 677, 960, 963, 964, 1061, 1374, 1424, 1431, 1455, 1464, 1489, 1503], "train": [1007, 1342, 1343, 1350, 1352, 1354, 1364, 1369, 1381, 1382, 1383, 1397, 1447, 1451, 1464, 1467, 1468, 1470, 1474, 1489, 1496, 1500, 1505, 1506], "train_acc": [1465, 1473], "train_data": [1465, 1473], "train_imag": [1465, 1473], "train_label": [1465, 1473], "train_loop": 1503, "train_loss": 1503, "train_stat": 1503, "train_step": [1007, 1381, 1503], "train_step_compil": 1381, "training_gener": 1465, "trait": 1334, "tran": [1092, 1099], "trans1d": [619, 902], "trans_a": 144, "trans_b": 144, "trans_jaxpr": 1348, "transact": 1489, "transfer": [94, 95, 100, 296, 720, 1288, 1339, 1343, 1347, 1348, 1354, 1369, 1376, 1377, 1411, 1454, 1461, 1471, 1479, 1483, 1484, 1487, 1489, 1490, 1492, 1493], "transfer_from_outfe": 1354, "transfer_guard": 1504, "transfer_guard_host_to_devic": 1504, "transfer_s": 166, "transfer_to_infe": 1354, "transform": [72, 76, 79, 82, 83, 119, 126, 128, 129, 149, 157, 201, 203, 220, 242, 267, 268, 283, 292, 339, 415, 424, 452, 483, 494, 500, 584, 604, 625, 632, 654, 679, 682, 683, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 722, 723, 724, 762, 820, 868, 877, 906, 910, 918, 927, 928, 975, 976, 977, 978, 979, 980, 991, 1002, 1016, 1071, 1072, 1073, 1074, 1096, 1097, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1300, 1304, 1307, 1309, 1341, 1346, 1349, 1350, 1352, 1354, 1359, 1360, 1368, 1370, 1371, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1385, 1390, 1396, 1402, 1424, 1435, 1438, 1439, 1441, 1445, 1446, 1448, 1452, 1453, 1454, 1456, 1458, 1462, 1463, 1465, 1466, 1467, 1468, 1471, 1473, 1475, 1482, 1483, 1487, 1490, 1497, 1500, 1502, 1507], "transform_func": 1480, "transform_funct": 1480, "transformed_flat": 1497, "transformed_structur": 1497, "transformedref": [1068, 1069], "transient": [110, 111, 1345], "transit": [69, 135, 136, 1342, 1354, 1356, 1366, 1440], "translat": [292, 1342, 1348, 1354, 1390, 1435, 1456, 1460, 1467, 1474, 1480], "translationcontext": 1354, "translationrul": 1354, "transpar": [126, 1354, 1377, 1378, 1438, 1449, 1475, 1497, 1506], "transparent_hugepag": 1354, "transpos": [1, 33, 158, 222, 229, 230, 233, 234, 305, 306, 343, 344, 345, 346, 347, 356, 407, 408, 458, 494, 670, 788, 803, 811, 834, 846, 880, 917, 949, 1047, 1099, 1101, 1324, 1333, 1342, 1348, 1351, 1354, 1390, 1397, 1414, 1424, 1428, 1445, 1449, 1463, 1466, 1467, 1471, 1474, 1476, 1480, 1488, 1489], "transpose_a": 408, "transpose_input": 1348, "transpose_jaxpr": 1348, "transpose_kernel": 346, "transpose_p": [1348, 1414], "transpose_ref": 1484, "transpose_rh": 1492, "transpose_rul": 1348, "transpose_solv": 356, "transposed_conv": 1469, "transposed_jaxpr": 1348, "transposed_pytre": 1300, "transposetransform": 1484, "transposit": [1342, 1348, 1349, 1368, 1414, 1449, 1455, 1458, 1463], "trapezoid": [1354, 1448], "trapz": [1354, 1448], "travers": [1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1310, 1349, 1484, 1497, 1503, 1506], "treacher": 1455, "treat": [61, 113, 126, 132, 284, 296, 363, 366, 431, 432, 433, 475, 481, 494, 627, 633, 634, 667, 744, 776, 798, 807, 883, 897, 945, 993, 1002, 1016, 1070, 1283, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1307, 1310, 1312, 1342, 1351, 1354, 1374, 1376, 1377, 1378, 1411, 1434, 1438, 1444, 1446, 1448, 1452, 1453, 1455, 1456, 1460, 1462, 1469, 1470, 1474, 1479, 1488, 1489, 1497, 1502, 1505, 1506], "treatment": [582, 778, 878, 982, 1348, 1374, 1448], "tree": [95, 133, 198, 290, 296, 297, 303, 304, 311, 357, 425, 426, 427, 431, 433, 434, 435, 437, 449, 1116, 1117, 1118, 1283, 1305, 1307, 1310, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1333, 1345, 1346, 1348, 1354, 1366, 1388, 1396, 1402, 1403, 1435, 1438, 1457, 1460, 1471, 1478, 1497, 1502, 1503], "tree1": 1327, "tree2": 1327, "tree_al": [1354, 1474], "tree_arg": 1333, "tree_def": 1396, "tree_flatten": [1292, 1301, 1309, 1310, 1348, 1354, 1377, 1382, 1468, 1497], "tree_flatten_with_kei": 1311, "tree_flatten_with_path": [1310, 1354, 1506], "tree_leav": [1294, 1305, 1354, 1471], "tree_leaves_with_path": [1306, 1354], "tree_map": [113, 1296, 1310, 1354, 1465, 1471, 1474], "tree_map_with_path": [1354, 1503, 1506], "tree_multimap": 1354, "tree_structur": [253, 1354, 1497], "tree_transpos": [1354, 1506], "tree_unflatten": [1309, 1311, 1348, 1354, 1377, 1382, 1468, 1497, 1506], "tree_util": [113, 252, 253, 1291, 1292, 1294, 1296, 1298, 1300, 1301, 1345, 1354, 1377, 1382, 1388, 1415, 1435, 1437, 1465, 1468, 1471, 1474, 1497, 1503], "treedef": [1291, 1292, 1299, 1301, 1307, 1308, 1310, 1325, 1326, 1327, 1328, 1348, 1354, 1497, 1506], "treedef_children": 1328, "treedef_is_leaf": 1354, "treedef_tupl": 1326, "trend": [1110, 1111, 1114, 1115], "tri": [64, 71, 960, 964, 1082, 1370, 1374, 1380, 1428, 1454, 1459, 1470, 1484], "trial": [1021, 1035, 1044, 1494], "triangl": [291, 292, 395, 398, 399, 400, 401, 407, 408, 409, 745, 788, 794, 796, 959, 960, 961, 962, 964, 965, 966, 1091, 1092, 1098, 1099], "triangular": [291, 292, 395, 396, 401, 404, 408, 788, 794, 796, 808, 1078, 1080, 1084, 1090, 1095, 1096, 1097, 1098, 1099, 1354, 1494], "trick": [1023, 1342, 1346, 1377, 1384, 1449, 1462, 1467, 1475, 1479], "tricki": [1348, 1377, 1462, 1470, 1479, 1502], "trickier": 1361, "tricub": [291, 292], "tridiagon": [410, 1083, 1354], "trifurc": 1444, "trigger": [83, 296, 1002, 1354, 1357, 1366, 1377, 1387, 1390, 1411, 1452, 1490, 1492, 1496], "trigonometr": [573, 575, 577, 642, 933, 952], "tril": [832, 959, 962, 964, 1354, 1494], "tril_indic": [832, 962, 965], "tril_indices_from": [961, 965, 966], "trilinear": [291, 292], "trim": [963, 981], "trim_leading_zero": [886, 889], "trim_zero": 1354, "trimesh": 1387, "trip": [378, 1349, 1354, 1449, 1462, 1489, 1503], "tripl": [406, 1396, 1484, 1490], "triton": [143, 178, 1354, 1356, 1381, 1407, 1446, 1478, 1483, 1484, 1485, 1487, 1488], "tritoncompilerparam": 1478, "triu": [832, 959, 960, 966, 1354], "triu_indic": [832, 961, 966], "triu_indices_from": [961, 962, 965], "trivial": [289, 295, 501, 1331, 1342, 1344, 1354, 1359, 1361, 1378, 1402, 1444, 1445, 1447, 1449, 1451, 1470, 1487, 1500], "troubl": [1378, 1480], "true": [0, 3, 4, 8, 10, 40, 51, 54, 61, 66, 67, 72, 75, 77, 80, 81, 82, 84, 86, 95, 97, 100, 105, 106, 107, 118, 129, 131, 132, 150, 165, 167, 172, 173, 178, 198, 201, 203, 210, 241, 283, 284, 289, 291, 292, 293, 295, 296, 297, 303, 304, 305, 306, 311, 316, 337, 339, 346, 356, 357, 359, 362, 363, 364, 365, 366, 367, 378, 381, 387, 391, 395, 397, 398, 403, 404, 405, 406, 407, 408, 409, 421, 422, 436, 458, 459, 460, 461, 462, 463, 464, 465, 475, 476, 488, 493, 495, 503, 508, 510, 538, 563, 564, 567, 568, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 586, 587, 588, 589, 592, 595, 602, 603, 613, 620, 621, 623, 627, 632, 636, 640, 642, 643, 644, 645, 650, 651, 652, 654, 661, 667, 668, 670, 671, 674, 675, 678, 679, 681, 682, 683, 685, 687, 688, 689, 690, 693, 694, 695, 696, 697, 699, 700, 701, 702, 712, 714, 716, 717, 720, 729, 731, 733, 734, 735, 736, 737, 739, 740, 742, 744, 745, 749, 750, 751, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 780, 782, 785, 786, 788, 794, 796, 797, 798, 800, 804, 805, 807, 808, 810, 811, 814, 815, 818, 819, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 832, 836, 838, 839, 840, 842, 845, 848, 849, 850, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 867, 868, 869, 872, 873, 874, 879, 881, 882, 886, 887, 889, 894, 896, 898, 899, 900, 901, 907, 908, 912, 918, 921, 922, 923, 925, 927, 928, 931, 933, 934, 936, 938, 940, 942, 946, 948, 950, 951, 952, 953, 958, 968, 976, 977, 978, 979, 980, 985, 986, 987, 993, 994, 1003, 1013, 1015, 1016, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1030, 1031, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1110, 1111, 1113, 1114, 1115, 1118, 1119, 1120, 1151, 1153, 1162, 1245, 1266, 1283, 1289, 1290, 1291, 1302, 1304, 1306, 1307, 1312, 1326, 1327, 1328, 1331, 1332, 1333, 1342, 1344, 1346, 1347, 1348, 1350, 1354, 1356, 1357, 1359, 1360, 1362, 1363, 1364, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1385, 1390, 1396, 1397, 1402, 1403, 1404, 1411, 1431, 1434, 1440, 1441, 1444, 1445, 1447, 1452, 1455, 1456, 1457, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1471, 1473, 1475, 1476, 1478, 1484, 1485, 1489, 1490, 1492, 1493, 1495, 1496, 1500, 1502, 1503, 1505], "true_b": 1502, "true_beta": 1476, "true_bodi": 1441, "true_branch": 1348, "true_const": 1348, "true_divid": [662, 715, 1462], "true_fn": [1348, 1360, 1363], "true_fun": [339, 1348, 1359], "true_jaxpr": 1348, "true_w": 1502, "truli": [1096, 1097, 1484, 1498], "trunc": [623, 702, 714, 920, 1354], "truncat": [239, 250, 251, 494, 529, 531, 595, 632, 679, 700, 868, 882, 910, 927, 975, 976, 1057, 1071, 1073, 1113, 1269, 1270, 1271, 1272, 1273, 1274, 1342, 1349, 1354, 1364, 1403, 1462, 1467], "truncated_norm": [520, 522, 524, 531], "trust": 1374, "truth": [674, 734, 735, 785, 786, 869, 1341, 1359], "try": [71, 296, 397, 976, 1002, 1284, 1308, 1342, 1345, 1346, 1348, 1349, 1354, 1356, 1359, 1366, 1367, 1371, 1374, 1377, 1378, 1384, 1390, 1411, 1444, 1447, 1453, 1455, 1456, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1470, 1472, 1473, 1474, 1476, 1479, 1484, 1488, 1489, 1492, 1494, 1496, 1501, 1504, 1505, 1506], "tune": [1364, 1378, 1381, 1480, 1487, 1492], "tunnel": 1496, "tup": [627, 667, 744, 993, 1444], "tupl": [39, 48, 67, 69, 73, 75, 77, 80, 107, 113, 120, 126, 139, 142, 157, 158, 159, 166, 168, 178, 180, 198, 199, 200, 201, 202, 203, 204, 207, 208, 215, 222, 224, 241, 244, 248, 255, 267, 268, 276, 284, 289, 292, 296, 297, 305, 306, 328, 339, 341, 342, 343, 344, 345, 346, 347, 360, 378, 397, 398, 399, 401, 403, 404, 405, 406, 409, 423, 449, 458, 475, 476, 486, 488, 494, 495, 502, 503, 504, 508, 536, 537, 538, 543, 549, 554, 586, 592, 602, 617, 619, 656, 657, 663, 664, 668, 670, 671, 703, 719, 723, 733, 739, 740, 741, 742, 750, 751, 753, 762, 767, 776, 779, 793, 798, 799, 805, 808, 809, 811, 813, 815, 817, 818, 819, 832, 833, 839, 845, 855, 857, 859, 865, 868, 877, 879, 880, 886, 887, 901, 902, 912, 916, 919, 921, 929, 937, 954, 961, 962, 965, 966, 976, 977, 978, 979, 982, 984, 988, 989, 1002, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1030, 1031, 1033, 1035, 1036, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1064, 1067, 1068, 1069, 1070, 1079, 1082, 1083, 1085, 1086, 1087, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1101, 1105, 1110, 1113, 1114, 1115, 1135, 1149, 1151, 1152, 1160, 1216, 1245, 1283, 1284, 1285, 1286, 1287, 1291, 1292, 1294, 1295, 1296, 1303, 1306, 1308, 1310, 1315, 1316, 1318, 1328, 1331, 1332, 1333, 1346, 1348, 1349, 1354, 1374, 1377, 1378, 1379, 1382, 1390, 1396, 1397, 1402, 1403, 1411, 1415, 1424, 1434, 1435, 1438, 1439, 1441, 1444, 1445, 1447, 1453, 1454, 1457, 1460, 1462, 1468, 1469, 1471, 1472, 1473, 1474, 1479, 1480, 1483, 1485, 1487, 1488, 1490, 1493, 1494, 1497, 1502, 1503, 1506], "tuple_delet": 1354, "tuple_insert": 1354, "tuplegrid": [140, 168, 178], "turbo": 1082, "turn": [65, 66, 109, 118, 119, 1342, 1347, 1348, 1354, 1356, 1357, 1362, 1364, 1370, 1374, 1377, 1381, 1385, 1390, 1415, 1441, 1447, 1451, 1452, 1456, 1462, 1463, 1466, 1470, 1480, 1487, 1488, 1500, 1502, 1506], "tutori": [76, 79, 283, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1348, 1349, 1350, 1352, 1353, 1354, 1370, 1376, 1378, 1382, 1389, 1390, 1434, 1440, 1441, 1446, 1449, 1460, 1461, 1464, 1467, 1471, 1475, 1484, 1486, 1487, 1490, 1494, 1500], "tweak": [1440, 1445, 1480], "twice": [415, 910, 923, 1002, 1381, 1404, 1456, 1470, 1484, 1492, 1498, 1503], "twin": [551, 552], "twist": 1492, "twister": 1498, "two": [23, 55, 75, 76, 77, 80, 98, 126, 150, 214, 237, 290, 303, 304, 305, 306, 311, 313, 336, 339, 341, 343, 344, 346, 347, 357, 360, 362, 363, 364, 365, 366, 367, 387, 398, 408, 422, 423, 425, 426, 427, 431, 432, 433, 435, 436, 437, 452, 458, 465, 473, 474, 486, 495, 501, 512, 543, 562, 564, 570, 572, 582, 584, 587, 588, 614, 625, 626, 627, 633, 634, 637, 640, 641, 645, 646, 658, 664, 668, 683, 689, 694, 695, 697, 699, 706, 716, 717, 719, 729, 750, 753, 762, 764, 781, 782, 790, 799, 804, 805, 806, 811, 813, 816, 817, 833, 834, 837, 843, 846, 847, 866, 868, 875, 878, 881, 884, 886, 889, 890, 899, 917, 921, 925, 927, 928, 941, 947, 949, 954, 957, 961, 962, 965, 966, 975, 978, 979, 988, 989, 993, 994, 1002, 1077, 1086, 1094, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1213, 1308, 1310, 1331, 1344, 1346, 1348, 1349, 1351, 1352, 1354, 1356, 1359, 1364, 1366, 1367, 1369, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1387, 1390, 1396, 1411, 1415, 1424, 1431, 1434, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1451, 1455, 1456, 1457, 1461, 1462, 1463, 1464, 1468, 1470, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1500, 1502, 1503, 1504, 1505, 1506], "two_lay": 1471, "twp": 1368, "tx": [1092, 1099], "txt": [1354, 1357, 1366, 1371], "ty": 1348, "typ": [1307, 1309, 1311], "type": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 31, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 67, 69, 73, 75, 77, 78, 80, 82, 84, 89, 93, 96, 97, 101, 103, 104, 105, 107, 108, 113, 114, 118, 119, 120, 127, 130, 131, 132, 134, 137, 139, 141, 142, 143, 145, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 166, 167, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 193, 194, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 246, 247, 248, 249, 252, 253, 255, 267, 270, 271, 272, 276, 277, 278, 281, 282, 283, 284, 286, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 428, 429, 430, 431, 432, 433, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618, 620, 621, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 971, 972, 973, 974, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1010, 1011, 1012, 1013, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1331, 1333, 1334, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1353, 1354, 1356, 1359, 1364, 1368, 1371, 1374, 1376, 1377, 1378, 1379, 1382, 1385, 1388, 1390, 1396, 1400, 1411, 1414, 1415, 1423, 1424, 1425, 1427, 1428, 1431, 1434, 1435, 1438, 1441, 1442, 1446, 1447, 1449, 1451, 1452, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1474, 1475, 1477, 1478, 1479, 1483, 1484, 1487, 1488, 1490, 1492, 1493, 1494, 1497, 1498, 1500, 1502, 1504, 1506], "type_index": 1494, "type_promot": [288, 1456], "type_trait": 1378, "typecast": 994, "typecheck": 1354, "typecheck_atom": 1348, "typecheck_jaxpr": 1348, "typecheck_partial_eval_jaxpr": 1348, "typeclass": 1455, "typecod": 105, "typecompat": 1354, "typed_data": 1378, "typed_kei": 1455, "typeerror": [865, 883, 894, 929, 937, 991, 1148, 1152, 1153, 1155, 1156, 1161, 1304, 1308, 1342, 1344, 1348, 1354, 1359, 1374, 1377, 1439, 1444, 1455, 1456, 1460, 1462, 1463, 1465, 1473, 1475, 1506], "typematch": 1354, "typenam": 1378, "typeof": [1354, 1470, 1474, 1500], "typepromotionerror": 1505, "typevar": 1302, "typic": [104, 126, 168, 198, 346, 363, 366, 381, 397, 459, 460, 571, 584, 701, 762, 777, 866, 927, 975, 976, 977, 978, 979, 980, 1286, 1287, 1342, 1344, 1353, 1356, 1357, 1366, 1370, 1374, 1377, 1378, 1382, 1384, 1424, 1431, 1444, 1445, 1446, 1447, 1450, 1462, 1467, 1468, 1472, 1474, 1475, 1487, 1489, 1490, 1492, 1493, 1495, 1498, 1503, 1506], "typing_extens": 1444, "u": [239, 401, 403, 405, 788, 794, 796, 811, 886, 1047, 1052, 1080, 1090, 1091, 1092, 1094, 1101, 1332, 1341, 1342, 1345, 1347, 1348, 1349, 1354, 1357, 1363, 1367, 1376, 1377, 1378, 1382, 1384, 1387, 1440, 1442, 1445, 1446, 1455, 1456, 1457, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1487, 1490, 1492, 1494, 1496, 1498, 1501, 1503], "u1": 668, "u16": 1456, "u1u1u1u2u4u8i2i2i4i8bff2f4f8c8c16u1f": 1505, "u1u2u4u8i1i2i4i8bff2f4f8c8c16i": 1505, "u2u2u2u2u4u8i4i4i4i8bff2f4f8c8c16u2f": 1505, "u32": [1378, 1456], "u4": 1505, "u4u4u4u4u4u8i8i8i8i8bff2f4f8c8c16u4f": 1505, "u64": 1456, "u8": [668, 1456], "u8u8u8u8u8u8f": 1505, "u_": 1094, "u_blk": 1474, "u_block": 1474, "ubuntu": 1366, "ubyt": 1465, "ucdenv": 239, "ufunc": [10, 562, 605, 610, 612, 648, 649, 650, 651, 725, 825, 826, 827, 829, 830, 837, 843, 847, 851, 852, 864, 866, 947, 1354], "ui": [1013, 1015, 1354, 1496], "uint": [277, 281, 282, 1456, 1489], "uint16": [263, 767, 913, 1456], "uint2": 263, "uint32": [263, 277, 280, 281, 282, 454, 767, 777, 866, 892, 1017, 1022, 1061, 1431, 1454, 1455, 1456, 1498, 1505], "uint4": [263, 767], "uint64": [263, 668, 767, 970, 1022, 1354], "uint8": [263, 606, 668, 721, 763, 767, 777, 876, 897, 981, 1354, 1456, 1462, 1503], "uit": 1363, "uk": 1348, "ultim": [1348, 1377, 1451, 1454, 1464, 1503], "un": [87, 88, 360, 672, 673, 1356, 1359, 1445, 1454, 1466, 1474], "una": 1462, "unabl": 1353, "unambigu": [1342, 1348, 1463, 1467], "unansw": 1456, "unari": [461, 763, 828, 1414, 1449, 1466, 1470, 1480], "unavail": [1344, 1378, 1435], "unavoid": 1489, "unawait": 1484, "unawar": 82, "unbatch": [1016, 1342, 1346, 1348, 1480], "unbeliev": 1503, "unblock": [1478, 1490], "unbound": [1342, 1348, 1463], "unbox": 1348, "uncaught": 1474, "unchang": [73, 81, 291, 481, 599, 600, 601, 922, 1307, 1309, 1311, 1312, 1342, 1462, 1463, 1471, 1479, 1480], "uncheck": 1461, "unclear": 1470, "uncommit": [13, 95, 167, 380, 1377, 1464, 1472], "uncommon": [1357, 1489], "uncompress": 923, "uncondition": 1354, "unconstrain": 1493, "uncov": 1357, "uncurri": [1342, 1467], "undef": 1348, "undef_prim": 1348, "undefin": [10, 100, 136, 150, 381, 441, 455, 459, 460, 461, 462, 463, 464, 534, 720, 762, 769, 864, 918, 927, 928, 934, 950, 1016, 1104, 1162, 1346, 1376, 1377, 1390, 1462, 1474, 1495, 1501], "undefinedprim": 1390, "undefprim": 1348, "under": [67, 72, 80, 97, 283, 360, 424, 481, 501, 541, 542, 654, 677, 776, 788, 794, 796, 834, 840, 846, 905, 911, 917, 923, 927, 944, 949, 957, 958, 975, 976, 1016, 1064, 1075, 1155, 1156, 1284, 1342, 1346, 1348, 1350, 1354, 1356, 1359, 1366, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1404, 1414, 1424, 1431, 1443, 1446, 1447, 1448, 1452, 1455, 1459, 1460, 1461, 1462, 1463, 1465, 1467, 1468, 1470, 1471, 1473, 1474, 1475, 1484, 1486, 1488, 1496, 1500], "underflow": [866, 1153], "underli": [72, 76, 79, 80, 268, 296, 458, 506, 985, 1038, 1042, 1111, 1344, 1348, 1363, 1378, 1411, 1446, 1449, 1455, 1479, 1480, 1487, 1488, 1489, 1490, 1494, 1496, 1499], "underneath": [1442, 1488, 1498], "underpin": [1424, 1503], "underscor": [1344, 1345, 1354, 1382, 1468], "understand": [360, 503, 1342, 1345, 1348, 1349, 1350, 1354, 1369, 1370, 1374, 1378, 1381, 1390, 1441, 1448, 1449, 1456, 1459, 1460, 1471, 1475, 1479, 1480, 1487, 1489, 1495, 1497, 1498, 1500, 1502, 1503], "understood": [1431, 1490], "undesir": [112, 1484, 1490, 1498], "undocu": 1354, "undu": [223, 1444], "unequ": 1047, "uneven": 489, "unevenli": [489, 941], "unexpect": [128, 129, 572, 849, 866, 1016, 1354, 1370, 1376, 1377, 1378, 1439, 1449, 1454, 1462, 1489, 1497], "unexpecteddimvar": 1374, "unexpectedli": [1376, 1455], "unexpectedtracererror": [1354, 1370, 1454], "unfamiliar": 1459, "unfilt": [1354, 1356], "unfilteredstacktrac": 1354, "unflatten": [80, 288, 1291, 1293, 1299, 1307, 1308, 1310, 1325, 1348, 1354, 1452, 1466, 1497, 1506], "unflatten_func": [253, 1308, 1310], "unfold": 344, "unfortun": [578, 1377, 1444, 1454, 1480, 1484], "unfriendli": 1450, "unhandl": 1456, "unhash": 1354, "unhind": 1341, "uni": 1374, "unifi": [1354, 1384, 1440, 1455, 1461, 1464, 1475], "uniform": [241, 311, 501, 519, 521, 523, 525, 528, 531, 623, 702, 714, 968, 1022, 1026, 1027, 1036, 1052, 1342, 1347, 1370, 1376, 1379, 1381, 1431, 1444, 1455, 1460, 1462, 1467, 1483, 1487, 1489, 1490, 1492, 1493, 1494, 1498], "uniformli": [454, 455, 528, 530, 1018, 1047, 1354, 1366, 1452], "unimpl": [722, 724, 1486], "unind": 1390, "uniniti": [159, 1400, 1494], "uninstal": 1496, "unintend": [1455, 1504], "unintent": 1354, "unintention": [1354, 1503], "uninterest": 1356, "union": [257, 762, 927, 928, 975, 1348, 1444, 1447], "union1d": [762, 927, 928, 1448], "uniqu": [10, 116, 117, 121, 122, 123, 124, 125, 241, 263, 287, 442, 443, 444, 445, 447, 448, 450, 654, 762, 769, 864, 927, 928, 950, 977, 978, 979, 980, 1094, 1349, 1354, 1369, 1385, 1428, 1444, 1445, 1448, 1456, 1474, 1479, 1498, 1506], "unique_al": [976, 978, 979, 1448], "unique_const": 1348, "unique_count": [604, 976, 977, 979, 980, 1448], "unique_index": 976, "unique_indic": [10, 56, 199, 200, 210, 212, 241, 381, 459, 460, 461, 462, 463, 464, 864, 950, 998, 999, 1000, 1001], "unique_invers": [976, 977, 978, 980, 1448], "unique_valu": [976, 977, 978, 979, 1448], "uniquifi": [1354, 1385], "unit": [132, 401, 408, 449, 507, 509, 510, 512, 533, 541, 542, 545, 554, 578, 600, 601, 733, 739, 740, 742, 790, 930, 944, 1018, 1033, 1342, 1348, 1379, 1390, 1441, 1443, 1452, 1459, 1463, 1467, 1488, 1489, 1492, 1493], "unit32": 866, "unit_diagon": [408, 1099], "unitari": [400, 404, 808, 1047, 1087, 1094, 1095, 1097], "unittest": 1354, "unitvar": 1441, "unitvec": [1350, 1467], "univers": [311, 562, 605, 610, 612, 827, 829, 830, 847, 947, 969, 991], "unjitted_loop_bodi": 1459, "unk": 1348, "unk_tracers_in": 1348, "unk_tracers_out": 1348, "unknown": [1348, 1354, 1356, 1366, 1374], "unknown_trac": 1348, "unks_in": 1348, "unks_out": 1348, "unless": [223, 283, 356, 415, 761, 924, 1002, 1016, 1094, 1116, 1117, 1118, 1307, 1356, 1366, 1370, 1378, 1440, 1448, 1449, 1465, 1470, 1473, 1475, 1478, 1484, 1487, 1489, 1493, 1498, 1506], "unlik": [10, 119, 150, 170, 344, 378, 424, 447, 448, 458, 466, 488, 543, 669, 677, 679, 700, 723, 753, 834, 846, 864, 865, 881, 884, 886, 887, 889, 890, 905, 911, 917, 918, 929, 937, 944, 949, 957, 982, 1086, 1136, 1141, 1153, 1161, 1348, 1363, 1369, 1376, 1378, 1384, 1416, 1424, 1431, 1442, 1443, 1445, 1447, 1451, 1453, 1455, 1462, 1464, 1474, 1475, 1479, 1480, 1484, 1488, 1490, 1502, 1503, 1506], "unlock": [1368, 1440, 1443, 1489], "unmap": [304, 437, 1333, 1348, 1361, 1445], "unmapped_av": 1348, "unment": [1445, 1474], "unmodifi": [348, 517, 848, 991], "unnam": [276, 1378], "unnatur": 1489, "unnecessari": [67, 378, 458, 488, 1002, 1354, 1369, 1402, 1444, 1456, 1459, 1479], "unnecessarili": [1348, 1447, 1484], "unnorm": 1023, "unodifi": 1462, "unop": 1354, "unop_dtype_rul": 1354, "unoptim": [670, 671], "unord": [116, 117, 121, 122, 123, 124, 125, 263, 1415, 1442], "unorder": 1456, "unordered_effect": 1415, "unpack": [100, 720, 981, 1346, 1354, 1445, 1474, 1479], "unpack_optimizer_st": 1396, "unpackbit": 876, "unpad": 403, "unperturb": [77, 80], "unpickl": 1428, "unpract": 1458, "unpredict": 61, "unproblemat": 1456, "unprocess": 1374, "unpromot": 1456, "unravel": [982, 1449], "unravel_index": 906, "unravel_indic": 982, "unreach": 1504, "unrecogn": [1349, 1496], "unreduc": [1434, 1445], "unrel": [1378, 1484], "unreleas": 1457, "unremark": 1503, "unrepl": 1369, "unrestrict": [1348, 1485], "unrestrictedus": 1348, "unrol": [378, 458, 488, 891, 1016, 1044, 1354, 1359, 1363, 1378, 1441, 1479, 1480, 1484, 1487, 1489], "unsaf": [620, 722, 724, 1354, 1370, 1431, 1455, 1457, 1462], "unsafe_buffer_point": 1346, "unsafe_no_auto_barri": 150, "unsafe_raw_arrai": 1354, "unsafe_rbg": [282, 1354, 1356, 1431], "unsafe_rbg_kei": 1354, "unsaid": 1448, "unsatisfi": [403, 1094], "unscal": 887, "unset": [98, 1354, 1368], "unshap": 1359, "unshar": 344, "unshard": [1369, 1470, 1503], "unshift": [686, 691], "unsign": [10, 280, 381, 420, 469, 668, 767, 864, 866, 914, 950, 983, 1022, 1354, 1455, 1498], "unsignedinteg": 777, "unsolv": 1445, "unsort": [305, 306], "unsound": 1374, "unspecifi": [100, 360, 720, 754, 1118, 1298, 1322, 1415, 1485], "unspecifiedvalu": [296, 1411], "unsquar": 887, "unstabl": [1366, 1408], "unstack": [627, 633, 634, 667, 744, 945, 993, 1354, 1445, 1474], "unsuit": 1445, "unsupport": [283, 670, 875, 1344, 1354, 1424, 1446, 1455, 1506], "unsurprisingli": 1503, "until": [18, 95, 161, 173, 175, 917, 1013, 1015, 1342, 1347, 1348, 1354, 1356, 1363, 1365, 1381, 1397, 1442, 1444, 1448, 1450, 1453, 1454, 1463, 1479, 1483, 1484, 1489, 1490, 1493, 1496, 1501, 1503], "untouch": 848, "untrunc": 529, "untyp": [1334, 1348, 1358], "unus": [81, 126, 127, 207, 224, 296, 403, 405, 563, 568, 580, 581, 625, 648, 649, 702, 741, 836, 838, 839, 842, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 860, 861, 862, 896, 898, 911, 920, 945, 946, 948, 976, 987, 1070, 1078, 1079, 1080, 1081, 1082, 1087, 1089, 1091, 1092, 1095, 1096, 1098, 1099, 1101, 1348, 1354, 1376, 1377, 1378, 1411, 1497, 1506], "unusu": 1431, "unvari": 1474, "unwant": 1505, "unweight": 602, "unwieldi": 1378, "unwrap": 1354, "unzip": 1348, "unzip2": [1348, 1354], "unzip_dynamic_bound": 1478, "up": [18, 76, 79, 139, 178, 223, 239, 252, 253, 296, 337, 339, 378, 403, 458, 488, 503, 505, 506, 631, 702, 705, 714, 750, 804, 919, 921, 968, 1007, 1008, 1009, 1061, 1094, 1100, 1116, 1117, 1285, 1342, 1346, 1348, 1350, 1354, 1356, 1357, 1358, 1359, 1363, 1364, 1366, 1369, 1371, 1374, 1377, 1378, 1381, 1382, 1383, 1387, 1403, 1411, 1440, 1442, 1445, 1446, 1447, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1459, 1462, 1464, 1465, 1466, 1467, 1468, 1472, 1473, 1474, 1475, 1479, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1496, 1497, 1498, 1500, 1503, 1506, 1507], "upcast": [447, 448, 939, 1135, 1354, 1489], "upcom": 1454, "updat": [10, 223, 365, 366, 367, 396, 397, 459, 460, 461, 462, 463, 464, 864, 882, 899, 900, 1342, 1345, 1346, 1348, 1354, 1356, 1357, 1360, 1362, 1364, 1367, 1368, 1371, 1376, 1377, 1378, 1380, 1381, 1384, 1387, 1396, 1402, 1404, 1424, 1428, 1440, 1442, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1456, 1457, 1458, 1463, 1465, 1466, 1470, 1471, 1473, 1474, 1475, 1479, 1480, 1484, 1487, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506], "update_fn": [1377, 1396], "update_fun": 1396, "update_output_buff": 1381, "update_output_token": 1442, "update_runtime_token": 1442, "update_shap": 461, "update_window_dim": [459, 460, 1424], "updated_arrai": 1462, "updatefn": 1396, "upgrad": [110, 111, 619, 902, 1354, 1356, 1366, 1368, 1384, 1431, 1440, 1442, 1445, 1446, 1450, 1454, 1455, 1465, 1473], "uplo": [794, 796], "upload": [1013, 1015, 1366], "upon": [268, 1459, 1471, 1484, 1485, 1490], "upper": [237, 378, 395, 396, 399, 401, 404, 407, 408, 410, 519, 528, 529, 530, 680, 788, 794, 796, 808, 959, 960, 961, 962, 964, 965, 966, 1056, 1057, 1078, 1079, 1080, 1082, 1084, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1123, 1137, 1138, 1148, 1348, 1354, 1456, 1492, 1494, 1496], "upper_seg": 1148, "upper_triangular": 1084, "uppercas": 508, "upsampl": [291, 292], "upshot": [1342, 1463, 1467], "upsid": 1443, "upstream": [1357, 1454, 1480], "uptim": 1487, "upward": [623, 920, 1377], "urbg": 282, "url": [1354, 1366, 1384, 1496], "us": [0, 25, 61, 62, 63, 67, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 97, 98, 100, 110, 111, 112, 113, 118, 119, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 143, 145, 150, 160, 166, 167, 168, 170, 178, 183, 185, 186, 188, 189, 190, 191, 192, 198, 210, 239, 240, 248, 252, 253, 254, 255, 268, 280, 283, 284, 285, 286, 290, 291, 292, 293, 295, 296, 303, 304, 305, 306, 311, 315, 316, 331, 337, 339, 342, 343, 344, 346, 348, 349, 356, 357, 360, 361, 372, 373, 375, 378, 380, 381, 395, 397, 398, 404, 406, 408, 409, 411, 412, 415, 416, 417, 421, 422, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 471, 475, 478, 481, 484, 485, 488, 489, 493, 494, 495, 500, 501, 502, 503, 504, 505, 506, 508, 510, 531, 543, 544, 554, 563, 564, 568, 570, 572, 578, 583, 584, 586, 592, 602, 604, 616, 617, 618, 619, 626, 632, 637, 638, 639, 641, 655, 659, 668, 670, 671, 679, 680, 682, 683, 684, 685, 686, 687, 691, 698, 701, 703, 720, 721, 722, 724, 726, 733, 739, 740, 742, 750, 751, 754, 761, 762, 764, 769, 783, 787, 788, 789, 794, 796, 797, 798, 799, 802, 804, 807, 809, 815, 820, 821, 823, 831, 833, 836, 838, 840, 841, 842, 845, 848, 849, 853, 854, 856, 857, 858, 859, 860, 861, 862, 868, 872, 877, 879, 882, 886, 889, 891, 896, 899, 900, 901, 902, 906, 910, 911, 921, 922, 923, 924, 927, 938, 946, 948, 950, 951, 956, 957, 958, 967, 969, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 991, 998, 999, 1000, 1001, 1002, 1003, 1007, 1010, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1067, 1068, 1069, 1073, 1074, 1075, 1078, 1079, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1096, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1134, 1135, 1148, 1153, 1162, 1188, 1189, 1190, 1191, 1192, 1193, 1216, 1271, 1273, 1283, 1285, 1286, 1287, 1297, 1298, 1301, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1333, 1334, 1341, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1354, 1355, 1359, 1360, 1361, 1362, 1370, 1371, 1374, 1375, 1376, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1391, 1395, 1396, 1397, 1400, 1402, 1403, 1404, 1408, 1411, 1414, 1415, 1423, 1424, 1427, 1428, 1429, 1430, 1431, 1434, 1435, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1468, 1469, 1471, 1472, 1473, 1475, 1477, 1478, 1479, 1482, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507], "usabl": [112, 421, 1374, 1377, 1501], "usag": [67, 69, 118, 128, 129, 135, 136, 248, 255, 285, 415, 424, 495, 777, 1304, 1308, 1349, 1354, 1356, 1367, 1370, 1371, 1380, 1381, 1382, 1385, 1389, 1396, 1404, 1415, 1443, 1445, 1448, 1452, 1468, 1471, 1477, 1478, 1483, 1484, 1490, 1492, 1498], "use_auto_spmd_partit": 493, "use_color": 86, "use_direct_linear": 1368, "use_global_device_id": 1378, "use_high_dynamic_range_gumbel": [1023, 1026, 1036], "use_lookahead": 1493, "use_magma": [397, 404], "use_mesh": 1354, "use_shardy_partition": [1371, 1402], "use_spmd_partit": 493, "use_trac": 242, "used_axis_names_jaxpr": 1354, "used_out": [126, 127], "user": [10, 18, 76, 79, 97, 120, 126, 197, 245, 248, 255, 283, 305, 306, 360, 381, 454, 459, 460, 501, 505, 506, 508, 529, 543, 544, 557, 700, 730, 864, 882, 899, 900, 927, 969, 975, 1341, 1345, 1347, 1349, 1354, 1356, 1363, 1364, 1365, 1368, 1371, 1376, 1377, 1378, 1381, 1384, 1402, 1415, 1424, 1428, 1431, 1438, 1442, 1444, 1445, 1449, 1450, 1452, 1453, 1456, 1457, 1470, 1474, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1504, 1505, 1506], "user_check": [120, 1360, 1361], "user_shap": 1402, "user_shard": 1402, "userwarn": [1364, 1377, 1462, 1465], "uses_global_const": [1354, 1371, 1415], "uses_shape_polymorph": [1354, 1371], "usr": [1378, 1496], "usual": [64, 71, 98, 290, 296, 360, 378, 458, 465, 488, 654, 1002, 1013, 1015, 1344, 1346, 1347, 1348, 1354, 1359, 1363, 1368, 1369, 1374, 1377, 1382, 1411, 1424, 1431, 1442, 1448, 1449, 1451, 1454, 1457, 1461, 1468, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1487, 1489, 1490, 1492, 1493, 1496, 1498, 1507], "util": [69, 113, 198, 449, 505, 506, 508, 1341, 1345, 1348, 1353, 1354, 1359, 1366, 1377, 1378, 1382, 1405, 1431, 1434, 1437, 1438, 1440, 1444, 1446, 1452, 1456, 1460, 1466, 1468, 1471, 1474, 1483, 1484, 1487, 1489, 1490, 1492, 1493, 1494, 1506], "utterli": 1456, "v": [47, 104, 213, 230, 234, 239, 242, 398, 508, 637, 641, 655, 658, 793, 794, 811, 886, 899, 924, 1082, 1083, 1094, 1101, 1342, 1348, 1354, 1363, 1366, 1370, 1371, 1374, 1376, 1377, 1382, 1387, 1390, 1403, 1414, 1439, 1440, 1443, 1461, 1463, 1467, 1468, 1479, 1487, 1490, 1492, 1494, 1497, 1506], "v0": [1307, 1354, 1378, 1381, 1428, 1431, 1452, 1464], "v1": [1348, 1354, 1356], "v10": 668, "v100": 1424, "v1alpha2": 1461, "v2": [1348, 1356, 1384], "v2023": 1354, "v3": 504, "v4": [1354, 1489, 1490, 1493], "v5": [1490, 1492, 1494], "v5e": [1354, 1490, 1492, 1494], "v5e_flop": 1492, "v5e_membw": 1492, "v5e_op_intens": 1492, "v5litepod": 1461, "v5p": [1487, 1490, 1493], "v6": 1489, "v6e": 1354, "v9": 1354, "v97": 1023, "v_": [1342, 1349], "v_1": 1349, "v_2": 1349, "v_3": 1349, "v_batch": 1475, "v_blk": 1474, "v_block": 1474, "v_dot": 1376, "v_j": [637, 641], "v_tm1": 1342, "vae": 1451, "val": [181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 259, 378, 488, 700, 749, 784, 819, 876, 882, 907, 914, 924, 981, 1291, 1301, 1326, 1346, 1348, 1359, 1451, 1456, 1466, 1475, 1498], "val1": 1404, "val2": 1404, "val_out": 1348, "valid": [0, 10, 160, 198, 250, 251, 341, 343, 344, 345, 346, 347, 348, 364, 365, 407, 449, 489, 494, 501, 543, 614, 637, 641, 776, 864, 906, 923, 950, 982, 1106, 1107, 1108, 1109, 1112, 1283, 1304, 1307, 1354, 1356, 1359, 1374, 1377, 1382, 1397, 1411, 1435, 1439, 1441, 1444, 1448, 1452, 1468, 1484, 1496, 1497, 1506], "valid_jaxtyp": 1354, "vals_in": 1348, "vals_out": 1348, "valu": [5, 6, 10, 12, 18, 57, 64, 67, 69, 71, 75, 77, 78, 80, 81, 83, 84, 94, 96, 97, 98, 102, 107, 108, 112, 113, 118, 119, 120, 126, 127, 130, 133, 135, 136, 143, 145, 146, 152, 153, 161, 168, 176, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 198, 209, 210, 220, 225, 237, 238, 241, 244, 248, 283, 284, 286, 288, 289, 291, 292, 295, 296, 297, 298, 302, 303, 305, 306, 321, 332, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 356, 359, 360, 363, 365, 366, 367, 377, 378, 379, 380, 381, 389, 394, 403, 406, 407, 408, 415, 421, 422, 423, 424, 430, 431, 432, 433, 436, 449, 451, 456, 458, 459, 460, 461, 462, 463, 464, 466, 470, 475, 476, 481, 483, 486, 488, 489, 493, 494, 495, 500, 503, 508, 509, 518, 526, 529, 530, 531, 536, 538, 540, 549, 559, 563, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 589, 591, 595, 599, 600, 601, 604, 606, 620, 623, 625, 626, 627, 632, 637, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 654, 655, 658, 659, 660, 661, 664, 667, 670, 674, 678, 679, 680, 681, 687, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 712, 714, 719, 721, 723, 726, 727, 728, 729, 731, 733, 734, 735, 738, 739, 740, 741, 744, 746, 752, 753, 754, 761, 762, 764, 765, 766, 769, 774, 775, 776, 782, 783, 785, 786, 787, 789, 792, 798, 799, 802, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 817, 818, 819, 823, 831, 832, 833, 836, 841, 842, 848, 849, 850, 851, 852, 853, 856, 857, 858, 859, 860, 861, 864, 866, 867, 868, 869, 872, 876, 877, 878, 879, 881, 882, 883, 885, 886, 887, 888, 889, 891, 892, 894, 896, 897, 899, 900, 901, 902, 906, 910, 911, 913, 918, 919, 920, 922, 924, 925, 927, 928, 930, 931, 934, 936, 938, 940, 942, 943, 946, 948, 950, 951, 953, 954, 956, 958, 968, 969, 975, 976, 977, 978, 979, 980, 982, 985, 987, 988, 989, 993, 994, 998, 999, 1000, 1001, 1002, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1064, 1065, 1066, 1067, 1068, 1069, 1075, 1076, 1083, 1086, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1118, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1291, 1295, 1296, 1297, 1298, 1303, 1304, 1308, 1309, 1310, 1311, 1331, 1332, 1333, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1366, 1368, 1369, 1370, 1371, 1374, 1376, 1378, 1379, 1381, 1382, 1385, 1390, 1396, 1402, 1403, 1411, 1415, 1423, 1424, 1428, 1431, 1435, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1466, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1507], "valuat": 1374, "value1": 1507, "value2": [1484, 1507], "value_and_grad": [67, 77, 78, 80, 1354, 1396, 1476, 1503], "value_and_grad_f": 1390, "value_and_jvp": 1390, "value_flat": 1497, "value_fn": 1342, "value_structur": 1497, "value_tre": 1497, "valueerror": [119, 120, 131, 132, 239, 328, 617, 884, 890, 906, 944, 991, 1002, 1148, 1152, 1153, 1307, 1342, 1349, 1354, 1359, 1360, 1361, 1371, 1374, 1376, 1378, 1440, 1464, 1467, 1472, 1476, 1484, 1494, 1496, 1506], "van": 1023, "vandermond": 986, "vanderpla": [927, 975, 1352, 1448, 1455, 1456], "vanilla": 1480, "vanish": 1349, "var": [257, 258, 554, 862, 946, 1348, 1349, 1354, 1356, 1366, 1466], "var_str": 1348, "vararg": 733, "vari": [335, 1005, 1344, 1345, 1354, 1445, 1452, 1462, 1471, 1472, 1487, 1489], "variabl": [98, 255, 257, 357, 397, 640, 645, 923, 985, 1019, 1028, 1105, 1302, 1312, 1342, 1348, 1349, 1350, 1354, 1356, 1357, 1359, 1362, 1364, 1366, 1368, 1370, 1371, 1372, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1385, 1390, 1415, 1431, 1440, 1443, 1447, 1454, 1462, 1463, 1466, 1468, 1471, 1484, 1490, 1493, 1495, 1496, 1499, 1501, 1503, 1507], "variad": [466, 1354, 1371, 1444], "varianc": [60, 554, 860, 862, 946, 987, 1302, 1342, 1447, 1474, 1490], "variance_sc": [520, 521, 522, 523, 524, 525, 1397], "variancesc": 529, "variant": [1333, 1348, 1354, 1374, 1384, 1396, 1431, 1440, 1445, 1448, 1474, 1480, 1484, 1494], "variat": [1374, 1382, 1468], "varieti": [1341, 1448, 1456, 1457, 1480, 1487], "variou": [178, 670, 1105, 1344, 1354, 1356, 1360, 1376, 1435, 1446, 1456, 1487, 1488, 1490, 1498, 1507], "vast": 1444, "vastli": [804, 1377], "vaswani": 1503, "vcat": 1348, "vdot": [989, 1333, 1342, 1350, 1467, 1492], "ve": [1342, 1346, 1348, 1349, 1357, 1368, 1369, 1376, 1377, 1382, 1442, 1444, 1447, 1449, 1453, 1454, 1455, 1461, 1464, 1465, 1467, 1468, 1470, 1473, 1479, 1480, 1487, 1488, 1502], "vec": [1346, 1350, 1467], "vecdot": [670, 753, 799, 833, 835, 988, 990], "vecmat": [356, 835, 989], "vecs_in": 1348, "vector": [143, 229, 230, 233, 234, 283, 288, 289, 290, 295, 297, 357, 360, 396, 400, 404, 405, 406, 410, 495, 540, 570, 646, 664, 670, 723, 753, 790, 793, 797, 799, 800, 805, 811, 812, 817, 818, 833, 835, 840, 930, 988, 989, 990, 1002, 1016, 1045, 1049, 1070, 1087, 1089, 1095, 1099, 1101, 1116, 1117, 1118, 1119, 1152, 1153, 1194, 1195, 1331, 1332, 1333, 1337, 1349, 1352, 1354, 1360, 1379, 1389, 1390, 1414, 1424, 1431, 1451, 1455, 1460, 1463, 1465, 1468, 1473, 1478, 1480, 1484, 1487, 1488, 1489, 1493, 1498], "vector_arg_valu": 1390, "vector_in": 1348, "vector_norm": 800, "vector_out": 1348, "vectoris": [1342, 1498], "vectorized_unop_abstract_ev": 1348, "vectorized_unop_batching_rul": 1348, "vee": [324, 1456], "veloc": 1457, "vendor": 1365, "ventur": 1503, "verbos": [1354, 1366, 1479, 1480, 1496, 1506], "veri": [150, 201, 203, 223, 424, 589, 591, 678, 777, 802, 823, 924, 1040, 1118, 1342, 1344, 1348, 1351, 1354, 1356, 1366, 1369, 1378, 1380, 1384, 1428, 1444, 1448, 1451, 1453, 1454, 1456, 1459, 1467, 1469, 1479, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1503], "verif": 1471, "verifi": [133, 1346, 1354, 1356, 1374, 1390, 1471, 1474, 1475, 1479, 1480, 1492], "versa": [296, 1354, 1381, 1411, 1447, 1462, 1490], "version": [67, 87, 88, 110, 111, 212, 221, 227, 231, 235, 238, 239, 244, 268, 283, 286, 296, 337, 378, 415, 458, 466, 475, 488, 503, 505, 570, 572, 578, 582, 584, 604, 620, 632, 633, 634, 640, 645, 655, 659, 677, 679, 700, 750, 762, 841, 868, 872, 878, 882, 887, 897, 899, 900, 921, 922, 923, 927, 957, 975, 976, 977, 978, 979, 980, 982, 991, 994, 1002, 1049, 1086, 1110, 1125, 1127, 1128, 1129, 1135, 1136, 1141, 1142, 1157, 1162, 1283, 1284, 1304, 1333, 1334, 1342, 1344, 1348, 1349, 1354, 1357, 1359, 1367, 1369, 1370, 1372, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1390, 1404, 1411, 1414, 1415, 1428, 1435, 1439, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1454, 1455, 1456, 1458, 1459, 1461, 1462, 1463, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1479, 1483, 1484, 1488, 1494, 1495, 1496, 1502, 1507], "versu": [1371, 1377, 1382, 1443, 1468, 1487, 1494], "vertic": [590, 614, 627, 666, 667, 743, 744, 941, 945, 992, 993], "vf": 1118, "vfoo": 1333, "vgrad": [1342, 1467], "vh": [811, 1101], "vhlo": 1415, "vi": 1118, "via": [9, 10, 13, 75, 98, 113, 119, 167, 174, 277, 281, 282, 296, 322, 323, 324, 325, 337, 356, 357, 368, 382, 383, 392, 414, 419, 459, 460, 467, 468, 469, 498, 500, 502, 529, 543, 562, 570, 572, 582, 586, 592, 595, 605, 610, 612, 627, 634, 645, 648, 649, 650, 651, 654, 667, 670, 677, 720, 721, 723, 732, 733, 744, 783, 790, 801, 802, 803, 811, 813, 815, 834, 846, 847, 851, 852, 864, 865, 878, 881, 895, 899, 900, 905, 911, 924, 926, 929, 937, 944, 945, 947, 949, 950, 951, 954, 957, 985, 993, 1002, 1009, 1052, 1063, 1064, 1067, 1068, 1069, 1078, 1079, 1091, 1092, 1098, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1116, 1117, 1134, 1136, 1283, 1302, 1307, 1342, 1344, 1348, 1351, 1354, 1356, 1357, 1359, 1360, 1364, 1366, 1369, 1370, 1378, 1379, 1381, 1390, 1411, 1416, 1428, 1438, 1440, 1446, 1448, 1450, 1452, 1455, 1456, 1459, 1461, 1462, 1463, 1464, 1469, 1470, 1471, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1498, 1502, 1505], "viabl": [1448, 1479, 1480], "vice": [296, 1354, 1381, 1411, 1447, 1462, 1490], "video": [1342, 1350, 1352, 1467], "view": [321, 677, 834, 846, 905, 911, 917, 944, 949, 957, 985, 1013, 1015, 1344, 1354, 1359, 1366, 1411, 1428, 1445, 1446, 1447, 1470, 1471, 1474, 1475, 1480, 1483, 1484, 1500], "viewabl": [1354, 1357], "viewer": [1013, 1015, 1496], "violat": [441, 991, 1450, 1451, 1456], "viridi": 1469, "virtual": 1485, "virtualenv": 1366, "visibl": [69, 98, 161, 164, 165, 170, 1354, 1368, 1455, 1461, 1470, 1484, 1487, 1490], "visit": [1349, 1494], "visual": [85, 86, 1010, 1349, 1357, 1366, 1367, 1384, 1391, 1435, 1464, 1480, 1488, 1490, 1496, 1500, 1503], "visualize_array_shard": [1461, 1464, 1474, 1500], "vital": 1448, "viz": 1503, "vjp": [67, 75, 79, 80, 494, 495, 1287, 1354, 1371, 1378, 1379, 1382, 1415, 1458, 1468, 1475], "vjp_a": [1342, 1463], "vjp_flat": 1348, "vjp_fn": [1342, 1467], "vjp_fun": [1342, 1467], "vjp_order": [1371, 1415], "vjp_x": [1342, 1463], "vjpfun": 1332, "vl": 397, "vm": [1354, 1384, 1461, 1495, 1496], "vma": [63, 1474], "vmap": [72, 73, 74, 128, 129, 240, 283, 311, 339, 381, 415, 483, 495, 500, 570, 632, 679, 723, 733, 820, 877, 991, 1002, 1016, 1344, 1346, 1350, 1351, 1353, 1354, 1360, 1363, 1370, 1371, 1376, 1377, 1379, 1390, 1414, 1431, 1439, 1443, 1444, 1445, 1447, 1448, 1452, 1455, 1460, 1462, 1463, 1465, 1466, 1470, 1473, 1474, 1488, 1497, 1498, 1502, 1506], "vmap_batched_apply_matrix": 1475, "vmap_batched_log_joint": 1476, "vmap_f": 1390, "vmap_flat": 1348, "vmap_jaxpr": 1348, "vmap_jmp": [1342, 1467], "vmap_method": [283, 1016, 1354, 1376, 1378], "vmap_mjp": [1342, 1467], "vmap_rul": [73, 1348], "vmap_trac": 1348, "vmap_v": [1342, 1467], "vmem": [1487, 1489, 1490, 1492, 1493, 1494], "vmodul": 1374, "vocab_s": 1503, "void": [668, 1378, 1454], "volatil": 145, "volum": 742, "volume12": 1396, "von": [1279, 1280], "vpu": 1493, "vq": [1354, 1448], "vr": 397, "vreg": [1490, 1493], "vscode": 1444, "vspace": 1348, "vsplit": [590, 666, 743, 941], "vstack": [614, 627, 640, 645, 667, 744, 945, 1342, 1354, 1467], "vt": [811, 1101], "vtype": 1390, "vv": 1333, "w": [76, 82, 84, 343, 344, 396, 397, 398, 506, 670, 793, 794, 795, 796, 887, 1342, 1348, 1350, 1351, 1354, 1363, 1366, 1371, 1377, 1382, 1387, 1390, 1431, 1443, 1447, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1473, 1474, 1479, 1496, 1502], "w1": [1382, 1464, 1468, 1471], "w2": [1382, 1464, 1468, 1471], "w3": [1382, 1464, 1468, 1471], "w4": [1464, 1471], "w_b_pair": [1382, 1468], "w_copi": 1464, "w_dirderiv_autodiff": [1350, 1467], "w_dirderiv_numer": [1350, 1467], "w_first": 1474, "w_frag": 1474, "w_grad": [1350, 1467], "w_grad_numer": [1350, 1467], "w_i": 887, "w_init": 1397, "w_kei": [1342, 1350, 1465, 1467, 1473], "w_last": 1474, "w_vector": 396, "wa": [76, 79, 100, 120, 131, 160, 168, 253, 283, 483, 922, 927, 975, 1103, 1113, 1308, 1310, 1342, 1344, 1346, 1349, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1376, 1377, 1378, 1380, 1381, 1387, 1390, 1415, 1440, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1462, 1463, 1464, 1465, 1474, 1475, 1476, 1478, 1480, 1484, 1485, 1487, 1489, 1490, 1492, 1494, 1496, 1497, 1501, 1502, 1504, 1506], "wai": [67, 69, 75, 104, 178, 239, 337, 501, 570, 654, 670, 745, 750, 798, 804, 915, 921, 985, 1016, 1086, 1153, 1162, 1302, 1304, 1341, 1342, 1344, 1348, 1349, 1351, 1353, 1354, 1356, 1359, 1360, 1363, 1366, 1368, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1382, 1384, 1385, 1390, 1415, 1428, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1479, 1480, 1484, 1487, 1488, 1489, 1490, 1492, 1496, 1498, 1499, 1500, 1502, 1503, 1506], "wait": [18, 148, 150, 163, 173, 175, 1347, 1363, 1369, 1442, 1444, 1461, 1474, 1479, 1483, 1487, 1490, 1492, 1503], "wait_load_tmem": [160, 1484], "wait_read_onli": 173, "wait_recv": [1479, 1490], "wait_send": [1479, 1490], "wait_smem_to_gmem": [160, 167, 1483, 1484], "walk": [1350, 1461, 1462, 1466], "walkthrough": 1435, "wall": [1347, 1474], "want": [82, 97, 119, 150, 252, 253, 360, 435, 495, 502, 504, 557, 798, 1013, 1015, 1101, 1304, 1305, 1341, 1342, 1344, 1345, 1348, 1349, 1354, 1359, 1360, 1361, 1362, 1363, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1385, 1387, 1390, 1402, 1411, 1435, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1449, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1472, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1489, 1490, 1492, 1497, 1498, 1500, 1502, 1503, 1506], "wari": 1503, "warm": 1459, "warmup": 1474, "warn": [223, 499, 557, 670, 887, 997, 1345, 1354, 1360, 1377, 1378, 1385, 1428, 1455, 1462, 1464, 1465, 1477, 1484, 1487], "warp": [171, 174, 183, 292, 1482, 1484], "warpgroup": [1483, 1484], "warranti": [1454, 1465, 1473], "wasd": 1496, "wasn": [1369, 1453], "wast": [1382, 1447, 1454, 1468, 1483, 1484, 1489, 1490, 1503], "watch": 1461, "wattribut": 1378, "wave": 1484, "wb": [922, 1474], "wb_grad": [1350, 1467], "wbar": 1447, "we": [69, 75, 82, 83, 97, 131, 132, 178, 198, 239, 252, 253, 304, 305, 306, 360, 402, 423, 435, 436, 437, 495, 503, 508, 541, 542, 544, 578, 632, 638, 646, 670, 787, 804, 821, 840, 950, 951, 977, 978, 979, 980, 985, 1083, 1085, 1094, 1096, 1112, 1116, 1117, 1118, 1148, 1162, 1304, 1308, 1309, 1310, 1333, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1354, 1356, 1357, 1359, 1361, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1385, 1387, 1395, 1402, 1404, 1411, 1414, 1415, 1431, 1438, 1439, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1480, 1481, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1506], "weak": [296, 1354, 1379, 1444, 1448, 1456, 1505], "weak_typ": [63, 67, 75, 107, 316, 421, 422, 495, 567, 573, 575, 577, 586, 592, 627, 636, 643, 652, 667, 674, 712, 716, 717, 729, 734, 735, 744, 745, 749, 768, 771, 782, 785, 786, 845, 867, 869, 894, 907, 908, 912, 936, 942, 953, 993, 1304, 1312, 1333, 1342, 1344, 1346, 1359, 1360, 1370, 1371, 1374, 1376, 1390, 1441, 1456, 1459, 1460, 1462, 1463, 1466, 1467, 1475, 1505], "weaker": 1346, "weakli": [296, 380, 897, 1354, 1379, 1456], "weakref": 1348, "weav": 1349, "web": [1367, 1496], "websit": [1353, 1384], "wedg": 322, "weed": [1342, 1463], "week": 1371, "weekli": 1408, "weep": 1462, "weibul": 1060, "weigh": [602, 1448], "weight": [341, 343, 344, 346, 347, 403, 519, 520, 521, 522, 523, 524, 525, 528, 531, 602, 604, 645, 739, 740, 741, 742, 838, 887, 1094, 1209, 1212, 1342, 1351, 1369, 1381, 1382, 1396, 1445, 1465, 1467, 1468, 1471, 1473, 1474, 1500, 1502, 1506], "weights_kei": 1502, "weights_shard": 1500, "weird": [1348, 1359], "welch": [1110, 1354], "welcom": [1341, 1352, 1357, 1358, 1366, 1377], "well": [61, 67, 501, 536, 549, 661, 701, 789, 821, 884, 886, 889, 890, 1017, 1023, 1037, 1085, 1149, 1160, 1163, 1164, 1296, 1302, 1342, 1344, 1348, 1349, 1350, 1352, 1354, 1357, 1358, 1363, 1366, 1369, 1374, 1376, 1377, 1378, 1384, 1387, 1390, 1414, 1431, 1439, 1441, 1442, 1444, 1445, 1446, 1448, 1450, 1452, 1455, 1456, 1458, 1460, 1461, 1463, 1467, 1472, 1474, 1475, 1479, 1480, 1484, 1489, 1492, 1493, 1494, 1496, 1502, 1503], "went": 1505, "were": [252, 363, 366, 1026, 1344, 1346, 1348, 1349, 1353, 1354, 1356, 1359, 1362, 1367, 1370, 1371, 1377, 1379, 1382, 1387, 1414, 1424, 1429, 1431, 1440, 1442, 1443, 1444, 1445, 1448, 1450, 1453, 1454, 1455, 1456, 1457, 1458, 1461, 1462, 1464, 1468, 1470, 1478, 1479, 1480, 1484, 1487, 1492, 1493, 1495, 1498, 1501, 1502, 1503, 1505, 1506], "weren": [1342, 1447, 1463], "wg": 1483, "wg_axi": 1483, "wg_idx": 1483, "wg_slice": 1483, "wg_splat": 1484, "wg_stride": 1484, "wgmma": [150, 168, 175, 1483], "wgmma_col": 1484, "wgmma_row": 1484, "wgmma_wait": [174, 1483], "wgmmaabstractaccumulatorref": 174, "wgmmaaccumulatorref": [147, 174], "wh1": 1471, "wh2": 1471, "what": [67, 424, 454, 503, 557, 620, 625, 668, 1098, 1099, 1342, 1344, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1359, 1360, 1363, 1366, 1369, 1370, 1371, 1376, 1377, 1378, 1380, 1383, 1424, 1441, 1442, 1445, 1446, 1447, 1449, 1451, 1452, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1470, 1474, 1475, 1479, 1480, 1482, 1487, 1488, 1490, 1491, 1492, 1493, 1495, 1500, 1502, 1503, 1505], "whatev": [1354, 1369, 1411, 1447, 1466, 1470, 1479, 1503], "wheel": [1354, 1371, 1445, 1457, 1500], "wheel_list": 1366, "when": [10, 13, 18, 61, 67, 69, 72, 74, 75, 76, 77, 79, 80, 83, 87, 88, 91, 92, 98, 100, 119, 120, 126, 128, 129, 143, 148, 160, 167, 168, 180, 238, 239, 244, 255, 283, 290, 291, 292, 296, 303, 304, 305, 306, 328, 339, 343, 344, 360, 381, 403, 415, 424, 430, 436, 437, 456, 458, 459, 460, 461, 462, 463, 464, 468, 469, 483, 499, 501, 503, 505, 506, 508, 554, 557, 573, 575, 584, 586, 592, 638, 660, 677, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 703, 705, 720, 723, 738, 762, 776, 787, 788, 794, 796, 813, 823, 832, 834, 836, 842, 846, 853, 856, 864, 866, 868, 877, 881, 882, 883, 885, 886, 888, 889, 894, 905, 911, 917, 919, 923, 924, 925, 927, 928, 937, 944, 949, 950, 954, 957, 958, 959, 960, 962, 964, 966, 975, 976, 977, 978, 979, 980, 985, 986, 988, 994, 1002, 1003, 1013, 1015, 1016, 1017, 1019, 1026, 1036, 1037, 1040, 1052, 1071, 1072, 1073, 1074, 1075, 1083, 1084, 1086, 1105, 1116, 1117, 1118, 1148, 1163, 1164, 1298, 1302, 1304, 1307, 1310, 1341, 1342, 1345, 1346, 1347, 1348, 1349, 1350, 1354, 1356, 1357, 1359, 1360, 1361, 1362, 1364, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1382, 1385, 1387, 1396, 1402, 1404, 1411, 1415, 1424, 1428, 1431, 1439, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1470, 1471, 1472, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506], "whenev": [1052, 1371, 1374, 1442, 1447, 1479, 1484], "where": [3, 4, 34, 35, 36, 40, 53, 54, 60, 64, 67, 71, 74, 75, 77, 80, 93, 97, 120, 126, 131, 132, 134, 136, 145, 166, 178, 222, 223, 239, 254, 283, 286, 288, 289, 290, 293, 295, 296, 297, 304, 305, 306, 335, 339, 343, 344, 345, 356, 363, 389, 391, 397, 399, 400, 401, 403, 404, 407, 408, 409, 420, 424, 430, 437, 458, 459, 460, 461, 462, 463, 464, 465, 481, 486, 495, 501, 502, 503, 508, 512, 520, 521, 522, 523, 524, 525, 531, 533, 536, 537, 538, 544, 545, 549, 554, 562, 563, 565, 566, 568, 570, 571, 578, 584, 605, 610, 612, 625, 637, 640, 641, 645, 654, 674, 687, 693, 703, 719, 739, 740, 742, 762, 765, 768, 770, 771, 772, 773, 774, 788, 792, 793, 794, 798, 808, 811, 819, 825, 826, 827, 829, 830, 832, 833, 836, 837, 838, 842, 843, 847, 848, 853, 854, 856, 858, 860, 861, 862, 866, 868, 869, 881, 887, 894, 896, 906, 923, 924, 925, 927, 931, 934, 943, 946, 947, 948, 955, 975, 976, 981, 987, 1002, 1019, 1021, 1023, 1025, 1028, 1029, 1034, 1045, 1050, 1051, 1053, 1055, 1059, 1060, 1079, 1080, 1084, 1086, 1087, 1090, 1094, 1095, 1097, 1101, 1105, 1106, 1107, 1108, 1109, 1112, 1122, 1123, 1124, 1125, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1146, 1148, 1151, 1152, 1153, 1154, 1157, 1158, 1162, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1180, 1182, 1184, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1217, 1218, 1219, 1236, 1239, 1244, 1248, 1249, 1252, 1254, 1256, 1259, 1262, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1279, 1280, 1281, 1282, 1284, 1290, 1291, 1295, 1296, 1304, 1331, 1332, 1333, 1342, 1344, 1346, 1348, 1349, 1351, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1378, 1381, 1382, 1384, 1385, 1387, 1390, 1396, 1400, 1403, 1411, 1424, 1428, 1434, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1499, 1500, 1502, 1503, 1504, 1505, 1506], "wherea": [119, 283, 658, 664, 883, 885, 1016, 1086, 1342, 1348, 1349, 1363, 1378, 1431, 1444, 1447, 1462, 1470, 1474, 1490, 1492, 1493, 1505], "wherev": [626, 1445, 1453, 1456, 1470], "whether": [3, 4, 13, 67, 73, 77, 80, 81, 82, 84, 100, 118, 130, 132, 134, 137, 167, 198, 229, 230, 233, 234, 241, 283, 289, 290, 293, 295, 296, 297, 356, 357, 362, 364, 365, 367, 381, 387, 436, 458, 459, 460, 461, 462, 463, 464, 475, 493, 495, 510, 563, 564, 568, 583, 586, 587, 588, 720, 764, 767, 768, 769, 770, 771, 772, 773, 778, 794, 796, 840, 876, 877, 905, 906, 911, 924, 938, 981, 998, 999, 1000, 1001, 1026, 1078, 1079, 1094, 1097, 1114, 1283, 1289, 1293, 1295, 1297, 1298, 1299, 1305, 1331, 1332, 1341, 1342, 1348, 1353, 1354, 1356, 1357, 1364, 1366, 1376, 1377, 1382, 1400, 1415, 1435, 1441, 1444, 1446, 1448, 1451, 1455, 1456, 1459, 1460, 1463, 1467, 1468, 1470, 1471, 1472, 1474, 1479, 1483, 1494, 1496, 1503], "which": [9, 10, 29, 57, 67, 75, 76, 77, 79, 82, 87, 88, 91, 95, 97, 98, 100, 110, 111, 113, 119, 120, 126, 127, 130, 132, 136, 139, 145, 150, 166, 168, 179, 180, 198, 205, 206, 215, 222, 239, 248, 253, 254, 267, 277, 281, 282, 283, 289, 290, 293, 295, 296, 297, 303, 305, 306, 311, 327, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 356, 357, 360, 362, 364, 381, 387, 397, 398, 408, 409, 415, 421, 424, 436, 442, 443, 444, 445, 447, 448, 449, 450, 458, 459, 460, 461, 462, 463, 464, 466, 474, 475, 477, 483, 489, 493, 495, 500, 501, 502, 503, 504, 506, 508, 512, 518, 528, 536, 537, 538, 540, 543, 549, 554, 563, 568, 569, 570, 571, 572, 578, 580, 581, 582, 583, 584, 586, 590, 592, 595, 599, 600, 601, 602, 604, 614, 616, 617, 618, 620, 625, 632, 633, 634, 637, 640, 641, 644, 645, 646, 648, 649, 650, 651, 654, 659, 660, 664, 670, 671, 672, 673, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 705, 720, 723, 727, 728, 730, 731, 733, 751, 753, 754, 761, 762, 769, 776, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 801, 804, 805, 809, 811, 812, 813, 816, 817, 818, 819, 828, 831, 833, 836, 838, 839, 842, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 866, 867, 868, 873, 874, 876, 877, 878, 879, 881, 882, 884, 886, 887, 889, 890, 896, 897, 898, 899, 900, 901, 902, 910, 911, 917, 919, 920, 922, 923, 927, 934, 937, 938, 941, 944, 945, 946, 948, 950, 951, 954, 956, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 975, 976, 977, 978, 979, 980, 981, 984, 985, 987, 988, 989, 991, 995, 996, 1002, 1010, 1011, 1013, 1015, 1016, 1017, 1023, 1026, 1033, 1036, 1040, 1049, 1052, 1071, 1072, 1073, 1074, 1075, 1082, 1083, 1086, 1091, 1092, 1094, 1100, 1101, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1134, 1136, 1140, 1149, 1151, 1152, 1153, 1158, 1160, 1161, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1304, 1307, 1331, 1332, 1333, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1387, 1390, 1396, 1402, 1403, 1411, 1414, 1415, 1416, 1424, 1428, 1429, 1434, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1505, 1506], "whichev": [483, 1441], "while": [13, 18, 65, 66, 67, 75, 82, 97, 100, 112, 119, 257, 337, 344, 378, 415, 458, 488, 501, 551, 570, 580, 581, 628, 629, 650, 651, 664, 708, 709, 710, 720, 755, 756, 757, 758, 777, 848, 849, 850, 857, 859, 877, 879, 901, 908, 927, 944, 971, 972, 973, 974, 975, 1002, 1007, 1008, 1009, 1013, 1015, 1069, 1341, 1342, 1348, 1350, 1354, 1355, 1356, 1359, 1363, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1387, 1402, 1428, 1440, 1442, 1444, 1445, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1470, 1471, 1474, 1475, 1479, 1480, 1483, 1484, 1487, 1489, 1490, 1492, 1493, 1494, 1496, 1497, 1498, 1500, 1501, 1503], "while_bodi": 1381, "while_loop": [97, 356, 378, 458, 1342, 1346, 1348, 1354, 1376, 1377, 1441, 1462, 1463, 1479], "while_p": 1414, "whileop": [458, 488], "whio": 344, "whistl": 1449, "whitespac": [250, 251], "whl": [1366, 1387], "who": [283, 1356, 1364, 1381, 1447, 1448, 1449, 1450, 1451, 1452, 1483], "whoever": 1385, "whole": [81, 170, 178, 407, 881, 1289, 1290, 1291, 1293, 1295, 1297, 1298, 1299, 1307, 1342, 1348, 1349, 1364, 1367, 1369, 1374, 1377, 1382, 1411, 1440, 1448, 1461, 1463, 1465, 1467, 1468, 1470, 1473, 1479, 1484, 1488, 1497, 1500, 1503], "whose": [12, 113, 130, 178, 210, 252, 253, 290, 293, 295, 360, 400, 403, 466, 503, 526, 529, 530, 639, 687, 692, 802, 816, 1016, 1037, 1061, 1307, 1349, 1359, 1366, 1371, 1374, 1377, 1379, 1411, 1431, 1434, 1456, 1470, 1475, 1485, 1497, 1498, 1500, 1502, 1506], "why": [285, 296, 1342, 1349, 1367, 1370, 1411, 1447, 1451, 1453, 1455, 1460, 1467, 1481, 1484, 1487, 1490, 1494, 1495, 1496, 1498, 1502, 1506], "wi0": 1445, "wi1": 1445, "wide": [1341, 1342, 1352, 1378, 1448, 1455, 1456, 1467, 1480, 1487, 1488, 1489], "widehat": 887, "widest": [896, 948, 1364], "width": [447, 448, 877, 897, 1382, 1456, 1468, 1469], "wiki": [357, 701], "wikipedia": [357, 701], "wild": 1455, "wildcard": [1366, 1456], "willing": [1354, 1456, 1505], "win": [1342, 1443, 1467], "window": [341, 343, 344, 345, 347, 449, 508, 603, 613, 684, 698, 736, 737, 780, 1110, 1113, 1114, 1115, 1345, 1354, 1365, 1371, 1384, 1424, 1446, 1469, 1475, 1480, 1484, 1489], "window_dil": 449, "window_dimens": 449, "window_s": 508, "window_shap": 1397, "window_strid": [113, 341, 343, 344, 345, 347, 449, 1460], "wio": 1469, "wire": 1378, "wisdom": [1350, 1467], "wise": [213, 214, 299, 300, 309, 310, 312, 313, 314, 349, 350, 372, 373, 375, 411, 412, 413, 415, 420, 467, 468, 469, 471, 472, 484, 485, 493, 507, 509, 510, 513, 514, 515, 516, 533, 535, 539, 541, 542, 545, 546, 547, 548, 550, 553, 555, 559, 562, 564, 570, 573, 574, 575, 576, 577, 579, 587, 588, 590, 605, 610, 612, 614, 621, 626, 627, 636, 643, 663, 664, 666, 667, 674, 675, 676, 678, 681, 712, 715, 716, 717, 718, 723, 734, 735, 743, 744, 745, 749, 764, 781, 783, 784, 785, 786, 821, 822, 823, 824, 826, 827, 828, 829, 830, 837, 843, 845, 847, 866, 867, 869, 876, 892, 894, 907, 908, 909, 928, 930, 936, 941, 942, 943, 945, 947, 953, 960, 964, 967, 969, 992, 993, 1081, 1156, 1359, 1390, 1439, 1475, 1497, 1500], "wish": [529, 848, 985, 1342, 1366, 1377, 1444, 1490, 1494, 1496, 1497, 1503, 1506], "with_config": 1354, "with_info": 1473, "with_inner_jit": 119, "with_label": 1456, "with_layout_constraint": 1472, "with_memory_kind": [1434, 1471], "with_sharding_constraint": [296, 1354, 1369, 1464, 1470, 1472, 1474], "within": [47, 74, 97, 168, 199, 220, 287, 378, 381, 403, 458, 459, 460, 461, 462, 463, 464, 481, 483, 486, 505, 506, 564, 584, 620, 640, 644, 655, 659, 661, 722, 724, 762, 764, 784, 787, 819, 868, 910, 924, 976, 977, 979, 985, 998, 999, 1000, 1001, 1016, 1118, 1304, 1342, 1345, 1348, 1354, 1356, 1360, 1363, 1364, 1370, 1376, 1377, 1378, 1385, 1404, 1414, 1428, 1439, 1442, 1443, 1444, 1448, 1451, 1452, 1455, 1459, 1460, 1462, 1467, 1471, 1472, 1474, 1475, 1480, 1483, 1484, 1485, 1490, 1494, 1496, 1503, 1504, 1505], "without": [83, 95, 113, 119, 160, 170, 223, 337, 495, 638, 670, 671, 704, 720, 750, 851, 852, 857, 859, 921, 991, 1013, 1015, 1016, 1023, 1026, 1310, 1312, 1341, 1342, 1345, 1347, 1349, 1354, 1356, 1359, 1361, 1362, 1366, 1369, 1371, 1374, 1377, 1378, 1381, 1382, 1384, 1385, 1414, 1415, 1424, 1440, 1442, 1443, 1444, 1445, 1446, 1450, 1451, 1455, 1456, 1457, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1470, 1471, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1488, 1489, 1490, 1493, 1495, 1496, 1499, 1503], "wlast": [1382, 1468], "wno": 1378, "won": [95, 126, 1342, 1348, 1361, 1363, 1378, 1380, 1442, 1449, 1453, 1461, 1464, 1465, 1466, 1467, 1473, 1479, 1487], "wonder": [1349, 1445, 1459], "woo": 1348, "woohoo": [1453, 1461], "word": [290, 337, 357, 378, 458, 488, 1052, 1333, 1342, 1348, 1355, 1369, 1377, 1382, 1445, 1446, 1449, 1456, 1461, 1463, 1464, 1467, 1468, 1474], "work": [75, 83, 84, 98, 126, 239, 495, 501, 531, 865, 929, 937, 957, 976, 1002, 1010, 1016, 1118, 1304, 1337, 1341, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1359, 1361, 1363, 1364, 1366, 1367, 1369, 1370, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1384, 1385, 1387, 1389, 1390, 1396, 1402, 1428, 1432, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1456, 1457, 1460, 1462, 1465, 1466, 1467, 1468, 1471, 1473, 1474, 1475, 1476, 1478, 1480, 1481, 1483, 1484, 1487, 1489, 1490, 1492, 1493, 1494, 1496, 1500, 1501, 1503], "workaround": [994, 1342, 1354, 1356, 1374, 1431, 1454, 1501], "worker": 1461, "workflow": [1342, 1364, 1366, 1381, 1414, 1444, 1449, 1456, 1463], "working_slot": 1490, "workload": [1369, 1381, 1451, 1461, 1480, 1487, 1489, 1495, 1503], "workon": 1366, "workspac": [1366, 1457], "world": [112, 668, 1342, 1442, 1444, 1445, 1449, 1464, 1465, 1467, 1470, 1473, 1480, 1486, 1492], "worri": [1376, 1445, 1466, 1470, 1492, 1502], "wors": 1451, "worst": [239, 1364, 1476], "worth": [1342, 1348, 1349, 1378, 1382, 1443, 1447, 1461, 1468, 1479, 1484, 1489, 1490, 1498], "worthwhil": 1455, "would": [10, 283, 303, 304, 311, 337, 425, 426, 427, 435, 436, 437, 493, 501, 503, 668, 864, 923, 998, 999, 1000, 1001, 1135, 1304, 1342, 1345, 1346, 1348, 1349, 1350, 1351, 1354, 1359, 1361, 1364, 1366, 1369, 1370, 1371, 1374, 1377, 1378, 1381, 1382, 1384, 1385, 1387, 1390, 1411, 1414, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1479, 1480, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1498, 1502, 1503, 1505, 1506], "wouldn": [1342, 1382, 1387, 1447, 1454, 1459, 1463, 1468, 1470, 1502], "wouter": 1023, "wrangl": [501, 1503], "wrap": [72, 76, 126, 248, 267, 285, 296, 302, 305, 306, 327, 338, 339, 343, 363, 366, 381, 390, 423, 441, 446, 449, 452, 453, 459, 460, 461, 462, 463, 464, 465, 473, 475, 481, 483, 487, 503, 505, 583, 625, 700, 725, 877, 899, 906, 938, 985, 1061, 1103, 1281, 1282, 1304, 1307, 1342, 1348, 1351, 1353, 1354, 1376, 1377, 1378, 1390, 1411, 1435, 1448, 1452, 1459, 1466, 1483, 1490, 1495, 1502, 1506], "wrap_init": [1354, 1390], "wrap_key_data": [1431, 1455], "wrap_nam": 1354, "wrap_negative_indic": [10, 864, 1354], "wrappedfun": [268, 270, 271, 272], "wrapper": [61, 75, 78, 84, 322, 323, 324, 325, 330, 341, 346, 347, 362, 364, 365, 367, 368, 382, 383, 387, 392, 414, 419, 434, 467, 468, 469, 474, 722, 724, 725, 820, 841, 872, 991, 1011, 1309, 1311, 1342, 1348, 1354, 1359, 1363, 1376, 1378, 1382, 1390, 1424, 1449, 1458, 1460, 1463, 1467, 1468, 1474, 1484, 1492], "wreturn": 1378, "wrinkl": 1449, "write": [84, 164, 165, 173, 365, 366, 367, 424, 991, 1011, 1094, 1337, 1341, 1342, 1347, 1348, 1349, 1354, 1356, 1357, 1366, 1367, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1390, 1396, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1458, 1460, 1461, 1462, 1463, 1465, 1467, 1468, 1470, 1473, 1474, 1478, 1479, 1482, 1483, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1498, 1500, 1502, 1503, 1505, 1506], "write_byt": 1381, "write_cotang": 1348, "write_prim": 1348, "writer": [1480, 1489, 1490], "written": [150, 922, 991, 1011, 1153, 1162, 1342, 1346, 1349, 1354, 1356, 1363, 1366, 1377, 1378, 1385, 1390, 1441, 1442, 1462, 1463, 1466, 1467, 1479, 1480, 1484, 1487, 1488, 1490, 1495, 1498, 1500], "wrong": [1349, 1354, 1369, 1384, 1444, 1447, 1453, 1487, 1501], "wrote": [1464, 1488, 1490], "wrt": 1479, "wsl2": [1366, 1384], "wst": 1351, "wu": 1474, "www": [75, 344, 345, 454, 1357, 1379, 1396, 1465, 1473, 1496], "x": [0, 10, 64, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 94, 95, 97, 108, 112, 113, 118, 119, 120, 126, 128, 129, 136, 146, 157, 169, 176, 178, 184, 238, 239, 244, 250, 251, 290, 292, 293, 295, 296, 298, 299, 300, 301, 303, 304, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 325, 329, 331, 332, 333, 334, 336, 337, 340, 349, 350, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 395, 397, 398, 401, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 449, 451, 452, 456, 457, 458, 459, 460, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 481, 482, 484, 485, 486, 489, 490, 491, 494, 495, 500, 501, 502, 503, 504, 506, 507, 509, 510, 512, 513, 514, 515, 516, 517, 529, 533, 534, 535, 536, 537, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 568, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 589, 590, 593, 594, 595, 596, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 612, 614, 616, 618, 621, 623, 627, 628, 629, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 655, 659, 661, 664, 666, 667, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 702, 703, 706, 707, 708, 709, 710, 712, 714, 719, 720, 723, 725, 728, 733, 734, 735, 740, 743, 744, 746, 749, 754, 755, 756, 757, 758, 761, 763, 765, 766, 768, 770, 771, 772, 773, 774, 775, 779, 783, 784, 785, 786, 788, 789, 790, 792, 797, 798, 800, 803, 804, 805, 810, 811, 812, 814, 815, 816, 818, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 832, 834, 836, 837, 838, 839, 840, 842, 843, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 874, 877, 878, 879, 881, 882, 883, 885, 887, 888, 891, 892, 894, 896, 898, 899, 901, 903, 904, 905, 906, 907, 908, 911, 912, 914, 915, 920, 922, 923, 929, 930, 931, 933, 934, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 956, 957, 958, 960, 963, 964, 968, 969, 971, 972, 973, 974, 976, 977, 978, 979, 980, 982, 984, 985, 986, 987, 988, 992, 993, 994, 996, 1002, 1008, 1009, 1016, 1020, 1024, 1025, 1029, 1030, 1031, 1033, 1034, 1036, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1051, 1053, 1056, 1057, 1059, 1060, 1064, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1084, 1086, 1089, 1092, 1098, 1099, 1101, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1160, 1161, 1163, 1164, 1165, 1170, 1171, 1172, 1173, 1174, 1175, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1214, 1215, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1292, 1294, 1295, 1296, 1307, 1308, 1309, 1310, 1311, 1312, 1326, 1328, 1332, 1333, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1354, 1356, 1359, 1360, 1361, 1362, 1363, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1382, 1385, 1390, 1402, 1403, 1411, 1414, 1415, 1428, 1434, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1502, 1503, 1504, 1505, 1506], "x0": [69, 1105, 1116, 1117, 1118, 1414], "x00": 721, "x01": 721, "x02": 721, "x03": 721, "x04": 721, "x0_bar": 69, "x1": [421, 559, 574, 576, 578, 579, 597, 606, 611, 637, 639, 641, 662, 663, 666, 675, 676, 678, 681, 687, 699, 701, 705, 712, 715, 716, 717, 718, 729, 734, 735, 738, 743, 745, 782, 783, 784, 785, 786, 790, 799, 806, 813, 817, 821, 822, 823, 824, 825, 826, 835, 837, 840, 843, 844, 845, 866, 884, 886, 889, 890, 892, 893, 894, 909, 914, 915, 920, 930, 941, 942, 943, 954, 960, 964, 967, 989, 990, 992, 1245, 1266, 1348, 1445, 1462, 1464, 1472, 1474, 1495], "x2": [112, 421, 559, 578, 597, 606, 611, 616, 639, 641, 662, 663, 666, 675, 676, 681, 687, 701, 705, 715, 716, 717, 718, 729, 738, 743, 745, 782, 783, 784, 790, 799, 806, 813, 817, 821, 825, 826, 835, 837, 840, 843, 844, 845, 866, 884, 886, 889, 890, 892, 893, 894, 909, 914, 915, 941, 942, 943, 954, 967, 989, 990, 992, 1266, 1348, 1462, 1464, 1472, 1475, 1479, 1495], "x3": [559, 601, 606, 716, 717, 784, 884, 889, 890, 894, 915, 1472], "x4": [716, 717, 784, 884, 889, 890, 894, 1472], "x5": [716, 717, 884, 890], "x6": [717, 884, 890], "x64": [128, 129, 348, 672, 873, 995, 1354, 1462, 1477], "x64_enabl": 103, "x7": [884, 890], "x86": 1354, "x86_64": [1366, 1384], "x_": [554, 645, 1094, 1342, 1445, 1463, 1474, 1492], "x_0": 1488, "x_1": [1044, 1488], "x_1d": 1344, "x_2d": 982, "x_3d": 570, "x_arr": 1439, "x_aval": 1348, "x_bar": [1342, 1348, 1382, 1463, 1468], "x_batch": 1376, "x_batch_shd": 1378, "x_bdim": 1348, "x_blk": 1474, "x_block": [1445, 1474, 1492, 1494], "x_data_shd": 1378, "x_dct": 1073, "x_dctn": 1074, "x_dens": 1494, "x_dot": [76, 77, 78, 1342, 1348, 1463], "x_edg": 740, "x_f": 1344, "x_fft": 682, "x_fft2": 683, "x_fftn": 685, "x_flat": 906, "x_grad": [1363, 1474], "x_grid": 840, "x_guess": [1342, 1463], "x_hbm": 1493, "x_hbm_ref": 1493, "x_i": [536, 537, 549, 645, 887, 1028, 1149, 1160, 1194, 1195, 1246, 1247], "x_init": [1342, 1463], "x_inv": 1084, "x_j": [536, 549, 645, 1149, 1160], "x_jax": [720, 1377], "x_jnp": 1475, "x_k": [403, 1044, 1094], "x_map": 1494, "x_n": 1378, "x_np": [1377, 1475], "x_numpi": 720, "x_numpy_round_trip": 720, "x_opt": 69, "x_partit": [582, 878], "x_plus_i": 723, "x_prev": [1342, 1463], "x_reconstruct": [811, 1101, 1113], "x_ref": [1346, 1479, 1480, 1484, 1487, 1488, 1489, 1490, 1492, 1494], "x_ref_or_view": [145, 181, 182, 185, 186, 188, 189, 190, 191, 192], "x_reg": 1487, "x_rng": 1502, "x_sa": 1446, "x_shape": [1374, 1485], "x_shard": 1500, "x_singl": 1464, "x_size": 1485, "x_small": 1475, "x_spec": 1485, "x_sram_ref": 1487, "x_star": [1342, 1463], "x_star_bar": [1342, 1463], "x_t": [1342, 1463], "x_times_i": 723, "x_tree": 1328, "x_vmem": 1493, "x_vmem_ref": 1493, "x_vreg": 1493, "x_with_shard": 489, "x_without_nan": 1462, "xarg": 1461, "xavier": [520, 521], "xb": [1348, 1354], "xbar": [1332, 1447], "xc": [9, 57, 95, 196, 296, 493, 504, 572, 595, 680, 720, 1002, 1354, 1390, 1411, 1434, 1435, 1446], "xcode": 1366, "xct": 1390, "xdist": 1366, "xdot": 1348, "xe": [1053, 1354], "xfals": 1441, "xi": 840, "xinv": 814, "xinv_x": 814, "xla": [83, 89, 93, 96, 97, 283, 284, 285, 286, 296, 302, 303, 315, 316, 327, 338, 339, 343, 344, 345, 360, 363, 366, 381, 390, 423, 426, 435, 436, 441, 446, 449, 452, 453, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 473, 475, 483, 487, 488, 493, 498, 499, 505, 506, 508, 572, 583, 595, 633, 634, 672, 673, 677, 783, 787, 788, 794, 808, 811, 813, 938, 944, 954, 1002, 1005, 1006, 1080, 1082, 1090, 1095, 1097, 1101, 1334, 1341, 1342, 1343, 1344, 1348, 1354, 1361, 1363, 1377, 1378, 1379, 1380, 1382, 1384, 1385, 1387, 1402, 1411, 1415, 1424, 1425, 1428, 1431, 1440, 1442, 1445, 1446, 1449, 1451, 1455, 1457, 1459, 1461, 1462, 1463, 1466, 1468, 1469, 1470, 1471, 1474, 1475, 1480, 1492, 1493, 1494, 1495, 1496, 1500, 1501, 1503], "xla_bridg": [1348, 1354, 1356, 1390], "xla_cal": [1348, 1354, 1449, 1466], "xla_call_abstract_eval_rul": 1348, "xla_call_impl": 1348, "xla_call_jvp_rul": 1348, "xla_call_p": [1348, 1354], "xla_call_partial_ev": 1348, "xla_call_peval_eqn": 1348, "xla_call_transl": 1348, "xla_call_transpose_rul": 1348, "xla_call_vmap_rul": 1348, "xla_client": [93, 96, 100, 285, 492, 493, 497, 498, 684, 698, 1004, 1005, 1006, 1354, 1446, 1457], "xla_comput": [1354, 1377], "xla_cpu_use_thunk_runtim": 1354, "xla_destructur": 1354, "xla_disable_hlo_pass": 1381, "xla_dump_hlo_pass_r": 1501, "xla_dump_to": 1501, "xla_extens": 1354, "xla_ffi_attrtyp": 1378, "xla_ffi_callfram": 1378, "xla_ffi_datatyp": 1378, "xla_ffi_declare_handler_symbol": 1378, "xla_ffi_define_handl": 1378, "xla_ffi_define_handler_symbol": 1378, "xla_ffi_error": 1378, "xla_ffi_executionstag": 1378, "xla_flag": [1354, 1366, 1378, 1381, 1431, 1474, 1507], "xla_force_host_platform_device_count": [1356, 1366, 1378, 1474], "xla_gpu_all_gather_combine_threshold_byt": 1381, "xla_gpu_all_reduce_combine_threshold_byt": 1381, "xla_gpu_enable_command_buff": 1381, "xla_gpu_enable_latency_hiding_schedul": 1381, "xla_gpu_experimental_pipeline_parallelism_opt_level": 1381, "xla_gpu_kernel_cache_fil": 1495, "xla_gpu_memory_limit_slop_factor": 1381, "xla_gpu_per_fusion_autotune_cache_dir": [1356, 1495], "xla_gpu_pgle_profile_file_or_directory_path": 1381, "xla_gpu_reduce_scatter_combine_threshold_byt": 1381, "xla_gpu_triton_gemm_ani": 1381, "xla_metadata": 1390, "xla_pmap": [1354, 1466], "xla_python_client_alloc": [1366, 1380], "xla_python_client_mem_fract": [1354, 1377, 1380], "xla_python_client_prealloc": [1366, 1377, 1380], "xla_result": 1490, "xla_tpu_spmd_rng_bit_generator_unsaf": 1431, "xlabel": 1476, "xlabuild": 1354, "xlacallmodul": [1356, 1371], "xlacallmoduleop": 1415, "xlacompatibleshard": 1354, "xlacomput": 1354, "xladot": 1354, "xlaexecut": 1354, "xlaop": [1354, 1390], "xlaopshardingproto": 1446, "xlaruntimeerror": [1354, 1370], "xlb": 1387, "xlim": 1456, "xlog1pi": 1164, "xlogi": 1163, "xlu": 1489, "xmap": [1354, 1447], "xmax": 740, "xmin": 740, "xmode": [1462, 1475], "xn": 840, "xnorm": 1445, "xor": [325, 450, 612, 762, 830, 927, 928, 975], "xp": [761, 1349], "xprof": 1367, "xpx8l": 1461, "xrang": 1451, "xsp": 1414, "xst": 1351, "xt": [1349, 1390], "xtrue": 1441, "xx": [501, 1007, 1354, 1380], "xy": [840, 1445, 1488], "xy_tre": 1328, "xyz": 790, "y": [10, 67, 69, 72, 75, 76, 77, 78, 79, 80, 97, 112, 118, 120, 126, 157, 230, 234, 238, 244, 292, 301, 303, 311, 313, 315, 322, 324, 325, 336, 357, 359, 365, 366, 367, 368, 382, 383, 389, 392, 414, 415, 416, 417, 418, 419, 426, 430, 435, 436, 451, 452, 458, 467, 468, 469, 482, 494, 495, 500, 501, 502, 504, 562, 571, 578, 595, 599, 600, 601, 605, 608, 610, 612, 616, 627, 633, 634, 637, 638, 640, 641, 645, 667, 668, 670, 671, 674, 700, 712, 723, 734, 735, 740, 744, 778, 784, 785, 786, 790, 804, 827, 829, 830, 837, 840, 843, 847, 864, 865, 867, 869, 887, 894, 923, 929, 937, 943, 945, 947, 958, 985, 988, 993, 994, 1002, 1016, 1075, 1078, 1079, 1091, 1092, 1106, 1107, 1108, 1109, 1110, 1112, 1163, 1164, 1170, 1171, 1180, 1182, 1188, 1189, 1196, 1197, 1203, 1204, 1217, 1236, 1239, 1252, 1254, 1269, 1270, 1275, 1295, 1307, 1308, 1309, 1310, 1311, 1312, 1328, 1332, 1333, 1342, 1344, 1345, 1346, 1348, 1349, 1354, 1359, 1360, 1361, 1362, 1363, 1367, 1370, 1371, 1374, 1376, 1377, 1378, 1382, 1390, 1402, 1403, 1414, 1428, 1434, 1440, 1442, 1445, 1446, 1447, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1460, 1461, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1484, 1487, 1488, 1492, 1493, 1494, 1496, 1497, 1499, 1500, 1502, 1503, 1504, 1505, 1506], "y1": [637, 641, 712, 734, 735, 785, 786, 837, 843, 1472], "y2": [112, 616, 641, 837, 843, 1472, 1475], "y3": [601, 1445, 1472, 1474], "y4": [1445, 1472, 1474], "y5": [1445, 1474], "y_": [1474, 1492], "y_0": 1488, "y_1": 1488, "y_1d": 1344, "y_att": 1445, "y_bar": [69, 1342, 1348, 1382, 1463, 1468], "y_bdim": 1348, "y_blk": [1445, 1474], "y_block": [1474, 1492], "y_block_spec": 1492, "y_dot": [76, 77, 78, 1342, 1348, 1463], "y_edg": 740, "y_f": 1344, "y_fuse": 1445, "y_grad": 1474, "y_grid": 840, "y_hat": 1414, "y_i": 887, "y_init": 1484, "y_jnp": 1475, "y_l": 1153, "y_map": 1494, "y_mlp": 1445, "y_model": 1414, "y_n": [1162, 1378], "y_out": 1445, "y_po": 67, "y_ref": [1346, 1479, 1480, 1483, 1484, 1487, 1488, 1492, 1494], "y_reg": 1487, "y_sa": 1446, "y_smooth": 1469, "y_sram_ref": 1487, "y_tree": 1328, "y_vmem_ref": 1493, "y_vreg": 1493, "yaml": [1366, 1461], "yank": 1354, "yann": 1465, "yashk2810": [1385, 1446], "yashkatariya": 1440, "ybar": [1332, 1348, 1447], "yc": [1390, 1446], "yct": 1390, "ydot": 1348, "ye": [1349, 1381, 1384, 1387], "year": [1444, 1445, 1450, 1489], "yellow": 1369, "yet": [239, 1002, 1083, 1100, 1105, 1308, 1345, 1348, 1354, 1363, 1376, 1381, 1385, 1390, 1435, 1444, 1447, 1449, 1454, 1455, 1456, 1465, 1473, 1474, 1479, 1480, 1484, 1490, 1503], "yield": [504, 506, 701, 821, 1288, 1348, 1349, 1354, 1462, 1476, 1483, 1492, 1503], "ylabel": 1476, "ylim": 1456, "ymax": 740, "ymin": 740, "yml": 1366, "you": [0, 76, 82, 83, 84, 97, 98, 118, 119, 120, 135, 136, 150, 160, 201, 203, 248, 252, 253, 255, 296, 357, 360, 381, 397, 415, 455, 459, 460, 461, 462, 463, 464, 495, 501, 502, 504, 563, 568, 582, 616, 617, 618, 632, 638, 644, 654, 679, 750, 797, 798, 799, 833, 834, 836, 838, 842, 848, 853, 856, 858, 860, 861, 862, 868, 878, 881, 896, 898, 911, 921, 927, 946, 948, 975, 976, 985, 987, 1002, 1012, 1013, 1015, 1052, 1089, 1101, 1105, 1116, 1117, 1118, 1297, 1298, 1304, 1307, 1310, 1335, 1336, 1338, 1339, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1387, 1395, 1396, 1397, 1411, 1414, 1415, 1428, 1431, 1435, 1440, 1441, 1444, 1447, 1450, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507], "young": 552, "your": [98, 118, 119, 136, 296, 501, 505, 506, 701, 969, 976, 1002, 1342, 1352, 1354, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1384, 1395, 1408, 1411, 1439, 1440, 1444, 1450, 1454, 1455, 1458, 1459, 1461, 1462, 1467, 1470, 1471, 1474, 1475, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1506, 1507], "your_usernam": 1357, "yourself": [397, 1052, 1342, 1346, 1359, 1459, 1474, 1484], "yp": 1349, "yt": [1349, 1390], "yz": 1445, "yzx": 1445, "z": [67, 69, 112, 311, 567, 600, 601, 670, 671, 790, 804, 1029, 1096, 1097, 1119, 1125, 1136, 1152, 1153, 1157, 1161, 1333, 1342, 1344, 1348, 1349, 1354, 1360, 1361, 1363, 1367, 1370, 1376, 1377, 1382, 1390, 1403, 1440, 1445, 1446, 1447, 1448, 1451, 1456, 1457, 1461, 1462, 1464, 1467, 1468, 1469, 1470, 1474, 1479, 1480, 1484, 1487, 1488, 1492, 1499, 1504, 1505], "z1": 567, "z2": 567, "z7": 1366, "z_": 1492, "z_bar": [1342, 1348, 1382, 1467, 1468], "z_blk": 1474, "z_block": [1445, 1474], "z_dot": [1342, 1376, 1467], "z_partialsum": 1445, "z_posit": 112, "z_ref": [1479, 1488, 1492], "z_reg": 1487, "z_sa": 1446, "z_sram_ref": 1487, "z_vmem_ref": [1487, 1493], "z_vreg": 1493, "zbar": 1447, "zc": [1096, 1390, 1446], "zero": [0, 61, 72, 77, 80, 120, 223, 240, 250, 251, 292, 315, 316, 334, 357, 359, 365, 366, 367, 375, 412, 421, 423, 429, 431, 432, 433, 442, 443, 444, 445, 447, 448, 450, 451, 474, 481, 531, 540, 549, 551, 552, 554, 584, 589, 591, 599, 600, 601, 604, 614, 616, 623, 628, 629, 633, 634, 637, 641, 650, 651, 658, 664, 672, 673, 679, 680, 686, 691, 700, 702, 708, 709, 710, 714, 727, 755, 756, 757, 758, 766, 775, 776, 798, 801, 802, 807, 819, 852, 868, 873, 876, 877, 881, 882, 886, 889, 899, 913, 918, 920, 931, 934, 957, 959, 960, 963, 964, 968, 971, 972, 973, 974, 981, 996, 1026, 1040, 1052, 1068, 1071, 1073, 1086, 1087, 1106, 1107, 1108, 1109, 1110, 1112, 1114, 1115, 1118, 1140, 1164, 1271, 1304, 1308, 1309, 1310, 1342, 1345, 1346, 1348, 1349, 1354, 1356, 1361, 1364, 1370, 1374, 1376, 1381, 1390, 1397, 1414, 1424, 1434, 1441, 1444, 1445, 1449, 1454, 1455, 1456, 1460, 1462, 1463, 1464, 1469, 1470, 1474, 1475, 1476, 1480, 1484, 1485, 1487, 1489, 1490, 1492, 1494, 1495, 1497, 1502, 1503, 1506], "zero_init": 1503, "zeros_lik": [673, 728, 874, 995, 1342, 1348, 1354, 1381, 1454, 1463, 1474, 1479, 1484, 1487, 1490, 1492, 1494, 1503], "zeros_like1": 1348, "zeros_like2": 1348, "zeros_like_arrai": [1354, 1390], "zeroth": [746, 1143, 1144], "zeta": 1354, "zhangqiaorjc": 1445, "zip": [923, 1348, 1349, 1354, 1366, 1445, 1451, 1464, 1465, 1470, 1473, 1474, 1480, 1485, 1487, 1506], "zone": 1461, "zoom": 1104, "zr": 1096, "zt": 1390, "zxx": [1113, 1114], "zxy": 1120, "\u00b2": 1376, "\u00b3": 1376, "\u00b5": [1347, 1377, 1464], "\u00b9": 1376, "\u00e0": 1475, "\u00e5": 1100, "\u03b1": 1487, "\u03b1n": 1374, "\u03b2": 1487, "\u03b8": 1153, "\u03bb": 1082, "\u03bc": [1342, 1459, 1467, 1475], "\u03c6": 1153}, "titles": ["jax.Array", "jax.Array.T", "jax.Array.addressable_shards", "jax.Array.all", "jax.Array.any", "jax.Array.argmax", "jax.Array.argmin", "jax.Array.argpartition", "jax.Array.argsort", "jax.Array.astype", "jax.Array.at", "jax.Array.choose", "jax.Array.clip", "jax.Array.committed", "jax.Array.compress", "jax.Array.conj", "jax.Array.conjugate", "jax.Array.copy", "jax.Array.copy_to_host_async", "jax.Array.cumprod", "jax.Array.cumsum", "jax.Array.device", "jax.Array.diagonal", "jax.Array.dot", "jax.Array.dtype", "jax.Array.flat", "jax.Array.flatten", "jax.Array.global_shards", "jax.Array.imag", "jax.Array.is_fully_addressable", "jax.Array.is_fully_replicated", "jax.Array.item", "jax.Array.itemsize", "jax.Array.mT", "jax.Array.max", "jax.Array.mean", "jax.Array.min", "jax.Array.nbytes", "jax.Array.ndim", "jax.Array.nonzero", "jax.Array.prod", "jax.Array.ptp", "jax.Array.ravel", "jax.Array.real", "jax.Array.repeat", "jax.Array.reshape", "jax.Array.round", "jax.Array.searchsorted", "jax.Array.shape", "jax.Array.sharding", "jax.Array.size", "jax.Array.sort", "jax.Array.squeeze", "jax.Array.std", "jax.Array.sum", "jax.Array.swapaxes", "jax.Array.take", "jax.Array.to_device", "jax.Array.trace", "jax.Array.transpose", "jax.Array.var", "jax.Array.view", "jax.Device", "jax.ShapeDtypeStruct", "jax.block_until_ready", "jax.check_tracer_leaks", "jax.checking_leaks", "jax.checkpoint", "jax.clear_caches", "jax.closure_convert", "jax.config", "jax.copy_to_host_async", "jax.custom_batching.custom_vmap", "jax.custom_batching.custom_vmap.def_vmap", "jax.custom_batching.sequential_vmap", "jax.custom_gradient", "jax.custom_jvp", "jax.custom_jvp.defjvp", "jax.custom_jvp.defjvps", "jax.custom_vjp", "jax.custom_vjp.defvjp", "jax.debug.breakpoint", "jax.debug.callback", "jax.debug.inspect_array_sharding", "jax.debug.print", "jax.debug.visualize_array_sharding", "jax.debug.visualize_sharding", "jax.debug_infs", "jax.debug_nans", "jax.default_backend", "jax.default_device", "jax.default_matmul_precision", "jax.default_prng_impl", "jax.device_count", "jax.device_get", "jax.device_put", "jax.devices", "jax.disable_jit", "jax.distributed.initialize", "jax.distributed.shutdown", "jax.dlpack.from_dlpack", "jax.dlpack.is_supported_dtype", "jax.dtypes.bfloat16", "jax.dtypes.canonicalize_dtype", "jax.dtypes.float0", "jax.dtypes.issubdtype", "jax.dtypes.prng_key", "jax.dtypes.result_type", "jax.dtypes.scalar_type_of", "jax.enable_checks", "jax.enable_custom_prng", "jax.enable_custom_vjp_by_custom_transpose", "jax.ensure_compile_time_eval", "jax.eval_shape", "jax.experimental.checkify.Error", "jax.experimental.checkify.JaxRuntimeError", "jax.experimental.checkify.all_checks", "jax.experimental.checkify.automatic_checks", "jax.experimental.checkify.check", "jax.experimental.checkify.check_error", "jax.experimental.checkify.checkify", "jax.experimental.checkify.div_checks", "jax.experimental.checkify.float_checks", "jax.experimental.checkify.index_checks", "jax.experimental.checkify.nan_checks", "jax.experimental.checkify.user_checks", "jax.experimental.custom_dce.custom_dce", "jax.experimental.custom_dce.custom_dce.def_dce", "jax.experimental.disable_x64", "jax.experimental.enable_x64", "jax.experimental.io_callback", "jax.experimental.mesh_utils.create_device_mesh", "jax.experimental.mesh_utils.create_hybrid_device_mesh", "jax.experimental.multihost_utils.assert_equal", "jax.experimental.multihost_utils.broadcast_one_to_all", "jax.experimental.multihost_utils.global_array_to_host_local_array", "jax.experimental.multihost_utils.host_local_array_to_global_array", "jax.experimental.multihost_utils.process_allgather", "jax.experimental.multihost_utils.sync_global_devices", "jax.experimental.pallas.BlockSpec", "jax.experimental.pallas.GridSpec", "jax.experimental.pallas.Slice", "jax.experimental.pallas.broadcast_to", "jax.experimental.pallas.debug_print", "jax.experimental.pallas.dot", "jax.experimental.pallas.load", "jax.experimental.pallas.max_contiguous", "jax.experimental.pallas.mosaic_gpu.ACC", "jax.experimental.pallas.mosaic_gpu.Barrier", "jax.experimental.pallas.mosaic_gpu.BlockSpec", "jax.experimental.pallas.mosaic_gpu.CompilerParams", "jax.experimental.pallas.mosaic_gpu.GMEM", "jax.experimental.pallas.mosaic_gpu.Layout", "jax.experimental.pallas.mosaic_gpu.MemorySpace", "jax.experimental.pallas.mosaic_gpu.SMEM", "jax.experimental.pallas.mosaic_gpu.SemaphoreSignal", "jax.experimental.pallas.mosaic_gpu.SwizzleTransform", "jax.experimental.pallas.mosaic_gpu.TilingTransform", "jax.experimental.pallas.mosaic_gpu.TransposeTransform", "jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef", "jax.experimental.pallas.mosaic_gpu.async_load_tmem", "jax.experimental.pallas.mosaic_gpu.async_store_tmem", "jax.experimental.pallas.mosaic_gpu.barrier_arrive", "jax.experimental.pallas.mosaic_gpu.barrier_wait", "jax.experimental.pallas.mosaic_gpu.commit_smem", "jax.experimental.pallas.mosaic_gpu.commit_tmem", "jax.experimental.pallas.mosaic_gpu.copy_gmem_to_smem", "jax.experimental.pallas.mosaic_gpu.copy_smem_to_gmem", "jax.experimental.pallas.mosaic_gpu.emit_pipeline", "jax.experimental.pallas.mosaic_gpu.layout_cast", "jax.experimental.pallas.mosaic_gpu.semaphore_signal_parallel", "jax.experimental.pallas.mosaic_gpu.set_max_registers", "jax.experimental.pallas.mosaic_gpu.wait_load_tmem", "jax.experimental.pallas.mosaic_gpu.wait_smem_to_gmem", "jax.experimental.pallas.mosaic_gpu.wgmma", "jax.experimental.pallas.mosaic_gpu.wgmma_wait", "jax.experimental.pallas.multiple_of", "jax.experimental.pallas.num_programs", "jax.experimental.pallas.pallas_call", "jax.experimental.pallas.program_id", "jax.experimental.pallas.run_scoped", "jax.experimental.pallas.store", "jax.experimental.pallas.swap", "jax.experimental.pallas.triton.CompilerParams", "jax.experimental.pallas.triton.approx_tanh", "jax.experimental.pallas.triton.atomic_add", "jax.experimental.pallas.triton.atomic_and", "jax.experimental.pallas.triton.atomic_cas", "jax.experimental.pallas.triton.atomic_max", "jax.experimental.pallas.triton.atomic_min", "jax.experimental.pallas.triton.atomic_or", "jax.experimental.pallas.triton.atomic_xchg", "jax.experimental.pallas.triton.atomic_xor", "jax.experimental.pallas.triton.debug_barrier", "jax.experimental.pallas.triton.elementwise_inline_asm", "jax.experimental.pallas.when", "jax.experimental.serialize_executable.deserialize_and_load", "jax.experimental.serialize_executable.serialize", "jax.experimental.shard_map.shard_map", "jax.experimental.sparse.BCOO", "jax.experimental.sparse.BCSR", "jax.experimental.sparse.COO", "jax.experimental.sparse.CSC", "jax.experimental.sparse.CSR", "jax.experimental.sparse.JAXSparse", "jax.experimental.sparse.bcoo_broadcast_in_dim", "jax.experimental.sparse.bcoo_concatenate", "jax.experimental.sparse.bcoo_dot_general", "jax.experimental.sparse.bcoo_dot_general_sampled", "jax.experimental.sparse.bcoo_dynamic_slice", "jax.experimental.sparse.bcoo_extract", "jax.experimental.sparse.bcoo_fromdense", "jax.experimental.sparse.bcoo_gather", "jax.experimental.sparse.bcoo_multiply_dense", "jax.experimental.sparse.bcoo_multiply_sparse", "jax.experimental.sparse.bcoo_reduce_sum", "jax.experimental.sparse.bcoo_reshape", "jax.experimental.sparse.bcoo_slice", "jax.experimental.sparse.bcoo_sort_indices", "jax.experimental.sparse.bcoo_squeeze", "jax.experimental.sparse.bcoo_sum_duplicates", "jax.experimental.sparse.bcoo_todense", "jax.experimental.sparse.bcoo_transpose", "jax.experimental.sparse.bcoo_update_layout", "jax.experimental.sparse.bcsr_dot_general", "jax.experimental.sparse.bcsr_extract", "jax.experimental.sparse.bcsr_fromdense", "jax.experimental.sparse.bcsr_todense", "jax.experimental.sparse.coo_fromdense", "jax.experimental.sparse.coo_matmat", "jax.experimental.sparse.coo_matvec", "jax.experimental.sparse.coo_todense", "jax.experimental.sparse.csr_fromdense", "jax.experimental.sparse.csr_matmat", "jax.experimental.sparse.csr_matvec", "jax.experimental.sparse.csr_todense", "jax.experimental.sparse.empty", "jax.experimental.sparse.eye", "jax.experimental.sparse.grad", "jax.experimental.sparse.linalg.lobpcg_standard", "jax.experimental.sparse.linalg.spsolve", "jax.experimental.sparse.random_bcoo", "jax.experimental.sparse.sparsify", "jax.experimental.sparse.todense", "jax.experimental.sparse.value_and_grad", "jax.export.SymbolicScope", "jax.export.default_export_platform", "jax.export.deserialize", "jax.export.export", "jax.export.is_symbolic_dim", "jax.export.maximum_supported_calling_convention_version", "jax.export.minimum_supported_calling_convention_version", "jax.export.register_namedtuple_serialization", "jax.export.register_pytree_node_serialization", "jax.export.symbolic_args_specs", "jax.export.symbolic_shape", "jax.extend.core.ClosedJaxpr", "jax.extend.core.Jaxpr", "jax.extend.core.JaxprEqn", "jax.extend.core.Literal", "jax.extend.core.Primitive", "jax.extend.core.Token", "jax.extend.core.Var", "jax.extend.core.array_types", "jax.extend.core.jaxpr_as_fun", "jax.extend.core.primitives", "jax.extend.linear_util.StoreException", "jax.extend.linear_util.WrappedFun", "jax.extend.linear_util.cache", "jax.extend.linear_util.merge_linear_aux", "jax.extend.linear_util.transformation", "jax.extend.linear_util.transformation_with_aux", "jax.extend.linear_util.wrap_init", "jax.extend.mlir.dialects", "jax.extend.mlir.ir", "jax.extend.mlir.passmanager", "jax.extend.random.define_prng_impl", "jax.extend.random.rbg_prng_impl", "jax.extend.random.seed_with_impl", "jax.extend.random.threefry2x32_p", "jax.extend.random.threefry_2x32", "jax.extend.random.threefry_prng_impl", "jax.extend.random.unsafe_rbg_prng_impl", "jax.ffi.ffi_call", "jax.ffi.ffi_lowering", "jax.ffi.pycapsule", "jax.ffi.register_ffi_target", "jax.ffi.register_ffi_type_id", "jax.flatten_util.ravel_pytree", "jax.grad", "jax.hessian", "jax.image.resize", "jax.image.scale_and_translate", "jax.jacfwd", "jax.jacobian", "jax.jacrev", "jax.jit", "jax.jvp", "jax.lax.abs", "jax.lax.acos", "jax.lax.acosh", "jax.lax.add", "jax.lax.after_all", "jax.lax.all_gather", "jax.lax.all_to_all", "jax.lax.approx_max_k", "jax.lax.approx_min_k", "jax.lax.argmax", "jax.lax.argmin", "jax.lax.asin", "jax.lax.asinh", "jax.lax.associative_scan", "jax.lax.atan", "jax.lax.atan2", "jax.lax.atanh", "jax.lax.axis_index", "jax.lax.axis_size", "jax.lax.batch_matmul", "jax.lax.bessel_i0e", "jax.lax.bessel_i1e", "jax.lax.betainc", "jax.lax.bitcast_convert_type", "jax.lax.bitwise_and", "jax.lax.bitwise_not", "jax.lax.bitwise_or", "jax.lax.bitwise_xor", "jax.lax.broadcast", "jax.lax.broadcast_in_dim", "jax.lax.broadcast_shapes", "jax.lax.broadcast_to_rank", "jax.lax.broadcasted_iota", "jax.lax.cbrt", "jax.lax.ceil", "jax.lax.clamp", "jax.lax.clz", "jax.lax.collapse", "jax.lax.complex", "jax.lax.composite", "jax.lax.concatenate", "jax.lax.cond", "jax.lax.conj", "jax.lax.conv", "jax.lax.conv_dimension_numbers", "jax.lax.conv_general_dilated", "jax.lax.conv_general_dilated_local", "jax.lax.conv_general_dilated_patches", "jax.lax.conv_transpose", "jax.lax.conv_with_general_padding", "jax.lax.convert_element_type", "jax.lax.cos", "jax.lax.cosh", "jax.lax.cumlogsumexp", "jax.lax.cummax", "jax.lax.cummin", "jax.lax.cumprod", "jax.lax.cumsum", "jax.lax.custom_linear_solve", "jax.lax.custom_root", "jax.lax.digamma", "jax.lax.div", "jax.lax.dot", "jax.lax.dot_general", "jax.lax.dynamic_index_in_dim", "jax.lax.dynamic_slice", "jax.lax.dynamic_slice_in_dim", "jax.lax.dynamic_update_index_in_dim", "jax.lax.dynamic_update_slice", "jax.lax.dynamic_update_slice_in_dim", "jax.lax.eq", "jax.lax.erf", "jax.lax.erf_inv", "jax.lax.erfc", "jax.lax.exp", "jax.lax.exp2", "jax.lax.expand_dims", "jax.lax.expm1", "jax.lax.fft", "jax.lax.floor", "jax.lax.fori_loop", "jax.lax.full", "jax.lax.full_like", "jax.lax.gather", "jax.lax.ge", "jax.lax.gt", "jax.lax.igamma", "jax.lax.igammac", "jax.lax.imag", "jax.lax.index_in_dim", "jax.lax.index_take", "jax.lax.integer_pow", "jax.lax.iota", "jax.lax.is_finite", "jax.lax.le", "jax.lax.lgamma", "jax.lax.linalg.SvdAlgorithm", "jax.lax.linalg.cholesky", "jax.lax.linalg.cholesky_update", "jax.lax.linalg.eig", "jax.lax.linalg.eigh", "jax.lax.linalg.hessenberg", "jax.lax.linalg.householder_product", "jax.lax.linalg.lu", "jax.lax.linalg.lu_pivots_to_permutation", "jax.lax.linalg.qdwh", "jax.lax.linalg.qr", "jax.lax.linalg.schur", "jax.lax.linalg.svd", "jax.lax.linalg.symmetric_product", "jax.lax.linalg.triangular_solve", "jax.lax.linalg.tridiagonal", "jax.lax.linalg.tridiagonal_solve", "jax.lax.log", "jax.lax.log1p", "jax.lax.logistic", "jax.lax.lt", "jax.lax.map", "jax.lax.max", "jax.lax.min", "jax.lax.mul", "jax.lax.ne", "jax.lax.neg", "jax.lax.nextafter", "jax.lax.optimization_barrier", "jax.lax.pad", "jax.lax.platform_dependent", "jax.lax.pmax", "jax.lax.pmean", "jax.lax.pmin", "jax.lax.polygamma", "jax.lax.population_count", "jax.lax.pow", "jax.lax.ppermute", "jax.lax.precv", "jax.lax.psend", "jax.lax.pshuffle", "jax.lax.psum", "jax.lax.psum_scatter", "jax.lax.pswapaxes", "jax.lax.random_gamma_grad", "jax.lax.real", "jax.lax.reciprocal", "jax.lax.reduce", "jax.lax.reduce_and", "jax.lax.reduce_max", "jax.lax.reduce_min", "jax.lax.reduce_or", "jax.lax.reduce_precision", "jax.lax.reduce_prod", "jax.lax.reduce_sum", "jax.lax.reduce_window", "jax.lax.reduce_xor", "jax.lax.rem", "jax.lax.reshape", "jax.lax.rev", "jax.lax.rng_bit_generator", "jax.lax.rng_uniform", "jax.lax.round", "jax.lax.rsqrt", "jax.lax.scan", "jax.lax.scatter", "jax.lax.scatter_add", "jax.lax.scatter_apply", "jax.lax.scatter_max", "jax.lax.scatter_min", "jax.lax.scatter_mul", "jax.lax.select", "jax.lax.select_n", "jax.lax.shift_left", "jax.lax.shift_right_arithmetic", "jax.lax.shift_right_logical", "jax.lax.sign", "jax.lax.sin", "jax.lax.sinh", "jax.lax.slice", "jax.lax.slice_in_dim", "jax.lax.sort", "jax.lax.sort_key_val", "jax.lax.split", "jax.lax.sqrt", "jax.lax.square", "jax.lax.squeeze", "jax.lax.stop_gradient", "jax.lax.sub", "jax.lax.switch", "jax.lax.tan", "jax.lax.tanh", "jax.lax.top_k", "jax.lax.transpose", "jax.lax.while_loop", "jax.lax.with_sharding_constraint", "jax.lax.zeros_like_array", "jax.lax.zeta", "jax.lib.xla_bridge.get_backend", "jax.lib.xla_bridge.get_compile_options", "jax.linear_transpose", "jax.linearize", "jax.live_arrays", "jax.local_device_count", "jax.local_devices", "jax.log_compiles", "jax.make_array_from_callback", "jax.make_array_from_process_local_data", "jax.make_array_from_single_device_arrays", "jax.make_jaxpr", "jax.make_mesh", "jax.named_call", "jax.named_scope", "jax.nn.celu", "jax.nn.dot_product_attention", "jax.nn.elu", "jax.nn.gelu", "jax.nn.get_scaled_dot_general_config", "jax.nn.glu", "jax.nn.hard_sigmoid", "jax.nn.hard_silu", "jax.nn.hard_swish", "jax.nn.hard_tanh", "jax.nn.identity", "jax.nn.initializers.constant", "jax.nn.initializers.delta_orthogonal", "jax.nn.initializers.glorot_normal", "jax.nn.initializers.glorot_uniform", "jax.nn.initializers.he_normal", "jax.nn.initializers.he_uniform", "jax.nn.initializers.lecun_normal", "jax.nn.initializers.lecun_uniform", "jax.nn.initializers.normal", "jax.nn.initializers.ones", "jax.nn.initializers.orthogonal", "jax.nn.initializers.truncated_normal", "jax.nn.initializers.uniform", "jax.nn.initializers.variance_scaling", "jax.nn.initializers.zeros", "jax.nn.leaky_relu", "jax.nn.log1mexp", "jax.nn.log_sigmoid", "jax.nn.log_softmax", "jax.nn.logmeanexp", "jax.nn.logsumexp", "jax.nn.mish", "jax.nn.one_hot", "jax.nn.relu", "jax.nn.relu6", "jax.nn.scaled_dot_general", "jax.nn.scaled_matmul", "jax.nn.selu", "jax.nn.sigmoid", "jax.nn.silu", "jax.nn.soft_sign", "jax.nn.softmax", "jax.nn.softplus", "jax.nn.sparse_plus", "jax.nn.sparse_sigmoid", "jax.nn.squareplus", "jax.nn.standardize", "jax.nn.swish", "jax.no_tracing", "jax.numpy.ComplexWarning", "jax.numpy.abs", "jax.numpy.absolute", "jax.numpy.acos", "jax.numpy.acosh", "jax.numpy.add", "jax.numpy.all", "jax.numpy.allclose", "jax.numpy.amax", "jax.numpy.amin", "jax.numpy.angle", "jax.numpy.any", "jax.numpy.append", "jax.numpy.apply_along_axis", "jax.numpy.apply_over_axes", "jax.numpy.arange", "jax.numpy.arccos", "jax.numpy.arccosh", "jax.numpy.arcsin", "jax.numpy.arcsinh", "jax.numpy.arctan", "jax.numpy.arctan2", "jax.numpy.arctanh", "jax.numpy.argmax", "jax.numpy.argmin", "jax.numpy.argpartition", "jax.numpy.argsort", "jax.numpy.argwhere", "jax.numpy.around", "jax.numpy.array", "jax.numpy.array_equal", "jax.numpy.array_equiv", "jax.numpy.array_repr", "jax.numpy.array_split", "jax.numpy.array_str", "jax.numpy.asarray", "jax.numpy.asin", "jax.numpy.asinh", "jax.numpy.astype", "jax.numpy.atan", "jax.numpy.atan2", "jax.numpy.atanh", "jax.numpy.atleast_1d", "jax.numpy.atleast_2d", "jax.numpy.atleast_3d", "jax.numpy.average", "jax.numpy.bartlett", "jax.numpy.bincount", "jax.numpy.bitwise_and", "jax.numpy.bitwise_count", "jax.numpy.bitwise_invert", "jax.numpy.bitwise_left_shift", "jax.numpy.bitwise_not", "jax.numpy.bitwise_or", "jax.numpy.bitwise_right_shift", "jax.numpy.bitwise_xor", "jax.numpy.blackman", "jax.numpy.block", "jax.numpy.bool_", "jax.numpy.broadcast_arrays", "jax.numpy.broadcast_shapes", "jax.numpy.broadcast_to", "jax.numpy.c_", "jax.numpy.can_cast", "jax.numpy.cbrt", "jax.numpy.cdouble", "jax.numpy.ceil", "jax.numpy.character", "jax.numpy.choose", "jax.numpy.clip", "jax.numpy.column_stack", "jax.numpy.complex128", "jax.numpy.complex64", "jax.numpy.complex_", "jax.numpy.complexfloating", "jax.numpy.compress", "jax.numpy.concat", "jax.numpy.concatenate", "jax.numpy.conj", "jax.numpy.conjugate", "jax.numpy.convolve", "jax.numpy.copy", "jax.numpy.copysign", "jax.numpy.corrcoef", "jax.numpy.correlate", "jax.numpy.cos", "jax.numpy.cosh", "jax.numpy.count_nonzero", "jax.numpy.cov", "jax.numpy.cross", "jax.numpy.csingle", "jax.numpy.cumprod", "jax.numpy.cumsum", "jax.numpy.cumulative_prod", "jax.numpy.cumulative_sum", "jax.numpy.deg2rad", "jax.numpy.degrees", "jax.numpy.delete", "jax.numpy.diag", "jax.numpy.diag_indices", "jax.numpy.diag_indices_from", "jax.numpy.diagflat", "jax.numpy.diagonal", "jax.numpy.diff", "jax.numpy.digitize", "jax.numpy.divide", "jax.numpy.divmod", "jax.numpy.dot", "jax.numpy.double", "jax.numpy.dsplit", "jax.numpy.dstack", "jax.numpy.dtype", "jax.numpy.ediff1d", "jax.numpy.einsum", "jax.numpy.einsum_path", "jax.numpy.empty", "jax.numpy.empty_like", "jax.numpy.equal", "jax.numpy.exp", "jax.numpy.exp2", "jax.numpy.expand_dims", "jax.numpy.expm1", "jax.numpy.extract", "jax.numpy.eye", "jax.numpy.fabs", "jax.numpy.fft.fft", "jax.numpy.fft.fft2", "jax.numpy.fft.fftfreq", "jax.numpy.fft.fftn", "jax.numpy.fft.fftshift", "jax.numpy.fft.hfft", "jax.numpy.fft.ifft", "jax.numpy.fft.ifft2", "jax.numpy.fft.ifftn", "jax.numpy.fft.ifftshift", "jax.numpy.fft.ihfft", "jax.numpy.fft.irfft", "jax.numpy.fft.irfft2", "jax.numpy.fft.irfftn", "jax.numpy.fft.rfft", "jax.numpy.fft.rfft2", "jax.numpy.fft.rfftfreq", "jax.numpy.fft.rfftn", "jax.numpy.fill_diagonal", "jax.numpy.finfo", "jax.numpy.fix", "jax.numpy.flatnonzero", "jax.numpy.flexible", "jax.numpy.flip", "jax.numpy.fliplr", "jax.numpy.flipud", "jax.numpy.float16", "jax.numpy.float32", "jax.numpy.float64", "jax.numpy.float_", "jax.numpy.float_power", "jax.numpy.floating", "jax.numpy.floor", "jax.numpy.floor_divide", "jax.numpy.fmax", "jax.numpy.fmin", "jax.numpy.fmod", "jax.numpy.frexp", "jax.numpy.from_dlpack", "jax.numpy.frombuffer", "jax.numpy.fromfile", "jax.numpy.fromfunction", "jax.numpy.fromiter", "jax.numpy.frompyfunc", "jax.numpy.fromstring", "jax.numpy.full", "jax.numpy.full_like", "jax.numpy.gcd", "jax.numpy.generic", "jax.numpy.geomspace", "jax.numpy.get_printoptions", "jax.numpy.gradient", "jax.numpy.greater", "jax.numpy.greater_equal", "jax.numpy.hamming", "jax.numpy.hanning", "jax.numpy.heaviside", "jax.numpy.histogram", "jax.numpy.histogram2d", "jax.numpy.histogram_bin_edges", "jax.numpy.histogramdd", "jax.numpy.hsplit", "jax.numpy.hstack", "jax.numpy.hypot", "jax.numpy.i0", "jax.numpy.identity", "jax.numpy.iinfo", "jax.numpy.imag", "jax.numpy.index_exp", "jax.numpy.indices", "jax.numpy.inexact", "jax.numpy.inner", "jax.numpy.insert", "jax.numpy.int16", "jax.numpy.int32", "jax.numpy.int64", "jax.numpy.int8", "jax.numpy.int_", "jax.numpy.integer", "jax.numpy.interp", "jax.numpy.intersect1d", "jax.numpy.invert", "jax.numpy.isclose", "jax.numpy.iscomplex", "jax.numpy.iscomplexobj", "jax.numpy.isdtype", "jax.numpy.isfinite", "jax.numpy.isin", "jax.numpy.isinf", "jax.numpy.isnan", "jax.numpy.isneginf", "jax.numpy.isposinf", "jax.numpy.isreal", "jax.numpy.isrealobj", "jax.numpy.isscalar", "jax.numpy.issubdtype", "jax.numpy.iterable", "jax.numpy.ix_", "jax.numpy.kaiser", "jax.numpy.kron", "jax.numpy.lcm", "jax.numpy.ldexp", "jax.numpy.left_shift", "jax.numpy.less", "jax.numpy.less_equal", "jax.numpy.lexsort", "jax.numpy.linalg.cholesky", "jax.numpy.linalg.cond", "jax.numpy.linalg.cross", "jax.numpy.linalg.det", "jax.numpy.linalg.diagonal", "jax.numpy.linalg.eig", "jax.numpy.linalg.eigh", "jax.numpy.linalg.eigvals", "jax.numpy.linalg.eigvalsh", "jax.numpy.linalg.inv", "jax.numpy.linalg.lstsq", "jax.numpy.linalg.matmul", "jax.numpy.linalg.matrix_norm", "jax.numpy.linalg.matrix_power", "jax.numpy.linalg.matrix_rank", "jax.numpy.linalg.matrix_transpose", "jax.numpy.linalg.multi_dot", "jax.numpy.linalg.norm", "jax.numpy.linalg.outer", "jax.numpy.linalg.pinv", "jax.numpy.linalg.qr", "jax.numpy.linalg.slogdet", "jax.numpy.linalg.solve", "jax.numpy.linalg.svd", "jax.numpy.linalg.svdvals", "jax.numpy.linalg.tensordot", "jax.numpy.linalg.tensorinv", "jax.numpy.linalg.tensorsolve", "jax.numpy.linalg.trace", "jax.numpy.linalg.vecdot", "jax.numpy.linalg.vector_norm", "jax.numpy.linspace", "jax.numpy.load", "jax.numpy.log", "jax.numpy.log10", "jax.numpy.log1p", "jax.numpy.log2", "jax.numpy.logaddexp", "jax.numpy.logaddexp2", "jax.numpy.logical_and", "jax.numpy.logical_not", "jax.numpy.logical_or", "jax.numpy.logical_xor", "jax.numpy.logspace", "jax.numpy.mask_indices", "jax.numpy.matmul", "jax.numpy.matrix_transpose", "jax.numpy.matvec", "jax.numpy.max", "jax.numpy.maximum", "jax.numpy.mean", "jax.numpy.median", "jax.numpy.meshgrid", "jax.numpy.mgrid", "jax.numpy.min", "jax.numpy.minimum", "jax.numpy.mod", "jax.numpy.modf", "jax.numpy.moveaxis", "jax.numpy.multiply", "jax.numpy.nan_to_num", "jax.numpy.nanargmax", "jax.numpy.nanargmin", "jax.numpy.nancumprod", "jax.numpy.nancumsum", "jax.numpy.nanmax", "jax.numpy.nanmean", "jax.numpy.nanmedian", "jax.numpy.nanmin", "jax.numpy.nanpercentile", "jax.numpy.nanprod", "jax.numpy.nanquantile", "jax.numpy.nanstd", "jax.numpy.nansum", "jax.numpy.nanvar", "jax.numpy.ndarray", "jax.numpy.ndarray.at", "jax.numpy.ndim", "jax.numpy.negative", "jax.numpy.nextafter", "jax.numpy.nonzero", "jax.numpy.not_equal", "jax.numpy.number", "jax.numpy.object_", "jax.numpy.ogrid", "jax.numpy.ones", "jax.numpy.ones_like", "jax.numpy.outer", "jax.numpy.packbits", "jax.numpy.pad", "jax.numpy.partition", "jax.numpy.percentile", "jax.numpy.permute_dims", "jax.numpy.piecewise", "jax.numpy.place", "jax.numpy.poly", "jax.numpy.polyadd", "jax.numpy.polyder", "jax.numpy.polydiv", "jax.numpy.polyfit", "jax.numpy.polyint", "jax.numpy.polymul", "jax.numpy.polysub", "jax.numpy.polyval", "jax.numpy.positive", "jax.numpy.pow", "jax.numpy.power", "jax.numpy.printoptions", "jax.numpy.prod", "jax.numpy.promote_types", "jax.numpy.ptp", "jax.numpy.put", "jax.numpy.put_along_axis", "jax.numpy.quantile", "jax.numpy.r_", "jax.numpy.rad2deg", "jax.numpy.radians", "jax.numpy.ravel", "jax.numpy.ravel_multi_index", "jax.numpy.real", "jax.numpy.reciprocal", "jax.numpy.remainder", "jax.numpy.repeat", "jax.numpy.reshape", "jax.numpy.resize", "jax.numpy.result_type", "jax.numpy.right_shift", "jax.numpy.rint", "jax.numpy.roll", "jax.numpy.rollaxis", "jax.numpy.roots", "jax.numpy.rot90", "jax.numpy.round", "jax.numpy.s_", "jax.numpy.save", "jax.numpy.savez", "jax.numpy.searchsorted", "jax.numpy.select", "jax.numpy.set_printoptions", "jax.numpy.setdiff1d", "jax.numpy.setxor1d", "jax.numpy.shape", "jax.numpy.sign", "jax.numpy.signbit", "jax.numpy.signedinteger", "jax.numpy.sin", "jax.numpy.sinc", "jax.numpy.single", "jax.numpy.sinh", "jax.numpy.size", "jax.numpy.sort", "jax.numpy.sort_complex", "jax.numpy.spacing", "jax.numpy.split", "jax.numpy.sqrt", "jax.numpy.square", "jax.numpy.squeeze", "jax.numpy.stack", "jax.numpy.std", "jax.numpy.subtract", "jax.numpy.sum", "jax.numpy.swapaxes", "jax.numpy.take", "jax.numpy.take_along_axis", "jax.numpy.tan", "jax.numpy.tanh", "jax.numpy.tensordot", "jax.numpy.tile", "jax.numpy.trace", "jax.numpy.transpose", "jax.numpy.trapezoid", "jax.numpy.tri", "jax.numpy.tril", "jax.numpy.tril_indices", "jax.numpy.tril_indices_from", "jax.numpy.trim_zeros", "jax.numpy.triu", "jax.numpy.triu_indices", "jax.numpy.triu_indices_from", "jax.numpy.true_divide", "jax.numpy.trunc", "jax.numpy.ufunc", "jax.numpy.uint", "jax.numpy.uint16", "jax.numpy.uint32", "jax.numpy.uint64", "jax.numpy.uint8", "jax.numpy.union1d", "jax.numpy.unique", "jax.numpy.unique_all", "jax.numpy.unique_counts", "jax.numpy.unique_inverse", "jax.numpy.unique_values", "jax.numpy.unpackbits", "jax.numpy.unravel_index", "jax.numpy.unsignedinteger", "jax.numpy.unstack", "jax.numpy.unwrap", "jax.numpy.vander", "jax.numpy.var", "jax.numpy.vdot", "jax.numpy.vecdot", "jax.numpy.vecmat", "jax.numpy.vectorize", "jax.numpy.vsplit", "jax.numpy.vstack", "jax.numpy.where", "jax.numpy.zeros", "jax.numpy.zeros_like", "jax.numpy_rank_promotion", "jax.ops.segment_max", "jax.ops.segment_min", "jax.ops.segment_prod", "jax.ops.segment_sum", "jax.pmap", "jax.print_environment_info", "jax.process_count", "jax.process_index", "jax.process_indices", "jax.profiler.StepTraceAnnotation", "jax.profiler.TraceAnnotation", "jax.profiler.annotate_function", "jax.profiler.device_memory_profile", "jax.profiler.save_device_memory_profile", "jax.profiler.start_server", "jax.profiler.start_trace", "jax.profiler.stop_trace", "jax.profiler.trace", "jax.pure_callback", "jax.random.PRNGKey", "jax.random.ball", "jax.random.bernoulli", "jax.random.beta", "jax.random.binomial", "jax.random.bits", "jax.random.categorical", "jax.random.cauchy", "jax.random.chisquare", "jax.random.choice", "jax.random.clone", "jax.random.dirichlet", "jax.random.double_sided_maxwell", "jax.random.exponential", "jax.random.f", "jax.random.fold_in", "jax.random.gamma", "jax.random.generalized_normal", "jax.random.geometric", "jax.random.gumbel", "jax.random.key", "jax.random.key_data", "jax.random.laplace", "jax.random.loggamma", "jax.random.logistic", "jax.random.lognormal", "jax.random.maxwell", "jax.random.multinomial", "jax.random.multivariate_normal", "jax.random.normal", "jax.random.orthogonal", "jax.random.pareto", "jax.random.permutation", "jax.random.poisson", "jax.random.rademacher", "jax.random.randint", "jax.random.rayleigh", "jax.random.split", "jax.random.t", "jax.random.triangular", "jax.random.truncated_normal", "jax.random.uniform", "jax.random.wald", "jax.random.weibull_min", "jax.random.wrap_key_data", "jax.ref.AbstractRef", "jax.ref.ArrayRef", "jax.ref.addupdate", "jax.ref.array_ref", "jax.ref.freeze", "jax.ref.get", "jax.ref.set", "jax.ref.swap", "jax.scipy.cluster.vq.vq", "jax.scipy.fft.dct", "jax.scipy.fft.dctn", "jax.scipy.fft.idct", "jax.scipy.fft.idctn", "jax.scipy.integrate.trapezoid", "jax.scipy.interpolate.RegularGridInterpolator", "jax.scipy.linalg.block_diag", "jax.scipy.linalg.cho_factor", "jax.scipy.linalg.cho_solve", "jax.scipy.linalg.cholesky", "jax.scipy.linalg.det", "jax.scipy.linalg.eigh", "jax.scipy.linalg.eigh_tridiagonal", "jax.scipy.linalg.expm", "jax.scipy.linalg.expm_frechet", "jax.scipy.linalg.funm", "jax.scipy.linalg.hessenberg", "jax.scipy.linalg.hilbert", "jax.scipy.linalg.inv", "jax.scipy.linalg.lu", "jax.scipy.linalg.lu_factor", "jax.scipy.linalg.lu_solve", "jax.scipy.linalg.pascal", "jax.scipy.linalg.polar", "jax.scipy.linalg.qr", "jax.scipy.linalg.rsf2csf", "jax.scipy.linalg.schur", "jax.scipy.linalg.solve", "jax.scipy.linalg.solve_triangular", "jax.scipy.linalg.sqrtm", "jax.scipy.linalg.svd", "jax.scipy.linalg.toeplitz", "jax.scipy.ndimage.map_coordinates", "jax.scipy.optimize.OptimizeResults", "jax.scipy.optimize.minimize", "jax.scipy.signal.convolve", "jax.scipy.signal.convolve2d", "jax.scipy.signal.correlate", "jax.scipy.signal.correlate2d", "jax.scipy.signal.csd", "jax.scipy.signal.detrend", "jax.scipy.signal.fftconvolve", "jax.scipy.signal.istft", "jax.scipy.signal.stft", "jax.scipy.signal.welch", "jax.scipy.sparse.linalg.bicgstab", "jax.scipy.sparse.linalg.cg", "jax.scipy.sparse.linalg.gmres", "jax.scipy.spatial.transform.Rotation", "jax.scipy.spatial.transform.Slerp", "jax.scipy.special.bernoulli", "jax.scipy.special.beta", "jax.scipy.special.betainc", "jax.scipy.special.betaln", "jax.scipy.special.digamma", "jax.scipy.special.entr", "jax.scipy.special.erf", "jax.scipy.special.erfc", "jax.scipy.special.erfinv", "jax.scipy.special.exp1", "jax.scipy.special.expi", "jax.scipy.special.expit", "jax.scipy.special.expn", "jax.scipy.special.factorial", "jax.scipy.special.fresnel", "jax.scipy.special.gamma", "jax.scipy.special.gammainc", "jax.scipy.special.gammaincc", "jax.scipy.special.gammaln", "jax.scipy.special.gammasgn", "jax.scipy.special.hyp1f1", "jax.scipy.special.hyp2f1", "jax.scipy.special.i0", "jax.scipy.special.i0e", "jax.scipy.special.i1", "jax.scipy.special.i1e", "jax.scipy.special.kl_div", "jax.scipy.special.log_ndtr", "jax.scipy.special.log_softmax", "jax.scipy.special.logit", "jax.scipy.special.logsumexp", "jax.scipy.special.lpmn", "jax.scipy.special.lpmn_values", "jax.scipy.special.multigammaln", "jax.scipy.special.ndtr", "jax.scipy.special.ndtri", "jax.scipy.special.poch", "jax.scipy.special.polygamma", "jax.scipy.special.rel_entr", "jax.scipy.special.softmax", "jax.scipy.special.spence", "jax.scipy.special.sph_harm", "jax.scipy.special.xlog1py", "jax.scipy.special.xlogy", "jax.scipy.special.zeta", "jax.scipy.stats.bernoulli.cdf", "jax.scipy.stats.bernoulli.logpmf", "jax.scipy.stats.bernoulli.pmf", "jax.scipy.stats.bernoulli.ppf", "jax.scipy.stats.beta.cdf", "jax.scipy.stats.beta.logcdf", "jax.scipy.stats.beta.logpdf", "jax.scipy.stats.beta.logsf", "jax.scipy.stats.beta.pdf", "jax.scipy.stats.beta.sf", "jax.scipy.stats.betabinom.logpmf", "jax.scipy.stats.betabinom.pmf", "jax.scipy.stats.binom.logpmf", "jax.scipy.stats.binom.pmf", "jax.scipy.stats.cauchy.cdf", "jax.scipy.stats.cauchy.isf", "jax.scipy.stats.cauchy.logcdf", "jax.scipy.stats.cauchy.logpdf", "jax.scipy.stats.cauchy.logsf", "jax.scipy.stats.cauchy.pdf", "jax.scipy.stats.cauchy.ppf", "jax.scipy.stats.cauchy.sf", "jax.scipy.stats.chi2.cdf", "jax.scipy.stats.chi2.logcdf", "jax.scipy.stats.chi2.logpdf", "jax.scipy.stats.chi2.logsf", "jax.scipy.stats.chi2.pdf", "jax.scipy.stats.chi2.sf", "jax.scipy.stats.dirichlet.logpdf", "jax.scipy.stats.dirichlet.pdf", "jax.scipy.stats.expon.cdf", "jax.scipy.stats.expon.logcdf", "jax.scipy.stats.expon.logpdf", "jax.scipy.stats.expon.logsf", "jax.scipy.stats.expon.pdf", "jax.scipy.stats.expon.ppf", "jax.scipy.stats.expon.sf", "jax.scipy.stats.gamma.cdf", "jax.scipy.stats.gamma.logcdf", "jax.scipy.stats.gamma.logpdf", "jax.scipy.stats.gamma.logsf", "jax.scipy.stats.gamma.pdf", "jax.scipy.stats.gamma.sf", "jax.scipy.stats.gaussian_kde", "jax.scipy.stats.gaussian_kde.evaluate", "jax.scipy.stats.gaussian_kde.integrate_box_1d", "jax.scipy.stats.gaussian_kde.integrate_gaussian", "jax.scipy.stats.gaussian_kde.integrate_kde", "jax.scipy.stats.gaussian_kde.logpdf", "jax.scipy.stats.gaussian_kde.pdf", "jax.scipy.stats.gaussian_kde.resample", "jax.scipy.stats.gennorm.cdf", "jax.scipy.stats.gennorm.logpdf", "jax.scipy.stats.gennorm.pdf", "jax.scipy.stats.geom.logpmf", "jax.scipy.stats.geom.pmf", "jax.scipy.stats.gumbel_l.cdf", "jax.scipy.stats.gumbel_l.logcdf", "jax.scipy.stats.gumbel_l.logpdf", "jax.scipy.stats.gumbel_l.logsf", "jax.scipy.stats.gumbel_l.pdf", "jax.scipy.stats.gumbel_l.ppf", "jax.scipy.stats.gumbel_l.sf", "jax.scipy.stats.gumbel_r.cdf", "jax.scipy.stats.gumbel_r.logcdf", "jax.scipy.stats.gumbel_r.logpdf", "jax.scipy.stats.gumbel_r.logsf", "jax.scipy.stats.gumbel_r.pdf", "jax.scipy.stats.gumbel_r.ppf", "jax.scipy.stats.gumbel_r.sf", "jax.scipy.stats.laplace.cdf", "jax.scipy.stats.laplace.logpdf", "jax.scipy.stats.laplace.pdf", "jax.scipy.stats.logistic.cdf", "jax.scipy.stats.logistic.isf", "jax.scipy.stats.logistic.logpdf", "jax.scipy.stats.logistic.pdf", "jax.scipy.stats.logistic.ppf", "jax.scipy.stats.logistic.sf", "jax.scipy.stats.mode", "jax.scipy.stats.multinomial.logpmf", "jax.scipy.stats.multinomial.pmf", "jax.scipy.stats.multivariate_normal.logpdf", "jax.scipy.stats.multivariate_normal.pdf", "jax.scipy.stats.nbinom.logpmf", "jax.scipy.stats.nbinom.pmf", "jax.scipy.stats.norm.cdf", "jax.scipy.stats.norm.isf", "jax.scipy.stats.norm.logcdf", "jax.scipy.stats.norm.logpdf", "jax.scipy.stats.norm.logsf", "jax.scipy.stats.norm.pdf", "jax.scipy.stats.norm.ppf", "jax.scipy.stats.norm.sf", "jax.scipy.stats.pareto.logpdf", "jax.scipy.stats.pareto.pdf", "jax.scipy.stats.poisson.cdf", "jax.scipy.stats.poisson.logpmf", "jax.scipy.stats.poisson.pmf", "jax.scipy.stats.rankdata", "jax.scipy.stats.sem", "jax.scipy.stats.t.logpdf", "jax.scipy.stats.t.pdf", "jax.scipy.stats.truncnorm.cdf", "jax.scipy.stats.truncnorm.logcdf", "jax.scipy.stats.truncnorm.logpdf", "jax.scipy.stats.truncnorm.logsf", "jax.scipy.stats.truncnorm.pdf", "jax.scipy.stats.truncnorm.sf", "jax.scipy.stats.uniform.cdf", "jax.scipy.stats.uniform.logpdf", "jax.scipy.stats.uniform.pdf", "jax.scipy.stats.uniform.ppf", "jax.scipy.stats.vonmises.logpdf", "jax.scipy.stats.vonmises.pdf", "jax.scipy.stats.wrapcauchy.logpdf", "jax.scipy.stats.wrapcauchy.pdf", "jax.shard_map", "jax.smap", "jax.test_util.check_grads", "jax.test_util.check_jvp", "jax.test_util.check_vjp", "jax.transfer_guard", "jax.tree.all", "jax.tree.broadcast", "jax.tree.flatten", "jax.tree.flatten_with_path", "jax.tree.leaves", "jax.tree.leaves_with_path", "jax.tree.map", "jax.tree.map_with_path", "jax.tree.reduce", "jax.tree.reduce_associative", "jax.tree.structure", "jax.tree.transpose", "jax.tree.unflatten", "jax.tree_util.KeyEntry", "jax.tree_util.KeyPath", "jax.tree_util.Partial", "jax.tree_util.all_leaves", "jax.tree_util.keystr", "jax.tree_util.register_dataclass", "jax.tree_util.register_pytree_node", "jax.tree_util.register_pytree_node_class", "jax.tree_util.register_pytree_with_keys", "jax.tree_util.register_pytree_with_keys_class", "jax.tree_util.register_static", "jax.tree_util.tree_all", "jax.tree_util.tree_broadcast", "jax.tree_util.tree_flatten", "jax.tree_util.tree_flatten_with_path", "jax.tree_util.tree_leaves", "jax.tree_util.tree_leaves_with_path", "jax.tree_util.tree_map", "jax.tree_util.tree_map_with_path", "jax.tree_util.tree_reduce", "jax.tree_util.tree_reduce_associative", "jax.tree_util.tree_structure", "jax.tree_util.tree_transpose", "jax.tree_util.tree_unflatten", "jax.tree_util.treedef_children", "jax.tree_util.treedef_is_leaf", "jax.tree_util.treedef_tuple", "jax.typing.ArrayLike", "jax.typing.DTypeLike", "jax.value_and_grad", "jax.vjp", "jax.vmap", "jaxlib.xla_client.register_custom_call_target", "Advanced compilation", "Advanced debugging", "JAX tutorials draft", "Parallel computation", "Profiling and performance", "Example: Writing a simple neural network", "About the project", "Advanced automatic differentiation", "Resources and Advanced Guides", "Ahead-of-time lowering and compilation", "API compatibility", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ArrayRef</span></code>: mutable arrays for data plumbing and memory control", "Asynchronous dispatch", "Autodidax: JAX core from scratch", "Autodidax2, part 1: JAX from scratch, again", "Automatic differentiation", "Automatic vectorization", "Getting Started with JAX", "Building on JAX", "Change log", "Concurrency", "Configuration Options", "Contributing to JAX", "Developer notes", "Control flow and logical operators with JIT", "Introduction to debugging", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">checkify</span></code> transformation", "JAX debugging flags", "Compiled prints and breakpoints", "Default dtypes and the X64 flag", "Python and NumPy version support policy", "Building from source", "Profiling device memory", "JAX direct linearize", "Distributed data loading", "Errors", "Exporting and serializing staged-out computations", "Exporting and serialization", "Interoperation with TensorFlow", "Shape polymorphism", "Extension guides", "External callbacks", "Frequently asked questions (FAQ)", "Foreign function interface (FFI)", "Glossary of terms", "GPU memory allocation", "GPU performance tips", "Gradient checkpointing with <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.checkpoint</span></code> (<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.remat</span></code>)", "JAX: High performance array computing", "Installation", "Handling of closed-over constants", "JAX Internal Implementation Notes", "Investigating a regression", "Public API: <code class=\"docutils literal notranslate\"><span class=\"pre\">jax</span></code> package", "JAX 101", "JAX Internals: primitives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.debug</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.distributed</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.dlpack</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.dtypes</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.example_libraries</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.example_libraries.optimizers</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.example_libraries.stax</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.checkify</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.compilation_cache</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.custom_dce</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.custom_partitioning</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.jet</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.key_reuse</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.mesh_utils</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.multihost_utils</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pallas</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pallas.mosaic_gpu</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pallas.tpu</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pallas.triton</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pjit</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.serialize_executable</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.shard_map</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.sparse</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.export</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.core</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.linear_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.mlir</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.random</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.ffi</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.flatten_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.image</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.lax</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.lib</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.nn</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.nn.initializers</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.numpy</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.ops</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.profiler</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.random</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.ref</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.scipy</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.sharding</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.stages</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.test_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.tree</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.tree_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.typing</span></code> module", "jax.Array migration", "JAX internals: The jaxpr language", "Sequencing side-effects in JAX", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.remat</span></code> / <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.checkpoint</span></code> changes: what you need to know", "Type Annotation Roadmap for JAX", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shmap</span></code> (<code class=\"docutils literal notranslate\"><span class=\"pre\">shard_map</span></code>) for simple per-device code", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend</span></code>: a module for extensions", "Efficient transposition of replication-inducing collectives", "JEP 18137: Scope of JAX NumPy &amp; SciPy Wrappers", "Custom JVP/VJP rules for JAX-transformable functions", "JEP 25516: Effort-based versioning for JAX", "JAX PRNG Design", "JEP 28661: Supporting the <code class=\"docutils literal notranslate\"><span class=\"pre\">__jax_array__</span></code> protocol", "<code class=\"docutils literal notranslate\"><span class=\"pre\">custom_vjp</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">nondiff_argnums</span></code> update guide", "Omnistaging", "JEP 9263: Typed keys &amp; pluggable RNGs", "Design of Type Promotion Semantics for JAX", "Jax and Jaxlib versioning", "JAX Enhancement Proposals (JEPs)", "Just-in-time compilation", "Key concepts", "Introduction to multi-controller JAX (aka multi-process/multi-host JAX)", "\ud83d\udd2a JAX - The Sharp Bits \ud83d\udd2a", "Custom derivative rules", "Distributed arrays and automatic parallelization", "Training a simple neural network, with PyTorch data loading", "Writing custom Jaxpr interpreters in JAX", "The Autodiff Cookbook", "Control autodiff\u2019s saved values with <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.checkpoint</span></code> (aka <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.remat</span></code>)", "Generalized convolutions in JAX", "Explicit sharding (a.k.a. \u201csharding in types\u201d)", "JAX Memories and Host Offloading", "Device-local array layout control", "Training a simple neural network, with tensorflow/datasets data loading", "Manual parallelism with <code class=\"docutils literal notranslate\"><span class=\"pre\">shard_map</span></code>", "Quickstart: How to think in JAX", "Autobatching for Bayesian inference", "Notes", "Pallas Changelog", "Pallas Async Operations", "Pallas Design", "Pallas Design Notes", "Pallas:Mosaic GPU", "Mosaic GPU Pipelining", "Writing Mosaic GPU kernels with Pallas", "Grids and BlockSpecs", "Pallas: a JAX kernel language", "Software Pipelining", "Pallas Quickstart", "Writing TPU kernels with Pallas", "Distributed Computing in Pallas for TPUs", "Pallas TPU", "Matrix Multiplication", "TPU Pipelining", "Scalar Prefetch and Block-Sparse Computation", "Persistent compilation cache", "Profiling computation", "Pytrees", "Pseudorandom numbers", "Rank promotion warning", "Introduction to parallel programming", "Shardy JAX Migration", "Stateful computations", "The Training Cookbook", "Transfer guard", "Type promotion semantics", "Working with pytrees", "XLA compiler flags"], "titleterms": {"": [1342, 1360, 1362, 1368, 1382, 1440, 1443, 1444, 1445, 1448, 1454, 1467, 1468, 1474, 1501], "0": [1354, 1456, 1478], "1": [1348, 1349, 1350, 1354, 1369, 1377, 1444, 1448, 1452, 1456, 1466, 1474, 1478, 1500], "10": 1354, "101": [1337, 1352, 1389], "11": [1354, 1478], "12": 1354, "12ish": 1354, "13": 1354, "14": 1354, "15": 1354, "16": [1354, 1478], "17": 1354, "18": [1354, 1478], "18137": 1448, "19": 1354, "1d": 1469, "2": [1342, 1348, 1350, 1354, 1369, 1377, 1444, 1448, 1452, 1456, 1464, 1466, 1469, 1474, 1500], "20": 1354, "201": 1337, "2020": 1354, "2021": 1354, "2022": 1354, "2023": 1354, "2024": [1354, 1478], "2025": 1354, "2026": 1501, "21": 1354, "22": [1354, 1478], "23": 1354, "24": 1354, "25": 1354, "25516": 1450, "26": 1354, "27": 1354, "28": 1354, "28661": 1452, "29": [1354, 1478], "3": [1348, 1349, 1350, 1354, 1369, 1377, 1444, 1448, 1452, 1456, 1500], "30": [1354, 1478], "301": 1337, "31": [1354, 1478], "32": [1354, 1364, 1478], "33": [1354, 1478], "34": [1354, 1478], "35": [1354, 1478], "36": [1354, 1478], "37": [1354, 1478], "38": 1354, "39": 1354, "3d": 1469, "4": [1348, 1350, 1354, 1369, 1444, 1448, 1464, 1478], "40": 1354, "42": 1354, "43": 1354, "44": 1354, "45": 1354, "46": 1354, "47": 1354, "48": 1354, "49": 1354, "5": [1348, 1350, 1354, 1444, 1448, 1478], "50": 1354, "51": 1354, "52": 1354, "55": 1354, "56": 1354, "57": 1354, "58": 1354, "59": 1354, "6": [1354, 1448, 1478], "60": 1354, "61": 1354, "62": 1354, "63": 1354, "64": [1354, 1364], "64bit": 1462, "65": 1354, "66": 1354, "67": 1354, "68": 1354, "69": 1354, "7": [1354, 1478], "70": 1354, "71": 1354, "72": 1354, "73": 1354, "74": 1354, "75": 1354, "76": 1354, "77": 1354, "8": [1354, 1464, 1474], "9": 1354, "9263": 1455, "A": [1341, 1378, 1445, 1484, 1502], "By": 1356, "In": [1356, 1462, 1484], "No": [1356, 1446], "On": 1348, "The": [1342, 1361, 1364, 1441, 1443, 1449, 1462, 1467, 1485, 1502, 1503, 1507], "To": 1356, "__jax_array__": 1452, "ab": [298, 558], "abil": [1443, 1447], "about": [1341, 1369], "absolut": 559, "abstract": 1390, "abstractref": 1062, "acc": 147, "acceler": 1503, "access": [1489, 1490, 1494], "accumul": [1484, 1487], "achiev": 1503, "aco": [299, 560], "acosh": [300, 561], "across": [1353, 1369, 1447, 1457, 1464, 1479], "activ": [1426, 1471, 1492, 1495], "ad": [1348, 1371, 1442, 1496], "add": [301, 562, 1480], "addit": [1366, 1495], "address": 1356, "addressable_shard": 2, "addupd": 1064, "advanc": [1335, 1336, 1342, 1343, 1366, 1378, 1382, 1431, 1467, 1468, 1490, 1496], "advantag": 1484, "after": [1440, 1443], "after_al": 302, "again": 1349, "against": [1350, 1467], "aggreg": 1356, "agreement": 1357, "ahead": [1344, 1490], "aka": [1461, 1467, 1468], "algebra": 1424, "alias": [1408, 1479], "align": 1448, "all": [3, 563, 1289, 1356, 1456, 1474, 1479, 1490, 1501], "all_check": 116, "all_gath": [303, 1447, 1474, 1490], "all_leav": 1305, "all_to_al": [304, 1474], "allclos": 564, "alloc": [1380, 1484], "allow": 1356, "alreadi": 1445, "altern": [1450, 1451], "amax": 565, "ambigu": 1470, "amd": [1366, 1384], "amin": 566, "an": [1349, 1378, 1470, 1497], "analys": 1344, "analysi": 1471, "analyz": 1487, "angl": 567, "ani": [4, 568], "annot": [1444, 1455], "annotate_funct": 1009, "aot": 1344, "api": [1342, 1345, 1346, 1388, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1406, 1411, 1412, 1413, 1414, 1416, 1428, 1431, 1432, 1438, 1440, 1444, 1445, 1447, 1448, 1449, 1452, 1454, 1457, 1460, 1463, 1474, 1483, 1487, 1501], "append": 569, "appendix": [1447, 1456], "appli": 1497, "applic": 1343, "apply_along_axi": 570, "apply_over_ax": 571, "approach": [1369, 1500], "approx_max_k": 305, "approx_min_k": 306, "approx_tanh": 184, "april": 1354, "ar": [1377, 1443, 1447, 1457, 1464, 1466], "arang": 572, "arcco": 573, "arccosh": 574, "arcsin": 575, "arcsinh": 576, "arctan": 577, "arctan2": 578, "arctanh": 579, "argmax": [5, 307, 580], "argmin": [6, 308, 581], "argpartit": [7, 582], "argsort": [8, 583], "argument": [1342, 1344, 1423, 1424, 1443, 1459, 1463], "argwher": 584, "aris": [1440, 1454, 1501], "arithmet": 1455, "around": [585, 1470, 1495], "arrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 586, 1346, 1356, 1369, 1377, 1383, 1388, 1428, 1440, 1444, 1445, 1448, 1452, 1461, 1462, 1464, 1470, 1472, 1475, 1484, 1489], "array_equ": 587, "array_equiv": 588, "array_ref": 1065, "array_repr": 589, "array_split": 590, "array_str": 591, "array_typ": 263, "arraylik": 1329, "arrayref": [1063, 1346], "arriv": 1484, "asarrai": 592, "asid": 1349, "asin": [309, 593], "asinh": [310, 594], "ask": 1377, "assembl": [1445, 1474], "assert": 1374, "assert_equ": 133, "associ": 1356, "associative_scan": 311, "astyp": [9, 595], "async": [1356, 1479, 1490], "async_load_tmem": 160, "async_store_tmem": 161, "asynchron": [1347, 1363, 1484, 1503], "atan": [312, 596], "atan2": [313, 597], "atanh": [314, 598], "atleast_1d": 599, "atleast_2d": 600, "atleast_3d": 601, "atomic_add": 185, "atomic_and": 186, "atomic_ca": 187, "atomic_max": 188, "atomic_min": 189, "atomic_or": 190, "atomic_xchg": 191, "atomic_xor": 192, "atrou": 1469, "aug": 1354, "august": 1354, "author": 1455, "auto": [1381, 1465, 1470, 1473, 1475], "auto_ax": 1470, "autobatch": 1476, "autocomplet": 1444, "autodidax": 1348, "autodidax2": 1349, "autodiff": [1342, 1348, 1359, 1467, 1468], "automat": [1342, 1343, 1346, 1349, 1350, 1351, 1388, 1464, 1500], "automatic_check": 117, "autopgl": 1381, "avail": 1344, "aval": 1447, "averag": 602, "avoid": [1444, 1456], "await": 1484, "ax": [1445, 1474], "axi": [1448, 1470], "axis_index": 315, "axis_s": 316, "b": 1484, "back": [1443, 1456], "backend": [1341, 1356, 1378, 1407, 1486], "background": [1431, 1442, 1444, 1448, 1479, 1492], "backward": [1371, 1447, 1501], "ball": 1018, "barrier": [148, 1484, 1490], "barrier_arr": 162, "barrier_wait": 163, "bartlett": 603, "base": [1377, 1450, 1454], "basic": [1342, 1431, 1445, 1463, 1464, 1469, 1471, 1474, 1487], "batch": [1348, 1378, 1390, 1414, 1440, 1464, 1465, 1473, 1474, 1476], "batch_matmul": 317, "bayesian": 1476, "bazel": 1366, "bcoo": [199, 1356, 1414], "bcoo_broadcast_in_dim": 205, "bcoo_concaten": 206, "bcoo_dot_gener": 207, "bcoo_dot_general_sampl": 208, "bcoo_dynamic_slic": 209, "bcoo_extract": 210, "bcoo_fromdens": 211, "bcoo_gath": 212, "bcoo_multiply_dens": 213, "bcoo_multiply_spars": 214, "bcoo_reduce_sum": 215, "bcoo_reshap": 216, "bcoo_slic": 217, "bcoo_sort_indic": 218, "bcoo_squeez": 219, "bcoo_sum_dupl": 220, "bcoo_todens": 221, "bcoo_transpos": 222, "bcoo_update_layout": 223, "bcsr": [200, 1414], "bcsr_dot_gener": 224, "bcsr_extract": 225, "bcsr_fromdens": 226, "bcsr_todens": 227, "behavior": [1356, 1366, 1377, 1443], "behind": 1507, "being": 1501, "benchmark": [1343, 1377], "benefit": 1480, "bernoulli": [1019, 1121, 1166, 1167, 1168, 1169, 1433], "bessel_i0": 318, "bessel_i1": 319, "best": 1439, "beta": [1020, 1122, 1170, 1171, 1172, 1173, 1174, 1175, 1433], "betabinom": [1176, 1177, 1433], "betainc": [320, 1123], "betaln": 1124, "between": [1356, 1457], "bfloat16": [102, 1492], "bi": 1490, "bicgstab": 1116, "binari": [1356, 1476], "bincount": 604, "binom": [1178, 1179, 1433], "binomi": 1021, "bit": [1022, 1363, 1364, 1462], "bitcast_convert_typ": 321, "bitwise_and": [322, 605], "bitwise_count": 606, "bitwise_invert": 607, "bitwise_left_shift": 608, "bitwise_not": [323, 609], "bitwise_or": [324, 610], "bitwise_right_shift": 611, "bitwise_xor": [325, 612], "blackman": 613, "blackwel": 1484, "block": [614, 1442, 1445, 1471, 1474, 1484, 1488, 1490, 1492, 1493, 1494], "block_diag": 1077, "block_until_readi": 64, "blockspec": [139, 149, 1485, 1487, 1489], "bool_": 615, "both": [1342, 1467], "bound": 1462, "boundari": [1457, 1479], "break": 1440, "breakpoint": [81, 1360, 1363], "broadcast": [326, 1290, 1489], "broadcast_arrai": 616, "broadcast_in_dim": 327, "broadcast_one_to_al": 134, "broadcast_shap": [328, 617], "broadcast_to": [142, 618], "broadcast_to_rank": 329, "broadcasted_iota": 330, "broke": [1368, 1440, 1454, 1501], "buffer": [1377, 1455, 1487, 1490, 1493], "bug": [1354, 1454], "build": [1348, 1352, 1353, 1366, 1378, 1384, 1447, 1471], "built": 1341, "byte": 1356, "c": 1378, "c_": 619, "cach": [268, 1356, 1459, 1484, 1495], "calendar": 1450, "call": [1356, 1371, 1378, 1440, 1487], "callback": [82, 1343, 1360, 1363, 1376, 1388], "can": [1377, 1387, 1440, 1443, 1454, 1457, 1459, 1461, 1470, 1501], "can_cast": 620, "cannot": 1344, "canonic": 1356, "canonicalize_dtyp": 103, "captur": [1356, 1496], "case": 1443, "categor": 1023, "categori": 1456, "cauchi": [1024, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1433], "caus": 1380, "caveat": [1374, 1462], "cbrt": [331, 621], "cdf": [1166, 1170, 1180, 1188, 1196, 1203, 1217, 1222, 1229, 1236, 1239, 1252, 1262, 1269, 1275], "cdoubl": 622, "ceil": [332, 623], "celu": 507, "cg": 1117, "challeng": [1444, 1452], "chang": [1354, 1357, 1368, 1377, 1440, 1443, 1454, 1457], "changelog": 1478, "charact": 624, "check": [118, 1350, 1356, 1357, 1360, 1361, 1366, 1404, 1444, 1467], "check_error": 119, "check_grad": 1285, "check_jvp": 1286, "check_tracer_leak": 65, "check_vjp": 1287, "check_vma": 1474, "checkifi": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 1360, 1361, 1399], "checking_leak": 66, "checklist": 1357, "checkpoint": [67, 1356, 1382, 1443, 1468, 1471], "chi2": [1188, 1189, 1190, 1191, 1192, 1193, 1433], "chisquar": 1025, "cho_factor": 1078, "cho_solv": 1079, "choic": 1026, "choleski": [395, 788, 1080], "cholesky_upd": 396, "choos": [11, 625], "chunk": 1485, "clamp": 333, "class": [1407, 1408, 1409, 1410, 1415, 1423, 1424, 1434, 1435, 1444], "classif": 1476, "clear_cach": 68, "client": 1356, "clip": [12, 626, 1342, 1463], "clone": 1027, "close": 1385, "closedjaxpr": [256, 1441], "closure_convert": 69, "cloud": [1384, 1495], "cluster": [1070, 1433, 1448, 1484], "clusterbarri": 1484, "clz": 334, "co": [349, 642], "code": [1342, 1353, 1357, 1377, 1378, 1381, 1440, 1445, 1454, 1464, 1467, 1501], "collaps": 335, "collect": [1356, 1381, 1447, 1474, 1484], "color": 1356, "column_stack": 627, "combin": [1351, 1456], "commit": [13, 1357], "commit_smem": [164, 1484], "commit_tmem": 165, "common": [1356, 1380, 1503, 1506], "commun": [1381, 1384, 1490], "compar": [1471, 1500], "comparison": 1374, "compat": [1345, 1356, 1371, 1446, 1447, 1483, 1501], "compil": [1335, 1344, 1356, 1363, 1377, 1385, 1388, 1390, 1442, 1454, 1459, 1475, 1484, 1495, 1501, 1507], "compilation_cach": 1400, "compilerparam": [150, 183], "complet": 1484, "complex": [336, 1342, 1448, 1456, 1467], "complex128": 628, "complex64": 629, "complex_": 630, "complexflo": 631, "complexwarn": 557, "compos": [1342, 1353, 1467], "composit": 337, "compress": [14, 632], "comput": [1338, 1343, 1350, 1353, 1369, 1371, 1374, 1377, 1383, 1454, 1461, 1464, 1471, 1489, 1490, 1494, 1496, 1502], "concat": 633, "concaten": [338, 634, 1445, 1474], "concept": [1460, 1500], "conclus": [1479, 1492], "concret": [1443, 1470], "concurr": 1355, "cond": [339, 789, 1348, 1359, 1363, 1441], "conda": 1384, "condit": [1441, 1490], "config": 70, "configur": [1356, 1362, 1388, 1431, 1489, 1493, 1496, 1507], "conj": [15, 340, 635], "conjug": [16, 636], "consid": 1450, "consider": 1444, "consolid": 1369, "constant": [518, 1356, 1385, 1415, 1441, 1443, 1448], "constrain": [1464, 1472], "constraint": 1374, "constructor": 1489, "contain": [1342, 1377, 1384, 1463, 1476], "content": [1443, 1449, 1451, 1454], "context": [1349, 1356, 1362], "contribut": [1357, 1358], "contributor": 1357, "control": [1346, 1348, 1359, 1360, 1363, 1366, 1377, 1424, 1445, 1461, 1462, 1468, 1471, 1472, 1474, 1489], "conv": [341, 1469], "conv_dimension_numb": 342, "conv_general_dil": [343, 1469], "conv_general_dilated_loc": 344, "conv_general_dilated_patch": 345, "conv_transpos": 346, "conv_with_general_pad": [347, 1469], "conveni": [1369, 1447], "convent": [1342, 1356, 1371, 1463], "convert": 1377, "convert_element_typ": 348, "convolut": 1469, "convolv": [637, 1106], "convolve2d": 1107, "coo": 201, "coo_fromdens": 228, "coo_matmat": 229, "coo_matvec": 230, "coo_todens": 231, "cookbook": [1467, 1503], "coordin": 1414, "copi": [17, 638, 1428, 1479, 1484, 1490], "copy_gmem_to_smem": 166, "copy_smem_to_gmem": 167, "copy_to_host_async": [18, 71], "copysign": 639, "core": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 1348, 1353, 1417, 1441, 1446], "core_map": 1484, "corrcoef": 640, "correct": 1374, "correl": [641, 1108], "correlate2d": 1109, "cosh": [350, 643], "cotang": 1447, "count_nonzero": 644, "counter": 1502, "cov": 645, "cover": [1345, 1462], "cpu": [1356, 1384], "creat": [1356, 1366, 1440], "create_device_mesh": 131, "create_hybrid_device_mesh": 132, "creation": [1431, 1475], "cross": [646, 790, 1356, 1371, 1484], "csc": 202, "csd": 1110, "csingl": 647, "csr": 203, "csr_fromdens": 232, "csr_matmat": 233, "csr_matvec": 234, "csr_todens": 235, "cuda": [1356, 1377, 1384, 1484], "cumlogsumexp": 351, "cummax": 352, "cummin": 353, "cumprod": [19, 354, 648], "cumsum": [20, 355, 649], "cumulative_prod": 650, "cumulative_sum": 651, "cuspars": 1356, "custom": [1342, 1356, 1366, 1371, 1378, 1382, 1388, 1424, 1449, 1455, 1463, 1466, 1468, 1496, 1497, 1506], "custom_batch": [72, 73, 74, 1388], "custom_dc": [126, 127, 1401], "custom_gradi": 75, "custom_jvp": [76, 77, 78, 1342, 1376, 1388, 1463], "custom_linear_solv": 356, "custom_partit": [1402, 1495, 1501], "custom_root": 357, "custom_vjp": [79, 80, 1342, 1388, 1453, 1463], "custom_vmap": [72, 73], "customclass": 1377, "customiz": 1443, "data": [1346, 1348, 1369, 1377, 1414, 1443, 1461, 1464, 1465, 1471, 1473, 1474, 1489, 1494, 1500, 1503], "dataset": [1448, 1473, 1476], "dct": 1071, "dctn": 1072, "debug": [81, 82, 83, 84, 85, 86, 1336, 1342, 1343, 1344, 1356, 1360, 1362, 1363, 1367, 1371, 1374, 1376, 1391, 1462, 1463, 1484], "debug_barri": 193, "debug_inf": 87, "debug_nan": 88, "debug_print": 143, "dec": 1354, "decemb": 1478, "decompos": 1479, "decomposit": 1479, "decor": [1377, 1444], "deep": 1343, "def_dc": 127, "def_vmap": 73, "default": [1356, 1364], "default_backend": 89, "default_devic": 90, "default_export_platform": 246, "default_matmul_precis": 91, "default_prng_impl": 92, "defens": 1479, "defin": [1342, 1390, 1447, 1463, 1469, 1476], "define_prng_impl": 276, "definit": 1497, "defjvp": [77, 78], "defvjp": 80, "deg2rad": 652, "degre": 653, "delet": 654, "delta_orthogon": 519, "dens": 1494, "depend": [1366, 1443, 1447, 1454], "deriv": [1342, 1463, 1475, 1487], "describ": 1464, "descript": 1449, "deseri": 247, "deserialize_and_load": 196, "design": [1358, 1431, 1444, 1451, 1452, 1455, 1456, 1480, 1481, 1486], "det": [791, 1081], "detail": [1342, 1356, 1442, 1445, 1463], "detect": 1455, "detrend": 1111, "develop": [1341, 1358, 1371, 1444, 1446, 1497], "devic": [21, 62, 96, 1353, 1356, 1367, 1369, 1371, 1377, 1430, 1445, 1447, 1464, 1471, 1472, 1475, 1503], "device_count": 93, "device_get": 94, "device_memory_profil": 1010, "device_put": [95, 1471], "diag": 655, "diag_indic": 656, "diag_indices_from": 657, "diagflat": 658, "diagon": [22, 659, 792], "dialect": 273, "dict": [1342, 1350, 1463, 1467], "diff": 660, "differ": [1350, 1377, 1454, 1467], "differenti": [1342, 1343, 1346, 1349, 1350, 1378, 1388, 1390, 1463, 1467], "digamma": [358, 1125], "digit": 661, "dilat": 1469, "dimens": [1374, 1469], "dimension": 1469, "dir": 1356, "direct": [1353, 1356, 1368, 1490], "directori": 1495, "dirichlet": [1028, 1194, 1195, 1433], "disabl": [1356, 1440, 1443, 1454, 1501], "disable_jit": 97, "disable_x64": 128, "disagre": 1464, "disallow": 1356, "dispatch": [1347, 1356, 1503, 1505], "displai": 1476, "distribut": [98, 99, 1356, 1369, 1392, 1464, 1490], "div": 359, "div_check": 121, "dive": 1343, "diverg": 1462, "divid": [662, 1356], "divmod": 663, "dlpack": [100, 101, 1393], "dma": 1490, "do": [1377, 1440, 1443, 1454, 1457, 1466, 1479, 1501], "docker": 1384, "doctest": 1366, "document": [1366, 1371, 1444, 1482], "doe": [1361, 1455], "doesn": 1479, "domain": 1353, "don": 1445, "donat": 1377, "dot": [23, 144, 360, 664, 1356], "dot_gener": 361, "dot_product_attent": 508, "doubl": [665, 1462, 1487, 1490], "double_sided_maxwel": 1029, "down": [1445, 1474], "downstream": [1448, 1479], "dr": [1342, 1440, 1445, 1454, 1501], "draft": 1337, "dsplit": 666, "dstack": 667, "dtype": [24, 102, 103, 104, 105, 106, 107, 108, 668, 1356, 1364, 1394, 1455, 1505], "dtypelik": 1330, "duck": 1444, "dump": 1356, "dure": 1360, "dynam": [1356, 1462, 1493, 1494], "dynamic_index_in_dim": 362, "dynamic_slic": 363, "dynamic_slice_in_dim": 364, "dynamic_update_index_in_dim": 365, "dynamic_update_slic": 366, "dynamic_update_slice_in_dim": 367, "each": [1369, 1445, 1474], "eager": 1356, "easier": 1384, "ecosystem": 1383, "edg": 1487, "ediff1d": 669, "edit": 1366, "effect": [1442, 1454, 1505], "effici": [1447, 1503], "effort": [1356, 1450], "effver": 1450, "eig": [397, 793], "eigh": [398, 794, 1082], "eigh_tridiagon": 1083, "eigval": 795, "eigvalsh": 796, "einsum": 670, "einsum_path": 671, "elbo": 1476, "element": 1485, "elementwis": [1487, 1489], "elementwise_inline_asm": 194, "elu": 509, "emit_pipelin": [168, 1493], "empti": [236, 672], "empty_lik": 673, "emul": 1480, "enabl": [1356, 1364, 1440, 1443, 1501], "enable_check": 109, "enable_custom_prng": 110, "enable_custom_vjp_by_custom_transpos": 111, "enable_x64": 129, "end": 1480, "enforc": [1342, 1442, 1463], "enhanc": 1458, "ensur": 1371, "ensure_compile_time_ev": 112, "enter": 1456, "entr": 1126, "entri": 1356, "env": 1356, "eq": 368, "equal": [674, 1374], "equival": 1498, "erf": [369, 1127], "erf_inv": 370, "erfc": [371, 1128], "erfinv": 1129, "err": 1444, "error": [114, 1343, 1356, 1360, 1370, 1374, 1454, 1464], "estim": 1342, "etc": 1440, "eval_shap": 113, "evalu": [1210, 1348, 1350, 1390, 1444, 1448, 1466, 1467], "event": 1496, "everyth": 1459, "everywher": 1364, "exact": 1377, "examin": 1495, "exampl": [1340, 1342, 1343, 1345, 1362, 1363, 1366, 1369, 1376, 1378, 1414, 1445, 1447, 1451, 1454, 1456, 1461, 1463, 1464, 1474, 1476, 1480, 1483, 1487, 1488, 1490, 1494, 1502, 1503, 1506], "example_librari": [1395, 1396, 1397], "except": 1376, "excess": 1469, "exec": 1356, "execut": [1385, 1480, 1484], "exercis": 1466, "exist": [1390, 1448], "exp": [372, 675], "exp1": 1130, "exp2": [373, 676], "expand_dim": [374, 677], "expect": 1356, "experiment": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 1345, 1356, 1360, 1361, 1371, 1380, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1501], "expi": 1131, "expit": 1132, "explain": 1356, "explan": [1445, 1453, 1454], "explicit": [1464, 1470, 1484, 1498, 1500, 1502, 1506], "explicitli": 1345, "explor": 1376, "expm": 1084, "expm1": [375, 678], "expm_frechet": 1085, "expn": 1133, "expon": [1196, 1197, 1198, 1199, 1200, 1201, 1202, 1433], "exponenti": 1030, "export": [245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 1356, 1371, 1372, 1415, 1501], "expos": [1353, 1454], "express": 1447, "extend": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 1345, 1416, 1417, 1418, 1419, 1420, 1446, 1455, 1480, 1497], "extens": [1375, 1446, 1452], "extern": [1343, 1376, 1461], "extract": 679, "ey": [237, 680], "f": 1031, "fab": 681, "factori": 1134, "fail": 1377, "failur": [1380, 1490, 1501], "fake": 1476, "faq": 1377, "faster": 1377, "featur": [1342, 1380, 1443, 1450, 1463, 1493], "feb": 1354, "februari": 1354, "ffi": [283, 284, 285, 286, 287, 1343, 1378, 1421], "ffi_cal": 283, "ffi_low": 284, "fft": [376, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 1071, 1072, 1073, 1074, 1428, 1433, 1448], "fft2": 683, "fftconvolv": 1112, "fftfreq": 684, "fftn": 685, "fftshift": 686, "file": 1356, "fill_diagon": 700, "filter": 1356, "fin": 1462, "final": [1348, 1387, 1490], "find": 1352, "finfo": 701, "first": [1466, 1492], "fit": 1356, "fix": [702, 1354, 1454], "flag": [1360, 1362, 1364, 1381, 1501, 1507], "flat": 25, "flatnonzero": 703, "flatten": [26, 1291, 1348, 1452], "flatten_util": [288, 1422], "flatten_with_path": 1292, "flavor": 1376, "flexibl": [704, 1449, 1480], "flip": 705, "fliplr": 706, "flipud": 707, "float": [713, 1456], "float0": 104, "float16": 708, "float32": 709, "float64": 710, "float_": 711, "float_check": 122, "float_pow": 712, "floor": [377, 714], "floor_divid": 715, "flow": [1348, 1359, 1424, 1462, 1489], "fly": 1348, "fmax": 716, "fmin": 717, "fmod": 718, "fold": 1356, "fold_in": 1032, "follow": [1444, 1445, 1464], "foreach": 1346, "foreign": 1378, "fori_loop": [378, 1359], "forward": [1342, 1348, 1349, 1356, 1371, 1390, 1463, 1467, 1503], "foundat": [1342, 1467], "frame": 1356, "freez": 1066, "frequent": 1377, "fresnel": 1135, "frexp": 719, "friction": 1444, "from": [1348, 1349, 1353, 1356, 1366, 1371, 1374, 1384, 1444, 1461, 1462, 1480], "from_dlpack": [100, 720], "from_gda": 1440, "frombuff": 721, "fromfil": 722, "fromfunct": 723, "fromit": 724, "frompyfunc": 725, "fromstr": 726, "front": 1480, "frontend": 1378, "fsdp": [1474, 1503], "full": [379, 727, 1356, 1357, 1369, 1444, 1447], "full_lik": [380, 728], "fulli": [1474, 1503], "function": [1342, 1343, 1344, 1346, 1348, 1350, 1360, 1361, 1377, 1378, 1407, 1408, 1409, 1410, 1415, 1422, 1423, 1426, 1436, 1437, 1438, 1448, 1449, 1459, 1462, 1463, 1465, 1466, 1467, 1470, 1473, 1476, 1480, 1492, 1497, 1503, 1506], "fundament": [1382, 1468], "funm": 1086, "further": 1502, "fuse": 1492, "futur": 1479, "gamma": [1033, 1136, 1203, 1204, 1205, 1206, 1207, 1208, 1433], "gammainc": 1137, "gammaincc": 1138, "gammaln": 1139, "gammasgn": 1140, "garbag": 1356, "gather": [381, 1474, 1490], "gaussian_kd": [1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1433], "gcd": 729, "gda": 1440, "ge": 382, "gelu": 510, "gener": [730, 1369, 1381, 1448, 1469, 1476, 1489, 1496, 1502], "generalized_norm": 1034, "gennorm": [1217, 1218, 1219, 1433], "geom": [1220, 1221, 1433], "geometr": 1035, "geomspac": 731, "get": [1067, 1352, 1356], "get_backend": 492, "get_compile_opt": 493, "get_printopt": 732, "get_scaled_dot_general_config": 511, "github": 1357, "global": [1356, 1369], "global_array_to_host_local_arrai": 135, "global_shard": 27, "gloo": 1356, "glorot_norm": 520, "glorot_uniform": 521, "glossari": 1379, "glu": 512, "gmem": [151, 1484], "gmre": 1118, "go": [1368, 1440, 1443, 1454, 1501], "goal": [1449, 1456], "googl": [1357, 1384, 1495], "gotcha": 1506, "gpu": [1356, 1366, 1367, 1378, 1380, 1381, 1384, 1461, 1480, 1482, 1483, 1484, 1486, 1496], "grad": [238, 289, 1342, 1348, 1350, 1361, 1363, 1467, 1475, 1480], "gradient": [733, 1342, 1350, 1353, 1377, 1382, 1424, 1463, 1467, 1476, 1503], "granular": 1444, "greater": 734, "greater_equ": 735, "grid": [1485, 1487, 1488, 1489], "gridspec": 140, "gt": 383, "guarante": 1371, "guard": [1356, 1504], "guid": [1343, 1358, 1371, 1372, 1375, 1444, 1453, 1486, 1491], "gumbel": [1036, 1356], "gumbel_l": [1222, 1223, 1224, 1225, 1226, 1227, 1228, 1433], "gumbel_r": [1229, 1230, 1231, 1232, 1233, 1234, 1235, 1433], "ham": 736, "han": 737, "hand": 1492, "handl": [1342, 1385, 1440, 1441, 1456, 1463, 1497, 1506], "handler": 1378, "happen": 1390, "hard_sigmoid": 513, "hard_silu": 514, "hard_swish": 515, "hard_tanh": 516, "harder": 1384, "hardwar": 1484, "have": 1501, "hbm": 1490, "he_norm": 522, "he_uniform": 523, "heavisid": 738, "hello": 1488, "help": 1352, "helper": 1377, "hermet": 1366, "hessenberg": [399, 1087], "hessian": [290, 1342, 1467], "hfft": 687, "hidden": 1353, "hierarchi": [1444, 1487], "high": [1356, 1383, 1503], "higher": [1342, 1441, 1470], "hilbert": 1088, "histogram": 739, "histogram2d": 740, "histogram_bin_edg": 741, "histogramdd": 742, "hlo": 1356, "hopper": [1483, 1484], "host": [1356, 1440, 1461, 1471, 1503], "host_local_array_to_global_arrai": 136, "hourli": 1387, "householder_product": 400, "how": [1342, 1356, 1367, 1377, 1440, 1443, 1445, 1447, 1454, 1456, 1457, 1458, 1459, 1464, 1467, 1474, 1475, 1479, 1485, 1495, 1501], "hsplit": 743, "hstack": 744, "hyp1f1": 1141, "hyp2f1": 1142, "hyperparamet": [1465, 1473], "hypot": 745, "hypothesi": 1366, "i": [1345, 1367, 1374, 1377, 1440, 1443, 1445, 1454, 1457, 1464, 1466, 1474, 1484, 1489, 1497, 1501, 1506], "i0": [746, 1143, 1144], "i1": [1145, 1146], "idct": 1073, "idctn": 1074, "idea": [1349, 1449], "ident": [517, 747], "idx": 1462, "ifft": 688, "ifft2": 689, "ifftn": 690, "ifftshift": 691, "igamma": 384, "igammac": 385, "ignor": 1356, "ihfft": 692, "iinfo": 748, "illustr": 1469, "imag": [28, 291, 292, 386, 749, 1423], "immedi": 1480, "impact": 1363, "impl": 1356, "implement": [1342, 1356, 1385, 1386, 1444, 1447, 1448, 1449, 1452, 1455, 1463, 1467, 1471, 1479], "implicit": [1342, 1463], "import": [1369, 1448], "imprecis": 1444, "improv": 1387, "impur": 1346, "in_spec": [1445, 1474], "inadvert": 1455, "includ": 1356, "inconsist": 1501, "incorpor": 1353, "index": [1455, 1462, 1485, 1494], "index_check": 123, "index_exp": 750, "index_in_dim": 387, "index_tak": 388, "indic": 751, "indirectli": [1342, 1463], "induc": 1447, "ineffici": 1447, "inexact": 752, "inf": 1356, "infer": 1476, "info": 1356, "inform": [1344, 1497], "inherit": 1444, "initi": [98, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 1348, 1377, 1427, 1471, 1497, 1503, 1506], "inlin": 1484, "inner": 753, "innocu": 1443, "input": [1348, 1374, 1440, 1444, 1445, 1447, 1452, 1462, 1469, 1474, 1485, 1501], "insert": 754, "insid": [1369, 1479], "inspect": [1360, 1363], "inspect_array_shard": 83, "instal": [1366, 1367, 1384, 1475, 1496], "instanc": 1444, "instruct": [1356, 1484], "int16": 755, "int32": 756, "int64": 757, "int8": 758, "int_": 759, "integ": [760, 1456], "integer_pow": 389, "integr": [1075, 1433, 1448], "integrate_box_1d": 1211, "integrate_gaussian": 1212, "integrate_kd": 1213, "intel": 1384, "intellig": 1444, "intent": 1444, "interact": [1363, 1490], "interfac": 1378, "intermedi": [1447, 1464, 1472], "intern": [1345, 1358, 1375, 1386, 1390, 1441, 1443, 1454, 1497], "interoper": 1373, "interp": 761, "interpol": [1076, 1433, 1448], "interpret": [1348, 1349, 1446, 1466], "interrupt": 1503, "intersect1d": 762, "intro": 1464, "introduct": [1360, 1390, 1461, 1480, 1500, 1507], "inv": [797, 1089], "invari": 1447, "invers": 1466, "invert": [763, 1466], "investig": 1387, "io": [1366, 1448], "io_callback": [130, 1376], "iota": 390, "ipynb": 1366, "ir": [274, 1349, 1356], "irfft": 693, "irfft2": 694, "irfftn": 695, "is_finit": 391, "is_fully_address": 29, "is_fully_repl": 30, "is_supported_dtyp": 101, "is_symbolic_dim": 249, "isclos": 764, "iscomplex": 765, "iscomplexobj": 766, "isdtyp": 767, "isf": [1181, 1240, 1253], "isfinit": 768, "isin": 769, "isinf": 770, "isnan": 771, "isneginf": 772, "isposinf": 773, "isreal": 774, "isrealobj": 775, "isscalar": 776, "issu": [1440, 1443, 1454, 1484, 1501], "issubdtyp": [105, 777], "istft": 1113, "item": 31, "items": 32, "iter": [778, 1342, 1446, 1463, 1489], "its": [1350, 1467, 1476, 1493], "ix_": 779, "jacfwd": [293, 1342, 1467], "jacobian": [294, 1342, 1467], "jacrev": [295, 1342, 1467], "jan": 1354, "januari": 1354, "jax": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1337, 1341, 1342, 1345, 1348, 1349, 1350, 1352, 1353, 1354, 1357, 1360, 1361, 1362, 1363, 1366, 1367, 1368, 1369, 1371, 1375, 1377, 1382, 1383, 1384, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1448, 1449, 1450, 1451, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1475, 1478, 1480, 1486, 1497, 1498, 1501, 1505, 1506, 1507], "jax2tf": 1356, "jax_debug_nan": 1362, "jax_disable_jit": 1362, "jaxlib": [1334, 1345, 1354, 1366, 1384, 1457], "jaxpr": [257, 1348, 1356, 1441, 1460, 1466], "jaxpr_as_fun": 264, "jaxpreqn": 258, "jaxruntimeerror": 115, "jaxspars": 204, "jep": [1448, 1450, 1452, 1455, 1458], "jet": 1403, "jit": [296, 1348, 1356, 1359, 1361, 1377, 1388, 1390, 1440, 1441, 1459, 1464, 1475, 1500], "joint": 1476, "juli": [1354, 1478], "june": [1354, 1478], "just": [1388, 1443, 1459, 1475], "jvp": [297, 1342, 1348, 1349, 1356, 1449, 1463, 1467], "k": [1342, 1447, 1470, 1485], "kaiser": 780, "kei": [1037, 1356, 1404, 1431, 1450, 1455, 1460, 1471, 1500, 1506], "kernel": [1356, 1469, 1479, 1480, 1483, 1484, 1485, 1486, 1487, 1489, 1492, 1494], "key_data": 1038, "key_reus": 1404, "keyentri": 1302, "keypath": 1303, "keystr": 1306, "kind": [1377, 1471], "kl_div": 1147, "know": [1440, 1443, 1454, 1501], "kron": 781, "kubernet": 1461, "l2": 1484, "lack": [1444, 1498], "laid": [1457, 1464], "languag": [1441, 1486], "laplac": [1039, 1236, 1237, 1238, 1433], "larg": 1490, "lattic": 1456, "lax": [298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 1363, 1424, 1456, 1460, 1469, 1490], "layer": 1460, "layout": [152, 1469, 1472, 1484, 1489], "layout_cast": 169, "lcm": 782, "ldexp": 783, "le": 392, "lead": 1444, "leak": [1356, 1367], "leaky_relu": 533, "learn": 1343, "leav": [1293, 1456, 1506], "leaves_with_path": 1294, "lecun_norm": 524, "lecun_uniform": 525, "left_shift": 784, "legaci": [1345, 1356, 1438], "less": [785, 1443, 1454], "less_equ": 786, "let": [1382, 1445, 1468, 1474], "level": [1356, 1444, 1452, 1474], "lexsort": 787, "lgamma": 393, "lh": 1469, "lib": [492, 493, 1425], "librari": [1341, 1345, 1353, 1375, 1377, 1455], "licens": 1357, "lifetim": 1479, "like": [1360, 1440], "limit": [1356, 1361, 1362, 1363, 1448, 1471], "linalg": [239, 240, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1116, 1117, 1118, 1414, 1424, 1428, 1433, 1448], "linear": [495, 1348, 1350, 1356, 1368, 1424, 1502], "linear_transpos": 494, "linear_util": [266, 267, 268, 269, 270, 271, 272, 1418], "linspac": 819, "lint": [1357, 1366], "linux": 1384, "list": [1342, 1350, 1382, 1422, 1436, 1437, 1438, 1439, 1463, 1467], "liter": 259, "live_arrai": [496, 1440], "live_buff": 1440, "load": [145, 820, 1369, 1377, 1465, 1473, 1480, 1484, 1503], "lobpcg_standard": 239, "local": [1356, 1366, 1384, 1440, 1472, 1490], "local_devic": 498, "local_device_count": 497, "locat": 1356, "log": [411, 821, 1354, 1356, 1476, 1495], "log10": 822, "log1mexp": 534, "log1p": [412, 823], "log2": 824, "log_compil": 499, "log_ndtr": 1148, "log_sigmoid": 535, "log_softmax": [536, 1149], "logaddexp": 825, "logaddexp2": 826, "logcdf": [1171, 1182, 1189, 1197, 1204, 1223, 1230, 1254, 1270], "loggamma": 1040, "logic": 1359, "logical_and": 827, "logical_not": 828, "logical_or": 829, "logical_xor": 830, "logist": [413, 1041, 1239, 1240, 1241, 1242, 1243, 1244, 1350, 1414, 1433], "logit": 1150, "logmeanexp": 537, "lognorm": 1042, "logpdf": [1172, 1183, 1190, 1194, 1198, 1205, 1214, 1218, 1224, 1231, 1237, 1241, 1248, 1255, 1260, 1267, 1271, 1276, 1279, 1281], "logpmf": [1167, 1176, 1178, 1220, 1246, 1250, 1263], "logsf": [1173, 1184, 1191, 1199, 1206, 1225, 1232, 1256, 1272], "logspac": 831, "logsumexp": [538, 1151], "lookahead": 1493, "loop": [1465, 1473, 1479, 1485, 1503], "loss": [1456, 1465, 1473], "lower": [1344, 1356, 1385, 1480], "lpmn": 1152, "lpmn_valu": 1153, "lstsq": 798, "lt": 414, "lu": [401, 1090], "lu_factor": 1091, "lu_pivots_to_permut": 402, "lu_solv": 1092, "m": 1356, "ma": 1448, "mac": 1384, "machin": [1343, 1496], "machineri": 1348, "made": [1342, 1467], "magma": 1356, "mai": 1354, "main": [1349, 1449], "make": [1377, 1447, 1457, 1461], "make_array_from_callback": 500, "make_array_from_process_local_data": 501, "make_array_from_single_device_arrai": 502, "make_jaxpr": 503, "make_mesh": 504, "manag": [1356, 1362, 1366, 1442], "manipul": [1423, 1431], "manual": [1351, 1381, 1474, 1476, 1496, 1500], "map": [415, 1295, 1445, 1447, 1474, 1506], "map_coordin": 1103, "map_with_path": 1296, "mar": 1354, "march": [1354, 1501], "mark": [1377, 1459], "mask": 1494, "mask_indic": 832, "materi": 1363, "math": [1342, 1467], "matmul": [799, 833, 1356, 1381, 1480, 1483], "matric": 1414, "matrix": [1342, 1467, 1474, 1483, 1489, 1492, 1494], "matrix_norm": 800, "matrix_pow": 801, "matrix_rank": 802, "matrix_transpos": [803, 834], "matvec": 835, "max": [34, 416, 836, 1356], "max_contigu": 146, "maximum": 837, "maximum_supported_calling_convention_vers": 250, "maxwel": 1043, "md": 1366, "mean": [35, 838, 1455], "mechan": [1444, 1475], "median": 839, "megacor": [1490, 1493], "member": 1439, "memori": [1346, 1356, 1367, 1380, 1430, 1464, 1471, 1483, 1484, 1487, 1489, 1490, 1493], "memoryspac": 153, "mention": 1470, "merg": 1356, "merge_linear_aux": 269, "mesh": [1356, 1461, 1470, 1474, 1501, 1503], "mesh_util": [131, 132, 1405], "meshgrid": 840, "messag": 1454, "metadata": 1356, "method": [1377, 1388], "mgrid": 841, "migrat": [1371, 1440, 1501], "min": [36, 417, 842, 1356], "minim": 1105, "minimum": 843, "minimum_supported_calling_convention_vers": 251, "minut": 1356, "miscellan": [1388, 1462], "mish": 539, "miss": [1356, 1495], "mistak": [1503, 1506], "mix": 1456, "mixtur": 1470, "ml": 1506, "mlir": [273, 274, 275, 1419], "mma": 1484, "mock": 1356, "mod": 844, "mode": [1245, 1342, 1348, 1349, 1356, 1371, 1463, 1467, 1470, 1480, 1485, 1490], "model": [1343, 1369, 1451, 1464, 1471, 1476, 1488, 1490, 1503, 1506], "modf": 845, "modifi": 1366, "modul": [1356, 1371, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1446], "modular": 1341, "more": [1342, 1360, 1363, 1442, 1445, 1451, 1463, 1467, 1480], "mosaic": [1356, 1480, 1482, 1483, 1484, 1486], "mosaic_gpu": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 1408], "most": [1356, 1456], "motiv": [1442, 1445, 1447, 1455, 1479], "moveaxi": 846, "mt": 33, "mul": 418, "multi": [1353, 1371, 1381, 1461, 1495], "multi_dot": 804, "multicor": 1489, "multigammaln": 1154, "multihost": 1406, "multihost_util": [133, 134, 135, 136, 137, 138, 1406], "multinomi": [1044, 1246, 1247, 1433], "multipl": [1353, 1378, 1461, 1483, 1484, 1489, 1492, 1493, 1494, 1495, 1496], "multiple_of": 176, "multipli": [847, 1474], "multivariate_norm": [1045, 1248, 1249, 1433], "must": 1374, "mutabl": [1346, 1356], "my": [1368, 1377, 1440, 1454, 1501], "mypi": 1444, "n": 1469, "name": [1356, 1440, 1447, 1471], "named_cal": 505, "named_scop": 506, "namedshard": [1464, 1471], "namespac": 1448, "nan": [1356, 1377, 1462], "nan_check": 124, "nan_to_num": 848, "nanargmax": 849, "nanargmin": 850, "nancumprod": 851, "nancumsum": 852, "nanmax": 853, "nanmean": 854, "nanmedian": 855, "nanmin": 856, "nanpercentil": 857, "nanprod": 858, "nanquantil": 859, "nanstd": 860, "nansum": 861, "nanvar": 862, "nativ": 1356, "nbinom": [1250, 1251, 1433], "nbyte": 37, "nccl": 1381, "ndarrai": [863, 864], "ndim": [38, 865], "ndimag": [1103, 1433, 1448], "ndtr": 1155, "ndtri": 1156, "ne": 419, "necessari": 1456, "need": [1361, 1443], "neg": [420, 866], "nest": [1350, 1467, 1490], "network": [1340, 1464, 1465, 1473, 1474], "neural": [1340, 1464, 1465, 1473, 1474], "new": [1346, 1366, 1390, 1440, 1443, 1447, 1455, 1480, 1501], "next": [1342, 1349, 1350, 1360, 1490, 1498, 1500], "nextaft": [421, 867], "nightli": [1366, 1384, 1387], "nn": [507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 1426, 1427], "no_trac": 556, "node": [1495, 1506], "non": [1342, 1343, 1449, 1450, 1462, 1463, 1476], "nondiff_argnum": [1342, 1453, 1463], "none": 1506, "nonzero": [39, 868], "norm": [805, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1433], "normal": [526, 1046], "not_equ": 869, "notabl": 1354, "note": [1358, 1366, 1382, 1386, 1449, 1455, 1468, 1477, 1481, 1486, 1490], "notebook": 1366, "noteworthi": 1489, "nov": 1354, "novemb": 1354, "now": [1440, 1443, 1454, 1501], "nsight": [1381, 1496], "num": 1356, "num_program": [177, 1480], "number": [870, 1342, 1462, 1467, 1469, 1475, 1489, 1498], "numer": [1342, 1345, 1350, 1377, 1443, 1454, 1463, 1467], "numpi": [557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1356, 1365, 1377, 1428, 1444, 1448, 1454, 1456, 1460, 1462, 1475, 1498], "numpy_rank_promot": 997, "nvidia": [1381, 1384], "object": [1448, 1497], "object_": 871, "oct": 1354, "octob": [1354, 1478], "odr": 1448, "offload": [1382, 1471], "offset": 1356, "ogrid": 872, "old": 1443, "older": 1384, "omnistag": 1454, "one": [1469, 1474], "one_hot": 540, "ones": [527, 873], "ones_lik": 874, "onli": [1342, 1463], "oob": 1356, "oom": [1380, 1501], "op": [998, 999, 1000, 1001, 1356, 1429, 1479], "open": 1341, "oper": [1359, 1424, 1429, 1443, 1460, 1462, 1470, 1479, 1484, 1489, 1490, 1505], "operand": [1484, 1489], "optim": [1104, 1105, 1342, 1343, 1356, 1396, 1433, 1448, 1454, 1471, 1476, 1503], "optimization_barri": 422, "optimizeresult": 1104, "option": [1356, 1362, 1369, 1443, 1444, 1456, 1496, 1497], "order": [1342, 1363, 1377, 1441, 1442, 1470, 1484], "orient": 1448, "orthogon": [528, 1047], "other": [1342, 1363, 1414, 1426, 1462, 1463, 1480, 1486], "out": [1371, 1457, 1462, 1464], "out_spec": [1445, 1447, 1474], "outer": [806, 875], "output": [1348, 1377, 1442, 1444, 1445, 1447, 1452, 1471, 1474, 1494, 1501], "over": [1385, 1445, 1474], "overhead": [1363, 1443], "overrid": 1444, "overview": [1442, 1446, 1455, 1474], "p": [1441, 1447], "packag": [1388, 1457], "packbit": 876, "pad": [423, 877, 1469], "palla": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1343, 1356, 1407, 1408, 1409, 1410, 1478, 1479, 1480, 1481, 1482, 1484, 1486, 1487, 1488, 1489, 1490, 1491], "pallas_cal": [178, 1480, 1483, 1484], "parallel": [1338, 1343, 1353, 1369, 1381, 1388, 1424, 1464, 1474, 1500, 1503], "paramet": [1471, 1484, 1497, 1503, 1506], "parameter": 1487, "pareto": [1048, 1260, 1261, 1433], "part": [1342, 1348, 1349], "partial": [1304, 1369, 1374, 1444, 1447], "partit": [878, 1356, 1378], "partition": 1356, "pascal": 1093, "pass": [1356, 1479, 1503], "passmanag": 275, "path": 1506, "pattern": [1490, 1494, 1506], "pdb": 1360, "pdf": [1174, 1185, 1192, 1195, 1200, 1207, 1215, 1219, 1226, 1233, 1238, 1242, 1249, 1257, 1261, 1268, 1273, 1277, 1280, 1282], "per": [1342, 1369, 1445, 1484], "percentil": [879, 1356], "perfetto": 1496, "perform": [1339, 1343, 1346, 1363, 1381, 1383, 1487, 1492, 1501, 1503], "perman": 1501, "permiss": 1444, "permut": [1049, 1490], "permute_dim": 880, "persist": [1356, 1495], "pgle": [1356, 1381], "piecewis": 881, "pinv": 807, "pip": [1366, 1384], "pipelin": [1369, 1381, 1474, 1483, 1487, 1490, 1492, 1493], "pitfal": 1495, "pjit": [1361, 1411, 1440, 1445], "pjrt": 1356, "pl": [1483, 1484], "place": [882, 1462, 1489], "placement": [1377, 1471, 1489], "plan": 1444, "platform": [1356, 1371, 1378, 1384], "platform_depend": 424, "plgpu": 1484, "pltpu": 1493, "plu": 1447, "pluggabl": [1341, 1455], "plumb": 1346, "pmap": [1002, 1356, 1361, 1363, 1445], "pmax": 425, "pmean": 426, "pmf": [1168, 1177, 1179, 1221, 1247, 1251, 1264], "pmin": 427, "poch": 1157, "poisson": [1050, 1262, 1263, 1264, 1433], "polar": 1094, "poli": 883, "polici": [1365, 1382, 1416, 1443, 1446, 1468, 1471], "polyadd": 884, "polyd": 885, "polydiv": 886, "polyfit": 887, "polygamma": [428, 1158], "polyint": 888, "polymorph": [1371, 1374, 1415, 1452], "polymul": 889, "polynomi": 1448, "polysub": 890, "polyv": 891, "population_count": 429, "posit": 892, "possibl": [1443, 1446], "pow": [430, 893], "power": 894, "powerhous": 1507, "pp": 1474, "ppermut": [431, 1474, 1490], "ppf": [1169, 1186, 1201, 1227, 1234, 1243, 1258, 1278], "pprint": 1356, "practic": [1382, 1439, 1468], "pre": 1495, "precis": [1356, 1381, 1456, 1462, 1489], "precv": [432, 1381], "predict": [1465, 1473], "prefetch": [1493, 1494], "prepar": [1484, 1501], "presenc": 1374, "preserv": [1445, 1474], "previou": 1385, "primal": 1390, "primit": [260, 265, 1348, 1359, 1390, 1441, 1447, 1480, 1484], "principl": 1444, "print": [84, 1360, 1363], "print_environment_info": 1003, "printopt": 895, "prioriti": 1452, "privat": 1345, "prng": [1356, 1431, 1451, 1455], "prng_kei": 106, "prngkei": 1017, "problem": [1342, 1447, 1449, 1463], "process": [1348, 1356, 1369, 1381, 1461], "process_allgath": 137, "process_count": 1004, "process_index": 1005, "process_indic": 1006, "prod": [40, 896], "product": [1342, 1467], "profil": [1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1339, 1343, 1356, 1367, 1381, 1430, 1496], "program": [1343, 1367, 1451, 1488, 1495, 1496, 1500], "program_id": [179, 1480], "programmat": 1496, "progress": 1455, "project": 1341, "promela": 1356, "promot": [1356, 1456, 1499, 1505], "promote_typ": 897, "properti": [1388, 1456, 1489], "propos": 1458, "protocol": 1452, "proxi": 1356, "psend": [433, 1381], "pseudorandom": [1475, 1498], "pshuffl": 434, "psum": [435, 1447, 1474, 1490], "psum_scatt": [436, 1474, 1490], "pswapax": 437, "ptp": [41, 898], "ptr": 1356, "public": [1388, 1440], "pull": 1357, "pure": [1346, 1462], "pure_callback": [1016, 1376], "purpos": 1444, "put": [899, 1479, 1490], "put_along_axi": 900, "pycapsul": 285, "pytest": 1366, "python": [1342, 1359, 1360, 1365, 1366, 1428, 1443, 1449, 1456, 1463, 1505], "pytorch": [1456, 1465], "pytre": [1342, 1343, 1348, 1377, 1441, 1452, 1460, 1463, 1497, 1506], "pytyp": 1444, "qdwh": 403, "qr": [404, 808, 1095], "quantil": 901, "question": 1377, "quick": [1464, 1495], "quickstart": [1475, 1488], "quo": 1450, "r_": 902, "race": 1490, "rad2deg": 903, "rademach": 1051, "radian": 904, "rag": 1356, "rais": 1356, "randint": [1052, 1356], "random": [276, 277, 278, 279, 280, 281, 282, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1345, 1356, 1420, 1431, 1446, 1448, 1462, 1489, 1498], "random_bcoo": 241, "random_gamma_grad": 438, "rang": 1356, "rank": [1356, 1445, 1474, 1499], "rankdata": 1265, "ravel": [42, 905], "ravel_multi_index": 906, "ravel_pytre": 288, "rayleigh": 1053, "rbg_prng_impl": 277, "rdma": 1490, "read": [1472, 1480], "reader": 1466, "readthedoc": 1366, "real": [43, 439, 907], "realist": [1445, 1451], "reciproc": [440, 908], "recover": 1356, "recurs": [1382, 1440, 1468], "recursionerror": 1440, "reduc": [441, 1297, 1445, 1474, 1490], "reduce_and": 442, "reduce_associ": 1298, "reduce_max": 443, "reduce_min": 444, "reduce_or": 445, "reduce_precis": 446, "reduce_prod": 447, "reduce_sum": 448, "reduce_window": 449, "reduce_xor": 450, "reduct": [1356, 1429, 1487, 1489], "ref": [1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1432, 1480], "refer": [1406, 1414, 1431, 1480, 1482, 1484], "regex": 1356, "regist": 1378, "register_custom_call_target": 1334, "register_dataclass": 1307, "register_ffi_target": 286, "register_ffi_type_id": 287, "register_namedtuple_seri": 252, "register_pytree_nod": 1308, "register_pytree_node_class": 1309, "register_pytree_node_seri": 253, "register_pytree_with_kei": 1310, "register_pytree_with_keys_class": 1311, "register_stat": 1312, "regress": [1350, 1387, 1414, 1501, 1502], "regular": 1490, "regulargridinterpol": 1076, "rel_entr": 1159, "relat": [1408, 1415, 1424], "releas": [1457, 1478], "relu": 541, "relu6": 542, "rem": 451, "remaind": 909, "remat": [1356, 1382, 1443, 1468], "remateri": 1443, "remot": [1490, 1496], "remov": [1356, 1443, 1449], "repeat": [44, 910], "replac": [1440, 1484], "replic": [1369, 1447], "report": 1356, "repositori": 1366, "repres": 1494, "request": [1357, 1484, 1503], "requir": 1501, "resampl": 1216, "reshap": [45, 452, 911, 1489], "reshard": 1369, "residu": 1356, "resiz": [291, 912], "resourc": 1343, "respect": [1350, 1467], "restrict": [1346, 1357, 1489], "result": [1363, 1471, 1474, 1476], "result_typ": [107, 913], "reus": [1356, 1404, 1455], "rev": 453, "reveng": 1479, "revers": [1342, 1371, 1390, 1463, 1467], "revisit": 1487, "reviv": 1447, "rfft": 696, "rfft2": 697, "rfftfreq": 698, "rfftn": 699, "rh": 1469, "right": [1490, 1492], "right_shift": 914, "ring": 1490, "rint": 915, "rng": [1431, 1455], "rng_bit_gener": 454, "rng_uniform": 455, "roadmap": 1444, "robust": 1448, "rocm": [1356, 1366], "roll": 916, "rollaxi": 917, "root": 918, "rot90": 919, "rotat": 1119, "round": [46, 456, 920], "rout": 1490, "rsf2csf": 1096, "rsqrt": 457, "rubric": 1448, "rule": [1342, 1390, 1449, 1463, 1470], "run": [1356, 1366, 1471, 1490], "run_scop": [180, 1484], "runtim": [1356, 1391, 1442, 1444], "s_": 921, "safe": [1455, 1457], "safer": 1356, "same": [1469, 1501], "sampler": 1431, "save": [922, 1468], "save_device_memory_profil": 1011, "saveabl": [1382, 1468], "savez": 923, "scalar": [1456, 1494], "scalar_type_of": 108, "scale_and_transl": 292, "scaled_dot_gener": 543, "scaled_matmul": 544, "scan": [458, 1346, 1356, 1441], "scatter": [459, 1490], "scatter_add": 460, "scatter_appli": 461, "scatter_max": 462, "scatter_min": 463, "scatter_mul": 464, "schedul": 1479, "schur": [405, 1097], "scipi": [1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1433, 1448], "scope": [1374, 1448], "scratch": [1348, 1349], "searchsort": [47, 924], "sec": 1356, "second": 1356, "see": [1445, 1474], "seed": 1356, "seed_with_impl": 278, "segment": 1429, "segment_max": 998, "segment_min": 999, "segment_prod": 1000, "segment_sum": 1001, "select": [465, 925], "select_n": 466, "self": [1377, 1476], "selu": 545, "sem": 1266, "semant": [1449, 1450, 1456, 1488, 1505], "semaphor": [1484, 1490], "semaphore_signal_parallel": 170, "semaphoresign": 155, "sensit": 1349, "sep": 1354, "separ": 1457, "sept": 1354, "septemb": [1354, 1478], "sequenc": 1442, "sequenti": 1498, "sequential_vmap": 74, "serial": [197, 1356, 1371, 1372, 1428], "serialize_execut": [196, 197, 1412], "set": [1068, 1364, 1461, 1462, 1470, 1471, 1476, 1495], "set_max_regist": 171, "set_printopt": 926, "setdiff1d": 927, "setup": 1342, "setxor1d": 928, "sf": [1175, 1187, 1193, 1202, 1208, 1228, 1235, 1244, 1259, 1274], "sgd": 1476, "shape": [48, 929, 1356, 1371, 1374, 1415, 1454, 1462, 1493], "shapedtypestruct": 63, "shard": [49, 1378, 1391, 1424, 1434, 1446, 1461, 1464, 1470, 1471, 1474, 1475, 1500, 1503], "shard_map": [198, 1283, 1378, 1413, 1445, 1474, 1500], "shardi": [1356, 1501], "share": 1356, "sharp": [1363, 1462, 1487], "shift_left": 467, "shift_right_arithmet": 468, "shift_right_log": 469, "shmap": [1356, 1445], "should": [1444, 1445, 1452, 1458], "shutdown": 99, "side": [1442, 1454, 1474, 1492], "sigmoid": 546, "sign": [470, 930, 1456], "signal": [1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1433, 1448], "signbit": 931, "signedinteg": 932, "significantli": 1443, "silu": 547, "simpl": [1340, 1360, 1378, 1445, 1465, 1473, 1502], "simplic": 1444, "simplifi": [1348, 1356, 1443], "sin": [471, 933], "sinc": 934, "singl": [935, 1353, 1357, 1495], "sinh": [472, 936], "size": [50, 937, 1356], "slerp": 1120, "slice": [141, 473, 1494], "slice_in_dim": 474, "slightli": 1454, "slogdet": 809, "slow": [1377, 1445, 1474], "small": 1454, "smap": 1284, "smem": [154, 1484, 1489], "so": [1445, 1474], "socket": 1356, "soft_sign": 548, "softmax": [549, 1160, 1356], "softplu": 550, "softwar": 1487, "solut": [1447, 1449, 1454, 1502], "solv": [810, 1098, 1445, 1447], "solvabl": 1374, "solve_triangular": 1099, "some": [1369, 1377, 1442, 1443], "sort": [51, 475, 938, 1377], "sort_complex": 939, "sort_key_v": 476, "sourc": [1356, 1366, 1384, 1457], "space": [940, 1483, 1484, 1493], "span": 1461, "spars": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 1116, 1117, 1118, 1414, 1433, 1448, 1494], "sparse_plu": 551, "sparse_sigmoid": 552, "sparsifi": [242, 1414], "spatial": [1119, 1120, 1433, 1448], "spec": 1488, "special": [1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1433, 1448, 1483], "specif": [1353, 1445, 1474, 1484, 1493], "specifi": [1366, 1374, 1472], "speedup": 1353, "spenc": 1161, "sph_harm": 1162, "sphinx": 1366, "split": [477, 941, 1054, 1445, 1474], "spmd": 1474, "spsolv": 240, "sqrt": [478, 942], "sqrtm": 1100, "squar": [479, 943], "squareplu": 553, "squeez": [52, 480, 944], "stabil": [1342, 1463], "stack": [945, 1341], "stage": [1348, 1349, 1371, 1435], "stakehold": 1448, "standard": [554, 1348, 1428], "start": [1352, 1445, 1458, 1467, 1474, 1495], "start_serv": 1012, "start_trac": 1013, "stat": [1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1433, 1448], "state": [1471, 1479, 1498, 1502, 1503], "static": [1344, 1377, 1444, 1447, 1459, 1460, 1475], "statu": 1450, "stax": 1397, "std": [53, 946], "step": [1342, 1350, 1360, 1382, 1387, 1456, 1468, 1471, 1490, 1498, 1500, 1503], "steptraceannot": 1007, "stft": 1114, "stop": 1342, "stop_gradi": [481, 1342], "stop_trac": 1014, "store": [181, 1480, 1484], "storeexcept": 266, "straight": 1342, "strategi": [1377, 1502], "strength": [1361, 1362, 1363], "strict": 1505, "strictli": 1444, "stride": 1469, "structur": [1299, 1348, 1359, 1414, 1484], "stuff": 1368, "style": [1348, 1455], "sub": 482, "subclass": [1452, 1464], "subpackag": 1388, "subset": 1480, "subtract": 947, "suit": 1357, "sum": [54, 948, 1447, 1490], "summari": [1359, 1463, 1468, 1471], "support": [1365, 1371, 1374, 1378, 1384, 1452, 1489], "svd": [406, 811, 1101], "svdalgorithm": 394, "svdval": 812, "swap": [182, 1069], "swapax": [55, 949], "swish": 555, "switch": [483, 1440, 1454, 1501], "swizzletransform": 156, "symbol": 1374, "symbolic_args_spec": 254, "symbolic_shap": 255, "symbolicscop": 245, "symmetric_product": 407, "sync": 1366, "sync_global_devic": 138, "synchron": [1484, 1490], "synopsi": 1452, "system": [1381, 1447], "t": [1, 1055, 1267, 1268, 1433, 1445, 1459, 1479], "tabl": 1456, "take": [56, 950, 1342, 1350, 1475, 1484, 1502], "take_along_axi": 951, "tan": [484, 952], "tanh": [485, 953], "target": 1356, "tcgen05": 1484, "techniqu": 1490, "templat": [1480, 1492], "tensor": [1464, 1474, 1503], "tensorboard": 1496, "tensorcor": 1484, "tensordot": [813, 954], "tensorflow": [1373, 1456, 1473], "tensorinv": 814, "tensorsolv": 815, "term": 1379, "terminologi": [1461, 1472], "test": [1357, 1366, 1448], "test_util": [1285, 1286, 1287, 1436], "than": [1377, 1456], "thi": [1368, 1387, 1443, 1445, 1447, 1455, 1479], "think": [1382, 1468, 1475], "thread": 1484, "three": [1451, 1500], "threefri": 1356, "threefry2x32_p": 279, "threefry_2x32": 280, "threefry_prng_impl": 281, "threshold": 1495, "through": 1342, "throw": 1360, "tile": [955, 1445, 1474, 1492], "tilingtransform": 157, "time": [1344, 1356, 1388, 1430, 1454, 1459, 1475], "timeout": 1356, "tip": 1381, "tl": [1342, 1440, 1445, 1454, 1501], "tmem": [1408, 1484], "to_devic": 57, "todens": 243, "toeplitz": 1102, "togeth": [1479, 1490], "toi": [1451, 1454, 1461, 1474], "token": [261, 1442], "tool": 1471, "top": 1474, "top_k": 486, "topic": 1378, "topologi": [1356, 1490], "total": 1353, "toward": 1444, "tp": 1474, "tpu": [1367, 1384, 1409, 1461, 1479, 1480, 1486, 1489, 1490, 1491, 1493], "trace": [58, 816, 956, 1015, 1344, 1348, 1356, 1385, 1430, 1460, 1466, 1475, 1496], "traceannot": 1008, "traceback": 1356, "tracer": [1356, 1377, 1466], "track": [1447, 1474], "tradeoff": 1451, "train": [1465, 1471, 1473, 1503], "transfer": [1356, 1503, 1504], "transfer_guard": 1288, "transform": [270, 1119, 1120, 1342, 1344, 1348, 1351, 1361, 1363, 1414, 1433, 1444, 1449, 1459, 1460, 1470, 1480, 1484, 1503, 1506], "transformation_with_aux": 271, "transport": 1356, "transpos": [59, 487, 957, 1300, 1356, 1447, 1455, 1469, 1484, 1492, 1506], "transposetransform": 158, "transposit": [1390, 1445, 1447, 1474, 1489], "trapezoid": [958, 1075], "tree": [1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1437, 1506], "tree_al": 1313, "tree_broadcast": 1314, "tree_flatten": 1315, "tree_flatten_with_path": 1316, "tree_leav": 1317, "tree_leaves_with_path": 1318, "tree_map": 1319, "tree_map_with_path": 1320, "tree_reduc": 1321, "tree_reduce_associ": 1322, "tree_structur": 1323, "tree_transpos": 1324, "tree_unflatten": 1325, "tree_util": [1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1438, 1506], "treedef_children": 1326, "treedef_is_leaf": 1327, "treedef_tupl": 1328, "tri": 959, "triangular": 1056, "triangular_solv": 408, "trick": 1369, "tridiagon": 409, "tridiagonal_solv": 410, "trigger": 1454, "tril": 960, "tril_indic": 961, "tril_indices_from": 962, "trim_zero": 963, "triton": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 1410, 1480], "triu": 964, "triu_indic": 965, "triu_indices_from": 966, "troubleshoot": 1496, "true": [1443, 1474], "true_divid": 967, "trunc": 968, "truncated_norm": [529, 1057], "truncnorm": [1269, 1270, 1271, 1272, 1273, 1274, 1433], "tupl": [1342, 1350, 1463, 1467], "tutori": [1337, 1462, 1474], "two": [1342, 1467], "type": [1329, 1330, 1357, 1366, 1439, 1440, 1444, 1455, 1456, 1470, 1472, 1480, 1489, 1505], "ufunc": 969, "uint": 970, "uint16": 971, "uint32": 972, "uint64": [973, 1456], "uint8": 974, "unconcaten": [1445, 1474], "undefin": 1456, "under": [1361, 1363], "understand": 1367, "unexpect": 1506, "unflatten": 1301, "unif": 1444, "unifi": 1444, "uniform": [530, 1058, 1275, 1276, 1277, 1278, 1433], "unimpl": 1470, "union1d": 975, "uniqu": 976, "unique_al": 977, "unique_count": 978, "unique_invers": 979, "unique_valu": 980, "unit": 1484, "unmap": 1447, "unnecessari": 1363, "unpackbit": 981, "unravel_index": 982, "unreleas": [1354, 1478], "unsaf": 1356, "unsafe_rbg_prng_impl": 282, "unsign": 1456, "unsignedinteg": 983, "unstabl": 1444, "unstack": 984, "until": [1445, 1474], "untyp": 1349, "unwrap": 985, "up": [1349, 1461, 1470, 1471, 1476, 1485], "updat": [1366, 1453, 1462, 1503], "upgrad": 1443, "us": [1342, 1350, 1353, 1356, 1357, 1363, 1366, 1367, 1369, 1377, 1378, 1381, 1390, 1445, 1454, 1455, 1458, 1463, 1466, 1467, 1470, 1474, 1476, 1480, 1483, 1484, 1501], "usag": [1342, 1353, 1362, 1363, 1366, 1431, 1463, 1495], "user": [1348, 1353, 1374, 1443, 1447, 1448, 1451, 1455], "user_check": 125, "util": [1391, 1406, 1465, 1473], "v": [1442, 1445, 1447, 1448, 1452, 1460, 1462, 1474, 1475], "valid": 1469, "valu": [1342, 1364, 1377, 1391, 1464, 1467, 1468, 1474, 1501, 1505, 1506], "value_and_grad": [244, 1331, 1350, 1467], "vander": 986, "var": [60, 262, 987, 1441], "vari": [1447, 1474], "variabl": [1374, 1441, 1475], "variance_sc": 531, "variat": 1476, "vdot": 988, "vecdot": [817, 989], "vecmat": 990, "vector": [991, 1342, 1348, 1351, 1388, 1467, 1475], "vector_norm": 818, "verbos": 1356, "veri": 1377, "verif": 1387, "version": [1345, 1356, 1365, 1366, 1371, 1450, 1457], "via": [1384, 1444, 1496, 1500, 1503], "view": [61, 1496, 1497], "visibl": 1356, "visualize_array_shard": 85, "visualize_shard": 86, "vjp": [1332, 1342, 1348, 1356, 1449, 1463, 1467], "vma": 1356, "vmap": [1333, 1342, 1348, 1356, 1361, 1378, 1449, 1467, 1475, 1476, 1480], "vonmis": [1279, 1280, 1433], "vq": 1070, "vsplit": 992, "vstack": 993, "wai": [1346, 1357, 1369, 1464, 1474, 1501], "wait": 1484, "wait_load_tmem": 172, "wait_smem_to_gmem": 173, "wald": 1059, "warn": [1356, 1499], "warp": 1483, "we": [1443, 1457, 1459, 1479], "weakli": 1505, "weibull_min": 1060, "welch": 1115, "wgmma": [174, 1484], "wgmma_wait": 175, "wgmmaaccumulatorref": 159, "what": [1345, 1368, 1382, 1390, 1440, 1443, 1448, 1453, 1454, 1455, 1466, 1468, 1484, 1489, 1497, 1501, 1506], "wheel": [1366, 1384], "when": [195, 1344, 1363, 1381, 1390, 1440, 1445, 1454, 1458, 1464, 1501], "where": [994, 1377], "whether": 1447, "which": 1452, "while": 1441, "while_loop": [488, 1359], "why": [1361, 1363, 1368, 1376, 1377, 1440, 1443, 1444, 1445, 1448, 1454, 1457, 1459, 1466, 1479], "wider": 1456, "window": 1366, "with_sharding_constraint": 489, "within": [1366, 1369, 1456], "work": [1342, 1459, 1463, 1470, 1479, 1495, 1502, 1506], "workflow": [1343, 1353], "world": 1488, "wrap_init": 272, "wrap_key_data": 1061, "wrapcauchi": [1281, 1282, 1433], "wrappedfun": 267, "wrapper": 1448, "write": [1340, 1346, 1466, 1476, 1480, 1484, 1489], "x": 1462, "x64": [1356, 1364], "xla": [1356, 1366, 1381, 1390, 1448, 1454, 1460, 1479, 1490, 1507], "xla_bridg": [492, 493, 1425], "xla_client": [1334, 1425], "xlog1pi": 1163, "xlogi": 1164, "xmap": 1445, "xprof": 1496, "y": 1462, "you": [1390, 1443, 1445, 1458], "your": [1353, 1466, 1492], "zero": [532, 995, 1377, 1450], "zeros_lik": 996, "zeros_like_arrai": 490, "zeta": [491, 1165]}})