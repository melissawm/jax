Search.setIndex({"alltitles": {"(p)jit primitive": [[1411, "p-jit-primitive"]], "1. Automatic parallelism via jit": [[1468, "automatic-parallelism-via-jit"]], "1. Taking gradients with jax.grad": [[1320, "taking-gradients-with-jax-grad"]], "1. Tracing a function": [[1436, "tracing-a-function"]], "1D Convolutions": [[1439, "d-convolutions"]], "2. Computing gradients in a linear logistic regression": [[1320, "computing-gradients-in-a-linear-logistic-regression"]], "2. Evaluating a Jaxpr": [[1436, "evaluating-a-jaxpr"]], "2. Explicit sharding": [[1468, "explicit-sharding"]], "3. Differentiating with respect to nested lists, tuples, and dicts": [[1320, "differentiating-with-respect-to-nested-lists-tuples-and-dicts"]], "3. Manual parallelism with shard_map": [[1468, "manual-parallelism-with-shard-map"]], "3. Staging to an untyped IR": [[1319, "staging-to-an-untyped-ir"]], "3D Convolutions": [[1439, "id1"]], "4-way batch data parallelism and 2-way model tensor parallelism": [[1434, "way-batch-data-parallelism-and-2-way-model-tensor-parallelism"]], "4. Evaluating a function and its gradient using jax.value_and_grad": [[1320, "evaluating-a-function-and-its-gradient-using-jax-value-and-grad"]], "5. Checking against numerical differences": [[1320, "checking-against-numerical-differences"]], "8-way batch data parallelism": [[1434, "way-batch-data-parallelism"], [1443, "way-batch-data-parallelism"]], "8-way fully sharded data parallelism (FSDP)": [[1443, "way-fully-sharded-data-parallelism-fsdp"]], "8-way tensor parallelism (TP)": [[1443, "way-tensor-parallelism-tp"]], "A general strategy": [[1469, "a-general-strategy"]], "A modular stack": [[1312, "a-modular-stack"]], "A pluggable backend": [[1312, "a-pluggable-backend"]], "A realistic example": [[1415, "a-realistic-example"]], "A simple example": [[1350, "a-simple-example"]], "A simple example: Counter": [[1469, "a-simple-example-counter"]], "AMD GPU (Linux)": [[1356, "amd-gpu-linux"]], "AOT-compiled functions cannot be transformed": [[1315, "aot-compiled-functions-cannot-be-transformed"]], "API": [[1370, "api"], [1371, "api"], [1372, "api"], [1373, "api"], [1374, "api"], [1376, "api"], [1382, "api"], [1383, "api"], [1384, "api"], [1419, "api"]], "API Reference": [[1402, "api-reference"]], "API Specification": [[1415, "api-specification"], [1443, "api-specification"]], "API compatibility": [[1316, null]], "API policy": [[1387, "api-policy"]], "Ability to rematerialize constants, not just operations with data dependence on arguments": [[1413, "ability-to-rematerialize-constants-not-just-operations-with-data-dependence-on-arguments"]], "About the project": [[1312, null]], "Abstract evaluation rules": [[1360, "abstract-evaluation-rules"]], "Accessing memory": [[1457, "accessing-memory"]], "Activation Offloading": [[1441, "activation-offloading"]], "Activation functions": [[1397, "activation-functions"]], "Adding compiler tokens": [[1412, "adding-compiler-tokens"]], "Adding cond": [[1318, "adding-cond"]], "Adding custom trace events": [[1464, "adding-custom-trace-events"]], "Additional Notes for Building jaxlib from source on Windows": [[1339, "additional-notes-for-building-jaxlib-from-source-on-windows"]], "Additional caching": [[1463, "additional-caching"]], "Additional notes for building a ROCM jaxlib for AMD GPUs": [[1339, "additional-notes-for-building-a-rocm-jaxlib-for-amd-gpus"]], "Advanced": [[1402, "advanced"]], "Advanced RNG configuration": [[1402, "advanced-rng-configuration"]], "Advanced Techniques": [[1458, "advanced-techniques"]], "Advanced automatic differentiation": [[1313, null]], "Advanced compilation": [[1306, null]], "Advanced configuration options": [[1464, "advanced-configuration-options"]], "Advanced debugging": [[1307, null]], "Advanced topics": [[1350, "advanced-topics"]], "Advanced: Recursive jax.checkpoint": [[1354, "advanced-recursive-jax-checkpoint"]], "Advanced: recursive jax.checkpoint": [[1438, "advanced-recursive-jax-checkpoint"]], "Ahead-of-time lowering and compilation": [[1315, null]], "Aliases": [[1379, "aliases"]], "All Configuration Options": [[1328, "all-configuration-options"]], "Allocating the accumulator": [[1452, "allocating-the-accumulator"]], "Alternatives considered": [[1420, "alternatives-considered"]], "Analyzing the performance": [[1455, "analyzing-the-performance"]], "Annotate for intent": [[1414, "annotate-for-intent"]], "Appendix: Example Type Promotion Tables": [[1426, "appendix-example-type-promotion-tables"]], "Appendix: defining and motivating maps with unmapped inputs and outputs": [[1417, "appendix-defining-and-motivating-maps-with-unmapped-inputs-and-outputs"]], "Applying optional parameters to pytrees": [[1465, "applying-optional-parameters-to-pytrees"]], "Argument classes": [[1394, "argument-classes"], [1395, "argument-classes"]], "Array Garbage Collection Guard": [[1328, "jax_array_garbage_collection_guard"]], "Array Layouts": [[1457, "array-layouts"]], "Array Type Design Considerations": [[1414, "array-type-design-considerations"]], "Array constructors": [[1457, "array-constructors"]], "Array creation": [[1444, "array-creation"]], "Array devices and sharding": [[1444, "array-devices-and-sharding"]], "Array layouts": [[1452, "array-layouts"]], "Array layouts and memory reference transforms": [[1452, "array-layouts-and-memory-reference-transforms"]], "Array properties and methods": [[1359, "array-properties-and-methods"]], "Array updates with other operations": [[1432, "array-updates-with-other-operations"]], "Array updates: x.at[idx].set(y)": [[1432, "array-updates-x-at-idx-set-y"]], "Aside: forward-mode automatic differentiation": [[1319, "aside-forward-mode-automatic-differentiation"]], "Async Remote Copy Operation": [[1458, "async-remote-copy-operation"]], "Async ops inside kernels": [[1448, "async-ops-inside-kernels"]], "Asynchronous GMEM-to-SMEM copies": [[1452, "asynchronous-gmem-to-smem-copies"]], "Asynchronous callbacks": [[1336, "asynchronous-callbacks"]], "Asynchronous copies": [[1452, "asynchronous-copies"]], "Asynchronous dispatch": [[1317, null]], "Auto PGLE": [[1353, "auto-pgle"]], "Auto and manual PGLE": [[1353, "auto-and-manual-pgle"]], "Auto-batching predictions": [[1435, "auto-batching-predictions"], [1442, "auto-batching-predictions"]], "Auto-vectorization with jax.vmap()": [[1444, "auto-vectorization-with-jax-vmap"]], "Autobatched with vmap": [[1445, "autobatched-with-vmap"]], "Autobatching for Bayesian inference": [[1445, null]], "Autodidax2, part 1: JAX from scratch, again": [[1319, null]], "Autodidax: JAX core from scratch": [[1318, null]], "Automatic differentiation": [[1314, null], [1320, null], [1359, "automatic-differentiation"]], "Automatic vectorization": [[1321, null], [1321, "id2"]], "Avoid unstable typing mechanisms": [[1414, "avoid-unstable-typing-mechanisms"]], "Awaiting tcgen05 TensorCore instructions": [[1452, "awaiting-tcgen05-tensorcore-instructions"]], "Axis 1: XLA alignment": [[1418, "axis-1-xla-alignment"]], "Axis 2: Array API Alignment": [[1418, "axis-2-array-api-alignment"]], "Axis 3: Existence of Downstream Implementations": [[1418, "axis-3-existence-of-downstream-implementations"]], "Axis 4: Complexity & Robustness of Implementation": [[1418, "axis-4-complexity-robustness-of-implementation"]], "Axis 5: Functional vs. Object-Oriented APIs": [[1418, "axis-5-functional-vs-object-oriented-apis"]], "Axis 6: General \u201cImportance\u201d to JAX Users & Stakeholders": [[1418, "axis-6-general-importance-to-jax-users-stakeholders"]], "BCOO Data Structure": [[1385, "bcoo-data-structure"]], "BCSR Data Structure": [[1385, "bcsr-data-structure"]], "Backend Target": [[1328, "jax_backend_target"]], "Backend code": [[1350, "backend-code"]], "Backends": [[1378, "backends"]], "Background": [[1412, "background"], [1414, "background"], [1418, "background"], [1448, "background"], [1460, "background"]], "Background + Motivation": [[1448, "background-motivation"]], "Barrier": [[1452, "barrier"]], "Barrier Semaphores": [[1458, "barrier-semaphores"]], "Basic N-dimensional convolution": [[1439, "basic-n-dimensional-convolution"]], "Basic one-dimensional convolution": [[1439, "basic-one-dimensional-convolution"]], "Basic usage": [[1402, "basic-usage"]], "Basic usage of jax.custom_jvp and jax.custom_vjp APIs": [[1313, "basic-usage-of-jax-custom-jvp-and-jax-custom-vjp-apis"], [1433, "basic-usage-of-jax-custom-jvp-and-jax-custom-vjp-apis"]], "Batched-coordinate (BCOO) sparse matrices": [[1385, "batched-coordinate-bcoo-sparse-matrices"]], "Batching": [[1360, "batching"]], "Batching with vmap": [[1350, "batching-with-vmap"]], "Bcoo Cusparse Lowering": [[1328, "jax_bcoo_cusparse_lowering"]], "Benchmarking JAX code": [[1323, null]], "Bi-directional Communication": [[1458, "bi-directional-communication"]], "Blackwell (tcgen05)": [[1452, "blackwell-tcgen05"]], "Block Matrix Multiplication": [[1460, "block-matrix-multiplication"]], "Block specs by example": [[1456, "block-specs-by-example"]], "BlockSpec, a.k.a. how to chunk up inputs": [[1453, "blockspec-a-k-a-how-to-chunk-up-inputs"]], "BlockSpecs": [[1455, "blockspecs"]], "BlockSpecs and grid iteration": [[1457, "blockspecs-and-grid-iteration"]], "Blocking on output tokens": [[1412, "blocking-on-output-tokens"]], "Breaking change for pjit after switching to jax.Array for host local inputs": [[1410, "breaking-change-for-pjit-after-switching-to-jax-array-for-host-local-inputs"]], "Broadcasting": [[1457, "broadcasting"]], "Buffer Revisiting": [[1455, "buffer-revisiting"]], "Buffer donation": [[1324, null]], "Building Blocks for Offloading": [[1441, "building-blocks-for-offloading"]], "Building JAX from source": [[1356, "building-jax-from-source"]], "Building and registering an FFI handler": [[1350, "building-and-registering-an-ffi-handler"]], "Building from source": [[1339, null]], "Building jaxlib from source": [[1339, "building-jaxlib-from-source"]], "Building jaxlib from source with a modified XLA repository.": [[1339, "building-jaxlib-from-source-with-a-modified-xla-repository"]], "Building jaxprs with tracing": [[1318, "building-jaxprs-with-tracing"]], "Building on JAX": [[1322, "building-on-jax"], [1325, null]], "Building or installing jaxlib": [[1339, "building-or-installing-jaxlib"]], "C++ interface": [[1350, "c-interface"]], "CPU": [[1356, "cpu"]], "Caching on multiple nodes": [[1463, "caching-on-multiple-nodes"]], "Caching thresholds": [[1463, "caching-thresholds"]], "Calendar versioning": [[1420, "calendar-versioning"]], "Callback overhead": [[1336, "callback-overhead"]], "Callbacks": [[1359, "callbacks"]], "Calling convention versions": [[1343, "calling-convention-versions"], [1343, "export-calling-convention-version"]], "Can this be improved?": [[1358, "can-this-be-improved"]], "Captured Constants Report Frames": [[1328, "jax_captured_constants_report_frames"]], "Captured Constants Warn Bytes": [[1328, "jax_captured_constants_warn_bytes"]], "Caveat for equality comparisons": [[1346, "caveat-for-equality-comparisons"]], "Caveats": [[1432, "caveats"]], "Challenge 1: pytype, mypy and developer friction": [[1414, "challenge-1-pytype-mypy-and-developer-friction"]], "Challenge 2: array duck-typing": [[1414, "challenge-2-array-duck-typing"]], "Challenge 3: transformations and decorators": [[1414, "challenge-3-transformations-and-decorators"]], "Challenge 4: array annotation lack of granularity": [[1414, "challenge-4-array-annotation-lack-of-granularity"]], "Challenge 5: imprecise APIs inherited from NumPy": [[1414, "challenge-5-imprecise-apis-inherited-from-numpy"]], "Change log": [[1326, null]], "Check Proxy Envs": [[1328, "jax_check_proxy_envs"]], "Check Tracer Leaks": [[1328, "jax_check_tracer_leaks"]], "Check Vma": [[1328, "check_vma"]], "Checking against numerical differences": [[1437, "checking-against-numerical-differences"]], "Checkpoint Names": [[1441, "checkpoint-names"]], "Checkpoint Policies": [[1441, "checkpoint-policies"]], "Classes": [[1378, "classes"], [1379, "classes"], [1380, "classes"], [1381, "classes"], [1386, "classes"], [1404, "classes"], [1405, "classes"]], "ClusterBarrier": [[1452, "clusterbarrier"]], "Code generation flags": [[1353, "code-generation-flags"]], "Collecting NVIDIA Nsight Systems profiles when using AutoPGLE": [[1353, "collecting-nvidia-nsight-systems-profiles-when-using-autopgle"]], "Collectives tutorial": [[1443, "collectives-tutorial"]], "Combining Lattices": [[1426, "combining-lattices"]], "Combining transformations": [[1321, "combining-transformations"]], "Common Configuration Options": [[1328, "common-configuration-options"]], "Common XLA flags": [[1475, "common-xla-flags"]], "Common causes of OOM failures": [[1352, "common-causes-of-oom-failures"]], "Common function: jax.tree.map": [[1474, "common-function-jax-tree-map"]], "Common pytree functions": [[1474, "common-pytree-functions"]], "Common pytree gotchas": [[1474, "common-pytree-gotchas"]], "Common pytree patterns": [[1474, "common-pytree-patterns"]], "Communication tips": [[1353, "communication-tips"]], "Comparing the three approaches": [[1468, "comparing-the-three-approaches"]], "Comparison of symbolic dimensions is partially supported": [[1346, "comparison-of-symbolic-dimensions-is-partially-supported"]], "Compatibility guarantees": [[1343, "compatibility-guarantees"]], "Compatibility guarantees for custom calls": [[1343, "compatibility-guarantees-for-custom-calls"]], "Compilation Cache Dir": [[1328, "jax_compilation_cache_dir"]], "Compilation Cache Expect Pgle": [[1328, "jax_compilation_cache_expect_pgle"]], "Compilation Cache Include Metadata In Key": [[1328, "jax_compilation_cache_include_metadata_in_key"]], "Compilation Cache Max Size": [[1328, "jax_compilation_cache_max_size"]], "Compiled prints and breakpoints": [[1336, null]], "Compiler Detailed Logging Min Ops": [[1328, "jax_compiler_detailed_logging_min_ops"]], "Compiler Enable Remat Pass": [[1328, "jax_compiler_enable_remat_pass"]], "Compiler parameters": [[1452, "compiler-parameters"]], "Complex numbers and differentiation": [[1313, "complex-numbers-and-differentiation"], [1437, "complex-numbers-and-differentiation"]], "Composable domain specific libraries with JAX exposed": [[1325, "composable-domain-specific-libraries-with-jax-exposed"]], "Composing VJPs, JVPs, and jax.vmap": [[1313, "composing-vjps-jvps-and-jax-vmap"]], "Composing VJPs, JVPs, and vmap": [[1437, "composing-vjps-jvps-and-vmap"]], "Computation follows data sharding and is automatically parallelized": [[1434, "computation-follows-data-sharding-and-is-automatically-parallelized"]], "Computation placement": [[1457, "computation-placement"]], "Computational speedup on a single core across multiple devices": [[1325, "computational-speedup-on-a-single-core-across-multiple-devices"]], "Computing with dimension variables": [[1346, "computing-with-dimension-variables"]], "Conclusion": [[1448, "conclusion"], [1460, "conclusion"]], "Concrete array shardings can mention Auto mesh axis": [[1440, "concrete-array-shardings-can-mention-auto-mesh-axis"]], "Concurrency": [[1327, null]], "Conda (community-supported)": [[1356, "conda-community-supported"]], "Conda installation": [[1356, "conda-installation"]], "Configuration": [[1359, "configuration"]], "Configuration Options": [[1328, null]], "Configuring XLA in Jax:": [[1475, "configuring-xla-in-jax"]], "Configuring profiler options": [[1464, "configuring-profiler-options"]], "Constant variables (vars)": [[1411, "constant-variables-vars"]], "Constants": [[1386, "constants"]], "Constraining shardings of intermediates in jitted code": [[1434, "constraining-shardings-of-intermediates-in-jitted-code"]], "Contents": [[1413, "contents"], [1419, "contents"], [1421, "contents"], [1424, "contents"]], "Contributing code using pull requests": [[1329, "contributing-code-using-pull-requests"]], "Contributing to JAX": [[1329, null]], "Contribution guides": [[1330, null]], "Control autodiff\u2019s saved values with jax.checkpoint (aka jax.remat)": [[1438, null]], "Control flow": [[1457, "control-flow"]], "Control flow and logical operators with JIT": [[1331, null]], "Control flow operators": [[1395, "control-flow-operators"]], "Controlling how each input is split (unconcatenated) and tiled with in_specs": [[1415, "controlling-how-each-input-is-split-unconcatenated-and-tiled-with-in-specs"], [1443, "controlling-how-each-input-is-split-unconcatenated-and-tiled-with-in-specs"]], "Controlling how each output assembled by concatenation, block transposition, and untiling using out_specs": [[1415, "controlling-how-each-output-assembled-by-concatenation-block-transposition-and-untiling-using-out-specs"], [1443, "controlling-how-each-output-assembled-by-concatenation-block-transposition-and-untiling-using-out-specs"]], "Controlling test behavior": [[1339, "controlling-test-behavior"]], "Copies with downstream ops": [[1448, "copies-with-downstream-ops"]], "Copying and Serialization": [[1399, "copying-and-serialization"]], "Correctness of shape polymorphism": [[1346, "correctness-of-shape-polymorphism"]], "Cpu Collectives Implementation": [[1328, "jax_cpu_collectives_implementation"]], "Cpu Enable Async Dispatch": [[1328, "jax_cpu_enable_async_dispatch"]], "Cpu Enable Gloo Collectives": [[1328, "jax_cpu_enable_gloo_collectives"]], "Creating jax.Array": [[1410, "creating-jax-array"]], "Creating new notebooks": [[1339, "creating-new-notebooks"]], "Cross-platform and multi-platform export": [[1343, "cross-platform-and-multi-platform-export"]], "Cuda Visible Devices": [[1328, "jax_cuda_visible_devices"]], "Custom JVP/VJP rules for JAX-transformable functions": [[1419, null]], "Custom JVPs with jax.custom_jvp": [[1433, "custom-jvps-with-jax-custom-jvp"]], "Custom PyTrees and Initialization": [[1465, "custom-pytrees-and-initialization"]], "Custom Pytrees": [[1314, null]], "Custom VJPs with jax.custom_vjp": [[1433, "custom-vjps-with-jax-custom-vjp"]], "Custom Vjp Disable Shape Check": [[1328, "jax_custom_vjp_disable_shape_check"]], "Custom derivative rules": [[1433, null]], "Custom derivative rules for JAX-transformable Python functions": [[1313, "custom-derivative-rules-for-jax-transformable-python-functions"]], "Custom gradient operators": [[1395, "custom-gradient-operators"]], "Custom hermetic Python examples": [[1339, "custom-hermetic-python-examples"]], "Custom inverse Jaxpr interpreter": [[1436, "custom-inverse-jaxpr-interpreter"]], "Custom policies for offload": [[1354, "custom-policies-for-offload"]], "Custom policies for what\u2019s saveable": [[1354, "custom-policies-for-what-s-saveable"], [1438, "custom-policies-for-what-s-saveable"]], "Custom pytree nodes": [[1474, "custom-pytree-nodes"]], "Custom pytrees and initialization with unexpected values": [[1332, null]], "Customization": [[1359, "customization"]], "Customizing PRNG implementations": [[1425, "customizing-prng-implementations"]], "Customizing hermetic Python (Advanced Usage)": [[1339, "customizing-hermetic-python-advanced-usage"]], "DMA Semaphores": [[1458, "dma-semaphores"]], "Data + model parallelism": [[1341, "data-model-parallelism"]], "Data Placement with device_put": [[1441, "data-placement-with-device-put"]], "Data loading with PyTorch": [[1435, "data-loading-with-pytorch"]], "Data loading with tensorflow/datasets": [[1442, "data-loading-with-tensorflow-datasets"]], "Data parallelism": [[1341, "data-parallelism"]], "Debug Infs": [[1328, "jax_debug_infs"]], "Debug Key Reuse": [[1328, "jax_debug_key_reuse"]], "Debug Log Modules": [[1328, "jax_debug_log_modules"]], "Debug Nans": [[1328, "jax_debug_nans"]], "Debug information and analyses, when available": [[1315, "debug-information-and-analyses-when-available"]], "Debugging": [[1343, "debugging"], [1346, "debugging"]], "Debugging NaNs": [[1432, "debugging-nans"]], "Debugging memory leaks": [[1340, "debugging-memory-leaks"]], "Debugging runtime values": [[1333, "debugging-runtime-values"]], "Debugging with jax.debug.print and other debugging callbacks": [[1336, "debugging-with-jax-debug-print-and-other-debugging-callbacks"]], "Deep dives": [[1314, null]], "Default Device": [[1328, "jax_default_device"]], "Default Matmul Precision": [[1328, "jax_default_matmul_precision"]], "Default Prng Impl": [[1328, "jax_default_prng_impl"]], "Default dtypes and the X64 flag": [[1337, null]], "Default setting: 32-bits everywhere": [[1337, "default-setting-32-bits-everywhere"]], "Defensive copies": [[1448, "defensive-copies"]], "Define the ELBO and its gradient": [[1445, "define-the-elbo-and-its-gradient"]], "Defining new JAX primitives": [[1360, "defining-new-jax-primitives"]], "Dependence on JAX internal APIs that changed": [[1424, "dependence-on-jax-internal-apis-that-changed"]], "Deriving a Double-Buffered Pipeline": [[1455, "deriving-a-double-buffered-pipeline"]], "Design": [[1421, "design"], [1450, null]], "Design Notes": [[1454, null]], "Design and background": [[1402, "design-and-background"]], "Design and internals": [[1330, null]], "Design challenges": [[1422, "design-challenges"]], "Design of Type Promotion Semantics for JAX": [[1426, null]], "Design of typed PRNG keys": [[1425, "design-of-typed-prng-keys"]], "Detecting new-style typed keys": [[1425, "detecting-new-style-typed-keys"]], "Developer documentation": [[1343, "developer-documentation"]], "Developer information": [[1465, "developer-information"]], "Developer notes": [[1330, null]], "Device Output Sharding": [[1441, "device-output-sharding"]], "Device memory profiling": [[1401, "device-memory-profiling"]], "Device-polymorphic export": [[1343, "device-polymorphic-export"]], "Different kinds of JAX values": [[1470, "different-kinds-of-jax-values"]], "Differentiating with respect to nested lists, tuples, and dicts": [[1437, "differentiating-with-respect-to-nested-lists-tuples-and-dicts"]], "Differentiation": [[1350, "differentiation"]], "Dimension Numbers define dimensional layout for conv_general_dilated": [[1439, "dimension-numbers-define-dimensional-layout-for-conv-general-dilated"]], "Dimension variables must be solvable from the input shapes": [[1346, "dimension-variables-must-be-solvable-from-the-input-shapes"]], "Direct usage": [[1325, "direct-usage"]], "Disable Jit": [[1328, "jax_disable_jit"]], "Disable Most Optimizations": [[1328, "jax_disable_most_optimizations"]], "Disable Vmap Shmap Error": [[1328, "jax_disable_vmap_shmap_error"]], "Disallow Mesh Context Manager": [[1328, "jax_disallow_mesh_context_manager"]], "Display the results": [[1445, "display-the-results"]], "Distributed Computing in Pallas for TPUs": [[1458, null]], "Distributed Debug": [[1328, "jax_distributed_debug"]], "Distributed arrays and automatic parallelization": [[1434, null]], "Distributed data loading": [[1341, null]], "Doctests": [[1339, "doctests"]], "Documentation building on readthedocs.io": [[1339, "documentation-building-on-readthedocs-io"]], "Double-buffering": [[1458, "double-buffering"]], "Dump Ir To": [[1328, "jax_dump_ir_to"]], "Dynamic Block Indexing with Scalar Prefetch": [[1462, "dynamic-block-indexing-with-scalar-prefetch"]], "Dynamic Shapes": [[1328, "jax_dynamic_shapes"]], "Eager Constant Folding": [[1328, "eager_constant_folding"]], "Ecosystem": [[1355, "ecosystem"]], "Editing ipynb": [[1339, "editing-ipynb"]], "Editing md": [[1339, "editing-md"]], "Effects of Python operator dispatch": [[1473, "effects-of-python-operator-dispatch"]], "Efficient transposition of replication-inducing collectives": [[1417, null]], "Elementwise operations": [[1457, "elementwise-operations"]], "Emulation mode": [[1449, "emulation-mode"]], "Enable Checks": [[1328, "jax_enable_checks"]], "Enable Compilation Cache": [[1328, "jax_enable_compilation_cache"]], "Enable Custom Prng": [[1328, "jax_enable_custom_prng"]], "Enable Custom Vjp By Custom Transpose": [[1328, "jax_enable_custom_vjp_by_custom_transpose"]], "Enable Empty Arrays": [[1328, "jax_enable_empty_arrays"]], "Enable Pgle": [[1328, "jax_enable_pgle"]], "Enable X64": [[1328, "jax_enable_x64"]], "Enabling new JAX features by simplifying internals": [[1413, "enabling-new-jax-features-by-simplifying-internals"]], "Enforcing a differentiation convention": [[1433, "enforcing-a-differentiation-convention"]], "Enforcing ordered effects": [[1412, "enforcing-ordered-effects"]], "Ensuring forward and backward compatibility": [[1343, "ensuring-forward-and-backward-compatibility"]], "Enter Python Scalars": [[1426, "enter-python-scalars"]], "Err toward simplicity": [[1414, "err-toward-simplicity"]], "Error Checking Behavior Divide": [[1328, "jax_error_checking_behavior_divide"]], "Error Checking Behavior Nan": [[1328, "jax_error_checking_behavior_nan"]], "Error Checking Behavior Oob": [[1328, "jax_error_checking_behavior_oob"]], "Error message": [[1424, "error-message"], [1424, "id2"]], "Errors": [[1342, null]], "Errors and debugging": [[1314, null]], "Errors in presence of shape polymorphism": [[1346, "errors-in-presence-of-shape-polymorphism"]], "Evaluate a function and its gradient using value_and_grad": [[1437, "evaluate-a-function-and-its-gradient-using-value-and-grad"]], "Evaluation": [[1414, "evaluation"]], "Evaluation Rubric": [[1418, "evaluation-rubric"]], "Evaluation interpreter": [[1318, "evaluation-interpreter"]], "Evaluation: what\u2019s in scope?": [[1418, "evaluation-whats-in-scope"]], "Examining cache misses": [[1463, "examining-cache-misses"]], "Example": [[1424, "example"], [1424, "id1"]], "Example - Elementwise Kernel revisited": [[1455, "example-elementwise-kernel-revisited"]], "Example 1: all-gather on one side": [[1443, "example-1-all-gather-on-one-side"]], "Example 2: psum_scatter the result": [[1443, "example-2-psum-scatter-the-result"]], "Example applications": [[1314, null]], "Example of jax.tree.map with ML model parameters": [[1474, "example-of-jax-tree-map-with-ml-model-parameters"]], "Example problems": [[1313, "example-problems"], [1433, "example-problems"]], "Example(s)": [[1335, "example-s"]], "Example: All-Reduce Sum (lax.psum)": [[1458, "example-all-reduce-sum-lax-psum"]], "Example: All-gather (lax.all_gather)": [[1458, "example-all-gather-lax-all-gather"]], "Example: Bi-directional Reduce-Scatter (lax.psum_scatter)": [[1458, "example-bi-directional-reduce-scatter-lax-psum-scatter"]], "Example: Block Dynamic Slice with Scalar Prefetch": [[1462, "example-block-dynamic-slice-with-scalar-prefetch"]], "Example: Dense @ Dense Matrix Multiplication with a Block-Sparse Output Mask": [[1462, "example-dense-dense-matrix-multiplication-with-a-block-sparse-output-mask"]], "Example: Enforcing a differentiation convention": [[1313, "example-enforcing-a-differentiation-convention"]], "Example: Gradient clipping": [[1313, "example-gradient-clipping"]], "Example: Implicit function differentiation of iterative implementations": [[1313, "example-implicit-function-differentiation-of-iterative-implementations"]], "Example: Numerical stability": [[1313, "example-numerical-stability"]], "Example: Python debugging": [[1313, "example-python-debugging"]], "Example: Reduce-Scatter with large HBM blocks": [[1458, "example-reduce-scatter-with-large-hbm-blocks"]], "Example: Right Permute (lax.ppermute)": [[1458, "example-right-permute-lax-ppermute"]], "Example: Sparse @ Dense Matrix Multiplication": [[1462, "example-sparse-dense-matrix-multiplication"]], "Example: Writing a simple neural network": [[1311, null]], "Example: pure_callback with custom_jvp": [[1348, "example-pure-callback-with-custom-jvp"]], "Example: sparse logistic regression": [[1385, "example-sparse-logistic-regression"]], "Examples": [[1335, "examples"], [1336, "examples"], [1341, "examples"]], "Examples: neural networks": [[1434, "examples-neural-networks"]], "Exec Time Optimization Effort": [[1328, "jax_exec_time_optimization_effort"]], "Executing Pallas kernels with pallas_call": [[1449, "executing-pallas-kernels-with-pallas-call"]], "Exercises for the reader": [[1436, "exercises-for-the-reader"]], "Experimental APIs": [[1369, "experimental-apis"]], "Experimental Key Reuse Checking": [[1375, "experimental-key-reuse-checking"]], "Experimental Modules": [[1369, "experimental-modules"]], "Experimental Unsafe Xla Runtime Errors": [[1328, "jax_experimental_unsafe_xla_runtime_errors"]], "Experimental and example libraries": [[1316, "experimental-and-example-libraries"]], "Experimental features": [[1352, "experimental-features"]], "Explain Cache Misses": [[1328, "jax_explain_cache_misses"]], "Explanation": [[1423, "explanation"], [1424, "explanation"], [1424, "id3"]], "Explicit arrival (cross-thread synchronization)": [[1452, "explicit-arrival-cross-thread-synchronization"]], "Explicit key paths": [[1474, "explicit-key-paths"]], "Explicit random state": [[1466, "explicit-random-state"]], "Explicit sharding (a.k.a. \u201csharding in types\u201d)": [[1440, null]], "Explicitly private APIs": [[1316, "explicitly-private-apis"]], "Exploring debug.callback": [[1348, "exploring-debug-callback"]], "Exploring io_callback": [[1348, "exploring-io-callback"]], "Exploring pure_callback": [[1348, "exploring-pure-callback"]], "Export Calling Convention Version": [[1328, "jax_export_calling_convention_version"]], "Export Ignore Forward Compatibility": [[1328, "jax_export_ignore_forward_compatibility"]], "Exporting and serialization": [[1344, null]], "Exporting and serializing staged-out computations": [[1343, null]], "Extended dtypes": [[1425, "extended-dtypes"]], "Extending JAX with new Pallas primitives": [[1449, "extending-jax-with-new-pallas-primitives"]], "Extending pytrees": [[1465, "extending-pytrees"]], "Extensible JAX internals": [[1347, null]], "Extension guides": [[1347, null]], "External Callbacks": [[1314, null]], "External callbacks": [[1348, null]], "FFI": [[1314, null]], "FFI calls on a GPU": [[1350, "ffi-calls-on-a-gpu"]], "FROM_GDA and jax.Array": [[1410, "from-gda-and-jax-array"]], "FSDP + TP, with shard_map at the top level": [[1443, "fsdp-tp-with-shard-map-at-the-top-level"]], "Failure modes": [[1458, "failure-modes"]], "Fin.": [[1432, "fin"]], "Final Notes": [[1458, "final-notes"]], "Final verification": [[1358, "final-verification"]], "Finding Help": [[1322, "finding-help"]], "Flags": [[1353, "flags"]], "Flavors of callback": [[1348, "flavors-of-callback"]], "Following NumPy\u2019s lead": [[1414, "following-numpy-s-lead"]], "Foreign function interface (FFI)": [[1350, null]], "Forward differentiation": [[1360, "forward-differentiation"]], "Forward-mode autodiff with jvp": [[1318, "forward-mode-autodiff-with-jvp"]], "Frequently asked questions (FAQ)": [[1349, null]], "Frontend code": [[1350, "frontend-code"]], "Full GitHub test suite": [[1329, "full-github-test-suite"]], "Full replication": [[1341, "full-replication"]], "Full solution: statically track device-varying vs device-invariant intermediates, plus new primitives": [[1417, "full-solution-statically-track-device-varying-vs-device-invariant-intermediates-plus-new-primitives"]], "Functional error checks with jax.experimental.checkify": [[1333, "functional-error-checks-with-jax-experimental-checkify"]], "Functionalizing checks": [[1334, "functionalizing-checks"]], "Functions": [[1378, "functions"], [1379, "functions"], [1380, "functions"], [1381, "functions"], [1386, "functions"]], "Functions related to shape polymorphism": [[1386, "functions-related-to-shape-polymorphism"]], "Fundamentals of jax.checkpoint": [[1438, "fundamentals-of-jax-checkpoint"]], "Fused activation function": [[1460, "fused-activation-function"]], "Fused right-hand-side transpose": [[1460, "fused-right-hand-side-transpose"]], "GDA\u2019s API name changes": [[1410, "gdas-api-name-changes"]], "GPU Example": [[1431, "gpu-example"]], "GPU Examples": [[1449, "gpu-examples"]], "GPU XLA flags": [[1475, "gpu-xla-flags"]], "GPU memory allocation": [[1352, null]], "GPU performance tips": [[1353, null]], "GPU profiling": [[1464, "gpu-profiling"]], "General approach for loading a jax.Array": [[1341, "general-approach-for-loading-a-jax-array"]], "General convolutions": [[1439, "general-convolutions"]], "General options": [[1464, "general-options"]], "Generalized convolutions in JAX": [[1439, null]], "Generate a fake binary classification dataset": [[1445, "generate-a-fake-binary-classification-dataset"]], "Generating random numbers": [[1434, "generating-random-numbers"]], "Getting Started with JAX": [[1322, null]], "Glossary of terms": [[1351, null]], "Goals": [[1419, "goals"]], "Goals of JAX Type Promotion": [[1426, "goals-of-jax-type-promotion"]], "Google Cloud": [[1463, "google-cloud"]], "Google Cloud TPU": [[1356, "google-cloud-tpu"]], "Google contributor license agreement": [[1329, "google-contributor-license-agreement"]], "Gradient checkpointing with jax.checkpoint (jax.remat)": [[1354, null]], "Gradient clipping": [[1433, "gradient-clipping"]], "Gradient computation": [[1325, "gradient-computation"]], "Gradients": [[1437, "gradients"]], "Gradients contain NaN where using where": [[1349, "gradients-contain-nan-where-using-where"]], "Grid": [[1455, "grid"]], "Grid semantics": [[1456, "grid-semantics"]], "Grids and BlockSpecs": [[1453, null]], "Grids by example": [[1456, "grids-by-example"]], "Guides": [[1344, null], [1454, null], [1459, null]], "Guiding Principles": [[1414, "guiding-principles"]], "Handling  non-differentiable arguments": [[1313, "handling-non-differentiable-arguments"], [1433, "handling-non-differentiable-arguments"]], "Handling of None by jax.tree_util": [[1474, "handling-of-none-by-jax-tree-util"]], "Handling of host local inputs to pjit like batch, etc": [[1410, "handling-of-host-local-inputs-to-pjit-like-batch-etc"]], "Handling pytrees": [[1411, "handling-pytrees"]], "Hello world in Pallas": [[1456, "hello-world-in-pallas"]], "Hessian-vector products using both forward- and reverse-mode": [[1313, "hessian-vector-products-using-both-forward-and-reverse-mode"], [1437, "hessian-vector-products-using-both-forward-and-reverse-mode"]], "Hessian-vector products with grad-of-grad": [[1437, "hessian-vector-products-with-grad-of-grad"]], "Hessian-vector products with jax.grad-of-jax.grad": [[1313, "hessian-vector-products-with-jax-grad-of-jax-grad"]], "High Dynamic Range Gumbel": [[1328, "jax_high_dynamic_range_gumbel"]], "Higher-order JAX primitives": [[1411, "higher-order-jax-primitives"]], "Higher-order derivatives": [[1313, "higher-order-derivatives"]], "Higher-order optimization": [[1313, "higher-order-optimization"]], "Hlo Source File Canonicalization Regex": [[1328, "jax_hlo_source_file_canonicalization_regex"]], "Hopper (wgmma)": [[1452, "hopper-wgmma"]], "Host Output Sharding": [[1441, "host-output-sharding"]], "Hourly investigation": [[1358, "hourly-investigation"]], "How JAX transformations work": [[1429, "how-jax-transformations-work"]], "How are jax and jaxlib versioned?": [[1427, "how-are-jax-and-jaxlib-versioned"]], "How can I convert a JAX Tracer to a NumPy array?": [[1349, "how-can-i-convert-a-jax-tracer-to-a-numpy-array"]], "How can I disable jax.Array for now?": [[1410, "how-can-i-disable-jax-array-for-now"]], "How can I disable omnistaging for now?": [[1424, "how-can-i-disable-omnistaging-for-now"]], "How can I disable the change, and go back to the old behavior for now?": [[1413, "how-can-i-disable-the-change-and-go-back-to-the-old-behavior-for-now"]], "How can I safely make changes to the API of jaxlib?": [[1427, "how-can-i-safely-make-changes-to-the-api-of-jaxlib"]], "How do I fix bugs exposed by omnistaging?": [[1424, "how-do-i-fix-bugs-exposed-by-omnistaging"]], "How do I know if jax.Array broke my code?": [[1410, "how-do-i-know-if-jax-array-broke-my-code"]], "How do I know if omnistaging broke my code?": [[1424, "how-do-i-know-if-omnistaging-broke-my-code"]], "How do we implement decomposed Pallas async operations (on TPU)?": [[1448, "how-do-we-implement-decomposed-pallas-async-operations-on-tpu"]], "How do we make changes across the jax and jaxlib boundary between releases?": [[1427, "how-do-we-make-changes-across-the-jax-and-jaxlib-boundary-between-releases"]], "How is the source to jaxlib laid out?": [[1427, "how-is-the-source-to-jaxlib-laid-out"]], "How it works": [[1463, "how-it-works"]], "How it\u2019s made: Two foundational autodiff functions": [[1313, "how-it-s-made-two-foundational-autodiff-functions"]], "How it\u2019s made: two foundational autodiff functions": [[1437, "how-it-s-made-two-foundational-autodiff-functions"]], "How this system solves the inefficient transpose examples": [[1417, "how-this-system-solves-the-inefficient-transpose-examples"]], "How to Use Configuration Options": [[1328, "how-to-use-configuration-options"]], "How to enable jax.Array?": [[1410, "how-to-enable-jax-array"]], "How to handle uint64?": [[1426, "how-to-handle-uint64"]], "How to implement the solution": [[1417, "how-to-implement-the-solution"]], "How to make the API convenient for users (and backward compatible)": [[1417, "how-to-make-the-api-convenient-for-users-and-backward-compatible"]], "How to start a JEP": [[1428, "how-to-start-a-jep"]], "How to use jit with methods?": [[1349, "how-to-use-jit-with-methods"]], "Hyperparameters": [[1435, "hyperparameters"], [1442, "hyperparameters"]], "Hypothesis tests": [[1339, "hypothesis-tests"]], "Image manipulation functions": [[1394, "image-manipulation-functions"]], "Immediate benefits of Pallas as a front-end": [[1449, "immediate-benefits-of-pallas-as-a-front-end"]], "Implementation": [[1422, "implementation"]], "Implementation Plan": [[1414, "implementation-plan"]], "Implementation notes": [[1419, "implementation-notes"]], "Implicit function differentiation of iterative implementations": [[1433, "implicit-function-differentiation-of-iterative-implementations"]], "Important trick about data parallelism": [[1341, "important-trick-about-data-parallelism"]], "In-order execution & using multiple hardware units": [[1452, "in-order-execution-using-multiple-hardware-units"]], "Inadvertent transposing of key buffers": [[1425, "inadvertent-transposing-of-key-buffers"]], "Include Debug Info In Dumps": [[1328, "jax_include_debug_info_in_dumps"]], "Include Full Tracebacks In Locations": [[1328, "jax_include_full_tracebacks_in_locations"]], "Incorporating JAX code into your, or your users, workflows": [[1325, "incorporating-jax-code-into-your-or-your-users-workflows"]], "Initializers": [[1398, "initializers"]], "Inline Mosaic GPU": [[1452, "inline-mosaic-gpu"]], "Innocuous numerical changes": [[1413, "innocuous-numerical-changes"]], "Inputs should be permissively-typed": [[1414, "inputs-should-be-permissively-typed"]], "Installation": [[1340, "installation"], [1356, null], [1444, "installation"], [1464, "installation"]], "Installing jax": [[1339, "installing-jax"]], "Installing jaxlib with pip": [[1339, "installing-jaxlib-with-pip"]], "Installing older jaxlib wheels": [[1356, "installing-older-jaxlib-wheels"]], "Intel GPU": [[1356, "intel-gpu"]], "Interaction with XLA": [[1458, "interaction-with-xla"]], "Interactive inspection with jax.debug": [[1333, "interactive-inspection-with-jax-debug"]], "Interactive inspection with jax.debug.breakpoint()": [[1336, "interactive-inspection-with-jax-debug-breakpoint"]], "Internal pytree handling": [[1465, "internal-pytree-handling"]], "Interoperation with TensorFlow": [[1345, null]], "Intro and a quick example": [[1434, "intro-and-a-quick-example"]], "Introduction": [[1449, "introduction"], [1475, "introduction"]], "Introduction to JAX primitives": [[1360, "introduction-to-jax-primitives"]], "Introduction to Parallel Programming with JAX": [[1357, null]], "Introduction to debugging": [[1333, null]], "Introduction to multi-controller JAX (aka multi-process/multi-host JAX)": [[1431, null]], "Introduction to parallel programming": [[1468, null]], "Investigating a regression": [[1358, null]], "Is JAX faster than NumPy?": [[1349, "is-jax-faster-than-numpy"]], "Issuing the operation": [[1452, "issuing-the-operation"]], "Iterative development": [[1416, "iterative-development"]], "JAX 0.6.0 (April 16, 2025)": [[1326, "jax-0-6-0-april-16-2025"]], "JAX 0.6.1 (May 21, 2025)": [[1326, "jax-0-6-1-may-21-2025"]], "JAX 101": [[1308, "jax-101"]], "JAX 201": [[1308, "jax-201"]], "JAX 301": [[1308, "jax-301"]], "JAX API layering: NumPy, lax & XLA": [[1430, "jax-api-layering-numpy-lax-xla"]], "JAX Array": [[1399, "jax-array"]], "JAX Enhancement Proposals (JEPs)": [[1428, null]], "JAX Internals: primitives": [[1360, null]], "JAX Memories and Host Offloading": [[1441, null]], "JAX PRNG Design": [[1421, null]], "JAX Type Promotion: jax.lax": [[1426, "jax-type-promotion-jax-lax"]], "JAX Type Promotion: jax.numpy": [[1426, "jax-type-promotion-jax-numpy"]], "JAX Typing Best Practices": [[1409, "jax-typing-best-practices"]], "JAX Versioning": [[1316, "jax-versioning"]], "JAX arrays (jax.Array)": [[1444, "jax-arrays-jax-array"]], "JAX core machinery": [[1318, "jax-core-machinery"]], "JAX debugging flags": [[1335, null]], "JAX extend": [[1316, "jax-extend"]], "JAX internals: The jaxpr language": [[1411, null]], "JAX nightly installation": [[1356, "jax-nightly-installation"]], "JAX pull request checklist": [[1329, "jax-pull-request-checklist"]], "JAX totally hidden from users": [[1325, "jax-totally-hidden-from-users"]], "JAX transformations and higher-order functions": [[1440, "jax-transformations-and-higher-order-functions"]], "JAX tutorials draft": [[1308, null]], "JAX type annotation roadmap": [[1414, "jax-type-annotation-roadmap"]], "JAX vs. NumPy": [[1444, "jax-vs-numpy"]], "JAX: High performance array computing": [[1355, null]], "JEP 18137: Scope of JAX NumPy & SciPy Wrappers": [[1418, null]], "JEP 25516: Effort-based versioning for JAX": [[1420, null]], "JEP 28661: Supporting the __jax_array__ protocol": [[1422, null]], "JEP 9263: Typed keys & pluggable RNGs": [[1425, null]], "JIT and caching": [[1429, "jit-and-caching"]], "JIT compiling a function": [[1429, "jit-compiling-a-function"]], "JIT of batching": [[1360, "jit-of-batching"]], "JIT of forward differentiation": [[1360, "jit-of-forward-differentiation"]], "JIT of reverse differentiation": [[1360, "jit-of-reverse-differentiation"]], "JVP Interpreter": [[1319, "jvp-interpreter"]], "JVPs in JAX code": [[1313, "jvps-in-jax-code"], [1437, "jvps-in-jax-code"]], "JVPs in math": [[1313, "jvps-in-math"], [1437, "jvps-in-math"]], "Jacobian-Matrix and Matrix-Jacobian products": [[1313, "jacobian-matrix-and-matrix-jacobian-products"], [1437, "jacobian-matrix-and-matrix-jacobian-products"]], "Jacobian-Vector products (JVPs, a.k.a. forward-mode autodiff)": [[1313, "jacobian-vector-products-jvps-a-k-a-forward-mode-autodiff"]], "Jacobian-Vector products (JVPs, aka forward-mode autodiff)": [[1437, "jacobian-vector-products-jvps-aka-forward-mode-autodiff"]], "Jacobians and Hessians using jacfwd and jacrev": [[1437, "jacobians-and-hessians-using-jacfwd-and-jacrev"]], "Jacobians and Hessians using jax.jacfwd and jax.jacrev": [[1313, "jacobians-and-hessians-using-jax-jacfwd-and-jax-jacrev"]], "Jax and Jaxlib versioning": [[1427, null]], "Jax2Tf Associative Scan Reductions": [[1328, "jax2tf_associative_scan_reductions"]], "Jax2Tf Default Native Serialization": [[1328, "jax2tf_default_native_serialization"]], "Jaxpr data structures": [[1318, "jaxpr-data-structures"]], "Jaxpr tracer": [[1436, "jaxpr-tracer"]], "Jaxprs": [[1430, "jaxprs"]], "Just-in-time compilation": [[1429, null]], "Just-in-time compilation (jit)": [[1359, "just-in-time-compilation-jit"]], "Just-in-time compilation with jax.jit": [[1444, "just-in-time-compilation-with-jax-jit"]], "Kernel": [[1455, "kernel"]], "Key Creation & Manipulation": [[1402, "key-creation-manipulation"]], "Key arithmetic": [[1425, "key-arithmetic"]], "Key buffer indexing": [[1425, "key-buffer-indexing"]], "Key concept: Data sharding": [[1468, "key-concept-data-sharding"]], "Key concepts": [[1430, null]], "Key features of EffVer": [[1420, "key-features-of-effver"]], "Key reuse": [[1425, "key-reuse"]], "Kubernetes Example": [[1431, "kubernetes-example"]], "Lack of sequential equivalence": [[1466, "lack-of-sequential-equivalence"]], "Legacy APIs": [[1408, "legacy-apis"]], "Legacy Prng Key": [[1328, "jax_legacy_prng_key"]], "Legacy internal APIs": [[1316, "legacy-internal-apis"]], "Let\u2019s think step by step": [[1354, "let-s-think-step-by-step"], [1438, "let-s-think-step-by-step"]], "Level 1 Extensibility: polymorphic inputs": [[1422, "level-1-extensibility-polymorphic-inputs"]], "Level 1: Annotations as documentation": [[1414, "level-1-annotations-as-documentation"]], "Level 2 extensibility: polymorphic outputs": [[1422, "level-2-extensibility-polymorphic-outputs"]], "Level 2: Annotations for intelligent autocomplete": [[1414, "level-2-annotations-for-intelligent-autocomplete"]], "Level 3 extensibility: subclassing Array": [[1422, "level-3-extensibility-subclassing-array"]], "Level 3: Annotations for static type-checking": [[1414, "level-3-annotations-for-static-type-checking"]], "Levels of array extensibility": [[1422, "levels-of-array-extensibility"]], "Libraries and extensions": [[1347, null]], "Libraries built on JAX": [[1312, "libraries-built-on-jax"]], "Lifetimes": [[1448, "lifetimes"]], "Limitation of Parameter Offloading": [[1441, "limitation-of-parameter-offloading"]], "Limitations": [[1334, "limitations"], [1335, "limitations"], [1335, "id3"], [1336, "limitations"], [1336, "id3"]], "Linear algebra operators (jax.lax.linalg)": [[1395, "module-jax.lax.linalg"]], "Linting": [[1339, "linting"]], "Linting and type-checking": [[1329, "linting-and-type-checking"]], "List of Functions": [[1393, "list-of-functions"], [1406, "list-of-functions"], [1407, "list-of-functions"], [1408, "list-of-functions"]], "List of Members": [[1409, "list-of-members"]], "List of XLA compiler flags": [[1475, null]], "List of policies": [[1354, "list-of-policies"]], "Log Checkpoint Residuals": [[1328, "jax_log_checkpoint_residuals"]], "Log Compiles": [[1328, "jax_log_compiles"]], "Logging Level": [[1328, "jax_logging_level"]], "Logging cache activity": [[1463, "logging-cache-activity"]], "Logical operators": [[1331, "logical-operators"]], "Loop aliasing": [[1448, "loop-aliasing"]], "Lowering Pallas": [[1449, "lowering-pallas"]], "Lowering Pallas to Mosaic for TPU": [[1449, "lowering-pallas-to-mosaic-for-tpu"]], "Lowering Pallas to Triton for GPU": [[1449, "lowering-pallas-to-triton-for-gpu"]], "MMA (TensorCore)": [[1452, "mma-tensorcore"]], "Mac GPU": [[1356, "mac-gpu"]], "Main idea: context-sensitive interpretation": [[1319, "main-idea-context-sensitive-interpretation"]], "Main problem descriptions": [[1419, "main-problem-descriptions"]], "Making process-spanning arrays from external data": [[1431, "making-process-spanning-arrays-from-external-data"]], "Managing hermetic Python": [[1339, "managing-hermetic-python"]], "Managing runtime tokens": [[1412, "managing-runtime-tokens"]], "Manual PGLE": [[1353, "manual-pgle"]], "Manual capture": [[1464, "manual-capture"]], "Manual capture via TensorBoard": [[1464, "manual-capture-via-tensorboard"]], "Manual parallelism with shard_map": [[1443, null]], "Manual vectorization": [[1321, "manual-vectorization"]], "Manually batched": [[1445, "manually-batched"]], "Marking arguments as static": [[1429, "marking-arguments-as-static"]], "Matmul precision": [[1353, "matmul-precision"]], "Matrix Multiplication": [[1460, null]], "Matrix multiplication": [[1457, "matrix-multiplication"]], "Matrix multiplication performance": [[1460, "matrix-multiplication-performance"]], "Matrix multiplies": [[1443, "matrix-multiplies"]], "Megacore": [[1458, "megacore"]], "Memory Fitting Effort": [[1328, "jax_memory_fitting_effort"]], "Memory Fitting Level": [[1328, "jax_memory_fitting_level"]], "Memory Hierarchies": [[1455, "memory-hierarchies"]], "Memory reference transforms": [[1452, "memory-reference-transforms"]], "Memory space of A and B operands": [[1452, "memory-space-of-a-and-b-operands"]], "Memory spaces": [[1452, "memory-spaces"]], "Meshes, shardings, and computations can span processes and hosts": [[1431, "meshes-shardings-and-computations-can-span-processes-and-hosts"]], "Migration guide from jax.experimental.export": [[1343, "migration-guide-from-jax-experimental-export"]], "Miscellaneous": [[1359, "miscellaneous"]], "Mistaking pytree nodes for leaves": [[1474, "mistaking-pytree-nodes-for-leaves"]], "Mixed Promotion: Float and Complex": [[1426, "mixed-promotion-float-and-complex"]], "Mixed Promotion: Integer and Floating": [[1426, "mixed-promotion-integer-and-floating"]], "Mixed Promotion: Signed & Unsigned Integers": [[1426, "mixed-promotion-signed-unsigned-integers"]], "Mock Gpu Topology": [[1328, "jax_mock_gpu_topology"]], "Mock Num Gpu Processes": [[1328, "mock_num_gpu_processes"]], "Model parallelism across processes": [[1341, "model-parallelism-across-processes"]], "Model parallelism within a process": [[1341, "model-parallelism-within-a-process"]], "Modeling workflows": [[1314, null]], "Module calling convention": [[1343, "module-calling-convention"]], "Modules": [[1387, "modules"]], "More advanced autodiff": [[1437, "more-advanced-autodiff"]], "More control with jax.debug.callback": [[1336, "more-control-with-jax-debug-callback"]], "More examples of jax.debug.print": [[1336, "more-examples-of-jax-debug-print"]], "More features and details": [[1313, "more-features-and-details"], [1433, "more-features-and-details"]], "More flexible front end": [[1449, "more-flexible-front-end"]], "More realistic example user programs": [[1421, "more-realistic-example-user-programs"]], "Mosaic Allow Hlo": [[1328, "jax_mosaic_allow_hlo"]], "Mosaic GPU backend guide": [[1454, null]], "Motivation": [[1412, "motivation"], [1415, "motivation"], [1417, "motivation"], [1425, "motivation"]], "Multi-Process": [[1353, "multi-process"]], "Multicore TPU configurations": [[1457, "multicore-tpu-configurations"]], "Multihost Utils API Reference": [[1377, "multihost-utils-api-reference"]], "Multiple TensorBoard installs": [[1464, "multiple-tensorboard-installs"]], "Mutable Array Checks": [[1328, "jax_mutable_array_checks"]], "NCCL flags": [[1353, "nccl-flags"]], "NVIDIA GPU": [[1356, "nvidia-gpu"]], "NVIDIA GPU Docker containers": [[1356, "nvidia-gpu-docker-containers"]], "NamedSharding and Memory Kinds": [[1441, "namedsharding-and-memory-kinds"]], "Nested Remote and Local DMA Pipelines": [[1458, "nested-remote-and-local-dma-pipelines"]], "Neural networks": [[1443, "neural-networks"]], "New public type named jax.Array": [[1410, "new-public-type-named-jax-array"]], "Next Steps": [[1458, "next-steps"], [1466, "next-steps"]], "Next steps": [[1313, "next-steps"], [1320, "next-steps"], [1333, "next-steps"], [1468, "next-steps"]], "Nightly investigation": [[1358, "nightly-investigation"]], "No Tracing": [[1328, "jax_no_tracing"]], "No compatibility policy": [[1416, "no-compatibility-policy"]], "Non-batched": [[1445, "non-batched"]], "Non-goals": [[1419, "non-goals"]], "Non-semantic versioning (status quo)": [[1420, "non-semantic-versioning-status-quo"]], "Notable bug fixes": [[1326, "notable-bug-fixes"]], "Notebooks within the Sphinx build": [[1339, "notebooks-within-the-sphinx-build"]], "Notes": [[1446, null]], "Notes for JAX library authors": [[1425, "notes-for-jax-library-authors"]], "Noteworthy properties and restrictions": [[1457, "noteworthy-properties-and-restrictions"]], "Nsight": [[1464, "nsight"]], "Num Cpu Devices": [[1328, "jax_num_cpu_devices"]], "NumPy APIs": [[1418, "numpy-apis"]], "NumPy Type Promotion": [[1426, "numpy-type-promotion"]], "Numerical stability": [[1433, "numerical-stability"]], "Numerics and randomness": [[1316, "numerics-and-randomness"]], "Numpy Dtype Promotion": [[1328, "jax_numpy_dtype_promotion"]], "Numpy Rank Promotion": [[1328, "jax_numpy_rank_promotion"]], "Omnistaging": [[1424, null]], "On-the-fly (\u201cfinal style\u201d) and staged (\u201cinitial style\u201d) processing": [[1318, "on-the-fly-final-style-and-staged-initial-style-processing"]], "Open development": [[1312, "open-development"]], "Operators": [[1395, "operators"]], "Optimization Level": [[1328, "jax_optimization_level"]], "Optimize the ELBO using SGD": [[1445, "optimize-the-elbo-using-sgd"]], "Option 0: Leave integer/floating mixed precision undefined": [[1426, "option-0-leave-integer-floating-mixed-precision-undefined"]], "Option 1: Avoiding All Precision Loss": [[1426, "option-1-avoiding-all-precision-loss"]], "Option 1: Load the global data in each process": [[1341, "option-1-load-the-global-data-in-each-process"]], "Option 1: Partial unification": [[1414, "option-1-partial-unification"]], "Option 2: Avoid most wider-than-necessary promotions": [[1426, "option-2-avoid-most-wider-than-necessary-promotions"]], "Option 2: Full unification via overrides": [[1414, "option-2-full-unification-via-overrides"]], "Option 2: Use a per-device data pipeline": [[1341, "option-2-use-a-per-device-data-pipeline"]], "Option 3: Avoid all wider-than-necessary promotions": [[1426, "option-3-avoid-all-wider-than-necessary-promotions"]], "Option 3: Full unification via class hierarchy": [[1414, "option-3-full-unification-via-class-hierarchy"]], "Option 3: Use a consolidated per-process data pipeline": [[1341, "option-3-use-a-consolidated-per-process-data-pipeline"]], "Option 4: Load data in some convenient way, reshard inside computation": [[1341, "option-4-load-data-in-some-convenient-way-reshard-inside-computation"]], "Option 4: Partial unification via class hierarchy": [[1414, "option-4-partial-unification-via-class-hierarchy"]], "Ordering of printed results": [[1336, "ordering-of-printed-results"]], "Other": [[1454, null]], "Other Sparse Data Structures": [[1385, "other-sparse-data-structures"]], "Other functions": [[1397, "other-functions"]], "Other transformations": [[1449, "other-transformations"]], "Output Sharding Controls": [[1441, "output-sharding-controls"]], "Outputs should be strictly-typed": [[1414, "outputs-should-be-strictly-typed"]], "Overview": [[1412, "overview"], [1425, "overview"], [1443, "overview"]], "PRNG dtypes": [[1425, "prng-dtypes"]], "PRNG keys": [[1402, "prng-keys"]], "Pallas": [[1314, null]], "Pallas Async Operations": [[1448, null]], "Pallas Call": [[1455, "pallas-call"]], "Pallas Changelog": [[1447, null]], "Pallas Design": [[1449, null]], "Pallas Design Notes": [[1450, null]], "Pallas Dump Promela To": [[1328, "jax_pallas_dump_promela_to"]], "Pallas Enable Debug Checks": [[1328, "jax_pallas_enable_debug_checks"]], "Pallas Pipelining API": [[1455, "pallas-pipelining-api"]], "Pallas Quickstart": [[1456, null]], "Pallas TPU": [[1459, null]], "Pallas Use Mosaic Gpu": [[1328, "jax_pallas_use_mosaic_gpu"]], "Pallas Verbose Errors": [[1328, "jax_pallas_verbose_errors"]], "Pallas programming model": [[1456, "pallas-programming-model"]], "Pallas: Extending JAX for kernels": [[1449, "pallas-extending-jax-for-kernels"]], "Pallas: a JAX kernel language": [[1454, null]], "Pallas:Mosaic GPU": [[1451, null]], "Parallel computation": [[1309, null], [1314, null]], "Parallel operators": [[1395, "parallel-operators"]], "Parallelization (pmap)": [[1359, "parallelization-pmap"]], "Parameter Initialization with Host Offloading": [[1441, "parameter-initialization-with-host-offloading"]], "Parameter Offloading": [[1441, "parameter-offloading"]], "Parameter Placement for Computation": [[1441, "parameter-placement-for-computation"]], "Parameterizing a Kernel": [[1455, "parameterizing-a-kernel"]], "Part 1: Transformations as interpreters: standard evaluation, jvp, and vmap": [[1318, "part-1-transformations-as-interpreters-standard-evaluation-jvp-and-vmap"]], "Part 2: Jaxprs": [[1318, "part-2-jaxprs"]], "Part 3: jit, simplified": [[1318, "part-3-jit-simplified"]], "Part 4: linearize and vjp (and grad!)": [[1318, "part-4-linearize-and-vjp-and-grad"]], "Part 5: the control flow primitives cond": [[1318, "part-5-the-control-flow-primitives-cond"]], "Partial replication": [[1341, "partial-replication"]], "Partial solution \u201cP-sum\u201d: build the ability to express a psum into out_specs": [[1417, "partial-solution-p-sum-build-the-ability-to-express-a-psum-into-out-specs"]], "Passing futures across loop boundaries": [[1448, "passing-futures-across-loop-boundaries"]], "Per-example gradients": [[1313, "per-example-gradients"]], "Performance benchmarking and profiling": [[1314, null]], "Performance impacts": [[1336, "performance-impacts"]], "Performance of pipelined kernels": [[1460, "performance-of-pipelined-kernels"]], "Performance optimizations": [[1314, null]], "Persistent Cache Enable Xla Caches": [[1328, "jax_persistent_cache_enable_xla_caches"]], "Persistent Cache Min Compile Time Secs": [[1328, "jax_persistent_cache_min_compile_time_secs"]], "Persistent Cache Min Entry Size Bytes": [[1328, "jax_persistent_cache_min_entry_size_bytes"]], "Persistent compilation cache": [[1463, null]], "Pgle Aggregation Percentile": [[1328, "jax_pgle_aggregation_percentile"]], "Pgle Profiling Runs": [[1328, "jax_pgle_profiling_runs"]], "Pipeline Parallelism on GPU": [[1353, "pipeline-parallelism-on-gpu"]], "Pipelining Basics": [[1455, "pipelining-basics"]], "Pitfalls": [[1463, "pitfalls"]], "Pjrt Client Create Options": [[1328, "jax_pjrt_client_create_options"]], "Placing operands in SMEM": [[1457, "placing-operands-in-smem"]], "Platform Name": [[1328, "jax_platform_name"]], "Platforms": [[1328, "jax_platforms"]], "Pmap No Rank Reduction": [[1328, "jax_pmap_no_rank_reduction"]], "Pmap Shmap Merge": [[1328, "jax_pmap_shmap_merge"]], "Possible module overview": [[1416, "possible-module-overview"]], "Pprint Use Color": [[1328, "jax_pprint_use_color"]], "Practical notes": [[1354, "practical-notes"], [1438, "practical-notes"]], "Pre-compiling multi-node programs on single node": [[1463, "pre-compiling-multi-node-programs-on-single-node"]], "Precision control": [[1457, "precision-control"]], "Preparing the A and B operands": [[1452, "preparing-the-a-and-b-operands"]], "Primal evaluation rules": [[1360, "primal-evaluation-rules"]], "Printing in other transformations": [[1336, "printing-in-other-transformations"]], "Printing under jax.grad": [[1336, "printing-under-jax-grad"]], "Printing under jax.pmap": [[1336, "printing-under-jax-pmap"]], "Priority of __jax_array__ vs. PyTree flattening": [[1422, "priority-of-jax-array-vs-pytree-flattening"]], "Problem: efficient transpose of psum or all_gather depends on whether cotangents are invariant across devices": [[1417, "problem-efficient-transpose-of-psum-or-all-gather-depends-on-whether-cotangents-are-invariant-across-devices"]], "Profiling and performance": [[1310, null]], "Profiling computation": [[1464, null]], "Profiling device memory": [[1340, null]], "Profiling on a remote machine": [[1464, "profiling-on-a-remote-machine"]], "Programmatic capture": [[1464, "programmatic-capture"]], "Progress": [[1425, "progress"]], "Properties of a Type Promotion Lattice": [[1426, "properties-of-a-type-promotion-lattice"]], "Pseudorandom numbers": [[1444, "pseudorandom-numbers"], [1466, null]], "Public API: jax package": [[1359, null]], "Purpose of type annotations": [[1414, "purpose-of-type-annotations"]], "Putting it all together": [[1448, "putting-it-all-together"], [1458, "putting-it-all-together"]], "PyTorch Type Promotion": [[1426, "pytorch-type-promotion"]], "Python Array API standard": [[1399, "python-array-api-standard"]], "Python and NumPy version support policy": [[1338, null]], "Python control flow + autodiff": [[1331, "python-control-flow-autodiff"]], "Python debugging": [[1433, "python-debugging"]], "Pytrees": [[1430, "pytrees"], [1465, null]], "Pytrees and JAX functions": [[1465, "pytrees-and-jax-functions"]], "Pytrees and JAX transformations": [[1474, "pytrees-and-jax-transformations"]], "Pytrees and flattening user functions\u2019 inputs and outputs": [[1318, "pytrees-and-flattening-user-functions-inputs-and-outputs"]], "Quick start": [[1463, "quick-start"]], "Quickstart: How to think in JAX": [[1444, null]], "Raise Persistent Cache Errors": [[1328, "jax_raise_persistent_cache_errors"]], "Random Number Generation": [[1457, "random-number-generation"]], "Random Samplers": [[1402, "random-samplers"]], "Random Seed Offset": [[1328, "jax_random_seed_offset"]], "Random numbers in JAX": [[1466, "random-numbers-in-jax"]], "Random numbers in NumPy": [[1466, "random-numbers-in-numpy"]], "Rank promotion warning": [[1467, null]], "Rank-reducing vs rank-preserving maps": [[1443, "rank-reducing-vs-rank-preserving-maps"]], "Rank-reducing vs rank-preserving maps over array axes": [[1415, "rank-reducing-vs-rank-preserving-maps-over-array-axes"]], "Read more": [[1333, null]], "Reading from/writing into Refs": [[1449, "reading-from-writing-into-refs"]], "RecursionError: Recursively calling jit": [[1410, "recursionerror-recursively-calling-jit"]], "Reductions": [[1457, "reductions"]], "Reductions and accumulation": [[1455, "reductions-and-accumulation"]], "Reference documentation": [[1451, null]], "Reference types": [[1449, "reference-types"]], "Regular Semaphores": [[1458, "regular-semaphores"]], "Released with JAX 0.4.30 (June 18, 2024)": [[1447, "released-with-jax-0-4-30-june-18-2024"]], "Released with jax 0.4.31 (July 29, 2024)": [[1447, "released-with-jax-0-4-31-july-29-2024"]], "Released with jax 0.4.32 (September 11, 2024)": [[1447, "released-with-jax-0-4-32-september-11-2024"]], "Released with jax 0.4.33 (September 16, 2024)": [[1447, "released-with-jax-0-4-33-september-16-2024"]], "Released with jax 0.4.34 (October 4, 2024)": [[1447, "released-with-jax-0-4-34-october-4-2024"]], "Released with jax 0.4.35 (October 22, 2024)": [[1447, "released-with-jax-0-4-35-october-22-2024"]], "Released with jax 0.4.36 (December 6, 2024)": [[1447, "released-with-jax-0-4-36-december-6-2024"]], "Released with jax 0.4.37": [[1447, "released-with-jax-0-4-37"]], "Released with jax 0.5.0": [[1447, "released-with-jax-0-5-0"]], "Released with jax 0.6.1": [[1447, "released-with-jax-0-6-1"]], "Remote Direct Memory Access (RDMA) Model": [[1458, "remote-direct-memory-access-rdma-model"]], "Remote profiling": [[1464, "remote-profiling"]], "Remove Custom Partitioning Ptr From Cache Key": [[1328, "jax_remove_custom_partitioning_ptr_from_cache_key"]], "Replication": [[1341, "replication"]], "Requesting/allocating memory in specific memory spaces": [[1452, "requesting-allocating-memory-in-specific-memory-spaces"]], "Reshapes": [[1457, "reshapes"]], "Resources and Advanced Guides": [[1314, null]], "Restricted test suite": [[1329, "restricted-test-suite"]], "Revenge of the State": [[1448, "revenge-of-the-state"]], "Reverse differentiation": [[1360, "reverse-differentiation"]], "Ring Communication Pattern": [[1458, "ring-communication-pattern"]], "Rocm Visible Devices": [[1328, "jax_rocm_visible_devices"]], "Routing": [[1458, "routing"]], "Run-ahead and Race Conditions": [[1458, "run-ahead-and-race-conditions"]], "Running the tests": [[1339, "running-the-tests"]], "Runtime instance checks": [[1414, "runtime-instance-checks"]], "Runtime tokens vs. compiler tokens": [[1412, "runtime-tokens-vs-compiler-tokens"]], "Runtime value debugging utilities": [[1362, "runtime-value-debugging-utilities"]], "SAME padding, 2,2 stride, no dilation": [[1439, "same-padding-2-2-stride-no-dilation"]], "SAME padding, no stride, no dilation": [[1439, "same-padding-no-stride-no-dilation"]], "SPMD pipeline parallelism (PP)": [[1443, "spmd-pipeline-parallelism-pp"]], "Safe PRNG key use": [[1425, "safe-prng-key-use"]], "Scalar Prefetch and Block-Sparse Computation": [[1462, null]], "Scheduling": [[1448, "scheduling"]], "SciPy APIs": [[1418, "scipy-apis"]], "Segment reduction operators": [[1400, "segment-reduction-operators"]], "Self-contained variational inference example": [[1445, "self-contained-variational-inference-example"]], "Semantic versioning": [[1420, "semantic-versioning"]], "Semaphore": [[1452, "semaphore"]], "Sequencing side-effects in JAX": [[1412, null]], "Set up the (batched) log-joint function": [[1445, "set-up-the-batched-log-joint-function"]], "Setting cache directory": [[1463, "setting-cache-directory"]], "Setting up an explicit mesh": [[1440, "setting-up-an-explicit-mesh"]], "Setting up multiple JAX processes": [[1431, "setting-up-multiple-jax-processes"]], "Setup": [[1313, "setup"]], "Shape assertion errors": [[1346, "shape-assertion-errors"]], "Shape polymorphic export": [[1343, "shape-polymorphic-export"]], "Shape polymorphism": [[1346, null]], "Sharding": [[1350, "sharding"]], "Sharding basics, and the NamedSharding subclass": [[1434, "sharding-basics-and-the-namedsharding-subclass"]], "Sharding debugging utilities": [[1362, "sharding-debugging-utilities"]], "Sharding describes how array values are laid out in memory across devices": [[1434, "sharding-describes-how-array-values-are-laid-out-in-memory-across-devices"]], "Sharding rules and operations with ambiguous sharding": [[1440, "sharding-rules-and-operations-with-ambiguous-sharding"]], "Sharding-related operators": [[1395, "sharding-related-operators"]], "Share Binary Between Hosts": [[1328, "jax_share_binary_between_hosts"]], "Share Binary Between Hosts Timeout Ms": [[1328, "jax_share_binary_between_hosts_timeout_ms"]], "Sharp bits": [[1336, "sharp-bits"], [1336, "id1"], [1434, "sharp-bits"]], "Sharp edges": [[1455, "sharp-edges"]], "Side-effects": [[1424, "side-effects"]], "Significantly less Python overhead in some cases": [[1413, "significantly-less-python-overhead-in-some-cases"]], "Simple worked example: Linear Regression": [[1469, "simple-worked-example-linear-regression"]], "Single and multi computer speedup using parallelization": [[1325, "single-and-multi-computer-speedup-using-parallelization"]], "Single-change commits and pull requests": [[1329, "single-change-commits-and-pull-requests"]], "Slightly less toy example": [[1424, "slightly-less-toy-example"]], "Slow down, start with the basics!": [[1415, "slow-down-start-with-the-basics"], [1443, "slow-down-start-with-the-basics"]], "Small numerical differences based on XLA optimizations": [[1424, "small-numerical-differences-based-on-xla-optimizations"]], "So, let\u2019s see a shard_map!": [[1443, "so-let-s-see-a-shard-map"]], "So, let\u2019s see shmap!": [[1415, "so-let-s-see-shmap"]], "Softmax Custom Jvp": [[1328, "jax_softmax_custom_jvp"]], "Software Pipelining": [[1455, null]], "Solution": [[1424, "solution"], [1424, "id4"]], "Solution idea": [[1419, "solution-idea"]], "Solutions": [[1417, "solutions"]], "Some more details": [[1412, "some-more-details"]], "Sparse API Reference": [[1385, "sparse-api-reference"]], "Sparse Access Patterns on Dense Data": [[1462, "sparse-access-patterns-on-dense-data"]], "Sparse Kernels: Representing Sparse Data": [[1462, "sparse-kernels-representing-sparse-data"]], "Sparsify transform": [[1385, "sparsify-transform"]], "Specifying Python dependencies": [[1339, "specifying-python-dependencies"]], "Specifying Python version": [[1339, "specifying-python-version"]], "Specifying dependencies on local wheels": [[1339, "specifying-dependencies-on-local-wheels"]], "Specifying dependencies on nightly wheels": [[1339, "specifying-dependencies-on-nightly-wheels"]], "Starting with grad": [[1437, "starting-with-grad"]], "Stateful computations": [[1469, null]], "Static type annotations": [[1414, "static-type-annotations"]], "Static vs traced operations": [[1430, "static-vs-traced-operations"]], "Stepping Back: Tables and Lattices": [[1426, "stepping-back-tables-and-lattices"]], "Steps": [[1358, "steps"]], "Stopping gradients": [[1313, "stopping-gradients"]], "Straight-through estimator using stop_gradient": [[1313, "straight-through-estimator-using-stop-gradient"]], "Strategy 1: JIT-compiled helper function": [[1349, "strategy-1-jit-compiled-helper-function"]], "Strategy 2: Marking self as static": [[1349, "strategy-2-marking-self-as-static"]], "Strategy 3: Making CustomClass a PyTree": [[1349, "strategy-3-making-customclass-a-pytree"]], "Strengths": [[1334, "strengths"], [1335, "strengths"], [1335, "id2"], [1336, "strengths"], [1336, "id2"]], "Strengths and limitations of jax.debug.breakpoint()": [[1336, "strengths-and-limitations-of-jax-debug-breakpoint"]], "Strengths and limitations of jax.debug.print": [[1336, "strengths-and-limitations-of-jax-debug-print"]], "Strengths and limitations of jax.experimental.checkify": [[1334, "strengths-and-limitations-of-jax-experimental-checkify"]], "Strengths and limitations of jax_debug_nans": [[1335, "strengths-and-limitations-of-jax-debug-nans"]], "Strengths and limitations of jax_disable_jit": [[1335, "strengths-and-limitations-of-jax-disable-jit"]], "Strict dtype promotion": [[1473, "strict-dtype-promotion"]], "Structured control flow primitives": [[1331, "structured-control-flow-primitives"]], "Subpackages": [[1359, "subpackages"]], "Summary": [[1331, "summary"], [1433, "summary"], [1438, "summary"]], "Summary of Activation Offloading": [[1441, "summary-of-activation-offloading"]], "Support for reverse-mode AD": [[1343, "support-for-reverse-mode-ad"]], "Supported data types": [[1457, "supported-data-types"]], "Supported operations": [[1457, "supported-operations"]], "Supported platforms": [[1356, "supported-platforms"]], "Supporting multiple platforms": [[1350, "supporting-multiple-platforms"]], "Symbolic dimension scopes": [[1346, "symbolic-dimension-scopes"]], "Synchronization structures and primitives": [[1452, "synchronization-structures-and-primitives"]], "Synchronization: Regular and Barrier Semaphores": [[1458, "synchronization-regular-and-barrier-semaphores"]], "Syncing notebooks": [[1339, "syncing-notebooks"]], "Synopsis": [[1422, "synopsis"], [1422, "id1"]], "TL;DR": [[1410, "tl-dr"]], "TL;DR example (with a more detailed explanation to follow)": [[1415, "tl-dr-example-with-a-more-detailed-explanation-to-follow"]], "TL;DR: Custom JVPs with jax.custom_jvp()": [[1313, "tl-dr-custom-jvps-with-jax-custom-jvp"]], "TL;DR: Custom VJPs with jax.custom_vjp": [[1313, "tl-dr-custom-vjps-with-jax-custom-vjp"]], "TPU Example": [[1431, "tpu-example"]], "TPU Memory Spaces": [[1461, "tpu-memory-spaces"]], "TPU Pipelining": [[1461, null]], "TPU Topologies": [[1458, "tpu-topologies"]], "TPU XLA flags": [[1475, "tpu-xla-flags"]], "TPU and its memory spaces": [[1461, "tpu-and-its-memory-spaces"]], "TPU backend guide": [[1454, null]], "TPU-specific Pipelining Features": [[1461, "tpu-specific-pipelining-features"]], "TPUs in Megacore configuration": [[1461, "tpus-in-megacore-configuration"]], "Taking advantage of the L2 cache": [[1452, "taking-advantage-of-the-l2-cache"]], "Taking derivatives with jax.grad": [[1444, "taking-derivatives-with-jax-grad"]], "Taking gradients (part 2)": [[1313, "taking-gradients-part-2"]], "Taking it further": [[1469, "taking-it-further"]], "Templated matmul": [[1449, "templated-matmul"]], "Templating the matrix multiplication": [[1460, "templating-the-matrix-multiplication"]], "Tensorflow Type Promotion": [[1426, "tensorflow-type-promotion"]], "Terminology": [[1431, "terminology"]], "The Autodiff Cookbook": [[1437, null]], "The Python flexibility problem": [[1419, "the-python-flexibility-problem"]], "The X64 flag: enabling 64-bit values": [[1337, "the-x64-flag-enabling-64-bit-values"]], "The checkify transformation": [[1334, null]], "The concrete=True option is removed.": [[1413, "the-concrete-true-option-is-removed"]], "The implementation of jacfwd and jacrev": [[1437, "the-implementation-of-jacfwd-and-jacrev"]], "The implementation of jax.jacfwd and jax.jacrev": [[1313, "the-implementation-of-jax-jacfwd-and-jax-jacrev"]], "The solution: explicit state": [[1469, "the-solution-explicit-state"]], "The vmap-removes-custom-jvp semantics problem": [[1419, "the-vmap-removes-custom-jvp-semantics-problem"]], "The \u201celement\u201d indexing mode": [[1453, "the-element-indexing-mode"]], "Three programming models and toy example programs": [[1421, "three-programming-models-and-toy-example-programs"]], "Threefry Gpu Kernel Lowering": [[1328, "jax_threefry_gpu_kernel_lowering"]], "Threefry Partitionable": [[1328, "jax_threefry_partitionable"]], "Throwing Python errors with JAX\u2019s debug flags": [[1333, "throwing-python-errors-with-jax-s-debug-flags"]], "Tiling and Pipelining": [[1460, "tiling-and-pipelining"]], "Tools for Host Offloading": [[1441, "tools-for-host-offloading"]], "Toy example": [[1424, "toy-example"], [1431, "toy-example"]], "Toy examples": [[1443, "toy-examples"]], "Traceback Filtering": [[1328, "jax_traceback_filtering"]], "Traceback In Locations Limit": [[1328, "jax_traceback_in_locations_limit"]], "Tracer Error Num Traceback Frames": [[1328, "jax_tracer_error_num_traceback_frames"]], "Tracing": [[1430, "tracing"], [1470, null]], "Tracing and time profiling": [[1401, "tracing-and-time-profiling"]], "Tracing with static arguments": [[1315, "tracing-with-static-arguments"]], "Tracking device invariance in avals (a.k.a. avals-with-names, revived)": [[1417, "tracking-device-invariance-in-avals-a-k-a-avals-with-names-revived"]], "Tracking how values vary over manual mesh axes, and check_vma=True": [[1443, "tracking-how-values-vary-over-manual-mesh-axes-and-check-vma-true"]], "Tradeoffs and alternatives": [[1421, "tradeoffs-and-alternatives"]], "Training a simple neural network, with PyTorch data loading": [[1435, null]], "Training a simple neural network, with tensorflow/datasets data loading": [[1442, null]], "Training loop": [[1435, "training-loop"], [1442, "training-loop"]], "Transfer Guard": [[1328, "jax_transfer_guard"]], "Transfer Guard Device To Device": [[1328, "jax_transfer_guard_device_to_device"]], "Transfer Guard Device To Host": [[1328, "jax_transfer_guard_device_to_host"]], "Transfer Guard Host To Device": [[1328, "jax_transfer_guard_host_to_device"]], "Transfer guard": [[1471, null]], "Transformation functions": [[1449, "transformation-functions"]], "Transformations": [[1430, "transformations"]], "Transforming Pallas": [[1449, "transforming-pallas"]], "Transposed operands": [[1452, "transposed-operands"]], "Transposing pytrees with jax.tree.map and jax.tree.transpose": [[1474, "transposing-pytrees-with-jax-tree-map-and-jax-tree-transpose"]], "Transposition": [[1360, "transposition"], [1457, "transposition"]], "Triggering XLA compile time bugs": [[1424, "triggering-xla-compile-time-bugs"]], "Troubleshooting": [[1464, "troubleshooting"]], "Tutorials": [[1322, "tutorials"], [1472, null]], "Type Annotation Roadmap for JAX": [[1414, null]], "Type Promotion in JAX": [[1426, "type-promotion-in-jax"]], "Type Promotion within Categories": [[1426, "type-promotion-within-categories"]], "Type annotation challenges for JAX": [[1414, "type-annotation-challenges-for-jax"]], "Type annotations for PRNG Keys": [[1425, "type-annotations-for-prng-keys"]], "Type checking": [[1339, "type-checking"]], "Type promotion semantics": [[1314, null], [1473, null]], "Understanding how a JAX program is using GPU or TPU memory": [[1340, "understanding-how-a-jax-program-is-using-gpu-or-tpu-memory"]], "Unifying instance checks and annotation": [[1414, "unifying-instance-checks-and-annotation"]], "Unnecessary materialization": [[1336, "unnecessary-materialization"]], "Unreleased": [[1326, "unreleased"], [1447, "unreleased"]], "Up next\u2026": [[1319, "up-next"]], "Update documentation": [[1339, "update-documentation"]], "Update notebooks": [[1339, "update-notebooks"]], "Usage": [[1335, "usage"], [1335, "id1"], [1336, "usage"], [1463, "usage"]], "Usage with jax.lax.cond": [[1336, "usage-with-jax-lax-cond"]], "Use Direct Linearize": [[1328, "jax_use_direct_linearize"]], "Use Magma": [[1328, "jax_use_magma"]], "Use Shardy Partitioner": [[1328, "jax_use_shardy_partitioner"]], "Use jax.custom_jvp to define forward-mode (and, indirectly, reverse-mode) rules": [[1313, "use-jax-custom-jvp-to-define-forward-mode-and-indirectly-reverse-mode-rules"], [1433, "use-jax-custom-jvp-to-define-forward-mode-and-indirectly-reverse-mode-rules"]], "Use jax.custom_vjp to define custom reverse-mode-only rules": [[1313, "use-jax-custom-vjp-to-define-custom-reverse-mode-only-rules"], [1433, "use-jax-custom-vjp-to-define-custom-reverse-mode-only-rules"]], "User-customizable rematerialization policies": [[1413, "user-customizable-rematerialization-policies"]], "User-specified symbolic constraints": [[1346, "user-specified-symbolic-constraints"]], "Using Bazel": [[1339, "using-bazel"]], "Using Standalone XProf": [[1464, "using-standalone-xprof"]], "Using a mixture of sharding modes": [[1440, "using-a-mixture-of-sharding-modes"]], "Using a subset of JAX primitives in Pallas": [[1449, "using-a-subset-of-jax-primitives-in-pallas"]], "Using core_map": [[1452, "using-core-map"]], "Using custom partitioning": [[1350, "using-custom-partitioning"]], "Using existing JAX primitives": [[1360, "using-existing-jax-primitives"]], "Using jax.numpy for shape computations": [[1424, "using-jax-numpy-for-shape-computations"]], "Using pytest": [[1339, "using-pytest"]], "Using shard_map": [[1350, "using-shard-map"]], "Utility and loss functions": [[1435, "utility-and-loss-functions"], [1442, "utility-and-loss-functions"]], "VALID padding, no stride, lhs=input dilation  ~ Transposed Convolution": [[1439, "valid-padding-no-stride-lhs-input-dilation-transposed-convolution"]], "VALID padding, no stride, no dilation": [[1439, "valid-padding-no-stride-no-dilation"]], "VALID padding, no stride, rhs kernel dilation ~ Atrous convolution (excessive to illustrate)": [[1439, "valid-padding-no-stride-rhs-kernel-dilation-atrous-convolution-excessive-to-illustrate"]], "VJPs in JAX code": [[1313, "vjps-in-jax-code"], [1437, "vjps-in-jax-code"]], "VJPs in math": [[1313, "vjps-in-math"], [1437, "vjps-in-math"]], "Vector-Jacobian products (VJPs, a.k.a. reverse-mode autodiff)": [[1313, "vector-jacobian-products-vjps-a-k-a-reverse-mode-autodiff"]], "Vector-Jacobian products (VJPs, aka reverse-mode autodiff)": [[1437, "vector-jacobian-products-vjps-aka-reverse-mode-autodiff"]], "Vector-valued gradients with VJPs": [[1313, "vector-valued-gradients-with-vjps"], [1437, "vector-valued-gradients-with-vjps"]], "Vectorization (vmap)": [[1359, "vectorization-vmap"]], "Vectorized batching with vmap": [[1318, "vectorized-batching-with-vmap"]], "Viewing program traces with Perfetto": [[1464, "viewing-program-traces-with-perfetto"]], "Viewing the pytree definition of an object": [[1465, "viewing-the-pytree-definition-of-an-object"]], "Viewing the trace": [[1464, "viewing-the-trace"]], "Waiting for the operation to complete": [[1452, "waiting-for-the-operation-to-complete"]], "Ways to contribute": [[1329, "ways-to-contribute"]], "Weakly-typed values in JAX": [[1473, "weakly-typed-values-in-jax"]], "What are the possible issues after the upgrade?": [[1413, "what-are-the-possible-issues-after-the-upgrade"]], "What does this mean for users?": [[1425, "what-does-this-mean-for-users"]], "What happens when you use jit": [[1360, "what-happens-when-you-use-jit"]], "What is JAX doing?": [[1436, "what-is-jax-doing"]], "What is a GPU?": [[1452, "what-is-a-gpu"]], "What is a TPU?": [[1457, "what-is-a-tpu"]], "What is a pytree?": [[1465, "what-is-a-pytree"], [1474, "what-is-a-pytree"]], "What is covered?": [[1316, "what-is-covered"]], "What is not covered?": [[1316, "what-is-not-covered"]], "What is \u201comnistaging\u201d and why is it useful?": [[1424, "what-is-omnistaging-and-why-is-it-useful"]], "What issues can arise when jax.Array is switched on?": [[1410, "what-issues-can-arise-when-jax-array-is-switched-on"]], "What issues can arise when omnistaging is switched on?": [[1424, "what-issues-can-arise-when-omnistaging-is-switched-on"]], "What to update": [[1423, "what-to-update"]], "What\u2019s going on?": [[1410, "whats-going-on"], [1413, "whats-going-on"], [1424, "what-s-going-on"]], "When explicit shardings disagree, JAX errors": [[1434, "when-explicit-shardings-disagree-jax-errors"]], "When should you use shmap and when should you use pjit?": [[1415, "when-should-you-use-shmap-and-when-should-you-use-pjit"]], "When to use \u201cdebug\u201d print?": [[1336, "when-to-use-debug-print"]], "When you should use a JEP": [[1428, "when-you-should-use-a-jep"]], "Which APIs should support __jax_array__?": [[1422, "which-apis-should-support-jax-array"]], "Why Limit the Scope?": [[1418, "why-limit-the-scope"]], "Why are Jaxprs useful?": [[1436, "why-are-jaxprs-useful"]], "Why are gradients zero for functions based on sort order?": [[1349, "why-are-gradients-zero-for-functions-based-on-sort-order"]], "Why are jax and jaxlib separate packages?": [[1427, "why-are-jax-and-jaxlib-separate-packages"]], "Why are we doing this?": [[1413, "why-are-we-doing-this"]], "Why callbacks?": [[1348, "why-callbacks"]], "Why can\u2019t we just JIT everything?": [[1429, "why-can-t-we-just-jit-everything"]], "Why create jax.Array?": [[1410, "why-create-jax-array"]], "Why do some CUDA libraries fail to load/initialize?": [[1349, "why-do-some-cuda-libraries-fail-to-load-initialize"]], "Why does JAX need checkify?": [[1334, "why-does-jax-need-checkify"]], "Why doesn\u2019t this work?": [[1448, "why-doesnt-this-work"]], "Why don\u2019t pmap or xmap already solve this?": [[1415, "why-don-t-pmap-or-xmap-already-solve-this"]], "Why type annotations?": [[1414, "why-type-annotations"]], "Why \u201cdebug\u201d print?": [[1336, "why-debug-print"]], "With TensorBoard": [[1464, "with-tensorboard"]], "Working around custom_partitioning": [[1463, "working-around-custom-partitioning"]], "Working around unimplemented sharding rules using auto_sharding": [[1440, "working-around-unimplemented-sharding-rules-using-auto-sharding"]], "Working with list / tuple / dict containers (and other pytrees)": [[1313, "working-with-list-tuple-dict-containers-and-other-pytrees"], [1433, "working-with-list-tuple-dict-containers-and-other-pytrees"]], "Working with pytrees": [[1474, null]], "Write the log-joint function for the model": [[1445, "write-the-log-joint-function-for-the-model"]], "Writing Mosaic GPU kernels with Pallas": [[1452, null]], "Writing TPU kernels with Pallas": [[1457, null]], "Writing custom Jaxpr interpreters in JAX": [[1436, null]], "XLA Async Decomposition": [[1448, "xla-async-decomposition"]], "XLA Compilation rules": [[1360, "xla-compilation-rules"]], "XLA performance flags": [[1353, "xla-performance-flags"]], "XLA: The Powerhouse Behind Jax": [[1475, "xla-the-powerhouse-behind-jax"]], "XProf (TensorBoard profiling)": [[1464, "xprof-tensorboard-profiling"]], "Xla Backend": [[1328, "jax_xla_backend"]], "Xla Profile Version": [[1328, "jax_xla_profile_version"]], "Your first interpreter: invert": [[1436, "your-first-interpreter-invert"]], "Your first matrix multiplication kernel": [[1460, "your-first-matrix-multiplication-kernel"]], "Zero version": [[1420, "zero-version"]], "add": [[1449, "add"]], "all_gather": [[1443, "all-gather"]], "all_to_all": [[1443, "all-to-all"]], "bfloat16 matrix multiplication": [[1460, "bfloat16-matrix-multiplication"]], "checkify under JAX transformations.": [[1334, "checkify-under-jax-transformations"]], "commit_smem": [[1452, "commit-smem"]], "cond": [[1331, "cond"]], "cond primitive (conditionals)": [[1411, "cond-primitive-conditionals"]], "custom_batching": [[1359, "custom-batching"]], "custom_jvp": [[1359, "custom-jvp"]], "custom_vjp": [[1359, "custom-vjp"]], "custom_vjp and nondiff_argnums update guide": [[1423, null]], "fori_loop": [[1331, "fori-loop"]], "grad": [[1334, "grad"]], "grad-of-pallas_call": [[1449, "grad-of-pallas-call"]], "grid, a.k.a. kernels in a loop": [[1453, "grid-a-k-a-kernels-in-a-loop"]], "jax (0.1.77) (September 15 2020)": [[1326, "jax-0-1-77-september-15-2020"]], "jax (0.2.0) (September 23 2020)": [[1326, "jax-0-2-0-september-23-2020"]], "jax 0.1.58 (January 28, 2020)": [[1326, "jax-0-1-58-january-28-2020"]], "jax 0.1.59 (February 11, 2020)": [[1326, "jax-0-1-59-february-11-2020"]], "jax 0.1.60 (March 17, 2020)": [[1326, "jax-0-1-60-march-17-2020"]], "jax 0.1.61 (March 17, 2020)": [[1326, "jax-0-1-61-march-17-2020"]], "jax 0.1.62 (March 21, 2020)": [[1326, "jax-0-1-62-march-21-2020"]], "jax 0.1.63 (April 12, 2020)": [[1326, "jax-0-1-63-april-12-2020"]], "jax 0.1.64 (April 21, 2020)": [[1326, "jax-0-1-64-april-21-2020"]], "jax 0.1.65 (April 30, 2020)": [[1326, "jax-0-1-65-april-30-2020"]], "jax 0.1.66 (May 5, 2020)": [[1326, "jax-0-1-66-may-5-2020"]], "jax 0.1.67 (May 12, 2020)": [[1326, "jax-0-1-67-may-12-2020"]], "jax 0.1.68 (May 21, 2020)": [[1326, "jax-0-1-68-may-21-2020"]], "jax 0.1.69 (June 3, 2020)": [[1326, "jax-0-1-69-june-3-2020"]], "jax 0.1.70 (June 8, 2020)": [[1326, "jax-0-1-70-june-8-2020"]], "jax 0.1.71 (June 25, 2020)": [[1326, "jax-0-1-71-june-25-2020"]], "jax 0.1.72 (June 28, 2020)": [[1326, "jax-0-1-72-june-28-2020"]], "jax 0.1.73 (July 22, 2020)": [[1326, "jax-0-1-73-july-22-2020"]], "jax 0.1.74 (July 29, 2020)": [[1326, "jax-0-1-74-july-29-2020"]], "jax 0.1.75 (July 30, 2020)": [[1326, "jax-0-1-75-july-30-2020"]], "jax 0.1.76 (September 8, 2020)": [[1326, "jax-0-1-76-september-8-2020"]], "jax 0.2.1 (October 6 2020)": [[1326, "jax-0-2-1-october-6-2020"]], "jax 0.2.10 (March 5 2021)": [[1326, "jax-0-2-10-march-5-2021"]], "jax 0.2.11 (March 23 2021)": [[1326, "jax-0-2-11-march-23-2021"]], "jax 0.2.12 (April 1 2021)": [[1326, "jax-0-2-12-april-1-2021"]], "jax 0.2.13 (May 3 2021)": [[1326, "jax-0-2-13-may-3-2021"]], "jax 0.2.14 (June 10 2021)": [[1326, "jax-0-2-14-june-10-2021"]], "jax 0.2.15 (June 23 2021)": [[1326, "jax-0-2-15-june-23-2021"]], "jax 0.2.16 (June 23 2021)": [[1326, "jax-0-2-16-june-23-2021"]], "jax 0.2.17 (July 9 2021)": [[1326, "jax-0-2-17-july-9-2021"]], "jax 0.2.18 (July 21 2021)": [[1326, "jax-0-2-18-july-21-2021"]], "jax 0.2.19 (Aug 12, 2021)": [[1326, "jax-0-2-19-aug-12-2021"]], "jax 0.2.2 (October 13 2020)": [[1326, "jax-0-2-2-october-13-2020"]], "jax 0.2.20 (Sept 2, 2021)": [[1326, "jax-0-2-20-sept-2-2021"]], "jax 0.2.21 (Sept 23, 2021)": [[1326, "jax-0-2-21-sept-23-2021"]], "jax 0.2.22 (Oct 12, 2021)": [[1326, "jax-0-2-22-oct-12-2021"]], "jax 0.2.24 (Oct 19, 2021)": [[1326, "jax-0-2-24-oct-19-2021"]], "jax 0.2.25 (Nov 10, 2021)": [[1326, "jax-0-2-25-nov-10-2021"]], "jax 0.2.26 (Dec 8, 2021)": [[1326, "jax-0-2-26-dec-8-2021"]], "jax 0.2.27 (Jan 18 2022)": [[1326, "jax-0-2-27-jan-18-2022"]], "jax 0.2.28 (Feb 1, 2022)": [[1326, "jax-0-2-28-feb-1-2022"]], "jax 0.2.3 (October 14 2020)": [[1326, "jax-0-2-3-october-14-2020"]], "jax 0.2.4 (October 19 2020)": [[1326, "jax-0-2-4-october-19-2020"]], "jax 0.2.5 (October 27 2020)": [[1326, "jax-0-2-5-october-27-2020"]], "jax 0.2.6 (Nov 18 2020)": [[1326, "jax-0-2-6-nov-18-2020"]], "jax 0.2.7 (Dec 4 2020)": [[1326, "jax-0-2-7-dec-4-2020"]], "jax 0.2.8 (January 12 2021)": [[1326, "jax-0-2-8-january-12-2021"]], "jax 0.2.9 (January 26 2021)": [[1326, "jax-0-2-9-january-26-2021"]], "jax 0.3.0 (Feb 10, 2022)": [[1326, "jax-0-3-0-feb-10-2022"]], "jax 0.3.1 (Feb 18, 2022)": [[1326, "jax-0-3-1-feb-18-2022"]], "jax 0.3.10 (May 3, 2022)": [[1326, "jax-0-3-10-may-3-2022"]], "jax 0.3.11 (May 15, 2022)": [[1326, "jax-0-3-11-may-15-2022"]], "jax 0.3.12 (May 15, 2022)": [[1326, "jax-0-3-12-may-15-2022"]], "jax 0.3.13 (May 16, 2022)": [[1326, "jax-0-3-13-may-16-2022"]], "jax 0.3.14 (June 27, 2022)": [[1326, "jax-0-3-14-june-27-2022"]], "jax 0.3.15 (July 22, 2022)": [[1326, "jax-0-3-15-july-22-2022"]], "jax 0.3.16": [[1326, "jax-0-3-16"]], "jax 0.3.17 (Aug 31, 2022)": [[1326, "jax-0-3-17-aug-31-2022"]], "jax 0.3.18 (Sep 26, 2022)": [[1326, "jax-0-3-18-sep-26-2022"]], "jax 0.3.19 (Sep 27, 2022)": [[1326, "jax-0-3-19-sep-27-2022"]], "jax 0.3.2 (March 16, 2022)": [[1326, "jax-0-3-2-march-16-2022"]], "jax 0.3.20 (Sep 28, 2022)": [[1326, "jax-0-3-20-sep-28-2022"]], "jax 0.3.21 (Sep 30, 2022)": [[1326, "jax-0-3-21-sep-30-2022"]], "jax 0.3.22 (Oct 11, 2022)": [[1326, "jax-0-3-22-oct-11-2022"]], "jax 0.3.23 (Oct 12, 2022)": [[1326, "jax-0-3-23-oct-12-2022"]], "jax 0.3.24 (Nov 4, 2022)": [[1326, "jax-0-3-24-nov-4-2022"]], "jax 0.3.25 (Nov 15, 2022)": [[1326, "jax-0-3-25-nov-15-2022"]], "jax 0.3.3 (March 17, 2022)": [[1326, "jax-0-3-3-march-17-2022"]], "jax 0.3.4 (March 18, 2022)": [[1326, "jax-0-3-4-march-18-2022"]], "jax 0.3.5 (April 7, 2022)": [[1326, "jax-0-3-5-april-7-2022"]], "jax 0.3.6 (April 12, 2022)": [[1326, "jax-0-3-6-april-12-2022"]], "jax 0.3.7 (April 15, 2022)": [[1326, "jax-0-3-7-april-15-2022"]], "jax 0.3.8 (April 29 2022)": [[1326, "jax-0-3-8-april-29-2022"]], "jax 0.3.9 (May 2, 2022)": [[1326, "jax-0-3-9-may-2-2022"]], "jax 0.4.0 (Dec 12, 2022)": [[1326, "jax-0-4-0-dec-12-2022"]], "jax 0.4.1 (Dec 13, 2022)": [[1326, "jax-0-4-1-dec-13-2022"]], "jax 0.4.10 (May 11, 2023)": [[1326, "jax-0-4-10-may-11-2023"]], "jax 0.4.11 (May 31, 2023)": [[1326, "jax-0-4-11-may-31-2023"]], "jax 0.4.12 (June 8, 2023)": [[1326, "jax-0-4-12-june-8-2023"]], "jax 0.4.13 (June 22, 2023)": [[1326, "jax-0-4-13-june-22-2023"]], "jax 0.4.14 (July 27, 2023)": [[1326, "jax-0-4-14-july-27-2023"]], "jax 0.4.16 (Sept 18, 2023)": [[1326, "jax-0-4-16-sept-18-2023"]], "jax 0.4.17 (Oct 3, 2023)": [[1326, "jax-0-4-17-oct-3-2023"]], "jax 0.4.18 (Oct 6, 2023)": [[1326, "jax-0-4-18-oct-6-2023"]], "jax 0.4.19 (Oct 19, 2023)": [[1326, "jax-0-4-19-oct-19-2023"]], "jax 0.4.2 (Jan 24, 2023)": [[1326, "jax-0-4-2-jan-24-2023"]], "jax 0.4.20 (Nov 2, 2023)": [[1326, "jax-0-4-20-nov-2-2023"]], "jax 0.4.21 (Dec 4 2023)": [[1326, "jax-0-4-21-dec-4-2023"]], "jax 0.4.22 (Dec 13, 2023)": [[1326, "jax-0-4-22-dec-13-2023"]], "jax 0.4.23 (Dec 13, 2023)": [[1326, "jax-0-4-23-dec-13-2023"]], "jax 0.4.24 (Feb 6, 2024)": [[1326, "jax-0-4-24-feb-6-2024"]], "jax 0.4.25 (Feb 26, 2024)": [[1326, "jax-0-4-25-feb-26-2024"]], "jax 0.4.26 (April 3, 2024)": [[1326, "jax-0-4-26-april-3-2024"]], "jax 0.4.27 (May 7, 2024)": [[1326, "jax-0-4-27-may-7-2024"]], "jax 0.4.28 (May 9, 2024)": [[1326, "jax-0-4-28-may-9-2024"]], "jax 0.4.29 (June 10, 2024)": [[1326, "jax-0-4-29-june-10-2024"]], "jax 0.4.3 (Feb 8, 2023)": [[1326, "jax-0-4-3-feb-8-2023"]], "jax 0.4.30 (June 18, 2024)": [[1326, "jax-0-4-30-june-18-2024"]], "jax 0.4.31 (July 29, 2024)": [[1326, "jax-0-4-31-july-29-2024"]], "jax 0.4.32 (September 11, 2024)": [[1326, "jax-0-4-32-september-11-2024"]], "jax 0.4.33 (September 16, 2024)": [[1326, "jax-0-4-33-september-16-2024"]], "jax 0.4.34 (October 4, 2024)": [[1326, "jax-0-4-34-october-4-2024"]], "jax 0.4.35 (Oct 22, 2024)": [[1326, "jax-0-4-35-oct-22-2024"]], "jax 0.4.36 (Dec 5, 2024)": [[1326, "jax-0-4-36-dec-5-2024"]], "jax 0.4.37 (Dec 9, 2024)": [[1326, "jax-0-4-37-dec-9-2024"]], "jax 0.4.38 (Dec 17, 2024)": [[1326, "jax-0-4-38-dec-17-2024"]], "jax 0.4.4 (Feb 16, 2023)": [[1326, "jax-0-4-4-feb-16-2023"]], "jax 0.4.5 (Mar 2, 2023)": [[1326, "jax-0-4-5-mar-2-2023"]], "jax 0.4.6 (Mar 9, 2023)": [[1326, "jax-0-4-6-mar-9-2023"]], "jax 0.4.7 (March 27, 2023)": [[1326, "jax-0-4-7-march-27-2023"]], "jax 0.4.8 (March 29, 2023)": [[1326, "jax-0-4-8-march-29-2023"]], "jax 0.4.9 (May 9, 2023)": [[1326, "jax-0-4-9-may-9-2023"]], "jax 0.5.0 (Jan 17, 2025)": [[1326, "jax-0-5-0-jan-17-2025"]], "jax 0.5.1 (Feb 24, 2025)": [[1326, "jax-0-5-1-feb-24-2025"]], "jax 0.5.2 (Mar 4, 2025)": [[1326, "jax-0-5-2-mar-4-2025"]], "jax 0.5.3 (Mar 19, 2025)": [[1326, "jax-0-5-3-mar-19-2025"]], "jax.Array": [[0, null]], "jax.Array (jax.Array)": [[1359, "jax-array-jax-array"]], "jax.Array migration": [[1410, null]], "jax.Array.T": [[1, null]], "jax.Array.addressable_shards": [[2, null]], "jax.Array.all": [[3, null]], "jax.Array.any": [[4, null]], "jax.Array.argmax": [[5, null]], "jax.Array.argmin": [[6, null]], "jax.Array.argpartition": [[7, null]], "jax.Array.argsort": [[8, null]], "jax.Array.astype": [[9, null]], "jax.Array.at": [[10, null]], "jax.Array.choose": [[11, null]], "jax.Array.clip": [[12, null]], "jax.Array.committed": [[13, null]], "jax.Array.compress": [[14, null]], "jax.Array.conj": [[15, null]], "jax.Array.conjugate": [[16, null]], "jax.Array.copy": [[17, null]], "jax.Array.copy_to_host_async": [[18, null]], "jax.Array.cumprod": [[19, null]], "jax.Array.cumsum": [[20, null]], "jax.Array.device": [[21, null]], "jax.Array.diagonal": [[22, null]], "jax.Array.dot": [[23, null]], "jax.Array.dtype": [[24, null]], "jax.Array.flat": [[25, null]], "jax.Array.flatten": [[26, null]], "jax.Array.global_shards": [[27, null]], "jax.Array.imag": [[28, null]], "jax.Array.is_fully_addressable": [[29, null]], "jax.Array.is_fully_replicated": [[30, null]], "jax.Array.item": [[31, null]], "jax.Array.itemsize": [[32, null]], "jax.Array.mT": [[33, null]], "jax.Array.max": [[34, null]], "jax.Array.mean": [[35, null]], "jax.Array.min": [[36, null]], "jax.Array.nbytes": [[37, null]], "jax.Array.ndim": [[38, null]], "jax.Array.nonzero": [[39, null]], "jax.Array.prod": [[40, null]], "jax.Array.ptp": [[41, null]], "jax.Array.ravel": [[42, null]], "jax.Array.real": [[43, null]], "jax.Array.repeat": [[44, null]], "jax.Array.reshape": [[45, null]], "jax.Array.round": [[46, null]], "jax.Array.searchsorted": [[47, null]], "jax.Array.shape": [[48, null]], "jax.Array.sharding": [[49, null]], "jax.Array.size": [[50, null]], "jax.Array.sort": [[51, null]], "jax.Array.squeeze": [[52, null]], "jax.Array.std": [[53, null]], "jax.Array.sum": [[54, null]], "jax.Array.swapaxes": [[55, null]], "jax.Array.take": [[56, null]], "jax.Array.to_device": [[57, null]], "jax.Array.trace": [[58, null]], "jax.Array.transpose": [[59, null]], "jax.Array.var": [[60, null]], "jax.Array.view": [[61, null]], "jax.Device": [[62, null]], "jax.ShapeDtypeStruct": [[63, null]], "jax.block_until_ready": [[64, null]], "jax.check_tracer_leaks": [[65, null]], "jax.checking_leaks": [[66, null]], "jax.checkpoint": [[67, null]], "jax.checkpoint fundamentals": [[1354, "jax-checkpoint-fundamentals"]], "jax.clear_caches": [[68, null]], "jax.closure_convert": [[69, null]], "jax.config": [[70, null]], "jax.copy_to_host_async": [[71, null]], "jax.core module": [[1361, null]], "jax.core.ClosedJaxpr": [[1411, "jax-core-closedjaxpr"]], "jax.core.Tracer": [[72, null]], "jax.custom_batching.custom_vmap": [[73, null]], "jax.custom_batching.custom_vmap.def_vmap": [[74, null]], "jax.custom_batching.sequential_vmap": [[75, null]], "jax.custom_gradient": [[76, null]], "jax.custom_jvp": [[77, null]], "jax.custom_jvp with nondiff_argnums": [[1313, "jax-custom-jvp-with-nondiff-argnums"], [1433, "jax-custom-jvp-with-nondiff-argnums"]], "jax.custom_jvp.defjvp": [[78, null]], "jax.custom_jvp.defjvps": [[79, null]], "jax.custom_vjp": [[80, null]], "jax.custom_vjp with nondiff_argnums": [[1313, "jax-custom-vjp-with-nondiff-argnums"], [1433, "jax-custom-vjp-with-nondiff-argnums"]], "jax.custom_vjp.defvjp": [[81, null]], "jax.debug module": [[1362, null]], "jax.debug.breakpoint": [[82, null]], "jax.debug.breakpoint for pdb-like debugging": [[1333, "jax-debug-breakpoint-for-pdb-like-debugging"]], "jax.debug.callback": [[83, null]], "jax.debug.callback for more control during debugging": [[1333, "jax-debug-callback-for-more-control-during-debugging"]], "jax.debug.inspect_array_sharding": [[84, null]], "jax.debug.print": [[85, null]], "jax.debug.print for simple inspection": [[1333, "jax-debug-print-for-simple-inspection"]], "jax.debug.visualize_array_sharding": [[86, null]], "jax.debug.visualize_sharding": [[87, null]], "jax.debug_infs": [[88, null]], "jax.debug_nans": [[89, null]], "jax.default_backend": [[90, null]], "jax.default_device": [[91, null]], "jax.default_matmul_precision": [[92, null]], "jax.default_prng_impl": [[93, null]], "jax.device_count": [[94, null]], "jax.device_get": [[95, null]], "jax.device_put": [[96, null]], "jax.devices": [[97, null]], "jax.disable_jit": [[98, null]], "jax.distributed module": [[1363, null]], "jax.distributed.initialize": [[99, null]], "jax.distributed.shutdown": [[100, null]], "jax.dlpack module": [[1364, null]], "jax.dlpack.from_dlpack": [[101, null]], "jax.dlpack.to_dlpack": [[102, null]], "jax.dtypes module": [[1365, null]], "jax.dtypes.bfloat16": [[103, null]], "jax.dtypes.canonicalize_dtype": [[104, null]], "jax.dtypes.float0": [[105, null]], "jax.dtypes.issubdtype": [[106, null]], "jax.dtypes.prng_key": [[107, null]], "jax.dtypes.result_type": [[108, null]], "jax.dtypes.scalar_type_of": [[109, null]], "jax.enable_checks": [[110, null]], "jax.enable_custom_prng": [[111, null]], "jax.enable_custom_vjp_by_custom_transpose": [[112, null]], "jax.ensure_compile_time_eval": [[113, null]], "jax.eval_shape": [[114, null]], "jax.example_libraries module": [[1366, null]], "jax.example_libraries.optimizers module": [[1367, null]], "jax.example_libraries.stax module": [[1368, null]], "jax.experimental module": [[1369, null]], "jax.experimental.checkify module": [[1370, null]], "jax.experimental.checkify.Error": [[115, null]], "jax.experimental.checkify.JaxRuntimeError": [[116, null]], "jax.experimental.checkify.all_checks": [[117, null]], "jax.experimental.checkify.automatic_checks": [[118, null]], "jax.experimental.checkify.check": [[119, null]], "jax.experimental.checkify.check_error": [[120, null]], "jax.experimental.checkify.checkify": [[121, null]], "jax.experimental.checkify.div_checks": [[122, null]], "jax.experimental.checkify.float_checks": [[123, null]], "jax.experimental.checkify.index_checks": [[124, null]], "jax.experimental.checkify.nan_checks": [[125, null]], "jax.experimental.checkify.user_checks": [[126, null]], "jax.experimental.compilation_cache module": [[1371, null]], "jax.experimental.custom_dce module": [[1372, null]], "jax.experimental.custom_dce.custom_dce": [[127, null]], "jax.experimental.custom_dce.custom_dce.def_dce": [[128, null]], "jax.experimental.custom_partitioning module": [[1373, null]], "jax.experimental.disable_x64": [[129, null]], "jax.experimental.enable_x64": [[130, null]], "jax.experimental.io_callback": [[131, null]], "jax.experimental.jet module": [[1374, null]], "jax.experimental.key_reuse module": [[1375, null]], "jax.experimental.mesh_utils module": [[1376, null]], "jax.experimental.mesh_utils.create_device_mesh": [[132, null]], "jax.experimental.mesh_utils.create_hybrid_device_mesh": [[133, null]], "jax.experimental.multihost_utils module": [[1377, null]], "jax.experimental.multihost_utils.assert_equal": [[134, null]], "jax.experimental.multihost_utils.broadcast_one_to_all": [[135, null]], "jax.experimental.multihost_utils.global_array_to_host_local_array": [[136, null]], "jax.experimental.multihost_utils.host_local_array_to_global_array": [[137, null]], "jax.experimental.multihost_utils.process_allgather": [[138, null]], "jax.experimental.multihost_utils.sync_global_devices": [[139, null]], "jax.experimental.pallas module": [[1378, null]], "jax.experimental.pallas.BlockSpec": [[140, null]], "jax.experimental.pallas.GridSpec": [[141, null]], "jax.experimental.pallas.MemoryRef": [[142, null]], "jax.experimental.pallas.Slice": [[143, null]], "jax.experimental.pallas.atomic_add": [[144, null]], "jax.experimental.pallas.atomic_and": [[145, null]], "jax.experimental.pallas.atomic_cas": [[146, null]], "jax.experimental.pallas.atomic_max": [[147, null]], "jax.experimental.pallas.atomic_min": [[148, null]], "jax.experimental.pallas.atomic_or": [[149, null]], "jax.experimental.pallas.atomic_xchg": [[150, null]], "jax.experimental.pallas.atomic_xor": [[151, null]], "jax.experimental.pallas.broadcast_to": [[152, null]], "jax.experimental.pallas.debug_print": [[153, null]], "jax.experimental.pallas.dot": [[154, null]], "jax.experimental.pallas.load": [[155, null]], "jax.experimental.pallas.max_contiguous": [[156, null]], "jax.experimental.pallas.mosaic_gpu module": [[1379, null]], "jax.experimental.pallas.mosaic_gpu.ACC": [[157, null]], "jax.experimental.pallas.mosaic_gpu.Barrier": [[158, null]], "jax.experimental.pallas.mosaic_gpu.BlockSpec": [[159, null]], "jax.experimental.pallas.mosaic_gpu.CompilerParams": [[160, null]], "jax.experimental.pallas.mosaic_gpu.GMEM": [[161, null]], "jax.experimental.pallas.mosaic_gpu.Layout": [[162, null]], "jax.experimental.pallas.mosaic_gpu.MemorySpace": [[163, null]], "jax.experimental.pallas.mosaic_gpu.SMEM": [[164, null]], "jax.experimental.pallas.mosaic_gpu.SwizzleTransform": [[165, null]], "jax.experimental.pallas.mosaic_gpu.TilingTransform": [[166, null]], "jax.experimental.pallas.mosaic_gpu.TransposeTransform": [[167, null]], "jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef": [[168, null]], "jax.experimental.pallas.mosaic_gpu.barrier_arrive": [[169, null]], "jax.experimental.pallas.mosaic_gpu.barrier_wait": [[170, null]], "jax.experimental.pallas.mosaic_gpu.commit_smem": [[171, null]], "jax.experimental.pallas.mosaic_gpu.copy_gmem_to_smem": [[172, null]], "jax.experimental.pallas.mosaic_gpu.copy_smem_to_gmem": [[173, null]], "jax.experimental.pallas.mosaic_gpu.emit_pipeline": [[174, null]], "jax.experimental.pallas.mosaic_gpu.layout_cast": [[175, null]], "jax.experimental.pallas.mosaic_gpu.set_max_registers": [[176, null]], "jax.experimental.pallas.mosaic_gpu.wait_smem_to_gmem": [[177, null]], "jax.experimental.pallas.mosaic_gpu.wgmma": [[178, null]], "jax.experimental.pallas.mosaic_gpu.wgmma_wait": [[179, null]], "jax.experimental.pallas.multiple_of": [[180, null]], "jax.experimental.pallas.num_programs": [[181, null]], "jax.experimental.pallas.pallas_call": [[182, null]], "jax.experimental.pallas.program_id": [[183, null]], "jax.experimental.pallas.run_scoped": [[184, null]], "jax.experimental.pallas.store": [[185, null]], "jax.experimental.pallas.swap": [[186, null]], "jax.experimental.pallas.tpu module": [[1380, null]], "jax.experimental.pallas.triton module": [[1381, null]], "jax.experimental.pallas.triton.CompilerParams": [[187, null]], "jax.experimental.pallas.triton.approx_tanh": [[188, null]], "jax.experimental.pallas.triton.debug_barrier": [[189, null]], "jax.experimental.pallas.triton.elementwise_inline_asm": [[190, null]], "jax.experimental.pallas.when": [[191, null]], "jax.experimental.pjit module": [[1382, null]], "jax.experimental.serialize_executable module": [[1383, null]], "jax.experimental.serialize_executable.deserialize_and_load": [[192, null]], "jax.experimental.serialize_executable.serialize": [[193, null]], "jax.experimental.shard_map module": [[1384, null]], "jax.experimental.shard_map.shard_map": [[194, null]], "jax.experimental.sparse module": [[1385, null]], "jax.experimental.sparse.BCOO": [[195, null]], "jax.experimental.sparse.BCSR": [[196, null]], "jax.experimental.sparse.COO": [[197, null]], "jax.experimental.sparse.CSC": [[198, null]], "jax.experimental.sparse.CSR": [[199, null]], "jax.experimental.sparse.JAXSparse": [[200, null]], "jax.experimental.sparse.bcoo_broadcast_in_dim": [[201, null]], "jax.experimental.sparse.bcoo_concatenate": [[202, null]], "jax.experimental.sparse.bcoo_dot_general": [[203, null]], "jax.experimental.sparse.bcoo_dot_general_sampled": [[204, null]], "jax.experimental.sparse.bcoo_dynamic_slice": [[205, null]], "jax.experimental.sparse.bcoo_extract": [[206, null]], "jax.experimental.sparse.bcoo_fromdense": [[207, null]], "jax.experimental.sparse.bcoo_gather": [[208, null]], "jax.experimental.sparse.bcoo_multiply_dense": [[209, null]], "jax.experimental.sparse.bcoo_multiply_sparse": [[210, null]], "jax.experimental.sparse.bcoo_reduce_sum": [[211, null]], "jax.experimental.sparse.bcoo_reshape": [[212, null]], "jax.experimental.sparse.bcoo_slice": [[213, null]], "jax.experimental.sparse.bcoo_sort_indices": [[214, null]], "jax.experimental.sparse.bcoo_squeeze": [[215, null]], "jax.experimental.sparse.bcoo_sum_duplicates": [[216, null]], "jax.experimental.sparse.bcoo_todense": [[217, null]], "jax.experimental.sparse.bcoo_transpose": [[218, null]], "jax.experimental.sparse.bcoo_update_layout": [[219, null]], "jax.experimental.sparse.bcsr_dot_general": [[220, null]], "jax.experimental.sparse.bcsr_extract": [[221, null]], "jax.experimental.sparse.bcsr_fromdense": [[222, null]], "jax.experimental.sparse.bcsr_todense": [[223, null]], "jax.experimental.sparse.coo_fromdense": [[224, null]], "jax.experimental.sparse.coo_matmat": [[225, null]], "jax.experimental.sparse.coo_matvec": [[226, null]], "jax.experimental.sparse.coo_todense": [[227, null]], "jax.experimental.sparse.csr_fromdense": [[228, null]], "jax.experimental.sparse.csr_matmat": [[229, null]], "jax.experimental.sparse.csr_matvec": [[230, null]], "jax.experimental.sparse.csr_todense": [[231, null]], "jax.experimental.sparse.empty": [[232, null]], "jax.experimental.sparse.eye": [[233, null]], "jax.experimental.sparse.grad": [[234, null]], "jax.experimental.sparse.linalg": [[1385, "module-jax.experimental.sparse.linalg"]], "jax.experimental.sparse.linalg.lobpcg_standard": [[235, null]], "jax.experimental.sparse.linalg.spsolve": [[236, null]], "jax.experimental.sparse.random_bcoo": [[237, null]], "jax.experimental.sparse.sparsify": [[238, null]], "jax.experimental.sparse.todense": [[239, null]], "jax.experimental.sparse.value_and_grad": [[240, null]], "jax.export module": [[1386, null]], "jax.export.SymbolicScope": [[241, null]], "jax.export.default_export_platform": [[242, null]], "jax.export.deserialize": [[243, null]], "jax.export.export": [[244, null]], "jax.export.is_symbolic_dim": [[245, null]], "jax.export.maximum_supported_calling_convention_version": [[246, null]], "jax.export.minimum_supported_calling_convention_version": [[247, null]], "jax.export.register_namedtuple_serialization": [[248, null]], "jax.export.register_pytree_node_serialization": [[249, null]], "jax.export.symbolic_args_specs": [[250, null]], "jax.export.symbolic_shape": [[251, null]], "jax.extend module": [[1387, null]], "jax.extend.core": [[1416, "jax-extend-core"]], "jax.extend.core module": [[1388, null]], "jax.extend.core.ClosedJaxpr": [[252, null]], "jax.extend.core.Jaxpr": [[253, null]], "jax.extend.core.JaxprEqn": [[254, null]], "jax.extend.core.Literal": [[255, null]], "jax.extend.core.Primitive": [[256, null]], "jax.extend.core.Token": [[257, null]], "jax.extend.core.Var": [[258, null]], "jax.extend.core.array_types": [[259, null]], "jax.extend.core.jaxpr_as_fun": [[260, null]], "jax.extend.core.primitives": [[261, null]], "jax.extend.ffi module (deprecated)": [[1392, "jax-extend-ffi-module-deprecated"]], "jax.extend.ffi.ffi_call": [[262, null]], "jax.extend.ffi.ffi_lowering": [[263, null]], "jax.extend.ffi.pycapsule": [[264, null]], "jax.extend.ffi.register_ffi_target": [[265, null]], "jax.extend.interpreters": [[1416, "jax-extend-interpreters"]], "jax.extend.linear_util module": [[1389, null]], "jax.extend.linear_util.StoreException": [[266, null]], "jax.extend.linear_util.WrappedFun": [[267, null]], "jax.extend.linear_util.cache": [[268, null]], "jax.extend.linear_util.merge_linear_aux": [[269, null]], "jax.extend.linear_util.transformation": [[270, null]], "jax.extend.linear_util.transformation_with_aux": [[271, null]], "jax.extend.linear_util.wrap_init": [[272, null]], "jax.extend.mlir module": [[1390, null]], "jax.extend.mlir.dialects": [[273, null]], "jax.extend.mlir.ir": [[274, null]], "jax.extend.mlir.passmanager": [[275, null]], "jax.extend.random": [[1416, "jax-extend-random"]], "jax.extend.random module": [[1391, null]], "jax.extend.random.define_prng_impl": [[276, null]], "jax.extend.random.rbg_prng_impl": [[277, null]], "jax.extend.random.seed_with_impl": [[278, null]], "jax.extend.random.threefry2x32_p": [[279, null]], "jax.extend.random.threefry_2x32": [[280, null]], "jax.extend.random.threefry_prng_impl": [[281, null]], "jax.extend.random.unsafe_rbg_prng_impl": [[282, null]], "jax.extend.sharding": [[1416, "jax-extend-sharding"]], "jax.extend: a module for extensions": [[1416, null]], "jax.ffi module": [[1392, null]], "jax.ffi.ffi_call": [[283, null]], "jax.ffi.ffi_lowering": [[284, null]], "jax.ffi.pycapsule": [[285, null]], "jax.ffi.register_ffi_target": [[286, null]], "jax.ffi.register_ffi_type_id": [[287, null]], "jax.flatten_util module": [[1393, null]], "jax.flatten_util.ravel_pytree": [[288, null]], "jax.grad": [[289, null]], "jax.hessian": [[290, null]], "jax.image module": [[1394, null]], "jax.image.resize": [[291, null]], "jax.image.scale_and_translate": [[292, null]], "jax.jacfwd": [[293, null]], "jax.jacobian": [[294, null]], "jax.jacrev": [[295, null]], "jax.jit": [[296, null]], "jax.jvp": [[297, null]], "jax.lax module": [[1395, null]], "jax.lax.abs": [[298, null]], "jax.lax.acos": [[299, null]], "jax.lax.acosh": [[300, null]], "jax.lax.add": [[301, null]], "jax.lax.after_all": [[302, null]], "jax.lax.all_gather": [[303, null]], "jax.lax.all_to_all": [[304, null]], "jax.lax.approx_max_k": [[305, null]], "jax.lax.approx_min_k": [[306, null]], "jax.lax.argmax": [[307, null]], "jax.lax.argmin": [[308, null]], "jax.lax.asin": [[309, null]], "jax.lax.asinh": [[310, null]], "jax.lax.associative_scan": [[311, null]], "jax.lax.atan": [[312, null]], "jax.lax.atan2": [[313, null]], "jax.lax.atanh": [[314, null]], "jax.lax.axis_index": [[315, null]], "jax.lax.axis_size": [[316, null]], "jax.lax.batch_matmul": [[317, null]], "jax.lax.bessel_i0e": [[318, null]], "jax.lax.bessel_i1e": [[319, null]], "jax.lax.betainc": [[320, null]], "jax.lax.bitcast_convert_type": [[321, null]], "jax.lax.bitwise_and": [[322, null]], "jax.lax.bitwise_not": [[323, null]], "jax.lax.bitwise_or": [[324, null]], "jax.lax.bitwise_xor": [[325, null]], "jax.lax.broadcast": [[326, null]], "jax.lax.broadcast_in_dim": [[327, null]], "jax.lax.broadcast_shapes": [[328, null]], "jax.lax.broadcast_to_rank": [[329, null]], "jax.lax.broadcasted_iota": [[330, null]], "jax.lax.cbrt": [[331, null]], "jax.lax.ceil": [[332, null]], "jax.lax.clamp": [[333, null]], "jax.lax.clz": [[334, null]], "jax.lax.collapse": [[335, null]], "jax.lax.complex": [[336, null]], "jax.lax.composite": [[337, null]], "jax.lax.concatenate": [[338, null]], "jax.lax.cond": [[339, null]], "jax.lax.conj": [[340, null]], "jax.lax.conv": [[341, null]], "jax.lax.conv_dimension_numbers": [[342, null]], "jax.lax.conv_general_dilated": [[343, null]], "jax.lax.conv_general_dilated_local": [[344, null]], "jax.lax.conv_general_dilated_patches": [[345, null]], "jax.lax.conv_transpose": [[346, null]], "jax.lax.conv_with_general_padding": [[347, null]], "jax.lax.convert_element_type": [[348, null]], "jax.lax.cos": [[349, null]], "jax.lax.cosh": [[350, null]], "jax.lax.cumlogsumexp": [[351, null]], "jax.lax.cummax": [[352, null]], "jax.lax.cummin": [[353, null]], "jax.lax.cumprod": [[354, null]], "jax.lax.cumsum": [[355, null]], "jax.lax.custom_linear_solve": [[356, null]], "jax.lax.custom_root": [[357, null]], "jax.lax.digamma": [[358, null]], "jax.lax.div": [[359, null]], "jax.lax.dot": [[360, null]], "jax.lax.dot_general": [[361, null]], "jax.lax.dynamic_index_in_dim": [[362, null]], "jax.lax.dynamic_slice": [[363, null]], "jax.lax.dynamic_slice_in_dim": [[364, null]], "jax.lax.dynamic_update_index_in_dim": [[365, null]], "jax.lax.dynamic_update_slice": [[366, null]], "jax.lax.dynamic_update_slice_in_dim": [[367, null]], "jax.lax.eq": [[368, null]], "jax.lax.erf": [[369, null]], "jax.lax.erf_inv": [[370, null]], "jax.lax.erfc": [[371, null]], "jax.lax.exp": [[372, null]], "jax.lax.exp2": [[373, null]], "jax.lax.expand_dims": [[374, null]], "jax.lax.expm1": [[375, null]], "jax.lax.fft": [[376, null]], "jax.lax.floor": [[377, null]], "jax.lax.fori_loop": [[378, null]], "jax.lax.full": [[379, null]], "jax.lax.full_like": [[380, null]], "jax.lax.gather": [[381, null]], "jax.lax.ge": [[382, null]], "jax.lax.gt": [[383, null]], "jax.lax.igamma": [[384, null]], "jax.lax.igammac": [[385, null]], "jax.lax.imag": [[386, null]], "jax.lax.index_in_dim": [[387, null]], "jax.lax.index_take": [[388, null]], "jax.lax.integer_pow": [[389, null]], "jax.lax.iota": [[390, null]], "jax.lax.is_finite": [[391, null]], "jax.lax.le": [[392, null]], "jax.lax.lgamma": [[393, null]], "jax.lax.linalg.SvdAlgorithm": [[394, null]], "jax.lax.linalg.cholesky": [[395, null]], "jax.lax.linalg.cholesky_update": [[396, null]], "jax.lax.linalg.eig": [[397, null]], "jax.lax.linalg.eigh": [[398, null]], "jax.lax.linalg.hessenberg": [[399, null]], "jax.lax.linalg.householder_product": [[400, null]], "jax.lax.linalg.lu": [[401, null]], "jax.lax.linalg.lu_pivots_to_permutation": [[402, null]], "jax.lax.linalg.qdwh": [[403, null]], "jax.lax.linalg.qr": [[404, null]], "jax.lax.linalg.schur": [[405, null]], "jax.lax.linalg.svd": [[406, null]], "jax.lax.linalg.symmetric_product": [[407, null]], "jax.lax.linalg.triangular_solve": [[408, null]], "jax.lax.linalg.tridiagonal": [[409, null]], "jax.lax.linalg.tridiagonal_solve": [[410, null]], "jax.lax.log": [[411, null]], "jax.lax.log1p": [[412, null]], "jax.lax.logistic": [[413, null]], "jax.lax.lt": [[414, null]], "jax.lax.map": [[415, null]], "jax.lax.max": [[416, null]], "jax.lax.min": [[417, null]], "jax.lax.mul": [[418, null]], "jax.lax.ne": [[419, null]], "jax.lax.neg": [[420, null]], "jax.lax.nextafter": [[421, null]], "jax.lax.optimization_barrier": [[422, null]], "jax.lax.pad": [[423, null]], "jax.lax.platform_dependent": [[424, null]], "jax.lax.pmax": [[425, null]], "jax.lax.pmean": [[426, null]], "jax.lax.pmin": [[427, null]], "jax.lax.polygamma": [[428, null]], "jax.lax.population_count": [[429, null]], "jax.lax.pow": [[430, null]], "jax.lax.ppermute": [[431, null]], "jax.lax.pshuffle": [[432, null]], "jax.lax.psum": [[433, null]], "jax.lax.psum_scatter": [[434, null]], "jax.lax.pswapaxes": [[435, null]], "jax.lax.random_gamma_grad": [[436, null]], "jax.lax.real": [[437, null]], "jax.lax.reciprocal": [[438, null]], "jax.lax.reduce": [[439, null]], "jax.lax.reduce_and": [[440, null]], "jax.lax.reduce_max": [[441, null]], "jax.lax.reduce_min": [[442, null]], "jax.lax.reduce_or": [[443, null]], "jax.lax.reduce_precision": [[444, null]], "jax.lax.reduce_prod": [[445, null]], "jax.lax.reduce_sum": [[446, null]], "jax.lax.reduce_window": [[447, null]], "jax.lax.reduce_xor": [[448, null]], "jax.lax.rem": [[449, null]], "jax.lax.reshape": [[450, null]], "jax.lax.rev": [[451, null]], "jax.lax.rng_bit_generator": [[452, null]], "jax.lax.rng_uniform": [[453, null]], "jax.lax.round": [[454, null]], "jax.lax.rsqrt": [[455, null]], "jax.lax.scan": [[456, null]], "jax.lax.scatter": [[457, null]], "jax.lax.scatter_add": [[458, null]], "jax.lax.scatter_apply": [[459, null]], "jax.lax.scatter_max": [[460, null]], "jax.lax.scatter_min": [[461, null]], "jax.lax.scatter_mul": [[462, null]], "jax.lax.select": [[463, null]], "jax.lax.select_n": [[464, null]], "jax.lax.shift_left": [[465, null]], "jax.lax.shift_right_arithmetic": [[466, null]], "jax.lax.shift_right_logical": [[467, null]], "jax.lax.sign": [[468, null]], "jax.lax.sin": [[469, null]], "jax.lax.sinh": [[470, null]], "jax.lax.slice": [[471, null]], "jax.lax.slice_in_dim": [[472, null]], "jax.lax.sort": [[473, null]], "jax.lax.sort_key_val": [[474, null]], "jax.lax.split": [[475, null]], "jax.lax.sqrt": [[476, null]], "jax.lax.square": [[477, null]], "jax.lax.squeeze": [[478, null]], "jax.lax.stop_gradient": [[479, null]], "jax.lax.sub": [[480, null]], "jax.lax.switch": [[481, null]], "jax.lax.tan": [[482, null]], "jax.lax.tanh": [[483, null]], "jax.lax.top_k": [[484, null]], "jax.lax.transpose": [[485, null]], "jax.lax.while_loop": [[486, null]], "jax.lax.with_sharding_constraint": [[487, null]], "jax.lax.zeros_like_array": [[488, null]], "jax.lax.zeta": [[489, null]], "jax.lib module": [[1396, null]], "jax.lib.xla_bridge": [[1396, "jax-lib-xla-bridge"]], "jax.lib.xla_bridge.get_backend": [[490, null]], "jax.lib.xla_bridge.get_compile_options": [[491, null]], "jax.lib.xla_client": [[1396, "jax-lib-xla-client"]], "jax.linear_transpose": [[492, null]], "jax.linearize": [[493, null]], "jax.live_arrays": [[494, null]], "jax.local_device_count": [[495, null]], "jax.local_devices": [[496, null]], "jax.log_compiles": [[497, null]], "jax.make_array_from_callback": [[498, null]], "jax.make_array_from_process_local_data": [[499, null]], "jax.make_array_from_single_device_arrays": [[500, null]], "jax.make_jaxpr": [[501, null]], "jax.make_mesh": [[502, null]], "jax.named_call": [[503, null]], "jax.named_scope": [[504, null]], "jax.nn module": [[1397, null]], "jax.nn.celu": [[505, null]], "jax.nn.dot_product_attention": [[506, null]], "jax.nn.elu": [[507, null]], "jax.nn.gelu": [[508, null]], "jax.nn.get_scaled_dot_general_config": [[509, null]], "jax.nn.glu": [[510, null]], "jax.nn.hard_sigmoid": [[511, null]], "jax.nn.hard_silu": [[512, null]], "jax.nn.hard_swish": [[513, null]], "jax.nn.hard_tanh": [[514, null]], "jax.nn.identity": [[515, null]], "jax.nn.initializers module": [[1398, null]], "jax.nn.initializers.constant": [[516, null]], "jax.nn.initializers.delta_orthogonal": [[517, null]], "jax.nn.initializers.glorot_normal": [[518, null]], "jax.nn.initializers.glorot_uniform": [[519, null]], "jax.nn.initializers.he_normal": [[520, null]], "jax.nn.initializers.he_uniform": [[521, null]], "jax.nn.initializers.lecun_normal": [[522, null]], "jax.nn.initializers.lecun_uniform": [[523, null]], "jax.nn.initializers.normal": [[524, null]], "jax.nn.initializers.ones": [[525, null]], "jax.nn.initializers.orthogonal": [[526, null]], "jax.nn.initializers.truncated_normal": [[527, null]], "jax.nn.initializers.uniform": [[528, null]], "jax.nn.initializers.variance_scaling": [[529, null]], "jax.nn.initializers.zeros": [[530, null]], "jax.nn.leaky_relu": [[531, null]], "jax.nn.log_sigmoid": [[532, null]], "jax.nn.log_softmax": [[533, null]], "jax.nn.logsumexp": [[534, null]], "jax.nn.mish": [[535, null]], "jax.nn.one_hot": [[536, null]], "jax.nn.relu": [[537, null]], "jax.nn.relu6": [[538, null]], "jax.nn.scaled_dot_general": [[539, null]], "jax.nn.scaled_matmul": [[540, null]], "jax.nn.selu": [[541, null]], "jax.nn.sigmoid": [[542, null]], "jax.nn.silu": [[543, null]], "jax.nn.soft_sign": [[544, null]], "jax.nn.softmax": [[545, null]], "jax.nn.softplus": [[546, null]], "jax.nn.sparse_plus": [[547, null]], "jax.nn.sparse_sigmoid": [[548, null]], "jax.nn.squareplus": [[549, null]], "jax.nn.standardize": [[550, null]], "jax.nn.swish": [[551, null]], "jax.no_tracing": [[552, null]], "jax.numpy module": [[1399, null]], "jax.numpy.ComplexWarning": [[553, null]], "jax.numpy.abs": [[554, null]], "jax.numpy.absolute": [[555, null]], "jax.numpy.acos": [[556, null]], "jax.numpy.acosh": [[557, null]], "jax.numpy.add": [[558, null]], "jax.numpy.all": [[559, null]], "jax.numpy.allclose": [[560, null]], "jax.numpy.amax": [[561, null]], "jax.numpy.amin": [[562, null]], "jax.numpy.angle": [[563, null]], "jax.numpy.any": [[564, null]], "jax.numpy.append": [[565, null]], "jax.numpy.apply_along_axis": [[566, null]], "jax.numpy.apply_over_axes": [[567, null]], "jax.numpy.arange": [[568, null]], "jax.numpy.arccos": [[569, null]], "jax.numpy.arccosh": [[570, null]], "jax.numpy.arcsin": [[571, null]], "jax.numpy.arcsinh": [[572, null]], "jax.numpy.arctan": [[573, null]], "jax.numpy.arctan2": [[574, null]], "jax.numpy.arctanh": [[575, null]], "jax.numpy.argmax": [[576, null]], "jax.numpy.argmin": [[577, null]], "jax.numpy.argpartition": [[578, null]], "jax.numpy.argsort": [[579, null]], "jax.numpy.argwhere": [[580, null]], "jax.numpy.around": [[581, null]], "jax.numpy.array": [[582, null]], "jax.numpy.array_equal": [[583, null]], "jax.numpy.array_equiv": [[584, null]], "jax.numpy.array_repr": [[585, null]], "jax.numpy.array_split": [[586, null]], "jax.numpy.array_str": [[587, null]], "jax.numpy.asarray": [[588, null]], "jax.numpy.asin": [[589, null]], "jax.numpy.asinh": [[590, null]], "jax.numpy.astype": [[591, null]], "jax.numpy.atan": [[592, null]], "jax.numpy.atan2": [[593, null]], "jax.numpy.atanh": [[594, null]], "jax.numpy.atleast_1d": [[595, null]], "jax.numpy.atleast_2d": [[596, null]], "jax.numpy.atleast_3d": [[597, null]], "jax.numpy.average": [[598, null]], "jax.numpy.bartlett": [[599, null]], "jax.numpy.bincount": [[600, null]], "jax.numpy.bitwise_and": [[601, null]], "jax.numpy.bitwise_count": [[602, null]], "jax.numpy.bitwise_invert": [[603, null]], "jax.numpy.bitwise_left_shift": [[604, null]], "jax.numpy.bitwise_not": [[605, null]], "jax.numpy.bitwise_or": [[606, null]], "jax.numpy.bitwise_right_shift": [[607, null]], "jax.numpy.bitwise_xor": [[608, null]], "jax.numpy.blackman": [[609, null]], "jax.numpy.block": [[610, null]], "jax.numpy.bool_": [[611, null]], "jax.numpy.broadcast_arrays": [[612, null]], "jax.numpy.broadcast_shapes": [[613, null]], "jax.numpy.broadcast_to": [[614, null]], "jax.numpy.c_": [[615, null]], "jax.numpy.can_cast": [[616, null]], "jax.numpy.cbrt": [[617, null]], "jax.numpy.cdouble": [[618, null]], "jax.numpy.ceil": [[619, null]], "jax.numpy.character": [[620, null]], "jax.numpy.choose": [[621, null]], "jax.numpy.clip": [[622, null]], "jax.numpy.column_stack": [[623, null]], "jax.numpy.complex128": [[624, null]], "jax.numpy.complex64": [[625, null]], "jax.numpy.complex_": [[626, null]], "jax.numpy.complexfloating": [[627, null]], "jax.numpy.compress": [[628, null]], "jax.numpy.concat": [[629, null]], "jax.numpy.concatenate": [[630, null]], "jax.numpy.conj": [[631, null]], "jax.numpy.conjugate": [[632, null]], "jax.numpy.convolve": [[633, null]], "jax.numpy.copy": [[634, null]], "jax.numpy.copysign": [[635, null]], "jax.numpy.corrcoef": [[636, null]], "jax.numpy.correlate": [[637, null]], "jax.numpy.cos": [[638, null]], "jax.numpy.cosh": [[639, null]], "jax.numpy.count_nonzero": [[640, null]], "jax.numpy.cov": [[641, null]], "jax.numpy.cross": [[642, null]], "jax.numpy.csingle": [[643, null]], "jax.numpy.cumprod": [[644, null]], "jax.numpy.cumsum": [[645, null]], "jax.numpy.cumulative_prod": [[646, null]], "jax.numpy.cumulative_sum": [[647, null]], "jax.numpy.deg2rad": [[648, null]], "jax.numpy.degrees": [[649, null]], "jax.numpy.delete": [[650, null]], "jax.numpy.diag": [[651, null]], "jax.numpy.diag_indices": [[652, null]], "jax.numpy.diag_indices_from": [[653, null]], "jax.numpy.diagflat": [[654, null]], "jax.numpy.diagonal": [[655, null]], "jax.numpy.diff": [[656, null]], "jax.numpy.digitize": [[657, null]], "jax.numpy.divide": [[658, null]], "jax.numpy.divmod": [[659, null]], "jax.numpy.dot": [[660, null]], "jax.numpy.double": [[661, null]], "jax.numpy.dsplit": [[662, null]], "jax.numpy.dstack": [[663, null]], "jax.numpy.dtype": [[664, null]], "jax.numpy.ediff1d": [[665, null]], "jax.numpy.einsum": [[666, null]], "jax.numpy.einsum_path": [[667, null]], "jax.numpy.empty": [[668, null]], "jax.numpy.empty_like": [[669, null]], "jax.numpy.equal": [[670, null]], "jax.numpy.exp": [[671, null]], "jax.numpy.exp2": [[672, null]], "jax.numpy.expand_dims": [[673, null]], "jax.numpy.expm1": [[674, null]], "jax.numpy.extract": [[675, null]], "jax.numpy.eye": [[676, null]], "jax.numpy.fabs": [[677, null]], "jax.numpy.fft": [[1399, "module-jax.numpy.fft"]], "jax.numpy.fft.fft": [[678, null]], "jax.numpy.fft.fft2": [[679, null]], "jax.numpy.fft.fftfreq": [[680, null]], "jax.numpy.fft.fftn": [[681, null]], "jax.numpy.fft.fftshift": [[682, null]], "jax.numpy.fft.hfft": [[683, null]], "jax.numpy.fft.ifft": [[684, null]], "jax.numpy.fft.ifft2": [[685, null]], "jax.numpy.fft.ifftn": [[686, null]], "jax.numpy.fft.ifftshift": [[687, null]], "jax.numpy.fft.ihfft": [[688, null]], "jax.numpy.fft.irfft": [[689, null]], "jax.numpy.fft.irfft2": [[690, null]], "jax.numpy.fft.irfftn": [[691, null]], "jax.numpy.fft.rfft": [[692, null]], "jax.numpy.fft.rfft2": [[693, null]], "jax.numpy.fft.rfftfreq": [[694, null]], "jax.numpy.fft.rfftn": [[695, null]], "jax.numpy.fill_diagonal": [[696, null]], "jax.numpy.finfo": [[697, null]], "jax.numpy.fix": [[698, null]], "jax.numpy.flatnonzero": [[699, null]], "jax.numpy.flexible": [[700, null]], "jax.numpy.flip": [[701, null]], "jax.numpy.fliplr": [[702, null]], "jax.numpy.flipud": [[703, null]], "jax.numpy.float16": [[704, null]], "jax.numpy.float32": [[705, null]], "jax.numpy.float64": [[706, null]], "jax.numpy.float_": [[707, null]], "jax.numpy.float_power": [[708, null]], "jax.numpy.floating": [[709, null]], "jax.numpy.floor": [[710, null]], "jax.numpy.floor_divide": [[711, null]], "jax.numpy.fmax": [[712, null]], "jax.numpy.fmin": [[713, null]], "jax.numpy.fmod": [[714, null]], "jax.numpy.frexp": [[715, null]], "jax.numpy.from_dlpack": [[716, null]], "jax.numpy.frombuffer": [[717, null]], "jax.numpy.fromfile": [[718, null]], "jax.numpy.fromfunction": [[719, null]], "jax.numpy.fromiter": [[720, null]], "jax.numpy.frompyfunc": [[721, null]], "jax.numpy.fromstring": [[722, null]], "jax.numpy.full": [[723, null]], "jax.numpy.full_like": [[724, null]], "jax.numpy.gcd": [[725, null]], "jax.numpy.generic": [[726, null]], "jax.numpy.geomspace": [[727, null]], "jax.numpy.get_printoptions": [[728, null]], "jax.numpy.gradient": [[729, null]], "jax.numpy.greater": [[730, null]], "jax.numpy.greater_equal": [[731, null]], "jax.numpy.hamming": [[732, null]], "jax.numpy.hanning": [[733, null]], "jax.numpy.heaviside": [[734, null]], "jax.numpy.histogram": [[735, null]], "jax.numpy.histogram2d": [[736, null]], "jax.numpy.histogram_bin_edges": [[737, null]], "jax.numpy.histogramdd": [[738, null]], "jax.numpy.hsplit": [[739, null]], "jax.numpy.hstack": [[740, null]], "jax.numpy.hypot": [[741, null]], "jax.numpy.i0": [[742, null]], "jax.numpy.identity": [[743, null]], "jax.numpy.iinfo": [[744, null]], "jax.numpy.imag": [[745, null]], "jax.numpy.index_exp": [[746, null]], "jax.numpy.indices": [[747, null]], "jax.numpy.inexact": [[748, null]], "jax.numpy.inner": [[749, null]], "jax.numpy.insert": [[750, null]], "jax.numpy.int16": [[751, null]], "jax.numpy.int32": [[752, null]], "jax.numpy.int64": [[753, null]], "jax.numpy.int8": [[754, null]], "jax.numpy.int_": [[755, null]], "jax.numpy.integer": [[756, null]], "jax.numpy.interp": [[757, null]], "jax.numpy.intersect1d": [[758, null]], "jax.numpy.invert": [[759, null]], "jax.numpy.isclose": [[760, null]], "jax.numpy.iscomplex": [[761, null]], "jax.numpy.iscomplexobj": [[762, null]], "jax.numpy.isdtype": [[763, null]], "jax.numpy.isfinite": [[764, null]], "jax.numpy.isin": [[765, null]], "jax.numpy.isinf": [[766, null]], "jax.numpy.isnan": [[767, null]], "jax.numpy.isneginf": [[768, null]], "jax.numpy.isposinf": [[769, null]], "jax.numpy.isreal": [[770, null]], "jax.numpy.isrealobj": [[771, null]], "jax.numpy.isscalar": [[772, null]], "jax.numpy.issubdtype": [[773, null]], "jax.numpy.iterable": [[774, null]], "jax.numpy.ix_": [[775, null]], "jax.numpy.kaiser": [[776, null]], "jax.numpy.kron": [[777, null]], "jax.numpy.lcm": [[778, null]], "jax.numpy.ldexp": [[779, null]], "jax.numpy.left_shift": [[780, null]], "jax.numpy.less": [[781, null]], "jax.numpy.less_equal": [[782, null]], "jax.numpy.lexsort": [[783, null]], "jax.numpy.linalg": [[1399, "module-jax.numpy.linalg"]], "jax.numpy.linalg.cholesky": [[784, null]], "jax.numpy.linalg.cond": [[785, null]], "jax.numpy.linalg.cross": [[786, null]], "jax.numpy.linalg.det": [[787, null]], "jax.numpy.linalg.diagonal": [[788, null]], "jax.numpy.linalg.eig": [[789, null]], "jax.numpy.linalg.eigh": [[790, null]], "jax.numpy.linalg.eigvals": [[791, null]], "jax.numpy.linalg.eigvalsh": [[792, null]], "jax.numpy.linalg.inv": [[793, null]], "jax.numpy.linalg.lstsq": [[794, null]], "jax.numpy.linalg.matmul": [[795, null]], "jax.numpy.linalg.matrix_norm": [[796, null]], "jax.numpy.linalg.matrix_power": [[797, null]], "jax.numpy.linalg.matrix_rank": [[798, null]], "jax.numpy.linalg.matrix_transpose": [[799, null]], "jax.numpy.linalg.multi_dot": [[800, null]], "jax.numpy.linalg.norm": [[801, null]], "jax.numpy.linalg.outer": [[802, null]], "jax.numpy.linalg.pinv": [[803, null]], "jax.numpy.linalg.qr": [[804, null]], "jax.numpy.linalg.slogdet": [[805, null]], "jax.numpy.linalg.solve": [[806, null]], "jax.numpy.linalg.svd": [[807, null]], "jax.numpy.linalg.svdvals": [[808, null]], "jax.numpy.linalg.tensordot": [[809, null]], "jax.numpy.linalg.tensorinv": [[810, null]], "jax.numpy.linalg.tensorsolve": [[811, null]], "jax.numpy.linalg.trace": [[812, null]], "jax.numpy.linalg.vecdot": [[813, null]], "jax.numpy.linalg.vector_norm": [[814, null]], "jax.numpy.linspace": [[815, null]], "jax.numpy.load": [[816, null]], "jax.numpy.log": [[817, null]], "jax.numpy.log10": [[818, null]], "jax.numpy.log1p": [[819, null]], "jax.numpy.log2": [[820, null]], "jax.numpy.logaddexp": [[821, null]], "jax.numpy.logaddexp2": [[822, null]], "jax.numpy.logical_and": [[823, null]], "jax.numpy.logical_not": [[824, null]], "jax.numpy.logical_or": [[825, null]], "jax.numpy.logical_xor": [[826, null]], "jax.numpy.logspace": [[827, null]], "jax.numpy.mask_indices": [[828, null]], "jax.numpy.matmul": [[829, null]], "jax.numpy.matrix_transpose": [[830, null]], "jax.numpy.matvec": [[831, null]], "jax.numpy.max": [[832, null]], "jax.numpy.maximum": [[833, null]], "jax.numpy.mean": [[834, null]], "jax.numpy.median": [[835, null]], "jax.numpy.meshgrid": [[836, null]], "jax.numpy.mgrid": [[837, null]], "jax.numpy.min": [[838, null]], "jax.numpy.minimum": [[839, null]], "jax.numpy.mod": [[840, null]], "jax.numpy.modf": [[841, null]], "jax.numpy.moveaxis": [[842, null]], "jax.numpy.multiply": [[843, null]], "jax.numpy.nan_to_num": [[844, null]], "jax.numpy.nanargmax": [[845, null]], "jax.numpy.nanargmin": [[846, null]], "jax.numpy.nancumprod": [[847, null]], "jax.numpy.nancumsum": [[848, null]], "jax.numpy.nanmax": [[849, null]], "jax.numpy.nanmean": [[850, null]], "jax.numpy.nanmedian": [[851, null]], "jax.numpy.nanmin": [[852, null]], "jax.numpy.nanpercentile": [[853, null]], "jax.numpy.nanprod": [[854, null]], "jax.numpy.nanquantile": [[855, null]], "jax.numpy.nanstd": [[856, null]], "jax.numpy.nansum": [[857, null]], "jax.numpy.nanvar": [[858, null]], "jax.numpy.ndarray": [[859, null]], "jax.numpy.ndarray.at": [[860, null]], "jax.numpy.ndim": [[861, null]], "jax.numpy.negative": [[862, null]], "jax.numpy.nextafter": [[863, null]], "jax.numpy.nonzero": [[864, null]], "jax.numpy.not_equal": [[865, null]], "jax.numpy.number": [[866, null]], "jax.numpy.object_": [[867, null]], "jax.numpy.ogrid": [[868, null]], "jax.numpy.ones": [[869, null]], "jax.numpy.ones_like": [[870, null]], "jax.numpy.outer": [[871, null]], "jax.numpy.packbits": [[872, null]], "jax.numpy.pad": [[873, null]], "jax.numpy.partition": [[874, null]], "jax.numpy.percentile": [[875, null]], "jax.numpy.permute_dims": [[876, null]], "jax.numpy.piecewise": [[877, null]], "jax.numpy.place": [[878, null]], "jax.numpy.poly": [[879, null]], "jax.numpy.polyadd": [[880, null]], "jax.numpy.polyder": [[881, null]], "jax.numpy.polydiv": [[882, null]], "jax.numpy.polyfit": [[883, null]], "jax.numpy.polyint": [[884, null]], "jax.numpy.polymul": [[885, null]], "jax.numpy.polysub": [[886, null]], "jax.numpy.polyval": [[887, null]], "jax.numpy.positive": [[888, null]], "jax.numpy.pow": [[889, null]], "jax.numpy.power": [[890, null]], "jax.numpy.printoptions": [[891, null]], "jax.numpy.prod": [[892, null]], "jax.numpy.promote_types": [[893, null]], "jax.numpy.ptp": [[894, null]], "jax.numpy.put": [[895, null]], "jax.numpy.put_along_axis": [[896, null]], "jax.numpy.quantile": [[897, null]], "jax.numpy.r_": [[898, null]], "jax.numpy.rad2deg": [[899, null]], "jax.numpy.radians": [[900, null]], "jax.numpy.ravel": [[901, null]], "jax.numpy.ravel_multi_index": [[902, null]], "jax.numpy.real": [[903, null]], "jax.numpy.reciprocal": [[904, null]], "jax.numpy.remainder": [[905, null]], "jax.numpy.repeat": [[906, null]], "jax.numpy.reshape": [[907, null]], "jax.numpy.resize": [[908, null]], "jax.numpy.result_type": [[909, null]], "jax.numpy.right_shift": [[910, null]], "jax.numpy.rint": [[911, null]], "jax.numpy.roll": [[912, null]], "jax.numpy.rollaxis": [[913, null]], "jax.numpy.roots": [[914, null]], "jax.numpy.rot90": [[915, null]], "jax.numpy.round": [[916, null]], "jax.numpy.s_": [[917, null]], "jax.numpy.save": [[918, null]], "jax.numpy.savez": [[919, null]], "jax.numpy.searchsorted": [[920, null]], "jax.numpy.select": [[921, null]], "jax.numpy.set_printoptions": [[922, null]], "jax.numpy.setdiff1d": [[923, null]], "jax.numpy.setxor1d": [[924, null]], "jax.numpy.shape": [[925, null]], "jax.numpy.sign": [[926, null]], "jax.numpy.signbit": [[927, null]], "jax.numpy.signedinteger": [[928, null]], "jax.numpy.sin": [[929, null]], "jax.numpy.sinc": [[930, null]], "jax.numpy.single": [[931, null]], "jax.numpy.sinh": [[932, null]], "jax.numpy.size": [[933, null]], "jax.numpy.sort": [[934, null]], "jax.numpy.sort_complex": [[935, null]], "jax.numpy.spacing": [[936, null]], "jax.numpy.split": [[937, null]], "jax.numpy.sqrt": [[938, null]], "jax.numpy.square": [[939, null]], "jax.numpy.squeeze": [[940, null]], "jax.numpy.stack": [[941, null]], "jax.numpy.std": [[942, null]], "jax.numpy.subtract": [[943, null]], "jax.numpy.sum": [[944, null]], "jax.numpy.swapaxes": [[945, null]], "jax.numpy.take": [[946, null]], "jax.numpy.take_along_axis": [[947, null]], "jax.numpy.tan": [[948, null]], "jax.numpy.tanh": [[949, null]], "jax.numpy.tensordot": [[950, null]], "jax.numpy.tile": [[951, null]], "jax.numpy.trace": [[952, null]], "jax.numpy.transpose": [[953, null]], "jax.numpy.trapezoid": [[954, null]], "jax.numpy.tri": [[955, null]], "jax.numpy.tril": [[956, null]], "jax.numpy.tril_indices": [[957, null]], "jax.numpy.tril_indices_from": [[958, null]], "jax.numpy.trim_zeros": [[959, null]], "jax.numpy.triu": [[960, null]], "jax.numpy.triu_indices": [[961, null]], "jax.numpy.triu_indices_from": [[962, null]], "jax.numpy.true_divide": [[963, null]], "jax.numpy.trunc": [[964, null]], "jax.numpy.ufunc": [[965, null]], "jax.numpy.uint": [[966, null]], "jax.numpy.uint16": [[967, null]], "jax.numpy.uint32": [[968, null]], "jax.numpy.uint64": [[969, null]], "jax.numpy.uint8": [[970, null]], "jax.numpy.union1d": [[971, null]], "jax.numpy.unique": [[972, null]], "jax.numpy.unique_all": [[973, null]], "jax.numpy.unique_counts": [[974, null]], "jax.numpy.unique_inverse": [[975, null]], "jax.numpy.unique_values": [[976, null]], "jax.numpy.unpackbits": [[977, null]], "jax.numpy.unravel_index": [[978, null]], "jax.numpy.unsignedinteger": [[979, null]], "jax.numpy.unstack": [[980, null]], "jax.numpy.unwrap": [[981, null]], "jax.numpy.vander": [[982, null]], "jax.numpy.var": [[983, null]], "jax.numpy.vdot": [[984, null]], "jax.numpy.vecdot": [[985, null]], "jax.numpy.vecmat": [[986, null]], "jax.numpy.vectorize": [[987, null]], "jax.numpy.vsplit": [[988, null]], "jax.numpy.vstack": [[989, null]], "jax.numpy.where": [[990, null]], "jax.numpy.zeros": [[991, null]], "jax.numpy.zeros_like": [[992, null]], "jax.numpy_rank_promotion": [[993, null]], "jax.ops module": [[1400, null]], "jax.ops.segment_max": [[994, null]], "jax.ops.segment_min": [[995, null]], "jax.ops.segment_prod": [[996, null]], "jax.ops.segment_sum": [[997, null]], "jax.pmap": [[998, null]], "jax.print_environment_info": [[999, null]], "jax.process_count": [[1000, null]], "jax.process_index": [[1001, null]], "jax.process_indices": [[1002, null]], "jax.profiler module": [[1401, null]], "jax.profiler.StepTraceAnnotation": [[1003, null]], "jax.profiler.TraceAnnotation": [[1004, null]], "jax.profiler.annotate_function": [[1005, null]], "jax.profiler.device_memory_profile": [[1006, null]], "jax.profiler.save_device_memory_profile": [[1007, null]], "jax.profiler.start_server": [[1008, null]], "jax.profiler.start_trace": [[1009, null]], "jax.profiler.stop_trace": [[1010, null]], "jax.profiler.trace": [[1011, null]], "jax.pure_callback": [[1012, null]], "jax.random module": [[1402, null]], "jax.random.PRNGKey": [[1013, null]], "jax.random.ball": [[1014, null]], "jax.random.bernoulli": [[1015, null]], "jax.random.beta": [[1016, null]], "jax.random.binomial": [[1017, null]], "jax.random.bits": [[1018, null]], "jax.random.categorical": [[1019, null]], "jax.random.cauchy": [[1020, null]], "jax.random.chisquare": [[1021, null]], "jax.random.choice": [[1022, null]], "jax.random.clone": [[1023, null]], "jax.random.dirichlet": [[1024, null]], "jax.random.double_sided_maxwell": [[1025, null]], "jax.random.exponential": [[1026, null]], "jax.random.f": [[1027, null]], "jax.random.fold_in": [[1028, null]], "jax.random.gamma": [[1029, null]], "jax.random.generalized_normal": [[1030, null]], "jax.random.geometric": [[1031, null]], "jax.random.gumbel": [[1032, null]], "jax.random.key": [[1033, null]], "jax.random.key_data": [[1034, null]], "jax.random.laplace": [[1035, null]], "jax.random.loggamma": [[1036, null]], "jax.random.logistic": [[1037, null]], "jax.random.lognormal": [[1038, null]], "jax.random.maxwell": [[1039, null]], "jax.random.multinomial": [[1040, null]], "jax.random.multivariate_normal": [[1041, null]], "jax.random.normal": [[1042, null]], "jax.random.orthogonal": [[1043, null]], "jax.random.pareto": [[1044, null]], "jax.random.permutation": [[1045, null]], "jax.random.poisson": [[1046, null]], "jax.random.rademacher": [[1047, null]], "jax.random.randint": [[1048, null]], "jax.random.rayleigh": [[1049, null]], "jax.random.split": [[1050, null]], "jax.random.t": [[1051, null]], "jax.random.triangular": [[1052, null]], "jax.random.truncated_normal": [[1053, null]], "jax.random.uniform": [[1054, null]], "jax.random.wald": [[1055, null]], "jax.random.weibull_min": [[1056, null]], "jax.random.wrap_key_data": [[1057, null]], "jax.remat / jax.checkpoint changes: what you need to know": [[1413, null]], "jax.scipy module": [[1403, null]], "jax.scipy.cluster": [[1403, "module-jax.scipy.cluster.vq"]], "jax.scipy.cluster.vq.vq": [[1058, null]], "jax.scipy.fft": [[1403, "module-jax.scipy.fft"]], "jax.scipy.fft.dct": [[1059, null]], "jax.scipy.fft.dctn": [[1060, null]], "jax.scipy.fft.idct": [[1061, null]], "jax.scipy.fft.idctn": [[1062, null]], "jax.scipy.integrate": [[1403, "module-jax.scipy.integrate"]], "jax.scipy.integrate.trapezoid": [[1063, null]], "jax.scipy.interpolate": [[1403, "module-jax.scipy.interpolate"]], "jax.scipy.interpolate.RegularGridInterpolator": [[1064, null]], "jax.scipy.linalg": [[1403, "module-jax.scipy.linalg"]], "jax.scipy.linalg.block_diag": [[1065, null]], "jax.scipy.linalg.cho_factor": [[1066, null]], "jax.scipy.linalg.cho_solve": [[1067, null]], "jax.scipy.linalg.cholesky": [[1068, null]], "jax.scipy.linalg.det": [[1069, null]], "jax.scipy.linalg.eigh": [[1070, null]], "jax.scipy.linalg.eigh_tridiagonal": [[1071, null]], "jax.scipy.linalg.expm": [[1072, null]], "jax.scipy.linalg.expm_frechet": [[1073, null]], "jax.scipy.linalg.funm": [[1074, null]], "jax.scipy.linalg.hessenberg": [[1075, null]], "jax.scipy.linalg.hilbert": [[1076, null]], "jax.scipy.linalg.inv": [[1077, null]], "jax.scipy.linalg.lu": [[1078, null]], "jax.scipy.linalg.lu_factor": [[1079, null]], "jax.scipy.linalg.lu_solve": [[1080, null]], "jax.scipy.linalg.pascal": [[1081, null]], "jax.scipy.linalg.polar": [[1082, null]], "jax.scipy.linalg.qr": [[1083, null]], "jax.scipy.linalg.rsf2csf": [[1084, null]], "jax.scipy.linalg.schur": [[1085, null]], "jax.scipy.linalg.solve": [[1086, null]], "jax.scipy.linalg.solve_triangular": [[1087, null]], "jax.scipy.linalg.sqrtm": [[1088, null]], "jax.scipy.linalg.svd": [[1089, null]], "jax.scipy.linalg.toeplitz": [[1090, null]], "jax.scipy.ndimage": [[1403, "module-jax.scipy.ndimage"]], "jax.scipy.ndimage.map_coordinates": [[1091, null]], "jax.scipy.optimize": [[1403, "module-jax.scipy.optimize"]], "jax.scipy.optimize.OptimizeResults": [[1092, null]], "jax.scipy.optimize.minimize": [[1093, null]], "jax.scipy.signal": [[1403, "module-jax.scipy.signal"]], "jax.scipy.signal.convolve": [[1094, null]], "jax.scipy.signal.convolve2d": [[1095, null]], "jax.scipy.signal.correlate": [[1096, null]], "jax.scipy.signal.correlate2d": [[1097, null]], "jax.scipy.signal.csd": [[1098, null]], "jax.scipy.signal.detrend": [[1099, null]], "jax.scipy.signal.fftconvolve": [[1100, null]], "jax.scipy.signal.istft": [[1101, null]], "jax.scipy.signal.stft": [[1102, null]], "jax.scipy.signal.welch": [[1103, null]], "jax.scipy.sparse.linalg": [[1403, "module-jax.scipy.sparse.linalg"]], "jax.scipy.sparse.linalg.bicgstab": [[1104, null]], "jax.scipy.sparse.linalg.cg": [[1105, null]], "jax.scipy.sparse.linalg.gmres": [[1106, null]], "jax.scipy.spatial.transform": [[1403, "module-jax.scipy.spatial.transform"]], "jax.scipy.spatial.transform.Rotation": [[1107, null]], "jax.scipy.spatial.transform.Slerp": [[1108, null]], "jax.scipy.special": [[1403, "module-jax.scipy.special"]], "jax.scipy.special.bernoulli": [[1109, null]], "jax.scipy.special.beta": [[1110, null]], "jax.scipy.special.betainc": [[1111, null]], "jax.scipy.special.betaln": [[1112, null]], "jax.scipy.special.digamma": [[1113, null]], "jax.scipy.special.entr": [[1114, null]], "jax.scipy.special.erf": [[1115, null]], "jax.scipy.special.erfc": [[1116, null]], "jax.scipy.special.erfinv": [[1117, null]], "jax.scipy.special.exp1": [[1118, null]], "jax.scipy.special.expi": [[1119, null]], "jax.scipy.special.expit": [[1120, null]], "jax.scipy.special.expn": [[1121, null]], "jax.scipy.special.factorial": [[1122, null]], "jax.scipy.special.fresnel": [[1123, null]], "jax.scipy.special.gamma": [[1124, null]], "jax.scipy.special.gammainc": [[1125, null]], "jax.scipy.special.gammaincc": [[1126, null]], "jax.scipy.special.gammaln": [[1127, null]], "jax.scipy.special.gammasgn": [[1128, null]], "jax.scipy.special.hyp1f1": [[1129, null]], "jax.scipy.special.i0": [[1130, null]], "jax.scipy.special.i0e": [[1131, null]], "jax.scipy.special.i1": [[1132, null]], "jax.scipy.special.i1e": [[1133, null]], "jax.scipy.special.kl_div": [[1134, null]], "jax.scipy.special.log_ndtr": [[1135, null]], "jax.scipy.special.log_softmax": [[1136, null]], "jax.scipy.special.logit": [[1137, null]], "jax.scipy.special.logsumexp": [[1138, null]], "jax.scipy.special.lpmn": [[1139, null]], "jax.scipy.special.lpmn_values": [[1140, null]], "jax.scipy.special.multigammaln": [[1141, null]], "jax.scipy.special.ndtr": [[1142, null]], "jax.scipy.special.ndtri": [[1143, null]], "jax.scipy.special.poch": [[1144, null]], "jax.scipy.special.polygamma": [[1145, null]], "jax.scipy.special.rel_entr": [[1146, null]], "jax.scipy.special.softmax": [[1147, null]], "jax.scipy.special.spence": [[1148, null]], "jax.scipy.special.sph_harm": [[1149, null]], "jax.scipy.special.xlog1py": [[1150, null]], "jax.scipy.special.xlogy": [[1151, null]], "jax.scipy.special.zeta": [[1152, null]], "jax.scipy.stats": [[1403, "module-jax.scipy.stats"]], "jax.scipy.stats.bernoulli": [[1403, "module-jax.scipy.stats.bernoulli"]], "jax.scipy.stats.bernoulli.cdf": [[1153, null]], "jax.scipy.stats.bernoulli.logpmf": [[1154, null]], "jax.scipy.stats.bernoulli.pmf": [[1155, null]], "jax.scipy.stats.bernoulli.ppf": [[1156, null]], "jax.scipy.stats.beta": [[1403, "module-jax.scipy.stats.beta"]], "jax.scipy.stats.beta.cdf": [[1157, null]], "jax.scipy.stats.beta.logcdf": [[1158, null]], "jax.scipy.stats.beta.logpdf": [[1159, null]], "jax.scipy.stats.beta.logsf": [[1160, null]], "jax.scipy.stats.beta.pdf": [[1161, null]], "jax.scipy.stats.beta.sf": [[1162, null]], "jax.scipy.stats.betabinom": [[1403, "module-jax.scipy.stats.betabinom"]], "jax.scipy.stats.betabinom.logpmf": [[1163, null]], "jax.scipy.stats.betabinom.pmf": [[1164, null]], "jax.scipy.stats.binom": [[1403, "module-jax.scipy.stats.binom"]], "jax.scipy.stats.binom.logpmf": [[1165, null]], "jax.scipy.stats.binom.pmf": [[1166, null]], "jax.scipy.stats.cauchy": [[1403, "module-jax.scipy.stats.cauchy"]], "jax.scipy.stats.cauchy.cdf": [[1167, null]], "jax.scipy.stats.cauchy.isf": [[1168, null]], "jax.scipy.stats.cauchy.logcdf": [[1169, null]], "jax.scipy.stats.cauchy.logpdf": [[1170, null]], "jax.scipy.stats.cauchy.logsf": [[1171, null]], "jax.scipy.stats.cauchy.pdf": [[1172, null]], "jax.scipy.stats.cauchy.ppf": [[1173, null]], "jax.scipy.stats.cauchy.sf": [[1174, null]], "jax.scipy.stats.chi2": [[1403, "module-jax.scipy.stats.chi2"]], "jax.scipy.stats.chi2.cdf": [[1175, null]], "jax.scipy.stats.chi2.logcdf": [[1176, null]], "jax.scipy.stats.chi2.logpdf": [[1177, null]], "jax.scipy.stats.chi2.logsf": [[1178, null]], "jax.scipy.stats.chi2.pdf": [[1179, null]], "jax.scipy.stats.chi2.sf": [[1180, null]], "jax.scipy.stats.dirichlet": [[1403, "module-jax.scipy.stats.dirichlet"]], "jax.scipy.stats.dirichlet.logpdf": [[1181, null]], "jax.scipy.stats.dirichlet.pdf": [[1182, null]], "jax.scipy.stats.expon": [[1403, "module-jax.scipy.stats.expon"]], "jax.scipy.stats.expon.cdf": [[1183, null]], "jax.scipy.stats.expon.logcdf": [[1184, null]], "jax.scipy.stats.expon.logpdf": [[1185, null]], "jax.scipy.stats.expon.logsf": [[1186, null]], "jax.scipy.stats.expon.pdf": [[1187, null]], "jax.scipy.stats.expon.ppf": [[1188, null]], "jax.scipy.stats.expon.sf": [[1189, null]], "jax.scipy.stats.gamma": [[1403, "module-jax.scipy.stats.gamma"]], "jax.scipy.stats.gamma.cdf": [[1190, null]], "jax.scipy.stats.gamma.logcdf": [[1191, null]], "jax.scipy.stats.gamma.logpdf": [[1192, null]], "jax.scipy.stats.gamma.logsf": [[1193, null]], "jax.scipy.stats.gamma.pdf": [[1194, null]], "jax.scipy.stats.gamma.sf": [[1195, null]], "jax.scipy.stats.gaussian_kde": [[1196, null], [1403, "jax-scipy-stats-gaussian-kde"]], "jax.scipy.stats.gaussian_kde.evaluate": [[1197, null]], "jax.scipy.stats.gaussian_kde.integrate_box_1d": [[1198, null]], "jax.scipy.stats.gaussian_kde.integrate_gaussian": [[1199, null]], "jax.scipy.stats.gaussian_kde.integrate_kde": [[1200, null]], "jax.scipy.stats.gaussian_kde.logpdf": [[1201, null]], "jax.scipy.stats.gaussian_kde.pdf": [[1202, null]], "jax.scipy.stats.gaussian_kde.resample": [[1203, null]], "jax.scipy.stats.gennorm": [[1403, "module-jax.scipy.stats.gennorm"]], "jax.scipy.stats.gennorm.cdf": [[1204, null]], "jax.scipy.stats.gennorm.logpdf": [[1205, null]], "jax.scipy.stats.gennorm.pdf": [[1206, null]], "jax.scipy.stats.geom": [[1403, "module-jax.scipy.stats.geom"]], "jax.scipy.stats.geom.logpmf": [[1207, null]], "jax.scipy.stats.geom.pmf": [[1208, null]], "jax.scipy.stats.laplace": [[1403, "module-jax.scipy.stats.laplace"]], "jax.scipy.stats.laplace.cdf": [[1209, null]], "jax.scipy.stats.laplace.logpdf": [[1210, null]], "jax.scipy.stats.laplace.pdf": [[1211, null]], "jax.scipy.stats.logistic": [[1403, "module-jax.scipy.stats.logistic"]], "jax.scipy.stats.logistic.cdf": [[1212, null]], "jax.scipy.stats.logistic.isf": [[1213, null]], "jax.scipy.stats.logistic.logpdf": [[1214, null]], "jax.scipy.stats.logistic.pdf": [[1215, null]], "jax.scipy.stats.logistic.ppf": [[1216, null]], "jax.scipy.stats.logistic.sf": [[1217, null]], "jax.scipy.stats.mode": [[1218, null]], "jax.scipy.stats.multinomial": [[1403, "module-jax.scipy.stats.multinomial"]], "jax.scipy.stats.multinomial.logpmf": [[1219, null]], "jax.scipy.stats.multinomial.pmf": [[1220, null]], "jax.scipy.stats.multivariate_normal": [[1403, "module-jax.scipy.stats.multivariate_normal"]], "jax.scipy.stats.multivariate_normal.logpdf": [[1221, null]], "jax.scipy.stats.multivariate_normal.pdf": [[1222, null]], "jax.scipy.stats.nbinom": [[1403, "module-jax.scipy.stats.nbinom"]], "jax.scipy.stats.nbinom.logpmf": [[1223, null]], "jax.scipy.stats.nbinom.pmf": [[1224, null]], "jax.scipy.stats.norm": [[1403, "module-jax.scipy.stats.norm"]], "jax.scipy.stats.norm.cdf": [[1225, null]], "jax.scipy.stats.norm.isf": [[1226, null]], "jax.scipy.stats.norm.logcdf": [[1227, null]], "jax.scipy.stats.norm.logpdf": [[1228, null]], "jax.scipy.stats.norm.logsf": [[1229, null]], "jax.scipy.stats.norm.pdf": [[1230, null]], "jax.scipy.stats.norm.ppf": [[1231, null]], "jax.scipy.stats.norm.sf": [[1232, null]], "jax.scipy.stats.pareto": [[1403, "module-jax.scipy.stats.pareto"]], "jax.scipy.stats.pareto.logpdf": [[1233, null]], "jax.scipy.stats.pareto.pdf": [[1234, null]], "jax.scipy.stats.poisson": [[1403, "module-jax.scipy.stats.poisson"]], "jax.scipy.stats.poisson.cdf": [[1235, null]], "jax.scipy.stats.poisson.logpmf": [[1236, null]], "jax.scipy.stats.poisson.pmf": [[1237, null]], "jax.scipy.stats.rankdata": [[1238, null]], "jax.scipy.stats.sem": [[1239, null]], "jax.scipy.stats.t": [[1403, "module-jax.scipy.stats.t"]], "jax.scipy.stats.t.logpdf": [[1240, null]], "jax.scipy.stats.t.pdf": [[1241, null]], "jax.scipy.stats.truncnorm": [[1403, "module-jax.scipy.stats.truncnorm"]], "jax.scipy.stats.truncnorm.cdf": [[1242, null]], "jax.scipy.stats.truncnorm.logcdf": [[1243, null]], "jax.scipy.stats.truncnorm.logpdf": [[1244, null]], "jax.scipy.stats.truncnorm.logsf": [[1245, null]], "jax.scipy.stats.truncnorm.pdf": [[1246, null]], "jax.scipy.stats.truncnorm.sf": [[1247, null]], "jax.scipy.stats.uniform": [[1403, "module-jax.scipy.stats.uniform"]], "jax.scipy.stats.uniform.cdf": [[1248, null]], "jax.scipy.stats.uniform.logpdf": [[1249, null]], "jax.scipy.stats.uniform.pdf": [[1250, null]], "jax.scipy.stats.uniform.ppf": [[1251, null]], "jax.scipy.stats.vonmises": [[1403, "module-jax.scipy.stats.vonmises"]], "jax.scipy.stats.vonmises.logpdf": [[1252, null]], "jax.scipy.stats.vonmises.pdf": [[1253, null]], "jax.scipy.stats.wrapcauchy": [[1403, "module-jax.scipy.stats.wrapcauchy"]], "jax.scipy.stats.wrapcauchy.logpdf": [[1254, null]], "jax.scipy.stats.wrapcauchy.pdf": [[1255, null]], "jax.shard_map": [[1256, null]], "jax.sharding module": [[1404, null]], "jax.stages module": [[1405, null]], "jax.test_util module": [[1406, null]], "jax.test_util.check_grads": [[1257, null]], "jax.test_util.check_jvp": [[1258, null]], "jax.test_util.check_vjp": [[1259, null]], "jax.transfer_guard": [[1260, null]], "jax.tree module": [[1407, null]], "jax.tree.all": [[1261, null]], "jax.tree.broadcast": [[1262, null]], "jax.tree.flatten": [[1263, null]], "jax.tree.flatten_with_path": [[1264, null]], "jax.tree.leaves": [[1265, null]], "jax.tree.leaves_with_path": [[1266, null]], "jax.tree.map": [[1267, null]], "jax.tree.map_with_path": [[1268, null]], "jax.tree.reduce": [[1269, null]], "jax.tree.structure": [[1270, null]], "jax.tree.transpose": [[1271, null]], "jax.tree.unflatten": [[1272, null]], "jax.tree_util module": [[1408, null]], "jax.tree_util.KeyEntry": [[1273, null]], "jax.tree_util.KeyPath": [[1274, null]], "jax.tree_util.Partial": [[1275, null]], "jax.tree_util.all_leaves": [[1276, null]], "jax.tree_util.build_tree": [[1277, null]], "jax.tree_util.keystr": [[1278, null]], "jax.tree_util.register_dataclass": [[1279, null]], "jax.tree_util.register_pytree_node": [[1280, null]], "jax.tree_util.register_pytree_node_class": [[1281, null]], "jax.tree_util.register_pytree_with_keys": [[1282, null]], "jax.tree_util.register_pytree_with_keys_class": [[1283, null]], "jax.tree_util.register_static": [[1284, null]], "jax.tree_util.tree_all": [[1285, null]], "jax.tree_util.tree_broadcast": [[1286, null]], "jax.tree_util.tree_flatten": [[1287, null]], "jax.tree_util.tree_flatten_with_path": [[1288, null]], "jax.tree_util.tree_leaves": [[1289, null]], "jax.tree_util.tree_leaves_with_path": [[1290, null]], "jax.tree_util.tree_map": [[1291, null]], "jax.tree_util.tree_map_with_path": [[1292, null]], "jax.tree_util.tree_reduce": [[1293, null]], "jax.tree_util.tree_structure": [[1294, null]], "jax.tree_util.tree_transpose": [[1295, null]], "jax.tree_util.tree_unflatten": [[1296, null]], "jax.tree_util.treedef_children": [[1297, null]], "jax.tree_util.treedef_is_leaf": [[1298, null]], "jax.tree_util.treedef_tuple": [[1299, null]], "jax.typing module": [[1409, null]], "jax.typing.ArrayLike": [[1300, null]], "jax.typing.DTypeLike": [[1301, null]], "jax.value_and_grad": [[1302, null]], "jax.vjp": [[1303, null]], "jax.vmap": [[1304, null]], "jax_debug_nans configuration option and context manager": [[1335, "jax-debug-nans-configuration-option-and-context-manager"]], "jax_disable_jit configuration option and context manager": [[1335, "jax-disable-jit-configuration-option-and-context-manager"]], "jaxlib": [[1316, "jaxlib"]], "jaxlib 0.1.38 (January 29, 2020)": [[1326, "jaxlib-0-1-38-january-29-2020"]], "jaxlib 0.1.39 (February 11, 2020)": [[1326, "jaxlib-0-1-39-february-11-2020"]], "jaxlib 0.1.40 (March 4, 2020)": [[1326, "jaxlib-0-1-40-march-4-2020"]], "jaxlib 0.1.42 (March 19, 2020)": [[1326, "jaxlib-0-1-42-march-19-2020"]], "jaxlib 0.1.43 (March 31, 2020)": [[1326, "jaxlib-0-1-43-march-31-2020"]], "jaxlib 0.1.44 (April 16, 2020)": [[1326, "jaxlib-0-1-44-april-16-2020"]], "jaxlib 0.1.45 (April 21, 2020)": [[1326, "jaxlib-0-1-45-april-21-2020"]], "jaxlib 0.1.46 (May 5, 2020)": [[1326, "jaxlib-0-1-46-may-5-2020"]], "jaxlib 0.1.47 (May 8, 2020)": [[1326, "jaxlib-0-1-47-may-8-2020"]], "jaxlib 0.1.48 (June 12, 2020)": [[1326, "jaxlib-0-1-48-june-12-2020"]], "jaxlib 0.1.49 (June 19, 2020)": [[1326, "jaxlib-0-1-49-june-19-2020"]], "jaxlib 0.1.50 (June 25, 2020)": [[1326, "jaxlib-0-1-50-june-25-2020"]], "jaxlib 0.1.51 (July 2, 2020)": [[1326, "jaxlib-0-1-51-july-2-2020"]], "jaxlib 0.1.52 (July 22, 2020)": [[1326, "jaxlib-0-1-52-july-22-2020"]], "jaxlib 0.1.55 (September 8, 2020)": [[1326, "jaxlib-0-1-55-september-8-2020"]], "jaxlib 0.1.56 (October 14, 2020)": [[1326, "jaxlib-0-1-56-october-14-2020"]], "jaxlib 0.1.57 (November 12 2020)": [[1326, "jaxlib-0-1-57-november-12-2020"]], "jaxlib 0.1.58 (January 12ish 2021)": [[1326, "jaxlib-0-1-58-january-12ish-2021"]], "jaxlib 0.1.59 (January 15 2021)": [[1326, "jaxlib-0-1-59-january-15-2021"]], "jaxlib 0.1.60 (February 3 2021)": [[1326, "jaxlib-0-1-60-february-3-2021"]], "jaxlib 0.1.61 (February 12 2021)": [[1326, "jaxlib-0-1-61-february-12-2021"]], "jaxlib 0.1.62 (March 9 2021)": [[1326, "jaxlib-0-1-62-march-9-2021"]], "jaxlib 0.1.63 (March 17 2021)": [[1326, "jaxlib-0-1-63-march-17-2021"]], "jaxlib 0.1.64 (March 18 2021)": [[1326, "jaxlib-0-1-64-march-18-2021"]], "jaxlib 0.1.65 (April 7 2021)": [[1326, "jaxlib-0-1-65-april-7-2021"]], "jaxlib 0.1.66 (May 11 2021)": [[1326, "jaxlib-0-1-66-may-11-2021"]], "jaxlib 0.1.67 (May 17 2021)": [[1326, "jaxlib-0-1-67-may-17-2021"]], "jaxlib 0.1.68 (June 23 2021)": [[1326, "jaxlib-0-1-68-june-23-2021"]], "jaxlib 0.1.69 (July 9 2021)": [[1326, "jaxlib-0-1-69-july-9-2021"]], "jaxlib 0.1.70 (Aug 9, 2021)": [[1326, "jaxlib-0-1-70-aug-9-2021"]], "jaxlib 0.1.71 (Sep 1, 2021)": [[1326, "jaxlib-0-1-71-sep-1-2021"]], "jaxlib 0.1.72 (Oct 12, 2021)": [[1326, "jaxlib-0-1-72-oct-12-2021"]], "jaxlib 0.1.73 (Oct 18, 2021)": [[1326, "jaxlib-0-1-73-oct-18-2021"]], "jaxlib 0.1.74 (Nov 17, 2021)": [[1326, "jaxlib-0-1-74-nov-17-2021"]], "jaxlib 0.1.75 (Dec 8, 2021)": [[1326, "jaxlib-0-1-75-dec-8-2021"]], "jaxlib 0.1.76 (Jan 27, 2022)": [[1326, "jaxlib-0-1-76-jan-27-2022"]], "jaxlib 0.3.0 (Feb 10, 2022)": [[1326, "jaxlib-0-3-0-feb-10-2022"]], "jaxlib 0.3.10 (May 3, 2022)": [[1326, "jaxlib-0-3-10-may-3-2022"]], "jaxlib 0.3.14 (June 27, 2022)": [[1326, "jaxlib-0-3-14-june-27-2022"]], "jaxlib 0.3.15 (July 22, 2022)": [[1326, "jaxlib-0-3-15-july-22-2022"]], "jaxlib 0.3.2 (March 16, 2022)": [[1326, "jaxlib-0-3-2-march-16-2022"]], "jaxlib 0.3.20 (Sep 28, 2022)": [[1326, "jaxlib-0-3-20-sep-28-2022"]], "jaxlib 0.3.22 (Oct 11, 2022)": [[1326, "jaxlib-0-3-22-oct-11-2022"]], "jaxlib 0.3.24 (Nov 4, 2022)": [[1326, "jaxlib-0-3-24-nov-4-2022"]], "jaxlib 0.3.25 (Nov 15, 2022)": [[1326, "jaxlib-0-3-25-nov-15-2022"]], "jaxlib 0.3.5 (April 7, 2022)": [[1326, "jaxlib-0-3-5-april-7-2022"]], "jaxlib 0.3.7 (April 15, 2022)": [[1326, "jaxlib-0-3-7-april-15-2022"]], "jaxlib 0.4.0 (Dec 12, 2022)": [[1326, "jaxlib-0-4-0-dec-12-2022"]], "jaxlib 0.4.1 (Dec 13, 2022)": [[1326, "jaxlib-0-4-1-dec-13-2022"]], "jaxlib 0.4.10 (May 11, 2023)": [[1326, "jaxlib-0-4-10-may-11-2023"]], "jaxlib 0.4.11 (May 31, 2023)": [[1326, "jaxlib-0-4-11-may-31-2023"]], "jaxlib 0.4.12 (June 8, 2023)": [[1326, "jaxlib-0-4-12-june-8-2023"]], "jaxlib 0.4.13 (June 22, 2023)": [[1326, "jaxlib-0-4-13-june-22-2023"]], "jaxlib 0.4.14 (July 27, 2023)": [[1326, "jaxlib-0-4-14-july-27-2023"]], "jaxlib 0.4.16 (Sept 18, 2023)": [[1326, "jaxlib-0-4-16-sept-18-2023"]], "jaxlib 0.4.17 (Oct 3, 2023)": [[1326, "jaxlib-0-4-17-oct-3-2023"]], "jaxlib 0.4.18 (Oct 6, 2023)": [[1326, "jaxlib-0-4-18-oct-6-2023"]], "jaxlib 0.4.19 (Oct 19, 2023)": [[1326, "jaxlib-0-4-19-oct-19-2023"]], "jaxlib 0.4.2 (Jan 24, 2023)": [[1326, "jaxlib-0-4-2-jan-24-2023"]], "jaxlib 0.4.20 (Nov 2, 2023)": [[1326, "jaxlib-0-4-20-nov-2-2023"]], "jaxlib 0.4.21 (Dec 4 2023)": [[1326, "jaxlib-0-4-21-dec-4-2023"]], "jaxlib 0.4.22 (Dec 13, 2023)": [[1326, "jaxlib-0-4-22-dec-13-2023"]], "jaxlib 0.4.23 (Dec 13, 2023)": [[1326, "jaxlib-0-4-23-dec-13-2023"]], "jaxlib 0.4.24 (Feb 6, 2024)": [[1326, "jaxlib-0-4-24-feb-6-2024"]], "jaxlib 0.4.25 (Feb 26, 2024)": [[1326, "jaxlib-0-4-25-feb-26-2024"]], "jaxlib 0.4.26 (April 3, 2024)": [[1326, "jaxlib-0-4-26-april-3-2024"]], "jaxlib 0.4.27 (May 7, 2024)": [[1326, "jaxlib-0-4-27-may-7-2024"]], "jaxlib 0.4.28 (May 9, 2024)": [[1326, "jaxlib-0-4-28-may-9-2024"]], "jaxlib 0.4.29 (June 10, 2024)": [[1326, "jaxlib-0-4-29-june-10-2024"]], "jaxlib 0.4.3 (Feb 8, 2023)": [[1326, "jaxlib-0-4-3-feb-8-2023"]], "jaxlib 0.4.30 (June 18, 2024)": [[1326, "jaxlib-0-4-30-june-18-2024"]], "jaxlib 0.4.31 (July 29, 2024)": [[1326, "jaxlib-0-4-31-july-29-2024"]], "jaxlib 0.4.32 (September 11, 2024)": [[1326, "jaxlib-0-4-32-september-11-2024"]], "jaxlib 0.4.4 (Feb 16, 2023)": [[1326, "jaxlib-0-4-4-feb-16-2023"]], "jaxlib 0.4.6 (Mar 9, 2023)": [[1326, "jaxlib-0-4-6-mar-9-2023"]], "jaxlib 0.4.7 (March 27, 2023)": [[1326, "jaxlib-0-4-7-march-27-2023"]], "jaxlib 0.4.9 (May 9, 2023)": [[1326, "jaxlib-0-4-9-may-9-2023"]], "jaxlib.xla_client.register_custom_call_target": [[1305, null]], "jit": [[1334, "jit"]], "jit changes the behavior of my function": [[1349, "jit-changes-the-behavior-of-my-function"]], "jit changes the exact numerics of outputs": [[1349, "jit-changes-the-exact-numerics-of-outputs"]], "jit decorated function is very slow to compile": [[1349, "jit-decorated-function-is-very-slow-to-compile"]], "lax.conv and lax.conv_with_general_padding": [[1439, "lax-conv-and-lax-conv-with-general-padding"]], "linearize": [[1318, "linearize"]], "live_buffers replaced with live_arrays": [[1410, "live-buffers-replaced-with-live-arrays"]], "pallas.load and pallas.store": [[1449, "pallas-load-and-pallas-store"]], "pallas.program_id and pallas.num_programs": [[1449, "pallas-program-id-and-pallas-num-programs"]], "pip installation": [[1356, "pip-installation"]], "pip installation: CPU": [[1356, "pip-installation-cpu"]], "pip installation: Google Cloud TPU": [[1356, "pip-installation-google-cloud-tpu"]], "pip installation: NVIDIA GPU (CUDA, installed locally, harder)": [[1356, "pip-installation-nvidia-gpu-cuda-installed-locally-harder"]], "pip installation: NVIDIA GPU (CUDA, installed via pip, easier)": [[1356, "pip-installation-nvidia-gpu-cuda-installed-via-pip-easier"]], "pjit": [[1334, "pjit"]], "ppermute": [[1443, "ppermute"]], "psum": [[1443, "psum"]], "psum_scatter": [[1443, "psum-scatter"]], "pure_callback and exceptions": [[1348, "pure-callback-and-exceptions"]], "scan primitive": [[1411, "scan-primitive"]], "shmap (shard_map) for simple per-device code": [[1415, null]], "tl;dr": [[1424, "tl-dr"]], "vjp and grad": [[1318, "vjp-and-grad"]], "vmap-of-pallas_call": [[1449, "vmap-of-pallas-call"]], "vmap/pmap": [[1334, "vmap-pmap"]], "while primitive": [[1411, "while-primitive"]], "while_loop": [[1331, "while-loop"]], "\u2705 numpy namespace": [[1418, "numpy-namespace"]], "\u2705 numpy.linalg & numpy.fft": [[1418, "numpy-linalg-numpy-fft"]], "\u2705 scipy.fft": [[1418, "scipy-fft"]], "\u2705 scipy.linalg": [[1418, "scipy-linalg"]], "\u2705 scipy.special": [[1418, "scipy-special"]], "\u2705 scipy.stats": [[1418, "scipy-stats"]], "\u274c numpy.ma & numpy.polynomial": [[1418, "numpy-ma-numpy-polynomial"]], "\u274c numpy.random": [[1418, "numpy-random"]], "\u274c numpy.testing": [[1418, "numpy-testing"]], "\u274c scipy.cluster": [[1418, "scipy-cluster"]], "\u274c scipy.constants": [[1418, "scipy-constants"]], "\u274c scipy.datasets": [[1418, "scipy-datasets"]], "\u274c scipy.integrate": [[1418, "scipy-integrate"]], "\u274c scipy.interpolate": [[1418, "scipy-interpolate"]], "\u274c scipy.io": [[1418, "scipy-io"]], "\u274c scipy.ndimage": [[1418, "scipy-ndimage"]], "\u274c scipy.odr": [[1418, "scipy-odr"]], "\u274c scipy.optimize": [[1418, "scipy-optimize"]], "\u274c scipy.spatial": [[1418, "scipy-spatial"]], "\ud83d\udd2a Control flow": [[1432, "control-flow"]], "\ud83d\udd2a Double (64bit) precision": [[1432, "double-64bit-precision"]], "\ud83d\udd2a Dynamic shapes": [[1432, "dynamic-shapes"]], "\ud83d\udd2a In-place updates": [[1432, "in-place-updates"]], "\ud83d\udd2a JAX - The Sharp Bits \ud83d\udd2a": [[1432, null]], "\ud83d\udd2a Miscellaneous divergences from NumPy": [[1432, "miscellaneous-divergences-from-numpy"]], "\ud83d\udd2a NaNs": [[1432, "nans"]], "\ud83d\udd2a Non-array inputs: NumPy vs. JAX": [[1432, "non-array-inputs-numpy-vs-jax"]], "\ud83d\udd2a Out-of-bounds indexing": [[1432, "out-of-bounds-indexing"]], "\ud83d\udd2a Pure functions": [[1432, "pure-functions"]], "\ud83d\udd2a Random numbers": [[1432, "random-numbers"]], "\ud83d\udd2a Sharp bits covered in tutorials": [[1432, "sharp-bits-covered-in-tutorials"]], "\ud83d\udfe1 scipy.signal": [[1418, "scipy-signal"]], "\ud83d\udfe1 scipy.sparse": [[1418, "scipy-sparse"]]}, "docnames": ["_autosummary/jax.Array", "_autosummary/jax.Array.T", "_autosummary/jax.Array.addressable_shards", "_autosummary/jax.Array.all", "_autosummary/jax.Array.any", "_autosummary/jax.Array.argmax", "_autosummary/jax.Array.argmin", "_autosummary/jax.Array.argpartition", "_autosummary/jax.Array.argsort", "_autosummary/jax.Array.astype", "_autosummary/jax.Array.at", "_autosummary/jax.Array.choose", "_autosummary/jax.Array.clip", "_autosummary/jax.Array.committed", "_autosummary/jax.Array.compress", "_autosummary/jax.Array.conj", "_autosummary/jax.Array.conjugate", "_autosummary/jax.Array.copy", "_autosummary/jax.Array.copy_to_host_async", "_autosummary/jax.Array.cumprod", "_autosummary/jax.Array.cumsum", "_autosummary/jax.Array.device", "_autosummary/jax.Array.diagonal", "_autosummary/jax.Array.dot", "_autosummary/jax.Array.dtype", "_autosummary/jax.Array.flat", "_autosummary/jax.Array.flatten", "_autosummary/jax.Array.global_shards", "_autosummary/jax.Array.imag", "_autosummary/jax.Array.is_fully_addressable", "_autosummary/jax.Array.is_fully_replicated", "_autosummary/jax.Array.item", "_autosummary/jax.Array.itemsize", "_autosummary/jax.Array.mT", "_autosummary/jax.Array.max", "_autosummary/jax.Array.mean", "_autosummary/jax.Array.min", "_autosummary/jax.Array.nbytes", "_autosummary/jax.Array.ndim", "_autosummary/jax.Array.nonzero", "_autosummary/jax.Array.prod", "_autosummary/jax.Array.ptp", "_autosummary/jax.Array.ravel", "_autosummary/jax.Array.real", "_autosummary/jax.Array.repeat", "_autosummary/jax.Array.reshape", "_autosummary/jax.Array.round", "_autosummary/jax.Array.searchsorted", "_autosummary/jax.Array.shape", "_autosummary/jax.Array.sharding", "_autosummary/jax.Array.size", "_autosummary/jax.Array.sort", "_autosummary/jax.Array.squeeze", "_autosummary/jax.Array.std", "_autosummary/jax.Array.sum", "_autosummary/jax.Array.swapaxes", "_autosummary/jax.Array.take", "_autosummary/jax.Array.to_device", "_autosummary/jax.Array.trace", "_autosummary/jax.Array.transpose", "_autosummary/jax.Array.var", "_autosummary/jax.Array.view", "_autosummary/jax.Device", "_autosummary/jax.ShapeDtypeStruct", "_autosummary/jax.block_until_ready", "_autosummary/jax.check_tracer_leaks", "_autosummary/jax.checking_leaks", "_autosummary/jax.checkpoint", "_autosummary/jax.clear_caches", "_autosummary/jax.closure_convert", "_autosummary/jax.config", "_autosummary/jax.copy_to_host_async", "_autosummary/jax.core.Tracer", "_autosummary/jax.custom_batching.custom_vmap", "_autosummary/jax.custom_batching.custom_vmap.def_vmap", "_autosummary/jax.custom_batching.sequential_vmap", "_autosummary/jax.custom_gradient", "_autosummary/jax.custom_jvp", "_autosummary/jax.custom_jvp.defjvp", "_autosummary/jax.custom_jvp.defjvps", "_autosummary/jax.custom_vjp", "_autosummary/jax.custom_vjp.defvjp", "_autosummary/jax.debug.breakpoint", "_autosummary/jax.debug.callback", "_autosummary/jax.debug.inspect_array_sharding", "_autosummary/jax.debug.print", "_autosummary/jax.debug.visualize_array_sharding", "_autosummary/jax.debug.visualize_sharding", "_autosummary/jax.debug_infs", "_autosummary/jax.debug_nans", "_autosummary/jax.default_backend", "_autosummary/jax.default_device", "_autosummary/jax.default_matmul_precision", "_autosummary/jax.default_prng_impl", "_autosummary/jax.device_count", "_autosummary/jax.device_get", "_autosummary/jax.device_put", "_autosummary/jax.devices", "_autosummary/jax.disable_jit", "_autosummary/jax.distributed.initialize", "_autosummary/jax.distributed.shutdown", "_autosummary/jax.dlpack.from_dlpack", "_autosummary/jax.dlpack.to_dlpack", "_autosummary/jax.dtypes.bfloat16", "_autosummary/jax.dtypes.canonicalize_dtype", "_autosummary/jax.dtypes.float0", "_autosummary/jax.dtypes.issubdtype", "_autosummary/jax.dtypes.prng_key", "_autosummary/jax.dtypes.result_type", "_autosummary/jax.dtypes.scalar_type_of", "_autosummary/jax.enable_checks", "_autosummary/jax.enable_custom_prng", "_autosummary/jax.enable_custom_vjp_by_custom_transpose", "_autosummary/jax.ensure_compile_time_eval", "_autosummary/jax.eval_shape", "_autosummary/jax.experimental.checkify.Error", "_autosummary/jax.experimental.checkify.JaxRuntimeError", "_autosummary/jax.experimental.checkify.all_checks", "_autosummary/jax.experimental.checkify.automatic_checks", "_autosummary/jax.experimental.checkify.check", "_autosummary/jax.experimental.checkify.check_error", "_autosummary/jax.experimental.checkify.checkify", "_autosummary/jax.experimental.checkify.div_checks", "_autosummary/jax.experimental.checkify.float_checks", "_autosummary/jax.experimental.checkify.index_checks", "_autosummary/jax.experimental.checkify.nan_checks", "_autosummary/jax.experimental.checkify.user_checks", "_autosummary/jax.experimental.custom_dce.custom_dce", "_autosummary/jax.experimental.custom_dce.custom_dce.def_dce", "_autosummary/jax.experimental.disable_x64", "_autosummary/jax.experimental.enable_x64", "_autosummary/jax.experimental.io_callback", "_autosummary/jax.experimental.mesh_utils.create_device_mesh", "_autosummary/jax.experimental.mesh_utils.create_hybrid_device_mesh", "_autosummary/jax.experimental.multihost_utils.assert_equal", "_autosummary/jax.experimental.multihost_utils.broadcast_one_to_all", "_autosummary/jax.experimental.multihost_utils.global_array_to_host_local_array", "_autosummary/jax.experimental.multihost_utils.host_local_array_to_global_array", "_autosummary/jax.experimental.multihost_utils.process_allgather", "_autosummary/jax.experimental.multihost_utils.sync_global_devices", "_autosummary/jax.experimental.pallas.BlockSpec", "_autosummary/jax.experimental.pallas.GridSpec", "_autosummary/jax.experimental.pallas.MemoryRef", "_autosummary/jax.experimental.pallas.Slice", "_autosummary/jax.experimental.pallas.atomic_add", "_autosummary/jax.experimental.pallas.atomic_and", "_autosummary/jax.experimental.pallas.atomic_cas", "_autosummary/jax.experimental.pallas.atomic_max", "_autosummary/jax.experimental.pallas.atomic_min", "_autosummary/jax.experimental.pallas.atomic_or", "_autosummary/jax.experimental.pallas.atomic_xchg", "_autosummary/jax.experimental.pallas.atomic_xor", "_autosummary/jax.experimental.pallas.broadcast_to", "_autosummary/jax.experimental.pallas.debug_print", "_autosummary/jax.experimental.pallas.dot", "_autosummary/jax.experimental.pallas.load", "_autosummary/jax.experimental.pallas.max_contiguous", "_autosummary/jax.experimental.pallas.mosaic_gpu.ACC", "_autosummary/jax.experimental.pallas.mosaic_gpu.Barrier", "_autosummary/jax.experimental.pallas.mosaic_gpu.BlockSpec", "_autosummary/jax.experimental.pallas.mosaic_gpu.CompilerParams", "_autosummary/jax.experimental.pallas.mosaic_gpu.GMEM", "_autosummary/jax.experimental.pallas.mosaic_gpu.Layout", "_autosummary/jax.experimental.pallas.mosaic_gpu.MemorySpace", "_autosummary/jax.experimental.pallas.mosaic_gpu.SMEM", "_autosummary/jax.experimental.pallas.mosaic_gpu.SwizzleTransform", "_autosummary/jax.experimental.pallas.mosaic_gpu.TilingTransform", "_autosummary/jax.experimental.pallas.mosaic_gpu.TransposeTransform", "_autosummary/jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef", "_autosummary/jax.experimental.pallas.mosaic_gpu.barrier_arrive", "_autosummary/jax.experimental.pallas.mosaic_gpu.barrier_wait", "_autosummary/jax.experimental.pallas.mosaic_gpu.commit_smem", "_autosummary/jax.experimental.pallas.mosaic_gpu.copy_gmem_to_smem", "_autosummary/jax.experimental.pallas.mosaic_gpu.copy_smem_to_gmem", "_autosummary/jax.experimental.pallas.mosaic_gpu.emit_pipeline", "_autosummary/jax.experimental.pallas.mosaic_gpu.layout_cast", "_autosummary/jax.experimental.pallas.mosaic_gpu.set_max_registers", "_autosummary/jax.experimental.pallas.mosaic_gpu.wait_smem_to_gmem", "_autosummary/jax.experimental.pallas.mosaic_gpu.wgmma", "_autosummary/jax.experimental.pallas.mosaic_gpu.wgmma_wait", "_autosummary/jax.experimental.pallas.multiple_of", "_autosummary/jax.experimental.pallas.num_programs", "_autosummary/jax.experimental.pallas.pallas_call", "_autosummary/jax.experimental.pallas.program_id", "_autosummary/jax.experimental.pallas.run_scoped", "_autosummary/jax.experimental.pallas.store", "_autosummary/jax.experimental.pallas.swap", "_autosummary/jax.experimental.pallas.triton.CompilerParams", "_autosummary/jax.experimental.pallas.triton.approx_tanh", "_autosummary/jax.experimental.pallas.triton.debug_barrier", "_autosummary/jax.experimental.pallas.triton.elementwise_inline_asm", "_autosummary/jax.experimental.pallas.when", "_autosummary/jax.experimental.serialize_executable.deserialize_and_load", "_autosummary/jax.experimental.serialize_executable.serialize", "_autosummary/jax.experimental.shard_map.shard_map", "_autosummary/jax.experimental.sparse.BCOO", "_autosummary/jax.experimental.sparse.BCSR", "_autosummary/jax.experimental.sparse.COO", "_autosummary/jax.experimental.sparse.CSC", "_autosummary/jax.experimental.sparse.CSR", "_autosummary/jax.experimental.sparse.JAXSparse", "_autosummary/jax.experimental.sparse.bcoo_broadcast_in_dim", "_autosummary/jax.experimental.sparse.bcoo_concatenate", "_autosummary/jax.experimental.sparse.bcoo_dot_general", "_autosummary/jax.experimental.sparse.bcoo_dot_general_sampled", "_autosummary/jax.experimental.sparse.bcoo_dynamic_slice", "_autosummary/jax.experimental.sparse.bcoo_extract", "_autosummary/jax.experimental.sparse.bcoo_fromdense", "_autosummary/jax.experimental.sparse.bcoo_gather", "_autosummary/jax.experimental.sparse.bcoo_multiply_dense", "_autosummary/jax.experimental.sparse.bcoo_multiply_sparse", "_autosummary/jax.experimental.sparse.bcoo_reduce_sum", "_autosummary/jax.experimental.sparse.bcoo_reshape", "_autosummary/jax.experimental.sparse.bcoo_slice", "_autosummary/jax.experimental.sparse.bcoo_sort_indices", "_autosummary/jax.experimental.sparse.bcoo_squeeze", "_autosummary/jax.experimental.sparse.bcoo_sum_duplicates", "_autosummary/jax.experimental.sparse.bcoo_todense", "_autosummary/jax.experimental.sparse.bcoo_transpose", "_autosummary/jax.experimental.sparse.bcoo_update_layout", "_autosummary/jax.experimental.sparse.bcsr_dot_general", "_autosummary/jax.experimental.sparse.bcsr_extract", "_autosummary/jax.experimental.sparse.bcsr_fromdense", "_autosummary/jax.experimental.sparse.bcsr_todense", "_autosummary/jax.experimental.sparse.coo_fromdense", "_autosummary/jax.experimental.sparse.coo_matmat", "_autosummary/jax.experimental.sparse.coo_matvec", "_autosummary/jax.experimental.sparse.coo_todense", "_autosummary/jax.experimental.sparse.csr_fromdense", "_autosummary/jax.experimental.sparse.csr_matmat", "_autosummary/jax.experimental.sparse.csr_matvec", "_autosummary/jax.experimental.sparse.csr_todense", "_autosummary/jax.experimental.sparse.empty", "_autosummary/jax.experimental.sparse.eye", "_autosummary/jax.experimental.sparse.grad", "_autosummary/jax.experimental.sparse.linalg.lobpcg_standard", "_autosummary/jax.experimental.sparse.linalg.spsolve", "_autosummary/jax.experimental.sparse.random_bcoo", "_autosummary/jax.experimental.sparse.sparsify", "_autosummary/jax.experimental.sparse.todense", "_autosummary/jax.experimental.sparse.value_and_grad", "_autosummary/jax.export.SymbolicScope", "_autosummary/jax.export.default_export_platform", "_autosummary/jax.export.deserialize", "_autosummary/jax.export.export", "_autosummary/jax.export.is_symbolic_dim", "_autosummary/jax.export.maximum_supported_calling_convention_version", "_autosummary/jax.export.minimum_supported_calling_convention_version", "_autosummary/jax.export.register_namedtuple_serialization", "_autosummary/jax.export.register_pytree_node_serialization", "_autosummary/jax.export.symbolic_args_specs", "_autosummary/jax.export.symbolic_shape", "_autosummary/jax.extend.core.ClosedJaxpr", "_autosummary/jax.extend.core.Jaxpr", "_autosummary/jax.extend.core.JaxprEqn", "_autosummary/jax.extend.core.Literal", "_autosummary/jax.extend.core.Primitive", "_autosummary/jax.extend.core.Token", "_autosummary/jax.extend.core.Var", "_autosummary/jax.extend.core.array_types", "_autosummary/jax.extend.core.jaxpr_as_fun", "_autosummary/jax.extend.core.primitives", "_autosummary/jax.extend.ffi.ffi_call", "_autosummary/jax.extend.ffi.ffi_lowering", "_autosummary/jax.extend.ffi.pycapsule", "_autosummary/jax.extend.ffi.register_ffi_target", "_autosummary/jax.extend.linear_util.StoreException", "_autosummary/jax.extend.linear_util.WrappedFun", "_autosummary/jax.extend.linear_util.cache", "_autosummary/jax.extend.linear_util.merge_linear_aux", "_autosummary/jax.extend.linear_util.transformation", "_autosummary/jax.extend.linear_util.transformation_with_aux", "_autosummary/jax.extend.linear_util.wrap_init", "_autosummary/jax.extend.mlir.dialects", "_autosummary/jax.extend.mlir.ir", "_autosummary/jax.extend.mlir.passmanager", "_autosummary/jax.extend.random.define_prng_impl", "_autosummary/jax.extend.random.rbg_prng_impl", "_autosummary/jax.extend.random.seed_with_impl", "_autosummary/jax.extend.random.threefry2x32_p", "_autosummary/jax.extend.random.threefry_2x32", "_autosummary/jax.extend.random.threefry_prng_impl", "_autosummary/jax.extend.random.unsafe_rbg_prng_impl", "_autosummary/jax.ffi.ffi_call", "_autosummary/jax.ffi.ffi_lowering", "_autosummary/jax.ffi.pycapsule", "_autosummary/jax.ffi.register_ffi_target", "_autosummary/jax.ffi.register_ffi_type_id", "_autosummary/jax.flatten_util.ravel_pytree", "_autosummary/jax.grad", "_autosummary/jax.hessian", "_autosummary/jax.image.resize", "_autosummary/jax.image.scale_and_translate", "_autosummary/jax.jacfwd", "_autosummary/jax.jacobian", "_autosummary/jax.jacrev", "_autosummary/jax.jit", "_autosummary/jax.jvp", "_autosummary/jax.lax.abs", "_autosummary/jax.lax.acos", "_autosummary/jax.lax.acosh", "_autosummary/jax.lax.add", "_autosummary/jax.lax.after_all", "_autosummary/jax.lax.all_gather", "_autosummary/jax.lax.all_to_all", "_autosummary/jax.lax.approx_max_k", "_autosummary/jax.lax.approx_min_k", "_autosummary/jax.lax.argmax", "_autosummary/jax.lax.argmin", "_autosummary/jax.lax.asin", "_autosummary/jax.lax.asinh", "_autosummary/jax.lax.associative_scan", "_autosummary/jax.lax.atan", "_autosummary/jax.lax.atan2", "_autosummary/jax.lax.atanh", "_autosummary/jax.lax.axis_index", "_autosummary/jax.lax.axis_size", "_autosummary/jax.lax.batch_matmul", "_autosummary/jax.lax.bessel_i0e", "_autosummary/jax.lax.bessel_i1e", "_autosummary/jax.lax.betainc", "_autosummary/jax.lax.bitcast_convert_type", "_autosummary/jax.lax.bitwise_and", "_autosummary/jax.lax.bitwise_not", "_autosummary/jax.lax.bitwise_or", "_autosummary/jax.lax.bitwise_xor", "_autosummary/jax.lax.broadcast", "_autosummary/jax.lax.broadcast_in_dim", "_autosummary/jax.lax.broadcast_shapes", "_autosummary/jax.lax.broadcast_to_rank", "_autosummary/jax.lax.broadcasted_iota", "_autosummary/jax.lax.cbrt", "_autosummary/jax.lax.ceil", "_autosummary/jax.lax.clamp", "_autosummary/jax.lax.clz", "_autosummary/jax.lax.collapse", "_autosummary/jax.lax.complex", "_autosummary/jax.lax.composite", "_autosummary/jax.lax.concatenate", "_autosummary/jax.lax.cond", "_autosummary/jax.lax.conj", "_autosummary/jax.lax.conv", "_autosummary/jax.lax.conv_dimension_numbers", "_autosummary/jax.lax.conv_general_dilated", "_autosummary/jax.lax.conv_general_dilated_local", "_autosummary/jax.lax.conv_general_dilated_patches", "_autosummary/jax.lax.conv_transpose", "_autosummary/jax.lax.conv_with_general_padding", "_autosummary/jax.lax.convert_element_type", "_autosummary/jax.lax.cos", "_autosummary/jax.lax.cosh", "_autosummary/jax.lax.cumlogsumexp", "_autosummary/jax.lax.cummax", "_autosummary/jax.lax.cummin", "_autosummary/jax.lax.cumprod", "_autosummary/jax.lax.cumsum", "_autosummary/jax.lax.custom_linear_solve", "_autosummary/jax.lax.custom_root", "_autosummary/jax.lax.digamma", "_autosummary/jax.lax.div", "_autosummary/jax.lax.dot", "_autosummary/jax.lax.dot_general", "_autosummary/jax.lax.dynamic_index_in_dim", "_autosummary/jax.lax.dynamic_slice", "_autosummary/jax.lax.dynamic_slice_in_dim", "_autosummary/jax.lax.dynamic_update_index_in_dim", "_autosummary/jax.lax.dynamic_update_slice", "_autosummary/jax.lax.dynamic_update_slice_in_dim", "_autosummary/jax.lax.eq", "_autosummary/jax.lax.erf", "_autosummary/jax.lax.erf_inv", "_autosummary/jax.lax.erfc", "_autosummary/jax.lax.exp", "_autosummary/jax.lax.exp2", "_autosummary/jax.lax.expand_dims", "_autosummary/jax.lax.expm1", "_autosummary/jax.lax.fft", "_autosummary/jax.lax.floor", "_autosummary/jax.lax.fori_loop", "_autosummary/jax.lax.full", "_autosummary/jax.lax.full_like", "_autosummary/jax.lax.gather", "_autosummary/jax.lax.ge", "_autosummary/jax.lax.gt", "_autosummary/jax.lax.igamma", "_autosummary/jax.lax.igammac", "_autosummary/jax.lax.imag", "_autosummary/jax.lax.index_in_dim", "_autosummary/jax.lax.index_take", "_autosummary/jax.lax.integer_pow", "_autosummary/jax.lax.iota", "_autosummary/jax.lax.is_finite", "_autosummary/jax.lax.le", "_autosummary/jax.lax.lgamma", "_autosummary/jax.lax.linalg.SvdAlgorithm", "_autosummary/jax.lax.linalg.cholesky", "_autosummary/jax.lax.linalg.cholesky_update", "_autosummary/jax.lax.linalg.eig", "_autosummary/jax.lax.linalg.eigh", "_autosummary/jax.lax.linalg.hessenberg", "_autosummary/jax.lax.linalg.householder_product", "_autosummary/jax.lax.linalg.lu", "_autosummary/jax.lax.linalg.lu_pivots_to_permutation", "_autosummary/jax.lax.linalg.qdwh", "_autosummary/jax.lax.linalg.qr", "_autosummary/jax.lax.linalg.schur", "_autosummary/jax.lax.linalg.svd", "_autosummary/jax.lax.linalg.symmetric_product", "_autosummary/jax.lax.linalg.triangular_solve", "_autosummary/jax.lax.linalg.tridiagonal", "_autosummary/jax.lax.linalg.tridiagonal_solve", "_autosummary/jax.lax.log", "_autosummary/jax.lax.log1p", "_autosummary/jax.lax.logistic", "_autosummary/jax.lax.lt", "_autosummary/jax.lax.map", "_autosummary/jax.lax.max", "_autosummary/jax.lax.min", "_autosummary/jax.lax.mul", "_autosummary/jax.lax.ne", "_autosummary/jax.lax.neg", "_autosummary/jax.lax.nextafter", "_autosummary/jax.lax.optimization_barrier", "_autosummary/jax.lax.pad", "_autosummary/jax.lax.platform_dependent", "_autosummary/jax.lax.pmax", "_autosummary/jax.lax.pmean", "_autosummary/jax.lax.pmin", "_autosummary/jax.lax.polygamma", "_autosummary/jax.lax.population_count", "_autosummary/jax.lax.pow", "_autosummary/jax.lax.ppermute", "_autosummary/jax.lax.pshuffle", "_autosummary/jax.lax.psum", "_autosummary/jax.lax.psum_scatter", "_autosummary/jax.lax.pswapaxes", "_autosummary/jax.lax.random_gamma_grad", "_autosummary/jax.lax.real", "_autosummary/jax.lax.reciprocal", "_autosummary/jax.lax.reduce", "_autosummary/jax.lax.reduce_and", "_autosummary/jax.lax.reduce_max", "_autosummary/jax.lax.reduce_min", "_autosummary/jax.lax.reduce_or", "_autosummary/jax.lax.reduce_precision", "_autosummary/jax.lax.reduce_prod", "_autosummary/jax.lax.reduce_sum", "_autosummary/jax.lax.reduce_window", "_autosummary/jax.lax.reduce_xor", "_autosummary/jax.lax.rem", "_autosummary/jax.lax.reshape", "_autosummary/jax.lax.rev", "_autosummary/jax.lax.rng_bit_generator", "_autosummary/jax.lax.rng_uniform", "_autosummary/jax.lax.round", "_autosummary/jax.lax.rsqrt", "_autosummary/jax.lax.scan", "_autosummary/jax.lax.scatter", "_autosummary/jax.lax.scatter_add", "_autosummary/jax.lax.scatter_apply", "_autosummary/jax.lax.scatter_max", "_autosummary/jax.lax.scatter_min", "_autosummary/jax.lax.scatter_mul", "_autosummary/jax.lax.select", "_autosummary/jax.lax.select_n", "_autosummary/jax.lax.shift_left", "_autosummary/jax.lax.shift_right_arithmetic", "_autosummary/jax.lax.shift_right_logical", "_autosummary/jax.lax.sign", "_autosummary/jax.lax.sin", "_autosummary/jax.lax.sinh", "_autosummary/jax.lax.slice", "_autosummary/jax.lax.slice_in_dim", "_autosummary/jax.lax.sort", "_autosummary/jax.lax.sort_key_val", "_autosummary/jax.lax.split", "_autosummary/jax.lax.sqrt", "_autosummary/jax.lax.square", "_autosummary/jax.lax.squeeze", "_autosummary/jax.lax.stop_gradient", "_autosummary/jax.lax.sub", "_autosummary/jax.lax.switch", "_autosummary/jax.lax.tan", "_autosummary/jax.lax.tanh", "_autosummary/jax.lax.top_k", "_autosummary/jax.lax.transpose", "_autosummary/jax.lax.while_loop", "_autosummary/jax.lax.with_sharding_constraint", "_autosummary/jax.lax.zeros_like_array", "_autosummary/jax.lax.zeta", "_autosummary/jax.lib.xla_bridge.get_backend", "_autosummary/jax.lib.xla_bridge.get_compile_options", "_autosummary/jax.linear_transpose", "_autosummary/jax.linearize", "_autosummary/jax.live_arrays", "_autosummary/jax.local_device_count", "_autosummary/jax.local_devices", "_autosummary/jax.log_compiles", "_autosummary/jax.make_array_from_callback", "_autosummary/jax.make_array_from_process_local_data", "_autosummary/jax.make_array_from_single_device_arrays", "_autosummary/jax.make_jaxpr", "_autosummary/jax.make_mesh", "_autosummary/jax.named_call", "_autosummary/jax.named_scope", "_autosummary/jax.nn.celu", "_autosummary/jax.nn.dot_product_attention", "_autosummary/jax.nn.elu", "_autosummary/jax.nn.gelu", "_autosummary/jax.nn.get_scaled_dot_general_config", "_autosummary/jax.nn.glu", "_autosummary/jax.nn.hard_sigmoid", "_autosummary/jax.nn.hard_silu", "_autosummary/jax.nn.hard_swish", "_autosummary/jax.nn.hard_tanh", "_autosummary/jax.nn.identity", "_autosummary/jax.nn.initializers.constant", "_autosummary/jax.nn.initializers.delta_orthogonal", "_autosummary/jax.nn.initializers.glorot_normal", "_autosummary/jax.nn.initializers.glorot_uniform", "_autosummary/jax.nn.initializers.he_normal", "_autosummary/jax.nn.initializers.he_uniform", "_autosummary/jax.nn.initializers.lecun_normal", "_autosummary/jax.nn.initializers.lecun_uniform", "_autosummary/jax.nn.initializers.normal", "_autosummary/jax.nn.initializers.ones", "_autosummary/jax.nn.initializers.orthogonal", "_autosummary/jax.nn.initializers.truncated_normal", "_autosummary/jax.nn.initializers.uniform", "_autosummary/jax.nn.initializers.variance_scaling", "_autosummary/jax.nn.initializers.zeros", "_autosummary/jax.nn.leaky_relu", "_autosummary/jax.nn.log_sigmoid", "_autosummary/jax.nn.log_softmax", "_autosummary/jax.nn.logsumexp", "_autosummary/jax.nn.mish", "_autosummary/jax.nn.one_hot", "_autosummary/jax.nn.relu", "_autosummary/jax.nn.relu6", "_autosummary/jax.nn.scaled_dot_general", "_autosummary/jax.nn.scaled_matmul", "_autosummary/jax.nn.selu", "_autosummary/jax.nn.sigmoid", "_autosummary/jax.nn.silu", "_autosummary/jax.nn.soft_sign", "_autosummary/jax.nn.softmax", "_autosummary/jax.nn.softplus", "_autosummary/jax.nn.sparse_plus", "_autosummary/jax.nn.sparse_sigmoid", "_autosummary/jax.nn.squareplus", "_autosummary/jax.nn.standardize", "_autosummary/jax.nn.swish", "_autosummary/jax.no_tracing", "_autosummary/jax.numpy.ComplexWarning", "_autosummary/jax.numpy.abs", "_autosummary/jax.numpy.absolute", "_autosummary/jax.numpy.acos", "_autosummary/jax.numpy.acosh", "_autosummary/jax.numpy.add", "_autosummary/jax.numpy.all", "_autosummary/jax.numpy.allclose", "_autosummary/jax.numpy.amax", "_autosummary/jax.numpy.amin", "_autosummary/jax.numpy.angle", "_autosummary/jax.numpy.any", "_autosummary/jax.numpy.append", "_autosummary/jax.numpy.apply_along_axis", "_autosummary/jax.numpy.apply_over_axes", "_autosummary/jax.numpy.arange", "_autosummary/jax.numpy.arccos", "_autosummary/jax.numpy.arccosh", "_autosummary/jax.numpy.arcsin", "_autosummary/jax.numpy.arcsinh", "_autosummary/jax.numpy.arctan", "_autosummary/jax.numpy.arctan2", "_autosummary/jax.numpy.arctanh", "_autosummary/jax.numpy.argmax", "_autosummary/jax.numpy.argmin", "_autosummary/jax.numpy.argpartition", "_autosummary/jax.numpy.argsort", "_autosummary/jax.numpy.argwhere", "_autosummary/jax.numpy.around", "_autosummary/jax.numpy.array", "_autosummary/jax.numpy.array_equal", "_autosummary/jax.numpy.array_equiv", "_autosummary/jax.numpy.array_repr", "_autosummary/jax.numpy.array_split", "_autosummary/jax.numpy.array_str", "_autosummary/jax.numpy.asarray", "_autosummary/jax.numpy.asin", "_autosummary/jax.numpy.asinh", "_autosummary/jax.numpy.astype", "_autosummary/jax.numpy.atan", "_autosummary/jax.numpy.atan2", "_autosummary/jax.numpy.atanh", "_autosummary/jax.numpy.atleast_1d", "_autosummary/jax.numpy.atleast_2d", "_autosummary/jax.numpy.atleast_3d", "_autosummary/jax.numpy.average", "_autosummary/jax.numpy.bartlett", "_autosummary/jax.numpy.bincount", "_autosummary/jax.numpy.bitwise_and", "_autosummary/jax.numpy.bitwise_count", "_autosummary/jax.numpy.bitwise_invert", "_autosummary/jax.numpy.bitwise_left_shift", "_autosummary/jax.numpy.bitwise_not", "_autosummary/jax.numpy.bitwise_or", "_autosummary/jax.numpy.bitwise_right_shift", "_autosummary/jax.numpy.bitwise_xor", "_autosummary/jax.numpy.blackman", "_autosummary/jax.numpy.block", "_autosummary/jax.numpy.bool_", "_autosummary/jax.numpy.broadcast_arrays", "_autosummary/jax.numpy.broadcast_shapes", "_autosummary/jax.numpy.broadcast_to", "_autosummary/jax.numpy.c_", "_autosummary/jax.numpy.can_cast", "_autosummary/jax.numpy.cbrt", "_autosummary/jax.numpy.cdouble", "_autosummary/jax.numpy.ceil", "_autosummary/jax.numpy.character", "_autosummary/jax.numpy.choose", "_autosummary/jax.numpy.clip", "_autosummary/jax.numpy.column_stack", "_autosummary/jax.numpy.complex128", "_autosummary/jax.numpy.complex64", "_autosummary/jax.numpy.complex_", "_autosummary/jax.numpy.complexfloating", "_autosummary/jax.numpy.compress", "_autosummary/jax.numpy.concat", "_autosummary/jax.numpy.concatenate", "_autosummary/jax.numpy.conj", "_autosummary/jax.numpy.conjugate", "_autosummary/jax.numpy.convolve", "_autosummary/jax.numpy.copy", "_autosummary/jax.numpy.copysign", "_autosummary/jax.numpy.corrcoef", "_autosummary/jax.numpy.correlate", "_autosummary/jax.numpy.cos", "_autosummary/jax.numpy.cosh", "_autosummary/jax.numpy.count_nonzero", "_autosummary/jax.numpy.cov", "_autosummary/jax.numpy.cross", "_autosummary/jax.numpy.csingle", "_autosummary/jax.numpy.cumprod", "_autosummary/jax.numpy.cumsum", "_autosummary/jax.numpy.cumulative_prod", "_autosummary/jax.numpy.cumulative_sum", "_autosummary/jax.numpy.deg2rad", "_autosummary/jax.numpy.degrees", "_autosummary/jax.numpy.delete", "_autosummary/jax.numpy.diag", "_autosummary/jax.numpy.diag_indices", "_autosummary/jax.numpy.diag_indices_from", "_autosummary/jax.numpy.diagflat", "_autosummary/jax.numpy.diagonal", "_autosummary/jax.numpy.diff", "_autosummary/jax.numpy.digitize", "_autosummary/jax.numpy.divide", "_autosummary/jax.numpy.divmod", "_autosummary/jax.numpy.dot", "_autosummary/jax.numpy.double", "_autosummary/jax.numpy.dsplit", "_autosummary/jax.numpy.dstack", "_autosummary/jax.numpy.dtype", "_autosummary/jax.numpy.ediff1d", "_autosummary/jax.numpy.einsum", "_autosummary/jax.numpy.einsum_path", "_autosummary/jax.numpy.empty", "_autosummary/jax.numpy.empty_like", "_autosummary/jax.numpy.equal", "_autosummary/jax.numpy.exp", "_autosummary/jax.numpy.exp2", "_autosummary/jax.numpy.expand_dims", "_autosummary/jax.numpy.expm1", "_autosummary/jax.numpy.extract", "_autosummary/jax.numpy.eye", "_autosummary/jax.numpy.fabs", "_autosummary/jax.numpy.fft.fft", "_autosummary/jax.numpy.fft.fft2", "_autosummary/jax.numpy.fft.fftfreq", "_autosummary/jax.numpy.fft.fftn", "_autosummary/jax.numpy.fft.fftshift", "_autosummary/jax.numpy.fft.hfft", "_autosummary/jax.numpy.fft.ifft", "_autosummary/jax.numpy.fft.ifft2", "_autosummary/jax.numpy.fft.ifftn", "_autosummary/jax.numpy.fft.ifftshift", "_autosummary/jax.numpy.fft.ihfft", "_autosummary/jax.numpy.fft.irfft", "_autosummary/jax.numpy.fft.irfft2", "_autosummary/jax.numpy.fft.irfftn", "_autosummary/jax.numpy.fft.rfft", "_autosummary/jax.numpy.fft.rfft2", "_autosummary/jax.numpy.fft.rfftfreq", "_autosummary/jax.numpy.fft.rfftn", "_autosummary/jax.numpy.fill_diagonal", "_autosummary/jax.numpy.finfo", "_autosummary/jax.numpy.fix", "_autosummary/jax.numpy.flatnonzero", "_autosummary/jax.numpy.flexible", "_autosummary/jax.numpy.flip", "_autosummary/jax.numpy.fliplr", "_autosummary/jax.numpy.flipud", "_autosummary/jax.numpy.float16", "_autosummary/jax.numpy.float32", "_autosummary/jax.numpy.float64", "_autosummary/jax.numpy.float_", "_autosummary/jax.numpy.float_power", "_autosummary/jax.numpy.floating", "_autosummary/jax.numpy.floor", "_autosummary/jax.numpy.floor_divide", "_autosummary/jax.numpy.fmax", "_autosummary/jax.numpy.fmin", "_autosummary/jax.numpy.fmod", "_autosummary/jax.numpy.frexp", "_autosummary/jax.numpy.from_dlpack", "_autosummary/jax.numpy.frombuffer", "_autosummary/jax.numpy.fromfile", "_autosummary/jax.numpy.fromfunction", "_autosummary/jax.numpy.fromiter", "_autosummary/jax.numpy.frompyfunc", "_autosummary/jax.numpy.fromstring", "_autosummary/jax.numpy.full", "_autosummary/jax.numpy.full_like", "_autosummary/jax.numpy.gcd", "_autosummary/jax.numpy.generic", "_autosummary/jax.numpy.geomspace", "_autosummary/jax.numpy.get_printoptions", "_autosummary/jax.numpy.gradient", "_autosummary/jax.numpy.greater", "_autosummary/jax.numpy.greater_equal", "_autosummary/jax.numpy.hamming", "_autosummary/jax.numpy.hanning", "_autosummary/jax.numpy.heaviside", "_autosummary/jax.numpy.histogram", "_autosummary/jax.numpy.histogram2d", "_autosummary/jax.numpy.histogram_bin_edges", "_autosummary/jax.numpy.histogramdd", "_autosummary/jax.numpy.hsplit", "_autosummary/jax.numpy.hstack", "_autosummary/jax.numpy.hypot", "_autosummary/jax.numpy.i0", "_autosummary/jax.numpy.identity", "_autosummary/jax.numpy.iinfo", "_autosummary/jax.numpy.imag", "_autosummary/jax.numpy.index_exp", "_autosummary/jax.numpy.indices", "_autosummary/jax.numpy.inexact", "_autosummary/jax.numpy.inner", "_autosummary/jax.numpy.insert", "_autosummary/jax.numpy.int16", "_autosummary/jax.numpy.int32", "_autosummary/jax.numpy.int64", "_autosummary/jax.numpy.int8", "_autosummary/jax.numpy.int_", "_autosummary/jax.numpy.integer", "_autosummary/jax.numpy.interp", "_autosummary/jax.numpy.intersect1d", "_autosummary/jax.numpy.invert", "_autosummary/jax.numpy.isclose", "_autosummary/jax.numpy.iscomplex", "_autosummary/jax.numpy.iscomplexobj", "_autosummary/jax.numpy.isdtype", "_autosummary/jax.numpy.isfinite", "_autosummary/jax.numpy.isin", "_autosummary/jax.numpy.isinf", "_autosummary/jax.numpy.isnan", "_autosummary/jax.numpy.isneginf", "_autosummary/jax.numpy.isposinf", "_autosummary/jax.numpy.isreal", "_autosummary/jax.numpy.isrealobj", "_autosummary/jax.numpy.isscalar", "_autosummary/jax.numpy.issubdtype", "_autosummary/jax.numpy.iterable", "_autosummary/jax.numpy.ix_", "_autosummary/jax.numpy.kaiser", "_autosummary/jax.numpy.kron", "_autosummary/jax.numpy.lcm", "_autosummary/jax.numpy.ldexp", "_autosummary/jax.numpy.left_shift", "_autosummary/jax.numpy.less", "_autosummary/jax.numpy.less_equal", "_autosummary/jax.numpy.lexsort", "_autosummary/jax.numpy.linalg.cholesky", "_autosummary/jax.numpy.linalg.cond", "_autosummary/jax.numpy.linalg.cross", "_autosummary/jax.numpy.linalg.det", "_autosummary/jax.numpy.linalg.diagonal", "_autosummary/jax.numpy.linalg.eig", "_autosummary/jax.numpy.linalg.eigh", "_autosummary/jax.numpy.linalg.eigvals", "_autosummary/jax.numpy.linalg.eigvalsh", "_autosummary/jax.numpy.linalg.inv", "_autosummary/jax.numpy.linalg.lstsq", "_autosummary/jax.numpy.linalg.matmul", "_autosummary/jax.numpy.linalg.matrix_norm", "_autosummary/jax.numpy.linalg.matrix_power", "_autosummary/jax.numpy.linalg.matrix_rank", "_autosummary/jax.numpy.linalg.matrix_transpose", "_autosummary/jax.numpy.linalg.multi_dot", "_autosummary/jax.numpy.linalg.norm", "_autosummary/jax.numpy.linalg.outer", "_autosummary/jax.numpy.linalg.pinv", "_autosummary/jax.numpy.linalg.qr", "_autosummary/jax.numpy.linalg.slogdet", "_autosummary/jax.numpy.linalg.solve", "_autosummary/jax.numpy.linalg.svd", "_autosummary/jax.numpy.linalg.svdvals", "_autosummary/jax.numpy.linalg.tensordot", "_autosummary/jax.numpy.linalg.tensorinv", "_autosummary/jax.numpy.linalg.tensorsolve", "_autosummary/jax.numpy.linalg.trace", "_autosummary/jax.numpy.linalg.vecdot", "_autosummary/jax.numpy.linalg.vector_norm", "_autosummary/jax.numpy.linspace", "_autosummary/jax.numpy.load", "_autosummary/jax.numpy.log", "_autosummary/jax.numpy.log10", "_autosummary/jax.numpy.log1p", "_autosummary/jax.numpy.log2", "_autosummary/jax.numpy.logaddexp", "_autosummary/jax.numpy.logaddexp2", "_autosummary/jax.numpy.logical_and", "_autosummary/jax.numpy.logical_not", "_autosummary/jax.numpy.logical_or", "_autosummary/jax.numpy.logical_xor", "_autosummary/jax.numpy.logspace", "_autosummary/jax.numpy.mask_indices", "_autosummary/jax.numpy.matmul", "_autosummary/jax.numpy.matrix_transpose", "_autosummary/jax.numpy.matvec", "_autosummary/jax.numpy.max", "_autosummary/jax.numpy.maximum", "_autosummary/jax.numpy.mean", "_autosummary/jax.numpy.median", "_autosummary/jax.numpy.meshgrid", "_autosummary/jax.numpy.mgrid", "_autosummary/jax.numpy.min", "_autosummary/jax.numpy.minimum", "_autosummary/jax.numpy.mod", "_autosummary/jax.numpy.modf", "_autosummary/jax.numpy.moveaxis", "_autosummary/jax.numpy.multiply", "_autosummary/jax.numpy.nan_to_num", "_autosummary/jax.numpy.nanargmax", "_autosummary/jax.numpy.nanargmin", "_autosummary/jax.numpy.nancumprod", "_autosummary/jax.numpy.nancumsum", "_autosummary/jax.numpy.nanmax", "_autosummary/jax.numpy.nanmean", "_autosummary/jax.numpy.nanmedian", "_autosummary/jax.numpy.nanmin", "_autosummary/jax.numpy.nanpercentile", "_autosummary/jax.numpy.nanprod", "_autosummary/jax.numpy.nanquantile", "_autosummary/jax.numpy.nanstd", "_autosummary/jax.numpy.nansum", "_autosummary/jax.numpy.nanvar", "_autosummary/jax.numpy.ndarray", "_autosummary/jax.numpy.ndarray.at", "_autosummary/jax.numpy.ndim", "_autosummary/jax.numpy.negative", "_autosummary/jax.numpy.nextafter", "_autosummary/jax.numpy.nonzero", "_autosummary/jax.numpy.not_equal", "_autosummary/jax.numpy.number", "_autosummary/jax.numpy.object_", "_autosummary/jax.numpy.ogrid", "_autosummary/jax.numpy.ones", "_autosummary/jax.numpy.ones_like", "_autosummary/jax.numpy.outer", "_autosummary/jax.numpy.packbits", "_autosummary/jax.numpy.pad", "_autosummary/jax.numpy.partition", "_autosummary/jax.numpy.percentile", "_autosummary/jax.numpy.permute_dims", "_autosummary/jax.numpy.piecewise", "_autosummary/jax.numpy.place", "_autosummary/jax.numpy.poly", "_autosummary/jax.numpy.polyadd", "_autosummary/jax.numpy.polyder", "_autosummary/jax.numpy.polydiv", "_autosummary/jax.numpy.polyfit", "_autosummary/jax.numpy.polyint", "_autosummary/jax.numpy.polymul", "_autosummary/jax.numpy.polysub", "_autosummary/jax.numpy.polyval", "_autosummary/jax.numpy.positive", "_autosummary/jax.numpy.pow", "_autosummary/jax.numpy.power", "_autosummary/jax.numpy.printoptions", "_autosummary/jax.numpy.prod", "_autosummary/jax.numpy.promote_types", "_autosummary/jax.numpy.ptp", "_autosummary/jax.numpy.put", "_autosummary/jax.numpy.put_along_axis", "_autosummary/jax.numpy.quantile", "_autosummary/jax.numpy.r_", "_autosummary/jax.numpy.rad2deg", "_autosummary/jax.numpy.radians", "_autosummary/jax.numpy.ravel", "_autosummary/jax.numpy.ravel_multi_index", "_autosummary/jax.numpy.real", "_autosummary/jax.numpy.reciprocal", "_autosummary/jax.numpy.remainder", "_autosummary/jax.numpy.repeat", "_autosummary/jax.numpy.reshape", "_autosummary/jax.numpy.resize", "_autosummary/jax.numpy.result_type", "_autosummary/jax.numpy.right_shift", "_autosummary/jax.numpy.rint", "_autosummary/jax.numpy.roll", "_autosummary/jax.numpy.rollaxis", "_autosummary/jax.numpy.roots", "_autosummary/jax.numpy.rot90", "_autosummary/jax.numpy.round", "_autosummary/jax.numpy.s_", "_autosummary/jax.numpy.save", "_autosummary/jax.numpy.savez", "_autosummary/jax.numpy.searchsorted", "_autosummary/jax.numpy.select", "_autosummary/jax.numpy.set_printoptions", "_autosummary/jax.numpy.setdiff1d", "_autosummary/jax.numpy.setxor1d", "_autosummary/jax.numpy.shape", "_autosummary/jax.numpy.sign", "_autosummary/jax.numpy.signbit", "_autosummary/jax.numpy.signedinteger", "_autosummary/jax.numpy.sin", "_autosummary/jax.numpy.sinc", "_autosummary/jax.numpy.single", "_autosummary/jax.numpy.sinh", "_autosummary/jax.numpy.size", "_autosummary/jax.numpy.sort", "_autosummary/jax.numpy.sort_complex", "_autosummary/jax.numpy.spacing", "_autosummary/jax.numpy.split", "_autosummary/jax.numpy.sqrt", "_autosummary/jax.numpy.square", "_autosummary/jax.numpy.squeeze", "_autosummary/jax.numpy.stack", "_autosummary/jax.numpy.std", "_autosummary/jax.numpy.subtract", "_autosummary/jax.numpy.sum", "_autosummary/jax.numpy.swapaxes", "_autosummary/jax.numpy.take", "_autosummary/jax.numpy.take_along_axis", "_autosummary/jax.numpy.tan", "_autosummary/jax.numpy.tanh", "_autosummary/jax.numpy.tensordot", "_autosummary/jax.numpy.tile", "_autosummary/jax.numpy.trace", "_autosummary/jax.numpy.transpose", "_autosummary/jax.numpy.trapezoid", "_autosummary/jax.numpy.tri", "_autosummary/jax.numpy.tril", "_autosummary/jax.numpy.tril_indices", "_autosummary/jax.numpy.tril_indices_from", "_autosummary/jax.numpy.trim_zeros", "_autosummary/jax.numpy.triu", "_autosummary/jax.numpy.triu_indices", "_autosummary/jax.numpy.triu_indices_from", "_autosummary/jax.numpy.true_divide", "_autosummary/jax.numpy.trunc", "_autosummary/jax.numpy.ufunc", "_autosummary/jax.numpy.uint", "_autosummary/jax.numpy.uint16", "_autosummary/jax.numpy.uint32", "_autosummary/jax.numpy.uint64", "_autosummary/jax.numpy.uint8", "_autosummary/jax.numpy.union1d", "_autosummary/jax.numpy.unique", "_autosummary/jax.numpy.unique_all", "_autosummary/jax.numpy.unique_counts", "_autosummary/jax.numpy.unique_inverse", "_autosummary/jax.numpy.unique_values", "_autosummary/jax.numpy.unpackbits", "_autosummary/jax.numpy.unravel_index", "_autosummary/jax.numpy.unsignedinteger", "_autosummary/jax.numpy.unstack", "_autosummary/jax.numpy.unwrap", "_autosummary/jax.numpy.vander", "_autosummary/jax.numpy.var", "_autosummary/jax.numpy.vdot", "_autosummary/jax.numpy.vecdot", "_autosummary/jax.numpy.vecmat", "_autosummary/jax.numpy.vectorize", "_autosummary/jax.numpy.vsplit", "_autosummary/jax.numpy.vstack", "_autosummary/jax.numpy.where", "_autosummary/jax.numpy.zeros", "_autosummary/jax.numpy.zeros_like", "_autosummary/jax.numpy_rank_promotion", "_autosummary/jax.ops.segment_max", "_autosummary/jax.ops.segment_min", "_autosummary/jax.ops.segment_prod", "_autosummary/jax.ops.segment_sum", "_autosummary/jax.pmap", "_autosummary/jax.print_environment_info", "_autosummary/jax.process_count", "_autosummary/jax.process_index", "_autosummary/jax.process_indices", "_autosummary/jax.profiler.StepTraceAnnotation", "_autosummary/jax.profiler.TraceAnnotation", "_autosummary/jax.profiler.annotate_function", "_autosummary/jax.profiler.device_memory_profile", "_autosummary/jax.profiler.save_device_memory_profile", "_autosummary/jax.profiler.start_server", "_autosummary/jax.profiler.start_trace", "_autosummary/jax.profiler.stop_trace", "_autosummary/jax.profiler.trace", "_autosummary/jax.pure_callback", "_autosummary/jax.random.PRNGKey", "_autosummary/jax.random.ball", "_autosummary/jax.random.bernoulli", "_autosummary/jax.random.beta", "_autosummary/jax.random.binomial", "_autosummary/jax.random.bits", "_autosummary/jax.random.categorical", "_autosummary/jax.random.cauchy", "_autosummary/jax.random.chisquare", "_autosummary/jax.random.choice", "_autosummary/jax.random.clone", "_autosummary/jax.random.dirichlet", "_autosummary/jax.random.double_sided_maxwell", "_autosummary/jax.random.exponential", "_autosummary/jax.random.f", "_autosummary/jax.random.fold_in", "_autosummary/jax.random.gamma", "_autosummary/jax.random.generalized_normal", "_autosummary/jax.random.geometric", "_autosummary/jax.random.gumbel", "_autosummary/jax.random.key", "_autosummary/jax.random.key_data", "_autosummary/jax.random.laplace", "_autosummary/jax.random.loggamma", "_autosummary/jax.random.logistic", "_autosummary/jax.random.lognormal", "_autosummary/jax.random.maxwell", "_autosummary/jax.random.multinomial", "_autosummary/jax.random.multivariate_normal", "_autosummary/jax.random.normal", "_autosummary/jax.random.orthogonal", "_autosummary/jax.random.pareto", "_autosummary/jax.random.permutation", "_autosummary/jax.random.poisson", "_autosummary/jax.random.rademacher", "_autosummary/jax.random.randint", "_autosummary/jax.random.rayleigh", "_autosummary/jax.random.split", "_autosummary/jax.random.t", "_autosummary/jax.random.triangular", "_autosummary/jax.random.truncated_normal", "_autosummary/jax.random.uniform", "_autosummary/jax.random.wald", "_autosummary/jax.random.weibull_min", "_autosummary/jax.random.wrap_key_data", "_autosummary/jax.scipy.cluster.vq.vq", "_autosummary/jax.scipy.fft.dct", "_autosummary/jax.scipy.fft.dctn", "_autosummary/jax.scipy.fft.idct", "_autosummary/jax.scipy.fft.idctn", "_autosummary/jax.scipy.integrate.trapezoid", "_autosummary/jax.scipy.interpolate.RegularGridInterpolator", "_autosummary/jax.scipy.linalg.block_diag", "_autosummary/jax.scipy.linalg.cho_factor", "_autosummary/jax.scipy.linalg.cho_solve", "_autosummary/jax.scipy.linalg.cholesky", "_autosummary/jax.scipy.linalg.det", "_autosummary/jax.scipy.linalg.eigh", "_autosummary/jax.scipy.linalg.eigh_tridiagonal", "_autosummary/jax.scipy.linalg.expm", "_autosummary/jax.scipy.linalg.expm_frechet", "_autosummary/jax.scipy.linalg.funm", "_autosummary/jax.scipy.linalg.hessenberg", "_autosummary/jax.scipy.linalg.hilbert", "_autosummary/jax.scipy.linalg.inv", "_autosummary/jax.scipy.linalg.lu", "_autosummary/jax.scipy.linalg.lu_factor", "_autosummary/jax.scipy.linalg.lu_solve", "_autosummary/jax.scipy.linalg.pascal", "_autosummary/jax.scipy.linalg.polar", "_autosummary/jax.scipy.linalg.qr", "_autosummary/jax.scipy.linalg.rsf2csf", "_autosummary/jax.scipy.linalg.schur", "_autosummary/jax.scipy.linalg.solve", "_autosummary/jax.scipy.linalg.solve_triangular", "_autosummary/jax.scipy.linalg.sqrtm", "_autosummary/jax.scipy.linalg.svd", "_autosummary/jax.scipy.linalg.toeplitz", "_autosummary/jax.scipy.ndimage.map_coordinates", "_autosummary/jax.scipy.optimize.OptimizeResults", "_autosummary/jax.scipy.optimize.minimize", "_autosummary/jax.scipy.signal.convolve", "_autosummary/jax.scipy.signal.convolve2d", "_autosummary/jax.scipy.signal.correlate", "_autosummary/jax.scipy.signal.correlate2d", "_autosummary/jax.scipy.signal.csd", "_autosummary/jax.scipy.signal.detrend", "_autosummary/jax.scipy.signal.fftconvolve", "_autosummary/jax.scipy.signal.istft", "_autosummary/jax.scipy.signal.stft", "_autosummary/jax.scipy.signal.welch", "_autosummary/jax.scipy.sparse.linalg.bicgstab", "_autosummary/jax.scipy.sparse.linalg.cg", "_autosummary/jax.scipy.sparse.linalg.gmres", "_autosummary/jax.scipy.spatial.transform.Rotation", "_autosummary/jax.scipy.spatial.transform.Slerp", "_autosummary/jax.scipy.special.bernoulli", "_autosummary/jax.scipy.special.beta", "_autosummary/jax.scipy.special.betainc", "_autosummary/jax.scipy.special.betaln", "_autosummary/jax.scipy.special.digamma", "_autosummary/jax.scipy.special.entr", "_autosummary/jax.scipy.special.erf", "_autosummary/jax.scipy.special.erfc", "_autosummary/jax.scipy.special.erfinv", "_autosummary/jax.scipy.special.exp1", "_autosummary/jax.scipy.special.expi", "_autosummary/jax.scipy.special.expit", "_autosummary/jax.scipy.special.expn", "_autosummary/jax.scipy.special.factorial", "_autosummary/jax.scipy.special.fresnel", "_autosummary/jax.scipy.special.gamma", "_autosummary/jax.scipy.special.gammainc", "_autosummary/jax.scipy.special.gammaincc", "_autosummary/jax.scipy.special.gammaln", "_autosummary/jax.scipy.special.gammasgn", "_autosummary/jax.scipy.special.hyp1f1", "_autosummary/jax.scipy.special.i0", "_autosummary/jax.scipy.special.i0e", "_autosummary/jax.scipy.special.i1", "_autosummary/jax.scipy.special.i1e", "_autosummary/jax.scipy.special.kl_div", "_autosummary/jax.scipy.special.log_ndtr", "_autosummary/jax.scipy.special.log_softmax", "_autosummary/jax.scipy.special.logit", "_autosummary/jax.scipy.special.logsumexp", "_autosummary/jax.scipy.special.lpmn", "_autosummary/jax.scipy.special.lpmn_values", "_autosummary/jax.scipy.special.multigammaln", "_autosummary/jax.scipy.special.ndtr", "_autosummary/jax.scipy.special.ndtri", "_autosummary/jax.scipy.special.poch", "_autosummary/jax.scipy.special.polygamma", "_autosummary/jax.scipy.special.rel_entr", "_autosummary/jax.scipy.special.softmax", "_autosummary/jax.scipy.special.spence", "_autosummary/jax.scipy.special.sph_harm", "_autosummary/jax.scipy.special.xlog1py", "_autosummary/jax.scipy.special.xlogy", "_autosummary/jax.scipy.special.zeta", "_autosummary/jax.scipy.stats.bernoulli.cdf", "_autosummary/jax.scipy.stats.bernoulli.logpmf", "_autosummary/jax.scipy.stats.bernoulli.pmf", "_autosummary/jax.scipy.stats.bernoulli.ppf", "_autosummary/jax.scipy.stats.beta.cdf", "_autosummary/jax.scipy.stats.beta.logcdf", "_autosummary/jax.scipy.stats.beta.logpdf", "_autosummary/jax.scipy.stats.beta.logsf", "_autosummary/jax.scipy.stats.beta.pdf", "_autosummary/jax.scipy.stats.beta.sf", "_autosummary/jax.scipy.stats.betabinom.logpmf", "_autosummary/jax.scipy.stats.betabinom.pmf", "_autosummary/jax.scipy.stats.binom.logpmf", "_autosummary/jax.scipy.stats.binom.pmf", "_autosummary/jax.scipy.stats.cauchy.cdf", "_autosummary/jax.scipy.stats.cauchy.isf", "_autosummary/jax.scipy.stats.cauchy.logcdf", "_autosummary/jax.scipy.stats.cauchy.logpdf", "_autosummary/jax.scipy.stats.cauchy.logsf", "_autosummary/jax.scipy.stats.cauchy.pdf", "_autosummary/jax.scipy.stats.cauchy.ppf", "_autosummary/jax.scipy.stats.cauchy.sf", "_autosummary/jax.scipy.stats.chi2.cdf", "_autosummary/jax.scipy.stats.chi2.logcdf", "_autosummary/jax.scipy.stats.chi2.logpdf", "_autosummary/jax.scipy.stats.chi2.logsf", "_autosummary/jax.scipy.stats.chi2.pdf", "_autosummary/jax.scipy.stats.chi2.sf", "_autosummary/jax.scipy.stats.dirichlet.logpdf", "_autosummary/jax.scipy.stats.dirichlet.pdf", "_autosummary/jax.scipy.stats.expon.cdf", "_autosummary/jax.scipy.stats.expon.logcdf", "_autosummary/jax.scipy.stats.expon.logpdf", "_autosummary/jax.scipy.stats.expon.logsf", "_autosummary/jax.scipy.stats.expon.pdf", "_autosummary/jax.scipy.stats.expon.ppf", "_autosummary/jax.scipy.stats.expon.sf", "_autosummary/jax.scipy.stats.gamma.cdf", "_autosummary/jax.scipy.stats.gamma.logcdf", "_autosummary/jax.scipy.stats.gamma.logpdf", "_autosummary/jax.scipy.stats.gamma.logsf", "_autosummary/jax.scipy.stats.gamma.pdf", "_autosummary/jax.scipy.stats.gamma.sf", "_autosummary/jax.scipy.stats.gaussian_kde", "_autosummary/jax.scipy.stats.gaussian_kde.evaluate", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_box_1d", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_gaussian", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_kde", "_autosummary/jax.scipy.stats.gaussian_kde.logpdf", "_autosummary/jax.scipy.stats.gaussian_kde.pdf", "_autosummary/jax.scipy.stats.gaussian_kde.resample", "_autosummary/jax.scipy.stats.gennorm.cdf", "_autosummary/jax.scipy.stats.gennorm.logpdf", "_autosummary/jax.scipy.stats.gennorm.pdf", "_autosummary/jax.scipy.stats.geom.logpmf", "_autosummary/jax.scipy.stats.geom.pmf", "_autosummary/jax.scipy.stats.laplace.cdf", "_autosummary/jax.scipy.stats.laplace.logpdf", "_autosummary/jax.scipy.stats.laplace.pdf", "_autosummary/jax.scipy.stats.logistic.cdf", "_autosummary/jax.scipy.stats.logistic.isf", "_autosummary/jax.scipy.stats.logistic.logpdf", "_autosummary/jax.scipy.stats.logistic.pdf", "_autosummary/jax.scipy.stats.logistic.ppf", "_autosummary/jax.scipy.stats.logistic.sf", "_autosummary/jax.scipy.stats.mode", "_autosummary/jax.scipy.stats.multinomial.logpmf", "_autosummary/jax.scipy.stats.multinomial.pmf", "_autosummary/jax.scipy.stats.multivariate_normal.logpdf", "_autosummary/jax.scipy.stats.multivariate_normal.pdf", "_autosummary/jax.scipy.stats.nbinom.logpmf", "_autosummary/jax.scipy.stats.nbinom.pmf", "_autosummary/jax.scipy.stats.norm.cdf", "_autosummary/jax.scipy.stats.norm.isf", "_autosummary/jax.scipy.stats.norm.logcdf", "_autosummary/jax.scipy.stats.norm.logpdf", "_autosummary/jax.scipy.stats.norm.logsf", "_autosummary/jax.scipy.stats.norm.pdf", "_autosummary/jax.scipy.stats.norm.ppf", "_autosummary/jax.scipy.stats.norm.sf", "_autosummary/jax.scipy.stats.pareto.logpdf", "_autosummary/jax.scipy.stats.pareto.pdf", "_autosummary/jax.scipy.stats.poisson.cdf", "_autosummary/jax.scipy.stats.poisson.logpmf", "_autosummary/jax.scipy.stats.poisson.pmf", "_autosummary/jax.scipy.stats.rankdata", "_autosummary/jax.scipy.stats.sem", "_autosummary/jax.scipy.stats.t.logpdf", "_autosummary/jax.scipy.stats.t.pdf", "_autosummary/jax.scipy.stats.truncnorm.cdf", "_autosummary/jax.scipy.stats.truncnorm.logcdf", "_autosummary/jax.scipy.stats.truncnorm.logpdf", "_autosummary/jax.scipy.stats.truncnorm.logsf", "_autosummary/jax.scipy.stats.truncnorm.pdf", "_autosummary/jax.scipy.stats.truncnorm.sf", "_autosummary/jax.scipy.stats.uniform.cdf", "_autosummary/jax.scipy.stats.uniform.logpdf", "_autosummary/jax.scipy.stats.uniform.pdf", "_autosummary/jax.scipy.stats.uniform.ppf", "_autosummary/jax.scipy.stats.vonmises.logpdf", "_autosummary/jax.scipy.stats.vonmises.pdf", "_autosummary/jax.scipy.stats.wrapcauchy.logpdf", "_autosummary/jax.scipy.stats.wrapcauchy.pdf", "_autosummary/jax.shard_map", "_autosummary/jax.test_util.check_grads", "_autosummary/jax.test_util.check_jvp", "_autosummary/jax.test_util.check_vjp", "_autosummary/jax.transfer_guard", "_autosummary/jax.tree.all", "_autosummary/jax.tree.broadcast", "_autosummary/jax.tree.flatten", "_autosummary/jax.tree.flatten_with_path", "_autosummary/jax.tree.leaves", "_autosummary/jax.tree.leaves_with_path", "_autosummary/jax.tree.map", "_autosummary/jax.tree.map_with_path", "_autosummary/jax.tree.reduce", "_autosummary/jax.tree.structure", "_autosummary/jax.tree.transpose", "_autosummary/jax.tree.unflatten", "_autosummary/jax.tree_util.KeyEntry", "_autosummary/jax.tree_util.KeyPath", "_autosummary/jax.tree_util.Partial", "_autosummary/jax.tree_util.all_leaves", "_autosummary/jax.tree_util.build_tree", "_autosummary/jax.tree_util.keystr", "_autosummary/jax.tree_util.register_dataclass", "_autosummary/jax.tree_util.register_pytree_node", "_autosummary/jax.tree_util.register_pytree_node_class", "_autosummary/jax.tree_util.register_pytree_with_keys", "_autosummary/jax.tree_util.register_pytree_with_keys_class", "_autosummary/jax.tree_util.register_static", "_autosummary/jax.tree_util.tree_all", "_autosummary/jax.tree_util.tree_broadcast", "_autosummary/jax.tree_util.tree_flatten", "_autosummary/jax.tree_util.tree_flatten_with_path", "_autosummary/jax.tree_util.tree_leaves", "_autosummary/jax.tree_util.tree_leaves_with_path", "_autosummary/jax.tree_util.tree_map", "_autosummary/jax.tree_util.tree_map_with_path", "_autosummary/jax.tree_util.tree_reduce", "_autosummary/jax.tree_util.tree_structure", "_autosummary/jax.tree_util.tree_transpose", "_autosummary/jax.tree_util.tree_unflatten", "_autosummary/jax.tree_util.treedef_children", "_autosummary/jax.tree_util.treedef_is_leaf", "_autosummary/jax.tree_util.treedef_tuple", "_autosummary/jax.typing.ArrayLike", "_autosummary/jax.typing.DTypeLike", "_autosummary/jax.value_and_grad", "_autosummary/jax.vjp", "_autosummary/jax.vmap", "_autosummary/jaxlib.xla_client.register_custom_call_target", "_tutorials/advanced-compilation", "_tutorials/advanced-debugging", "_tutorials/index", "_tutorials/parallelism", "_tutorials/profiling-and-performance", "_tutorials/simple-neural-network", "about", "advanced-autodiff", "advanced_guide", "aot", "api_compatibility", "async_dispatch", "autodidax", "autodidax2_part1", "automatic-differentiation", "automatic-vectorization", "beginner_guide", "benchmarking", "buffer_donation", "building_on_jax", "changelog", "concurrency", "config_options", "contributing", "contributor_guide", "control-flow", "custom_pytrees", "debugging", "debugging/checkify_guide", "debugging/flags", "debugging/print_breakpoint", "default_dtypes", "deprecation", "developer", "device_memory_profiling", "distributed_data_loading", "errors", "export/export", "export/index", "export/jax2tf", "export/shape_poly", "extensions", "external-callbacks", "faq", "ffi", "glossary", "gpu_memory_allocation", "gpu_performance_tips", "gradient-checkpointing", "index", "installation", "intro_parallel", "investigating_a_regression", "jax", "jax-primitives", "jax.core", "jax.debug", "jax.distributed", "jax.dlpack", "jax.dtypes", "jax.example_libraries", "jax.example_libraries.optimizers", "jax.example_libraries.stax", "jax.experimental", "jax.experimental.checkify", "jax.experimental.compilation_cache", "jax.experimental.custom_dce", "jax.experimental.custom_partitioning", "jax.experimental.jet", "jax.experimental.key_reuse", "jax.experimental.mesh_utils", "jax.experimental.multihost_utils", "jax.experimental.pallas", "jax.experimental.pallas.mosaic_gpu", "jax.experimental.pallas.tpu", "jax.experimental.pallas.triton", "jax.experimental.pjit", "jax.experimental.serialize_executable", "jax.experimental.shard_map", "jax.experimental.sparse", "jax.export", "jax.extend", "jax.extend.core", "jax.extend.linear_util", "jax.extend.mlir", "jax.extend.random", "jax.ffi", "jax.flatten_util", "jax.image", "jax.lax", "jax.lib", "jax.nn", "jax.nn.initializers", "jax.numpy", "jax.ops", "jax.profiler", "jax.random", "jax.scipy", "jax.sharding", "jax.stages", "jax.test_util", "jax.tree", "jax.tree_util", "jax.typing", "jax_array_migration", "jaxpr", "jep/10657-sequencing-effects", "jep/11830-new-remat-checkpoint", "jep/12049-type-annotations", "jep/14273-shard-map", "jep/15856-jex", "jep/17111-shmap-transpose", "jep/18137-numpy-scipy-scope", "jep/2026-custom-derivatives", "jep/25516-effver", "jep/263-prng", "jep/28661-jax-array-protocol", "jep/4008-custom-vjp-update", "jep/4410-omnistaging", "jep/9263-typed-keys", "jep/9407-type-promotion", "jep/9419-jax-versioning", "jep/index", "jit-compilation", "key-concepts", "multi_process", "notebooks/Common_Gotchas_in_JAX", "notebooks/Custom_derivative_rules_for_Python_code", "notebooks/Distributed_arrays_and_automatic_parallelization", "notebooks/Neural_Network_and_Data_Loading", "notebooks/Writing_custom_interpreters_in_Jax", "notebooks/autodiff_cookbook", "notebooks/autodiff_remat", "notebooks/convolutions", "notebooks/explicit-sharding", "notebooks/host-offloading", "notebooks/neural_network_with_tfds_data", "notebooks/shard_map", "notebooks/thinking_in_jax", "notebooks/vmapped_log_probs", "notes", "pallas/CHANGELOG", "pallas/design/async_note", "pallas/design/design", "pallas/design/index", "pallas/gpu/index", "pallas/gpu/reference", "pallas/grid_blockspec", "pallas/index", "pallas/pipelining", "pallas/quickstart", "pallas/tpu/details", "pallas/tpu/distributed", "pallas/tpu/index", "pallas/tpu/matmul", "pallas/tpu/pipelining", "pallas/tpu/sparse", "persistent_compilation_cache", "profiling", "pytrees", "random-numbers", "rank_promotion_warning", "sharded-computation", "stateful-computations", "tracing", "transfer_guard", "tutorials", "type_promotion", "working-with-pytrees", "xla_flags"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_autosummary/jax.Array.rst", "_autosummary/jax.Array.T.rst", "_autosummary/jax.Array.addressable_shards.rst", "_autosummary/jax.Array.all.rst", "_autosummary/jax.Array.any.rst", "_autosummary/jax.Array.argmax.rst", "_autosummary/jax.Array.argmin.rst", "_autosummary/jax.Array.argpartition.rst", "_autosummary/jax.Array.argsort.rst", "_autosummary/jax.Array.astype.rst", "_autosummary/jax.Array.at.rst", "_autosummary/jax.Array.choose.rst", "_autosummary/jax.Array.clip.rst", "_autosummary/jax.Array.committed.rst", "_autosummary/jax.Array.compress.rst", "_autosummary/jax.Array.conj.rst", "_autosummary/jax.Array.conjugate.rst", "_autosummary/jax.Array.copy.rst", "_autosummary/jax.Array.copy_to_host_async.rst", "_autosummary/jax.Array.cumprod.rst", "_autosummary/jax.Array.cumsum.rst", "_autosummary/jax.Array.device.rst", "_autosummary/jax.Array.diagonal.rst", "_autosummary/jax.Array.dot.rst", "_autosummary/jax.Array.dtype.rst", "_autosummary/jax.Array.flat.rst", "_autosummary/jax.Array.flatten.rst", "_autosummary/jax.Array.global_shards.rst", "_autosummary/jax.Array.imag.rst", "_autosummary/jax.Array.is_fully_addressable.rst", "_autosummary/jax.Array.is_fully_replicated.rst", "_autosummary/jax.Array.item.rst", "_autosummary/jax.Array.itemsize.rst", "_autosummary/jax.Array.mT.rst", "_autosummary/jax.Array.max.rst", "_autosummary/jax.Array.mean.rst", "_autosummary/jax.Array.min.rst", "_autosummary/jax.Array.nbytes.rst", "_autosummary/jax.Array.ndim.rst", "_autosummary/jax.Array.nonzero.rst", "_autosummary/jax.Array.prod.rst", "_autosummary/jax.Array.ptp.rst", "_autosummary/jax.Array.ravel.rst", "_autosummary/jax.Array.real.rst", "_autosummary/jax.Array.repeat.rst", "_autosummary/jax.Array.reshape.rst", "_autosummary/jax.Array.round.rst", "_autosummary/jax.Array.searchsorted.rst", "_autosummary/jax.Array.shape.rst", "_autosummary/jax.Array.sharding.rst", "_autosummary/jax.Array.size.rst", "_autosummary/jax.Array.sort.rst", "_autosummary/jax.Array.squeeze.rst", "_autosummary/jax.Array.std.rst", "_autosummary/jax.Array.sum.rst", "_autosummary/jax.Array.swapaxes.rst", "_autosummary/jax.Array.take.rst", "_autosummary/jax.Array.to_device.rst", "_autosummary/jax.Array.trace.rst", "_autosummary/jax.Array.transpose.rst", "_autosummary/jax.Array.var.rst", "_autosummary/jax.Array.view.rst", "_autosummary/jax.Device.rst", "_autosummary/jax.ShapeDtypeStruct.rst", "_autosummary/jax.block_until_ready.rst", "_autosummary/jax.check_tracer_leaks.rst", "_autosummary/jax.checking_leaks.rst", "_autosummary/jax.checkpoint.rst", "_autosummary/jax.clear_caches.rst", "_autosummary/jax.closure_convert.rst", "_autosummary/jax.config.rst", "_autosummary/jax.copy_to_host_async.rst", "_autosummary/jax.core.Tracer.rst", "_autosummary/jax.custom_batching.custom_vmap.rst", "_autosummary/jax.custom_batching.custom_vmap.def_vmap.rst", "_autosummary/jax.custom_batching.sequential_vmap.rst", "_autosummary/jax.custom_gradient.rst", "_autosummary/jax.custom_jvp.rst", "_autosummary/jax.custom_jvp.defjvp.rst", "_autosummary/jax.custom_jvp.defjvps.rst", "_autosummary/jax.custom_vjp.rst", "_autosummary/jax.custom_vjp.defvjp.rst", "_autosummary/jax.debug.breakpoint.rst", "_autosummary/jax.debug.callback.rst", "_autosummary/jax.debug.inspect_array_sharding.rst", "_autosummary/jax.debug.print.rst", "_autosummary/jax.debug.visualize_array_sharding.rst", "_autosummary/jax.debug.visualize_sharding.rst", "_autosummary/jax.debug_infs.rst", "_autosummary/jax.debug_nans.rst", "_autosummary/jax.default_backend.rst", "_autosummary/jax.default_device.rst", "_autosummary/jax.default_matmul_precision.rst", "_autosummary/jax.default_prng_impl.rst", "_autosummary/jax.device_count.rst", "_autosummary/jax.device_get.rst", "_autosummary/jax.device_put.rst", "_autosummary/jax.devices.rst", "_autosummary/jax.disable_jit.rst", "_autosummary/jax.distributed.initialize.rst", "_autosummary/jax.distributed.shutdown.rst", "_autosummary/jax.dlpack.from_dlpack.rst", "_autosummary/jax.dlpack.to_dlpack.rst", "_autosummary/jax.dtypes.bfloat16.rst", "_autosummary/jax.dtypes.canonicalize_dtype.rst", "_autosummary/jax.dtypes.float0.rst", "_autosummary/jax.dtypes.issubdtype.rst", "_autosummary/jax.dtypes.prng_key.rst", "_autosummary/jax.dtypes.result_type.rst", "_autosummary/jax.dtypes.scalar_type_of.rst", "_autosummary/jax.enable_checks.rst", "_autosummary/jax.enable_custom_prng.rst", "_autosummary/jax.enable_custom_vjp_by_custom_transpose.rst", "_autosummary/jax.ensure_compile_time_eval.rst", "_autosummary/jax.eval_shape.rst", "_autosummary/jax.experimental.checkify.Error.rst", "_autosummary/jax.experimental.checkify.JaxRuntimeError.rst", "_autosummary/jax.experimental.checkify.all_checks.rst", "_autosummary/jax.experimental.checkify.automatic_checks.rst", "_autosummary/jax.experimental.checkify.check.rst", "_autosummary/jax.experimental.checkify.check_error.rst", "_autosummary/jax.experimental.checkify.checkify.rst", "_autosummary/jax.experimental.checkify.div_checks.rst", "_autosummary/jax.experimental.checkify.float_checks.rst", "_autosummary/jax.experimental.checkify.index_checks.rst", "_autosummary/jax.experimental.checkify.nan_checks.rst", "_autosummary/jax.experimental.checkify.user_checks.rst", "_autosummary/jax.experimental.custom_dce.custom_dce.rst", "_autosummary/jax.experimental.custom_dce.custom_dce.def_dce.rst", "_autosummary/jax.experimental.disable_x64.rst", "_autosummary/jax.experimental.enable_x64.rst", "_autosummary/jax.experimental.io_callback.rst", "_autosummary/jax.experimental.mesh_utils.create_device_mesh.rst", "_autosummary/jax.experimental.mesh_utils.create_hybrid_device_mesh.rst", "_autosummary/jax.experimental.multihost_utils.assert_equal.rst", "_autosummary/jax.experimental.multihost_utils.broadcast_one_to_all.rst", "_autosummary/jax.experimental.multihost_utils.global_array_to_host_local_array.rst", "_autosummary/jax.experimental.multihost_utils.host_local_array_to_global_array.rst", "_autosummary/jax.experimental.multihost_utils.process_allgather.rst", "_autosummary/jax.experimental.multihost_utils.sync_global_devices.rst", "_autosummary/jax.experimental.pallas.BlockSpec.rst", "_autosummary/jax.experimental.pallas.GridSpec.rst", "_autosummary/jax.experimental.pallas.MemoryRef.rst", "_autosummary/jax.experimental.pallas.Slice.rst", "_autosummary/jax.experimental.pallas.atomic_add.rst", "_autosummary/jax.experimental.pallas.atomic_and.rst", "_autosummary/jax.experimental.pallas.atomic_cas.rst", "_autosummary/jax.experimental.pallas.atomic_max.rst", "_autosummary/jax.experimental.pallas.atomic_min.rst", "_autosummary/jax.experimental.pallas.atomic_or.rst", "_autosummary/jax.experimental.pallas.atomic_xchg.rst", "_autosummary/jax.experimental.pallas.atomic_xor.rst", "_autosummary/jax.experimental.pallas.broadcast_to.rst", "_autosummary/jax.experimental.pallas.debug_print.rst", "_autosummary/jax.experimental.pallas.dot.rst", "_autosummary/jax.experimental.pallas.load.rst", "_autosummary/jax.experimental.pallas.max_contiguous.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.ACC.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.Barrier.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.BlockSpec.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.CompilerParams.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.GMEM.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.Layout.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.MemorySpace.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.SMEM.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.SwizzleTransform.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.TilingTransform.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.TransposeTransform.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.barrier_arrive.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.barrier_wait.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.commit_smem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.copy_gmem_to_smem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.copy_smem_to_gmem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.emit_pipeline.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.layout_cast.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.set_max_registers.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.wait_smem_to_gmem.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.wgmma.rst", "_autosummary/jax.experimental.pallas.mosaic_gpu.wgmma_wait.rst", "_autosummary/jax.experimental.pallas.multiple_of.rst", "_autosummary/jax.experimental.pallas.num_programs.rst", "_autosummary/jax.experimental.pallas.pallas_call.rst", "_autosummary/jax.experimental.pallas.program_id.rst", "_autosummary/jax.experimental.pallas.run_scoped.rst", "_autosummary/jax.experimental.pallas.store.rst", "_autosummary/jax.experimental.pallas.swap.rst", "_autosummary/jax.experimental.pallas.triton.CompilerParams.rst", "_autosummary/jax.experimental.pallas.triton.approx_tanh.rst", "_autosummary/jax.experimental.pallas.triton.debug_barrier.rst", "_autosummary/jax.experimental.pallas.triton.elementwise_inline_asm.rst", "_autosummary/jax.experimental.pallas.when.rst", "_autosummary/jax.experimental.serialize_executable.deserialize_and_load.rst", "_autosummary/jax.experimental.serialize_executable.serialize.rst", "_autosummary/jax.experimental.shard_map.shard_map.rst", "_autosummary/jax.experimental.sparse.BCOO.rst", "_autosummary/jax.experimental.sparse.BCSR.rst", "_autosummary/jax.experimental.sparse.COO.rst", "_autosummary/jax.experimental.sparse.CSC.rst", "_autosummary/jax.experimental.sparse.CSR.rst", "_autosummary/jax.experimental.sparse.JAXSparse.rst", "_autosummary/jax.experimental.sparse.bcoo_broadcast_in_dim.rst", "_autosummary/jax.experimental.sparse.bcoo_concatenate.rst", "_autosummary/jax.experimental.sparse.bcoo_dot_general.rst", "_autosummary/jax.experimental.sparse.bcoo_dot_general_sampled.rst", "_autosummary/jax.experimental.sparse.bcoo_dynamic_slice.rst", "_autosummary/jax.experimental.sparse.bcoo_extract.rst", "_autosummary/jax.experimental.sparse.bcoo_fromdense.rst", "_autosummary/jax.experimental.sparse.bcoo_gather.rst", "_autosummary/jax.experimental.sparse.bcoo_multiply_dense.rst", "_autosummary/jax.experimental.sparse.bcoo_multiply_sparse.rst", "_autosummary/jax.experimental.sparse.bcoo_reduce_sum.rst", "_autosummary/jax.experimental.sparse.bcoo_reshape.rst", "_autosummary/jax.experimental.sparse.bcoo_slice.rst", "_autosummary/jax.experimental.sparse.bcoo_sort_indices.rst", "_autosummary/jax.experimental.sparse.bcoo_squeeze.rst", "_autosummary/jax.experimental.sparse.bcoo_sum_duplicates.rst", "_autosummary/jax.experimental.sparse.bcoo_todense.rst", "_autosummary/jax.experimental.sparse.bcoo_transpose.rst", "_autosummary/jax.experimental.sparse.bcoo_update_layout.rst", "_autosummary/jax.experimental.sparse.bcsr_dot_general.rst", "_autosummary/jax.experimental.sparse.bcsr_extract.rst", "_autosummary/jax.experimental.sparse.bcsr_fromdense.rst", "_autosummary/jax.experimental.sparse.bcsr_todense.rst", "_autosummary/jax.experimental.sparse.coo_fromdense.rst", "_autosummary/jax.experimental.sparse.coo_matmat.rst", "_autosummary/jax.experimental.sparse.coo_matvec.rst", "_autosummary/jax.experimental.sparse.coo_todense.rst", "_autosummary/jax.experimental.sparse.csr_fromdense.rst", "_autosummary/jax.experimental.sparse.csr_matmat.rst", "_autosummary/jax.experimental.sparse.csr_matvec.rst", "_autosummary/jax.experimental.sparse.csr_todense.rst", "_autosummary/jax.experimental.sparse.empty.rst", "_autosummary/jax.experimental.sparse.eye.rst", "_autosummary/jax.experimental.sparse.grad.rst", "_autosummary/jax.experimental.sparse.linalg.lobpcg_standard.rst", "_autosummary/jax.experimental.sparse.linalg.spsolve.rst", "_autosummary/jax.experimental.sparse.random_bcoo.rst", "_autosummary/jax.experimental.sparse.sparsify.rst", "_autosummary/jax.experimental.sparse.todense.rst", "_autosummary/jax.experimental.sparse.value_and_grad.rst", "_autosummary/jax.export.SymbolicScope.rst", "_autosummary/jax.export.default_export_platform.rst", "_autosummary/jax.export.deserialize.rst", "_autosummary/jax.export.export.rst", "_autosummary/jax.export.is_symbolic_dim.rst", "_autosummary/jax.export.maximum_supported_calling_convention_version.rst", "_autosummary/jax.export.minimum_supported_calling_convention_version.rst", "_autosummary/jax.export.register_namedtuple_serialization.rst", "_autosummary/jax.export.register_pytree_node_serialization.rst", "_autosummary/jax.export.symbolic_args_specs.rst", "_autosummary/jax.export.symbolic_shape.rst", "_autosummary/jax.extend.core.ClosedJaxpr.rst", "_autosummary/jax.extend.core.Jaxpr.rst", "_autosummary/jax.extend.core.JaxprEqn.rst", "_autosummary/jax.extend.core.Literal.rst", "_autosummary/jax.extend.core.Primitive.rst", "_autosummary/jax.extend.core.Token.rst", "_autosummary/jax.extend.core.Var.rst", "_autosummary/jax.extend.core.array_types.rst", "_autosummary/jax.extend.core.jaxpr_as_fun.rst", "_autosummary/jax.extend.core.primitives.rst", "_autosummary/jax.extend.ffi.ffi_call.rst", "_autosummary/jax.extend.ffi.ffi_lowering.rst", "_autosummary/jax.extend.ffi.pycapsule.rst", "_autosummary/jax.extend.ffi.register_ffi_target.rst", "_autosummary/jax.extend.linear_util.StoreException.rst", "_autosummary/jax.extend.linear_util.WrappedFun.rst", "_autosummary/jax.extend.linear_util.cache.rst", "_autosummary/jax.extend.linear_util.merge_linear_aux.rst", "_autosummary/jax.extend.linear_util.transformation.rst", "_autosummary/jax.extend.linear_util.transformation_with_aux.rst", "_autosummary/jax.extend.linear_util.wrap_init.rst", "_autosummary/jax.extend.mlir.dialects.rst", "_autosummary/jax.extend.mlir.ir.rst", "_autosummary/jax.extend.mlir.passmanager.rst", "_autosummary/jax.extend.random.define_prng_impl.rst", "_autosummary/jax.extend.random.rbg_prng_impl.rst", "_autosummary/jax.extend.random.seed_with_impl.rst", "_autosummary/jax.extend.random.threefry2x32_p.rst", "_autosummary/jax.extend.random.threefry_2x32.rst", "_autosummary/jax.extend.random.threefry_prng_impl.rst", "_autosummary/jax.extend.random.unsafe_rbg_prng_impl.rst", "_autosummary/jax.ffi.ffi_call.rst", "_autosummary/jax.ffi.ffi_lowering.rst", "_autosummary/jax.ffi.pycapsule.rst", "_autosummary/jax.ffi.register_ffi_target.rst", "_autosummary/jax.ffi.register_ffi_type_id.rst", "_autosummary/jax.flatten_util.ravel_pytree.rst", "_autosummary/jax.grad.rst", "_autosummary/jax.hessian.rst", "_autosummary/jax.image.resize.rst", "_autosummary/jax.image.scale_and_translate.rst", "_autosummary/jax.jacfwd.rst", "_autosummary/jax.jacobian.rst", "_autosummary/jax.jacrev.rst", "_autosummary/jax.jit.rst", "_autosummary/jax.jvp.rst", "_autosummary/jax.lax.abs.rst", "_autosummary/jax.lax.acos.rst", "_autosummary/jax.lax.acosh.rst", "_autosummary/jax.lax.add.rst", "_autosummary/jax.lax.after_all.rst", "_autosummary/jax.lax.all_gather.rst", "_autosummary/jax.lax.all_to_all.rst", "_autosummary/jax.lax.approx_max_k.rst", "_autosummary/jax.lax.approx_min_k.rst", "_autosummary/jax.lax.argmax.rst", "_autosummary/jax.lax.argmin.rst", "_autosummary/jax.lax.asin.rst", "_autosummary/jax.lax.asinh.rst", "_autosummary/jax.lax.associative_scan.rst", "_autosummary/jax.lax.atan.rst", "_autosummary/jax.lax.atan2.rst", "_autosummary/jax.lax.atanh.rst", "_autosummary/jax.lax.axis_index.rst", "_autosummary/jax.lax.axis_size.rst", "_autosummary/jax.lax.batch_matmul.rst", "_autosummary/jax.lax.bessel_i0e.rst", "_autosummary/jax.lax.bessel_i1e.rst", "_autosummary/jax.lax.betainc.rst", "_autosummary/jax.lax.bitcast_convert_type.rst", "_autosummary/jax.lax.bitwise_and.rst", "_autosummary/jax.lax.bitwise_not.rst", "_autosummary/jax.lax.bitwise_or.rst", "_autosummary/jax.lax.bitwise_xor.rst", "_autosummary/jax.lax.broadcast.rst", "_autosummary/jax.lax.broadcast_in_dim.rst", "_autosummary/jax.lax.broadcast_shapes.rst", "_autosummary/jax.lax.broadcast_to_rank.rst", "_autosummary/jax.lax.broadcasted_iota.rst", "_autosummary/jax.lax.cbrt.rst", "_autosummary/jax.lax.ceil.rst", "_autosummary/jax.lax.clamp.rst", "_autosummary/jax.lax.clz.rst", "_autosummary/jax.lax.collapse.rst", "_autosummary/jax.lax.complex.rst", "_autosummary/jax.lax.composite.rst", "_autosummary/jax.lax.concatenate.rst", "_autosummary/jax.lax.cond.rst", "_autosummary/jax.lax.conj.rst", "_autosummary/jax.lax.conv.rst", "_autosummary/jax.lax.conv_dimension_numbers.rst", "_autosummary/jax.lax.conv_general_dilated.rst", "_autosummary/jax.lax.conv_general_dilated_local.rst", "_autosummary/jax.lax.conv_general_dilated_patches.rst", "_autosummary/jax.lax.conv_transpose.rst", "_autosummary/jax.lax.conv_with_general_padding.rst", "_autosummary/jax.lax.convert_element_type.rst", "_autosummary/jax.lax.cos.rst", "_autosummary/jax.lax.cosh.rst", "_autosummary/jax.lax.cumlogsumexp.rst", "_autosummary/jax.lax.cummax.rst", "_autosummary/jax.lax.cummin.rst", "_autosummary/jax.lax.cumprod.rst", "_autosummary/jax.lax.cumsum.rst", "_autosummary/jax.lax.custom_linear_solve.rst", "_autosummary/jax.lax.custom_root.rst", "_autosummary/jax.lax.digamma.rst", "_autosummary/jax.lax.div.rst", "_autosummary/jax.lax.dot.rst", "_autosummary/jax.lax.dot_general.rst", "_autosummary/jax.lax.dynamic_index_in_dim.rst", "_autosummary/jax.lax.dynamic_slice.rst", "_autosummary/jax.lax.dynamic_slice_in_dim.rst", "_autosummary/jax.lax.dynamic_update_index_in_dim.rst", "_autosummary/jax.lax.dynamic_update_slice.rst", "_autosummary/jax.lax.dynamic_update_slice_in_dim.rst", "_autosummary/jax.lax.eq.rst", "_autosummary/jax.lax.erf.rst", "_autosummary/jax.lax.erf_inv.rst", "_autosummary/jax.lax.erfc.rst", "_autosummary/jax.lax.exp.rst", "_autosummary/jax.lax.exp2.rst", "_autosummary/jax.lax.expand_dims.rst", "_autosummary/jax.lax.expm1.rst", "_autosummary/jax.lax.fft.rst", "_autosummary/jax.lax.floor.rst", "_autosummary/jax.lax.fori_loop.rst", "_autosummary/jax.lax.full.rst", "_autosummary/jax.lax.full_like.rst", "_autosummary/jax.lax.gather.rst", "_autosummary/jax.lax.ge.rst", "_autosummary/jax.lax.gt.rst", "_autosummary/jax.lax.igamma.rst", "_autosummary/jax.lax.igammac.rst", "_autosummary/jax.lax.imag.rst", "_autosummary/jax.lax.index_in_dim.rst", "_autosummary/jax.lax.index_take.rst", "_autosummary/jax.lax.integer_pow.rst", "_autosummary/jax.lax.iota.rst", "_autosummary/jax.lax.is_finite.rst", "_autosummary/jax.lax.le.rst", "_autosummary/jax.lax.lgamma.rst", "_autosummary/jax.lax.linalg.SvdAlgorithm.rst", "_autosummary/jax.lax.linalg.cholesky.rst", "_autosummary/jax.lax.linalg.cholesky_update.rst", "_autosummary/jax.lax.linalg.eig.rst", "_autosummary/jax.lax.linalg.eigh.rst", "_autosummary/jax.lax.linalg.hessenberg.rst", "_autosummary/jax.lax.linalg.householder_product.rst", "_autosummary/jax.lax.linalg.lu.rst", "_autosummary/jax.lax.linalg.lu_pivots_to_permutation.rst", "_autosummary/jax.lax.linalg.qdwh.rst", "_autosummary/jax.lax.linalg.qr.rst", "_autosummary/jax.lax.linalg.schur.rst", "_autosummary/jax.lax.linalg.svd.rst", "_autosummary/jax.lax.linalg.symmetric_product.rst", "_autosummary/jax.lax.linalg.triangular_solve.rst", "_autosummary/jax.lax.linalg.tridiagonal.rst", "_autosummary/jax.lax.linalg.tridiagonal_solve.rst", "_autosummary/jax.lax.log.rst", "_autosummary/jax.lax.log1p.rst", "_autosummary/jax.lax.logistic.rst", "_autosummary/jax.lax.lt.rst", "_autosummary/jax.lax.map.rst", "_autosummary/jax.lax.max.rst", "_autosummary/jax.lax.min.rst", "_autosummary/jax.lax.mul.rst", "_autosummary/jax.lax.ne.rst", "_autosummary/jax.lax.neg.rst", "_autosummary/jax.lax.nextafter.rst", "_autosummary/jax.lax.optimization_barrier.rst", "_autosummary/jax.lax.pad.rst", "_autosummary/jax.lax.platform_dependent.rst", "_autosummary/jax.lax.pmax.rst", "_autosummary/jax.lax.pmean.rst", "_autosummary/jax.lax.pmin.rst", "_autosummary/jax.lax.polygamma.rst", "_autosummary/jax.lax.population_count.rst", "_autosummary/jax.lax.pow.rst", "_autosummary/jax.lax.ppermute.rst", "_autosummary/jax.lax.pshuffle.rst", "_autosummary/jax.lax.psum.rst", "_autosummary/jax.lax.psum_scatter.rst", "_autosummary/jax.lax.pswapaxes.rst", "_autosummary/jax.lax.random_gamma_grad.rst", "_autosummary/jax.lax.real.rst", "_autosummary/jax.lax.reciprocal.rst", "_autosummary/jax.lax.reduce.rst", "_autosummary/jax.lax.reduce_and.rst", "_autosummary/jax.lax.reduce_max.rst", "_autosummary/jax.lax.reduce_min.rst", "_autosummary/jax.lax.reduce_or.rst", "_autosummary/jax.lax.reduce_precision.rst", "_autosummary/jax.lax.reduce_prod.rst", "_autosummary/jax.lax.reduce_sum.rst", "_autosummary/jax.lax.reduce_window.rst", "_autosummary/jax.lax.reduce_xor.rst", "_autosummary/jax.lax.rem.rst", "_autosummary/jax.lax.reshape.rst", "_autosummary/jax.lax.rev.rst", "_autosummary/jax.lax.rng_bit_generator.rst", "_autosummary/jax.lax.rng_uniform.rst", "_autosummary/jax.lax.round.rst", "_autosummary/jax.lax.rsqrt.rst", "_autosummary/jax.lax.scan.rst", "_autosummary/jax.lax.scatter.rst", "_autosummary/jax.lax.scatter_add.rst", "_autosummary/jax.lax.scatter_apply.rst", "_autosummary/jax.lax.scatter_max.rst", "_autosummary/jax.lax.scatter_min.rst", "_autosummary/jax.lax.scatter_mul.rst", "_autosummary/jax.lax.select.rst", "_autosummary/jax.lax.select_n.rst", "_autosummary/jax.lax.shift_left.rst", "_autosummary/jax.lax.shift_right_arithmetic.rst", "_autosummary/jax.lax.shift_right_logical.rst", "_autosummary/jax.lax.sign.rst", "_autosummary/jax.lax.sin.rst", "_autosummary/jax.lax.sinh.rst", "_autosummary/jax.lax.slice.rst", "_autosummary/jax.lax.slice_in_dim.rst", "_autosummary/jax.lax.sort.rst", "_autosummary/jax.lax.sort_key_val.rst", "_autosummary/jax.lax.split.rst", "_autosummary/jax.lax.sqrt.rst", "_autosummary/jax.lax.square.rst", "_autosummary/jax.lax.squeeze.rst", "_autosummary/jax.lax.stop_gradient.rst", "_autosummary/jax.lax.sub.rst", "_autosummary/jax.lax.switch.rst", "_autosummary/jax.lax.tan.rst", "_autosummary/jax.lax.tanh.rst", "_autosummary/jax.lax.top_k.rst", "_autosummary/jax.lax.transpose.rst", "_autosummary/jax.lax.while_loop.rst", "_autosummary/jax.lax.with_sharding_constraint.rst", "_autosummary/jax.lax.zeros_like_array.rst", "_autosummary/jax.lax.zeta.rst", "_autosummary/jax.lib.xla_bridge.get_backend.rst", "_autosummary/jax.lib.xla_bridge.get_compile_options.rst", "_autosummary/jax.linear_transpose.rst", "_autosummary/jax.linearize.rst", "_autosummary/jax.live_arrays.rst", "_autosummary/jax.local_device_count.rst", "_autosummary/jax.local_devices.rst", "_autosummary/jax.log_compiles.rst", "_autosummary/jax.make_array_from_callback.rst", "_autosummary/jax.make_array_from_process_local_data.rst", "_autosummary/jax.make_array_from_single_device_arrays.rst", "_autosummary/jax.make_jaxpr.rst", "_autosummary/jax.make_mesh.rst", "_autosummary/jax.named_call.rst", "_autosummary/jax.named_scope.rst", "_autosummary/jax.nn.celu.rst", "_autosummary/jax.nn.dot_product_attention.rst", "_autosummary/jax.nn.elu.rst", "_autosummary/jax.nn.gelu.rst", "_autosummary/jax.nn.get_scaled_dot_general_config.rst", "_autosummary/jax.nn.glu.rst", "_autosummary/jax.nn.hard_sigmoid.rst", "_autosummary/jax.nn.hard_silu.rst", "_autosummary/jax.nn.hard_swish.rst", "_autosummary/jax.nn.hard_tanh.rst", "_autosummary/jax.nn.identity.rst", "_autosummary/jax.nn.initializers.constant.rst", "_autosummary/jax.nn.initializers.delta_orthogonal.rst", "_autosummary/jax.nn.initializers.glorot_normal.rst", "_autosummary/jax.nn.initializers.glorot_uniform.rst", "_autosummary/jax.nn.initializers.he_normal.rst", "_autosummary/jax.nn.initializers.he_uniform.rst", "_autosummary/jax.nn.initializers.lecun_normal.rst", "_autosummary/jax.nn.initializers.lecun_uniform.rst", "_autosummary/jax.nn.initializers.normal.rst", "_autosummary/jax.nn.initializers.ones.rst", "_autosummary/jax.nn.initializers.orthogonal.rst", "_autosummary/jax.nn.initializers.truncated_normal.rst", "_autosummary/jax.nn.initializers.uniform.rst", "_autosummary/jax.nn.initializers.variance_scaling.rst", "_autosummary/jax.nn.initializers.zeros.rst", "_autosummary/jax.nn.leaky_relu.rst", "_autosummary/jax.nn.log_sigmoid.rst", "_autosummary/jax.nn.log_softmax.rst", "_autosummary/jax.nn.logsumexp.rst", "_autosummary/jax.nn.mish.rst", "_autosummary/jax.nn.one_hot.rst", "_autosummary/jax.nn.relu.rst", "_autosummary/jax.nn.relu6.rst", "_autosummary/jax.nn.scaled_dot_general.rst", "_autosummary/jax.nn.scaled_matmul.rst", "_autosummary/jax.nn.selu.rst", "_autosummary/jax.nn.sigmoid.rst", "_autosummary/jax.nn.silu.rst", "_autosummary/jax.nn.soft_sign.rst", "_autosummary/jax.nn.softmax.rst", "_autosummary/jax.nn.softplus.rst", "_autosummary/jax.nn.sparse_plus.rst", "_autosummary/jax.nn.sparse_sigmoid.rst", "_autosummary/jax.nn.squareplus.rst", "_autosummary/jax.nn.standardize.rst", "_autosummary/jax.nn.swish.rst", "_autosummary/jax.no_tracing.rst", "_autosummary/jax.numpy.ComplexWarning.rst", "_autosummary/jax.numpy.abs.rst", "_autosummary/jax.numpy.absolute.rst", "_autosummary/jax.numpy.acos.rst", "_autosummary/jax.numpy.acosh.rst", "_autosummary/jax.numpy.add.rst", "_autosummary/jax.numpy.all.rst", "_autosummary/jax.numpy.allclose.rst", "_autosummary/jax.numpy.amax.rst", "_autosummary/jax.numpy.amin.rst", "_autosummary/jax.numpy.angle.rst", "_autosummary/jax.numpy.any.rst", "_autosummary/jax.numpy.append.rst", "_autosummary/jax.numpy.apply_along_axis.rst", "_autosummary/jax.numpy.apply_over_axes.rst", "_autosummary/jax.numpy.arange.rst", "_autosummary/jax.numpy.arccos.rst", "_autosummary/jax.numpy.arccosh.rst", "_autosummary/jax.numpy.arcsin.rst", "_autosummary/jax.numpy.arcsinh.rst", "_autosummary/jax.numpy.arctan.rst", "_autosummary/jax.numpy.arctan2.rst", "_autosummary/jax.numpy.arctanh.rst", "_autosummary/jax.numpy.argmax.rst", "_autosummary/jax.numpy.argmin.rst", "_autosummary/jax.numpy.argpartition.rst", "_autosummary/jax.numpy.argsort.rst", "_autosummary/jax.numpy.argwhere.rst", "_autosummary/jax.numpy.around.rst", "_autosummary/jax.numpy.array.rst", "_autosummary/jax.numpy.array_equal.rst", "_autosummary/jax.numpy.array_equiv.rst", "_autosummary/jax.numpy.array_repr.rst", "_autosummary/jax.numpy.array_split.rst", "_autosummary/jax.numpy.array_str.rst", "_autosummary/jax.numpy.asarray.rst", "_autosummary/jax.numpy.asin.rst", "_autosummary/jax.numpy.asinh.rst", "_autosummary/jax.numpy.astype.rst", "_autosummary/jax.numpy.atan.rst", "_autosummary/jax.numpy.atan2.rst", "_autosummary/jax.numpy.atanh.rst", "_autosummary/jax.numpy.atleast_1d.rst", "_autosummary/jax.numpy.atleast_2d.rst", "_autosummary/jax.numpy.atleast_3d.rst", "_autosummary/jax.numpy.average.rst", "_autosummary/jax.numpy.bartlett.rst", "_autosummary/jax.numpy.bincount.rst", "_autosummary/jax.numpy.bitwise_and.rst", "_autosummary/jax.numpy.bitwise_count.rst", "_autosummary/jax.numpy.bitwise_invert.rst", "_autosummary/jax.numpy.bitwise_left_shift.rst", "_autosummary/jax.numpy.bitwise_not.rst", "_autosummary/jax.numpy.bitwise_or.rst", "_autosummary/jax.numpy.bitwise_right_shift.rst", "_autosummary/jax.numpy.bitwise_xor.rst", "_autosummary/jax.numpy.blackman.rst", "_autosummary/jax.numpy.block.rst", "_autosummary/jax.numpy.bool_.rst", "_autosummary/jax.numpy.broadcast_arrays.rst", "_autosummary/jax.numpy.broadcast_shapes.rst", "_autosummary/jax.numpy.broadcast_to.rst", "_autosummary/jax.numpy.c_.rst", "_autosummary/jax.numpy.can_cast.rst", "_autosummary/jax.numpy.cbrt.rst", "_autosummary/jax.numpy.cdouble.rst", "_autosummary/jax.numpy.ceil.rst", "_autosummary/jax.numpy.character.rst", "_autosummary/jax.numpy.choose.rst", "_autosummary/jax.numpy.clip.rst", "_autosummary/jax.numpy.column_stack.rst", "_autosummary/jax.numpy.complex128.rst", "_autosummary/jax.numpy.complex64.rst", "_autosummary/jax.numpy.complex_.rst", "_autosummary/jax.numpy.complexfloating.rst", "_autosummary/jax.numpy.compress.rst", "_autosummary/jax.numpy.concat.rst", "_autosummary/jax.numpy.concatenate.rst", "_autosummary/jax.numpy.conj.rst", "_autosummary/jax.numpy.conjugate.rst", "_autosummary/jax.numpy.convolve.rst", "_autosummary/jax.numpy.copy.rst", "_autosummary/jax.numpy.copysign.rst", "_autosummary/jax.numpy.corrcoef.rst", "_autosummary/jax.numpy.correlate.rst", "_autosummary/jax.numpy.cos.rst", "_autosummary/jax.numpy.cosh.rst", "_autosummary/jax.numpy.count_nonzero.rst", "_autosummary/jax.numpy.cov.rst", "_autosummary/jax.numpy.cross.rst", "_autosummary/jax.numpy.csingle.rst", "_autosummary/jax.numpy.cumprod.rst", "_autosummary/jax.numpy.cumsum.rst", "_autosummary/jax.numpy.cumulative_prod.rst", "_autosummary/jax.numpy.cumulative_sum.rst", "_autosummary/jax.numpy.deg2rad.rst", "_autosummary/jax.numpy.degrees.rst", "_autosummary/jax.numpy.delete.rst", "_autosummary/jax.numpy.diag.rst", "_autosummary/jax.numpy.diag_indices.rst", "_autosummary/jax.numpy.diag_indices_from.rst", "_autosummary/jax.numpy.diagflat.rst", "_autosummary/jax.numpy.diagonal.rst", "_autosummary/jax.numpy.diff.rst", "_autosummary/jax.numpy.digitize.rst", "_autosummary/jax.numpy.divide.rst", "_autosummary/jax.numpy.divmod.rst", "_autosummary/jax.numpy.dot.rst", "_autosummary/jax.numpy.double.rst", "_autosummary/jax.numpy.dsplit.rst", "_autosummary/jax.numpy.dstack.rst", "_autosummary/jax.numpy.dtype.rst", "_autosummary/jax.numpy.ediff1d.rst", "_autosummary/jax.numpy.einsum.rst", "_autosummary/jax.numpy.einsum_path.rst", "_autosummary/jax.numpy.empty.rst", "_autosummary/jax.numpy.empty_like.rst", "_autosummary/jax.numpy.equal.rst", "_autosummary/jax.numpy.exp.rst", "_autosummary/jax.numpy.exp2.rst", "_autosummary/jax.numpy.expand_dims.rst", "_autosummary/jax.numpy.expm1.rst", "_autosummary/jax.numpy.extract.rst", "_autosummary/jax.numpy.eye.rst", "_autosummary/jax.numpy.fabs.rst", "_autosummary/jax.numpy.fft.fft.rst", "_autosummary/jax.numpy.fft.fft2.rst", "_autosummary/jax.numpy.fft.fftfreq.rst", "_autosummary/jax.numpy.fft.fftn.rst", "_autosummary/jax.numpy.fft.fftshift.rst", "_autosummary/jax.numpy.fft.hfft.rst", "_autosummary/jax.numpy.fft.ifft.rst", "_autosummary/jax.numpy.fft.ifft2.rst", "_autosummary/jax.numpy.fft.ifftn.rst", "_autosummary/jax.numpy.fft.ifftshift.rst", "_autosummary/jax.numpy.fft.ihfft.rst", "_autosummary/jax.numpy.fft.irfft.rst", "_autosummary/jax.numpy.fft.irfft2.rst", "_autosummary/jax.numpy.fft.irfftn.rst", "_autosummary/jax.numpy.fft.rfft.rst", "_autosummary/jax.numpy.fft.rfft2.rst", "_autosummary/jax.numpy.fft.rfftfreq.rst", "_autosummary/jax.numpy.fft.rfftn.rst", "_autosummary/jax.numpy.fill_diagonal.rst", "_autosummary/jax.numpy.finfo.rst", "_autosummary/jax.numpy.fix.rst", "_autosummary/jax.numpy.flatnonzero.rst", "_autosummary/jax.numpy.flexible.rst", "_autosummary/jax.numpy.flip.rst", "_autosummary/jax.numpy.fliplr.rst", "_autosummary/jax.numpy.flipud.rst", "_autosummary/jax.numpy.float16.rst", "_autosummary/jax.numpy.float32.rst", "_autosummary/jax.numpy.float64.rst", "_autosummary/jax.numpy.float_.rst", "_autosummary/jax.numpy.float_power.rst", "_autosummary/jax.numpy.floating.rst", "_autosummary/jax.numpy.floor.rst", "_autosummary/jax.numpy.floor_divide.rst", "_autosummary/jax.numpy.fmax.rst", "_autosummary/jax.numpy.fmin.rst", "_autosummary/jax.numpy.fmod.rst", "_autosummary/jax.numpy.frexp.rst", "_autosummary/jax.numpy.from_dlpack.rst", "_autosummary/jax.numpy.frombuffer.rst", "_autosummary/jax.numpy.fromfile.rst", "_autosummary/jax.numpy.fromfunction.rst", "_autosummary/jax.numpy.fromiter.rst", "_autosummary/jax.numpy.frompyfunc.rst", "_autosummary/jax.numpy.fromstring.rst", "_autosummary/jax.numpy.full.rst", "_autosummary/jax.numpy.full_like.rst", "_autosummary/jax.numpy.gcd.rst", "_autosummary/jax.numpy.generic.rst", "_autosummary/jax.numpy.geomspace.rst", "_autosummary/jax.numpy.get_printoptions.rst", "_autosummary/jax.numpy.gradient.rst", "_autosummary/jax.numpy.greater.rst", "_autosummary/jax.numpy.greater_equal.rst", "_autosummary/jax.numpy.hamming.rst", "_autosummary/jax.numpy.hanning.rst", "_autosummary/jax.numpy.heaviside.rst", "_autosummary/jax.numpy.histogram.rst", "_autosummary/jax.numpy.histogram2d.rst", "_autosummary/jax.numpy.histogram_bin_edges.rst", "_autosummary/jax.numpy.histogramdd.rst", "_autosummary/jax.numpy.hsplit.rst", "_autosummary/jax.numpy.hstack.rst", "_autosummary/jax.numpy.hypot.rst", "_autosummary/jax.numpy.i0.rst", "_autosummary/jax.numpy.identity.rst", "_autosummary/jax.numpy.iinfo.rst", "_autosummary/jax.numpy.imag.rst", "_autosummary/jax.numpy.index_exp.rst", "_autosummary/jax.numpy.indices.rst", "_autosummary/jax.numpy.inexact.rst", "_autosummary/jax.numpy.inner.rst", "_autosummary/jax.numpy.insert.rst", "_autosummary/jax.numpy.int16.rst", "_autosummary/jax.numpy.int32.rst", "_autosummary/jax.numpy.int64.rst", "_autosummary/jax.numpy.int8.rst", "_autosummary/jax.numpy.int_.rst", "_autosummary/jax.numpy.integer.rst", "_autosummary/jax.numpy.interp.rst", "_autosummary/jax.numpy.intersect1d.rst", "_autosummary/jax.numpy.invert.rst", "_autosummary/jax.numpy.isclose.rst", "_autosummary/jax.numpy.iscomplex.rst", "_autosummary/jax.numpy.iscomplexobj.rst", "_autosummary/jax.numpy.isdtype.rst", "_autosummary/jax.numpy.isfinite.rst", "_autosummary/jax.numpy.isin.rst", "_autosummary/jax.numpy.isinf.rst", "_autosummary/jax.numpy.isnan.rst", "_autosummary/jax.numpy.isneginf.rst", "_autosummary/jax.numpy.isposinf.rst", "_autosummary/jax.numpy.isreal.rst", "_autosummary/jax.numpy.isrealobj.rst", "_autosummary/jax.numpy.isscalar.rst", "_autosummary/jax.numpy.issubdtype.rst", "_autosummary/jax.numpy.iterable.rst", "_autosummary/jax.numpy.ix_.rst", "_autosummary/jax.numpy.kaiser.rst", "_autosummary/jax.numpy.kron.rst", "_autosummary/jax.numpy.lcm.rst", "_autosummary/jax.numpy.ldexp.rst", "_autosummary/jax.numpy.left_shift.rst", "_autosummary/jax.numpy.less.rst", "_autosummary/jax.numpy.less_equal.rst", "_autosummary/jax.numpy.lexsort.rst", "_autosummary/jax.numpy.linalg.cholesky.rst", "_autosummary/jax.numpy.linalg.cond.rst", "_autosummary/jax.numpy.linalg.cross.rst", "_autosummary/jax.numpy.linalg.det.rst", "_autosummary/jax.numpy.linalg.diagonal.rst", "_autosummary/jax.numpy.linalg.eig.rst", "_autosummary/jax.numpy.linalg.eigh.rst", "_autosummary/jax.numpy.linalg.eigvals.rst", "_autosummary/jax.numpy.linalg.eigvalsh.rst", "_autosummary/jax.numpy.linalg.inv.rst", "_autosummary/jax.numpy.linalg.lstsq.rst", "_autosummary/jax.numpy.linalg.matmul.rst", "_autosummary/jax.numpy.linalg.matrix_norm.rst", "_autosummary/jax.numpy.linalg.matrix_power.rst", "_autosummary/jax.numpy.linalg.matrix_rank.rst", "_autosummary/jax.numpy.linalg.matrix_transpose.rst", "_autosummary/jax.numpy.linalg.multi_dot.rst", "_autosummary/jax.numpy.linalg.norm.rst", "_autosummary/jax.numpy.linalg.outer.rst", "_autosummary/jax.numpy.linalg.pinv.rst", "_autosummary/jax.numpy.linalg.qr.rst", "_autosummary/jax.numpy.linalg.slogdet.rst", "_autosummary/jax.numpy.linalg.solve.rst", "_autosummary/jax.numpy.linalg.svd.rst", "_autosummary/jax.numpy.linalg.svdvals.rst", "_autosummary/jax.numpy.linalg.tensordot.rst", "_autosummary/jax.numpy.linalg.tensorinv.rst", "_autosummary/jax.numpy.linalg.tensorsolve.rst", "_autosummary/jax.numpy.linalg.trace.rst", "_autosummary/jax.numpy.linalg.vecdot.rst", "_autosummary/jax.numpy.linalg.vector_norm.rst", "_autosummary/jax.numpy.linspace.rst", "_autosummary/jax.numpy.load.rst", "_autosummary/jax.numpy.log.rst", "_autosummary/jax.numpy.log10.rst", "_autosummary/jax.numpy.log1p.rst", "_autosummary/jax.numpy.log2.rst", "_autosummary/jax.numpy.logaddexp.rst", "_autosummary/jax.numpy.logaddexp2.rst", "_autosummary/jax.numpy.logical_and.rst", "_autosummary/jax.numpy.logical_not.rst", "_autosummary/jax.numpy.logical_or.rst", "_autosummary/jax.numpy.logical_xor.rst", "_autosummary/jax.numpy.logspace.rst", "_autosummary/jax.numpy.mask_indices.rst", "_autosummary/jax.numpy.matmul.rst", "_autosummary/jax.numpy.matrix_transpose.rst", "_autosummary/jax.numpy.matvec.rst", "_autosummary/jax.numpy.max.rst", "_autosummary/jax.numpy.maximum.rst", "_autosummary/jax.numpy.mean.rst", "_autosummary/jax.numpy.median.rst", "_autosummary/jax.numpy.meshgrid.rst", "_autosummary/jax.numpy.mgrid.rst", "_autosummary/jax.numpy.min.rst", "_autosummary/jax.numpy.minimum.rst", "_autosummary/jax.numpy.mod.rst", "_autosummary/jax.numpy.modf.rst", "_autosummary/jax.numpy.moveaxis.rst", "_autosummary/jax.numpy.multiply.rst", "_autosummary/jax.numpy.nan_to_num.rst", "_autosummary/jax.numpy.nanargmax.rst", "_autosummary/jax.numpy.nanargmin.rst", "_autosummary/jax.numpy.nancumprod.rst", "_autosummary/jax.numpy.nancumsum.rst", "_autosummary/jax.numpy.nanmax.rst", "_autosummary/jax.numpy.nanmean.rst", "_autosummary/jax.numpy.nanmedian.rst", "_autosummary/jax.numpy.nanmin.rst", "_autosummary/jax.numpy.nanpercentile.rst", "_autosummary/jax.numpy.nanprod.rst", "_autosummary/jax.numpy.nanquantile.rst", "_autosummary/jax.numpy.nanstd.rst", "_autosummary/jax.numpy.nansum.rst", "_autosummary/jax.numpy.nanvar.rst", "_autosummary/jax.numpy.ndarray.rst", "_autosummary/jax.numpy.ndarray.at.rst", "_autosummary/jax.numpy.ndim.rst", "_autosummary/jax.numpy.negative.rst", "_autosummary/jax.numpy.nextafter.rst", "_autosummary/jax.numpy.nonzero.rst", "_autosummary/jax.numpy.not_equal.rst", "_autosummary/jax.numpy.number.rst", "_autosummary/jax.numpy.object_.rst", "_autosummary/jax.numpy.ogrid.rst", "_autosummary/jax.numpy.ones.rst", "_autosummary/jax.numpy.ones_like.rst", "_autosummary/jax.numpy.outer.rst", "_autosummary/jax.numpy.packbits.rst", "_autosummary/jax.numpy.pad.rst", "_autosummary/jax.numpy.partition.rst", "_autosummary/jax.numpy.percentile.rst", "_autosummary/jax.numpy.permute_dims.rst", "_autosummary/jax.numpy.piecewise.rst", "_autosummary/jax.numpy.place.rst", "_autosummary/jax.numpy.poly.rst", "_autosummary/jax.numpy.polyadd.rst", "_autosummary/jax.numpy.polyder.rst", "_autosummary/jax.numpy.polydiv.rst", "_autosummary/jax.numpy.polyfit.rst", "_autosummary/jax.numpy.polyint.rst", "_autosummary/jax.numpy.polymul.rst", "_autosummary/jax.numpy.polysub.rst", "_autosummary/jax.numpy.polyval.rst", "_autosummary/jax.numpy.positive.rst", "_autosummary/jax.numpy.pow.rst", "_autosummary/jax.numpy.power.rst", "_autosummary/jax.numpy.printoptions.rst", "_autosummary/jax.numpy.prod.rst", "_autosummary/jax.numpy.promote_types.rst", "_autosummary/jax.numpy.ptp.rst", "_autosummary/jax.numpy.put.rst", "_autosummary/jax.numpy.put_along_axis.rst", "_autosummary/jax.numpy.quantile.rst", "_autosummary/jax.numpy.r_.rst", "_autosummary/jax.numpy.rad2deg.rst", "_autosummary/jax.numpy.radians.rst", "_autosummary/jax.numpy.ravel.rst", "_autosummary/jax.numpy.ravel_multi_index.rst", "_autosummary/jax.numpy.real.rst", "_autosummary/jax.numpy.reciprocal.rst", "_autosummary/jax.numpy.remainder.rst", "_autosummary/jax.numpy.repeat.rst", "_autosummary/jax.numpy.reshape.rst", "_autosummary/jax.numpy.resize.rst", "_autosummary/jax.numpy.result_type.rst", "_autosummary/jax.numpy.right_shift.rst", "_autosummary/jax.numpy.rint.rst", "_autosummary/jax.numpy.roll.rst", "_autosummary/jax.numpy.rollaxis.rst", "_autosummary/jax.numpy.roots.rst", "_autosummary/jax.numpy.rot90.rst", "_autosummary/jax.numpy.round.rst", "_autosummary/jax.numpy.s_.rst", "_autosummary/jax.numpy.save.rst", "_autosummary/jax.numpy.savez.rst", "_autosummary/jax.numpy.searchsorted.rst", "_autosummary/jax.numpy.select.rst", "_autosummary/jax.numpy.set_printoptions.rst", "_autosummary/jax.numpy.setdiff1d.rst", "_autosummary/jax.numpy.setxor1d.rst", "_autosummary/jax.numpy.shape.rst", "_autosummary/jax.numpy.sign.rst", "_autosummary/jax.numpy.signbit.rst", "_autosummary/jax.numpy.signedinteger.rst", "_autosummary/jax.numpy.sin.rst", "_autosummary/jax.numpy.sinc.rst", "_autosummary/jax.numpy.single.rst", "_autosummary/jax.numpy.sinh.rst", "_autosummary/jax.numpy.size.rst", "_autosummary/jax.numpy.sort.rst", "_autosummary/jax.numpy.sort_complex.rst", "_autosummary/jax.numpy.spacing.rst", "_autosummary/jax.numpy.split.rst", "_autosummary/jax.numpy.sqrt.rst", "_autosummary/jax.numpy.square.rst", "_autosummary/jax.numpy.squeeze.rst", "_autosummary/jax.numpy.stack.rst", "_autosummary/jax.numpy.std.rst", "_autosummary/jax.numpy.subtract.rst", "_autosummary/jax.numpy.sum.rst", "_autosummary/jax.numpy.swapaxes.rst", "_autosummary/jax.numpy.take.rst", "_autosummary/jax.numpy.take_along_axis.rst", "_autosummary/jax.numpy.tan.rst", "_autosummary/jax.numpy.tanh.rst", "_autosummary/jax.numpy.tensordot.rst", "_autosummary/jax.numpy.tile.rst", "_autosummary/jax.numpy.trace.rst", "_autosummary/jax.numpy.transpose.rst", "_autosummary/jax.numpy.trapezoid.rst", "_autosummary/jax.numpy.tri.rst", "_autosummary/jax.numpy.tril.rst", "_autosummary/jax.numpy.tril_indices.rst", "_autosummary/jax.numpy.tril_indices_from.rst", "_autosummary/jax.numpy.trim_zeros.rst", "_autosummary/jax.numpy.triu.rst", "_autosummary/jax.numpy.triu_indices.rst", "_autosummary/jax.numpy.triu_indices_from.rst", "_autosummary/jax.numpy.true_divide.rst", "_autosummary/jax.numpy.trunc.rst", "_autosummary/jax.numpy.ufunc.rst", "_autosummary/jax.numpy.uint.rst", "_autosummary/jax.numpy.uint16.rst", "_autosummary/jax.numpy.uint32.rst", "_autosummary/jax.numpy.uint64.rst", "_autosummary/jax.numpy.uint8.rst", "_autosummary/jax.numpy.union1d.rst", "_autosummary/jax.numpy.unique.rst", "_autosummary/jax.numpy.unique_all.rst", "_autosummary/jax.numpy.unique_counts.rst", "_autosummary/jax.numpy.unique_inverse.rst", "_autosummary/jax.numpy.unique_values.rst", "_autosummary/jax.numpy.unpackbits.rst", "_autosummary/jax.numpy.unravel_index.rst", "_autosummary/jax.numpy.unsignedinteger.rst", "_autosummary/jax.numpy.unstack.rst", "_autosummary/jax.numpy.unwrap.rst", "_autosummary/jax.numpy.vander.rst", "_autosummary/jax.numpy.var.rst", "_autosummary/jax.numpy.vdot.rst", "_autosummary/jax.numpy.vecdot.rst", "_autosummary/jax.numpy.vecmat.rst", "_autosummary/jax.numpy.vectorize.rst", "_autosummary/jax.numpy.vsplit.rst", "_autosummary/jax.numpy.vstack.rst", "_autosummary/jax.numpy.where.rst", "_autosummary/jax.numpy.zeros.rst", "_autosummary/jax.numpy.zeros_like.rst", "_autosummary/jax.numpy_rank_promotion.rst", "_autosummary/jax.ops.segment_max.rst", "_autosummary/jax.ops.segment_min.rst", "_autosummary/jax.ops.segment_prod.rst", "_autosummary/jax.ops.segment_sum.rst", "_autosummary/jax.pmap.rst", "_autosummary/jax.print_environment_info.rst", "_autosummary/jax.process_count.rst", "_autosummary/jax.process_index.rst", "_autosummary/jax.process_indices.rst", "_autosummary/jax.profiler.StepTraceAnnotation.rst", "_autosummary/jax.profiler.TraceAnnotation.rst", "_autosummary/jax.profiler.annotate_function.rst", "_autosummary/jax.profiler.device_memory_profile.rst", "_autosummary/jax.profiler.save_device_memory_profile.rst", "_autosummary/jax.profiler.start_server.rst", "_autosummary/jax.profiler.start_trace.rst", "_autosummary/jax.profiler.stop_trace.rst", "_autosummary/jax.profiler.trace.rst", "_autosummary/jax.pure_callback.rst", "_autosummary/jax.random.PRNGKey.rst", "_autosummary/jax.random.ball.rst", "_autosummary/jax.random.bernoulli.rst", "_autosummary/jax.random.beta.rst", "_autosummary/jax.random.binomial.rst", "_autosummary/jax.random.bits.rst", "_autosummary/jax.random.categorical.rst", "_autosummary/jax.random.cauchy.rst", "_autosummary/jax.random.chisquare.rst", "_autosummary/jax.random.choice.rst", "_autosummary/jax.random.clone.rst", "_autosummary/jax.random.dirichlet.rst", "_autosummary/jax.random.double_sided_maxwell.rst", "_autosummary/jax.random.exponential.rst", "_autosummary/jax.random.f.rst", "_autosummary/jax.random.fold_in.rst", "_autosummary/jax.random.gamma.rst", "_autosummary/jax.random.generalized_normal.rst", "_autosummary/jax.random.geometric.rst", "_autosummary/jax.random.gumbel.rst", "_autosummary/jax.random.key.rst", "_autosummary/jax.random.key_data.rst", "_autosummary/jax.random.laplace.rst", "_autosummary/jax.random.loggamma.rst", "_autosummary/jax.random.logistic.rst", "_autosummary/jax.random.lognormal.rst", "_autosummary/jax.random.maxwell.rst", "_autosummary/jax.random.multinomial.rst", "_autosummary/jax.random.multivariate_normal.rst", "_autosummary/jax.random.normal.rst", "_autosummary/jax.random.orthogonal.rst", "_autosummary/jax.random.pareto.rst", "_autosummary/jax.random.permutation.rst", "_autosummary/jax.random.poisson.rst", "_autosummary/jax.random.rademacher.rst", "_autosummary/jax.random.randint.rst", "_autosummary/jax.random.rayleigh.rst", "_autosummary/jax.random.split.rst", "_autosummary/jax.random.t.rst", "_autosummary/jax.random.triangular.rst", "_autosummary/jax.random.truncated_normal.rst", "_autosummary/jax.random.uniform.rst", "_autosummary/jax.random.wald.rst", "_autosummary/jax.random.weibull_min.rst", "_autosummary/jax.random.wrap_key_data.rst", "_autosummary/jax.scipy.cluster.vq.vq.rst", "_autosummary/jax.scipy.fft.dct.rst", "_autosummary/jax.scipy.fft.dctn.rst", "_autosummary/jax.scipy.fft.idct.rst", "_autosummary/jax.scipy.fft.idctn.rst", "_autosummary/jax.scipy.integrate.trapezoid.rst", "_autosummary/jax.scipy.interpolate.RegularGridInterpolator.rst", "_autosummary/jax.scipy.linalg.block_diag.rst", "_autosummary/jax.scipy.linalg.cho_factor.rst", "_autosummary/jax.scipy.linalg.cho_solve.rst", "_autosummary/jax.scipy.linalg.cholesky.rst", "_autosummary/jax.scipy.linalg.det.rst", "_autosummary/jax.scipy.linalg.eigh.rst", "_autosummary/jax.scipy.linalg.eigh_tridiagonal.rst", "_autosummary/jax.scipy.linalg.expm.rst", "_autosummary/jax.scipy.linalg.expm_frechet.rst", "_autosummary/jax.scipy.linalg.funm.rst", "_autosummary/jax.scipy.linalg.hessenberg.rst", "_autosummary/jax.scipy.linalg.hilbert.rst", "_autosummary/jax.scipy.linalg.inv.rst", "_autosummary/jax.scipy.linalg.lu.rst", "_autosummary/jax.scipy.linalg.lu_factor.rst", "_autosummary/jax.scipy.linalg.lu_solve.rst", "_autosummary/jax.scipy.linalg.pascal.rst", "_autosummary/jax.scipy.linalg.polar.rst", "_autosummary/jax.scipy.linalg.qr.rst", "_autosummary/jax.scipy.linalg.rsf2csf.rst", "_autosummary/jax.scipy.linalg.schur.rst", "_autosummary/jax.scipy.linalg.solve.rst", "_autosummary/jax.scipy.linalg.solve_triangular.rst", "_autosummary/jax.scipy.linalg.sqrtm.rst", "_autosummary/jax.scipy.linalg.svd.rst", "_autosummary/jax.scipy.linalg.toeplitz.rst", "_autosummary/jax.scipy.ndimage.map_coordinates.rst", "_autosummary/jax.scipy.optimize.OptimizeResults.rst", "_autosummary/jax.scipy.optimize.minimize.rst", "_autosummary/jax.scipy.signal.convolve.rst", "_autosummary/jax.scipy.signal.convolve2d.rst", "_autosummary/jax.scipy.signal.correlate.rst", "_autosummary/jax.scipy.signal.correlate2d.rst", "_autosummary/jax.scipy.signal.csd.rst", "_autosummary/jax.scipy.signal.detrend.rst", "_autosummary/jax.scipy.signal.fftconvolve.rst", "_autosummary/jax.scipy.signal.istft.rst", "_autosummary/jax.scipy.signal.stft.rst", "_autosummary/jax.scipy.signal.welch.rst", "_autosummary/jax.scipy.sparse.linalg.bicgstab.rst", "_autosummary/jax.scipy.sparse.linalg.cg.rst", "_autosummary/jax.scipy.sparse.linalg.gmres.rst", "_autosummary/jax.scipy.spatial.transform.Rotation.rst", "_autosummary/jax.scipy.spatial.transform.Slerp.rst", "_autosummary/jax.scipy.special.bernoulli.rst", "_autosummary/jax.scipy.special.beta.rst", "_autosummary/jax.scipy.special.betainc.rst", "_autosummary/jax.scipy.special.betaln.rst", "_autosummary/jax.scipy.special.digamma.rst", "_autosummary/jax.scipy.special.entr.rst", "_autosummary/jax.scipy.special.erf.rst", "_autosummary/jax.scipy.special.erfc.rst", "_autosummary/jax.scipy.special.erfinv.rst", "_autosummary/jax.scipy.special.exp1.rst", "_autosummary/jax.scipy.special.expi.rst", "_autosummary/jax.scipy.special.expit.rst", "_autosummary/jax.scipy.special.expn.rst", "_autosummary/jax.scipy.special.factorial.rst", "_autosummary/jax.scipy.special.fresnel.rst", "_autosummary/jax.scipy.special.gamma.rst", "_autosummary/jax.scipy.special.gammainc.rst", "_autosummary/jax.scipy.special.gammaincc.rst", "_autosummary/jax.scipy.special.gammaln.rst", "_autosummary/jax.scipy.special.gammasgn.rst", "_autosummary/jax.scipy.special.hyp1f1.rst", "_autosummary/jax.scipy.special.i0.rst", "_autosummary/jax.scipy.special.i0e.rst", "_autosummary/jax.scipy.special.i1.rst", "_autosummary/jax.scipy.special.i1e.rst", "_autosummary/jax.scipy.special.kl_div.rst", "_autosummary/jax.scipy.special.log_ndtr.rst", "_autosummary/jax.scipy.special.log_softmax.rst", "_autosummary/jax.scipy.special.logit.rst", "_autosummary/jax.scipy.special.logsumexp.rst", "_autosummary/jax.scipy.special.lpmn.rst", "_autosummary/jax.scipy.special.lpmn_values.rst", "_autosummary/jax.scipy.special.multigammaln.rst", "_autosummary/jax.scipy.special.ndtr.rst", "_autosummary/jax.scipy.special.ndtri.rst", "_autosummary/jax.scipy.special.poch.rst", "_autosummary/jax.scipy.special.polygamma.rst", "_autosummary/jax.scipy.special.rel_entr.rst", "_autosummary/jax.scipy.special.softmax.rst", "_autosummary/jax.scipy.special.spence.rst", "_autosummary/jax.scipy.special.sph_harm.rst", "_autosummary/jax.scipy.special.xlog1py.rst", "_autosummary/jax.scipy.special.xlogy.rst", "_autosummary/jax.scipy.special.zeta.rst", "_autosummary/jax.scipy.stats.bernoulli.cdf.rst", "_autosummary/jax.scipy.stats.bernoulli.logpmf.rst", "_autosummary/jax.scipy.stats.bernoulli.pmf.rst", "_autosummary/jax.scipy.stats.bernoulli.ppf.rst", "_autosummary/jax.scipy.stats.beta.cdf.rst", "_autosummary/jax.scipy.stats.beta.logcdf.rst", "_autosummary/jax.scipy.stats.beta.logpdf.rst", "_autosummary/jax.scipy.stats.beta.logsf.rst", "_autosummary/jax.scipy.stats.beta.pdf.rst", "_autosummary/jax.scipy.stats.beta.sf.rst", "_autosummary/jax.scipy.stats.betabinom.logpmf.rst", "_autosummary/jax.scipy.stats.betabinom.pmf.rst", "_autosummary/jax.scipy.stats.binom.logpmf.rst", "_autosummary/jax.scipy.stats.binom.pmf.rst", "_autosummary/jax.scipy.stats.cauchy.cdf.rst", "_autosummary/jax.scipy.stats.cauchy.isf.rst", "_autosummary/jax.scipy.stats.cauchy.logcdf.rst", "_autosummary/jax.scipy.stats.cauchy.logpdf.rst", "_autosummary/jax.scipy.stats.cauchy.logsf.rst", "_autosummary/jax.scipy.stats.cauchy.pdf.rst", "_autosummary/jax.scipy.stats.cauchy.ppf.rst", "_autosummary/jax.scipy.stats.cauchy.sf.rst", "_autosummary/jax.scipy.stats.chi2.cdf.rst", "_autosummary/jax.scipy.stats.chi2.logcdf.rst", "_autosummary/jax.scipy.stats.chi2.logpdf.rst", "_autosummary/jax.scipy.stats.chi2.logsf.rst", "_autosummary/jax.scipy.stats.chi2.pdf.rst", "_autosummary/jax.scipy.stats.chi2.sf.rst", "_autosummary/jax.scipy.stats.dirichlet.logpdf.rst", "_autosummary/jax.scipy.stats.dirichlet.pdf.rst", "_autosummary/jax.scipy.stats.expon.cdf.rst", "_autosummary/jax.scipy.stats.expon.logcdf.rst", "_autosummary/jax.scipy.stats.expon.logpdf.rst", "_autosummary/jax.scipy.stats.expon.logsf.rst", "_autosummary/jax.scipy.stats.expon.pdf.rst", "_autosummary/jax.scipy.stats.expon.ppf.rst", "_autosummary/jax.scipy.stats.expon.sf.rst", "_autosummary/jax.scipy.stats.gamma.cdf.rst", "_autosummary/jax.scipy.stats.gamma.logcdf.rst", "_autosummary/jax.scipy.stats.gamma.logpdf.rst", "_autosummary/jax.scipy.stats.gamma.logsf.rst", "_autosummary/jax.scipy.stats.gamma.pdf.rst", "_autosummary/jax.scipy.stats.gamma.sf.rst", "_autosummary/jax.scipy.stats.gaussian_kde.rst", "_autosummary/jax.scipy.stats.gaussian_kde.evaluate.rst", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_box_1d.rst", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_gaussian.rst", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_kde.rst", "_autosummary/jax.scipy.stats.gaussian_kde.logpdf.rst", "_autosummary/jax.scipy.stats.gaussian_kde.pdf.rst", "_autosummary/jax.scipy.stats.gaussian_kde.resample.rst", "_autosummary/jax.scipy.stats.gennorm.cdf.rst", "_autosummary/jax.scipy.stats.gennorm.logpdf.rst", "_autosummary/jax.scipy.stats.gennorm.pdf.rst", "_autosummary/jax.scipy.stats.geom.logpmf.rst", "_autosummary/jax.scipy.stats.geom.pmf.rst", "_autosummary/jax.scipy.stats.laplace.cdf.rst", "_autosummary/jax.scipy.stats.laplace.logpdf.rst", "_autosummary/jax.scipy.stats.laplace.pdf.rst", "_autosummary/jax.scipy.stats.logistic.cdf.rst", "_autosummary/jax.scipy.stats.logistic.isf.rst", "_autosummary/jax.scipy.stats.logistic.logpdf.rst", "_autosummary/jax.scipy.stats.logistic.pdf.rst", "_autosummary/jax.scipy.stats.logistic.ppf.rst", "_autosummary/jax.scipy.stats.logistic.sf.rst", "_autosummary/jax.scipy.stats.mode.rst", "_autosummary/jax.scipy.stats.multinomial.logpmf.rst", "_autosummary/jax.scipy.stats.multinomial.pmf.rst", "_autosummary/jax.scipy.stats.multivariate_normal.logpdf.rst", "_autosummary/jax.scipy.stats.multivariate_normal.pdf.rst", "_autosummary/jax.scipy.stats.nbinom.logpmf.rst", "_autosummary/jax.scipy.stats.nbinom.pmf.rst", "_autosummary/jax.scipy.stats.norm.cdf.rst", "_autosummary/jax.scipy.stats.norm.isf.rst", "_autosummary/jax.scipy.stats.norm.logcdf.rst", "_autosummary/jax.scipy.stats.norm.logpdf.rst", "_autosummary/jax.scipy.stats.norm.logsf.rst", "_autosummary/jax.scipy.stats.norm.pdf.rst", "_autosummary/jax.scipy.stats.norm.ppf.rst", "_autosummary/jax.scipy.stats.norm.sf.rst", "_autosummary/jax.scipy.stats.pareto.logpdf.rst", "_autosummary/jax.scipy.stats.pareto.pdf.rst", "_autosummary/jax.scipy.stats.poisson.cdf.rst", "_autosummary/jax.scipy.stats.poisson.logpmf.rst", "_autosummary/jax.scipy.stats.poisson.pmf.rst", "_autosummary/jax.scipy.stats.rankdata.rst", "_autosummary/jax.scipy.stats.sem.rst", "_autosummary/jax.scipy.stats.t.logpdf.rst", "_autosummary/jax.scipy.stats.t.pdf.rst", "_autosummary/jax.scipy.stats.truncnorm.cdf.rst", "_autosummary/jax.scipy.stats.truncnorm.logcdf.rst", "_autosummary/jax.scipy.stats.truncnorm.logpdf.rst", "_autosummary/jax.scipy.stats.truncnorm.logsf.rst", "_autosummary/jax.scipy.stats.truncnorm.pdf.rst", "_autosummary/jax.scipy.stats.truncnorm.sf.rst", "_autosummary/jax.scipy.stats.uniform.cdf.rst", "_autosummary/jax.scipy.stats.uniform.logpdf.rst", "_autosummary/jax.scipy.stats.uniform.pdf.rst", "_autosummary/jax.scipy.stats.uniform.ppf.rst", "_autosummary/jax.scipy.stats.vonmises.logpdf.rst", "_autosummary/jax.scipy.stats.vonmises.pdf.rst", "_autosummary/jax.scipy.stats.wrapcauchy.logpdf.rst", "_autosummary/jax.scipy.stats.wrapcauchy.pdf.rst", "_autosummary/jax.shard_map.rst", "_autosummary/jax.test_util.check_grads.rst", "_autosummary/jax.test_util.check_jvp.rst", "_autosummary/jax.test_util.check_vjp.rst", "_autosummary/jax.transfer_guard.rst", "_autosummary/jax.tree.all.rst", "_autosummary/jax.tree.broadcast.rst", "_autosummary/jax.tree.flatten.rst", "_autosummary/jax.tree.flatten_with_path.rst", "_autosummary/jax.tree.leaves.rst", "_autosummary/jax.tree.leaves_with_path.rst", "_autosummary/jax.tree.map.rst", "_autosummary/jax.tree.map_with_path.rst", "_autosummary/jax.tree.reduce.rst", "_autosummary/jax.tree.structure.rst", "_autosummary/jax.tree.transpose.rst", "_autosummary/jax.tree.unflatten.rst", "_autosummary/jax.tree_util.KeyEntry.rst", "_autosummary/jax.tree_util.KeyPath.rst", "_autosummary/jax.tree_util.Partial.rst", "_autosummary/jax.tree_util.all_leaves.rst", "_autosummary/jax.tree_util.build_tree.rst", "_autosummary/jax.tree_util.keystr.rst", "_autosummary/jax.tree_util.register_dataclass.rst", "_autosummary/jax.tree_util.register_pytree_node.rst", "_autosummary/jax.tree_util.register_pytree_node_class.rst", "_autosummary/jax.tree_util.register_pytree_with_keys.rst", "_autosummary/jax.tree_util.register_pytree_with_keys_class.rst", "_autosummary/jax.tree_util.register_static.rst", "_autosummary/jax.tree_util.tree_all.rst", "_autosummary/jax.tree_util.tree_broadcast.rst", "_autosummary/jax.tree_util.tree_flatten.rst", "_autosummary/jax.tree_util.tree_flatten_with_path.rst", "_autosummary/jax.tree_util.tree_leaves.rst", "_autosummary/jax.tree_util.tree_leaves_with_path.rst", "_autosummary/jax.tree_util.tree_map.rst", "_autosummary/jax.tree_util.tree_map_with_path.rst", "_autosummary/jax.tree_util.tree_reduce.rst", "_autosummary/jax.tree_util.tree_structure.rst", "_autosummary/jax.tree_util.tree_transpose.rst", "_autosummary/jax.tree_util.tree_unflatten.rst", "_autosummary/jax.tree_util.treedef_children.rst", "_autosummary/jax.tree_util.treedef_is_leaf.rst", "_autosummary/jax.tree_util.treedef_tuple.rst", "_autosummary/jax.typing.ArrayLike.rst", "_autosummary/jax.typing.DTypeLike.rst", "_autosummary/jax.value_and_grad.rst", "_autosummary/jax.vjp.rst", "_autosummary/jax.vmap.rst", "_autosummary/jaxlib.xla_client.register_custom_call_target.rst", "_tutorials/advanced-compilation.md", "_tutorials/advanced-debugging.md", "_tutorials/index.rst", "_tutorials/parallelism.md", "_tutorials/profiling-and-performance.md", "_tutorials/simple-neural-network.md", "about.md", "advanced-autodiff.md", "advanced_guide.rst", "aot.md", "api_compatibility.md", "async_dispatch.rst", "autodidax.ipynb", "autodidax2_part1.ipynb", "automatic-differentiation.md", "automatic-vectorization.md", "beginner_guide.rst", "benchmarking.md", "buffer_donation.md", "building_on_jax.md", "changelog.md", "concurrency.rst", "config_options.rst", "contributing.md", "contributor_guide.rst", "control-flow.md", "custom_pytrees.md", "debugging.md", "debugging/checkify_guide.md", "debugging/flags.md", "debugging/print_breakpoint.md", "default_dtypes.md", "deprecation.md", "developer.md", "device_memory_profiling.md", "distributed_data_loading.md", "errors.rst", "export/export.md", "export/index.rst", "export/jax2tf.md", "export/shape_poly.md", "extensions.rst", "external-callbacks.md", "faq.rst", "ffi.md", "glossary.rst", "gpu_memory_allocation.rst", "gpu_performance_tips.md", "gradient-checkpointing.md", "index.rst", "installation.md", "intro_parallel.md", "investigating_a_regression.md", "jax.rst", "jax-primitives.md", "jax.core.rst", "jax.debug.rst", "jax.distributed.rst", "jax.dlpack.rst", "jax.dtypes.rst", "jax.example_libraries.rst", "jax.example_libraries.optimizers.rst", "jax.example_libraries.stax.rst", "jax.experimental.rst", "jax.experimental.checkify.rst", "jax.experimental.compilation_cache.rst", "jax.experimental.custom_dce.rst", "jax.experimental.custom_partitioning.rst", "jax.experimental.jet.rst", "jax.experimental.key_reuse.rst", "jax.experimental.mesh_utils.rst", "jax.experimental.multihost_utils.rst", "jax.experimental.pallas.rst", "jax.experimental.pallas.mosaic_gpu.rst", "jax.experimental.pallas.tpu.rst", "jax.experimental.pallas.triton.rst", "jax.experimental.pjit.rst", "jax.experimental.serialize_executable.rst", "jax.experimental.shard_map.rst", "jax.experimental.sparse.rst", "jax.export.rst", "jax.extend.rst", "jax.extend.core.rst", "jax.extend.linear_util.rst", "jax.extend.mlir.rst", "jax.extend.random.rst", "jax.ffi.rst", "jax.flatten_util.rst", "jax.image.rst", "jax.lax.rst", "jax.lib.rst", "jax.nn.rst", "jax.nn.initializers.rst", "jax.numpy.rst", "jax.ops.rst", "jax.profiler.rst", "jax.random.rst", "jax.scipy.rst", "jax.sharding.rst", "jax.stages.rst", "jax.test_util.rst", "jax.tree.rst", "jax.tree_util.rst", "jax.typing.rst", "jax_array_migration.md", "jaxpr.md", "jep/10657-sequencing-effects.md", "jep/11830-new-remat-checkpoint.md", "jep/12049-type-annotations.md", "jep/14273-shard-map.md", "jep/15856-jex.md", "jep/17111-shmap-transpose.md", "jep/18137-numpy-scipy-scope.md", "jep/2026-custom-derivatives.md", "jep/25516-effver.md", "jep/263-prng.md", "jep/28661-jax-array-protocol.md", "jep/4008-custom-vjp-update.md", "jep/4410-omnistaging.md", "jep/9263-typed-keys.md", "jep/9407-type-promotion.ipynb", "jep/9419-jax-versioning.md", "jep/index.rst", "jit-compilation.md", "key-concepts.md", "multi_process.md", "notebooks/Common_Gotchas_in_JAX.ipynb", "notebooks/Custom_derivative_rules_for_Python_code.ipynb", "notebooks/Distributed_arrays_and_automatic_parallelization.ipynb", "notebooks/Neural_Network_and_Data_Loading.ipynb", "notebooks/Writing_custom_interpreters_in_Jax.ipynb", "notebooks/autodiff_cookbook.ipynb", "notebooks/autodiff_remat.ipynb", "notebooks/convolutions.ipynb", "notebooks/explicit-sharding.ipynb", "notebooks/host-offloading.ipynb", "notebooks/neural_network_with_tfds_data.ipynb", "notebooks/shard_map.ipynb", "notebooks/thinking_in_jax.ipynb", "notebooks/vmapped_log_probs.ipynb", "notes.rst", "pallas/CHANGELOG.md", "pallas/design/async_note.md", "pallas/design/design.md", "pallas/design/index.rst", "pallas/gpu/index.rst", "pallas/gpu/reference.md", "pallas/grid_blockspec.md", "pallas/index.rst", "pallas/pipelining.ipynb", "pallas/quickstart.ipynb", "pallas/tpu/details.rst", "pallas/tpu/distributed.ipynb", "pallas/tpu/index.rst", "pallas/tpu/matmul.ipynb", "pallas/tpu/pipelining.ipynb", "pallas/tpu/sparse.ipynb", "persistent_compilation_cache.md", "profiling.md", "pytrees.md", "random-numbers.md", "rank_promotion_warning.rst", "sharded-computation.ipynb", "stateful-computations.md", "tracing.md", "transfer_guard.rst", "tutorials.rst", "type_promotion.rst", "working-with-pytrees.md", "xla_flags.md"], "indexentries": {"__call__() (jax.stages.compiled method)": [[1405, "jax.stages.Compiled.__call__", false]], "__call__() (jax.stages.wrapped method)": [[1405, "jax.stages.Wrapped.__call__", false]], "__init__() (jax.array method)": [[0, "jax.Array.__init__", false]], "__init__() (jax.core.tracer method)": [[72, "jax.core.Tracer.__init__", false]], "__init__() (jax.custom_batching.custom_vmap method)": [[73, "jax.custom_batching.custom_vmap.__init__", false]], "__init__() (jax.custom_jvp method)": [[77, "jax.custom_jvp.__init__", false]], "__init__() (jax.custom_vjp method)": [[80, "jax.custom_vjp.__init__", false]], "__init__() (jax.device method)": [[62, "jax.Device.__init__", false]], "__init__() (jax.dtypes.bfloat16 method)": [[103, "jax.dtypes.bfloat16.__init__", false]], "__init__() (jax.dtypes.prng_key method)": [[107, "jax.dtypes.prng_key.__init__", false]], "__init__() (jax.experimental.checkify.error method)": [[115, "jax.experimental.checkify.Error.__init__", false]], "__init__() (jax.experimental.custom_dce.custom_dce method)": [[127, "jax.experimental.custom_dce.custom_dce.__init__", false]], "__init__() (jax.experimental.pallas.blockspec method)": [[140, "jax.experimental.pallas.BlockSpec.__init__", false]], "__init__() (jax.experimental.pallas.gridspec method)": [[141, "jax.experimental.pallas.GridSpec.__init__", false]], "__init__() (jax.experimental.pallas.memoryref method)": [[142, "jax.experimental.pallas.MemoryRef.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.barrier method)": [[158, "jax.experimental.pallas.mosaic_gpu.Barrier.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.blockspec method)": [[159, "jax.experimental.pallas.mosaic_gpu.BlockSpec.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.compilerparams method)": [[160, "jax.experimental.pallas.mosaic_gpu.CompilerParams.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.layout method)": [[162, "jax.experimental.pallas.mosaic_gpu.Layout.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.memoryspace method)": [[163, "jax.experimental.pallas.mosaic_gpu.MemorySpace.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.swizzletransform method)": [[165, "jax.experimental.pallas.mosaic_gpu.SwizzleTransform.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.tilingtransform method)": [[166, "jax.experimental.pallas.mosaic_gpu.TilingTransform.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.transposetransform method)": [[167, "jax.experimental.pallas.mosaic_gpu.TransposeTransform.__init__", false]], "__init__() (jax.experimental.pallas.mosaic_gpu.wgmmaaccumulatorref method)": [[168, "jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef.__init__", false]], "__init__() (jax.experimental.pallas.slice method)": [[143, "jax.experimental.pallas.Slice.__init__", false]], "__init__() (jax.experimental.pallas.triton.compilerparams method)": [[187, "jax.experimental.pallas.triton.CompilerParams.__init__", false]], "__init__() (jax.experimental.sparse.bcoo method)": [[195, "jax.experimental.sparse.BCOO.__init__", false]], "__init__() (jax.experimental.sparse.bcsr method)": [[196, "jax.experimental.sparse.BCSR.__init__", false]], "__init__() (jax.experimental.sparse.coo method)": [[197, "jax.experimental.sparse.COO.__init__", false]], "__init__() (jax.experimental.sparse.csc method)": [[198, "jax.experimental.sparse.CSC.__init__", false]], "__init__() (jax.experimental.sparse.csr method)": [[199, "jax.experimental.sparse.CSR.__init__", false]], "__init__() (jax.experimental.sparse.jaxsparse method)": [[200, "jax.experimental.sparse.JAXSparse.__init__", false]], "__init__() (jax.export.symbolicscope method)": [[241, "jax.export.SymbolicScope.__init__", false]], "__init__() (jax.extend.core.closedjaxpr method)": [[252, "jax.extend.core.ClosedJaxpr.__init__", false]], "__init__() (jax.extend.core.jaxpr method)": [[253, "jax.extend.core.Jaxpr.__init__", false]], "__init__() (jax.extend.core.jaxpreqn method)": [[254, "jax.extend.core.JaxprEqn.__init__", false]], "__init__() (jax.extend.core.literal method)": [[255, "jax.extend.core.Literal.__init__", false]], "__init__() (jax.extend.core.primitive method)": [[256, "jax.extend.core.Primitive.__init__", false]], "__init__() (jax.extend.core.token method)": [[257, "jax.extend.core.Token.__init__", false]], "__init__() (jax.extend.core.var method)": [[258, "jax.extend.core.Var.__init__", false]], "__init__() (jax.extend.linear_util.wrappedfun method)": [[267, "jax.extend.linear_util.WrappedFun.__init__", false]], "__init__() (jax.lax.linalg.svdalgorithm method)": [[394, "jax.lax.linalg.SvdAlgorithm.__init__", false]], "__init__() (jax.numpy.character method)": [[620, "jax.numpy.character.__init__", false]], "__init__() (jax.numpy.complex128 method)": [[624, "jax.numpy.complex128.__init__", false]], "__init__() (jax.numpy.complex64 method)": [[625, "jax.numpy.complex64.__init__", false]], "__init__() (jax.numpy.complexfloating method)": [[627, "jax.numpy.complexfloating.__init__", false]], "__init__() (jax.numpy.dtype method)": [[664, "jax.numpy.dtype.__init__", false]], "__init__() (jax.numpy.finfo method)": [[697, "jax.numpy.finfo.__init__", false]], "__init__() (jax.numpy.flexible method)": [[700, "jax.numpy.flexible.__init__", false]], "__init__() (jax.numpy.float16 method)": [[704, "jax.numpy.float16.__init__", false]], "__init__() (jax.numpy.float32 method)": [[705, "jax.numpy.float32.__init__", false]], "__init__() (jax.numpy.float64 method)": [[706, "jax.numpy.float64.__init__", false]], "__init__() (jax.numpy.floating method)": [[709, "jax.numpy.floating.__init__", false]], "__init__() (jax.numpy.generic method)": [[726, "jax.numpy.generic.__init__", false]], "__init__() (jax.numpy.iinfo method)": [[744, "jax.numpy.iinfo.__init__", false]], "__init__() (jax.numpy.inexact method)": [[748, "jax.numpy.inexact.__init__", false]], "__init__() (jax.numpy.int16 method)": [[751, "jax.numpy.int16.__init__", false]], "__init__() (jax.numpy.int32 method)": [[752, "jax.numpy.int32.__init__", false]], "__init__() (jax.numpy.int64 method)": [[753, "jax.numpy.int64.__init__", false]], "__init__() (jax.numpy.int8 method)": [[754, "jax.numpy.int8.__init__", false]], "__init__() (jax.numpy.integer method)": [[756, "jax.numpy.integer.__init__", false]], "__init__() (jax.numpy.number method)": [[866, "jax.numpy.number.__init__", false]], "__init__() (jax.numpy.object_ method)": [[867, "jax.numpy.object_.__init__", false]], "__init__() (jax.numpy.signedinteger method)": [[928, "jax.numpy.signedinteger.__init__", false]], "__init__() (jax.numpy.ufunc method)": [[965, "jax.numpy.ufunc.__init__", false]], "__init__() (jax.numpy.uint16 method)": [[967, "jax.numpy.uint16.__init__", false]], "__init__() (jax.numpy.uint32 method)": [[968, "jax.numpy.uint32.__init__", false]], "__init__() (jax.numpy.uint64 method)": [[969, "jax.numpy.uint64.__init__", false]], "__init__() (jax.numpy.uint8 method)": [[970, "jax.numpy.uint8.__init__", false]], "__init__() (jax.numpy.unsignedinteger method)": [[979, "jax.numpy.unsignedinteger.__init__", false]], "__init__() (jax.profiler.steptraceannotation method)": [[1003, "jax.profiler.StepTraceAnnotation.__init__", false]], "__init__() (jax.profiler.traceannotation method)": [[1004, "jax.profiler.TraceAnnotation.__init__", false]], "__init__() (jax.scipy.interpolate.regulargridinterpolator method)": [[1064, "jax.scipy.interpolate.RegularGridInterpolator.__init__", false]], "__init__() (jax.scipy.optimize.optimizeresults method)": [[1092, "jax.scipy.optimize.OptimizeResults.__init__", false]], "__init__() (jax.scipy.spatial.transform.rotation method)": [[1107, "jax.scipy.spatial.transform.Rotation.__init__", false]], "__init__() (jax.scipy.spatial.transform.slerp method)": [[1108, "jax.scipy.spatial.transform.Slerp.__init__", false]], "__init__() (jax.scipy.stats.gaussian_kde method)": [[1196, "jax.scipy.stats.gaussian_kde.__init__", false]], "__init__() (jax.shapedtypestruct method)": [[63, "jax.ShapeDtypeStruct.__init__", false]], "__init__() (jax.tree_util.partial method)": [[1275, "jax.tree_util.Partial.__init__", false]], "_get_vjp (jax.export.exported attribute)": [[1386, "jax.export.Exported._get_vjp", false]], "abs() (in module jax.lax)": [[298, "jax.lax.abs", false]], "abs() (in module jax.numpy)": [[554, "jax.numpy.abs", false]], "absolute() (in module jax.numpy)": [[555, "jax.numpy.absolute", false]], "acc (in module jax.experimental.pallas.mosaic_gpu)": [[157, "jax.experimental.pallas.mosaic_gpu.ACC", false]], "accumulation_type (jax.lax.dotalgorithmpreset property)": [[1395, "jax.lax.DotAlgorithmPreset.accumulation_type", false]], "acos() (in module jax.lax)": [[299, "jax.lax.acos", false]], "acos() (in module jax.numpy)": [[556, "jax.numpy.acos", false]], "acosh() (in module jax.lax)": [[300, "jax.lax.acosh", false]], "acosh() (in module jax.numpy)": [[557, "jax.numpy.acosh", false]], "adagrad() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.adagrad", false]], "adam() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.adam", false]], "adamax() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.adamax", false]], "add (in module jax.numpy)": [[558, "jax.numpy.add", false]], "add() (in module jax.lax)": [[301, "jax.lax.add", false]], "addressable_devices (jax.sharding.namedsharding property)": [[1404, "jax.sharding.NamedSharding.addressable_devices", false]], "addressable_devices (jax.sharding.sharding property)": [[1404, "jax.sharding.Sharding.addressable_devices", false]], "addressable_devices_indices_map() (jax.sharding.sharding method)": [[1404, "jax.sharding.Sharding.addressable_devices_indices_map", false]], "addressable_shards (jax.array property)": [[2, "jax.Array.addressable_shards", false]], "after_all() (in module jax.lax)": [[302, "jax.lax.after_all", false]], "all() (in module jax.numpy)": [[559, "jax.numpy.all", false]], "all() (in module jax.tree)": [[1261, "jax.tree.all", false]], "all() (jax.array method)": [[3, "jax.Array.all", false]], "all_checks (in module jax.experimental.checkify)": [[117, "jax.experimental.checkify.all_checks", false]], "all_gather() (in module jax.lax)": [[303, "jax.lax.all_gather", false]], "all_leaves() (in module jax.tree_util)": [[1276, "jax.tree_util.all_leaves", false]], "all_to_all() (in module jax.lax)": [[304, "jax.lax.all_to_all", false]], "allclose() (in module jax.numpy)": [[560, "jax.numpy.allclose", false]], "amax() (in module jax.numpy)": [[561, "jax.numpy.amax", false]], "amin() (in module jax.numpy)": [[562, "jax.numpy.amin", false]], "angle() (in module jax.numpy)": [[563, "jax.numpy.angle", false]], "annotate_function() (in module jax.profiler)": [[1005, "jax.profiler.annotate_function", false]], "any() (in module jax.numpy)": [[564, "jax.numpy.any", false]], "any() (jax.array method)": [[4, "jax.Array.any", false]], "any_f8_any_f8_any (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.ANY_F8_ANY_F8_ANY", false]], "any_f8_any_f8_any_fast_accum (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.ANY_F8_ANY_F8_ANY_FAST_ACCUM", false]], "any_f8_any_f8_f32 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.ANY_F8_ANY_F8_F32", false]], "any_f8_any_f8_f32_fast_accum (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.ANY_F8_ANY_F8_F32_FAST_ACCUM", false]], "append() (in module jax.numpy)": [[565, "jax.numpy.append", false]], "apply_along_axis() (in module jax.numpy)": [[566, "jax.numpy.apply_along_axis", false]], "apply_over_axes() (in module jax.numpy)": [[567, "jax.numpy.apply_over_axes", false]], "approx_math (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[160, "jax.experimental.pallas.mosaic_gpu.CompilerParams.approx_math", false]], "approx_max_k() (in module jax.lax)": [[305, "jax.lax.approx_max_k", false]], "approx_min_k() (in module jax.lax)": [[306, "jax.lax.approx_min_k", false]], "approx_tanh() (in module jax.experimental.pallas.triton)": [[188, "jax.experimental.pallas.triton.approx_tanh", false]], "arange() (in module jax.numpy)": [[568, "jax.numpy.arange", false]], "arccos() (in module jax.numpy)": [[569, "jax.numpy.arccos", false]], "arccosh() (in module jax.numpy)": [[570, "jax.numpy.arccosh", false]], "arcsin() (in module jax.numpy)": [[571, "jax.numpy.arcsin", false]], "arcsinh() (in module jax.numpy)": [[572, "jax.numpy.arcsinh", false]], "arctan() (in module jax.numpy)": [[573, "jax.numpy.arctan", false]], "arctan2() (in module jax.numpy)": [[574, "jax.numpy.arctan2", false]], "arctanh() (in module jax.numpy)": [[575, "jax.numpy.arctanh", false]], "argmax() (in module jax.lax)": [[307, "jax.lax.argmax", false]], "argmax() (in module jax.numpy)": [[576, "jax.numpy.argmax", false]], "argmax() (jax.array method)": [[5, "jax.Array.argmax", false]], "argmin() (in module jax.lax)": [[308, "jax.lax.argmin", false]], "argmin() (in module jax.numpy)": [[577, "jax.numpy.argmin", false]], "argmin() (jax.array method)": [[6, "jax.Array.argmin", false]], "argpartition() (in module jax.numpy)": [[578, "jax.numpy.argpartition", false]], "argpartition() (jax.array method)": [[7, "jax.Array.argpartition", false]], "argsort() (in module jax.numpy)": [[579, "jax.numpy.argsort", false]], "argsort() (jax.array method)": [[8, "jax.Array.argsort", false]], "argwhere() (in module jax.numpy)": [[580, "jax.numpy.argwhere", false]], "around() (in module jax.numpy)": [[581, "jax.numpy.around", false]], "array": [[1351, "term-Array", true]], "array (class in jax)": [[0, "jax.Array", false]], "array() (in module jax.numpy)": [[582, "jax.numpy.array", false]], "array_equal() (in module jax.numpy)": [[583, "jax.numpy.array_equal", false]], "array_equiv() (in module jax.numpy)": [[584, "jax.numpy.array_equiv", false]], "array_repr() (in module jax.numpy)": [[585, "jax.numpy.array_repr", false]], "array_split() (in module jax.numpy)": [[586, "jax.numpy.array_split", false]], "array_str() (in module jax.numpy)": [[587, "jax.numpy.array_str", false]], "array_types (in module jax.extend.core)": [[259, "jax.extend.core.array_types", false]], "arraylike (in module jax.typing)": [[1300, "jax.typing.ArrayLike", false]], "as_text() (jax.stages.compiled method)": [[1405, "jax.stages.Compiled.as_text", false]], "as_text() (jax.stages.lowered method)": [[1405, "jax.stages.Lowered.as_text", false]], "asarray() (in module jax.numpy)": [[588, "jax.numpy.asarray", false]], "asin() (in module jax.lax)": [[309, "jax.lax.asin", false]], "asin() (in module jax.numpy)": [[589, "jax.numpy.asin", false]], "asinh() (in module jax.lax)": [[310, "jax.lax.asinh", false]], "asinh() (in module jax.numpy)": [[590, "jax.numpy.asinh", false]], "assert_equal() (in module jax.experimental.multihost_utils)": [[134, "jax.experimental.multihost_utils.assert_equal", false]], "associative_scan() (in module jax.lax)": [[311, "jax.lax.associative_scan", false]], "astype() (in module jax.numpy)": [[591, "jax.numpy.astype", false]], "astype() (jax.array method)": [[9, "jax.Array.astype", false]], "at (jax.array property)": [[10, "jax.Array.at", false]], "at (jax.numpy.ndarray property)": [[860, "jax.numpy.ndarray.at", false]], "atan() (in module jax.lax)": [[312, "jax.lax.atan", false]], "atan() (in module jax.numpy)": [[592, "jax.numpy.atan", false]], "atan2() (in module jax.lax)": [[313, "jax.lax.atan2", false]], "atan2() (in module jax.numpy)": [[593, "jax.numpy.atan2", false]], "atanh() (in module jax.lax)": [[314, "jax.lax.atanh", false]], "atanh() (in module jax.numpy)": [[594, "jax.numpy.atanh", false]], "atleast_1d() (in module jax.numpy)": [[595, "jax.numpy.atleast_1d", false]], "atleast_2d() (in module jax.numpy)": [[596, "jax.numpy.atleast_2d", false]], "atleast_3d() (in module jax.numpy)": [[597, "jax.numpy.atleast_3d", false]], "atomic_add() (in module jax.experimental.pallas)": [[144, "jax.experimental.pallas.atomic_add", false]], "atomic_and() (in module jax.experimental.pallas)": [[145, "jax.experimental.pallas.atomic_and", false]], "atomic_cas() (in module jax.experimental.pallas)": [[146, "jax.experimental.pallas.atomic_cas", false]], "atomic_max() (in module jax.experimental.pallas)": [[147, "jax.experimental.pallas.atomic_max", false]], "atomic_min() (in module jax.experimental.pallas)": [[148, "jax.experimental.pallas.atomic_min", false]], "atomic_or() (in module jax.experimental.pallas)": [[149, "jax.experimental.pallas.atomic_or", false]], "atomic_xchg() (in module jax.experimental.pallas)": [[150, "jax.experimental.pallas.atomic_xchg", false]], "atomic_xor() (in module jax.experimental.pallas)": [[151, "jax.experimental.pallas.atomic_xor", false]], "automatic_checks (in module jax.experimental.checkify)": [[118, "jax.experimental.checkify.automatic_checks", false]], "average() (in module jax.numpy)": [[598, "jax.numpy.average", false]], "avgpool() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.AvgPool", false]], "away_from_zero (jax.lax.roundingmethod attribute)": [[1395, "jax.lax.RoundingMethod.AWAY_FROM_ZERO", false]], "axis_index() (in module jax.lax)": [[315, "jax.lax.axis_index", false]], "axis_size() (in module jax.lax)": [[316, "jax.lax.axis_size", false]], "ball() (in module jax.random)": [[1014, "jax.random.ball", false]], "barrier (class in jax.experimental.pallas.mosaic_gpu)": [[158, "jax.experimental.pallas.mosaic_gpu.Barrier", false]], "barrier_arrive() (in module jax.experimental.pallas.mosaic_gpu)": [[169, "jax.experimental.pallas.mosaic_gpu.barrier_arrive", false]], "barrier_wait() (in module jax.experimental.pallas.mosaic_gpu)": [[170, "jax.experimental.pallas.mosaic_gpu.barrier_wait", false]], "bartlett() (in module jax.numpy)": [[599, "jax.numpy.bartlett", false]], "batch_matmul() (in module jax.lax)": [[317, "jax.lax.batch_matmul", false]], "batchnorm() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.BatchNorm", false]], "bcoo (class in jax.experimental.sparse)": [[195, "jax.experimental.sparse.BCOO", false]], "bcoo_broadcast_in_dim() (in module jax.experimental.sparse)": [[201, "jax.experimental.sparse.bcoo_broadcast_in_dim", false]], "bcoo_concatenate() (in module jax.experimental.sparse)": [[202, "jax.experimental.sparse.bcoo_concatenate", false]], "bcoo_dot_general() (in module jax.experimental.sparse)": [[203, "jax.experimental.sparse.bcoo_dot_general", false]], "bcoo_dot_general_sampled() (in module jax.experimental.sparse)": [[204, "jax.experimental.sparse.bcoo_dot_general_sampled", false]], "bcoo_dynamic_slice() (in module jax.experimental.sparse)": [[205, "jax.experimental.sparse.bcoo_dynamic_slice", false]], "bcoo_extract() (in module jax.experimental.sparse)": [[206, "jax.experimental.sparse.bcoo_extract", false]], "bcoo_fromdense() (in module jax.experimental.sparse)": [[207, "jax.experimental.sparse.bcoo_fromdense", false]], "bcoo_gather() (in module jax.experimental.sparse)": [[208, "jax.experimental.sparse.bcoo_gather", false]], "bcoo_multiply_dense() (in module jax.experimental.sparse)": [[209, "jax.experimental.sparse.bcoo_multiply_dense", false]], "bcoo_multiply_sparse() (in module jax.experimental.sparse)": [[210, "jax.experimental.sparse.bcoo_multiply_sparse", false]], "bcoo_reduce_sum() (in module jax.experimental.sparse)": [[211, "jax.experimental.sparse.bcoo_reduce_sum", false]], "bcoo_reshape() (in module jax.experimental.sparse)": [[212, "jax.experimental.sparse.bcoo_reshape", false]], "bcoo_slice() (in module jax.experimental.sparse)": [[213, "jax.experimental.sparse.bcoo_slice", false]], "bcoo_sort_indices() (in module jax.experimental.sparse)": [[214, "jax.experimental.sparse.bcoo_sort_indices", false]], "bcoo_squeeze() (in module jax.experimental.sparse)": [[215, "jax.experimental.sparse.bcoo_squeeze", false]], "bcoo_sum_duplicates() (in module jax.experimental.sparse)": [[216, "jax.experimental.sparse.bcoo_sum_duplicates", false]], "bcoo_todense() (in module jax.experimental.sparse)": [[217, "jax.experimental.sparse.bcoo_todense", false]], "bcoo_transpose() (in module jax.experimental.sparse)": [[218, "jax.experimental.sparse.bcoo_transpose", false]], "bcoo_update_layout() (in module jax.experimental.sparse)": [[219, "jax.experimental.sparse.bcoo_update_layout", false]], "bcsr (class in jax.experimental.sparse)": [[196, "jax.experimental.sparse.BCSR", false]], "bcsr_dot_general() (in module jax.experimental.sparse)": [[220, "jax.experimental.sparse.bcsr_dot_general", false]], "bcsr_extract() (in module jax.experimental.sparse)": [[221, "jax.experimental.sparse.bcsr_extract", false]], "bcsr_fromdense() (in module jax.experimental.sparse)": [[222, "jax.experimental.sparse.bcsr_fromdense", false]], "bcsr_todense() (in module jax.experimental.sparse)": [[223, "jax.experimental.sparse.bcsr_todense", false]], "bernoulli() (in module jax.random)": [[1015, "jax.random.bernoulli", false]], "bernoulli() (in module jax.scipy.special)": [[1109, "jax.scipy.special.bernoulli", false]], "bessel_i0e() (in module jax.lax)": [[318, "jax.lax.bessel_i0e", false]], "bessel_i1e() (in module jax.lax)": [[319, "jax.lax.bessel_i1e", false]], "beta() (in module jax.random)": [[1016, "jax.random.beta", false]], "beta() (in module jax.scipy.special)": [[1110, "jax.scipy.special.beta", false]], "betainc() (in module jax.lax)": [[320, "jax.lax.betainc", false]], "betainc() (in module jax.scipy.special)": [[1111, "jax.scipy.special.betainc", false]], "betaln() (in module jax.scipy.special)": [[1112, "jax.scipy.special.betaln", false]], "bf16_bf16_bf16 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.BF16_BF16_BF16", false]], "bf16_bf16_f32 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.BF16_BF16_F32", false]], "bf16_bf16_f32_x3 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.BF16_BF16_F32_X3", false]], "bf16_bf16_f32_x6 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.BF16_BF16_F32_X6", false]], "bf16_bf16_f32_x9 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.BF16_BF16_F32_X9", false]], "bfloat16 (class in jax.dtypes)": [[103, "jax.dtypes.bfloat16", false]], "bicgstab() (in module jax.scipy.sparse.linalg)": [[1104, "jax.scipy.sparse.linalg.bicgstab", false]], "bincount() (in module jax.numpy)": [[600, "jax.numpy.bincount", false]], "binomial() (in module jax.random)": [[1017, "jax.random.binomial", false]], "bitcast_convert_type() (in module jax.lax)": [[321, "jax.lax.bitcast_convert_type", false]], "bits (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.bits", false]], "bits() (in module jax.random)": [[1018, "jax.random.bits", false]], "bitwise_and (in module jax.numpy)": [[601, "jax.numpy.bitwise_and", false]], "bitwise_and() (in module jax.lax)": [[322, "jax.lax.bitwise_and", false]], "bitwise_count() (in module jax.numpy)": [[602, "jax.numpy.bitwise_count", false]], "bitwise_invert() (in module jax.numpy)": [[603, "jax.numpy.bitwise_invert", false]], "bitwise_left_shift() (in module jax.numpy)": [[604, "jax.numpy.bitwise_left_shift", false]], "bitwise_not() (in module jax.lax)": [[323, "jax.lax.bitwise_not", false]], "bitwise_not() (in module jax.numpy)": [[605, "jax.numpy.bitwise_not", false]], "bitwise_or (in module jax.numpy)": [[606, "jax.numpy.bitwise_or", false]], "bitwise_or() (in module jax.lax)": [[324, "jax.lax.bitwise_or", false]], "bitwise_right_shift() (in module jax.numpy)": [[607, "jax.numpy.bitwise_right_shift", false]], "bitwise_xor (in module jax.numpy)": [[608, "jax.numpy.bitwise_xor", false]], "bitwise_xor() (in module jax.lax)": [[325, "jax.lax.bitwise_xor", false]], "blackman() (in module jax.numpy)": [[609, "jax.numpy.blackman", false]], "block() (in module jax.numpy)": [[610, "jax.numpy.block", false]], "block_diag() (in module jax.scipy.linalg)": [[1065, "jax.scipy.linalg.block_diag", false]], "block_until_ready() (in module jax)": [[64, "jax.block_until_ready", false]], "blockspec (class in jax.experimental.pallas)": [[140, "jax.experimental.pallas.BlockSpec", false]], "blockspec (class in jax.experimental.pallas.mosaic_gpu)": [[159, "jax.experimental.pallas.mosaic_gpu.BlockSpec", false]], "bool_ (in module jax.numpy)": [[611, "jax.numpy.bool_", false]], "breakpoint() (in module jax.debug)": [[82, "jax.debug.breakpoint", false]], "broadcast() (in module jax.lax)": [[326, "jax.lax.broadcast", false]], "broadcast() (in module jax.tree)": [[1262, "jax.tree.broadcast", false]], "broadcast_arrays() (in module jax.numpy)": [[612, "jax.numpy.broadcast_arrays", false]], "broadcast_in_dim() (in module jax.lax)": [[327, "jax.lax.broadcast_in_dim", false]], "broadcast_one_to_all() (in module jax.experimental.multihost_utils)": [[135, "jax.experimental.multihost_utils.broadcast_one_to_all", false]], "broadcast_shapes() (in module jax.lax)": [[328, "jax.lax.broadcast_shapes", false]], "broadcast_shapes() (in module jax.numpy)": [[613, "jax.numpy.broadcast_shapes", false]], "broadcast_to() (in module jax.experimental.pallas)": [[152, "jax.experimental.pallas.broadcast_to", false]], "broadcast_to() (in module jax.numpy)": [[614, "jax.numpy.broadcast_to", false]], "broadcast_to_rank() (in module jax.lax)": [[329, "jax.lax.broadcast_to_rank", false]], "broadcasted_iota() (in module jax.lax)": [[330, "jax.lax.broadcasted_iota", false]], "build_tree() (in module jax.tree_util)": [[1277, "jax.tree_util.build_tree", false]], "c_ (in module jax.numpy)": [[615, "jax.numpy.c_", false]], "cache() (in module jax.extend.linear_util)": [[268, "jax.extend.linear_util.cache", false]], "call() (jax.export.exported method)": [[1386, "jax.export.Exported.call", false]], "callback() (in module jax.debug)": [[83, "jax.debug.callback", false]], "calling_convention_version (jax.export.exported attribute)": [[1386, "jax.export.Exported.calling_convention_version", false]], "can_cast() (in module jax.numpy)": [[616, "jax.numpy.can_cast", false]], "canonicalize_dtype() (in module jax.dtypes)": [[104, "jax.dtypes.canonicalize_dtype", false]], "categorical() (in module jax.random)": [[1019, "jax.random.categorical", false]], "cauchy() (in module jax.random)": [[1020, "jax.random.cauchy", false]], "cbrt() (in module jax.lax)": [[331, "jax.lax.cbrt", false]], "cbrt() (in module jax.numpy)": [[617, "jax.numpy.cbrt", false]], "cdf() (in module jax.scipy.stats.bernoulli)": [[1153, "jax.scipy.stats.bernoulli.cdf", false]], "cdf() (in module jax.scipy.stats.beta)": [[1157, "jax.scipy.stats.beta.cdf", false]], "cdf() (in module jax.scipy.stats.cauchy)": [[1167, "jax.scipy.stats.cauchy.cdf", false]], "cdf() (in module jax.scipy.stats.chi2)": [[1175, "jax.scipy.stats.chi2.cdf", false]], "cdf() (in module jax.scipy.stats.expon)": [[1183, "jax.scipy.stats.expon.cdf", false]], "cdf() (in module jax.scipy.stats.gamma)": [[1190, "jax.scipy.stats.gamma.cdf", false]], "cdf() (in module jax.scipy.stats.gennorm)": [[1204, "jax.scipy.stats.gennorm.cdf", false]], "cdf() (in module jax.scipy.stats.laplace)": [[1209, "jax.scipy.stats.laplace.cdf", false]], "cdf() (in module jax.scipy.stats.logistic)": [[1212, "jax.scipy.stats.logistic.cdf", false]], "cdf() (in module jax.scipy.stats.norm)": [[1225, "jax.scipy.stats.norm.cdf", false]], "cdf() (in module jax.scipy.stats.poisson)": [[1235, "jax.scipy.stats.poisson.cdf", false]], "cdf() (in module jax.scipy.stats.truncnorm)": [[1242, "jax.scipy.stats.truncnorm.cdf", false]], "cdf() (in module jax.scipy.stats.uniform)": [[1248, "jax.scipy.stats.uniform.cdf", false]], "cdouble (in module jax.numpy)": [[618, "jax.numpy.cdouble", false]], "ceil() (in module jax.lax)": [[332, "jax.lax.ceil", false]], "ceil() (in module jax.numpy)": [[619, "jax.numpy.ceil", false]], "celu() (in module jax.nn)": [[505, "jax.nn.celu", false]], "cg() (in module jax.scipy.sparse.linalg)": [[1105, "jax.scipy.sparse.linalg.cg", false]], "character (class in jax.numpy)": [[620, "jax.numpy.character", false]], "check() (in module jax.experimental.checkify)": [[119, "jax.experimental.checkify.check", false]], "check_error() (in module jax.experimental.checkify)": [[120, "jax.experimental.checkify.check_error", false]], "check_grads() (in module jax.test_util)": [[1257, "jax.test_util.check_grads", false]], "check_jvp() (in module jax.test_util)": [[1258, "jax.test_util.check_jvp", false]], "check_tracer_leaks (in module jax)": [[65, "jax.check_tracer_leaks", false]], "check_vjp() (in module jax.test_util)": [[1259, "jax.test_util.check_vjp", false]], "checkify() (in module jax.experimental.checkify)": [[121, "jax.experimental.checkify.checkify", false]], "checking_leaks (in module jax)": [[66, "jax.checking_leaks", false]], "checkpoint() (in module jax)": [[67, "jax.checkpoint", false]], "chisquare() (in module jax.random)": [[1021, "jax.random.chisquare", false]], "cho_factor() (in module jax.scipy.linalg)": [[1066, "jax.scipy.linalg.cho_factor", false]], "cho_solve() (in module jax.scipy.linalg)": [[1067, "jax.scipy.linalg.cho_solve", false]], "choice() (in module jax.random)": [[1022, "jax.random.choice", false]], "cholesky() (in module jax.lax.linalg)": [[395, "jax.lax.linalg.cholesky", false]], "cholesky() (in module jax.numpy.linalg)": [[784, "jax.numpy.linalg.cholesky", false]], "cholesky() (in module jax.scipy.linalg)": [[1068, "jax.scipy.linalg.cholesky", false]], "cholesky_update() (in module jax.lax.linalg)": [[396, "jax.lax.linalg.cholesky_update", false]], "choose() (in module jax.numpy)": [[621, "jax.numpy.choose", false]], "choose() (jax.array method)": [[11, "jax.Array.choose", false]], "clamp() (in module jax.lax)": [[333, "jax.lax.clamp", false]], "clear_caches() (in module jax)": [[68, "jax.clear_caches", false]], "clip() (in module jax.numpy)": [[622, "jax.numpy.clip", false]], "clip() (jax.array method)": [[12, "jax.Array.clip", false]], "clip_grads() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.clip_grads", false]], "clone() (in module jax.random)": [[1023, "jax.random.clone", false]], "closedjaxpr (class in jax.extend.core)": [[252, "jax.extend.core.ClosedJaxpr", false]], "closure_convert() (in module jax)": [[69, "jax.closure_convert", false]], "clz() (in module jax.lax)": [[334, "jax.lax.clz", false]], "collapse() (in module jax.lax)": [[335, "jax.lax.collapse", false]], "column_stack() (in module jax.numpy)": [[623, "jax.numpy.column_stack", false]], "commit_smem() (in module jax.experimental.pallas.mosaic_gpu)": [[171, "jax.experimental.pallas.mosaic_gpu.commit_smem", false]], "committed (jax.array property)": [[13, "jax.Array.committed", false]], "compile() (jax.stages.lowered method)": [[1405, "jax.stages.Lowered.compile", false]], "compiled (class in jax.stages)": [[1405, "jax.stages.Compiled", false]], "compiler_ir() (jax.stages.lowered method)": [[1405, "jax.stages.Lowered.compiler_ir", false]], "compilerparams (class in jax.experimental.pallas.mosaic_gpu)": [[160, "jax.experimental.pallas.mosaic_gpu.CompilerParams", false]], "compilerparams (class in jax.experimental.pallas.triton)": [[187, "jax.experimental.pallas.triton.CompilerParams", false]], "complex() (in module jax.lax)": [[336, "jax.lax.complex", false]], "complex128 (class in jax.numpy)": [[624, "jax.numpy.complex128", false]], "complex64 (class in jax.numpy)": [[625, "jax.numpy.complex64", false]], "complex_ (in module jax.numpy)": [[626, "jax.numpy.complex_", false]], "complexfloating (class in jax.numpy)": [[627, "jax.numpy.complexfloating", false]], "complexwarning": [[553, "jax.numpy.ComplexWarning", false]], "composite() (in module jax.lax)": [[337, "jax.lax.composite", false]], "compress() (in module jax.numpy)": [[628, "jax.numpy.compress", false]], "compress() (jax.array method)": [[14, "jax.Array.compress", false]], "concat() (in module jax.numpy)": [[629, "jax.numpy.concat", false]], "concatenate() (in module jax.lax)": [[338, "jax.lax.concatenate", false]], "concatenate() (in module jax.numpy)": [[630, "jax.numpy.concatenate", false]], "concretizationtypeerror (class in jax.errors)": [[1342, "jax.errors.ConcretizationTypeError", false]], "cond() (in module jax.lax)": [[339, "jax.lax.cond", false]], "cond() (in module jax.numpy.linalg)": [[785, "jax.numpy.linalg.cond", false]], "config (in module jax)": [[70, "jax.config", false]], "conj() (in module jax.lax)": [[340, "jax.lax.conj", false]], "conj() (in module jax.numpy)": [[631, "jax.numpy.conj", false]], "conj() (jax.array method)": [[15, "jax.Array.conj", false]], "conjugate() (in module jax.numpy)": [[632, "jax.numpy.conjugate", false]], "conjugate() (jax.array method)": [[16, "jax.Array.conjugate", false]], "constant() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.constant", false]], "constant() (in module jax.nn.initializers)": [[516, "jax.nn.initializers.constant", false]], "conv() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.Conv", false]], "conv() (in module jax.lax)": [[341, "jax.lax.conv", false]], "conv1dtranspose() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.Conv1DTranspose", false]], "conv_dimension_numbers() (in module jax.lax)": [[342, "jax.lax.conv_dimension_numbers", false]], "conv_general_dilated() (in module jax.lax)": [[343, "jax.lax.conv_general_dilated", false]], "conv_general_dilated_local() (in module jax.lax)": [[344, "jax.lax.conv_general_dilated_local", false]], "conv_general_dilated_patches() (in module jax.lax)": [[345, "jax.lax.conv_general_dilated_patches", false]], "conv_transpose() (in module jax.lax)": [[346, "jax.lax.conv_transpose", false]], "conv_with_general_padding() (in module jax.lax)": [[347, "jax.lax.conv_with_general_padding", false]], "convdimensionnumbers (class in jax.lax)": [[1395, "jax.lax.ConvDimensionNumbers", false]], "convert_element_type() (in module jax.lax)": [[348, "jax.lax.convert_element_type", false]], "convgeneraldilateddimensionnumbers (in module jax.lax)": [[1395, "jax.lax.ConvGeneralDilatedDimensionNumbers", false]], "convolve() (in module jax.numpy)": [[633, "jax.numpy.convolve", false]], "convolve() (in module jax.scipy.signal)": [[1094, "jax.scipy.signal.convolve", false]], "convolve2d() (in module jax.scipy.signal)": [[1095, "jax.scipy.signal.convolve2d", false]], "convtranspose() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.ConvTranspose", false]], "coo (class in jax.experimental.sparse)": [[197, "jax.experimental.sparse.COO", false]], "coo_fromdense() (in module jax.experimental.sparse)": [[224, "jax.experimental.sparse.coo_fromdense", false]], "coo_matmat() (in module jax.experimental.sparse)": [[225, "jax.experimental.sparse.coo_matmat", false]], "coo_matvec() (in module jax.experimental.sparse)": [[226, "jax.experimental.sparse.coo_matvec", false]], "coo_todense() (in module jax.experimental.sparse)": [[227, "jax.experimental.sparse.coo_todense", false]], "copy() (in module jax.numpy)": [[634, "jax.numpy.copy", false]], "copy() (jax.array method)": [[17, "jax.Array.copy", false]], "copy_gmem_to_smem() (in module jax.experimental.pallas.mosaic_gpu)": [[172, "jax.experimental.pallas.mosaic_gpu.copy_gmem_to_smem", false]], "copy_smem_to_gmem() (in module jax.experimental.pallas.mosaic_gpu)": [[173, "jax.experimental.pallas.mosaic_gpu.copy_smem_to_gmem", false]], "copy_to_host_async() (in module jax)": [[71, "jax.copy_to_host_async", false]], "copy_to_host_async() (jax.array method)": [[18, "jax.Array.copy_to_host_async", false]], "copysign() (in module jax.numpy)": [[635, "jax.numpy.copysign", false]], "corrcoef() (in module jax.numpy)": [[636, "jax.numpy.corrcoef", false]], "correlate() (in module jax.numpy)": [[637, "jax.numpy.correlate", false]], "correlate() (in module jax.scipy.signal)": [[1096, "jax.scipy.signal.correlate", false]], "correlate2d() (in module jax.scipy.signal)": [[1097, "jax.scipy.signal.correlate2d", false]], "cos() (in module jax.lax)": [[349, "jax.lax.cos", false]], "cos() (in module jax.numpy)": [[638, "jax.numpy.cos", false]], "cosh() (in module jax.lax)": [[350, "jax.lax.cosh", false]], "cosh() (in module jax.numpy)": [[639, "jax.numpy.cosh", false]], "cost_analysis() (jax.stages.compiled method)": [[1405, "jax.stages.Compiled.cost_analysis", false]], "cost_analysis() (jax.stages.lowered method)": [[1405, "jax.stages.Lowered.cost_analysis", false]], "count_nonzero() (in module jax.numpy)": [[640, "jax.numpy.count_nonzero", false]], "cov() (in module jax.numpy)": [[641, "jax.numpy.cov", false]], "cpu": [[1351, "term-CPU", true]], "create_device_mesh() (in module jax.experimental.mesh_utils)": [[132, "jax.experimental.mesh_utils.create_device_mesh", false]], "create_hybrid_device_mesh() (in module jax.experimental.mesh_utils)": [[133, "jax.experimental.mesh_utils.create_hybrid_device_mesh", false]], "cross() (in module jax.numpy)": [[642, "jax.numpy.cross", false]], "cross() (in module jax.numpy.linalg)": [[786, "jax.numpy.linalg.cross", false]], "csc (class in jax.experimental.sparse)": [[198, "jax.experimental.sparse.CSC", false]], "csd() (in module jax.scipy.signal)": [[1098, "jax.scipy.signal.csd", false]], "csingle (in module jax.numpy)": [[643, "jax.numpy.csingle", false]], "csr (class in jax.experimental.sparse)": [[199, "jax.experimental.sparse.CSR", false]], "csr_fromdense() (in module jax.experimental.sparse)": [[228, "jax.experimental.sparse.csr_fromdense", false]], "csr_matmat() (in module jax.experimental.sparse)": [[229, "jax.experimental.sparse.csr_matmat", false]], "csr_matvec() (in module jax.experimental.sparse)": [[230, "jax.experimental.sparse.csr_matvec", false]], "csr_todense() (in module jax.experimental.sparse)": [[231, "jax.experimental.sparse.csr_todense", false]], "cumlogsumexp() (in module jax.lax)": [[351, "jax.lax.cumlogsumexp", false]], "cummax() (in module jax.lax)": [[352, "jax.lax.cummax", false]], "cummin() (in module jax.lax)": [[353, "jax.lax.cummin", false]], "cumprod() (in module jax.lax)": [[354, "jax.lax.cumprod", false]], "cumprod() (in module jax.numpy)": [[644, "jax.numpy.cumprod", false]], "cumprod() (jax.array method)": [[19, "jax.Array.cumprod", false]], "cumsum() (in module jax.lax)": [[355, "jax.lax.cumsum", false]], "cumsum() (in module jax.numpy)": [[645, "jax.numpy.cumsum", false]], "cumsum() (jax.array method)": [[20, "jax.Array.cumsum", false]], "cumulative_prod() (in module jax.numpy)": [[646, "jax.numpy.cumulative_prod", false]], "cumulative_sum() (in module jax.numpy)": [[647, "jax.numpy.cumulative_sum", false]], "custom_call() (jax.export.disabledsafetycheck class method)": [[1386, "jax.export.DisabledSafetyCheck.custom_call", false]], "custom_dce (class in jax.experimental.custom_dce)": [[127, "jax.experimental.custom_dce.custom_dce", false]], "custom_gradient() (in module jax)": [[76, "jax.custom_gradient", false]], "custom_jvp (class in jax)": [[77, "jax.custom_jvp", false]], "custom_linear_solve() (in module jax.lax)": [[356, "jax.lax.custom_linear_solve", false]], "custom_partitioning() (in module jax.experimental.custom_partitioning)": [[1373, "jax.experimental.custom_partitioning.custom_partitioning", false]], "custom_root() (in module jax.lax)": [[357, "jax.lax.custom_root", false]], "custom_vjp (class in jax)": [[80, "jax.custom_vjp", false]], "custom_vmap (class in jax.custom_batching)": [[73, "jax.custom_batching.custom_vmap", false]], "data (jax.experimental.sparse.bcoo attribute)": [[195, "jax.experimental.sparse.BCOO.data", false]], "dct() (in module jax.scipy.fft)": [[1059, "jax.scipy.fft.dct", false]], "dctn() (in module jax.scipy.fft)": [[1060, "jax.scipy.fft.dctn", false]], "debug_barrier() (in module jax.experimental.pallas.triton)": [[189, "jax.experimental.pallas.triton.debug_barrier", false]], "debug_infs (in module jax)": [[88, "jax.debug_infs", false]], "debug_nans (in module jax)": [[89, "jax.debug_nans", false]], "debug_print() (in module jax.experimental.pallas)": [[153, "jax.experimental.pallas.debug_print", false]], "def_dce() (jax.experimental.custom_dce.custom_dce method)": [[128, "jax.experimental.custom_dce.custom_dce.def_dce", false]], "def_vmap() (jax.custom_batching.custom_vmap method)": [[74, "jax.custom_batching.custom_vmap.def_vmap", false]], "default (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.DEFAULT", false]], "default() (jax.sharding.pmapsharding class method)": [[1404, "jax.sharding.PmapSharding.default", false]], "default_backend() (in module jax)": [[90, "jax.default_backend", false]], "default_device (in module jax)": [[91, "jax.default_device", false]], "default_export_platform() (in module jax.export)": [[242, "jax.export.default_export_platform", false]], "default_matmul_precision (in module jax)": [[92, "jax.default_matmul_precision", false]], "default_prng_impl (in module jax)": [[93, "jax.default_prng_impl", false]], "define_prng_impl() (in module jax.extend.random)": [[276, "jax.extend.random.define_prng_impl", false]], "defjvp() (jax.custom_jvp method)": [[78, "jax.custom_jvp.defjvp", false]], "defjvps() (jax.custom_jvp method)": [[79, "jax.custom_jvp.defjvps", false]], "defvjp() (jax.custom_vjp method)": [[81, "jax.custom_vjp.defvjp", false]], "deg2rad() (in module jax.numpy)": [[648, "jax.numpy.deg2rad", false]], "degrees() (in module jax.numpy)": [[649, "jax.numpy.degrees", false]], "delay_release (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[160, "jax.experimental.pallas.mosaic_gpu.CompilerParams.delay_release", false]], "delete() (in module jax.numpy)": [[650, "jax.numpy.delete", false]], "delta_orthogonal() (in module jax.nn.initializers)": [[517, "jax.nn.initializers.delta_orthogonal", false]], "dense() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.Dense", false]], "deserialize() (in module jax.export)": [[243, "jax.export.deserialize", false]], "deserialize_and_load() (in module jax.experimental.serialize_executable)": [[192, "jax.experimental.serialize_executable.deserialize_and_load", false]], "det() (in module jax.numpy.linalg)": [[787, "jax.numpy.linalg.det", false]], "det() (in module jax.scipy.linalg)": [[1069, "jax.scipy.linalg.det", false]], "detrend() (in module jax.scipy.signal)": [[1099, "jax.scipy.signal.detrend", false]], "device": [[1351, "term-Device", true]], "device (class in jax)": [[62, "jax.Device", false]], "device (jax.array property)": [[21, "jax.Array.device", false]], "device_count() (in module jax)": [[94, "jax.device_count", false]], "device_get() (in module jax)": [[95, "jax.device_get", false]], "device_memory_profile() (in module jax.profiler)": [[1006, "jax.profiler.device_memory_profile", false]], "device_put() (in module jax)": [[96, "jax.device_put", false]], "device_set (jax.sharding.namedsharding property)": [[1404, "jax.sharding.NamedSharding.device_set", false]], "device_set (jax.sharding.pmapsharding property)": [[1404, "jax.sharding.PmapSharding.device_set", false]], "device_set (jax.sharding.sharding property)": [[1404, "jax.sharding.Sharding.device_set", false]], "device_set (jax.sharding.singledevicesharding property)": [[1404, "jax.sharding.SingleDeviceSharding.device_set", false]], "devices (jax.sharding.pmapsharding property)": [[1404, "jax.sharding.PmapSharding.devices", false]], "devices() (in module jax)": [[97, "jax.devices", false]], "devices_indices_map() (jax.sharding.pmapsharding method)": [[1404, "jax.sharding.PmapSharding.devices_indices_map", false]], "devices_indices_map() (jax.sharding.sharding method)": [[1404, "jax.sharding.Sharding.devices_indices_map", false]], "devices_indices_map() (jax.sharding.singledevicesharding method)": [[1404, "jax.sharding.SingleDeviceSharding.devices_indices_map", false]], "diag() (in module jax.numpy)": [[651, "jax.numpy.diag", false]], "diag_indices() (in module jax.numpy)": [[652, "jax.numpy.diag_indices", false]], "diag_indices_from() (in module jax.numpy)": [[653, "jax.numpy.diag_indices_from", false]], "diagflat() (in module jax.numpy)": [[654, "jax.numpy.diagflat", false]], "diagonal() (in module jax.numpy)": [[655, "jax.numpy.diagonal", false]], "diagonal() (in module jax.numpy.linalg)": [[788, "jax.numpy.linalg.diagonal", false]], "diagonal() (jax.array method)": [[22, "jax.Array.diagonal", false]], "diff() (in module jax.numpy)": [[656, "jax.numpy.diff", false]], "digamma() (in module jax.lax)": [[358, "jax.lax.digamma", false]], "digamma() (in module jax.scipy.special)": [[1113, "jax.scipy.special.digamma", false]], "digitize() (in module jax.numpy)": [[657, "jax.numpy.digitize", false]], "dimension_semantics (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[160, "jax.experimental.pallas.mosaic_gpu.CompilerParams.dimension_semantics", false]], "dirichlet() (in module jax.random)": [[1024, "jax.random.dirichlet", false]], "disable_jit() (in module jax)": [[98, "jax.disable_jit", false]], "disable_x64() (in module jax.experimental)": [[129, "jax.experimental.disable_x64", false]], "disabled_safety_checks (jax.export.exported attribute)": [[1386, "jax.export.Exported.disabled_safety_checks", false]], "disabledsafetycheck (class in jax.export)": [[1386, "jax.export.DisabledSafetyCheck", false]], "div() (in module jax.lax)": [[359, "jax.lax.div", false]], "div_checks (in module jax.experimental.checkify)": [[122, "jax.experimental.checkify.div_checks", false]], "divide() (in module jax.numpy)": [[658, "jax.numpy.divide", false]], "divmod() (in module jax.numpy)": [[659, "jax.numpy.divmod", false]], "dot() (in module jax.experimental.pallas)": [[154, "jax.experimental.pallas.dot", false]], "dot() (in module jax.lax)": [[360, "jax.lax.dot", false]], "dot() (in module jax.numpy)": [[660, "jax.numpy.dot", false]], "dot() (jax.array method)": [[23, "jax.Array.dot", false]], "dot_general() (in module jax.lax)": [[361, "jax.lax.dot_general", false]], "dot_product_attention() (in module jax.nn)": [[506, "jax.nn.dot_product_attention", false]], "dotalgorithm (class in jax.lax)": [[1395, "jax.lax.DotAlgorithm", false]], "dotalgorithmpreset (class in jax.lax)": [[1395, "jax.lax.DotAlgorithmPreset", false]], "double (in module jax.numpy)": [[661, "jax.numpy.double", false]], "double_sided_maxwell() (in module jax.random)": [[1025, "jax.random.double_sided_maxwell", false]], "dropout() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.Dropout", false]], "dsplit() (in module jax.numpy)": [[662, "jax.numpy.dsplit", false]], "dstack() (in module jax.numpy)": [[663, "jax.numpy.dstack", false]], "dtype (class in jax.numpy)": [[664, "jax.numpy.dtype", false]], "dtype (jax.array property)": [[24, "jax.Array.dtype", false]], "dtype (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.dtype", false]], "dtypelike (in module jax.typing)": [[1301, "jax.typing.DTypeLike", false]], "dynamic_index_in_dim() (in module jax.lax)": [[362, "jax.lax.dynamic_index_in_dim", false]], "dynamic_slice() (in module jax.lax)": [[363, "jax.lax.dynamic_slice", false]], "dynamic_slice_in_dim() (in module jax.lax)": [[364, "jax.lax.dynamic_slice_in_dim", false]], "dynamic_update_index_in_dim() (in module jax.lax)": [[365, "jax.lax.dynamic_update_index_in_dim", false]], "dynamic_update_slice() (in module jax.lax)": [[366, "jax.lax.dynamic_update_slice", false]], "dynamic_update_slice_in_dim() (in module jax.lax)": [[367, "jax.lax.dynamic_update_slice_in_dim", false]], "ediff1d() (in module jax.numpy)": [[665, "jax.numpy.ediff1d", false]], "eig() (in module jax.lax.linalg)": [[397, "jax.lax.linalg.eig", false]], "eig() (in module jax.numpy.linalg)": [[789, "jax.numpy.linalg.eig", false]], "eigh() (in module jax.lax.linalg)": [[398, "jax.lax.linalg.eigh", false]], "eigh() (in module jax.numpy.linalg)": [[790, "jax.numpy.linalg.eigh", false]], "eigh() (in module jax.scipy.linalg)": [[1070, "jax.scipy.linalg.eigh", false]], "eigh_tridiagonal() (in module jax.scipy.linalg)": [[1071, "jax.scipy.linalg.eigh_tridiagonal", false]], "eigvals() (in module jax.numpy.linalg)": [[791, "jax.numpy.linalg.eigvals", false]], "eigvalsh() (in module jax.numpy.linalg)": [[792, "jax.numpy.linalg.eigvalsh", false]], "einsum() (in module jax.numpy)": [[666, "jax.numpy.einsum", false]], "einsum_path() (in module jax.numpy)": [[667, "jax.numpy.einsum_path", false]], "elementwise() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.elementwise", false]], "elementwise_inline_asm() (in module jax.experimental.pallas.triton)": [[190, "jax.experimental.pallas.triton.elementwise_inline_asm", false]], "elu() (in module jax.nn)": [[507, "jax.nn.elu", false]], "emit_pipeline() (in module jax.experimental.pallas.mosaic_gpu)": [[174, "jax.experimental.pallas.mosaic_gpu.emit_pipeline", false]], "empty() (in module jax.experimental.sparse)": [[232, "jax.experimental.sparse.empty", false]], "empty() (in module jax.numpy)": [[668, "jax.numpy.empty", false]], "empty_like() (in module jax.numpy)": [[669, "jax.numpy.empty_like", false]], "enable_checks (in module jax)": [[110, "jax.enable_checks", false]], "enable_custom_prng (in module jax)": [[111, "jax.enable_custom_prng", false]], "enable_custom_vjp_by_custom_transpose (in module jax)": [[112, "jax.enable_custom_vjp_by_custom_transpose", false]], "enable_x64() (in module jax.experimental)": [[130, "jax.experimental.enable_x64", false]], "ensure_compile_time_eval() (in module jax)": [[113, "jax.ensure_compile_time_eval", false]], "entr() (in module jax.scipy.special)": [[1114, "jax.scipy.special.entr", false]], "eps (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.eps", false]], "epsneg (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.epsneg", false]], "eq() (in module jax.lax)": [[368, "jax.lax.eq", false]], "equal() (in module jax.numpy)": [[670, "jax.numpy.equal", false]], "erf() (in module jax.lax)": [[369, "jax.lax.erf", false]], "erf() (in module jax.scipy.special)": [[1115, "jax.scipy.special.erf", false]], "erf_inv() (in module jax.lax)": [[370, "jax.lax.erf_inv", false]], "erfc() (in module jax.lax)": [[371, "jax.lax.erfc", false]], "erfc() (in module jax.scipy.special)": [[1116, "jax.scipy.special.erfc", false]], "erfinv() (in module jax.scipy.special)": [[1117, "jax.scipy.special.erfinv", false]], "error (class in jax.experimental.checkify)": [[115, "jax.experimental.checkify.Error", false]], "eval_shape() (in module jax)": [[114, "jax.eval_shape", false]], "evaluate() (jax.scipy.stats.gaussian_kde method)": [[1197, "jax.scipy.stats.gaussian_kde.evaluate", false]], "exp() (in module jax.lax)": [[372, "jax.lax.exp", false]], "exp() (in module jax.numpy)": [[671, "jax.numpy.exp", false]], "exp1() (in module jax.scipy.special)": [[1118, "jax.scipy.special.exp1", false]], "exp2() (in module jax.lax)": [[373, "jax.lax.exp2", false]], "exp2() (in module jax.numpy)": [[672, "jax.numpy.exp2", false]], "expand_dims() (in module jax.lax)": [[374, "jax.lax.expand_dims", false]], "expand_dims() (in module jax.numpy)": [[673, "jax.numpy.expand_dims", false]], "expi (in module jax.scipy.special)": [[1119, "jax.scipy.special.expi", false]], "expit() (in module jax.scipy.special)": [[1120, "jax.scipy.special.expit", false]], "expm() (in module jax.scipy.linalg)": [[1072, "jax.scipy.linalg.expm", false]], "expm1() (in module jax.lax)": [[375, "jax.lax.expm1", false]], "expm1() (in module jax.numpy)": [[674, "jax.numpy.expm1", false]], "expm_frechet() (in module jax.scipy.linalg)": [[1073, "jax.scipy.linalg.expm_frechet", false]], "expn (in module jax.scipy.special)": [[1121, "jax.scipy.special.expn", false]], "exponential() (in module jax.random)": [[1026, "jax.random.exponential", false]], "exponential_decay() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.exponential_decay", false]], "export() (in module jax.export)": [[244, "jax.export.export", false]], "exported (class in jax.export)": [[1386, "jax.export.Exported", false]], "extract() (in module jax.numpy)": [[675, "jax.numpy.extract", false]], "eye() (in module jax.experimental.sparse)": [[233, "jax.experimental.sparse.eye", false]], "eye() (in module jax.numpy)": [[676, "jax.numpy.eye", false]], "f() (in module jax.random)": [[1027, "jax.random.f", false]], "f16_f16_f16 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.F16_F16_F16", false]], "f16_f16_f32 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.F16_F16_F32", false]], "f32_f32_f32 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.F32_F32_F32", false]], "f64_f64_f64 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.F64_F64_F64", false]], "fabs() (in module jax.numpy)": [[677, "jax.numpy.fabs", false]], "factorial() (in module jax.scipy.special)": [[1122, "jax.scipy.special.factorial", false]], "faninconcat() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.FanInConcat", false]], "fanout() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.FanOut", false]], "ffi_call() (in module jax.extend.ffi)": [[262, "jax.extend.ffi.ffi_call", false]], "ffi_call() (in module jax.ffi)": [[283, "jax.ffi.ffi_call", false]], "ffi_lowering() (in module jax.extend.ffi)": [[263, "jax.extend.ffi.ffi_lowering", false]], "ffi_lowering() (in module jax.ffi)": [[284, "jax.ffi.ffi_lowering", false]], "fft (jax.lax.ffttype attribute)": [[1395, "jax.lax.FftType.FFT", false]], "fft() (in module jax.lax)": [[376, "jax.lax.fft", false]], "fft() (in module jax.numpy.fft)": [[678, "jax.numpy.fft.fft", false]], "fft2() (in module jax.numpy.fft)": [[679, "jax.numpy.fft.fft2", false]], "fftconvolve() (in module jax.scipy.signal)": [[1100, "jax.scipy.signal.fftconvolve", false]], "fftfreq() (in module jax.numpy.fft)": [[680, "jax.numpy.fft.fftfreq", false]], "fftn() (in module jax.numpy.fft)": [[681, "jax.numpy.fft.fftn", false]], "fftshift() (in module jax.numpy.fft)": [[682, "jax.numpy.fft.fftshift", false]], "ffttype (class in jax.lax)": [[1395, "jax.lax.FftType", false]], "fill_diagonal() (in module jax.numpy)": [[696, "jax.numpy.fill_diagonal", false]], "finfo (class in jax.numpy)": [[697, "jax.numpy.finfo", false]], "fix() (in module jax.numpy)": [[698, "jax.numpy.fix", false]], "flat (jax.array property)": [[25, "jax.Array.flat", false]], "flatnonzero() (in module jax.numpy)": [[699, "jax.numpy.flatnonzero", false]], "flatten() (in module jax.tree)": [[1263, "jax.tree.flatten", false]], "flatten() (jax.array method)": [[26, "jax.Array.flatten", false]], "flatten_with_path() (in module jax.tree)": [[1264, "jax.tree.flatten_with_path", false]], "flexible (class in jax.numpy)": [[700, "jax.numpy.flexible", false]], "flip() (in module jax.numpy)": [[701, "jax.numpy.flip", false]], "fliplr() (in module jax.numpy)": [[702, "jax.numpy.fliplr", false]], "flipud() (in module jax.numpy)": [[703, "jax.numpy.flipud", false]], "float0 (in module jax.dtypes)": [[105, "jax.dtypes.float0", false]], "float16 (class in jax.numpy)": [[704, "jax.numpy.float16", false]], "float32 (class in jax.numpy)": [[705, "jax.numpy.float32", false]], "float64 (class in jax.numpy)": [[706, "jax.numpy.float64", false]], "float_ (in module jax.numpy)": [[707, "jax.numpy.float_", false]], "float_checks (in module jax.experimental.checkify)": [[123, "jax.experimental.checkify.float_checks", false]], "float_power() (in module jax.numpy)": [[708, "jax.numpy.float_power", false]], "floating (class in jax.numpy)": [[709, "jax.numpy.floating", false]], "floor() (in module jax.lax)": [[377, "jax.lax.floor", false]], "floor() (in module jax.numpy)": [[710, "jax.numpy.floor", false]], "floor_divide() (in module jax.numpy)": [[711, "jax.numpy.floor_divide", false]], "fmax() (in module jax.numpy)": [[712, "jax.numpy.fmax", false]], "fmin() (in module jax.numpy)": [[713, "jax.numpy.fmin", false]], "fmod() (in module jax.numpy)": [[714, "jax.numpy.fmod", false]], "fold_in() (in module jax.random)": [[1028, "jax.random.fold_in", false]], "for_tensor_core (jax.experimental.pallas.mosaic_gpu.barrier attribute)": [[158, "jax.experimental.pallas.mosaic_gpu.Barrier.for_tensor_core", false]], "fori_loop() (in module jax.lax)": [[378, "jax.lax.fori_loop", false]], "forward-mode autodiff": [[1351, "term-forward-mode-autodiff", true]], "fresnel (in module jax.scipy.special)": [[1123, "jax.scipy.special.fresnel", false]], "frexp() (in module jax.numpy)": [[715, "jax.numpy.frexp", false]], "from_dlpack() (in module jax.dlpack)": [[101, "jax.dlpack.from_dlpack", false]], "from_dlpack() (in module jax.numpy)": [[716, "jax.numpy.from_dlpack", false]], "frombuffer() (in module jax.numpy)": [[717, "jax.numpy.frombuffer", false]], "fromfile() (in module jax.numpy)": [[718, "jax.numpy.fromfile", false]], "fromfunction() (in module jax.numpy)": [[719, "jax.numpy.fromfunction", false]], "fromiter() (in module jax.numpy)": [[720, "jax.numpy.fromiter", false]], "frompyfunc() (in module jax.numpy)": [[721, "jax.numpy.frompyfunc", false]], "fromstring() (in module jax.numpy)": [[722, "jax.numpy.fromstring", false]], "full() (in module jax.lax)": [[379, "jax.lax.full", false]], "full() (in module jax.numpy)": [[723, "jax.numpy.full", false]], "full_like() (in module jax.lax)": [[380, "jax.lax.full_like", false]], "full_like() (in module jax.numpy)": [[724, "jax.numpy.full_like", false]], "fun_name (jax.export.exported attribute)": [[1386, "jax.export.Exported.fun_name", false]], "functional programming": [[1351, "term-functional-programming", true]], "funm() (in module jax.scipy.linalg)": [[1074, "jax.scipy.linalg.funm", false]], "gamma() (in module jax.random)": [[1029, "jax.random.gamma", false]], "gamma() (in module jax.scipy.special)": [[1124, "jax.scipy.special.gamma", false]], "gammainc() (in module jax.scipy.special)": [[1125, "jax.scipy.special.gammainc", false]], "gammaincc() (in module jax.scipy.special)": [[1126, "jax.scipy.special.gammaincc", false]], "gammaln() (in module jax.scipy.special)": [[1127, "jax.scipy.special.gammaln", false]], "gammasgn() (in module jax.scipy.special)": [[1128, "jax.scipy.special.gammasgn", false]], "gather() (in module jax.lax)": [[381, "jax.lax.gather", false]], "gatherdimensionnumbers (class in jax.lax)": [[1395, "jax.lax.GatherDimensionNumbers", false]], "gatherscattermode (class in jax.lax)": [[1395, "jax.lax.GatherScatterMode", false]], "gaussian_kde (class in jax.scipy.stats)": [[1196, "jax.scipy.stats.gaussian_kde", false]], "gcd() (in module jax.numpy)": [[725, "jax.numpy.gcd", false]], "ge() (in module jax.lax)": [[382, "jax.lax.ge", false]], "gelu() (in module jax.nn)": [[508, "jax.nn.gelu", false]], "generalconv() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.GeneralConv", false]], "generalconvtranspose() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.GeneralConvTranspose", false]], "generalized_normal() (in module jax.random)": [[1030, "jax.random.generalized_normal", false]], "generic (class in jax.numpy)": [[726, "jax.numpy.generic", false]], "geometric() (in module jax.random)": [[1031, "jax.random.geometric", false]], "geomspace() (in module jax.numpy)": [[727, "jax.numpy.geomspace", false]], "get_backend() (in module jax.lib.xla_bridge)": [[490, "jax.lib.xla_bridge.get_backend", false]], "get_compile_options() (in module jax.lib.xla_bridge)": [[491, "jax.lib.xla_bridge.get_compile_options", false]], "get_printoptions() (in module jax.numpy)": [[728, "jax.numpy.get_printoptions", false]], "get_scaled_dot_general_config() (in module jax.nn)": [[509, "jax.nn.get_scaled_dot_general_config", false]], "global_array_to_host_local_array() (in module jax.experimental.multihost_utils)": [[136, "jax.experimental.multihost_utils.global_array_to_host_local_array", false]], "global_shards (jax.array property)": [[27, "jax.Array.global_shards", false]], "glorot_normal() (in module jax.nn.initializers)": [[518, "jax.nn.initializers.glorot_normal", false]], "glorot_uniform() (in module jax.nn.initializers)": [[519, "jax.nn.initializers.glorot_uniform", false]], "glu() (in module jax.nn)": [[510, "jax.nn.glu", false]], "gmem (in module jax.experimental.pallas.mosaic_gpu)": [[161, "jax.experimental.pallas.mosaic_gpu.GMEM", false]], "gmres() (in module jax.scipy.sparse.linalg)": [[1106, "jax.scipy.sparse.linalg.gmres", false]], "gpu": [[1351, "term-GPU", true]], "grad() (in module jax)": [[289, "jax.grad", false]], "grad() (in module jax.experimental.sparse)": [[234, "jax.experimental.sparse.grad", false]], "gradient() (in module jax.numpy)": [[729, "jax.numpy.gradient", false]], "greater() (in module jax.numpy)": [[730, "jax.numpy.greater", false]], "greater_equal() (in module jax.numpy)": [[731, "jax.numpy.greater_equal", false]], "gridspec (class in jax.experimental.pallas)": [[141, "jax.experimental.pallas.GridSpec", false]], "gt() (in module jax.lax)": [[383, "jax.lax.gt", false]], "gumbel() (in module jax.random)": [[1032, "jax.random.gumbel", false]], "hamming() (in module jax.numpy)": [[732, "jax.numpy.hamming", false]], "hanning() (in module jax.numpy)": [[733, "jax.numpy.hanning", false]], "hard_sigmoid() (in module jax.nn)": [[511, "jax.nn.hard_sigmoid", false]], "hard_silu() (in module jax.nn)": [[512, "jax.nn.hard_silu", false]], "hard_swish() (in module jax.nn)": [[513, "jax.nn.hard_swish", false]], "hard_tanh() (in module jax.nn)": [[514, "jax.nn.hard_tanh", false]], "has_vjp() (jax.export.exported method)": [[1386, "jax.export.Exported.has_vjp", false]], "he_normal() (in module jax.nn.initializers)": [[520, "jax.nn.initializers.he_normal", false]], "he_uniform() (in module jax.nn.initializers)": [[521, "jax.nn.initializers.he_uniform", false]], "heaviside() (in module jax.numpy)": [[734, "jax.numpy.heaviside", false]], "hessenberg() (in module jax.lax.linalg)": [[399, "jax.lax.linalg.hessenberg", false]], "hessenberg() (in module jax.scipy.linalg)": [[1075, "jax.scipy.linalg.hessenberg", false]], "hessian() (in module jax)": [[290, "jax.hessian", false]], "hfft() (in module jax.numpy.fft)": [[683, "jax.numpy.fft.hfft", false]], "hilbert() (in module jax.scipy.linalg)": [[1076, "jax.scipy.linalg.hilbert", false]], "histogram() (in module jax.numpy)": [[735, "jax.numpy.histogram", false]], "histogram2d() (in module jax.numpy)": [[736, "jax.numpy.histogram2d", false]], "histogram_bin_edges() (in module jax.numpy)": [[737, "jax.numpy.histogram_bin_edges", false]], "histogramdd() (in module jax.numpy)": [[738, "jax.numpy.histogramdd", false]], "host_local_array_to_global_array() (in module jax.experimental.multihost_utils)": [[137, "jax.experimental.multihost_utils.host_local_array_to_global_array", false]], "householder_product() (in module jax.lax.linalg)": [[400, "jax.lax.linalg.householder_product", false]], "hsplit() (in module jax.numpy)": [[739, "jax.numpy.hsplit", false]], "hstack() (in module jax.numpy)": [[740, "jax.numpy.hstack", false]], "hyp1f1 (in module jax.scipy.special)": [[1129, "jax.scipy.special.hyp1f1", false]], "hypot() (in module jax.numpy)": [[741, "jax.numpy.hypot", false]], "i0() (in module jax.numpy)": [[742, "jax.numpy.i0", false]], "i0() (in module jax.scipy.special)": [[1130, "jax.scipy.special.i0", false]], "i0e() (in module jax.scipy.special)": [[1131, "jax.scipy.special.i0e", false]], "i1() (in module jax.scipy.special)": [[1132, "jax.scipy.special.i1", false]], "i1e() (in module jax.scipy.special)": [[1133, "jax.scipy.special.i1e", false]], "idct() (in module jax.scipy.fft)": [[1061, "jax.scipy.fft.idct", false]], "idctn() (in module jax.scipy.fft)": [[1062, "jax.scipy.fft.idctn", false]], "identity() (in module jax.nn)": [[515, "jax.nn.identity", false]], "identity() (in module jax.numpy)": [[743, "jax.numpy.identity", false]], "iexp (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.iexp", false]], "ifft (jax.lax.ffttype attribute)": [[1395, "jax.lax.FftType.IFFT", false]], "ifft() (in module jax.numpy.fft)": [[684, "jax.numpy.fft.ifft", false]], "ifft2() (in module jax.numpy.fft)": [[685, "jax.numpy.fft.ifft2", false]], "ifftn() (in module jax.numpy.fft)": [[686, "jax.numpy.fft.ifftn", false]], "ifftshift() (in module jax.numpy.fft)": [[687, "jax.numpy.fft.ifftshift", false]], "igamma() (in module jax.lax)": [[384, "jax.lax.igamma", false]], "igammac() (in module jax.lax)": [[385, "jax.lax.igammac", false]], "ihfft() (in module jax.numpy.fft)": [[688, "jax.numpy.fft.ihfft", false]], "iinfo (class in jax.numpy)": [[744, "jax.numpy.iinfo", false]], "imag (jax.array property)": [[28, "jax.Array.imag", false]], "imag() (in module jax.lax)": [[386, "jax.lax.imag", false]], "imag() (in module jax.numpy)": [[745, "jax.numpy.imag", false]], "in_avals (jax.export.exported attribute)": [[1386, "jax.export.Exported.in_avals", false]], "in_shardings_hlo (jax.export.exported attribute)": [[1386, "jax.export.Exported.in_shardings_hlo", false]], "in_shardings_jax() (jax.export.exported method)": [[1386, "jax.export.Exported.in_shardings_jax", false]], "in_tree (jax.export.exported attribute)": [[1386, "jax.export.Exported.in_tree", false]], "in_tree (jax.stages.compiled property)": [[1405, "jax.stages.Compiled.in_tree", false]], "in_tree (jax.stages.lowered property)": [[1405, "jax.stages.Lowered.in_tree", false]], "index_checks (in module jax.experimental.checkify)": [[124, "jax.experimental.checkify.index_checks", false]], "index_exp (in module jax.numpy)": [[746, "jax.numpy.index_exp", false]], "index_in_dim() (in module jax.lax)": [[387, "jax.lax.index_in_dim", false]], "index_take() (in module jax.lax)": [[388, "jax.lax.index_take", false]], "indices (jax.experimental.sparse.bcoo attribute)": [[195, "jax.experimental.sparse.BCOO.indices", false]], "indices() (in module jax.numpy)": [[747, "jax.numpy.indices", false]], "inexact (class in jax.numpy)": [[748, "jax.numpy.inexact", false]], "init_fn (jax.example_libraries.optimizers.optimizer attribute)": [[1367, "jax.example_libraries.optimizers.Optimizer.init_fn", false]], "initialize() (in module jax.distributed)": [[99, "jax.distributed.initialize", false]], "initialize_cache() (in module jax.experimental.compilation_cache.compilation_cache)": [[1371, "jax.experimental.compilation_cache.compilation_cache.initialize_cache", false]], "inner() (in module jax.numpy)": [[749, "jax.numpy.inner", false]], "insert() (in module jax.numpy)": [[750, "jax.numpy.insert", false]], "inspect_array_sharding() (in module jax.debug)": [[84, "jax.debug.inspect_array_sharding", false]], "int16 (class in jax.numpy)": [[751, "jax.numpy.int16", false]], "int32 (class in jax.numpy)": [[752, "jax.numpy.int32", false]], "int64 (class in jax.numpy)": [[753, "jax.numpy.int64", false]], "int8 (class in jax.numpy)": [[754, "jax.numpy.int8", false]], "int_ (in module jax.numpy)": [[755, "jax.numpy.int_", false]], "integer (class in jax.numpy)": [[756, "jax.numpy.integer", false]], "integer_pow() (in module jax.lax)": [[389, "jax.lax.integer_pow", false]], "integrate_box_1d() (jax.scipy.stats.gaussian_kde method)": [[1198, "jax.scipy.stats.gaussian_kde.integrate_box_1d", false]], "integrate_gaussian() (jax.scipy.stats.gaussian_kde method)": [[1199, "jax.scipy.stats.gaussian_kde.integrate_gaussian", false]], "integrate_kde() (jax.scipy.stats.gaussian_kde method)": [[1200, "jax.scipy.stats.gaussian_kde.integrate_kde", false]], "interp() (in module jax.numpy)": [[757, "jax.numpy.interp", false]], "intersect1d() (in module jax.numpy)": [[758, "jax.numpy.intersect1d", false]], "inv() (in module jax.numpy.linalg)": [[793, "jax.numpy.linalg.inv", false]], "inv() (in module jax.scipy.linalg)": [[1077, "jax.scipy.linalg.inv", false]], "inverse_time_decay() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.inverse_time_decay", false]], "invert() (in module jax.numpy)": [[759, "jax.numpy.invert", false]], "io_callback() (in module jax.experimental)": [[131, "jax.experimental.io_callback", false]], "iota() (in module jax.lax)": [[390, "jax.lax.iota", false]], "irfft (jax.lax.ffttype attribute)": [[1395, "jax.lax.FftType.IRFFT", false]], "irfft() (in module jax.numpy.fft)": [[689, "jax.numpy.fft.irfft", false]], "irfft2() (in module jax.numpy.fft)": [[690, "jax.numpy.fft.irfft2", false]], "irfftn() (in module jax.numpy.fft)": [[691, "jax.numpy.fft.irfftn", false]], "is_custom_call() (jax.export.disabledsafetycheck method)": [[1386, "jax.export.DisabledSafetyCheck.is_custom_call", false]], "is_equivalent_to() (jax.sharding.pmapsharding method)": [[1404, "jax.sharding.PmapSharding.is_equivalent_to", false]], "is_equivalent_to() (jax.sharding.sharding method)": [[1404, "jax.sharding.Sharding.is_equivalent_to", false]], "is_finite() (in module jax.lax)": [[391, "jax.lax.is_finite", false]], "is_fully_addressable (jax.array property)": [[29, "jax.Array.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.namedsharding property)": [[1404, "jax.sharding.NamedSharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.pmapsharding property)": [[1404, "jax.sharding.PmapSharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.sharding property)": [[1404, "jax.sharding.Sharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.singledevicesharding property)": [[1404, "jax.sharding.SingleDeviceSharding.is_fully_addressable", false]], "is_fully_replicated (jax.array property)": [[30, "jax.Array.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.namedsharding property)": [[1404, "jax.sharding.NamedSharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.pmapsharding property)": [[1404, "jax.sharding.PmapSharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.sharding property)": [[1404, "jax.sharding.Sharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.singledevicesharding property)": [[1404, "jax.sharding.SingleDeviceSharding.is_fully_replicated", false]], "is_initialized() (in module jax.experimental.compilation_cache.compilation_cache)": [[1371, "jax.experimental.compilation_cache.compilation_cache.is_initialized", false]], "is_symbolic_dim() (in module jax.export)": [[245, "jax.export.is_symbolic_dim", false]], "isclose() (in module jax.numpy)": [[760, "jax.numpy.isclose", false]], "iscomplex() (in module jax.numpy)": [[761, "jax.numpy.iscomplex", false]], "iscomplexobj() (in module jax.numpy)": [[762, "jax.numpy.iscomplexobj", false]], "isdtype() (in module jax.numpy)": [[763, "jax.numpy.isdtype", false]], "isf() (in module jax.scipy.stats.cauchy)": [[1168, "jax.scipy.stats.cauchy.isf", false]], "isf() (in module jax.scipy.stats.logistic)": [[1213, "jax.scipy.stats.logistic.isf", false]], "isf() (in module jax.scipy.stats.norm)": [[1226, "jax.scipy.stats.norm.isf", false]], "isfinite() (in module jax.numpy)": [[764, "jax.numpy.isfinite", false]], "isin() (in module jax.numpy)": [[765, "jax.numpy.isin", false]], "isinf() (in module jax.numpy)": [[766, "jax.numpy.isinf", false]], "isnan() (in module jax.numpy)": [[767, "jax.numpy.isnan", false]], "isneginf() (in module jax.numpy)": [[768, "jax.numpy.isneginf", false]], "isposinf() (in module jax.numpy)": [[769, "jax.numpy.isposinf", false]], "isreal() (in module jax.numpy)": [[770, "jax.numpy.isreal", false]], "isrealobj() (in module jax.numpy)": [[771, "jax.numpy.isrealobj", false]], "isscalar() (in module jax.numpy)": [[772, "jax.numpy.isscalar", false]], "issubdtype() (in module jax.dtypes)": [[106, "jax.dtypes.issubdtype", false]], "issubdtype() (in module jax.numpy)": [[773, "jax.numpy.issubdtype", false]], "istft() (in module jax.scipy.signal)": [[1101, "jax.scipy.signal.istft", false]], "item() (jax.array method)": [[31, "jax.Array.item", false]], "itemsize (jax.array property)": [[32, "jax.Array.itemsize", false]], "iterable() (in module jax.numpy)": [[774, "jax.numpy.iterable", false]], "ix_() (in module jax.numpy)": [[775, "jax.numpy.ix_", false]], "jacfwd() (in module jax)": [[293, "jax.jacfwd", false]], "jacobian() (in module jax)": [[294, "jax.jacobian", false]], "jacrev() (in module jax)": [[295, "jax.jacrev", false]], "jax.core": [[1361, "module-jax.core", false]], "jax.debug": [[1362, "module-jax.debug", false]], "jax.distributed": [[1363, "module-jax.distributed", false]], "jax.dlpack": [[1364, "module-jax.dlpack", false]], "jax.dtypes": [[1365, "module-jax.dtypes", false]], "jax.example_libraries": [[1366, "module-jax.example_libraries", false]], "jax.example_libraries.optimizers": [[1367, "module-jax.example_libraries.optimizers", false]], "jax.example_libraries.stax": [[1368, "module-jax.example_libraries.stax", false]], "jax.experimental.checkify": [[1370, "module-jax.experimental.checkify", false]], "jax.experimental.compilation_cache.compilation_cache": [[1371, "module-jax.experimental.compilation_cache.compilation_cache", false]], "jax.experimental.custom_dce": [[1372, "module-jax.experimental.custom_dce", false]], "jax.experimental.custom_partitioning": [[1373, "module-jax.experimental.custom_partitioning", false]], "jax.experimental.jet": [[1374, "module-jax.experimental.jet", false]], "jax.experimental.key_reuse": [[1375, "module-jax.experimental.key_reuse", false]], "jax.experimental.mesh_utils": [[1376, "module-jax.experimental.mesh_utils", false]], "jax.experimental.multihost_utils": [[1377, "module-jax.experimental.multihost_utils", false]], "jax.experimental.pallas": [[1378, "module-jax.experimental.pallas", false]], "jax.experimental.pallas.mosaic_gpu": [[1379, "module-jax.experimental.pallas.mosaic_gpu", false]], "jax.experimental.pallas.tpu": [[1380, "module-jax.experimental.pallas.tpu", false]], "jax.experimental.pallas.triton": [[1381, "module-jax.experimental.pallas.triton", false]], "jax.experimental.pjit": [[1382, "module-jax.experimental.pjit", false]], "jax.experimental.serialize_executable": [[1383, "module-jax.experimental.serialize_executable", false]], "jax.experimental.shard_map": [[1384, "module-jax.experimental.shard_map", false]], "jax.experimental.sparse": [[1385, "module-jax.experimental.sparse", false]], "jax.experimental.sparse.linalg": [[1385, "module-jax.experimental.sparse.linalg", false]], "jax.export": [[1386, "module-jax.export", false]], "jax.export.maximum_supported_serialization_version (in module jax.export)": [[1386, "jax.export.jax.export.maximum_supported_serialization_version", false]], "jax.export.minimum_supported_serialization_version (in module jax.export)": [[1386, "jax.export.jax.export.minimum_supported_serialization_version", false]], "jax.extend": [[1387, "module-jax.extend", false]], "jax.extend.core": [[1388, "module-jax.extend.core", false]], "jax.extend.core.primitives": [[261, "module-jax.extend.core.primitives", false]], "jax.extend.ffi": [[1392, "module-jax.extend.ffi", false]], "jax.extend.linear_util": [[1389, "module-jax.extend.linear_util", false]], "jax.extend.mlir": [[1390, "module-jax.extend.mlir", false]], "jax.extend.mlir.dialects": [[273, "module-jax.extend.mlir.dialects", false]], "jax.extend.mlir.ir": [[274, "module-jax.extend.mlir.ir", false]], "jax.extend.mlir.passmanager": [[275, "module-jax.extend.mlir.passmanager", false]], "jax.extend.random": [[1391, "module-jax.extend.random", false]], "jax.ffi": [[1392, "module-jax.ffi", false]], "jax.flatten_util": [[1393, "module-jax.flatten_util", false]], "jax.image": [[1394, "module-jax.image", false]], "jax.lax": [[1395, "module-jax.lax", false]], "jax.lax.linalg": [[1395, "module-jax.lax.linalg", false]], "jax.nn": [[1397, "module-jax.nn", false]], "jax.nn.initializers": [[1398, "module-jax.nn.initializers", false]], "jax.numpy": [[1399, "module-jax.numpy", false]], "jax.numpy.fft": [[1399, "module-jax.numpy.fft", false]], "jax.numpy.linalg": [[1399, "module-jax.numpy.linalg", false]], "jax.ops": [[1400, "module-jax.ops", false]], "jax.profiler": [[1401, "module-jax.profiler", false]], "jax.random": [[1402, "module-jax.random", false]], "jax.scipy.cluster.vq": [[1403, "module-jax.scipy.cluster.vq", false]], "jax.scipy.fft": [[1403, "module-jax.scipy.fft", false]], "jax.scipy.integrate": [[1403, "module-jax.scipy.integrate", false]], "jax.scipy.interpolate": [[1403, "module-jax.scipy.interpolate", false]], "jax.scipy.linalg": [[1403, "module-jax.scipy.linalg", false]], "jax.scipy.ndimage": [[1403, "module-jax.scipy.ndimage", false]], "jax.scipy.optimize": [[1403, "module-jax.scipy.optimize", false]], "jax.scipy.signal": [[1403, "module-jax.scipy.signal", false]], "jax.scipy.sparse.linalg": [[1403, "module-jax.scipy.sparse.linalg", false]], "jax.scipy.spatial.transform": [[1403, "module-jax.scipy.spatial.transform", false]], "jax.scipy.special": [[1403, "module-jax.scipy.special", false]], "jax.scipy.stats": [[1403, "module-jax.scipy.stats", false]], "jax.scipy.stats.bernoulli": [[1403, "module-jax.scipy.stats.bernoulli", false]], "jax.scipy.stats.beta": [[1403, "module-jax.scipy.stats.beta", false]], "jax.scipy.stats.betabinom": [[1403, "module-jax.scipy.stats.betabinom", false]], "jax.scipy.stats.binom": [[1403, "module-jax.scipy.stats.binom", false]], "jax.scipy.stats.cauchy": [[1403, "module-jax.scipy.stats.cauchy", false]], "jax.scipy.stats.chi2": [[1403, "module-jax.scipy.stats.chi2", false]], "jax.scipy.stats.dirichlet": [[1403, "module-jax.scipy.stats.dirichlet", false]], "jax.scipy.stats.expon": [[1403, "module-jax.scipy.stats.expon", false]], "jax.scipy.stats.gamma": [[1403, "module-jax.scipy.stats.gamma", false]], "jax.scipy.stats.gennorm": [[1403, "module-jax.scipy.stats.gennorm", false]], "jax.scipy.stats.geom": [[1403, "module-jax.scipy.stats.geom", false]], "jax.scipy.stats.laplace": [[1403, "module-jax.scipy.stats.laplace", false]], "jax.scipy.stats.logistic": [[1403, "module-jax.scipy.stats.logistic", false]], "jax.scipy.stats.multinomial": [[1403, "module-jax.scipy.stats.multinomial", false]], "jax.scipy.stats.multivariate_normal": [[1403, "module-jax.scipy.stats.multivariate_normal", false]], "jax.scipy.stats.nbinom": [[1403, "module-jax.scipy.stats.nbinom", false]], "jax.scipy.stats.norm": [[1403, "module-jax.scipy.stats.norm", false]], "jax.scipy.stats.pareto": [[1403, "module-jax.scipy.stats.pareto", false]], "jax.scipy.stats.poisson": [[1403, "module-jax.scipy.stats.poisson", false]], "jax.scipy.stats.t": [[1403, "module-jax.scipy.stats.t", false]], "jax.scipy.stats.truncnorm": [[1403, "module-jax.scipy.stats.truncnorm", false]], "jax.scipy.stats.uniform": [[1403, "module-jax.scipy.stats.uniform", false]], "jax.scipy.stats.vonmises": [[1403, "module-jax.scipy.stats.vonmises", false]], "jax.scipy.stats.wrapcauchy": [[1403, "module-jax.scipy.stats.wrapcauchy", false]], "jax.sharding": [[1404, "module-jax.sharding", false]], "jax.stages": [[1405, "module-jax.stages", false]], "jax.test_util": [[1406, "module-jax.test_util", false]], "jax.tree": [[1407, "module-jax.tree", false]], "jax.tree_util": [[1408, "module-jax.tree_util", false]], "jax.typing": [[1409, "module-jax.typing", false]], "jaxpr": [[1351, "term-jaxpr", true]], "jaxpr (class in jax.extend.core)": [[253, "jax.extend.core.Jaxpr", false]], "jaxpr_as_fun (in module jax.extend.core)": [[260, "jax.extend.core.jaxpr_as_fun", false]], "jaxpreqn (class in jax.extend.core)": [[254, "jax.extend.core.JaxprEqn", false]], "jaxruntimeerror": [[116, "jax.experimental.checkify.JaxRuntimeError", false]], "jaxruntimeerror (in module jax.errors)": [[1342, "jax.errors.JaxRuntimeError", false]], "jaxsparse (class in jax.experimental.sparse)": [[200, "jax.experimental.sparse.JAXSparse", false]], "jet() (in module jax.experimental.jet)": [[1374, "jax.experimental.jet.jet", false]], "jit": [[1351, "term-JIT", true]], "jit() (in module jax)": [[296, "jax.jit", false]], "joinpoint (class in jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.JoinPoint", false]], "jvp": [[1351, "term-JVP", true]], "jvp() (in module jax)": [[297, "jax.jvp", false]], "kaiser() (in module jax.numpy)": [[776, "jax.numpy.kaiser", false]], "key() (in module jax.random)": [[1033, "jax.random.key", false]], "key_data() (in module jax.random)": [[1034, "jax.random.key_data", false]], "keyentry (in module jax.tree_util)": [[1273, "jax.tree_util.KeyEntry", false]], "keypath (in module jax.tree_util)": [[1274, "jax.tree_util.KeyPath", false]], "keyreuseerror (class in jax.errors)": [[1342, "jax.errors.KeyReuseError", false]], "keystr() (in module jax.tree_util)": [[1278, "jax.tree_util.keystr", false]], "kl_div() (in module jax.scipy.special)": [[1134, "jax.scipy.special.kl_div", false]], "kron() (in module jax.numpy)": [[777, "jax.numpy.kron", false]], "l2_norm() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.l2_norm", false]], "laplace() (in module jax.random)": [[1035, "jax.random.laplace", false]], "layout (class in jax.experimental.pallas.mosaic_gpu)": [[162, "jax.experimental.pallas.mosaic_gpu.Layout", false]], "layout_cast() (in module jax.experimental.pallas.mosaic_gpu)": [[175, "jax.experimental.pallas.mosaic_gpu.layout_cast", false]], "lcm() (in module jax.numpy)": [[778, "jax.numpy.lcm", false]], "ldexp() (in module jax.numpy)": [[779, "jax.numpy.ldexp", false]], "le() (in module jax.lax)": [[392, "jax.lax.le", false]], "leaky_relu() (in module jax.nn)": [[531, "jax.nn.leaky_relu", false]], "leaves() (in module jax.tree)": [[1265, "jax.tree.leaves", false]], "leaves_with_path() (in module jax.tree)": [[1266, "jax.tree.leaves_with_path", false]], "lecun_normal() (in module jax.nn.initializers)": [[522, "jax.nn.initializers.lecun_normal", false]], "lecun_uniform() (in module jax.nn.initializers)": [[523, "jax.nn.initializers.lecun_uniform", false]], "left_shift() (in module jax.numpy)": [[780, "jax.numpy.left_shift", false]], "less() (in module jax.numpy)": [[781, "jax.numpy.less", false]], "less_equal() (in module jax.numpy)": [[782, "jax.numpy.less_equal", false]], "lexsort() (in module jax.numpy)": [[783, "jax.numpy.lexsort", false]], "lgamma() (in module jax.lax)": [[393, "jax.lax.lgamma", false]], "linear_transpose() (in module jax)": [[492, "jax.linear_transpose", false]], "linearize() (in module jax)": [[493, "jax.linearize", false]], "linspace() (in module jax.numpy)": [[815, "jax.numpy.linspace", false]], "literal (class in jax.extend.core)": [[255, "jax.extend.core.Literal", false]], "live_arrays() (in module jax)": [[494, "jax.live_arrays", false]], "load() (in module jax.experimental.pallas)": [[155, "jax.experimental.pallas.load", false]], "load() (in module jax.numpy)": [[816, "jax.numpy.load", false]], "lobpcg_standard() (in module jax.experimental.sparse.linalg)": [[235, "jax.experimental.sparse.linalg.lobpcg_standard", false]], "local_device_count() (in module jax)": [[495, "jax.local_device_count", false]], "local_devices() (in module jax)": [[496, "jax.local_devices", false]], "log() (in module jax.lax)": [[411, "jax.lax.log", false]], "log() (in module jax.numpy)": [[817, "jax.numpy.log", false]], "log10() (in module jax.numpy)": [[818, "jax.numpy.log10", false]], "log1p() (in module jax.lax)": [[412, "jax.lax.log1p", false]], "log1p() (in module jax.numpy)": [[819, "jax.numpy.log1p", false]], "log2() (in module jax.numpy)": [[820, "jax.numpy.log2", false]], "log_compiles (in module jax)": [[497, "jax.log_compiles", false]], "log_ndtr (in module jax.scipy.special)": [[1135, "jax.scipy.special.log_ndtr", false]], "log_sigmoid() (in module jax.nn)": [[532, "jax.nn.log_sigmoid", false]], "log_softmax() (in module jax.nn)": [[533, "jax.nn.log_softmax", false]], "log_softmax() (in module jax.scipy.special)": [[1136, "jax.scipy.special.log_softmax", false]], "logaddexp (in module jax.numpy)": [[821, "jax.numpy.logaddexp", false]], "logaddexp2 (in module jax.numpy)": [[822, "jax.numpy.logaddexp2", false]], "logcdf() (in module jax.scipy.stats.beta)": [[1158, "jax.scipy.stats.beta.logcdf", false]], "logcdf() (in module jax.scipy.stats.cauchy)": [[1169, "jax.scipy.stats.cauchy.logcdf", false]], "logcdf() (in module jax.scipy.stats.chi2)": [[1176, "jax.scipy.stats.chi2.logcdf", false]], "logcdf() (in module jax.scipy.stats.expon)": [[1184, "jax.scipy.stats.expon.logcdf", false]], "logcdf() (in module jax.scipy.stats.gamma)": [[1191, "jax.scipy.stats.gamma.logcdf", false]], "logcdf() (in module jax.scipy.stats.norm)": [[1227, "jax.scipy.stats.norm.logcdf", false]], "logcdf() (in module jax.scipy.stats.truncnorm)": [[1243, "jax.scipy.stats.truncnorm.logcdf", false]], "loggamma() (in module jax.random)": [[1036, "jax.random.loggamma", false]], "logical_and (in module jax.numpy)": [[823, "jax.numpy.logical_and", false]], "logical_not() (in module jax.numpy)": [[824, "jax.numpy.logical_not", false]], "logical_or (in module jax.numpy)": [[825, "jax.numpy.logical_or", false]], "logical_xor (in module jax.numpy)": [[826, "jax.numpy.logical_xor", false]], "logistic() (in module jax.lax)": [[413, "jax.lax.logistic", false]], "logistic() (in module jax.random)": [[1037, "jax.random.logistic", false]], "logit (in module jax.scipy.special)": [[1137, "jax.scipy.special.logit", false]], "lognormal() (in module jax.random)": [[1038, "jax.random.lognormal", false]], "logpdf() (in module jax.scipy.stats.beta)": [[1159, "jax.scipy.stats.beta.logpdf", false]], "logpdf() (in module jax.scipy.stats.cauchy)": [[1170, "jax.scipy.stats.cauchy.logpdf", false]], "logpdf() (in module jax.scipy.stats.chi2)": [[1177, "jax.scipy.stats.chi2.logpdf", false]], "logpdf() (in module jax.scipy.stats.dirichlet)": [[1181, "jax.scipy.stats.dirichlet.logpdf", false]], "logpdf() (in module jax.scipy.stats.expon)": [[1185, "jax.scipy.stats.expon.logpdf", false]], "logpdf() (in module jax.scipy.stats.gamma)": [[1192, "jax.scipy.stats.gamma.logpdf", false]], "logpdf() (in module jax.scipy.stats.gennorm)": [[1205, "jax.scipy.stats.gennorm.logpdf", false]], "logpdf() (in module jax.scipy.stats.laplace)": [[1210, "jax.scipy.stats.laplace.logpdf", false]], "logpdf() (in module jax.scipy.stats.logistic)": [[1214, "jax.scipy.stats.logistic.logpdf", false]], "logpdf() (in module jax.scipy.stats.multivariate_normal)": [[1221, "jax.scipy.stats.multivariate_normal.logpdf", false]], "logpdf() (in module jax.scipy.stats.norm)": [[1228, "jax.scipy.stats.norm.logpdf", false]], "logpdf() (in module jax.scipy.stats.pareto)": [[1233, "jax.scipy.stats.pareto.logpdf", false]], "logpdf() (in module jax.scipy.stats.t)": [[1240, "jax.scipy.stats.t.logpdf", false]], "logpdf() (in module jax.scipy.stats.truncnorm)": [[1244, "jax.scipy.stats.truncnorm.logpdf", false]], "logpdf() (in module jax.scipy.stats.uniform)": [[1249, "jax.scipy.stats.uniform.logpdf", false]], "logpdf() (in module jax.scipy.stats.vonmises)": [[1252, "jax.scipy.stats.vonmises.logpdf", false]], "logpdf() (in module jax.scipy.stats.wrapcauchy)": [[1254, "jax.scipy.stats.wrapcauchy.logpdf", false]], "logpdf() (jax.scipy.stats.gaussian_kde method)": [[1201, "jax.scipy.stats.gaussian_kde.logpdf", false]], "logpmf() (in module jax.scipy.stats.bernoulli)": [[1154, "jax.scipy.stats.bernoulli.logpmf", false]], "logpmf() (in module jax.scipy.stats.betabinom)": [[1163, "jax.scipy.stats.betabinom.logpmf", false]], "logpmf() (in module jax.scipy.stats.binom)": [[1165, "jax.scipy.stats.binom.logpmf", false]], "logpmf() (in module jax.scipy.stats.geom)": [[1207, "jax.scipy.stats.geom.logpmf", false]], "logpmf() (in module jax.scipy.stats.multinomial)": [[1219, "jax.scipy.stats.multinomial.logpmf", false]], "logpmf() (in module jax.scipy.stats.nbinom)": [[1223, "jax.scipy.stats.nbinom.logpmf", false]], "logpmf() (in module jax.scipy.stats.poisson)": [[1236, "jax.scipy.stats.poisson.logpmf", false]], "logsf() (in module jax.scipy.stats.beta)": [[1160, "jax.scipy.stats.beta.logsf", false]], "logsf() (in module jax.scipy.stats.cauchy)": [[1171, "jax.scipy.stats.cauchy.logsf", false]], "logsf() (in module jax.scipy.stats.chi2)": [[1178, "jax.scipy.stats.chi2.logsf", false]], "logsf() (in module jax.scipy.stats.expon)": [[1186, "jax.scipy.stats.expon.logsf", false]], "logsf() (in module jax.scipy.stats.gamma)": [[1193, "jax.scipy.stats.gamma.logsf", false]], "logsf() (in module jax.scipy.stats.norm)": [[1229, "jax.scipy.stats.norm.logsf", false]], "logsf() (in module jax.scipy.stats.truncnorm)": [[1245, "jax.scipy.stats.truncnorm.logsf", false]], "logspace() (in module jax.numpy)": [[827, "jax.numpy.logspace", false]], "logsumexp() (in module jax.nn)": [[534, "jax.nn.logsumexp", false]], "logsumexp() (in module jax.scipy.special)": [[1138, "jax.scipy.special.logsumexp", false]], "lower() (jax.stages.traced method)": [[1405, "jax.stages.Traced.lower", false]], "lower() (jax.stages.wrapped method)": [[1405, "jax.stages.Wrapped.lower", false]], "lowered (class in jax.stages)": [[1405, "jax.stages.Lowered", false]], "lpmn() (in module jax.scipy.special)": [[1139, "jax.scipy.special.lpmn", false]], "lpmn_values() (in module jax.scipy.special)": [[1140, "jax.scipy.special.lpmn_values", false]], "lstsq() (in module jax.numpy.linalg)": [[794, "jax.numpy.linalg.lstsq", false]], "lt() (in module jax.lax)": [[414, "jax.lax.lt", false]], "lu() (in module jax.lax.linalg)": [[401, "jax.lax.linalg.lu", false]], "lu() (in module jax.scipy.linalg)": [[1078, "jax.scipy.linalg.lu", false]], "lu_factor() (in module jax.scipy.linalg)": [[1079, "jax.scipy.linalg.lu_factor", false]], "lu_pivots_to_permutation() (in module jax.lax.linalg)": [[402, "jax.lax.linalg.lu_pivots_to_permutation", false]], "lu_solve() (in module jax.scipy.linalg)": [[1080, "jax.scipy.linalg.lu_solve", false]], "machep (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.machep", false]], "make_array_from_callback() (in module jax)": [[498, "jax.make_array_from_callback", false]], "make_array_from_process_local_data() (in module jax)": [[499, "jax.make_array_from_process_local_data", false]], "make_array_from_single_device_arrays() (in module jax)": [[500, "jax.make_array_from_single_device_arrays", false]], "make_jaxpr() (in module jax)": [[501, "jax.make_jaxpr", false]], "make_mesh() (in module jax)": [[502, "jax.make_mesh", false]], "make_schedule() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.make_schedule", false]], "map() (in module jax.lax)": [[415, "jax.lax.map", false]], "map() (in module jax.tree)": [[1267, "jax.tree.map", false]], "map_coordinates() (in module jax.scipy.ndimage)": [[1091, "jax.scipy.ndimage.map_coordinates", false]], "map_with_path() (in module jax.tree)": [[1268, "jax.tree.map_with_path", false]], "mask_indices() (in module jax.numpy)": [[828, "jax.numpy.mask_indices", false]], "matmul() (in module jax.numpy)": [[829, "jax.numpy.matmul", false]], "matmul() (in module jax.numpy.linalg)": [[795, "jax.numpy.linalg.matmul", false]], "matrix_norm() (in module jax.numpy.linalg)": [[796, "jax.numpy.linalg.matrix_norm", false]], "matrix_power() (in module jax.numpy.linalg)": [[797, "jax.numpy.linalg.matrix_power", false]], "matrix_rank() (in module jax.numpy.linalg)": [[798, "jax.numpy.linalg.matrix_rank", false]], "matrix_transpose() (in module jax.numpy)": [[830, "jax.numpy.matrix_transpose", false]], "matrix_transpose() (in module jax.numpy.linalg)": [[799, "jax.numpy.linalg.matrix_transpose", false]], "matvec() (in module jax.numpy)": [[831, "jax.numpy.matvec", false]], "max (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.max", false]], "max() (in module jax.lax)": [[416, "jax.lax.max", false]], "max() (in module jax.numpy)": [[832, "jax.numpy.max", false]], "max() (jax.array method)": [[34, "jax.Array.max", false]], "max_concurrent_steps (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[160, "jax.experimental.pallas.mosaic_gpu.CompilerParams.max_concurrent_steps", false]], "max_contiguous() (in module jax.experimental.pallas)": [[156, "jax.experimental.pallas.max_contiguous", false]], "maxexp (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.maxexp", false]], "maximum (in module jax.numpy)": [[833, "jax.numpy.maximum", false]], "maximum_supported_calling_convention_version (in module jax.export)": [[246, "jax.export.maximum_supported_calling_convention_version", false]], "maxpool() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.MaxPool", false]], "maxwell() (in module jax.random)": [[1039, "jax.random.maxwell", false]], "mean() (in module jax.numpy)": [[834, "jax.numpy.mean", false]], "mean() (jax.array method)": [[35, "jax.Array.mean", false]], "median() (in module jax.numpy)": [[835, "jax.numpy.median", false]], "memory_analysis() (jax.stages.compiled method)": [[1405, "jax.stages.Compiled.memory_analysis", false]], "memory_kind (jax.sharding.namedsharding property)": [[1404, "jax.sharding.NamedSharding.memory_kind", false]], "memory_kind (jax.sharding.pmapsharding property)": [[1404, "jax.sharding.PmapSharding.memory_kind", false]], "memory_kind (jax.sharding.sharding property)": [[1404, "jax.sharding.Sharding.memory_kind", false]], "memory_kind (jax.sharding.singledevicesharding property)": [[1404, "jax.sharding.SingleDeviceSharding.memory_kind", false]], "memoryref (class in jax.experimental.pallas)": [[142, "jax.experimental.pallas.MemoryRef", false]], "memoryspace (class in jax.experimental.pallas.mosaic_gpu)": [[163, "jax.experimental.pallas.mosaic_gpu.MemorySpace", false]], "merge_linear_aux() (in module jax.extend.linear_util)": [[269, "jax.extend.linear_util.merge_linear_aux", false]], "mesh (class in jax.sharding)": [[1404, "jax.sharding.Mesh", false]], "mesh (jax.sharding.namedsharding property)": [[1404, "jax.sharding.NamedSharding.mesh", false]], "meshgrid() (in module jax.numpy)": [[836, "jax.numpy.meshgrid", false]], "mgrid (in module jax.numpy)": [[837, "jax.numpy.mgrid", false]], "min (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.min", false]], "min() (in module jax.lax)": [[417, "jax.lax.min", false]], "min() (in module jax.numpy)": [[838, "jax.numpy.min", false]], "min() (jax.array method)": [[36, "jax.Array.min", false]], "minexp (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.minexp", false]], "minimize() (in module jax.scipy.optimize)": [[1093, "jax.scipy.optimize.minimize", false]], "minimum (in module jax.numpy)": [[839, "jax.numpy.minimum", false]], "minimum_supported_calling_convention_version (in module jax.export)": [[247, "jax.export.minimum_supported_calling_convention_version", false]], "mish() (in module jax.nn)": [[535, "jax.nn.mish", false]], "mlir_module() (jax.export.exported method)": [[1386, "jax.export.Exported.mlir_module", false]], "mlir_module_serialized (jax.export.exported attribute)": [[1386, "jax.export.Exported.mlir_module_serialized", false]], "mod() (in module jax.numpy)": [[840, "jax.numpy.mod", false]], "mode() (in module jax.scipy.stats)": [[1218, "jax.scipy.stats.mode", false]], "modf() (in module jax.numpy)": [[841, "jax.numpy.modf", false]], "module": [[261, "module-jax.extend.core.primitives", false], [273, "module-jax.extend.mlir.dialects", false], [274, "module-jax.extend.mlir.ir", false], [275, "module-jax.extend.mlir.passmanager", false], [1361, "module-jax.core", false], [1362, "module-jax.debug", false], [1363, "module-jax.distributed", false], [1364, "module-jax.dlpack", false], [1365, "module-jax.dtypes", false], [1366, "module-jax.example_libraries", false], [1367, "module-jax.example_libraries.optimizers", false], [1368, "module-jax.example_libraries.stax", false], [1370, "module-jax.experimental.checkify", false], [1371, "module-jax.experimental.compilation_cache.compilation_cache", false], [1372, "module-jax.experimental.custom_dce", false], [1373, "module-jax.experimental.custom_partitioning", false], [1374, "module-jax.experimental.jet", false], [1375, "module-jax.experimental.key_reuse", false], [1376, "module-jax.experimental.mesh_utils", false], [1377, "module-jax.experimental.multihost_utils", false], [1378, "module-jax.experimental.pallas", false], [1379, "module-jax.experimental.pallas.mosaic_gpu", false], [1380, "module-jax.experimental.pallas.tpu", false], [1381, "module-jax.experimental.pallas.triton", false], [1382, "module-jax.experimental.pjit", false], [1383, "module-jax.experimental.serialize_executable", false], [1384, "module-jax.experimental.shard_map", false], [1385, "module-jax.experimental.sparse", false], [1385, "module-jax.experimental.sparse.linalg", false], [1386, "module-jax.export", false], [1387, "module-jax.extend", false], [1388, "module-jax.extend.core", false], [1389, "module-jax.extend.linear_util", false], [1390, "module-jax.extend.mlir", false], [1391, "module-jax.extend.random", false], [1392, "module-jax.extend.ffi", false], [1392, "module-jax.ffi", false], [1393, "module-jax.flatten_util", false], [1394, "module-jax.image", false], [1395, "module-jax.lax", false], [1395, "module-jax.lax.linalg", false], [1397, "module-jax.nn", false], [1398, "module-jax.nn.initializers", false], [1399, "module-jax.numpy", false], [1399, "module-jax.numpy.fft", false], [1399, "module-jax.numpy.linalg", false], [1400, "module-jax.ops", false], [1401, "module-jax.profiler", false], [1402, "module-jax.random", false], [1403, "module-jax.scipy.cluster.vq", false], [1403, "module-jax.scipy.fft", false], [1403, "module-jax.scipy.integrate", false], [1403, "module-jax.scipy.interpolate", false], [1403, "module-jax.scipy.linalg", false], [1403, "module-jax.scipy.ndimage", false], [1403, "module-jax.scipy.optimize", false], [1403, "module-jax.scipy.signal", false], [1403, "module-jax.scipy.sparse.linalg", false], [1403, "module-jax.scipy.spatial.transform", false], [1403, "module-jax.scipy.special", false], [1403, "module-jax.scipy.stats", false], [1403, "module-jax.scipy.stats.bernoulli", false], [1403, "module-jax.scipy.stats.beta", false], [1403, "module-jax.scipy.stats.betabinom", false], [1403, "module-jax.scipy.stats.binom", false], [1403, "module-jax.scipy.stats.cauchy", false], [1403, "module-jax.scipy.stats.chi2", false], [1403, "module-jax.scipy.stats.dirichlet", false], [1403, "module-jax.scipy.stats.expon", false], [1403, "module-jax.scipy.stats.gamma", false], [1403, "module-jax.scipy.stats.gennorm", false], [1403, "module-jax.scipy.stats.geom", false], [1403, "module-jax.scipy.stats.laplace", false], [1403, "module-jax.scipy.stats.logistic", false], [1403, "module-jax.scipy.stats.multinomial", false], [1403, "module-jax.scipy.stats.multivariate_normal", false], [1403, "module-jax.scipy.stats.nbinom", false], [1403, "module-jax.scipy.stats.norm", false], [1403, "module-jax.scipy.stats.pareto", false], [1403, "module-jax.scipy.stats.poisson", false], [1403, "module-jax.scipy.stats.t", false], [1403, "module-jax.scipy.stats.truncnorm", false], [1403, "module-jax.scipy.stats.uniform", false], [1403, "module-jax.scipy.stats.vonmises", false], [1403, "module-jax.scipy.stats.wrapcauchy", false], [1404, "module-jax.sharding", false], [1405, "module-jax.stages", false], [1406, "module-jax.test_util", false], [1407, "module-jax.tree", false], [1408, "module-jax.tree_util", false], [1409, "module-jax.typing", false]], "module_kept_var_idx (jax.export.exported attribute)": [[1386, "jax.export.Exported.module_kept_var_idx", false]], "momentum() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.momentum", false]], "moveaxis() (in module jax.numpy)": [[842, "jax.numpy.moveaxis", false]], "mt (jax.array property)": [[33, "jax.Array.mT", false]], "mul() (in module jax.lax)": [[418, "jax.lax.mul", false]], "multi_dot() (in module jax.numpy.linalg)": [[800, "jax.numpy.linalg.multi_dot", false]], "multigammaln() (in module jax.scipy.special)": [[1141, "jax.scipy.special.multigammaln", false]], "multinomial() (in module jax.random)": [[1040, "jax.random.multinomial", false]], "multiple_of() (in module jax.experimental.pallas)": [[180, "jax.experimental.pallas.multiple_of", false]], "multiply (in module jax.numpy)": [[843, "jax.numpy.multiply", false]], "multivariate_normal() (in module jax.random)": [[1041, "jax.random.multivariate_normal", false]], "named_call() (in module jax)": [[503, "jax.named_call", false]], "named_scope() (in module jax)": [[504, "jax.named_scope", false]], "namedsharding (class in jax.sharding)": [[1404, "jax.sharding.NamedSharding", false]], "nan_checks (in module jax.experimental.checkify)": [[125, "jax.experimental.checkify.nan_checks", false]], "nan_to_num() (in module jax.numpy)": [[844, "jax.numpy.nan_to_num", false]], "nanargmax() (in module jax.numpy)": [[845, "jax.numpy.nanargmax", false]], "nanargmin() (in module jax.numpy)": [[846, "jax.numpy.nanargmin", false]], "nancumprod() (in module jax.numpy)": [[847, "jax.numpy.nancumprod", false]], "nancumsum() (in module jax.numpy)": [[848, "jax.numpy.nancumsum", false]], "nanmax() (in module jax.numpy)": [[849, "jax.numpy.nanmax", false]], "nanmean() (in module jax.numpy)": [[850, "jax.numpy.nanmean", false]], "nanmedian() (in module jax.numpy)": [[851, "jax.numpy.nanmedian", false]], "nanmin() (in module jax.numpy)": [[852, "jax.numpy.nanmin", false]], "nanpercentile() (in module jax.numpy)": [[853, "jax.numpy.nanpercentile", false]], "nanprod() (in module jax.numpy)": [[854, "jax.numpy.nanprod", false]], "nanquantile() (in module jax.numpy)": [[855, "jax.numpy.nanquantile", false]], "nanstd() (in module jax.numpy)": [[856, "jax.numpy.nanstd", false]], "nansum() (in module jax.numpy)": [[857, "jax.numpy.nansum", false]], "nanvar() (in module jax.numpy)": [[858, "jax.numpy.nanvar", false]], "nbytes (jax.array property)": [[37, "jax.Array.nbytes", false]], "ndarray (in module jax.numpy)": [[859, "jax.numpy.ndarray", false]], "ndim (jax.array property)": [[38, "jax.Array.ndim", false]], "ndim() (in module jax.numpy)": [[861, "jax.numpy.ndim", false]], "ndtr() (in module jax.scipy.special)": [[1142, "jax.scipy.special.ndtr", false]], "ndtri() (in module jax.scipy.special)": [[1143, "jax.scipy.special.ndtri", false]], "ne() (in module jax.lax)": [[419, "jax.lax.ne", false]], "neg() (in module jax.lax)": [[420, "jax.lax.neg", false]], "negative (in module jax.numpy)": [[862, "jax.numpy.negative", false]], "negep (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.negep", false]], "nesterov() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.nesterov", false]], "nexp (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.nexp", false]], "nextafter() (in module jax.lax)": [[421, "jax.lax.nextafter", false]], "nextafter() (in module jax.numpy)": [[863, "jax.numpy.nextafter", false]], "nmant (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.nmant", false]], "no_tracing (in module jax)": [[552, "jax.no_tracing", false]], "nonconcretebooleanindexerror (class in jax.errors)": [[1342, "jax.errors.NonConcreteBooleanIndexError", false]], "nonzero() (in module jax.numpy)": [[864, "jax.numpy.nonzero", false]], "nonzero() (jax.array method)": [[39, "jax.Array.nonzero", false]], "norm() (in module jax.numpy.linalg)": [[801, "jax.numpy.linalg.norm", false]], "normal() (in module jax.nn.initializers)": [[524, "jax.nn.initializers.normal", false]], "normal() (in module jax.random)": [[1042, "jax.random.normal", false]], "not_equal() (in module jax.numpy)": [[865, "jax.numpy.not_equal", false]], "nr_devices (jax.export.exported attribute)": [[1386, "jax.export.Exported.nr_devices", false]], "num_arrivals (jax.experimental.pallas.mosaic_gpu.barrier attribute)": [[158, "jax.experimental.pallas.mosaic_gpu.Barrier.num_arrivals", false]], "num_barriers (jax.experimental.pallas.mosaic_gpu.barrier attribute)": [[158, "jax.experimental.pallas.mosaic_gpu.Barrier.num_barriers", false]], "num_devices (jax.sharding.namedsharding property)": [[1404, "jax.sharding.NamedSharding.num_devices", false]], "num_devices (jax.sharding.pmapsharding property)": [[1404, "jax.sharding.PmapSharding.num_devices", false]], "num_devices (jax.sharding.sharding property)": [[1404, "jax.sharding.Sharding.num_devices", false]], "num_devices (jax.sharding.singledevicesharding property)": [[1404, "jax.sharding.SingleDeviceSharding.num_devices", false]], "num_programs() (in module jax.experimental.pallas)": [[181, "jax.experimental.pallas.num_programs", false]], "num_stages (jax.experimental.pallas.triton.compilerparams attribute)": [[187, "jax.experimental.pallas.triton.CompilerParams.num_stages", false]], "num_warps (jax.experimental.pallas.triton.compilerparams attribute)": [[187, "jax.experimental.pallas.triton.CompilerParams.num_warps", false]], "number (class in jax.numpy)": [[866, "jax.numpy.number", false]], "numpy_rank_promotion (in module jax)": [[993, "jax.numpy_rank_promotion", false]], "object_ (class in jax.numpy)": [[867, "jax.numpy.object_", false]], "ogrid (in module jax.numpy)": [[868, "jax.numpy.ogrid", false]], "one_hot() (in module jax.nn)": [[536, "jax.nn.one_hot", false]], "ones() (in module jax.nn.initializers)": [[525, "jax.nn.initializers.ones", false]], "ones() (in module jax.numpy)": [[869, "jax.numpy.ones", false]], "ones_like() (in module jax.numpy)": [[870, "jax.numpy.ones_like", false]], "optimization_barrier() (in module jax.lax)": [[422, "jax.lax.optimization_barrier", false]], "optimizer (class in jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.Optimizer", false]], "optimizer() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.optimizer", false]], "optimizeresults (class in jax.scipy.optimize)": [[1092, "jax.scipy.optimize.OptimizeResults", false]], "optimizerstate (class in jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.OptimizerState", false]], "ordered_effects (jax.export.exported attribute)": [[1386, "jax.export.Exported.ordered_effects", false]], "orthogonal() (in module jax.nn.initializers)": [[526, "jax.nn.initializers.orthogonal", false]], "orthogonal() (in module jax.random)": [[1043, "jax.random.orthogonal", false]], "out_avals (jax.export.exported attribute)": [[1386, "jax.export.Exported.out_avals", false]], "out_shardings_hlo (jax.export.exported attribute)": [[1386, "jax.export.Exported.out_shardings_hlo", false]], "out_shardings_jax() (jax.export.exported method)": [[1386, "jax.export.Exported.out_shardings_jax", false]], "out_tree (jax.export.exported attribute)": [[1386, "jax.export.Exported.out_tree", false]], "outer() (in module jax.numpy)": [[871, "jax.numpy.outer", false]], "outer() (in module jax.numpy.linalg)": [[802, "jax.numpy.linalg.outer", false]], "pack_optimizer_state() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.pack_optimizer_state", false]], "packbits() (in module jax.numpy)": [[872, "jax.numpy.packbits", false]], "packed_state (jax.example_libraries.optimizers.optimizerstate attribute)": [[1367, "jax.example_libraries.optimizers.OptimizerState.packed_state", false]], "pad() (in module jax.lax)": [[423, "jax.lax.pad", false]], "pad() (in module jax.numpy)": [[873, "jax.numpy.pad", false]], "pallas_call() (in module jax.experimental.pallas)": [[182, "jax.experimental.pallas.pallas_call", false]], "parallel() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.parallel", false]], "params_fn (jax.example_libraries.optimizers.optimizer attribute)": [[1367, "jax.example_libraries.optimizers.Optimizer.params_fn", false]], "pareto() (in module jax.random)": [[1044, "jax.random.pareto", false]], "partial (class in jax.tree_util)": [[1275, "jax.tree_util.Partial", false]], "partition() (in module jax.numpy)": [[874, "jax.numpy.partition", false]], "partitionspec (class in jax.sharding)": [[1404, "jax.sharding.PartitionSpec", false]], "pascal() (in module jax.scipy.linalg)": [[1081, "jax.scipy.linalg.pascal", false]], "pdf() (in module jax.scipy.stats.beta)": [[1161, "jax.scipy.stats.beta.pdf", false]], "pdf() (in module jax.scipy.stats.cauchy)": [[1172, "jax.scipy.stats.cauchy.pdf", false]], "pdf() (in module jax.scipy.stats.chi2)": [[1179, "jax.scipy.stats.chi2.pdf", false]], "pdf() (in module jax.scipy.stats.dirichlet)": [[1182, "jax.scipy.stats.dirichlet.pdf", false]], "pdf() (in module jax.scipy.stats.expon)": [[1187, "jax.scipy.stats.expon.pdf", false]], "pdf() (in module jax.scipy.stats.gamma)": [[1194, "jax.scipy.stats.gamma.pdf", false]], "pdf() (in module jax.scipy.stats.gennorm)": [[1206, "jax.scipy.stats.gennorm.pdf", false]], "pdf() (in module jax.scipy.stats.laplace)": [[1211, "jax.scipy.stats.laplace.pdf", false]], "pdf() (in module jax.scipy.stats.logistic)": [[1215, "jax.scipy.stats.logistic.pdf", false]], "pdf() (in module jax.scipy.stats.multivariate_normal)": [[1222, "jax.scipy.stats.multivariate_normal.pdf", false]], "pdf() (in module jax.scipy.stats.norm)": [[1230, "jax.scipy.stats.norm.pdf", false]], "pdf() (in module jax.scipy.stats.pareto)": [[1234, "jax.scipy.stats.pareto.pdf", false]], "pdf() (in module jax.scipy.stats.t)": [[1241, "jax.scipy.stats.t.pdf", false]], "pdf() (in module jax.scipy.stats.truncnorm)": [[1246, "jax.scipy.stats.truncnorm.pdf", false]], "pdf() (in module jax.scipy.stats.uniform)": [[1250, "jax.scipy.stats.uniform.pdf", false]], "pdf() (in module jax.scipy.stats.vonmises)": [[1253, "jax.scipy.stats.vonmises.pdf", false]], "pdf() (in module jax.scipy.stats.wrapcauchy)": [[1255, "jax.scipy.stats.wrapcauchy.pdf", false]], "pdf() (jax.scipy.stats.gaussian_kde method)": [[1202, "jax.scipy.stats.gaussian_kde.pdf", false]], "percentile() (in module jax.numpy)": [[875, "jax.numpy.percentile", false]], "permutation() (in module jax.random)": [[1045, "jax.random.permutation", false]], "permute_dims() (in module jax.numpy)": [[876, "jax.numpy.permute_dims", false]], "piecewise() (in module jax.numpy)": [[877, "jax.numpy.piecewise", false]], "piecewise_constant() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.piecewise_constant", false]], "pinv() (in module jax.numpy.linalg)": [[803, "jax.numpy.linalg.pinv", false]], "pjit() (in module jax.experimental.pjit)": [[1382, "jax.experimental.pjit.pjit", false]], "place() (in module jax.numpy)": [[878, "jax.numpy.place", false]], "platform() (jax.export.disabledsafetycheck class method)": [[1386, "jax.export.DisabledSafetyCheck.platform", false]], "platform_dependent() (in module jax.lax)": [[424, "jax.lax.platform_dependent", false]], "platforms (jax.export.exported attribute)": [[1386, "jax.export.Exported.platforms", false]], "pmap() (in module jax)": [[998, "jax.pmap", false]], "pmapsharding (class in jax.sharding)": [[1404, "jax.sharding.PmapSharding", false]], "pmax() (in module jax.lax)": [[425, "jax.lax.pmax", false]], "pmean() (in module jax.lax)": [[426, "jax.lax.pmean", false]], "pmf() (in module jax.scipy.stats.bernoulli)": [[1155, "jax.scipy.stats.bernoulli.pmf", false]], "pmf() (in module jax.scipy.stats.betabinom)": [[1164, "jax.scipy.stats.betabinom.pmf", false]], "pmf() (in module jax.scipy.stats.binom)": [[1166, "jax.scipy.stats.binom.pmf", false]], "pmf() (in module jax.scipy.stats.geom)": [[1208, "jax.scipy.stats.geom.pmf", false]], "pmf() (in module jax.scipy.stats.multinomial)": [[1220, "jax.scipy.stats.multinomial.pmf", false]], "pmf() (in module jax.scipy.stats.nbinom)": [[1224, "jax.scipy.stats.nbinom.pmf", false]], "pmf() (in module jax.scipy.stats.poisson)": [[1237, "jax.scipy.stats.poisson.pmf", false]], "pmin() (in module jax.lax)": [[427, "jax.lax.pmin", false]], "poch (in module jax.scipy.special)": [[1144, "jax.scipy.special.poch", false]], "poisson() (in module jax.random)": [[1046, "jax.random.poisson", false]], "polar() (in module jax.scipy.linalg)": [[1082, "jax.scipy.linalg.polar", false]], "poly() (in module jax.numpy)": [[879, "jax.numpy.poly", false]], "polyadd() (in module jax.numpy)": [[880, "jax.numpy.polyadd", false]], "polyder() (in module jax.numpy)": [[881, "jax.numpy.polyder", false]], "polydiv() (in module jax.numpy)": [[882, "jax.numpy.polydiv", false]], "polyfit() (in module jax.numpy)": [[883, "jax.numpy.polyfit", false]], "polygamma() (in module jax.lax)": [[428, "jax.lax.polygamma", false]], "polygamma() (in module jax.scipy.special)": [[1145, "jax.scipy.special.polygamma", false]], "polyint() (in module jax.numpy)": [[884, "jax.numpy.polyint", false]], "polymul() (in module jax.numpy)": [[885, "jax.numpy.polymul", false]], "polynomial_decay() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.polynomial_decay", false]], "polysub() (in module jax.numpy)": [[886, "jax.numpy.polysub", false]], "polyval() (in module jax.numpy)": [[887, "jax.numpy.polyval", false]], "population_count() (in module jax.lax)": [[429, "jax.lax.population_count", false]], "positive() (in module jax.numpy)": [[888, "jax.numpy.positive", false]], "pow() (in module jax.lax)": [[430, "jax.lax.pow", false]], "pow() (in module jax.numpy)": [[889, "jax.numpy.pow", false]], "power() (in module jax.numpy)": [[890, "jax.numpy.power", false]], "ppermute() (in module jax.lax)": [[431, "jax.lax.ppermute", false]], "ppf() (in module jax.scipy.stats.bernoulli)": [[1156, "jax.scipy.stats.bernoulli.ppf", false]], "ppf() (in module jax.scipy.stats.cauchy)": [[1173, "jax.scipy.stats.cauchy.ppf", false]], "ppf() (in module jax.scipy.stats.expon)": [[1188, "jax.scipy.stats.expon.ppf", false]], "ppf() (in module jax.scipy.stats.logistic)": [[1216, "jax.scipy.stats.logistic.ppf", false]], "ppf() (in module jax.scipy.stats.norm)": [[1231, "jax.scipy.stats.norm.ppf", false]], "ppf() (in module jax.scipy.stats.uniform)": [[1251, "jax.scipy.stats.uniform.ppf", false]], "precision (class in jax.lax)": [[1395, "jax.lax.Precision", false]], "precision (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.precision", false]], "precisionlike (in module jax.lax)": [[1395, "jax.lax.PrecisionLike", false]], "primitive": [[1351, "term-primitive", true]], "primitive (class in jax.extend.core)": [[256, "jax.extend.core.Primitive", false]], "print() (in module jax.debug)": [[85, "jax.debug.print", false]], "print_environment_info() (in module jax)": [[999, "jax.print_environment_info", false]], "printoptions() (in module jax.numpy)": [[891, "jax.numpy.printoptions", false]], "prng_key (class in jax.dtypes)": [[107, "jax.dtypes.prng_key", false]], "prngkey() (in module jax.random)": [[1013, "jax.random.PRNGKey", false]], "process_allgather() (in module jax.experimental.multihost_utils)": [[138, "jax.experimental.multihost_utils.process_allgather", false]], "process_count() (in module jax)": [[1000, "jax.process_count", false]], "process_index() (in module jax)": [[1001, "jax.process_index", false]], "process_indices() (in module jax)": [[1002, "jax.process_indices", false]], "prod() (in module jax.numpy)": [[892, "jax.numpy.prod", false]], "prod() (jax.array method)": [[40, "jax.Array.prod", false]], "profile_dir (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[160, "jax.experimental.pallas.mosaic_gpu.CompilerParams.profile_dir", false]], "profile_space (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[160, "jax.experimental.pallas.mosaic_gpu.CompilerParams.profile_space", false]], "program_id() (in module jax.experimental.pallas)": [[183, "jax.experimental.pallas.program_id", false]], "promote_types() (in module jax.numpy)": [[893, "jax.numpy.promote_types", false]], "pshuffle() (in module jax.lax)": [[432, "jax.lax.pshuffle", false]], "psum() (in module jax.lax)": [[433, "jax.lax.psum", false]], "psum_scatter() (in module jax.lax)": [[434, "jax.lax.psum_scatter", false]], "pswapaxes() (in module jax.lax)": [[435, "jax.lax.pswapaxes", false]], "ptp() (in module jax.numpy)": [[894, "jax.numpy.ptp", false]], "ptp() (jax.array method)": [[41, "jax.Array.ptp", false]], "pure function": [[1351, "term-pure-function", true]], "pure_callback() (in module jax)": [[1012, "jax.pure_callback", false]], "put() (in module jax.numpy)": [[895, "jax.numpy.put", false]], "put_along_axis() (in module jax.numpy)": [[896, "jax.numpy.put_along_axis", false]], "pycapsule() (in module jax.extend.ffi)": [[264, "jax.extend.ffi.pycapsule", false]], "pycapsule() (in module jax.ffi)": [[285, "jax.ffi.pycapsule", false]], "pytree": [[1351, "term-pytree", true]], "qdwh() (in module jax.lax.linalg)": [[403, "jax.lax.linalg.qdwh", false]], "qr() (in module jax.lax.linalg)": [[404, "jax.lax.linalg.qr", false]], "qr() (in module jax.numpy.linalg)": [[804, "jax.numpy.linalg.qr", false]], "qr() (in module jax.scipy.linalg)": [[1083, "jax.scipy.linalg.qr", false]], "quantile() (in module jax.numpy)": [[897, "jax.numpy.quantile", false]], "r_ (in module jax.numpy)": [[898, "jax.numpy.r_", false]], "rad2deg() (in module jax.numpy)": [[899, "jax.numpy.rad2deg", false]], "rademacher() (in module jax.random)": [[1047, "jax.random.rademacher", false]], "radians() (in module jax.numpy)": [[900, "jax.numpy.radians", false]], "randint() (in module jax.random)": [[1048, "jax.random.randint", false]], "random_bcoo() (in module jax.experimental.sparse)": [[237, "jax.experimental.sparse.random_bcoo", false]], "random_gamma_grad() (in module jax.lax)": [[436, "jax.lax.random_gamma_grad", false]], "randomalgorithm (class in jax.lax)": [[1395, "jax.lax.RandomAlgorithm", false]], "rankdata() (in module jax.scipy.stats)": [[1238, "jax.scipy.stats.rankdata", false]], "ravel() (in module jax.numpy)": [[901, "jax.numpy.ravel", false]], "ravel() (jax.array method)": [[42, "jax.Array.ravel", false]], "ravel_multi_index() (in module jax.numpy)": [[902, "jax.numpy.ravel_multi_index", false]], "ravel_pytree() (in module jax.flatten_util)": [[288, "jax.flatten_util.ravel_pytree", false]], "rayleigh() (in module jax.random)": [[1049, "jax.random.rayleigh", false]], "rbg_prng_impl (in module jax.extend.random)": [[277, "jax.extend.random.rbg_prng_impl", false]], "real (jax.array property)": [[43, "jax.Array.real", false]], "real() (in module jax.lax)": [[437, "jax.lax.real", false]], "real() (in module jax.numpy)": [[903, "jax.numpy.real", false]], "reciprocal() (in module jax.lax)": [[438, "jax.lax.reciprocal", false]], "reciprocal() (in module jax.numpy)": [[904, "jax.numpy.reciprocal", false]], "reduce() (in module jax.lax)": [[439, "jax.lax.reduce", false]], "reduce() (in module jax.tree)": [[1269, "jax.tree.reduce", false]], "reduce_and() (in module jax.lax)": [[440, "jax.lax.reduce_and", false]], "reduce_max() (in module jax.lax)": [[441, "jax.lax.reduce_max", false]], "reduce_min() (in module jax.lax)": [[442, "jax.lax.reduce_min", false]], "reduce_or() (in module jax.lax)": [[443, "jax.lax.reduce_or", false]], "reduce_precision() (in module jax.lax)": [[444, "jax.lax.reduce_precision", false]], "reduce_prod() (in module jax.lax)": [[445, "jax.lax.reduce_prod", false]], "reduce_sum() (in module jax.lax)": [[446, "jax.lax.reduce_sum", false]], "reduce_window() (in module jax.lax)": [[447, "jax.lax.reduce_window", false]], "reduce_xor() (in module jax.lax)": [[448, "jax.lax.reduce_xor", false]], "reduced (jax.sharding.partitionspec property)": [[1404, "jax.sharding.PartitionSpec.reduced", false]], "register_custom_call_target() (in module jaxlib.xla_client)": [[1305, "jaxlib.xla_client.register_custom_call_target", false]], "register_dataclass() (in module jax.tree_util)": [[1279, "jax.tree_util.register_dataclass", false]], "register_ffi_target() (in module jax.extend.ffi)": [[265, "jax.extend.ffi.register_ffi_target", false]], "register_ffi_target() (in module jax.ffi)": [[286, "jax.ffi.register_ffi_target", false]], "register_ffi_type_id() (in module jax.ffi)": [[287, "jax.ffi.register_ffi_type_id", false]], "register_namedtuple_serialization() (in module jax.export)": [[248, "jax.export.register_namedtuple_serialization", false]], "register_pytree_node() (in module jax.tree_util)": [[1280, "jax.tree_util.register_pytree_node", false]], "register_pytree_node_class() (in module jax.tree_util)": [[1281, "jax.tree_util.register_pytree_node_class", false]], "register_pytree_node_serialization() (in module jax.export)": [[249, "jax.export.register_pytree_node_serialization", false]], "register_pytree_with_keys() (in module jax.tree_util)": [[1282, "jax.tree_util.register_pytree_with_keys", false]], "register_pytree_with_keys_class() (in module jax.tree_util)": [[1283, "jax.tree_util.register_pytree_with_keys_class", false]], "register_static() (in module jax.tree_util)": [[1284, "jax.tree_util.register_static", false]], "regulargridinterpolator (class in jax.scipy.interpolate)": [[1064, "jax.scipy.interpolate.RegularGridInterpolator", false]], "rel_entr() (in module jax.scipy.special)": [[1146, "jax.scipy.special.rel_entr", false]], "relu (in module jax.nn)": [[537, "jax.nn.relu", false]], "relu6 (in module jax.nn)": [[538, "jax.nn.relu6", false]], "rem() (in module jax.lax)": [[449, "jax.lax.rem", false]], "remainder() (in module jax.numpy)": [[905, "jax.numpy.remainder", false]], "repeat() (in module jax.numpy)": [[906, "jax.numpy.repeat", false]], "repeat() (jax.array method)": [[44, "jax.Array.repeat", false]], "resample() (jax.scipy.stats.gaussian_kde method)": [[1203, "jax.scipy.stats.gaussian_kde.resample", false]], "reset_cache() (in module jax.experimental.compilation_cache.compilation_cache)": [[1371, "jax.experimental.compilation_cache.compilation_cache.reset_cache", false]], "reshape() (in module jax.lax)": [[450, "jax.lax.reshape", false]], "reshape() (in module jax.numpy)": [[907, "jax.numpy.reshape", false]], "reshape() (jax.array method)": [[45, "jax.Array.reshape", false]], "resize() (in module jax.image)": [[291, "jax.image.resize", false]], "resize() (in module jax.numpy)": [[908, "jax.numpy.resize", false]], "resizemethod (class in jax.image)": [[1394, "jax.image.ResizeMethod", false]], "resolution (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.resolution", false]], "result_type() (in module jax.dtypes)": [[108, "jax.dtypes.result_type", false]], "result_type() (in module jax.numpy)": [[909, "jax.numpy.result_type", false]], "rev() (in module jax.lax)": [[451, "jax.lax.rev", false]], "reverse-mode autodiff": [[1351, "term-reverse-mode-autodiff", true]], "rfft (jax.lax.ffttype attribute)": [[1395, "jax.lax.FftType.RFFT", false]], "rfft() (in module jax.numpy.fft)": [[692, "jax.numpy.fft.rfft", false]], "rfft2() (in module jax.numpy.fft)": [[693, "jax.numpy.fft.rfft2", false]], "rfftfreq() (in module jax.numpy.fft)": [[694, "jax.numpy.fft.rfftfreq", false]], "rfftn() (in module jax.numpy.fft)": [[695, "jax.numpy.fft.rfftn", false]], "right_shift() (in module jax.numpy)": [[910, "jax.numpy.right_shift", false]], "rint() (in module jax.numpy)": [[911, "jax.numpy.rint", false]], "rmsprop() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.rmsprop", false]], "rmsprop_momentum() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.rmsprop_momentum", false]], "rng_bit_generator() (in module jax.lax)": [[452, "jax.lax.rng_bit_generator", false]], "rng_default (jax.lax.randomalgorithm attribute)": [[1395, "jax.lax.RandomAlgorithm.RNG_DEFAULT", false]], "rng_philox (jax.lax.randomalgorithm attribute)": [[1395, "jax.lax.RandomAlgorithm.RNG_PHILOX", false]], "rng_three_fry (jax.lax.randomalgorithm attribute)": [[1395, "jax.lax.RandomAlgorithm.RNG_THREE_FRY", false]], "rng_uniform() (in module jax.lax)": [[453, "jax.lax.rng_uniform", false]], "roll() (in module jax.numpy)": [[912, "jax.numpy.roll", false]], "rollaxis() (in module jax.numpy)": [[913, "jax.numpy.rollaxis", false]], "roots() (in module jax.numpy)": [[914, "jax.numpy.roots", false]], "rot90() (in module jax.numpy)": [[915, "jax.numpy.rot90", false]], "rotation (class in jax.scipy.spatial.transform)": [[1107, "jax.scipy.spatial.transform.Rotation", false]], "round() (in module jax.lax)": [[454, "jax.lax.round", false]], "round() (in module jax.numpy)": [[916, "jax.numpy.round", false]], "round() (jax.array method)": [[46, "jax.Array.round", false]], "roundingmethod (class in jax.lax)": [[1395, "jax.lax.RoundingMethod", false]], "rsf2csf() (in module jax.scipy.linalg)": [[1084, "jax.scipy.linalg.rsf2csf", false]], "rsqrt() (in module jax.lax)": [[455, "jax.lax.rsqrt", false]], "run_scoped() (in module jax.experimental.pallas)": [[184, "jax.experimental.pallas.run_scoped", false]], "runtime_executable() (jax.stages.compiled method)": [[1405, "jax.stages.Compiled.runtime_executable", false]], "s_ (in module jax.numpy)": [[917, "jax.numpy.s_", false]], "save() (in module jax.numpy)": [[918, "jax.numpy.save", false]], "save_device_memory_profile() (in module jax.profiler)": [[1007, "jax.profiler.save_device_memory_profile", false]], "savez() (in module jax.numpy)": [[919, "jax.numpy.savez", false]], "scalar_type_of() (in module jax.dtypes)": [[109, "jax.dtypes.scalar_type_of", false]], "scale_and_translate() (in module jax.image)": [[292, "jax.image.scale_and_translate", false]], "scaled_dot_general() (in module jax.nn)": [[539, "jax.nn.scaled_dot_general", false]], "scaled_matmul() (in module jax.nn)": [[540, "jax.nn.scaled_matmul", false]], "scan() (in module jax.lax)": [[456, "jax.lax.scan", false]], "scatter() (in module jax.lax)": [[457, "jax.lax.scatter", false]], "scatter_add() (in module jax.lax)": [[458, "jax.lax.scatter_add", false]], "scatter_apply() (in module jax.lax)": [[459, "jax.lax.scatter_apply", false]], "scatter_max() (in module jax.lax)": [[460, "jax.lax.scatter_max", false]], "scatter_min() (in module jax.lax)": [[461, "jax.lax.scatter_min", false]], "scatter_mul() (in module jax.lax)": [[462, "jax.lax.scatter_mul", false]], "scatterdimensionnumbers (class in jax.lax)": [[1395, "jax.lax.ScatterDimensionNumbers", false]], "schur() (in module jax.lax.linalg)": [[405, "jax.lax.linalg.schur", false]], "schur() (in module jax.scipy.linalg)": [[1085, "jax.scipy.linalg.schur", false]], "searchsorted() (in module jax.numpy)": [[920, "jax.numpy.searchsorted", false]], "searchsorted() (jax.array method)": [[47, "jax.Array.searchsorted", false]], "seed_with_impl() (in module jax.extend.random)": [[278, "jax.extend.random.seed_with_impl", false]], "segment_max() (in module jax.ops)": [[994, "jax.ops.segment_max", false]], "segment_min() (in module jax.ops)": [[995, "jax.ops.segment_min", false]], "segment_prod() (in module jax.ops)": [[996, "jax.ops.segment_prod", false]], "segment_sum() (in module jax.ops)": [[997, "jax.ops.segment_sum", false]], "select() (in module jax.lax)": [[463, "jax.lax.select", false]], "select() (in module jax.numpy)": [[921, "jax.numpy.select", false]], "select_n() (in module jax.lax)": [[464, "jax.lax.select_n", false]], "selu() (in module jax.nn)": [[541, "jax.nn.selu", false]], "sem() (in module jax.scipy.stats)": [[1239, "jax.scipy.stats.sem", false]], "sequential_vmap() (in module jax.custom_batching)": [[75, "jax.custom_batching.sequential_vmap", false]], "serial() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.serial", false]], "serialize() (in module jax.experimental.serialize_executable)": [[193, "jax.experimental.serialize_executable.serialize", false]], "serialize() (jax.export.exported method)": [[1386, "jax.export.Exported.serialize", false]], "serialized_metadata (jax.experimental.pallas.triton.compilerparams attribute)": [[187, "jax.experimental.pallas.triton.CompilerParams.serialized_metadata", false]], "set_cache_dir() (in module jax.experimental.compilation_cache.compilation_cache)": [[1371, "jax.experimental.compilation_cache.compilation_cache.set_cache_dir", false]], "set_max_registers() (in module jax.experimental.pallas.mosaic_gpu)": [[176, "jax.experimental.pallas.mosaic_gpu.set_max_registers", false]], "set_printoptions() (in module jax.numpy)": [[922, "jax.numpy.set_printoptions", false]], "setdiff1d() (in module jax.numpy)": [[923, "jax.numpy.setdiff1d", false]], "setxor1d() (in module jax.numpy)": [[924, "jax.numpy.setxor1d", false]], "sf() (in module jax.scipy.stats.beta)": [[1162, "jax.scipy.stats.beta.sf", false]], "sf() (in module jax.scipy.stats.cauchy)": [[1174, "jax.scipy.stats.cauchy.sf", false]], "sf() (in module jax.scipy.stats.chi2)": [[1180, "jax.scipy.stats.chi2.sf", false]], "sf() (in module jax.scipy.stats.expon)": [[1189, "jax.scipy.stats.expon.sf", false]], "sf() (in module jax.scipy.stats.gamma)": [[1195, "jax.scipy.stats.gamma.sf", false]], "sf() (in module jax.scipy.stats.logistic)": [[1217, "jax.scipy.stats.logistic.sf", false]], "sf() (in module jax.scipy.stats.norm)": [[1232, "jax.scipy.stats.norm.sf", false]], "sf() (in module jax.scipy.stats.truncnorm)": [[1247, "jax.scipy.stats.truncnorm.sf", false]], "sgd() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.sgd", false]], "shape (jax.array property)": [[48, "jax.Array.shape", false]], "shape() (in module jax.numpy)": [[925, "jax.numpy.shape", false]], "shape_dependent() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.shape_dependent", false]], "shapedtypestruct (class in jax)": [[63, "jax.ShapeDtypeStruct", false]], "shard_map() (in module jax)": [[1256, "jax.shard_map", false]], "shard_map() (in module jax.experimental.shard_map)": [[194, "jax.experimental.shard_map.shard_map", false]], "shard_shape() (jax.sharding.pmapsharding method)": [[1404, "jax.sharding.PmapSharding.shard_shape", false]], "shard_shape() (jax.sharding.sharding method)": [[1404, "jax.sharding.Sharding.shard_shape", false]], "sharding (class in jax.sharding)": [[1404, "jax.sharding.Sharding", false]], "sharding (jax.array property)": [[49, "jax.Array.sharding", false]], "sharding_spec (jax.sharding.pmapsharding property)": [[1404, "jax.sharding.PmapSharding.sharding_spec", false]], "shift_left() (in module jax.lax)": [[465, "jax.lax.shift_left", false]], "shift_right_arithmetic() (in module jax.lax)": [[466, "jax.lax.shift_right_arithmetic", false]], "shift_right_logical() (in module jax.lax)": [[467, "jax.lax.shift_right_logical", false]], "shutdown() (in module jax.distributed)": [[100, "jax.distributed.shutdown", false]], "sigmoid() (in module jax.nn)": [[542, "jax.nn.sigmoid", false]], "sign() (in module jax.lax)": [[468, "jax.lax.sign", false]], "sign() (in module jax.numpy)": [[926, "jax.numpy.sign", false]], "signbit() (in module jax.numpy)": [[927, "jax.numpy.signbit", false]], "signedinteger (class in jax.numpy)": [[928, "jax.numpy.signedinteger", false]], "silu() (in module jax.nn)": [[543, "jax.nn.silu", false]], "sin() (in module jax.lax)": [[469, "jax.lax.sin", false]], "sin() (in module jax.numpy)": [[929, "jax.numpy.sin", false]], "sinc() (in module jax.numpy)": [[930, "jax.numpy.sinc", false]], "single (in module jax.numpy)": [[931, "jax.numpy.single", false]], "singledevicesharding (class in jax.sharding)": [[1404, "jax.sharding.SingleDeviceSharding", false]], "sinh() (in module jax.lax)": [[470, "jax.lax.sinh", false]], "sinh() (in module jax.numpy)": [[932, "jax.numpy.sinh", false]], "size (jax.array property)": [[50, "jax.Array.size", false]], "size() (in module jax.numpy)": [[933, "jax.numpy.size", false]], "slerp (class in jax.scipy.spatial.transform)": [[1108, "jax.scipy.spatial.transform.Slerp", false]], "slice (class in jax.experimental.pallas)": [[143, "jax.experimental.pallas.Slice", false]], "slice() (in module jax.lax)": [[471, "jax.lax.slice", false]], "slice_in_dim() (in module jax.lax)": [[472, "jax.lax.slice_in_dim", false]], "slogdet() (in module jax.numpy.linalg)": [[805, "jax.numpy.linalg.slogdet", false]], "sm3() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.sm3", false]], "smallest_normal (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.smallest_normal", false]], "smallest_subnormal (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.smallest_subnormal", false]], "smem (in module jax.experimental.pallas.mosaic_gpu)": [[164, "jax.experimental.pallas.mosaic_gpu.SMEM", false]], "soft_sign() (in module jax.nn)": [[544, "jax.nn.soft_sign", false]], "softmax() (in module jax.nn)": [[545, "jax.nn.softmax", false]], "softmax() (in module jax.scipy.special)": [[1147, "jax.scipy.special.softmax", false]], "softplus() (in module jax.nn)": [[546, "jax.nn.softplus", false]], "solve() (in module jax.numpy.linalg)": [[806, "jax.numpy.linalg.solve", false]], "solve() (in module jax.scipy.linalg)": [[1086, "jax.scipy.linalg.solve", false]], "solve_triangular() (in module jax.scipy.linalg)": [[1087, "jax.scipy.linalg.solve_triangular", false]], "sort() (in module jax.lax)": [[473, "jax.lax.sort", false]], "sort() (in module jax.numpy)": [[934, "jax.numpy.sort", false]], "sort() (jax.array method)": [[51, "jax.Array.sort", false]], "sort_complex() (in module jax.numpy)": [[935, "jax.numpy.sort_complex", false]], "sort_key_val() (in module jax.lax)": [[474, "jax.lax.sort_key_val", false]], "spacing() (in module jax.numpy)": [[936, "jax.numpy.spacing", false]], "sparse_plus() (in module jax.nn)": [[547, "jax.nn.sparse_plus", false]], "sparse_sigmoid() (in module jax.nn)": [[548, "jax.nn.sparse_sigmoid", false]], "sparsify() (in module jax.experimental.sparse)": [[238, "jax.experimental.sparse.sparsify", false]], "spec (jax.sharding.namedsharding property)": [[1404, "jax.sharding.NamedSharding.spec", false]], "spence() (in module jax.scipy.special)": [[1148, "jax.scipy.special.spence", false]], "sph_harm() (in module jax.scipy.special)": [[1149, "jax.scipy.special.sph_harm", false]], "split() (in module jax.lax)": [[475, "jax.lax.split", false]], "split() (in module jax.numpy)": [[937, "jax.numpy.split", false]], "split() (in module jax.random)": [[1050, "jax.random.split", false]], "spmd": [[1351, "term-SPMD", true]], "spsolve() (in module jax.experimental.sparse.linalg)": [[236, "jax.experimental.sparse.linalg.spsolve", false]], "sqrt() (in module jax.lax)": [[476, "jax.lax.sqrt", false]], "sqrt() (in module jax.numpy)": [[938, "jax.numpy.sqrt", false]], "sqrtm() (in module jax.scipy.linalg)": [[1088, "jax.scipy.linalg.sqrtm", false]], "square() (in module jax.lax)": [[477, "jax.lax.square", false]], "square() (in module jax.numpy)": [[939, "jax.numpy.square", false]], "squareplus() (in module jax.nn)": [[549, "jax.nn.squareplus", false]], "squeeze() (in module jax.lax)": [[478, "jax.lax.squeeze", false]], "squeeze() (in module jax.numpy)": [[940, "jax.numpy.squeeze", false]], "squeeze() (jax.array method)": [[52, "jax.Array.squeeze", false]], "stack() (in module jax.numpy)": [[941, "jax.numpy.stack", false]], "standardize() (in module jax.nn)": [[550, "jax.nn.standardize", false]], "start_server() (in module jax.profiler)": [[1008, "jax.profiler.start_server", false]], "start_trace() (in module jax.profiler)": [[1009, "jax.profiler.start_trace", false]], "static": [[1351, "term-static", true]], "std() (in module jax.numpy)": [[942, "jax.numpy.std", false]], "std() (jax.array method)": [[53, "jax.Array.std", false]], "steptraceannotation (class in jax.profiler)": [[1003, "jax.profiler.StepTraceAnnotation", false]], "stft() (in module jax.scipy.signal)": [[1102, "jax.scipy.signal.stft", false]], "stop_gradient() (in module jax.lax)": [[479, "jax.lax.stop_gradient", false]], "stop_trace() (in module jax.profiler)": [[1010, "jax.profiler.stop_trace", false]], "store() (in module jax.experimental.pallas)": [[185, "jax.experimental.pallas.store", false]], "storeexception": [[266, "jax.extend.linear_util.StoreException", false]], "structure() (in module jax.tree)": [[1270, "jax.tree.structure", false]], "sub() (in module jax.lax)": [[480, "jax.lax.sub", false]], "subtract (in module jax.numpy)": [[943, "jax.numpy.subtract", false]], "subtree_defs (jax.example_libraries.optimizers.optimizerstate attribute)": [[1367, "jax.example_libraries.optimizers.OptimizerState.subtree_defs", false]], "sum() (in module jax.numpy)": [[944, "jax.numpy.sum", false]], "sum() (jax.array method)": [[54, "jax.Array.sum", false]], "sumpool() (in module jax.example_libraries.stax)": [[1368, "jax.example_libraries.stax.SumPool", false]], "supported_lhs_types (jax.lax.dotalgorithmpreset property)": [[1395, "jax.lax.DotAlgorithmPreset.supported_lhs_types", false]], "supported_output_types() (jax.lax.dotalgorithmpreset method)": [[1395, "jax.lax.DotAlgorithmPreset.supported_output_types", false]], "supported_rhs_types (jax.lax.dotalgorithmpreset property)": [[1395, "jax.lax.DotAlgorithmPreset.supported_rhs_types", false]], "svd() (in module jax.lax.linalg)": [[406, "jax.lax.linalg.svd", false]], "svd() (in module jax.numpy.linalg)": [[807, "jax.numpy.linalg.svd", false]], "svd() (in module jax.scipy.linalg)": [[1089, "jax.scipy.linalg.svd", false]], "svdalgorithm (class in jax.lax.linalg)": [[394, "jax.lax.linalg.SvdAlgorithm", false]], "svdvals() (in module jax.numpy.linalg)": [[808, "jax.numpy.linalg.svdvals", false]], "swap() (in module jax.experimental.pallas)": [[186, "jax.experimental.pallas.swap", false]], "swapaxes() (in module jax.numpy)": [[945, "jax.numpy.swapaxes", false]], "swapaxes() (jax.array method)": [[55, "jax.Array.swapaxes", false]], "swish() (in module jax.nn)": [[551, "jax.nn.swish", false]], "switch() (in module jax.lax)": [[481, "jax.lax.switch", false]], "swizzletransform (class in jax.experimental.pallas.mosaic_gpu)": [[165, "jax.experimental.pallas.mosaic_gpu.SwizzleTransform", false]], "symbolic_args_specs() (in module jax.export)": [[250, "jax.export.symbolic_args_specs", false]], "symbolic_shape() (in module jax.export)": [[251, "jax.export.symbolic_shape", false]], "symbolicscope (class in jax.export)": [[241, "jax.export.SymbolicScope", false]], "symmetric_product() (in module jax.lax.linalg)": [[407, "jax.lax.linalg.symmetric_product", false]], "sync_global_devices() (in module jax.experimental.multihost_utils)": [[139, "jax.experimental.multihost_utils.sync_global_devices", false]], "t (jax.array property)": [[1, "jax.Array.T", false]], "t() (in module jax.random)": [[1051, "jax.random.t", false]], "take() (in module jax.numpy)": [[946, "jax.numpy.take", false]], "take() (jax.array method)": [[56, "jax.Array.take", false]], "take_along_axis() (in module jax.numpy)": [[947, "jax.numpy.take_along_axis", false]], "tan() (in module jax.lax)": [[482, "jax.lax.tan", false]], "tan() (in module jax.numpy)": [[948, "jax.numpy.tan", false]], "tanh() (in module jax.lax)": [[483, "jax.lax.tanh", false]], "tanh() (in module jax.numpy)": [[949, "jax.numpy.tanh", false]], "tensordot() (in module jax.numpy)": [[950, "jax.numpy.tensordot", false]], "tensordot() (in module jax.numpy.linalg)": [[809, "jax.numpy.linalg.tensordot", false]], "tensorinv() (in module jax.numpy.linalg)": [[810, "jax.numpy.linalg.tensorinv", false]], "tensorsolve() (in module jax.numpy.linalg)": [[811, "jax.numpy.linalg.tensorsolve", false]], "tf32_tf32_f32 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.TF32_TF32_F32", false]], "tf32_tf32_f32_x3 (jax.lax.dotalgorithmpreset attribute)": [[1395, "jax.lax.DotAlgorithmPreset.TF32_TF32_F32_X3", false]], "threefry2x32_p (in module jax.extend.random)": [[279, "jax.extend.random.threefry2x32_p", false]], "threefry_2x32() (in module jax.extend.random)": [[280, "jax.extend.random.threefry_2x32", false]], "threefry_prng_impl (in module jax.extend.random)": [[281, "jax.extend.random.threefry_prng_impl", false]], "tile() (in module jax.numpy)": [[951, "jax.numpy.tile", false]], "tilingtransform (class in jax.experimental.pallas.mosaic_gpu)": [[166, "jax.experimental.pallas.mosaic_gpu.TilingTransform", false]], "tiny (jax.numpy.finfo attribute)": [[697, "jax.numpy.finfo.tiny", false]], "to_device() (jax.array method)": [[57, "jax.Array.to_device", false]], "to_dlpack() (in module jax.dlpack)": [[102, "jax.dlpack.to_dlpack", false]], "to_nearest_even (jax.lax.roundingmethod attribute)": [[1395, "jax.lax.RoundingMethod.TO_NEAREST_EVEN", false]], "todense() (in module jax.experimental.sparse)": [[239, "jax.experimental.sparse.todense", false]], "toeplitz() (in module jax.scipy.linalg)": [[1090, "jax.scipy.linalg.toeplitz", false]], "token (class in jax.extend.core)": [[257, "jax.extend.core.Token", false]], "top_k() (in module jax.lax)": [[484, "jax.lax.top_k", false]], "tpu": [[1351, "term-TPU", true]], "trace() (in module jax.numpy)": [[952, "jax.numpy.trace", false]], "trace() (in module jax.numpy.linalg)": [[812, "jax.numpy.linalg.trace", false]], "trace() (in module jax.profiler)": [[1011, "jax.profiler.trace", false]], "trace() (jax.array method)": [[58, "jax.Array.trace", false]], "trace() (jax.stages.wrapped method)": [[1405, "jax.stages.Wrapped.trace", false]], "traceannotation (class in jax.profiler)": [[1004, "jax.profiler.TraceAnnotation", false]], "traced (class in jax.stages)": [[1405, "jax.stages.Traced", false]], "tracer": [[1351, "term-Tracer", true]], "tracer (class in jax.core)": [[72, "jax.core.Tracer", false]], "tracerarrayconversionerror (class in jax.errors)": [[1342, "jax.errors.TracerArrayConversionError", false]], "tracerboolconversionerror (class in jax.errors)": [[1342, "jax.errors.TracerBoolConversionError", false]], "tracerintegerconversionerror (class in jax.errors)": [[1342, "jax.errors.TracerIntegerConversionError", false]], "transfer_guard() (in module jax)": [[1260, "jax.transfer_guard", false]], "transformation": [[1351, "term-transformation", true]], "transformation (in module jax.extend.linear_util)": [[270, "jax.extend.linear_util.transformation", false]], "transformation_with_aux (in module jax.extend.linear_util)": [[271, "jax.extend.linear_util.transformation_with_aux", false]], "transpose() (in module jax.lax)": [[485, "jax.lax.transpose", false]], "transpose() (in module jax.numpy)": [[953, "jax.numpy.transpose", false]], "transpose() (in module jax.tree)": [[1271, "jax.tree.transpose", false]], "transpose() (jax.array method)": [[59, "jax.Array.transpose", false]], "transposetransform (class in jax.experimental.pallas.mosaic_gpu)": [[167, "jax.experimental.pallas.mosaic_gpu.TransposeTransform", false]], "trapezoid() (in module jax.numpy)": [[954, "jax.numpy.trapezoid", false]], "trapezoid() (in module jax.scipy.integrate)": [[1063, "jax.scipy.integrate.trapezoid", false]], "tree_all() (in module jax.tree_util)": [[1285, "jax.tree_util.tree_all", false]], "tree_broadcast() (in module jax.tree_util)": [[1286, "jax.tree_util.tree_broadcast", false]], "tree_def (jax.example_libraries.optimizers.optimizerstate attribute)": [[1367, "jax.example_libraries.optimizers.OptimizerState.tree_def", false]], "tree_flatten() (in module jax.tree_util)": [[1287, "jax.tree_util.tree_flatten", false]], "tree_flatten_with_path() (in module jax.tree_util)": [[1288, "jax.tree_util.tree_flatten_with_path", false]], "tree_leaves() (in module jax.tree_util)": [[1289, "jax.tree_util.tree_leaves", false]], "tree_leaves_with_path() (in module jax.tree_util)": [[1290, "jax.tree_util.tree_leaves_with_path", false]], "tree_map() (in module jax.tree_util)": [[1291, "jax.tree_util.tree_map", false]], "tree_map_with_path() (in module jax.tree_util)": [[1292, "jax.tree_util.tree_map_with_path", false]], "tree_reduce() (in module jax.tree_util)": [[1293, "jax.tree_util.tree_reduce", false]], "tree_structure() (in module jax.tree_util)": [[1294, "jax.tree_util.tree_structure", false]], "tree_transpose() (in module jax.tree_util)": [[1295, "jax.tree_util.tree_transpose", false]], "tree_unflatten() (in module jax.tree_util)": [[1296, "jax.tree_util.tree_unflatten", false]], "treedef_children() (in module jax.tree_util)": [[1297, "jax.tree_util.treedef_children", false]], "treedef_is_leaf() (in module jax.tree_util)": [[1298, "jax.tree_util.treedef_is_leaf", false]], "treedef_tuple() (in module jax.tree_util)": [[1299, "jax.tree_util.treedef_tuple", false]], "tri() (in module jax.numpy)": [[955, "jax.numpy.tri", false]], "triangular() (in module jax.random)": [[1052, "jax.random.triangular", false]], "triangular_solve() (in module jax.lax.linalg)": [[408, "jax.lax.linalg.triangular_solve", false]], "tridiagonal() (in module jax.lax.linalg)": [[409, "jax.lax.linalg.tridiagonal", false]], "tridiagonal_solve() (in module jax.lax.linalg)": [[410, "jax.lax.linalg.tridiagonal_solve", false]], "tril() (in module jax.numpy)": [[956, "jax.numpy.tril", false]], "tril_indices() (in module jax.numpy)": [[957, "jax.numpy.tril_indices", false]], "tril_indices_from() (in module jax.numpy)": [[958, "jax.numpy.tril_indices_from", false]], "trim_zeros() (in module jax.numpy)": [[959, "jax.numpy.trim_zeros", false]], "triu() (in module jax.numpy)": [[960, "jax.numpy.triu", false]], "triu_indices() (in module jax.numpy)": [[961, "jax.numpy.triu_indices", false]], "triu_indices_from() (in module jax.numpy)": [[962, "jax.numpy.triu_indices_from", false]], "true_divide() (in module jax.numpy)": [[963, "jax.numpy.true_divide", false]], "trunc() (in module jax.numpy)": [[964, "jax.numpy.trunc", false]], "truncated_normal() (in module jax.nn.initializers)": [[527, "jax.nn.initializers.truncated_normal", false]], "truncated_normal() (in module jax.random)": [[1053, "jax.random.truncated_normal", false]], "ufunc (class in jax.numpy)": [[965, "jax.numpy.ufunc", false]], "uint (in module jax.numpy)": [[966, "jax.numpy.uint", false]], "uint16 (class in jax.numpy)": [[967, "jax.numpy.uint16", false]], "uint32 (class in jax.numpy)": [[968, "jax.numpy.uint32", false]], "uint64 (class in jax.numpy)": [[969, "jax.numpy.uint64", false]], "uint8 (class in jax.numpy)": [[970, "jax.numpy.uint8", false]], "unexpectedtracererror (class in jax.errors)": [[1342, "jax.errors.UnexpectedTracerError", false]], "unflatten() (in module jax.tree)": [[1272, "jax.tree.unflatten", false]], "uniform() (in module jax.nn.initializers)": [[528, "jax.nn.initializers.uniform", false]], "uniform() (in module jax.random)": [[1054, "jax.random.uniform", false]], "union1d() (in module jax.numpy)": [[971, "jax.numpy.union1d", false]], "unique() (in module jax.numpy)": [[972, "jax.numpy.unique", false]], "unique_all() (in module jax.numpy)": [[973, "jax.numpy.unique_all", false]], "unique_counts() (in module jax.numpy)": [[974, "jax.numpy.unique_counts", false]], "unique_inverse() (in module jax.numpy)": [[975, "jax.numpy.unique_inverse", false]], "unique_values() (in module jax.numpy)": [[976, "jax.numpy.unique_values", false]], "unordered_effects (jax.export.exported attribute)": [[1386, "jax.export.Exported.unordered_effects", false]], "unpack_optimizer_state() (in module jax.example_libraries.optimizers)": [[1367, "jax.example_libraries.optimizers.unpack_optimizer_state", false]], "unpackbits() (in module jax.numpy)": [[977, "jax.numpy.unpackbits", false]], "unravel_index() (in module jax.numpy)": [[978, "jax.numpy.unravel_index", false]], "unreduced (jax.sharding.partitionspec property)": [[1404, "jax.sharding.PartitionSpec.unreduced", false]], "unsafe_no_auto_barriers (jax.experimental.pallas.mosaic_gpu.compilerparams attribute)": [[160, "jax.experimental.pallas.mosaic_gpu.CompilerParams.unsafe_no_auto_barriers", false]], "unsafe_rbg_prng_impl (in module jax.extend.random)": [[282, "jax.extend.random.unsafe_rbg_prng_impl", false]], "unsignedinteger (class in jax.numpy)": [[979, "jax.numpy.unsignedinteger", false]], "unstack() (in module jax.numpy)": [[980, "jax.numpy.unstack", false]], "unwrap() (in module jax.numpy)": [[981, "jax.numpy.unwrap", false]], "update_fn (jax.example_libraries.optimizers.optimizer attribute)": [[1367, "jax.example_libraries.optimizers.Optimizer.update_fn", false]], "user_checks (in module jax.experimental.checkify)": [[126, "jax.experimental.checkify.user_checks", false]], "uses_global_constants (jax.export.exported attribute)": [[1386, "jax.export.Exported.uses_global_constants", false]], "value_and_grad() (in module jax)": [[1302, "jax.value_and_grad", false]], "value_and_grad() (in module jax.experimental.sparse)": [[240, "jax.experimental.sparse.value_and_grad", false]], "vander() (in module jax.numpy)": [[982, "jax.numpy.vander", false]], "var (class in jax.extend.core)": [[258, "jax.extend.core.Var", false]], "var() (in module jax.numpy)": [[983, "jax.numpy.var", false]], "var() (jax.array method)": [[60, "jax.Array.var", false]], "variance_scaling() (in module jax.nn.initializers)": [[529, "jax.nn.initializers.variance_scaling", false]], "vdot() (in module jax.numpy)": [[984, "jax.numpy.vdot", false]], "vecdot() (in module jax.numpy)": [[985, "jax.numpy.vecdot", false]], "vecdot() (in module jax.numpy.linalg)": [[813, "jax.numpy.linalg.vecdot", false]], "vecmat() (in module jax.numpy)": [[986, "jax.numpy.vecmat", false]], "vector_norm() (in module jax.numpy.linalg)": [[814, "jax.numpy.linalg.vector_norm", false]], "vectorize() (in module jax.numpy)": [[987, "jax.numpy.vectorize", false]], "view() (jax.array method)": [[61, "jax.Array.view", false]], "visualize_array_sharding() (in module jax.debug)": [[86, "jax.debug.visualize_array_sharding", false]], "visualize_sharding() (in module jax.debug)": [[87, "jax.debug.visualize_sharding", false]], "vjp": [[1351, "term-VJP", true]], "vjp() (in module jax)": [[1303, "jax.vjp", false]], "vjp() (jax.export.exported method)": [[1386, "jax.export.Exported.vjp", false]], "vmap() (in module jax)": [[1304, "jax.vmap", false]], "vq() (in module jax.scipy.cluster.vq)": [[1058, "jax.scipy.cluster.vq.vq", false]], "vsplit() (in module jax.numpy)": [[988, "jax.numpy.vsplit", false]], "vstack() (in module jax.numpy)": [[989, "jax.numpy.vstack", false]], "wait_smem_to_gmem() (in module jax.experimental.pallas.mosaic_gpu)": [[177, "jax.experimental.pallas.mosaic_gpu.wait_smem_to_gmem", false]], "wald() (in module jax.random)": [[1055, "jax.random.wald", false]], "weak type": [[1351, "term-weak-type", true]], "weibull_min() (in module jax.random)": [[1056, "jax.random.weibull_min", false]], "welch() (in module jax.scipy.signal)": [[1103, "jax.scipy.signal.welch", false]], "wgmma() (in module jax.experimental.pallas.mosaic_gpu)": [[178, "jax.experimental.pallas.mosaic_gpu.wgmma", false]], "wgmma_wait() (in module jax.experimental.pallas.mosaic_gpu)": [[179, "jax.experimental.pallas.mosaic_gpu.wgmma_wait", false]], "wgmmaaccumulatorref (class in jax.experimental.pallas.mosaic_gpu)": [[168, "jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef", false]], "when() (in module jax.experimental.pallas)": [[191, "jax.experimental.pallas.when", false]], "where() (in module jax.numpy)": [[990, "jax.numpy.where", false]], "while_loop() (in module jax.lax)": [[486, "jax.lax.while_loop", false]], "with_memory_kind() (jax.sharding.namedsharding method)": [[1404, "jax.sharding.NamedSharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.pmapsharding method)": [[1404, "jax.sharding.PmapSharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.sharding method)": [[1404, "jax.sharding.Sharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.singledevicesharding method)": [[1404, "jax.sharding.SingleDeviceSharding.with_memory_kind", false]], "with_sharding_constraint() (in module jax.lax)": [[487, "jax.lax.with_sharding_constraint", false]], "wrap_init() (in module jax.extend.linear_util)": [[272, "jax.extend.linear_util.wrap_init", false]], "wrap_key_data() (in module jax.random)": [[1057, "jax.random.wrap_key_data", false]], "wrapped (class in jax.stages)": [[1405, "jax.stages.Wrapped", false]], "wrappedfun (class in jax.extend.linear_util)": [[267, "jax.extend.linear_util.WrappedFun", false]], "xla": [[1351, "term-XLA", true]], "xlog1py (in module jax.scipy.special)": [[1150, "jax.scipy.special.xlog1py", false]], "xlogy (in module jax.scipy.special)": [[1151, "jax.scipy.special.xlogy", false]], "zeros() (in module jax.nn.initializers)": [[530, "jax.nn.initializers.zeros", false]], "zeros() (in module jax.numpy)": [[991, "jax.numpy.zeros", false]], "zeros_like() (in module jax.numpy)": [[992, "jax.numpy.zeros_like", false]], "zeros_like_array() (in module jax.lax)": [[488, "jax.lax.zeros_like_array", false]], "zeta (in module jax.scipy.special)": [[1152, "jax.scipy.special.zeta", false]], "zeta() (in module jax.lax)": [[489, "jax.lax.zeta", false]]}, "objects": {"jax": [[0, 0, 1, "", "Array"], [62, 0, 1, "", "Device"], [63, 0, 1, "", "ShapeDtypeStruct"], [64, 3, 1, "", "block_until_ready"], [65, 4, 1, "", "check_tracer_leaks"], [66, 4, 1, "", "checking_leaks"], [67, 3, 1, "", "checkpoint"], [68, 3, 1, "", "clear_caches"], [69, 3, 1, "", "closure_convert"], [70, 4, 1, "", "config"], [71, 3, 1, "", "copy_to_host_async"], [1361, 5, 0, "-", "core"], [76, 3, 1, "", "custom_gradient"], [77, 0, 1, "", "custom_jvp"], [80, 0, 1, "", "custom_vjp"], [1362, 5, 0, "-", "debug"], [88, 4, 1, "", "debug_infs"], [89, 4, 1, "", "debug_nans"], [90, 3, 1, "", "default_backend"], [91, 4, 1, "", "default_device"], [92, 4, 1, "", "default_matmul_precision"], [93, 4, 1, "", "default_prng_impl"], [94, 3, 1, "", "device_count"], [95, 3, 1, "", "device_get"], [96, 3, 1, "", "device_put"], [97, 3, 1, "", "devices"], [98, 3, 1, "", "disable_jit"], [1363, 5, 0, "-", "distributed"], [1364, 5, 0, "-", "dlpack"], [1365, 5, 0, "-", "dtypes"], [110, 4, 1, "", "enable_checks"], [111, 4, 1, "", "enable_custom_prng"], [112, 4, 1, "", "enable_custom_vjp_by_custom_transpose"], [113, 3, 1, "", "ensure_compile_time_eval"], [114, 3, 1, "", "eval_shape"], [1366, 5, 0, "-", "example_libraries"], [1386, 5, 0, "-", "export"], [1387, 5, 0, "-", "extend"], [1392, 5, 0, "-", "ffi"], [1393, 5, 0, "-", "flatten_util"], [289, 3, 1, "", "grad"], [290, 3, 1, "", "hessian"], [1394, 5, 0, "-", "image"], [293, 3, 1, "", "jacfwd"], [294, 3, 1, "", "jacobian"], [295, 3, 1, "", "jacrev"], [296, 3, 1, "", "jit"], [297, 3, 1, "", "jvp"], [1395, 5, 0, "-", "lax"], [492, 3, 1, "", "linear_transpose"], [493, 3, 1, "", "linearize"], [494, 3, 1, "", "live_arrays"], [495, 3, 1, "", "local_device_count"], [496, 3, 1, "", "local_devices"], [497, 4, 1, "", "log_compiles"], [498, 3, 1, "", "make_array_from_callback"], [499, 3, 1, "", "make_array_from_process_local_data"], [500, 3, 1, "", "make_array_from_single_device_arrays"], [501, 3, 1, "", "make_jaxpr"], [502, 3, 1, "", "make_mesh"], [503, 3, 1, "", "named_call"], [504, 3, 1, "", "named_scope"], [1397, 5, 0, "-", "nn"], [552, 4, 1, "", "no_tracing"], [1399, 5, 0, "-", "numpy"], [993, 4, 1, "", "numpy_rank_promotion"], [1400, 5, 0, "-", "ops"], [998, 3, 1, "", "pmap"], [999, 3, 1, "", "print_environment_info"], [1000, 3, 1, "", "process_count"], [1001, 3, 1, "", "process_index"], [1002, 3, 1, "", "process_indices"], [1401, 5, 0, "-", "profiler"], [1012, 3, 1, "", "pure_callback"], [1402, 5, 0, "-", "random"], [1256, 3, 1, "", "shard_map"], [1404, 5, 0, "-", "sharding"], [1405, 5, 0, "-", "stages"], [1406, 5, 0, "-", "test_util"], [1260, 3, 1, "", "transfer_guard"], [1407, 5, 0, "-", "tree"], [1408, 5, 0, "-", "tree_util"], [1409, 5, 0, "-", "typing"], [1302, 3, 1, "", "value_and_grad"], [1303, 3, 1, "", "vjp"], [1304, 3, 1, "", "vmap"]], "jax.Array": [[1, 1, 1, "", "T"], [0, 2, 1, "", "__init__"], [2, 1, 1, "", "addressable_shards"], [3, 2, 1, "", "all"], [4, 2, 1, "", "any"], [5, 2, 1, "", "argmax"], [6, 2, 1, "", "argmin"], [7, 2, 1, "", "argpartition"], [8, 2, 1, "", "argsort"], [9, 2, 1, "", "astype"], [10, 1, 1, "", "at"], [11, 2, 1, "", "choose"], [12, 2, 1, "", "clip"], [13, 1, 1, "", "committed"], [14, 2, 1, "", "compress"], [15, 2, 1, "", "conj"], [16, 2, 1, "", "conjugate"], [17, 2, 1, "", "copy"], [18, 2, 1, "", "copy_to_host_async"], [19, 2, 1, "", "cumprod"], [20, 2, 1, "", "cumsum"], [21, 1, 1, "", "device"], [22, 2, 1, "", "diagonal"], [23, 2, 1, "", "dot"], [24, 1, 1, "", "dtype"], [25, 1, 1, "", "flat"], [26, 2, 1, "", "flatten"], [27, 1, 1, "", "global_shards"], [28, 1, 1, "", "imag"], [29, 1, 1, "", "is_fully_addressable"], [30, 1, 1, "", "is_fully_replicated"], [31, 2, 1, "", "item"], [32, 1, 1, "", "itemsize"], [33, 1, 1, "", "mT"], [34, 2, 1, "", "max"], [35, 2, 1, "", "mean"], [36, 2, 1, "", "min"], [37, 1, 1, "", "nbytes"], [38, 1, 1, "", "ndim"], [39, 2, 1, "", "nonzero"], [40, 2, 1, "", "prod"], [41, 2, 1, "", "ptp"], [42, 2, 1, "", "ravel"], [43, 1, 1, "", "real"], [44, 2, 1, "", "repeat"], [45, 2, 1, "", "reshape"], [46, 2, 1, "", "round"], [47, 2, 1, "", "searchsorted"], [48, 1, 1, "", "shape"], [49, 1, 1, "", "sharding"], [50, 1, 1, "", "size"], [51, 2, 1, "", "sort"], [52, 2, 1, "", "squeeze"], [53, 2, 1, "", "std"], [54, 2, 1, "", "sum"], [55, 2, 1, "", "swapaxes"], [56, 2, 1, "", "take"], [57, 2, 1, "", "to_device"], [58, 2, 1, "", "trace"], [59, 2, 1, "", "transpose"], [60, 2, 1, "", "var"], [61, 2, 1, "", "view"]], "jax.Device": [[62, 2, 1, "", "__init__"]], "jax.ShapeDtypeStruct": [[63, 2, 1, "", "__init__"]], "jax.core": [[72, 0, 1, "", "Tracer"]], "jax.core.Tracer": [[72, 2, 1, "", "__init__"]], "jax.custom_batching": [[73, 0, 1, "", "custom_vmap"], [75, 3, 1, "", "sequential_vmap"]], "jax.custom_batching.custom_vmap": [[73, 2, 1, "", "__init__"], [74, 2, 1, "", "def_vmap"]], "jax.custom_jvp": [[77, 2, 1, "", "__init__"], [78, 2, 1, "", "defjvp"], [79, 2, 1, "", "defjvps"]], "jax.custom_vjp": [[80, 2, 1, "", "__init__"], [81, 2, 1, "", "defvjp"]], "jax.debug": [[82, 3, 1, "", "breakpoint"], [83, 3, 1, "", "callback"], [84, 3, 1, "", "inspect_array_sharding"], [85, 3, 1, "", "print"], [86, 3, 1, "", "visualize_array_sharding"], [87, 3, 1, "", "visualize_sharding"]], "jax.distributed": [[99, 3, 1, "", "initialize"], [100, 3, 1, "", "shutdown"]], "jax.dlpack": [[101, 3, 1, "", "from_dlpack"], [102, 3, 1, "", "to_dlpack"]], "jax.dtypes": [[103, 0, 1, "", "bfloat16"], [104, 3, 1, "", "canonicalize_dtype"], [105, 4, 1, "", "float0"], [106, 3, 1, "", "issubdtype"], [107, 0, 1, "", "prng_key"], [108, 3, 1, "", "result_type"], [109, 3, 1, "", "scalar_type_of"]], "jax.dtypes.bfloat16": [[103, 2, 1, "", "__init__"]], "jax.dtypes.prng_key": [[107, 2, 1, "", "__init__"]], "jax.errors": [[1342, 0, 1, "", "ConcretizationTypeError"], [1342, 6, 1, "", "JaxRuntimeError"], [1342, 0, 1, "", "KeyReuseError"], [1342, 0, 1, "", "NonConcreteBooleanIndexError"], [1342, 0, 1, "", "TracerArrayConversionError"], [1342, 0, 1, "", "TracerBoolConversionError"], [1342, 0, 1, "", "TracerIntegerConversionError"], [1342, 0, 1, "", "UnexpectedTracerError"]], "jax.example_libraries": [[1367, 5, 0, "-", "optimizers"], [1368, 5, 0, "-", "stax"]], "jax.example_libraries.optimizers": [[1367, 0, 1, "", "JoinPoint"], [1367, 0, 1, "", "Optimizer"], [1367, 0, 1, "", "OptimizerState"], [1367, 3, 1, "", "adagrad"], [1367, 3, 1, "", "adam"], [1367, 3, 1, "", "adamax"], [1367, 3, 1, "", "clip_grads"], [1367, 3, 1, "", "constant"], [1367, 3, 1, "", "exponential_decay"], [1367, 3, 1, "", "inverse_time_decay"], [1367, 3, 1, "", "l2_norm"], [1367, 3, 1, "", "make_schedule"], [1367, 3, 1, "", "momentum"], [1367, 3, 1, "", "nesterov"], [1367, 3, 1, "", "optimizer"], [1367, 3, 1, "", "pack_optimizer_state"], [1367, 3, 1, "", "piecewise_constant"], [1367, 3, 1, "", "polynomial_decay"], [1367, 3, 1, "", "rmsprop"], [1367, 3, 1, "", "rmsprop_momentum"], [1367, 3, 1, "", "sgd"], [1367, 3, 1, "", "sm3"], [1367, 3, 1, "", "unpack_optimizer_state"]], "jax.example_libraries.optimizers.Optimizer": [[1367, 6, 1, "", "init_fn"], [1367, 6, 1, "", "params_fn"], [1367, 6, 1, "", "update_fn"]], "jax.example_libraries.optimizers.OptimizerState": [[1367, 6, 1, "", "packed_state"], [1367, 6, 1, "", "subtree_defs"], [1367, 6, 1, "", "tree_def"]], "jax.example_libraries.stax": [[1368, 3, 1, "", "AvgPool"], [1368, 3, 1, "", "BatchNorm"], [1368, 3, 1, "", "Conv"], [1368, 3, 1, "", "Conv1DTranspose"], [1368, 3, 1, "", "ConvTranspose"], [1368, 3, 1, "", "Dense"], [1368, 3, 1, "", "Dropout"], [1368, 3, 1, "", "FanInConcat"], [1368, 3, 1, "", "FanOut"], [1368, 3, 1, "", "GeneralConv"], [1368, 3, 1, "", "GeneralConvTranspose"], [1368, 3, 1, "", "MaxPool"], [1368, 3, 1, "", "SumPool"], [1368, 3, 1, "", "elementwise"], [1368, 3, 1, "", "parallel"], [1368, 3, 1, "", "serial"], [1368, 3, 1, "", "shape_dependent"]], "jax.experimental": [[1370, 5, 0, "-", "checkify"], [1372, 5, 0, "-", "custom_dce"], [1373, 5, 0, "-", "custom_partitioning"], [129, 3, 1, "", "disable_x64"], [130, 3, 1, "", "enable_x64"], [131, 3, 1, "", "io_callback"], [1374, 5, 0, "-", "jet"], [1375, 5, 0, "-", "key_reuse"], [1376, 5, 0, "-", "mesh_utils"], [1377, 5, 0, "-", "multihost_utils"], [1378, 5, 0, "-", "pallas"], [1382, 5, 0, "-", "pjit"], [1383, 5, 0, "-", "serialize_executable"], [1384, 5, 0, "-", "shard_map"], [1385, 5, 0, "-", "sparse"]], "jax.experimental.checkify": [[115, 0, 1, "", "Error"], [116, 7, 1, "", "JaxRuntimeError"], [117, 4, 1, "", "all_checks"], [118, 4, 1, "", "automatic_checks"], [119, 3, 1, "", "check"], [120, 3, 1, "", "check_error"], [121, 3, 1, "", "checkify"], [122, 4, 1, "", "div_checks"], [123, 4, 1, "", "float_checks"], [124, 4, 1, "", "index_checks"], [125, 4, 1, "", "nan_checks"], [126, 4, 1, "", "user_checks"]], "jax.experimental.checkify.Error": [[115, 2, 1, "", "__init__"]], "jax.experimental.compilation_cache": [[1371, 5, 0, "-", "compilation_cache"]], "jax.experimental.compilation_cache.compilation_cache": [[1371, 3, 1, "", "initialize_cache"], [1371, 3, 1, "", "is_initialized"], [1371, 3, 1, "", "reset_cache"], [1371, 3, 1, "", "set_cache_dir"]], "jax.experimental.custom_dce": [[127, 0, 1, "", "custom_dce"]], "jax.experimental.custom_dce.custom_dce": [[127, 2, 1, "", "__init__"], [128, 2, 1, "", "def_dce"]], "jax.experimental.custom_partitioning": [[1373, 3, 1, "", "custom_partitioning"]], "jax.experimental.jet": [[1374, 3, 1, "", "jet"]], "jax.experimental.mesh_utils": [[132, 3, 1, "", "create_device_mesh"], [133, 3, 1, "", "create_hybrid_device_mesh"]], "jax.experimental.multihost_utils": [[134, 3, 1, "", "assert_equal"], [135, 3, 1, "", "broadcast_one_to_all"], [136, 3, 1, "", "global_array_to_host_local_array"], [137, 3, 1, "", "host_local_array_to_global_array"], [138, 3, 1, "", "process_allgather"], [139, 3, 1, "", "sync_global_devices"]], "jax.experimental.pallas": [[140, 0, 1, "", "BlockSpec"], [141, 0, 1, "", "GridSpec"], [142, 0, 1, "", "MemoryRef"], [143, 0, 1, "", "Slice"], [144, 3, 1, "", "atomic_add"], [145, 3, 1, "", "atomic_and"], [146, 3, 1, "", "atomic_cas"], [147, 3, 1, "", "atomic_max"], [148, 3, 1, "", "atomic_min"], [149, 3, 1, "", "atomic_or"], [150, 3, 1, "", "atomic_xchg"], [151, 3, 1, "", "atomic_xor"], [152, 3, 1, "", "broadcast_to"], [153, 3, 1, "", "debug_print"], [154, 3, 1, "", "dot"], [155, 3, 1, "", "load"], [156, 3, 1, "", "max_contiguous"], [1379, 5, 0, "-", "mosaic_gpu"], [180, 3, 1, "", "multiple_of"], [181, 3, 1, "", "num_programs"], [182, 3, 1, "", "pallas_call"], [183, 3, 1, "", "program_id"], [184, 3, 1, "", "run_scoped"], [185, 3, 1, "", "store"], [186, 3, 1, "", "swap"], [1380, 5, 0, "-", "tpu"], [1381, 5, 0, "-", "triton"], [191, 3, 1, "", "when"]], "jax.experimental.pallas.BlockSpec": [[140, 2, 1, "", "__init__"]], "jax.experimental.pallas.GridSpec": [[141, 2, 1, "", "__init__"]], "jax.experimental.pallas.MemoryRef": [[142, 2, 1, "", "__init__"]], "jax.experimental.pallas.Slice": [[143, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu": [[157, 6, 1, "", "ACC"], [158, 0, 1, "", "Barrier"], [159, 0, 1, "", "BlockSpec"], [160, 0, 1, "", "CompilerParams"], [161, 4, 1, "", "GMEM"], [162, 0, 1, "", "Layout"], [163, 0, 1, "", "MemorySpace"], [164, 4, 1, "", "SMEM"], [165, 0, 1, "", "SwizzleTransform"], [166, 0, 1, "", "TilingTransform"], [167, 0, 1, "", "TransposeTransform"], [168, 0, 1, "", "WGMMAAccumulatorRef"], [169, 3, 1, "", "barrier_arrive"], [170, 3, 1, "", "barrier_wait"], [171, 3, 1, "", "commit_smem"], [172, 3, 1, "", "copy_gmem_to_smem"], [173, 3, 1, "", "copy_smem_to_gmem"], [174, 3, 1, "", "emit_pipeline"], [175, 3, 1, "", "layout_cast"], [176, 3, 1, "", "set_max_registers"], [177, 3, 1, "", "wait_smem_to_gmem"], [178, 3, 1, "", "wgmma"], [179, 3, 1, "", "wgmma_wait"]], "jax.experimental.pallas.mosaic_gpu.Barrier": [[158, 2, 1, "", "__init__"], [158, 6, 1, "", "for_tensor_core"], [158, 6, 1, "", "num_arrivals"], [158, 6, 1, "", "num_barriers"]], "jax.experimental.pallas.mosaic_gpu.BlockSpec": [[159, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.CompilerParams": [[160, 2, 1, "", "__init__"], [160, 6, 1, "", "approx_math"], [160, 6, 1, "", "delay_release"], [160, 6, 1, "", "dimension_semantics"], [160, 6, 1, "", "max_concurrent_steps"], [160, 6, 1, "", "profile_dir"], [160, 6, 1, "", "profile_space"], [160, 6, 1, "", "unsafe_no_auto_barriers"]], "jax.experimental.pallas.mosaic_gpu.Layout": [[162, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.MemorySpace": [[163, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.SwizzleTransform": [[165, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.TilingTransform": [[166, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.TransposeTransform": [[167, 2, 1, "", "__init__"]], "jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef": [[168, 2, 1, "", "__init__"]], "jax.experimental.pallas.triton": [[187, 0, 1, "", "CompilerParams"], [188, 3, 1, "", "approx_tanh"], [189, 3, 1, "", "debug_barrier"], [190, 3, 1, "", "elementwise_inline_asm"]], "jax.experimental.pallas.triton.CompilerParams": [[187, 2, 1, "", "__init__"], [187, 6, 1, "", "num_stages"], [187, 6, 1, "", "num_warps"], [187, 6, 1, "", "serialized_metadata"]], "jax.experimental.pjit": [[1382, 3, 1, "", "pjit"]], "jax.experimental.serialize_executable": [[192, 3, 1, "", "deserialize_and_load"], [193, 3, 1, "", "serialize"]], "jax.experimental.shard_map": [[194, 3, 1, "", "shard_map"]], "jax.experimental.sparse": [[195, 0, 1, "", "BCOO"], [196, 0, 1, "", "BCSR"], [197, 0, 1, "", "COO"], [198, 0, 1, "", "CSC"], [199, 0, 1, "", "CSR"], [200, 0, 1, "", "JAXSparse"], [201, 3, 1, "", "bcoo_broadcast_in_dim"], [202, 3, 1, "", "bcoo_concatenate"], [203, 3, 1, "", "bcoo_dot_general"], [204, 3, 1, "", "bcoo_dot_general_sampled"], [205, 3, 1, "", "bcoo_dynamic_slice"], [206, 3, 1, "", "bcoo_extract"], [207, 3, 1, "", "bcoo_fromdense"], [208, 3, 1, "", "bcoo_gather"], [209, 3, 1, "", "bcoo_multiply_dense"], [210, 3, 1, "", "bcoo_multiply_sparse"], [211, 3, 1, "", "bcoo_reduce_sum"], [212, 3, 1, "", "bcoo_reshape"], [213, 3, 1, "", "bcoo_slice"], [214, 3, 1, "", "bcoo_sort_indices"], [215, 3, 1, "", "bcoo_squeeze"], [216, 3, 1, "", "bcoo_sum_duplicates"], [217, 3, 1, "", "bcoo_todense"], [218, 3, 1, "", "bcoo_transpose"], [219, 3, 1, "", "bcoo_update_layout"], [220, 3, 1, "", "bcsr_dot_general"], [221, 3, 1, "", "bcsr_extract"], [222, 3, 1, "", "bcsr_fromdense"], [223, 3, 1, "", "bcsr_todense"], [224, 3, 1, "", "coo_fromdense"], [225, 3, 1, "", "coo_matmat"], [226, 3, 1, "", "coo_matvec"], [227, 3, 1, "", "coo_todense"], [228, 3, 1, "", "csr_fromdense"], [229, 3, 1, "", "csr_matmat"], [230, 3, 1, "", "csr_matvec"], [231, 3, 1, "", "csr_todense"], [232, 3, 1, "", "empty"], [233, 3, 1, "", "eye"], [234, 3, 1, "", "grad"], [1385, 5, 0, "-", "linalg"], [237, 3, 1, "", "random_bcoo"], [238, 3, 1, "", "sparsify"], [239, 3, 1, "", "todense"], [240, 3, 1, "", "value_and_grad"]], "jax.experimental.sparse.BCOO": [[195, 2, 1, "", "__init__"], [195, 6, 1, "", "data"], [195, 6, 1, "", "indices"]], "jax.experimental.sparse.BCSR": [[196, 2, 1, "", "__init__"]], "jax.experimental.sparse.COO": [[197, 2, 1, "", "__init__"]], "jax.experimental.sparse.CSC": [[198, 2, 1, "", "__init__"]], "jax.experimental.sparse.CSR": [[199, 2, 1, "", "__init__"]], "jax.experimental.sparse.JAXSparse": [[200, 2, 1, "", "__init__"]], "jax.experimental.sparse.linalg": [[235, 3, 1, "", "lobpcg_standard"], [236, 3, 1, "", "spsolve"]], "jax.export": [[1386, 0, 1, "", "DisabledSafetyCheck"], [1386, 0, 1, "", "Exported"], [241, 0, 1, "", "SymbolicScope"], [242, 3, 1, "", "default_export_platform"], [243, 3, 1, "", "deserialize"], [244, 3, 1, "", "export"], [245, 3, 1, "", "is_symbolic_dim"], [246, 4, 1, "", "maximum_supported_calling_convention_version"], [247, 4, 1, "", "minimum_supported_calling_convention_version"], [248, 3, 1, "", "register_namedtuple_serialization"], [249, 3, 1, "", "register_pytree_node_serialization"], [250, 3, 1, "", "symbolic_args_specs"], [251, 3, 1, "", "symbolic_shape"]], "jax.export.DisabledSafetyCheck": [[1386, 2, 1, "", "custom_call"], [1386, 2, 1, "", "is_custom_call"], [1386, 2, 1, "", "platform"]], "jax.export.Exported": [[1386, 6, 1, "", "_get_vjp"], [1386, 2, 1, "", "call"], [1386, 6, 1, "", "calling_convention_version"], [1386, 6, 1, "", "disabled_safety_checks"], [1386, 6, 1, "", "fun_name"], [1386, 2, 1, "", "has_vjp"], [1386, 6, 1, "", "in_avals"], [1386, 6, 1, "", "in_shardings_hlo"], [1386, 2, 1, "", "in_shardings_jax"], [1386, 6, 1, "", "in_tree"], [1386, 2, 1, "", "mlir_module"], [1386, 6, 1, "", "mlir_module_serialized"], [1386, 6, 1, "", "module_kept_var_idx"], [1386, 6, 1, "", "nr_devices"], [1386, 6, 1, "", "ordered_effects"], [1386, 6, 1, "", "out_avals"], [1386, 6, 1, "", "out_shardings_hlo"], [1386, 2, 1, "", "out_shardings_jax"], [1386, 6, 1, "", "out_tree"], [1386, 6, 1, "", "platforms"], [1386, 2, 1, "", "serialize"], [1386, 6, 1, "", "unordered_effects"], [1386, 6, 1, "", "uses_global_constants"], [1386, 2, 1, "", "vjp"]], "jax.export.SymbolicScope": [[241, 2, 1, "", "__init__"]], "jax.export.jax.export": [[1386, 4, 1, "", "maximum_supported_serialization_version"], [1386, 4, 1, "", "minimum_supported_serialization_version"]], "jax.extend": [[1388, 5, 0, "-", "core"], [1392, 5, 0, "-", "ffi"], [1389, 5, 0, "-", "linear_util"], [1390, 5, 0, "-", "mlir"], [1391, 5, 0, "-", "random"]], "jax.extend.core": [[252, 0, 1, "", "ClosedJaxpr"], [253, 0, 1, "", "Jaxpr"], [254, 0, 1, "", "JaxprEqn"], [255, 0, 1, "", "Literal"], [256, 0, 1, "", "Primitive"], [257, 0, 1, "", "Token"], [258, 0, 1, "", "Var"], [259, 4, 1, "", "array_types"], [260, 4, 1, "", "jaxpr_as_fun"], [261, 5, 0, "-", "primitives"]], "jax.extend.core.ClosedJaxpr": [[252, 2, 1, "", "__init__"]], "jax.extend.core.Jaxpr": [[253, 2, 1, "", "__init__"]], "jax.extend.core.JaxprEqn": [[254, 2, 1, "", "__init__"]], "jax.extend.core.Literal": [[255, 2, 1, "", "__init__"]], "jax.extend.core.Primitive": [[256, 2, 1, "", "__init__"]], "jax.extend.core.Token": [[257, 2, 1, "", "__init__"]], "jax.extend.core.Var": [[258, 2, 1, "", "__init__"]], "jax.extend.ffi": [[262, 3, 1, "", "ffi_call"], [263, 3, 1, "", "ffi_lowering"], [264, 3, 1, "", "pycapsule"], [265, 3, 1, "", "register_ffi_target"]], "jax.extend.linear_util": [[266, 7, 1, "", "StoreException"], [267, 0, 1, "", "WrappedFun"], [268, 3, 1, "", "cache"], [269, 3, 1, "", "merge_linear_aux"], [270, 4, 1, "", "transformation"], [271, 4, 1, "", "transformation_with_aux"], [272, 3, 1, "", "wrap_init"]], "jax.extend.linear_util.WrappedFun": [[267, 2, 1, "", "__init__"]], "jax.extend.mlir": [[273, 5, 0, "-", "dialects"], [274, 5, 0, "-", "ir"], [275, 5, 0, "-", "passmanager"]], "jax.extend.random": [[276, 3, 1, "", "define_prng_impl"], [277, 4, 1, "", "rbg_prng_impl"], [278, 3, 1, "", "seed_with_impl"], [279, 4, 1, "", "threefry2x32_p"], [280, 3, 1, "", "threefry_2x32"], [281, 4, 1, "", "threefry_prng_impl"], [282, 4, 1, "", "unsafe_rbg_prng_impl"]], "jax.ffi": [[283, 3, 1, "", "ffi_call"], [284, 3, 1, "", "ffi_lowering"], [285, 3, 1, "", "pycapsule"], [286, 3, 1, "", "register_ffi_target"], [287, 3, 1, "", "register_ffi_type_id"]], "jax.flatten_util": [[288, 3, 1, "", "ravel_pytree"]], "jax.image": [[1394, 0, 1, "", "ResizeMethod"], [291, 3, 1, "", "resize"], [292, 3, 1, "", "scale_and_translate"]], "jax.lax": [[1395, 0, 1, "", "ConvDimensionNumbers"], [1395, 6, 1, "", "ConvGeneralDilatedDimensionNumbers"], [1395, 0, 1, "", "DotAlgorithm"], [1395, 0, 1, "", "DotAlgorithmPreset"], [1395, 0, 1, "", "FftType"], [1395, 0, 1, "", "GatherDimensionNumbers"], [1395, 0, 1, "", "GatherScatterMode"], [1395, 0, 1, "", "Precision"], [1395, 6, 1, "", "PrecisionLike"], [1395, 0, 1, "", "RandomAlgorithm"], [1395, 0, 1, "", "RoundingMethod"], [1395, 0, 1, "", "ScatterDimensionNumbers"], [298, 3, 1, "", "abs"], [299, 3, 1, "", "acos"], [300, 3, 1, "", "acosh"], [301, 3, 1, "", "add"], [302, 3, 1, "", "after_all"], [303, 3, 1, "", "all_gather"], [304, 3, 1, "", "all_to_all"], [305, 3, 1, "", "approx_max_k"], [306, 3, 1, "", "approx_min_k"], [307, 3, 1, "", "argmax"], [308, 3, 1, "", "argmin"], [309, 3, 1, "", "asin"], [310, 3, 1, "", "asinh"], [311, 3, 1, "", "associative_scan"], [312, 3, 1, "", "atan"], [313, 3, 1, "", "atan2"], [314, 3, 1, "", "atanh"], [315, 3, 1, "", "axis_index"], [316, 3, 1, "", "axis_size"], [317, 3, 1, "", "batch_matmul"], [318, 3, 1, "", "bessel_i0e"], [319, 3, 1, "", "bessel_i1e"], [320, 3, 1, "", "betainc"], [321, 3, 1, "", "bitcast_convert_type"], [322, 3, 1, "", "bitwise_and"], [323, 3, 1, "", "bitwise_not"], [324, 3, 1, "", "bitwise_or"], [325, 3, 1, "", "bitwise_xor"], [326, 3, 1, "", "broadcast"], [327, 3, 1, "", "broadcast_in_dim"], [328, 3, 1, "", "broadcast_shapes"], [329, 3, 1, "", "broadcast_to_rank"], [330, 3, 1, "", "broadcasted_iota"], [331, 3, 1, "", "cbrt"], [332, 3, 1, "", "ceil"], [333, 3, 1, "", "clamp"], [334, 3, 1, "", "clz"], [335, 3, 1, "", "collapse"], [336, 3, 1, "", "complex"], [337, 3, 1, "", "composite"], [338, 3, 1, "", "concatenate"], [339, 3, 1, "", "cond"], [340, 3, 1, "", "conj"], [341, 3, 1, "", "conv"], [342, 3, 1, "", "conv_dimension_numbers"], [343, 3, 1, "", "conv_general_dilated"], [344, 3, 1, "", "conv_general_dilated_local"], [345, 3, 1, "", "conv_general_dilated_patches"], [346, 3, 1, "", "conv_transpose"], [347, 3, 1, "", "conv_with_general_padding"], [348, 3, 1, "", "convert_element_type"], [349, 3, 1, "", "cos"], [350, 3, 1, "", "cosh"], [351, 3, 1, "", "cumlogsumexp"], [352, 3, 1, "", "cummax"], [353, 3, 1, "", "cummin"], [354, 3, 1, "", "cumprod"], [355, 3, 1, "", "cumsum"], [356, 3, 1, "", "custom_linear_solve"], [357, 3, 1, "", "custom_root"], [358, 3, 1, "", "digamma"], [359, 3, 1, "", "div"], [360, 3, 1, "", "dot"], [361, 3, 1, "", "dot_general"], [362, 3, 1, "", "dynamic_index_in_dim"], [363, 3, 1, "", "dynamic_slice"], [364, 3, 1, "", "dynamic_slice_in_dim"], [365, 3, 1, "", "dynamic_update_index_in_dim"], [366, 3, 1, "", "dynamic_update_slice"], [367, 3, 1, "", "dynamic_update_slice_in_dim"], [368, 3, 1, "", "eq"], [369, 3, 1, "", "erf"], [370, 3, 1, "", "erf_inv"], [371, 3, 1, "", "erfc"], [372, 3, 1, "", "exp"], [373, 3, 1, "", "exp2"], [374, 3, 1, "", "expand_dims"], [375, 3, 1, "", "expm1"], [376, 3, 1, "", "fft"], [377, 3, 1, "", "floor"], [378, 3, 1, "", "fori_loop"], [379, 3, 1, "", "full"], [380, 3, 1, "", "full_like"], [381, 3, 1, "", "gather"], [382, 3, 1, "", "ge"], [383, 3, 1, "", "gt"], [384, 3, 1, "", "igamma"], [385, 3, 1, "", "igammac"], [386, 3, 1, "", "imag"], [387, 3, 1, "", "index_in_dim"], [388, 3, 1, "", "index_take"], [389, 3, 1, "", "integer_pow"], [390, 3, 1, "", "iota"], [391, 3, 1, "", "is_finite"], [392, 3, 1, "", "le"], [393, 3, 1, "", "lgamma"], [1395, 5, 0, "-", "linalg"], [411, 3, 1, "", "log"], [412, 3, 1, "", "log1p"], [413, 3, 1, "", "logistic"], [414, 3, 1, "", "lt"], [415, 3, 1, "", "map"], [416, 3, 1, "", "max"], [417, 3, 1, "", "min"], [418, 3, 1, "", "mul"], [419, 3, 1, "", "ne"], [420, 3, 1, "", "neg"], [421, 3, 1, "", "nextafter"], [422, 3, 1, "", "optimization_barrier"], [423, 3, 1, "", "pad"], [424, 3, 1, "", "platform_dependent"], [425, 3, 1, "", "pmax"], [426, 3, 1, "", "pmean"], [427, 3, 1, "", "pmin"], [428, 3, 1, "", "polygamma"], [429, 3, 1, "", "population_count"], [430, 3, 1, "", "pow"], [431, 3, 1, "", "ppermute"], [432, 3, 1, "", "pshuffle"], [433, 3, 1, "", "psum"], [434, 3, 1, "", "psum_scatter"], [435, 3, 1, "", "pswapaxes"], [436, 3, 1, "", "random_gamma_grad"], [437, 3, 1, "", "real"], [438, 3, 1, "", "reciprocal"], [439, 3, 1, "", "reduce"], [440, 3, 1, "", "reduce_and"], [441, 3, 1, "", "reduce_max"], [442, 3, 1, "", "reduce_min"], [443, 3, 1, "", "reduce_or"], [444, 3, 1, "", "reduce_precision"], [445, 3, 1, "", "reduce_prod"], [446, 3, 1, "", "reduce_sum"], [447, 3, 1, "", "reduce_window"], [448, 3, 1, "", "reduce_xor"], [449, 3, 1, "", "rem"], [450, 3, 1, "", "reshape"], [451, 3, 1, "", "rev"], [452, 3, 1, "", "rng_bit_generator"], [453, 3, 1, "", "rng_uniform"], [454, 3, 1, "", "round"], [455, 3, 1, "", "rsqrt"], [456, 3, 1, "", "scan"], [457, 3, 1, "", "scatter"], [458, 3, 1, "", "scatter_add"], [459, 3, 1, "", "scatter_apply"], [460, 3, 1, "", "scatter_max"], [461, 3, 1, "", "scatter_min"], [462, 3, 1, "", "scatter_mul"], [463, 3, 1, "", "select"], [464, 3, 1, "", "select_n"], [465, 3, 1, "", "shift_left"], [466, 3, 1, "", "shift_right_arithmetic"], [467, 3, 1, "", "shift_right_logical"], [468, 3, 1, "", "sign"], [469, 3, 1, "", "sin"], [470, 3, 1, "", "sinh"], [471, 3, 1, "", "slice"], [472, 3, 1, "", "slice_in_dim"], [473, 3, 1, "", "sort"], [474, 3, 1, "", "sort_key_val"], [475, 3, 1, "", "split"], [476, 3, 1, "", "sqrt"], [477, 3, 1, "", "square"], [478, 3, 1, "", "squeeze"], [479, 3, 1, "", "stop_gradient"], [480, 3, 1, "", "sub"], [481, 3, 1, "", "switch"], [482, 3, 1, "", "tan"], [483, 3, 1, "", "tanh"], [484, 3, 1, "", "top_k"], [485, 3, 1, "", "transpose"], [486, 3, 1, "", "while_loop"], [487, 3, 1, "", "with_sharding_constraint"], [488, 3, 1, "", "zeros_like_array"], [489, 3, 1, "", "zeta"]], "jax.lax.DotAlgorithmPreset": [[1395, 6, 1, "", "ANY_F8_ANY_F8_ANY"], [1395, 6, 1, "", "ANY_F8_ANY_F8_ANY_FAST_ACCUM"], [1395, 6, 1, "", "ANY_F8_ANY_F8_F32"], [1395, 6, 1, "", "ANY_F8_ANY_F8_F32_FAST_ACCUM"], [1395, 6, 1, "", "BF16_BF16_BF16"], [1395, 6, 1, "", "BF16_BF16_F32"], [1395, 6, 1, "", "BF16_BF16_F32_X3"], [1395, 6, 1, "", "BF16_BF16_F32_X6"], [1395, 6, 1, "", "BF16_BF16_F32_X9"], [1395, 6, 1, "", "DEFAULT"], [1395, 6, 1, "", "F16_F16_F16"], [1395, 6, 1, "", "F16_F16_F32"], [1395, 6, 1, "", "F32_F32_F32"], [1395, 6, 1, "", "F64_F64_F64"], [1395, 6, 1, "", "TF32_TF32_F32"], [1395, 6, 1, "", "TF32_TF32_F32_X3"], [1395, 1, 1, "", "accumulation_type"], [1395, 1, 1, "", "supported_lhs_types"], [1395, 2, 1, "", "supported_output_types"], [1395, 1, 1, "", "supported_rhs_types"]], "jax.lax.FftType": [[1395, 6, 1, "", "FFT"], [1395, 6, 1, "", "IFFT"], [1395, 6, 1, "", "IRFFT"], [1395, 6, 1, "", "RFFT"]], "jax.lax.RandomAlgorithm": [[1395, 6, 1, "", "RNG_DEFAULT"], [1395, 6, 1, "", "RNG_PHILOX"], [1395, 6, 1, "", "RNG_THREE_FRY"]], "jax.lax.RoundingMethod": [[1395, 6, 1, "", "AWAY_FROM_ZERO"], [1395, 6, 1, "", "TO_NEAREST_EVEN"]], "jax.lax.linalg": [[394, 0, 1, "", "SvdAlgorithm"], [395, 3, 1, "", "cholesky"], [396, 3, 1, "", "cholesky_update"], [397, 3, 1, "", "eig"], [398, 3, 1, "", "eigh"], [399, 3, 1, "", "hessenberg"], [400, 3, 1, "", "householder_product"], [401, 3, 1, "", "lu"], [402, 3, 1, "", "lu_pivots_to_permutation"], [403, 3, 1, "", "qdwh"], [404, 3, 1, "", "qr"], [405, 3, 1, "", "schur"], [406, 3, 1, "", "svd"], [407, 3, 1, "", "symmetric_product"], [408, 3, 1, "", "triangular_solve"], [409, 3, 1, "", "tridiagonal"], [410, 3, 1, "", "tridiagonal_solve"]], "jax.lax.linalg.SvdAlgorithm": [[394, 2, 1, "", "__init__"]], "jax.lib.xla_bridge": [[490, 3, 1, "", "get_backend"], [491, 3, 1, "", "get_compile_options"]], "jax.nn": [[505, 3, 1, "", "celu"], [506, 3, 1, "", "dot_product_attention"], [507, 3, 1, "", "elu"], [508, 3, 1, "", "gelu"], [509, 3, 1, "", "get_scaled_dot_general_config"], [510, 3, 1, "", "glu"], [511, 3, 1, "", "hard_sigmoid"], [512, 3, 1, "", "hard_silu"], [513, 3, 1, "", "hard_swish"], [514, 3, 1, "", "hard_tanh"], [515, 3, 1, "", "identity"], [1398, 5, 0, "-", "initializers"], [531, 3, 1, "", "leaky_relu"], [532, 3, 1, "", "log_sigmoid"], [533, 3, 1, "", "log_softmax"], [534, 3, 1, "", "logsumexp"], [535, 3, 1, "", "mish"], [536, 3, 1, "", "one_hot"], [537, 4, 1, "", "relu"], [538, 4, 1, "", "relu6"], [539, 3, 1, "", "scaled_dot_general"], [540, 3, 1, "", "scaled_matmul"], [541, 3, 1, "", "selu"], [542, 3, 1, "", "sigmoid"], [543, 3, 1, "", "silu"], [544, 3, 1, "", "soft_sign"], [545, 3, 1, "", "softmax"], [546, 3, 1, "", "softplus"], [547, 3, 1, "", "sparse_plus"], [548, 3, 1, "", "sparse_sigmoid"], [549, 3, 1, "", "squareplus"], [550, 3, 1, "", "standardize"], [551, 3, 1, "", "swish"]], "jax.nn.initializers": [[516, 3, 1, "", "constant"], [517, 3, 1, "", "delta_orthogonal"], [518, 3, 1, "", "glorot_normal"], [519, 3, 1, "", "glorot_uniform"], [520, 3, 1, "", "he_normal"], [521, 3, 1, "", "he_uniform"], [522, 3, 1, "", "lecun_normal"], [523, 3, 1, "", "lecun_uniform"], [524, 3, 1, "", "normal"], [525, 3, 1, "", "ones"], [526, 3, 1, "", "orthogonal"], [527, 3, 1, "", "truncated_normal"], [528, 3, 1, "", "uniform"], [529, 3, 1, "", "variance_scaling"], [530, 3, 1, "", "zeros"]], "jax.numpy": [[553, 7, 1, "", "ComplexWarning"], [554, 3, 1, "", "abs"], [555, 3, 1, "", "absolute"], [556, 3, 1, "", "acos"], [557, 3, 1, "", "acosh"], [558, 4, 1, "", "add"], [559, 3, 1, "", "all"], [560, 3, 1, "", "allclose"], [561, 3, 1, "", "amax"], [562, 3, 1, "", "amin"], [563, 3, 1, "", "angle"], [564, 3, 1, "", "any"], [565, 3, 1, "", "append"], [566, 3, 1, "", "apply_along_axis"], [567, 3, 1, "", "apply_over_axes"], [568, 3, 1, "", "arange"], [569, 3, 1, "", "arccos"], [570, 3, 1, "", "arccosh"], [571, 3, 1, "", "arcsin"], [572, 3, 1, "", "arcsinh"], [573, 3, 1, "", "arctan"], [574, 3, 1, "", "arctan2"], [575, 3, 1, "", "arctanh"], [576, 3, 1, "", "argmax"], [577, 3, 1, "", "argmin"], [578, 3, 1, "", "argpartition"], [579, 3, 1, "", "argsort"], [580, 3, 1, "", "argwhere"], [581, 3, 1, "", "around"], [582, 3, 1, "", "array"], [583, 3, 1, "", "array_equal"], [584, 3, 1, "", "array_equiv"], [585, 3, 1, "", "array_repr"], [586, 3, 1, "", "array_split"], [587, 3, 1, "", "array_str"], [588, 3, 1, "", "asarray"], [589, 3, 1, "", "asin"], [590, 3, 1, "", "asinh"], [591, 3, 1, "", "astype"], [592, 3, 1, "", "atan"], [593, 3, 1, "", "atan2"], [594, 3, 1, "", "atanh"], [595, 3, 1, "", "atleast_1d"], [596, 3, 1, "", "atleast_2d"], [597, 3, 1, "", "atleast_3d"], [598, 3, 1, "", "average"], [599, 3, 1, "", "bartlett"], [600, 3, 1, "", "bincount"], [601, 4, 1, "", "bitwise_and"], [602, 3, 1, "", "bitwise_count"], [603, 3, 1, "", "bitwise_invert"], [604, 3, 1, "", "bitwise_left_shift"], [605, 3, 1, "", "bitwise_not"], [606, 4, 1, "", "bitwise_or"], [607, 3, 1, "", "bitwise_right_shift"], [608, 4, 1, "", "bitwise_xor"], [609, 3, 1, "", "blackman"], [610, 3, 1, "", "block"], [611, 6, 1, "", "bool_"], [612, 3, 1, "", "broadcast_arrays"], [613, 3, 1, "", "broadcast_shapes"], [614, 3, 1, "", "broadcast_to"], [615, 4, 1, "", "c_"], [616, 3, 1, "", "can_cast"], [617, 3, 1, "", "cbrt"], [618, 6, 1, "", "cdouble"], [619, 3, 1, "", "ceil"], [620, 0, 1, "", "character"], [621, 3, 1, "", "choose"], [622, 3, 1, "", "clip"], [623, 3, 1, "", "column_stack"], [624, 0, 1, "", "complex128"], [625, 0, 1, "", "complex64"], [626, 6, 1, "", "complex_"], [627, 0, 1, "", "complexfloating"], [628, 3, 1, "", "compress"], [629, 3, 1, "", "concat"], [630, 3, 1, "", "concatenate"], [631, 3, 1, "", "conj"], [632, 3, 1, "", "conjugate"], [633, 3, 1, "", "convolve"], [634, 3, 1, "", "copy"], [635, 3, 1, "", "copysign"], [636, 3, 1, "", "corrcoef"], [637, 3, 1, "", "correlate"], [638, 3, 1, "", "cos"], [639, 3, 1, "", "cosh"], [640, 3, 1, "", "count_nonzero"], [641, 3, 1, "", "cov"], [642, 3, 1, "", "cross"], [643, 6, 1, "", "csingle"], [644, 3, 1, "", "cumprod"], [645, 3, 1, "", "cumsum"], [646, 3, 1, "", "cumulative_prod"], [647, 3, 1, "", "cumulative_sum"], [648, 3, 1, "", "deg2rad"], [649, 3, 1, "", "degrees"], [650, 3, 1, "", "delete"], [651, 3, 1, "", "diag"], [652, 3, 1, "", "diag_indices"], [653, 3, 1, "", "diag_indices_from"], [654, 3, 1, "", "diagflat"], [655, 3, 1, "", "diagonal"], [656, 3, 1, "", "diff"], [657, 3, 1, "", "digitize"], [658, 3, 1, "", "divide"], [659, 3, 1, "", "divmod"], [660, 3, 1, "", "dot"], [661, 6, 1, "", "double"], [662, 3, 1, "", "dsplit"], [663, 3, 1, "", "dstack"], [664, 0, 1, "", "dtype"], [665, 3, 1, "", "ediff1d"], [666, 3, 1, "", "einsum"], [667, 3, 1, "", "einsum_path"], [668, 3, 1, "", "empty"], [669, 3, 1, "", "empty_like"], [670, 3, 1, "", "equal"], [671, 3, 1, "", "exp"], [672, 3, 1, "", "exp2"], [673, 3, 1, "", "expand_dims"], [674, 3, 1, "", "expm1"], [675, 3, 1, "", "extract"], [676, 3, 1, "", "eye"], [677, 3, 1, "", "fabs"], [1399, 5, 0, "-", "fft"], [696, 3, 1, "", "fill_diagonal"], [697, 0, 1, "", "finfo"], [698, 3, 1, "", "fix"], [699, 3, 1, "", "flatnonzero"], [700, 0, 1, "", "flexible"], [701, 3, 1, "", "flip"], [702, 3, 1, "", "fliplr"], [703, 3, 1, "", "flipud"], [704, 0, 1, "", "float16"], [705, 0, 1, "", "float32"], [706, 0, 1, "", "float64"], [707, 6, 1, "", "float_"], [708, 3, 1, "", "float_power"], [709, 0, 1, "", "floating"], [710, 3, 1, "", "floor"], [711, 3, 1, "", "floor_divide"], [712, 3, 1, "", "fmax"], [713, 3, 1, "", "fmin"], [714, 3, 1, "", "fmod"], [715, 3, 1, "", "frexp"], [716, 3, 1, "", "from_dlpack"], [717, 3, 1, "", "frombuffer"], [718, 3, 1, "", "fromfile"], [719, 3, 1, "", "fromfunction"], [720, 3, 1, "", "fromiter"], [721, 3, 1, "", "frompyfunc"], [722, 3, 1, "", "fromstring"], [723, 3, 1, "", "full"], [724, 3, 1, "", "full_like"], [725, 3, 1, "", "gcd"], [726, 0, 1, "", "generic"], [727, 3, 1, "", "geomspace"], [728, 3, 1, "", "get_printoptions"], [729, 3, 1, "", "gradient"], [730, 3, 1, "", "greater"], [731, 3, 1, "", "greater_equal"], [732, 3, 1, "", "hamming"], [733, 3, 1, "", "hanning"], [734, 3, 1, "", "heaviside"], [735, 3, 1, "", "histogram"], [736, 3, 1, "", "histogram2d"], [737, 3, 1, "", "histogram_bin_edges"], [738, 3, 1, "", "histogramdd"], [739, 3, 1, "", "hsplit"], [740, 3, 1, "", "hstack"], [741, 3, 1, "", "hypot"], [742, 3, 1, "", "i0"], [743, 3, 1, "", "identity"], [744, 0, 1, "", "iinfo"], [745, 3, 1, "", "imag"], [746, 4, 1, "", "index_exp"], [747, 3, 1, "", "indices"], [748, 0, 1, "", "inexact"], [749, 3, 1, "", "inner"], [750, 3, 1, "", "insert"], [751, 0, 1, "", "int16"], [752, 0, 1, "", "int32"], [753, 0, 1, "", "int64"], [754, 0, 1, "", "int8"], [755, 6, 1, "", "int_"], [756, 0, 1, "", "integer"], [757, 3, 1, "", "interp"], [758, 3, 1, "", "intersect1d"], [759, 3, 1, "", "invert"], [760, 3, 1, "", "isclose"], [761, 3, 1, "", "iscomplex"], [762, 3, 1, "", "iscomplexobj"], [763, 3, 1, "", "isdtype"], [764, 3, 1, "", "isfinite"], [765, 3, 1, "", "isin"], [766, 3, 1, "", "isinf"], [767, 3, 1, "", "isnan"], [768, 3, 1, "", "isneginf"], [769, 3, 1, "", "isposinf"], [770, 3, 1, "", "isreal"], [771, 3, 1, "", "isrealobj"], [772, 3, 1, "", "isscalar"], [773, 3, 1, "", "issubdtype"], [774, 3, 1, "", "iterable"], [775, 3, 1, "", "ix_"], [776, 3, 1, "", "kaiser"], [777, 3, 1, "", "kron"], [778, 3, 1, "", "lcm"], [779, 3, 1, "", "ldexp"], [780, 3, 1, "", "left_shift"], [781, 3, 1, "", "less"], [782, 3, 1, "", "less_equal"], [783, 3, 1, "", "lexsort"], [1399, 5, 0, "-", "linalg"], [815, 3, 1, "", "linspace"], [816, 3, 1, "", "load"], [817, 3, 1, "", "log"], [818, 3, 1, "", "log10"], [819, 3, 1, "", "log1p"], [820, 3, 1, "", "log2"], [821, 4, 1, "", "logaddexp"], [822, 4, 1, "", "logaddexp2"], [823, 4, 1, "", "logical_and"], [824, 3, 1, "", "logical_not"], [825, 4, 1, "", "logical_or"], [826, 4, 1, "", "logical_xor"], [827, 3, 1, "", "logspace"], [828, 3, 1, "", "mask_indices"], [829, 3, 1, "", "matmul"], [830, 3, 1, "", "matrix_transpose"], [831, 3, 1, "", "matvec"], [832, 3, 1, "", "max"], [833, 4, 1, "", "maximum"], [834, 3, 1, "", "mean"], [835, 3, 1, "", "median"], [836, 3, 1, "", "meshgrid"], [837, 4, 1, "", "mgrid"], [838, 3, 1, "", "min"], [839, 4, 1, "", "minimum"], [840, 3, 1, "", "mod"], [841, 3, 1, "", "modf"], [842, 3, 1, "", "moveaxis"], [843, 4, 1, "", "multiply"], [844, 3, 1, "", "nan_to_num"], [845, 3, 1, "", "nanargmax"], [846, 3, 1, "", "nanargmin"], [847, 3, 1, "", "nancumprod"], [848, 3, 1, "", "nancumsum"], [849, 3, 1, "", "nanmax"], [850, 3, 1, "", "nanmean"], [851, 3, 1, "", "nanmedian"], [852, 3, 1, "", "nanmin"], [853, 3, 1, "", "nanpercentile"], [854, 3, 1, "", "nanprod"], [855, 3, 1, "", "nanquantile"], [856, 3, 1, "", "nanstd"], [857, 3, 1, "", "nansum"], [858, 3, 1, "", "nanvar"], [859, 6, 1, "", "ndarray"], [861, 3, 1, "", "ndim"], [862, 4, 1, "", "negative"], [863, 3, 1, "", "nextafter"], [864, 3, 1, "", "nonzero"], [865, 3, 1, "", "not_equal"], [866, 0, 1, "", "number"], [867, 0, 1, "", "object_"], [868, 4, 1, "", "ogrid"], [869, 3, 1, "", "ones"], [870, 3, 1, "", "ones_like"], [871, 3, 1, "", "outer"], [872, 3, 1, "", "packbits"], [873, 3, 1, "", "pad"], [874, 3, 1, "", "partition"], [875, 3, 1, "", "percentile"], [876, 3, 1, "", "permute_dims"], [877, 3, 1, "", "piecewise"], [878, 3, 1, "", "place"], [879, 3, 1, "", "poly"], [880, 3, 1, "", "polyadd"], [881, 3, 1, "", "polyder"], [882, 3, 1, "", "polydiv"], [883, 3, 1, "", "polyfit"], [884, 3, 1, "", "polyint"], [885, 3, 1, "", "polymul"], [886, 3, 1, "", "polysub"], [887, 3, 1, "", "polyval"], [888, 3, 1, "", "positive"], [889, 3, 1, "", "pow"], [890, 3, 1, "", "power"], [891, 3, 1, "", "printoptions"], [892, 3, 1, "", "prod"], [893, 3, 1, "", "promote_types"], [894, 3, 1, "", "ptp"], [895, 3, 1, "", "put"], [896, 3, 1, "", "put_along_axis"], [897, 3, 1, "", "quantile"], [898, 4, 1, "", "r_"], [899, 3, 1, "", "rad2deg"], [900, 3, 1, "", "radians"], [901, 3, 1, "", "ravel"], [902, 3, 1, "", "ravel_multi_index"], [903, 3, 1, "", "real"], [904, 3, 1, "", "reciprocal"], [905, 3, 1, "", "remainder"], [906, 3, 1, "", "repeat"], [907, 3, 1, "", "reshape"], [908, 3, 1, "", "resize"], [909, 3, 1, "", "result_type"], [910, 3, 1, "", "right_shift"], [911, 3, 1, "", "rint"], [912, 3, 1, "", "roll"], [913, 3, 1, "", "rollaxis"], [914, 3, 1, "", "roots"], [915, 3, 1, "", "rot90"], [916, 3, 1, "", "round"], [917, 4, 1, "", "s_"], [918, 3, 1, "", "save"], [919, 3, 1, "", "savez"], [920, 3, 1, "", "searchsorted"], [921, 3, 1, "", "select"], [922, 3, 1, "", "set_printoptions"], [923, 3, 1, "", "setdiff1d"], [924, 3, 1, "", "setxor1d"], [925, 3, 1, "", "shape"], [926, 3, 1, "", "sign"], [927, 3, 1, "", "signbit"], [928, 0, 1, "", "signedinteger"], [929, 3, 1, "", "sin"], [930, 3, 1, "", "sinc"], [931, 6, 1, "", "single"], [932, 3, 1, "", "sinh"], [933, 3, 1, "", "size"], [934, 3, 1, "", "sort"], [935, 3, 1, "", "sort_complex"], [936, 3, 1, "", "spacing"], [937, 3, 1, "", "split"], [938, 3, 1, "", "sqrt"], [939, 3, 1, "", "square"], [940, 3, 1, "", "squeeze"], [941, 3, 1, "", "stack"], [942, 3, 1, "", "std"], [943, 4, 1, "", "subtract"], [944, 3, 1, "", "sum"], [945, 3, 1, "", "swapaxes"], [946, 3, 1, "", "take"], [947, 3, 1, "", "take_along_axis"], [948, 3, 1, "", "tan"], [949, 3, 1, "", "tanh"], [950, 3, 1, "", "tensordot"], [951, 3, 1, "", "tile"], [952, 3, 1, "", "trace"], [953, 3, 1, "", "transpose"], [954, 3, 1, "", "trapezoid"], [955, 3, 1, "", "tri"], [956, 3, 1, "", "tril"], [957, 3, 1, "", "tril_indices"], [958, 3, 1, "", "tril_indices_from"], [959, 3, 1, "", "trim_zeros"], [960, 3, 1, "", "triu"], [961, 3, 1, "", "triu_indices"], [962, 3, 1, "", "triu_indices_from"], [963, 3, 1, "", "true_divide"], [964, 3, 1, "", "trunc"], [965, 0, 1, "", "ufunc"], [966, 6, 1, "", "uint"], [967, 0, 1, "", "uint16"], [968, 0, 1, "", "uint32"], [969, 0, 1, "", "uint64"], [970, 0, 1, "", "uint8"], [971, 3, 1, "", "union1d"], [972, 3, 1, "", "unique"], [973, 3, 1, "", "unique_all"], [974, 3, 1, "", "unique_counts"], [975, 3, 1, "", "unique_inverse"], [976, 3, 1, "", "unique_values"], [977, 3, 1, "", "unpackbits"], [978, 3, 1, "", "unravel_index"], [979, 0, 1, "", "unsignedinteger"], [980, 3, 1, "", "unstack"], [981, 3, 1, "", "unwrap"], [982, 3, 1, "", "vander"], [983, 3, 1, "", "var"], [984, 3, 1, "", "vdot"], [985, 3, 1, "", "vecdot"], [986, 3, 1, "", "vecmat"], [987, 3, 1, "", "vectorize"], [988, 3, 1, "", "vsplit"], [989, 3, 1, "", "vstack"], [990, 3, 1, "", "where"], [991, 3, 1, "", "zeros"], [992, 3, 1, "", "zeros_like"]], "jax.numpy.character": [[620, 2, 1, "", "__init__"]], "jax.numpy.complex128": [[624, 2, 1, "", "__init__"]], "jax.numpy.complex64": [[625, 2, 1, "", "__init__"]], "jax.numpy.complexfloating": [[627, 2, 1, "", "__init__"]], "jax.numpy.dtype": [[664, 2, 1, "", "__init__"]], "jax.numpy.fft": [[678, 3, 1, "", "fft"], [679, 3, 1, "", "fft2"], [680, 3, 1, "", "fftfreq"], [681, 3, 1, "", "fftn"], [682, 3, 1, "", "fftshift"], [683, 3, 1, "", "hfft"], [684, 3, 1, "", "ifft"], [685, 3, 1, "", "ifft2"], [686, 3, 1, "", "ifftn"], [687, 3, 1, "", "ifftshift"], [688, 3, 1, "", "ihfft"], [689, 3, 1, "", "irfft"], [690, 3, 1, "", "irfft2"], [691, 3, 1, "", "irfftn"], [692, 3, 1, "", "rfft"], [693, 3, 1, "", "rfft2"], [694, 3, 1, "", "rfftfreq"], [695, 3, 1, "", "rfftn"]], "jax.numpy.finfo": [[697, 2, 1, "", "__init__"], [697, 6, 1, "", "bits"], [697, 6, 1, "", "dtype"], [697, 6, 1, "", "eps"], [697, 6, 1, "", "epsneg"], [697, 6, 1, "", "iexp"], [697, 6, 1, "", "machep"], [697, 6, 1, "", "max"], [697, 6, 1, "", "maxexp"], [697, 6, 1, "", "min"], [697, 6, 1, "", "minexp"], [697, 6, 1, "", "negep"], [697, 6, 1, "", "nexp"], [697, 6, 1, "", "nmant"], [697, 6, 1, "", "precision"], [697, 6, 1, "", "resolution"], [697, 6, 1, "", "smallest_normal"], [697, 6, 1, "", "smallest_subnormal"], [697, 6, 1, "", "tiny"]], "jax.numpy.flexible": [[700, 2, 1, "", "__init__"]], "jax.numpy.float16": [[704, 2, 1, "", "__init__"]], "jax.numpy.float32": [[705, 2, 1, "", "__init__"]], "jax.numpy.float64": [[706, 2, 1, "", "__init__"]], "jax.numpy.floating": [[709, 2, 1, "", "__init__"]], "jax.numpy.generic": [[726, 2, 1, "", "__init__"]], "jax.numpy.iinfo": [[744, 2, 1, "", "__init__"]], "jax.numpy.inexact": [[748, 2, 1, "", "__init__"]], "jax.numpy.int16": [[751, 2, 1, "", "__init__"]], "jax.numpy.int32": [[752, 2, 1, "", "__init__"]], "jax.numpy.int64": [[753, 2, 1, "", "__init__"]], "jax.numpy.int8": [[754, 2, 1, "", "__init__"]], "jax.numpy.integer": [[756, 2, 1, "", "__init__"]], "jax.numpy.linalg": [[784, 3, 1, "", "cholesky"], [785, 3, 1, "", "cond"], [786, 3, 1, "", "cross"], [787, 3, 1, "", "det"], [788, 3, 1, "", "diagonal"], [789, 3, 1, "", "eig"], [790, 3, 1, "", "eigh"], [791, 3, 1, "", "eigvals"], [792, 3, 1, "", "eigvalsh"], [793, 3, 1, "", "inv"], [794, 3, 1, "", "lstsq"], [795, 3, 1, "", "matmul"], [796, 3, 1, "", "matrix_norm"], [797, 3, 1, "", "matrix_power"], [798, 3, 1, "", "matrix_rank"], [799, 3, 1, "", "matrix_transpose"], [800, 3, 1, "", "multi_dot"], [801, 3, 1, "", "norm"], [802, 3, 1, "", "outer"], [803, 3, 1, "", "pinv"], [804, 3, 1, "", "qr"], [805, 3, 1, "", "slogdet"], [806, 3, 1, "", "solve"], [807, 3, 1, "", "svd"], [808, 3, 1, "", "svdvals"], [809, 3, 1, "", "tensordot"], [810, 3, 1, "", "tensorinv"], [811, 3, 1, "", "tensorsolve"], [812, 3, 1, "", "trace"], [813, 3, 1, "", "vecdot"], [814, 3, 1, "", "vector_norm"]], "jax.numpy.ndarray": [[860, 1, 1, "", "at"]], "jax.numpy.number": [[866, 2, 1, "", "__init__"]], "jax.numpy.object_": [[867, 2, 1, "", "__init__"]], "jax.numpy.signedinteger": [[928, 2, 1, "", "__init__"]], "jax.numpy.ufunc": [[965, 2, 1, "", "__init__"]], "jax.numpy.uint16": [[967, 2, 1, "", "__init__"]], "jax.numpy.uint32": [[968, 2, 1, "", "__init__"]], "jax.numpy.uint64": [[969, 2, 1, "", "__init__"]], "jax.numpy.uint8": [[970, 2, 1, "", "__init__"]], "jax.numpy.unsignedinteger": [[979, 2, 1, "", "__init__"]], "jax.ops": [[994, 3, 1, "", "segment_max"], [995, 3, 1, "", "segment_min"], [996, 3, 1, "", "segment_prod"], [997, 3, 1, "", "segment_sum"]], "jax.profiler": [[1003, 0, 1, "", "StepTraceAnnotation"], [1004, 0, 1, "", "TraceAnnotation"], [1005, 3, 1, "", "annotate_function"], [1006, 3, 1, "", "device_memory_profile"], [1007, 3, 1, "", "save_device_memory_profile"], [1008, 3, 1, "", "start_server"], [1009, 3, 1, "", "start_trace"], [1010, 3, 1, "", "stop_trace"], [1011, 3, 1, "", "trace"]], "jax.profiler.StepTraceAnnotation": [[1003, 2, 1, "", "__init__"]], "jax.profiler.TraceAnnotation": [[1004, 2, 1, "", "__init__"]], "jax.random": [[1013, 3, 1, "", "PRNGKey"], [1014, 3, 1, "", "ball"], [1015, 3, 1, "", "bernoulli"], [1016, 3, 1, "", "beta"], [1017, 3, 1, "", "binomial"], [1018, 3, 1, "", "bits"], [1019, 3, 1, "", "categorical"], [1020, 3, 1, "", "cauchy"], [1021, 3, 1, "", "chisquare"], [1022, 3, 1, "", "choice"], [1023, 3, 1, "", "clone"], [1024, 3, 1, "", "dirichlet"], [1025, 3, 1, "", "double_sided_maxwell"], [1026, 3, 1, "", "exponential"], [1027, 3, 1, "", "f"], [1028, 3, 1, "", "fold_in"], [1029, 3, 1, "", "gamma"], [1030, 3, 1, "", "generalized_normal"], [1031, 3, 1, "", "geometric"], [1032, 3, 1, "", "gumbel"], [1033, 3, 1, "", "key"], [1034, 3, 1, "", "key_data"], [1035, 3, 1, "", "laplace"], [1036, 3, 1, "", "loggamma"], [1037, 3, 1, "", "logistic"], [1038, 3, 1, "", "lognormal"], [1039, 3, 1, "", "maxwell"], [1040, 3, 1, "", "multinomial"], [1041, 3, 1, "", "multivariate_normal"], [1042, 3, 1, "", "normal"], [1043, 3, 1, "", "orthogonal"], [1044, 3, 1, "", "pareto"], [1045, 3, 1, "", "permutation"], [1046, 3, 1, "", "poisson"], [1047, 3, 1, "", "rademacher"], [1048, 3, 1, "", "randint"], [1049, 3, 1, "", "rayleigh"], [1050, 3, 1, "", "split"], [1051, 3, 1, "", "t"], [1052, 3, 1, "", "triangular"], [1053, 3, 1, "", "truncated_normal"], [1054, 3, 1, "", "uniform"], [1055, 3, 1, "", "wald"], [1056, 3, 1, "", "weibull_min"], [1057, 3, 1, "", "wrap_key_data"]], "jax.scipy": [[1403, 5, 0, "-", "fft"], [1403, 5, 0, "-", "integrate"], [1403, 5, 0, "-", "interpolate"], [1403, 5, 0, "-", "linalg"], [1403, 5, 0, "-", "ndimage"], [1403, 5, 0, "-", "optimize"], [1403, 5, 0, "-", "signal"], [1403, 5, 0, "-", "special"], [1403, 5, 0, "-", "stats"]], "jax.scipy.cluster": [[1403, 5, 0, "-", "vq"]], "jax.scipy.cluster.vq": [[1058, 3, 1, "", "vq"]], "jax.scipy.fft": [[1059, 3, 1, "", "dct"], [1060, 3, 1, "", "dctn"], [1061, 3, 1, "", "idct"], [1062, 3, 1, "", "idctn"]], "jax.scipy.integrate": [[1063, 3, 1, "", "trapezoid"]], "jax.scipy.interpolate": [[1064, 0, 1, "", "RegularGridInterpolator"]], "jax.scipy.interpolate.RegularGridInterpolator": [[1064, 2, 1, "", "__init__"]], "jax.scipy.linalg": [[1065, 3, 1, "", "block_diag"], [1066, 3, 1, "", "cho_factor"], [1067, 3, 1, "", "cho_solve"], [1068, 3, 1, "", "cholesky"], [1069, 3, 1, "", "det"], [1070, 3, 1, "", "eigh"], [1071, 3, 1, "", "eigh_tridiagonal"], [1072, 3, 1, "", "expm"], [1073, 3, 1, "", "expm_frechet"], [1074, 3, 1, "", "funm"], [1075, 3, 1, "", "hessenberg"], [1076, 3, 1, "", "hilbert"], [1077, 3, 1, "", "inv"], [1078, 3, 1, "", "lu"], [1079, 3, 1, "", "lu_factor"], [1080, 3, 1, "", "lu_solve"], [1081, 3, 1, "", "pascal"], [1082, 3, 1, "", "polar"], [1083, 3, 1, "", "qr"], [1084, 3, 1, "", "rsf2csf"], [1085, 3, 1, "", "schur"], [1086, 3, 1, "", "solve"], [1087, 3, 1, "", "solve_triangular"], [1088, 3, 1, "", "sqrtm"], [1089, 3, 1, "", "svd"], [1090, 3, 1, "", "toeplitz"]], "jax.scipy.ndimage": [[1091, 3, 1, "", "map_coordinates"]], "jax.scipy.optimize": [[1092, 0, 1, "", "OptimizeResults"], [1093, 3, 1, "", "minimize"]], "jax.scipy.optimize.OptimizeResults": [[1092, 2, 1, "", "__init__"]], "jax.scipy.signal": [[1094, 3, 1, "", "convolve"], [1095, 3, 1, "", "convolve2d"], [1096, 3, 1, "", "correlate"], [1097, 3, 1, "", "correlate2d"], [1098, 3, 1, "", "csd"], [1099, 3, 1, "", "detrend"], [1100, 3, 1, "", "fftconvolve"], [1101, 3, 1, "", "istft"], [1102, 3, 1, "", "stft"], [1103, 3, 1, "", "welch"]], "jax.scipy.sparse": [[1403, 5, 0, "-", "linalg"]], "jax.scipy.sparse.linalg": [[1104, 3, 1, "", "bicgstab"], [1105, 3, 1, "", "cg"], [1106, 3, 1, "", "gmres"]], "jax.scipy.spatial": [[1403, 5, 0, "-", "transform"]], "jax.scipy.spatial.transform": [[1107, 0, 1, "", "Rotation"], [1108, 0, 1, "", "Slerp"]], "jax.scipy.spatial.transform.Rotation": [[1107, 2, 1, "", "__init__"]], "jax.scipy.spatial.transform.Slerp": [[1108, 2, 1, "", "__init__"]], "jax.scipy.special": [[1109, 3, 1, "", "bernoulli"], [1110, 3, 1, "", "beta"], [1111, 3, 1, "", "betainc"], [1112, 3, 1, "", "betaln"], [1113, 3, 1, "", "digamma"], [1114, 3, 1, "", "entr"], [1115, 3, 1, "", "erf"], [1116, 3, 1, "", "erfc"], [1117, 3, 1, "", "erfinv"], [1118, 3, 1, "", "exp1"], [1119, 4, 1, "", "expi"], [1120, 3, 1, "", "expit"], [1121, 4, 1, "", "expn"], [1122, 3, 1, "", "factorial"], [1123, 4, 1, "", "fresnel"], [1124, 3, 1, "", "gamma"], [1125, 3, 1, "", "gammainc"], [1126, 3, 1, "", "gammaincc"], [1127, 3, 1, "", "gammaln"], [1128, 3, 1, "", "gammasgn"], [1129, 4, 1, "", "hyp1f1"], [1130, 3, 1, "", "i0"], [1131, 3, 1, "", "i0e"], [1132, 3, 1, "", "i1"], [1133, 3, 1, "", "i1e"], [1134, 3, 1, "", "kl_div"], [1135, 4, 1, "", "log_ndtr"], [1136, 3, 1, "", "log_softmax"], [1137, 4, 1, "", "logit"], [1138, 3, 1, "", "logsumexp"], [1139, 3, 1, "", "lpmn"], [1140, 3, 1, "", "lpmn_values"], [1141, 3, 1, "", "multigammaln"], [1142, 3, 1, "", "ndtr"], [1143, 3, 1, "", "ndtri"], [1144, 4, 1, "", "poch"], [1145, 3, 1, "", "polygamma"], [1146, 3, 1, "", "rel_entr"], [1147, 3, 1, "", "softmax"], [1148, 3, 1, "", "spence"], [1149, 3, 1, "", "sph_harm"], [1150, 4, 1, "", "xlog1py"], [1151, 4, 1, "", "xlogy"], [1152, 4, 1, "", "zeta"]], "jax.scipy.stats": [[1403, 5, 0, "-", "bernoulli"], [1403, 5, 0, "-", "beta"], [1403, 5, 0, "-", "betabinom"], [1403, 5, 0, "-", "binom"], [1403, 5, 0, "-", "cauchy"], [1403, 5, 0, "-", "chi2"], [1403, 5, 0, "-", "dirichlet"], [1403, 5, 0, "-", "expon"], [1403, 5, 0, "-", "gamma"], [1196, 0, 1, "", "gaussian_kde"], [1403, 5, 0, "-", "gennorm"], [1403, 5, 0, "-", "geom"], [1403, 5, 0, "-", "laplace"], [1403, 5, 0, "-", "logistic"], [1218, 3, 1, "", "mode"], [1403, 5, 0, "-", "multinomial"], [1403, 5, 0, "-", "multivariate_normal"], [1403, 5, 0, "-", "nbinom"], [1403, 5, 0, "-", "norm"], [1403, 5, 0, "-", "pareto"], [1403, 5, 0, "-", "poisson"], [1238, 3, 1, "", "rankdata"], [1239, 3, 1, "", "sem"], [1403, 5, 0, "-", "t"], [1403, 5, 0, "-", "truncnorm"], [1403, 5, 0, "-", "uniform"], [1403, 5, 0, "-", "vonmises"], [1403, 5, 0, "-", "wrapcauchy"]], "jax.scipy.stats.bernoulli": [[1153, 3, 1, "", "cdf"], [1154, 3, 1, "", "logpmf"], [1155, 3, 1, "", "pmf"], [1156, 3, 1, "", "ppf"]], "jax.scipy.stats.beta": [[1157, 3, 1, "", "cdf"], [1158, 3, 1, "", "logcdf"], [1159, 3, 1, "", "logpdf"], [1160, 3, 1, "", "logsf"], [1161, 3, 1, "", "pdf"], [1162, 3, 1, "", "sf"]], "jax.scipy.stats.betabinom": [[1163, 3, 1, "", "logpmf"], [1164, 3, 1, "", "pmf"]], "jax.scipy.stats.binom": [[1165, 3, 1, "", "logpmf"], [1166, 3, 1, "", "pmf"]], "jax.scipy.stats.cauchy": [[1167, 3, 1, "", "cdf"], [1168, 3, 1, "", "isf"], [1169, 3, 1, "", "logcdf"], [1170, 3, 1, "", "logpdf"], [1171, 3, 1, "", "logsf"], [1172, 3, 1, "", "pdf"], [1173, 3, 1, "", "ppf"], [1174, 3, 1, "", "sf"]], "jax.scipy.stats.chi2": [[1175, 3, 1, "", "cdf"], [1176, 3, 1, "", "logcdf"], [1177, 3, 1, "", "logpdf"], [1178, 3, 1, "", "logsf"], [1179, 3, 1, "", "pdf"], [1180, 3, 1, "", "sf"]], "jax.scipy.stats.dirichlet": [[1181, 3, 1, "", "logpdf"], [1182, 3, 1, "", "pdf"]], "jax.scipy.stats.expon": [[1183, 3, 1, "", "cdf"], [1184, 3, 1, "", "logcdf"], [1185, 3, 1, "", "logpdf"], [1186, 3, 1, "", "logsf"], [1187, 3, 1, "", "pdf"], [1188, 3, 1, "", "ppf"], [1189, 3, 1, "", "sf"]], "jax.scipy.stats.gamma": [[1190, 3, 1, "", "cdf"], [1191, 3, 1, "", "logcdf"], [1192, 3, 1, "", "logpdf"], [1193, 3, 1, "", "logsf"], [1194, 3, 1, "", "pdf"], [1195, 3, 1, "", "sf"]], "jax.scipy.stats.gaussian_kde": [[1196, 2, 1, "", "__init__"], [1197, 2, 1, "", "evaluate"], [1198, 2, 1, "", "integrate_box_1d"], [1199, 2, 1, "", "integrate_gaussian"], [1200, 2, 1, "", "integrate_kde"], [1201, 2, 1, "", "logpdf"], [1202, 2, 1, "", "pdf"], [1203, 2, 1, "", "resample"]], "jax.scipy.stats.gennorm": [[1204, 3, 1, "", "cdf"], [1205, 3, 1, "", "logpdf"], [1206, 3, 1, "", "pdf"]], "jax.scipy.stats.geom": [[1207, 3, 1, "", "logpmf"], [1208, 3, 1, "", "pmf"]], "jax.scipy.stats.laplace": [[1209, 3, 1, "", "cdf"], [1210, 3, 1, "", "logpdf"], [1211, 3, 1, "", "pdf"]], "jax.scipy.stats.logistic": [[1212, 3, 1, "", "cdf"], [1213, 3, 1, "", "isf"], [1214, 3, 1, "", "logpdf"], [1215, 3, 1, "", "pdf"], [1216, 3, 1, "", "ppf"], [1217, 3, 1, "", "sf"]], "jax.scipy.stats.multinomial": [[1219, 3, 1, "", "logpmf"], [1220, 3, 1, "", "pmf"]], "jax.scipy.stats.multivariate_normal": [[1221, 3, 1, "", "logpdf"], [1222, 3, 1, "", "pdf"]], "jax.scipy.stats.nbinom": [[1223, 3, 1, "", "logpmf"], [1224, 3, 1, "", "pmf"]], "jax.scipy.stats.norm": [[1225, 3, 1, "", "cdf"], [1226, 3, 1, "", "isf"], [1227, 3, 1, "", "logcdf"], [1228, 3, 1, "", "logpdf"], [1229, 3, 1, "", "logsf"], [1230, 3, 1, "", "pdf"], [1231, 3, 1, "", "ppf"], [1232, 3, 1, "", "sf"]], "jax.scipy.stats.pareto": [[1233, 3, 1, "", "logpdf"], [1234, 3, 1, "", "pdf"]], "jax.scipy.stats.poisson": [[1235, 3, 1, "", "cdf"], [1236, 3, 1, "", "logpmf"], [1237, 3, 1, "", "pmf"]], "jax.scipy.stats.t": [[1240, 3, 1, "", "logpdf"], [1241, 3, 1, "", "pdf"]], "jax.scipy.stats.truncnorm": [[1242, 3, 1, "", "cdf"], [1243, 3, 1, "", "logcdf"], [1244, 3, 1, "", "logpdf"], [1245, 3, 1, "", "logsf"], [1246, 3, 1, "", "pdf"], [1247, 3, 1, "", "sf"]], "jax.scipy.stats.uniform": [[1248, 3, 1, "", "cdf"], [1249, 3, 1, "", "logpdf"], [1250, 3, 1, "", "pdf"], [1251, 3, 1, "", "ppf"]], "jax.scipy.stats.vonmises": [[1252, 3, 1, "", "logpdf"], [1253, 3, 1, "", "pdf"]], "jax.scipy.stats.wrapcauchy": [[1254, 3, 1, "", "logpdf"], [1255, 3, 1, "", "pdf"]], "jax.sharding": [[1404, 0, 1, "", "Mesh"], [1404, 0, 1, "", "NamedSharding"], [1404, 0, 1, "", "PartitionSpec"], [1404, 0, 1, "", "PmapSharding"], [1404, 0, 1, "", "Sharding"], [1404, 0, 1, "", "SingleDeviceSharding"]], "jax.sharding.NamedSharding": [[1404, 1, 1, "", "addressable_devices"], [1404, 1, 1, "", "device_set"], [1404, 1, 1, "", "is_fully_addressable"], [1404, 1, 1, "", "is_fully_replicated"], [1404, 1, 1, "", "memory_kind"], [1404, 1, 1, "", "mesh"], [1404, 1, 1, "", "num_devices"], [1404, 1, 1, "", "spec"], [1404, 2, 1, "", "with_memory_kind"]], "jax.sharding.PartitionSpec": [[1404, 1, 1, "", "reduced"], [1404, 1, 1, "", "unreduced"]], "jax.sharding.PmapSharding": [[1404, 2, 1, "", "default"], [1404, 1, 1, "", "device_set"], [1404, 1, 1, "", "devices"], [1404, 2, 1, "", "devices_indices_map"], [1404, 2, 1, "", "is_equivalent_to"], [1404, 1, 1, "", "is_fully_addressable"], [1404, 1, 1, "", "is_fully_replicated"], [1404, 1, 1, "", "memory_kind"], [1404, 1, 1, "", "num_devices"], [1404, 2, 1, "", "shard_shape"], [1404, 1, 1, "", "sharding_spec"], [1404, 2, 1, "", "with_memory_kind"]], "jax.sharding.Sharding": [[1404, 1, 1, "", "addressable_devices"], [1404, 2, 1, "", "addressable_devices_indices_map"], [1404, 1, 1, "", "device_set"], [1404, 2, 1, "", "devices_indices_map"], [1404, 2, 1, "", "is_equivalent_to"], [1404, 1, 1, "", "is_fully_addressable"], [1404, 1, 1, "", "is_fully_replicated"], [1404, 1, 1, "", "memory_kind"], [1404, 1, 1, "", "num_devices"], [1404, 2, 1, "", "shard_shape"], [1404, 2, 1, "", "with_memory_kind"]], "jax.sharding.SingleDeviceSharding": [[1404, 1, 1, "", "device_set"], [1404, 2, 1, "", "devices_indices_map"], [1404, 1, 1, "", "is_fully_addressable"], [1404, 1, 1, "", "is_fully_replicated"], [1404, 1, 1, "", "memory_kind"], [1404, 1, 1, "", "num_devices"], [1404, 2, 1, "", "with_memory_kind"]], "jax.stages": [[1405, 0, 1, "", "Compiled"], [1405, 0, 1, "", "Lowered"], [1405, 0, 1, "", "Traced"], [1405, 0, 1, "", "Wrapped"]], "jax.stages.Compiled": [[1405, 2, 1, "", "__call__"], [1405, 2, 1, "", "as_text"], [1405, 2, 1, "", "cost_analysis"], [1405, 1, 1, "", "in_tree"], [1405, 2, 1, "", "memory_analysis"], [1405, 2, 1, "", "runtime_executable"]], "jax.stages.Lowered": [[1405, 2, 1, "", "as_text"], [1405, 2, 1, "", "compile"], [1405, 2, 1, "", "compiler_ir"], [1405, 2, 1, "", "cost_analysis"], [1405, 1, 1, "", "in_tree"]], "jax.stages.Traced": [[1405, 2, 1, "", "lower"]], "jax.stages.Wrapped": [[1405, 2, 1, "", "__call__"], [1405, 2, 1, "", "lower"], [1405, 2, 1, "", "trace"]], "jax.test_util": [[1257, 3, 1, "", "check_grads"], [1258, 3, 1, "", "check_jvp"], [1259, 3, 1, "", "check_vjp"]], "jax.tree": [[1261, 3, 1, "", "all"], [1262, 3, 1, "", "broadcast"], [1263, 3, 1, "", "flatten"], [1264, 3, 1, "", "flatten_with_path"], [1265, 3, 1, "", "leaves"], [1266, 3, 1, "", "leaves_with_path"], [1267, 3, 1, "", "map"], [1268, 3, 1, "", "map_with_path"], [1269, 3, 1, "", "reduce"], [1270, 3, 1, "", "structure"], [1271, 3, 1, "", "transpose"], [1272, 3, 1, "", "unflatten"]], "jax.tree_util": [[1273, 4, 1, "", "KeyEntry"], [1274, 4, 1, "", "KeyPath"], [1275, 0, 1, "", "Partial"], [1276, 3, 1, "", "all_leaves"], [1277, 3, 1, "", "build_tree"], [1278, 3, 1, "", "keystr"], [1279, 3, 1, "", "register_dataclass"], [1280, 3, 1, "", "register_pytree_node"], [1281, 3, 1, "", "register_pytree_node_class"], [1282, 3, 1, "", "register_pytree_with_keys"], [1283, 3, 1, "", "register_pytree_with_keys_class"], [1284, 3, 1, "", "register_static"], [1285, 3, 1, "", "tree_all"], [1286, 3, 1, "", "tree_broadcast"], [1287, 3, 1, "", "tree_flatten"], [1288, 3, 1, "", "tree_flatten_with_path"], [1289, 3, 1, "", "tree_leaves"], [1290, 3, 1, "", "tree_leaves_with_path"], [1291, 3, 1, "", "tree_map"], [1292, 3, 1, "", "tree_map_with_path"], [1293, 3, 1, "", "tree_reduce"], [1294, 3, 1, "", "tree_structure"], [1295, 3, 1, "", "tree_transpose"], [1296, 3, 1, "", "tree_unflatten"], [1297, 3, 1, "", "treedef_children"], [1298, 3, 1, "", "treedef_is_leaf"], [1299, 3, 1, "", "treedef_tuple"]], "jax.tree_util.Partial": [[1275, 2, 1, "", "__init__"]], "jax.typing": [[1300, 4, 1, "", "ArrayLike"], [1301, 4, 1, "", "DTypeLike"]], "jaxlib.xla_client": [[1305, 3, 1, "", "register_custom_call_target"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "module", "Python module"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:module", "6": "py:attribute", "7": "py:exception"}, "terms": {"": [13, 18, 67, 69, 76, 77, 80, 81, 82, 84, 86, 96, 98, 113, 114, 132, 136, 137, 140, 174, 194, 206, 234, 240, 249, 262, 283, 289, 290, 293, 295, 296, 303, 304, 311, 327, 338, 339, 343, 357, 360, 361, 363, 366, 378, 381, 390, 415, 422, 423, 425, 426, 427, 431, 432, 433, 434, 435, 439, 444, 447, 449, 450, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 471, 473, 481, 485, 486, 493, 499, 500, 501, 502, 506, 516, 524, 527, 528, 568, 579, 582, 588, 610, 615, 642, 664, 665, 679, 680, 681, 685, 686, 690, 691, 693, 694, 695, 696, 697, 717, 719, 728, 746, 772, 773, 793, 794, 800, 805, 807, 862, 864, 877, 878, 882, 883, 884, 885, 891, 892, 893, 895, 896, 898, 907, 909, 917, 922, 934, 944, 946, 947, 965, 987, 994, 995, 996, 997, 998, 1019, 1027, 1051, 1060, 1062, 1073, 1074, 1077, 1088, 1089, 1093, 1098, 1099, 1103, 1104, 1105, 1106, 1123, 1124, 1129, 1140, 1148, 1149, 1163, 1164, 1238, 1240, 1241, 1256, 1264, 1266, 1268, 1273, 1274, 1275, 1279, 1281, 1282, 1283, 1284, 1302, 1304, 1312, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1356, 1357, 1358, 1360, 1362, 1373, 1374, 1382, 1385, 1395, 1396, 1399, 1401, 1402, 1404, 1405, 1409, 1411, 1412, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475], "0": [10, 13, 14, 22, 46, 53, 58, 60, 61, 67, 69, 73, 75, 76, 78, 79, 81, 87, 91, 99, 102, 107, 113, 119, 120, 127, 135, 137, 138, 160, 172, 174, 182, 183, 195, 207, 218, 219, 222, 225, 226, 229, 230, 233, 234, 235, 236, 237, 240, 244, 246, 247, 262, 265, 283, 286, 289, 290, 292, 293, 294, 295, 296, 297, 303, 304, 305, 306, 311, 315, 318, 335, 337, 343, 344, 345, 351, 352, 353, 354, 355, 357, 362, 363, 364, 365, 366, 367, 381, 387, 398, 407, 410, 421, 422, 423, 425, 426, 427, 432, 433, 434, 435, 440, 441, 442, 443, 445, 446, 448, 450, 454, 457, 464, 468, 471, 472, 473, 475, 479, 481, 484, 492, 493, 498, 499, 501, 502, 505, 506, 507, 508, 510, 515, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 530, 531, 533, 536, 537, 538, 539, 540, 541, 545, 547, 548, 555, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 591, 595, 596, 597, 599, 600, 601, 608, 609, 610, 612, 613, 615, 616, 619, 621, 622, 623, 628, 629, 630, 632, 634, 635, 636, 638, 639, 640, 641, 642, 647, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 708, 710, 711, 714, 715, 716, 717, 719, 721, 722, 723, 724, 727, 729, 732, 733, 734, 735, 736, 738, 739, 740, 742, 743, 745, 746, 747, 749, 750, 757, 758, 759, 761, 762, 771, 772, 774, 775, 776, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 797, 798, 800, 801, 803, 804, 808, 809, 812, 815, 816, 818, 819, 820, 824, 827, 828, 832, 834, 837, 838, 841, 842, 843, 844, 845, 846, 849, 850, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 864, 865, 868, 872, 873, 875, 876, 877, 878, 879, 882, 883, 884, 885, 888, 890, 892, 895, 896, 897, 898, 902, 903, 904, 905, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 926, 927, 929, 930, 932, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 975, 977, 978, 980, 981, 982, 983, 984, 985, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 1001, 1012, 1015, 1016, 1017, 1021, 1022, 1023, 1024, 1026, 1027, 1029, 1030, 1031, 1038, 1039, 1044, 1045, 1046, 1049, 1051, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1090, 1091, 1092, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1114, 1115, 1124, 1128, 1129, 1130, 1132, 1134, 1135, 1136, 1139, 1140, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1258, 1259, 1262, 1264, 1266, 1268, 1275, 1278, 1279, 1281, 1302, 1303, 1304, 1305, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1357, 1358, 1360, 1367, 1368, 1373, 1374, 1375, 1382, 1385, 1386, 1395, 1399, 1400, 1402, 1404, 1405, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475], "00": [674, 819, 844, 930, 1108, 1358, 1360], "000": [1313, 1429, 1444], "00000000e": 674, "00000003e": 819, "00000005e": 819, "0000000e": [674, 844, 1108], "0000001": [742, 863], "0000005": 1085, "0000005e": 674, "000000e": [819, 1360], "000001": 585, "000009999913458": 1319, "00001": [899, 1319], "00001e6": [560, 760], "00002e6": [560, 760], "0000500e": 674, "0000700001": 1319, "00008e6": [560, 760], "00008e7": [560, 760], "00008e8": [560, 760], "00009e6": [560, 760], "0001": [1072, 1258, 1259, 1441, 1474], "00011943008983507753": 1460, "00012131539988331496": 1460, "00012622540001757442": 1460, "00012708659982308746": 1460, "00015668": [1313, 1437], "00016594e": 674, "000166e": 819, "00029766598949208854": 1460, "00030103540048003196": 1460, "0003029372810851783": 1460, "0008272899803705514": 1460, "0008790623804088682": 1460, "00088908776990138": 1460, "000896632740041241": 1460, "000e": 667, "001": 1441, "00135791": [1313, 1437], "00216142": [1313, 1437], "00273132324219": 1445, "0027385": 1348, "00311279296875": 1445, "00339478": [1313, 1437], "00418412": [1313, 1437], "005": 1469, "00558471679688": 1445, "00574409": [1313, 1437], "006047147869830951": 1460, "006099433819763363": 1460, "006107717020204291": 1460, "006130605939542875": 1460, "007": 1343, "00729382": 1402, "007528": 493, "00776229": [1313, 1437], "00785936": [1313, 1437], "01": [524, 526, 527, 528, 531, 568, 636, 641, 729, 818, 1059, 1060, 1062, 1082, 1108, 1358, 1360, 1435, 1442, 1445], "01078958": [1313, 1437], "0108745": 521, "010b": 759, "01176856": [1313, 1437], "011771515250438824": 1460, "011807117109419778": 1460, "012017967159627005": 1460, "0123": 499, "01268033": [1313, 1437], "01268034": [1313, 1437], "01320427": [1313, 1437], "01347649": 1458, "0137874289354": 1358, "014079": [1313, 1437], "01451446": [1313, 1437], "01451873779297": 1445, "01476286": [1313, 1437], "01556223": [1313, 1437], "0156755j": 1373, "0164618489928": 1358, "01652764": 1348, "018": 932, "01857424": 1458, "0193281": [1313, 1437], "0196533203125": 1445, "01971436": 1317, "01972961": 1317, "01973": 1317, "01j": 685, "02": [729, 1062, 1084, 1108, 1358], "02058932": [1313, 1437], "0213": 499, "02138916": 1468, "02150": 506, "021j": 949, "02205": 1445, "02415345": [1313, 1437], "0242182": 1458, "02444458007812": 1445, "0246326": 1385, "0248291": 1385, "0252e": 1462, "026257": 1434, "02644569": [1313, 1437], "028304616": 1466, "02830462": 1466, "028908": [804, 1083], "02908": 1445, "02942139": [1313, 1437], "0294214": [1313, 1437], "02j": 684, "03": [636, 641, 1062, 1358, 1460], "03048803": [1313, 1437], "031": 949, "03132951": 1385, "03139788": 1385, "0315933227539": 1445, "03181": 1317, "03181458": 1317, "0332246": 1434, "03358557": 1348, "034946": [1313, 1437], "0353256": 1444, "03762": 506, "0396": 1460, "03j": 686, "04": [526, 674, 686, 819, 883, 1059, 1061, 1062, 1343, 1358], "04019165039062": 1445, "04097353": 1348, "043": 1075, "04313659667969": 1445, "04322892": 517, "04434623": [1313, 1437], "04434624": [1313, 1437], "0446548461914": 1445, "044715": 508, "04494429": 1458, "04514575": [1313, 1437], "047": 569, "0471976": 648, "04737393": [1313, 1437], "0485873": [1313, 1433], "0499999523162842": 1430, "04j": [684, 695], "05": [296, 550, 560, 686, 693, 695, 760, 1059, 1061, 1062, 1104, 1105, 1106, 1313, 1350, 1358, 1368, 1429, 1430, 1462], "0503650": 1014, "05069415": [1313, 1437], "0507009873554804934193349852946": 541, "050814": [804, 1083], "0509028": [1313, 1437], "05202": 1415, "05213022": 1458, "0535587e": 1458, "05356663": 1385, "05359547": 1385, "05389404": 1317, "0539": 1317, "06": [236, 674, 684, 1060, 1062, 1082, 1313, 1320, 1358, 1437, 1464], "0609050": 1043, "060e": 667, "0613258": 524, "063663": 524, "0641860961914": 1445, "06447162": 1348, "0648427": 1458, "065": 1460, "06566654": [1313, 1437], "06566655": [1313, 1437], "0660033": [804, 1083], "06604332": 1348, "06621551513672": 1445, "06666667": 998, "067581": 1434, "068": 639, "06j": 679, "07": [674, 819, 883, 936, 1059, 1062, 1108, 1353, 1358, 1437, 1441, 1458], "0705": 235, "070650816": [1320, 1437], "0716349809895": 1358, "0726733": 1458, "07314587": [1440, 1468], "07355348": [1313, 1437], "073738": 1434, "0743913": [1313, 1437], "07458": 235, "0748096": 1434, "07506633": [1313, 1437], "07506634": [1313, 1437], "07520543": 1444, "07592554": 1466, "07598876953125": 1445, "07694244384766": 1445, "0775": 1460, "078": 1075, "0786": 1460, "07996249": 1444, "08": [78, 79, 81, 560, 685, 686, 729, 732, 760, 936, 942, 1061, 1062, 1313, 1320, 1358, 1367, 1437, 1458], "080005": [804, 1083], "0818567": 528, "082869": 1458, "083": [741, 1317], "08300781": 1317, "083253": 1434, "0833322": 803, "08431": 1458, "0855657": 521, "08661086": 518, "08804226": [1440, 1468], "088388346": [1313, 1433], "08838835": [1313, 1433], "08925092": 716, "09": [671, 674, 684, 693, 695, 1059, 1317, 1353, 1358, 1437], "090002": 939, "09085776": 1444, "09129842": [1313, 1437], "09181861146935262": 1460, "09183577066054567": 1460, "09197998": 1317, "09198": 1317, "09224219304455371": 1318, "094": 569, "09412384033203": 1445, "09438": 1385, "0943952": 648, "09489440917969": 1445, "095": 572, "09500920018996112": 1460, "09551499": [1313, 1437], "096": 639, "09683388": 522, "09748875": [1313, 1437], "097791": 1464, "0979297": 1458, "097j": 569, "09814453125": 1445, "09983342": [244, 297], "0b0": [780, 910], "0b00000000": 759, "0b00000001": 759, "0b00000010": 759, "0b00000011": 759, "0b00000100": 759, "0b00000111": 872, "0b00011011": 977, "0b1": [780, 910], "0b10": [602, 780, 910], "0b100": [246, 247, 780, 910], "0b1000": [780, 910], "0b10000": [602, 780, 910], "0b100000": [602, 780], "0b1000000": [602, 780], "0b1001": 602, "0b10100": 602, "0b11": 780, "0b110": 780, "0b111": 602, "0b11100000": 872, "0b11111": 602, "0b11111011": 759, "0b11111100": 759, "0b11111101": 759, "0b11111110": 759, "0b11111111": 759, "0d": [1326, 1457], "0f": 1350, "0j": [555, 570, 575, 770, 1326], "0m": 1434, "0th": 1326, "0x": 1360, "0x558966316640": 1360, "0x558966317d00": 1360, "0x558989ce6410": 1360, "0x55898b26a120": 1360, "0x55898b2bda00": 1360, "0x55898b40d6e0": 1360, "0x55898b50b970": 1360, "0x55898b51eb50": 1360, "0x55898b59dfa0": 1360, "0x55898b6780d0": 1360, "0x7f1d182f9fd0": 1360, "0x7f1d182fa1a0": 1360, "0x7f1d182fab10": 1360, "0x7f1d182fab50": 1360, "0x7f1d182fe350": 1360, "0x7f1d182fe610": 1360, "0x7f1d182fee10": 1360, "0x7f1d182fee30": 1360, "0x7f1d18305310": 1360, "0x7f1d18305e90": 1360, "0x7f1d38113a40": 1360, "0x7f1d3812f640": 1360, "0x7f1d3812f6f0": 1360, "0x7f1d38155e90": 1360, "0x7f1d38157190": 1360, "0x7f1d381575b0": 1360, "0x7f1d3815d790": 1360, "0x7f1d3815de50": 1360, "0x7f1d38160210": 1360, "0x7f1d38160450": 1360, "0x7f1d3816ca50": 1360, "0x7f1d3816d440": 1360, "0x7f1d3816dce0": 1360, "0x7f1d381971d0": 1360, "0x7f1d3819f920": 1360, "0x7f1d381ae510": 1360, "0x7f1d381af4f0": 1360, "0x7f1d381af5d0": 1360, "0x7f1d381af6d0": 1360, "0x7f1d381af850": 1360, "0x7f1d381af930": 1360, "0x7f1d381afb30": 1360, "0x7f1d381b0030": 1360, "0x7f1d381b48f0": 1360, "0x7f1d381f23c0": 1360, "0x7f1d381f2600": 1360, "0x7f1d500ee950": 1360, "0x7f1d5014a940": 1360, "0x7f1d5018ebf0": 1360, "0x7f1d5018f4b0": 1360, "0x7f1d501a0430": 1360, "0x7f1d501b3570": 1360, "0x7f1d501b6230": 1360, "0x7f1d501b6890": 1360, "0x7f1d53bef5e0": 1360, "0x7f1d53c5c1f0": 1360, "0x7f1d53c948c0": 1360, "0x7f1d53ce3730": 1360, "0x7f1d53cfd680": 1360, "0x7f1d53d71230": 1360, "0x7f1d53d83210": 1360, "0x7f1d53ec81e0": 1360, "0x7f1d941332f0": 1360, "0x7f1dac297810": 1360, "0x7f350cca3690": 168, "0x7f4474d81620": 1354, "0x7f5e469b1700": 1438, "0x7f7dd4125890": 1349, "0x7fcab4431a10": 1474, "0x7fcab4448e00": 1474, "0x7fcac274e610": 1474, "0x7fcb0dd7be00": 1474, "0x7fdad8874b10": 1433, "0x7fdad88f4dd0": 1433, "0x7fe73ef06e90": 1445, "0x7fe796195e90": 1313, "0x7fe79622d350": 1313, "0xffffffff": 1326, "1": [7, 8, 10, 13, 22, 26, 42, 51, 52, 58, 61, 67, 73, 74, 75, 76, 78, 79, 81, 87, 95, 98, 99, 102, 114, 119, 120, 127, 137, 143, 158, 160, 162, 163, 174, 183, 195, 215, 218, 219, 225, 226, 229, 230, 235, 236, 237, 244, 262, 265, 283, 286, 289, 290, 292, 293, 295, 296, 297, 303, 304, 305, 306, 311, 315, 319, 321, 328, 329, 337, 343, 344, 345, 357, 359, 360, 362, 363, 364, 365, 366, 367, 370, 371, 374, 375, 380, 381, 387, 394, 395, 396, 398, 403, 407, 408, 410, 412, 413, 415, 421, 423, 425, 426, 427, 433, 434, 435, 438, 449, 450, 454, 455, 456, 457, 468, 471, 472, 473, 474, 478, 481, 492, 499, 501, 502, 505, 506, 507, 508, 510, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 532, 533, 534, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 555, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 595, 596, 597, 598, 600, 601, 602, 606, 608, 610, 612, 613, 614, 615, 616, 617, 619, 621, 622, 623, 628, 629, 630, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 664, 665, 666, 667, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 717, 719, 721, 722, 723, 724, 725, 727, 729, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 749, 750, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 892, 894, 896, 897, 898, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 994, 995, 996, 997, 998, 1003, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1027, 1029, 1031, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1047, 1051, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1107, 1108, 1109, 1111, 1116, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1132, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1148, 1149, 1150, 1152, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1284, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1313, 1315, 1317, 1321, 1323, 1324, 1328, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1346, 1348, 1350, 1352, 1353, 1354, 1356, 1357, 1358, 1360, 1367, 1368, 1373, 1382, 1385, 1386, 1394, 1395, 1399, 1402, 1410, 1411, 1412, 1413, 1415, 1417, 1419, 1420, 1421, 1423, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1474, 1475], "10": [10, 99, 235, 246, 247, 296, 303, 305, 306, 362, 363, 364, 365, 381, 387, 415, 433, 434, 471, 472, 484, 502, 528, 558, 598, 600, 612, 621, 628, 633, 639, 645, 656, 659, 662, 664, 665, 666, 674, 677, 679, 690, 691, 693, 695, 697, 711, 712, 719, 721, 725, 727, 729, 730, 735, 736, 737, 738, 741, 750, 757, 772, 775, 777, 778, 779, 788, 800, 801, 802, 803, 806, 812, 815, 818, 819, 827, 833, 836, 843, 848, 860, 861, 871, 873, 877, 879, 880, 881, 885, 895, 896, 897, 912, 915, 916, 918, 919, 921, 925, 932, 933, 943, 944, 952, 954, 956, 960, 964, 965, 983, 990, 1060, 1063, 1064, 1081, 1086, 1087, 1091, 1095, 1097, 1099, 1123, 1135, 1149, 1238, 1277, 1313, 1315, 1318, 1319, 1320, 1323, 1328, 1329, 1331, 1332, 1338, 1339, 1340, 1342, 1343, 1346, 1349, 1353, 1354, 1356, 1358, 1360, 1382, 1386, 1395, 1409, 1414, 1416, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1453, 1455, 1456, 1458, 1463, 1464, 1468], "100": [113, 235, 238, 568, 636, 641, 667, 696, 727, 738, 775, 800, 818, 827, 853, 855, 875, 877, 897, 921, 965, 1272, 1313, 1323, 1333, 1334, 1341, 1349, 1350, 1402, 1424, 1425, 1429, 1433, 1435, 1439, 1444, 1445, 1453, 1460, 1462], "1000": [113, 114, 727, 818, 954, 1004, 1005, 1063, 1313, 1317, 1318, 1323, 1340, 1343, 1426, 1432, 1433, 1444, 1445, 1462, 1469], "10000": [1340, 1431, 1442, 1444], "1000000": [1340, 1429], "10003": 1445, "10009": 1445, "1000x1000": [1317, 1323, 1326], "10029": 1326, "10049": 1326, "10067749023438": 1445, "10069": 1326, "100gb": [1455, 1458], "100mb": [1452, 1455, 1458], "101": [696, 965, 971], "10159": 1326, "10185241699219": 1445, "1018809052": 1466, "102": [696, 1445, 1468], "10218": 1326, "1024": [305, 306, 779, 1373, 1431, 1441, 1443, 1449, 1455, 1456, 1457, 1460, 1462], "1024x1024": 1326, "10266": 1326, "10278": 1326, "10281": 1326, "103": [981, 1432], "10322": 1414, "10389": 1326, "104": 1432, "10452": 1326, "10499357": 1444, "105": [981, 1360, 1432], "10502338": 1444, "1051271004": 1466, "1052": 1326, "1056793272": 1466, "10570311": 1444, "106": [1360, 1432], "1064": 1430, "1065": 1430, "10657": 1428, "10659": 1326, "1066": 1430, "1066338622": 1466, "107": 1432, "10717": 1326, "108": 981, "1080163607": 1360, "109": [986, 1445, 1453], "10918739": [1313, 1437], "1091874": [1313, 1437], "10921": 1326, "1093594115": 1466, "1094728438082": 1358, "1096": 671, "1097": 1419, "10_000_000": 1413, "10x": [1323, 1413, 1455, 1462], "10x10": 1323, "11": [303, 362, 363, 364, 381, 387, 433, 434, 471, 472, 502, 558, 621, 628, 633, 637, 662, 665, 683, 690, 691, 692, 693, 695, 710, 712, 721, 735, 736, 750, 779, 788, 812, 879, 885, 912, 915, 956, 960, 977, 1060, 1061, 1062, 1091, 1096, 1097, 1277, 1313, 1321, 1331, 1338, 1339, 1343, 1350, 1358, 1360, 1373, 1395, 1414, 1424, 1426, 1430, 1431, 1432, 1434, 1435, 1443, 1453, 1458, 1467, 1468, 1470], "110": [775, 1445], "11003882": 519, "1101979660": 1466, "1109": 697, "11097": 1091, "11150": 1367, "1116708477": 1466, "112": 1445, "11204806": [1313, 1437], "11215": 1326, "11228942871094": 1445, "11234": 1326, "11237": 1326, "11248": 1326, "1125": 666, "1129": 1360, "113": [1313, 1433, 1445], "11341857910156": 1445, "114": 660, "11436123235026": 1460, "115": 1437, "11557": 1326, "11572685861765": 1460, "11590": 666, "116": 1419, "11640348122095": 1460, "116539": 1434, "11675553278230": 1460, "11687": 549, "117": 1331, "1176": 1430, "11763906": 1458, "1176619927957034": 1318, "1177": 1430, "1178": 1430, "11794": 235, "118": [238, 797, 1331, 1468], "1181": 666, "11830": [1326, 1413, 1428], "119": [1331, 1453], "119123": 1434, "1193": 1430, "1194": 1430, "11944": 1326, "1195": 1430, "11952": 1425, "1196": 1430, "11972585626140": 1460, "11974823079773": 1460, "11e": 697, "11j": [686, 693, 695], "12": [10, 76, 238, 290, 303, 362, 363, 364, 381, 387, 433, 434, 471, 472, 499, 502, 555, 558, 621, 628, 633, 636, 637, 642, 662, 666, 679, 681, 683, 690, 691, 692, 693, 695, 721, 725, 736, 750, 777, 778, 788, 801, 802, 809, 812, 854, 857, 858, 860, 871, 881, 884, 915, 916, 944, 950, 956, 960, 965, 998, 1060, 1061, 1062, 1091, 1095, 1097, 1277, 1304, 1313, 1320, 1331, 1338, 1339, 1346, 1354, 1356, 1358, 1360, 1382, 1386, 1395, 1415, 1420, 1424, 1426, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1443, 1453, 1456, 1464, 1467, 1468], "120": [644, 646, 648, 775, 778, 899, 981, 1331, 1445], "1200000": 1328, "12016": 1414, "12041": 1326, "12049": [1409, 1414, 1428], "1208447044": 1466, "121": [981, 1331], "1210496444": 1331, "121105001260758": 1318, "12167": 1425, "12170": 1425, "122": 831, "123": [981, 1427], "1230": 566, "12300": 1414, "12302713": 523, "1234": 99, "12398731708526611": 1431, "12467473": 1374, "1249": 1419, "125": 617, "12528": 1326, "12533": 1326, "12536": 1326, "12550": 1326, "12579198": [1313, 1437], "12582": 1326, "12582912": 1460, "1258726447": 1432, "12593": 1414, "126": [566, 1360, 1445], "127": [99, 981, 1088, 1464, 1466], "12700021": [804, 1083], "12707": 1425, "1275": [1419, 1460], "128": [172, 539, 540, 887, 1313, 1326, 1341, 1354, 1415, 1435, 1437, 1442, 1443, 1445, 1447, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1461, 1462, 1469, 1474], "12834167480469": 1445, "128x128": 1452, "12958": 1326, "12_spmd": 1350, "12j": [693, 695], "12m": 1460, "12th": 1343, "12x320": 1457, "13": [303, 433, 434, 502, 558, 637, 681, 693, 695, 721, 735, 736, 750, 801, 827, 848, 952, 954, 998, 1061, 1063, 1095, 1096, 1277, 1313, 1315, 1338, 1339, 1343, 1356, 1358, 1395, 1424, 1426, 1430, 1431, 1434, 1435, 1437, 1442, 1443, 1464, 1468], "130": [775, 981, 1445], "13140": 235, "13240": 666, "13245": 506, "133": [566, 981], "13301": 1326, "1333281553946": 1358, "13333333": 998, "1337": 810, "13371": 1317, "13371277": 1317, "13372803": 1317, "133j": 573, "134": 887, "135": 1460, "1351523": [1313, 1437], "135451537": 1466, "136": 1462, "13621868": [1320, 1437], "13624572753906": 1445, "13653564453125": 1445, "1366": 1419, "136797809": 1466, "1369438": 520, "13866424560547": 1445, "138916015625": 1445, "1392464762": 1360, "13980": 1326, "139837293519424": 1436, "139837293524288": 1436, "139837293753088": 1436, "139837293753216": 1436, "139837293753344": 1436, "139837293854976": 1436, "139837293859136": 1436, "139837293860736": 1436, "139837293862144": 1436, "13th": 1343, "14": [10, 303, 433, 434, 502, 566, 574, 619, 666, 678, 679, 681, 683, 736, 777, 806, 860, 861, 883, 895, 925, 933, 984, 1019, 1022, 1086, 1097, 1313, 1315, 1318, 1331, 1338, 1339, 1343, 1358, 1360, 1386, 1395, 1418, 1423, 1424, 1426, 1430, 1431, 1432, 1434, 1437, 1440, 1442, 1443, 1456, 1464, 1468, 1470], "140": [775, 1088, 1445], "14102": 1326, "14106": 1326, "14108": 1326, "14112": [1313, 1342, 1346, 1348, 1433, 1440], "1411200080598672": 1318, "1412": 998, "1414436097": 1466, "1415927": [648, 1313, 1437], "1416876": 1436, "14170025": [1313, 1437], "142": [569, 667], "1422": [1373, 1464], "1423771745": 1466, "14273": 1428, "14286": [305, 306], "142j": 570, "143": 1445, "1440": 1460, "1440797": 1436, "14446": 1326, "1445": 1464, "144j": 570, "147": 1445, "14734": 1326, "148": 671, "1487": 1464, "149": 916, "14911651611328": 1445, "14j": [685, 686], "15": [240, 303, 433, 434, 502, 600, 633, 645, 647, 665, 666, 677, 695, 725, 729, 735, 736, 777, 778, 802, 803, 809, 812, 827, 854, 871, 879, 916, 950, 954, 965, 1061, 1062, 1063, 1081, 1096, 1097, 1304, 1313, 1320, 1331, 1338, 1343, 1346, 1358, 1360, 1373, 1395, 1410, 1424, 1426, 1431, 1434, 1436, 1437, 1443, 1468], "150": [775, 872, 1444, 1445], "1500": 1426, "15113830566406": 1445, "153": 981, "153283442968721": 1460, "154": 977, "15429": 1326, "154584235803001": 1460, "154j": 932, "156347213275211": 1460, "1563720703125": 1445, "15677": 1328, "157": [981, 1313], "1570919344": 1360, "15814": 1317, "15814209": 1317, "15852355957031": 1445, "15856": [1387, 1428], "158883": 1385, "1599": 666, "15j": [555, 685], "15mb": 1340, "16": [293, 295, 303, 316, 433, 434, 445, 446, 502, 540, 602, 633, 666, 678, 681, 683, 693, 695, 697, 710, 727, 735, 736, 777, 780, 796, 806, 887, 890, 910, 939, 944, 977, 982, 998, 1032, 1061, 1062, 1072, 1086, 1313, 1317, 1323, 1339, 1340, 1341, 1343, 1346, 1353, 1354, 1358, 1395, 1402, 1404, 1411, 1413, 1415, 1417, 1420, 1424, 1425, 1426, 1431, 1432, 1433, 1434, 1435, 1438, 1440, 1443, 1449, 1452, 1453, 1458, 1460, 1468, 1473], "160": [775, 872, 1445], "16027": 1326, "16086": 1425, "16102302": [1313, 1437], "16134644": 1317, "16135": 1317, "162": 827, "163": 1445, "1631097290182": 1358, "16347": 1326, "16362": 1326, "16384": [1458, 1462], "16413": 1326, "16440": 1326, "1657102335": 1466, "16589": 1425, "1660": [1331, 1470], "1661": [1331, 1470], "166131533963991": 1460, "1661738718": 1466, "16642761": 1317, "16643": 1317, "16666667": [433, 998], "1668": 1424, "167": 1075, "1670": 1419, "1672213357352": 1358, "16746": 1326, "16757": 1317, "16757202": 1317, "16779": 1326, "16781": 1425, "168": 1431, "16820715": 1385, "16824": 1425, "16838408": 1385, "16897797651282": 1460, "169": 932, "1697775786824": 1358, "16mb": 1457, "16mib": 1455, "17": [555, 566, 616, 637, 683, 684, 686, 693, 695, 729, 736, 788, 883, 918, 1060, 1061, 1062, 1084, 1095, 1315, 1331, 1346, 1354, 1358, 1360, 1385, 1413, 1431, 1434, 1435, 1443, 1468], "170": [1445, 1460], "1701": [1385, 1402, 1439, 1444], "17013086492108": 1460, "17038": 1418, "1704": 235, "17054": 1326, "1706": 506, "1708142274": 1350, "17111": 1428, "1720605": 1434, "17225": 1425, "1723": 1419, "173": 1360, "17320499": 1058, "1737": 998, "17390487": [1313, 1437], "17398663": 521, "174": 1439, "1740": 998, "175": [827, 932, 1445], "176": 1439, "17686": 1358, "17701657415839": 1460, "1772828": 1071, "1775180719": 1466, "17774963378906": 1445, "178264713": 1354, "179": 981, "179347953304919": 1460, "17939758300781": 1445, "17981093801113": 1460, "17j": 685, "17th": 1343, "18": [434, 637, 678, 681, 693, 695, 725, 729, 736, 757, 777, 778, 802, 812, 871, 1059, 1061, 1062, 1095, 1304, 1339, 1343, 1346, 1353, 1356, 1358, 1360, 1385, 1426, 1431, 1434, 1438, 1443, 1444, 1468], "180": [648, 899, 1343, 1445], "18000793457031": 1445, "180020067095253": 1460, "1801108376": 1354, "180264539343531": 1460, "180deg": 1439, "1812433255": 1466, "1813425700": 1360, "18137": 1428, "18140515": 1318, "18154907226562": 1445, "181823175395037": 1460, "182": 1360, "18226": 1326, "18252563": 1317, "18253": 1317, "1827752256": 1360, "184016991": 1466, "18515014648438": 1445, "1854": 566, "1862": [1331, 1430], "1863": [1331, 1430], "1864": [1331, 1360, 1430], "1875": [983, 1419], "1878467924": 1466, "1892898": 1458, "18953": 1326, "18959045410156": 1445, "19": [563, 674, 693, 695, 735, 736, 801, 809, 887, 930, 950, 1059, 1060, 1062, 1315, 1343, 1346, 1356, 1358, 1360, 1430, 1431, 1434, 1435, 1453, 1464, 1468], "190": [311, 1445], "1900088": 520, "1900727105": 1466, "19009": 1328, "1901": 1367, "1911": 506, "19192469": 1468, "192": 1431, "1920929e": 936, "19227": 1326, "19231": 1326, "19235": 1326, "192359": 527, "19282": 1326, "19283": 1326, "19284": 1326, "193": 1323, "1938": 1419, "1943107544": 1354, "196": 1439, "1964569": 1444, "1965": [1320, 1437], "19661197": 1444, "197": 1460, "19795989990234": 1445, "197e12": 1460, "198": [1360, 1439], "1980": 1326, "198039": 801, "19816": 1326, "1983": 1088, "1983583872": 1430, "19866933": 244, "199": 1360, "1990": 311, "19900084": 297, "19937": 1466, "1d": [288, 290, 566, 567, 582, 588, 595, 596, 597, 621, 623, 628, 633, 637, 650, 654, 655, 657, 663, 666, 675, 736, 737, 738, 739, 740, 749, 758, 813, 836, 853, 855, 871, 873, 875, 885, 887, 896, 906, 907, 923, 924, 940, 953, 971, 972, 973, 974, 975, 976, 978, 984, 985, 987, 988, 989, 994, 995, 996, 997, 1094, 1095, 1096, 1097, 1100, 1139, 1140, 1149, 1196, 1326, 1331, 1341, 1346, 1373, 1385, 1415, 1418, 1430, 1443, 1447, 1457, 1458], "1e": [236, 550, 560, 585, 674, 760, 793, 800, 803, 804, 807, 810, 819, 1015, 1019, 1022, 1070, 1074, 1077, 1083, 1084, 1085, 1089, 1104, 1105, 1106, 1313, 1319, 1320, 1350, 1367, 1368, 1432, 1433, 1434, 1435, 1437, 1441, 1442, 1443, 1444, 1460], "1e3": [560, 760], "1e6": [560, 760], "1f1": 1129, "1j": [569, 575, 582, 588, 632, 633, 637, 639, 745, 749, 772, 932, 935, 938, 939, 949, 963, 984, 985, 1090, 1313, 1326, 1437], "1min": [1313, 1350, 1411, 1429, 1430, 1432, 1433, 1436, 1443, 1470], "1mlambda": [1313, 1350, 1411, 1429, 1430, 1432, 1433, 1436, 1443, 1470], "1mlet": [1313, 1350, 1411, 1429, 1430, 1432, 1433, 1436, 1443, 1470], "1st": [1343, 1443], "1x1": [1441, 1457], "2": [10, 61, 67, 73, 74, 75, 76, 78, 79, 81, 95, 98, 99, 102, 127, 137, 172, 183, 195, 235, 236, 237, 238, 244, 246, 247, 262, 281, 283, 289, 290, 293, 295, 296, 297, 298, 303, 304, 306, 311, 312, 315, 316, 335, 341, 343, 344, 345, 346, 347, 360, 362, 363, 364, 365, 366, 367, 372, 373, 380, 381, 387, 395, 396, 398, 420, 423, 425, 426, 427, 433, 434, 435, 450, 454, 457, 471, 472, 477, 479, 482, 484, 493, 498, 499, 500, 502, 506, 508, 510, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 536, 537, 539, 540, 547, 548, 549, 550, 555, 560, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 595, 596, 597, 598, 599, 600, 602, 608, 609, 610, 612, 614, 615, 616, 617, 619, 621, 622, 623, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 717, 719, 721, 722, 723, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 749, 750, 757, 758, 759, 760, 762, 765, 766, 767, 770, 771, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 868, 869, 870, 871, 873, 874, 875, 876, 877, 879, 880, 881, 883, 884, 885, 886, 887, 888, 890, 892, 894, 895, 897, 898, 899, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 974, 975, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 994, 995, 996, 997, 998, 1008, 1012, 1014, 1020, 1021, 1025, 1027, 1035, 1037, 1038, 1039, 1041, 1042, 1047, 1049, 1050, 1051, 1052, 1053, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1108, 1109, 1115, 1116, 1123, 1130, 1132, 1135, 1139, 1140, 1141, 1142, 1149, 1170, 1172, 1177, 1179, 1205, 1206, 1210, 1211, 1214, 1215, 1218, 1221, 1222, 1228, 1230, 1238, 1239, 1240, 1241, 1244, 1246, 1252, 1253, 1254, 1255, 1262, 1263, 1265, 1267, 1268, 1269, 1270, 1271, 1272, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1297, 1298, 1299, 1304, 1315, 1317, 1319, 1321, 1323, 1324, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1346, 1348, 1350, 1353, 1354, 1356, 1357, 1358, 1360, 1367, 1368, 1374, 1382, 1385, 1386, 1395, 1399, 1400, 1404, 1410, 1411, 1412, 1415, 1416, 1417, 1419, 1420, 1421, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1435, 1437, 1438, 1440, 1441, 1442, 1444, 1445, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1474, 1475], "20": [10, 433, 434, 573, 602, 612, 621, 644, 646, 659, 660, 665, 671, 695, 711, 735, 736, 757, 775, 777, 813, 836, 843, 860, 873, 877, 895, 896, 921, 954, 981, 985, 996, 1063, 1064, 1081, 1095, 1106, 1122, 1135, 1238, 1321, 1343, 1358, 1360, 1385, 1418, 1419, 1426, 1429, 1431, 1432, 1434, 1439, 1442, 1443, 1444, 1445, 1453, 1456, 1458, 1464, 1468], "200": [696, 800, 921, 1272, 1358, 1439, 1445], "2000": [114, 1426], "2000000000": 1328, "20000002": 898, "20000005": 898, "2002": 1415, "2007": 1043, "2008": 697, "2011": 1402, "2013": [1320, 1437], "2015": [1320, 1437], "2017": [1313, 1437], "2018": [1326, 1435, 1442], "2019": [1019, 1339, 1356], "20199584960938": 1445, "202": [1360, 1439], "2020": [1357, 1423, 1424, 1464], "2021": [1338, 1357, 1426], "2022": [1338, 1343, 1412, 1414], "2023": [1338, 1340, 1341, 1343, 1353, 1358, 1410, 1415, 1416, 1417, 1418, 1425], "2023_07_20_18_29_30": 1353, "2024": [1338, 1343, 1356, 1414, 1420, 1435], "20241016": 1339, "2025": [1338, 1422], "202579": 1385, "2026": [1326, 1338, 1428], "2027": 1338, "2028": 1338, "20282": 1326, "2028872": 1385, "203": [932, 981], "2032348584": 1466, "20385": 1326, "204": 1360, "2047218": 520, "2048": [397, 404, 779, 1431, 1455], "2048x2048": 397, "20550": 1326, "20584106445312": 1445, "2069": 1419, "207": [872, 1445], "20772552490234": 1445, "2085143622": 1466, "209": 1453, "2091": 1326, "20997": 1343, "20th": 1343, "20x": 800, "21": [639, 645, 693, 695, 729, 777, 812, 883, 916, 942, 944, 1062, 1269, 1304, 1313, 1315, 1343, 1353, 1354, 1358, 1431, 1434, 1435, 1453, 1468], "210": [809, 950, 1445], "21000001": 1343, "2101850145785": 1358, "2103": 499, "2107": 1326, "21089035272598267": 1466, "21116": 1326, "2112": 549, "212": 872, "2129": 1326, "213": 1445, "2135928312": 1466, "21396": 1326, "21403": 1326, "2141": 998, "214111328125": 1445, "2143988866626": 1358, "2145028508": 1360, "21467624978306993": 1318, "2147483648": 1460, "2155094905": 1360, "216": 617, "2168787041": 1466, "217285": 1373, "21773": 1447, "21827": 1326, "21862": 1447, "219": [977, 1453], "21st": 1343, "21tb": 1458, "22": [433, 434, 666, 679, 683, 690, 735, 736, 788, 795, 829, 916, 964, 983, 1060, 1095, 1358, 1400, 1431, 1434, 1438, 1443, 1444, 1453, 1468], "220": 1445, "2206": [305, 306], "22084": 1447, "221559": 1458, "22275": 1447, "22279": 1447, "22310": 1447, "223194": 1434, "22348": 1317, "22348022": 1317, "224": 872, "2247449": [784, 1068], "22480": 1447, "22552": 1447, "2255967221336": 1358, "22593": 1447, "22662": 1317, "22662354": 1317, "2273819758": 1466, "22746": 1447, "2279": 1343, "22936": 1326, "2296542172": 1354, "22990417480469": 1445, "22e": 697, "22m": [1313, 1350, 1411, 1429, 1430, 1432, 1433, 1436, 1443, 1470], "22ma": 1411, "22mb": [1313, 1350, 1411, 1429, 1430, 1433], "22mc": [1411, 1443, 1470], "22md": [1350, 1411, 1436], "22me": [1350, 1411], "22mf": [1430, 1443], "22mg": 1350, "22mj": 1411, "22mk": [1411, 1432], "22mr": 1411, "23": [683, 729, 964, 1060, 1061, 1082, 1354, 1358, 1360, 1431, 1434, 1468], "230": [981, 1445], "2305": 506, "23059082": 1317, "2306": 1317, "2316": 1343, "2318344116211": 1445, "232": 1360, "233": [981, 1317, 1429], "2333": 1343, "2338114": 527, "23468017578125": 1445, "23489487": 1444, "23558": 1445, "23590": 1326, "2359891e": 1108, "236": 1317, "2362978080912": 1358, "237": 1317, "238": 1317, "2382": 1326, "23876953": 1317, "23877": 1317, "23881": 1326, "239": [575, 981, 1317], "2399811678": 1466, "23j": [693, 695], "24": [433, 434, 499, 566, 644, 683, 725, 777, 778, 788, 809, 812, 847, 858, 892, 950, 963, 1061, 1062, 1097, 1313, 1331, 1338, 1343, 1354, 1358, 1415, 1425, 1430, 1431, 1434, 1437, 1443, 1444, 1468], "240": [981, 1317, 1354, 1438, 1445, 1460], "2401303": 1458, "24083709716797": 1445, "2409145495443": 1358, "241": 1317, "24137115478516": 1445, "24190766": [1313, 1437], "242": 1317, "2422663986": 1470, "243": [566, 827, 1317, 1445], "24360656738281": 1445, "244": [998, 1317, 1432], "2443250962": 1466, "2447": 1326, "245": [1317, 1432], "2452652": 1074, "246": [1317, 1360, 1432], "24663": 1326, "24692321": 1458, "247": [1317, 1432], "24748": 296, "248": [1317, 1432], "2481403966": 1466, "24841607": 1458, "24843": 1326, "2484405": [1313, 1433], "249": 1317, "24910": 1353, "2495741e": 526, "24998187": 1444, "25": [563, 664, 684, 686, 688, 689, 695, 708, 710, 735, 736, 793, 815, 820, 853, 855, 858, 873, 875, 882, 890, 897, 904, 936, 939, 942, 983, 998, 1060, 1076, 1077, 1082, 1313, 1315, 1338, 1339, 1349, 1356, 1358, 1360, 1424, 1426, 1431, 1433, 1434, 1438, 1444, 1468], "250": [1317, 1445], "25000003": [793, 1077], "2501": 1326, "25077056884766": 1445, "2509837": 1458, "251": [759, 1317], "2512": 1326, "2515389": 1424, "2516396728": 1466, "252": [569, 759, 1317], "25214": 1326, "2524413": 1303, "25265405": [1320, 1437], "253": [759, 1317], "25328063964844": 1445, "25329": 1326, "2537": 1326, "254": [759, 1317, 1432], "2547188": 1071, "255": [759, 981, 1317, 1432], "2551253": 1436, "25516": [1316, 1428], "2556391": 67, "256": [166, 172, 296, 1098, 1102, 1103, 1317, 1353, 1354, 1358, 1441, 1449, 1452, 1455, 1460, 1461, 1462, 1475], "25606": 1326, "2562755208": 1466, "2566": 1326, "257": 1317, "258": [1317, 1432], "259": 1317, "2591": 1326, "25955": 1326, "25956": 1326, "2596": 1326, "2597": 1326, "2598921": [1320, 1437], "25j": 684, "26": [433, 637, 660, 679, 693, 695, 809, 827, 857, 950, 981, 1061, 1323, 1338, 1339, 1358, 1375, 1431, 1435, 1443, 1468], "260": 1445, "2602819927345": 1358, "26076": 1445, "261": 1317, "262": 1317, "2626": 235, "2626558620": 1466, "263": [1402, 1428], "2635": 1326, "2637569133": 1360, "2640": 1091, "26480": 1326, "265": 1317, "2656": 1326, "266066": 742, "2665": 1326, "26651": 1317, "26651001": 1317, "26666667": 998, "267": [916, 1317], "268": 1317, "2681944": 493, "2684": 1326, "269": 1317, "26902770996094": 1445, "2696932952": 1466, "26978672": 1348, "269\u00b5": 1317, "26th": 1343, "27": [617, 637, 639, 727, 890, 916, 932, 977, 982, 1313, 1339, 1346, 1349, 1358, 1360, 1429, 1431, 1433, 1437, 1438, 1468], "270": 1445, "2709361018": 1466, "271": 1317, "2719": 1326, "2724": 1326, "2726": 1326, "2755": 1326, "275552121": 1466, "2759011858": 1466, "2760": 1326, "27744": 296, "27751946": 1458, "277685388252": 1358, "27793884277344": 1445, "27858758": 517, "27873": 1326, "2789248": 521, "279": 1075, "2794155": 1440, "2795851": 742, "27j": 681, "27th": [1326, 1343], "28": [114, 433, 434, 499, 637, 691, 777, 795, 829, 939, 998, 1061, 1097, 1313, 1346, 1358, 1360, 1431, 1435, 1442, 1443, 1462, 1468], "280": 1445, "2803309189": 1360, "2809": 1326, "2817": 1326, "2819775617064": 1358, "28224": [1440, 1468], "2822400161197344": 1318, "2823738293221": 1358, "283185307179586": 981, "2844449444": 1360, "28661": 1428, "2867": 1326, "28772": 1445, "2887063": 1458, "2887650464874": 1358, "28910828": 1317, "28911": 1317, "28912354": 1317, "2891506774": 1466, "28958129882812": 1445, "2896": 1326, "2896855": 521, "28th": 1343, "29": [566, 660, 667, 930, 932, 998, 1061, 1084, 1313, 1315, 1321, 1346, 1350, 1358, 1360, 1414, 1431, 1468], "290": 1445, "2906": 1326, "292": [570, 1360], "29255": 296, "29335397": 1385, "2934014": 1385, "2943625357": 1466, "29552022": 244, "2956679937": 1429, "29570296": 1466, "296": 741, "2960": 1460, "296167901": 1466, "297902587": 1466, "298188": 528, "29852": 527, "29878938": 1385, "29893667": 1385, "2993": 1326, "2997544": 1468, "29999995": 841, "29j": [684, 686], "2c": [1254, 1255], "2c8cb15c6a2caadaa98af51df6fe78a8155b8471cb3dd7b9836038e0d3657fb4": 1339, "2d": [183, 233, 292, 343, 344, 433, 566, 582, 588, 596, 597, 621, 623, 628, 650, 654, 655, 663, 735, 737, 738, 739, 740, 750, 800, 813, 836, 887, 898, 953, 985, 987, 988, 989, 1065, 1069, 1094, 1095, 1096, 1097, 1104, 1105, 1106, 1196, 1326, 1341, 1346, 1373, 1404, 1415, 1431, 1439, 1443, 1444, 1452, 1456, 1457], "2e": [674, 819], "2e6": [560, 760], "2e7": 760, "2f": [930, 1435, 1442], "2gb": 1328, "2j": [563, 570, 572, 683, 693, 695, 761, 762, 770, 771, 790, 792, 862, 879, 885, 888, 903, 932, 935, 963, 984, 985, 1090], "2k": 1460, "2m": 1460, "2n": [1135, 1149], "2nd": [1313, 1320, 1386, 1433, 1437, 1453], "2x": [1313, 1320, 1457, 1462], "2x2": [499, 636, 641, 743, 830, 1070, 1085, 1313, 1437, 1439, 1462], "2x2x2": 830, "2x32": [280, 1395], "2x4": [499, 1441], "2xf32": 1360, "2xindex": 1350, "3": [10, 61, 73, 74, 75, 76, 95, 98, 113, 114, 119, 137, 195, 235, 236, 238, 244, 290, 291, 292, 293, 295, 296, 303, 304, 311, 315, 328, 331, 335, 337, 343, 344, 345, 362, 363, 364, 365, 366, 367, 380, 387, 403, 415, 423, 425, 426, 427, 433, 434, 435, 450, 457, 471, 472, 479, 484, 493, 499, 501, 502, 506, 508, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 536, 539, 540, 555, 560, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 595, 596, 597, 598, 600, 602, 606, 608, 610, 612, 613, 614, 615, 617, 619, 621, 622, 623, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 717, 719, 721, 722, 723, 724, 725, 727, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 743, 745, 746, 747, 749, 750, 757, 758, 759, 760, 764, 765, 774, 775, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 813, 814, 815, 817, 818, 820, 821, 822, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 841, 842, 844, 845, 846, 848, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 868, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 890, 892, 894, 895, 898, 899, 901, 902, 903, 905, 906, 907, 908, 910, 911, 912, 913, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 974, 975, 976, 978, 980, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 994, 995, 996, 997, 998, 1012, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1107, 1108, 1135, 1218, 1238, 1239, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1275, 1276, 1277, 1278, 1279, 1280, 1284, 1297, 1299, 1303, 1304, 1313, 1315, 1316, 1317, 1321, 1324, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1343, 1346, 1348, 1350, 1353, 1354, 1356, 1357, 1360, 1374, 1385, 1386, 1394, 1395, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1419, 1420, 1421, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1474, 1475], "30": [621, 659, 665, 666, 683, 711, 735, 736, 749, 775, 836, 843, 873, 877, 892, 895, 896, 921, 998, 1064, 1095, 1108, 1135, 1238, 1313, 1320, 1343, 1358, 1360, 1429, 1431, 1432, 1434, 1437, 1439, 1442, 1445, 1453, 1458, 1468], "300": [99, 921, 1272, 1366, 1445], "3000": 114, "30000": 800, "30000007": 659, "300394253605": 1358, "3005757": [1440, 1468], "3006": 1326, "3006743": [1320, 1437], "30085585": 517, "3012": 1373, "30390930175781": 1445, "304": 1331, "3041496": [1320, 1437], "3042": 1373, "3049883393633": 1358, "305": 1331, "305012020407": 1358, "306": [572, 1331], "3063618431178": 1358, "306j": 571, "3072": 779, "308": 639, "3085343041": 1360, "309": 1453, "30j": 1439, "30mb": [1340, 1455], "30x": 1323, "31": [602, 633, 637, 698, 827, 916, 998, 1061, 1062, 1239, 1313, 1328, 1343, 1346, 1350, 1431, 1453, 1464, 1468], "310": 1445, "3101": 1326, "3107": 1414, "312": 572, "3130127722537": 1358, "3132": 1326, "3139732": [1440, 1468], "3139825610": 1466, "31447992": [1313, 1437], "31447995": [1313, 1437], "3151": 1326, "3155028": 1436, "3157725e": 526, "31581115722656": 1445, "3158517": 1458, "3161423260563": 1358, "317": [570, 572, 639], "3176189976": 1466, "317766": 290, "31779479980469": 1445, "3186499464459": 1358, "319": 1453, "3192392114": 1466, "31j": [693, 695], "31mvalueerror": 1434, "32": [114, 153, 166, 187, 348, 433, 434, 499, 540, 602, 637, 717, 777, 780, 789, 791, 795, 813, 827, 829, 909, 916, 981, 985, 998, 1013, 1028, 1032, 1033, 1095, 1323, 1339, 1341, 1343, 1346, 1350, 1353, 1360, 1373, 1395, 1399, 1415, 1425, 1426, 1431, 1437, 1440, 1442, 1443, 1452, 1453, 1457, 1458, 1466, 1468], "320": 1445, "3202401494": 1466, "3232553940": 1466, "324": [667, 1426], "325": 741, "32726777": 1468, "328": 981, "3296094": 1470, "3296283": 1458, "32bit": [92, 280, 1328], "33": [563, 684, 685, 686, 689, 690, 691, 693, 695, 809, 858, 950, 964, 983, 998, 1059, 1239, 1315], "330": 1445, "330483": 1434, "3307": 1460, "33139038085938": 1445, "3318": 1326, "332": 1432, "33229148": 1425, "333": [1078, 1432], "333332": 803, "33333257": 803, "33333272": 803, "33333333": 998, "3333333333333": 1460, "33333334": [433, 837, 868, 963, 998, 1076], "3333334": 426, "3333334j": 963, "33398": 1317, "33398438": 1317, "334": 1432, "3340": 666, "335": 1432, "335474": 1434, "336": 1432, "337": 1317, "3370": [1326, 1424], "33700562": 1317, "3371865": 1458, "3372": 1073, "3375": [1313, 1433], "337614300": 1466, "3377": 1343, "33905897": 1348, "33j": [678, 681, 686, 692, 695], "34": [619, 693, 695, 698, 887, 998, 1059, 1313, 1350, 1411, 1429, 1430, 1432, 1433, 1436, 1443, 1460, 1470], "340": 1445, "3402096563": 1331, "341": 1460, "342": 677, "343": [1432, 1466], "3432054210": 1466, "344": 1432, "345": [998, 1432], "3453199728248": 1358, "346": 1432, "347": [575, 1432], "347789876": 1360, "348": [998, 1429], "349": 1434, "3499": 1019, "35": [637, 883, 998, 1081, 1084, 1279, 1313, 1360, 1439], "350": 1445, "350306": 1434, "3508": 1019, "351": 1434, "3518": 1326, "3518946594": 1466, "3524047": 1458, "3530655617": 1466, "35342407226562": 1445, "35355338": [1313, 1433], "3539885757353": 1358, "3540880311": 1350, "3545703099": 1466, "3562": 1326, "3587": 1326, "3589": 1326, "3593563": 1458, "35m": [1313, 1350, 1411, 1429, 1430, 1432, 1433, 1436, 1443, 1470], "36": [246, 247, 433, 434, 563, 574, 695, 778, 939, 998, 1059, 1060, 1279, 1338, 1442, 1443], "360": [854, 981, 1317, 1445], "3608": 1326, "36088037": 1458, "361": 1075, "3610": 1326, "3611": 1326, "3618": 1326, "361919": [807, 1089], "363": 1460, "3641": 1460, "3643": 1326, "3653": 1326, "3657": 1326, "366": [566, 1360], "3664": 1326, "36703771352767944": 1444, "36853": 1317, "36853027": 1317, "36982727050781": 1445, "36j": [692, 695], "36th": 1019, "37": [797, 883, 1060, 1069, 1084, 1313, 1315, 1346, 1360, 1420, 1429], "370": 1445, "3701772": 1074, "3703": 1326, "3726": 1326, "3728": 1326, "3729": 1326, "3733": 1326, "3735": 1326, "3738": 1326, "3739224": 1385, "3740134": 1385, "375": 850, "3751": 1326, "37591552734375": 1445, "3769736790": [1313, 1437], "377": 1460, "3777": 1326, "3778": 1326, "378": 827, "37j": 695, "38": [660, 666, 693, 695, 831, 844, 1061, 1084, 1340, 1346, 1373, 1468], "380": 1445, "3800": 1326, "3803": 1326, "3806145045": 1466, "3807": 1460, "3808b5023c3d": 1438, "3812": 1326, "3812477442": 1466, "383": 1460, "3836": 1326, "3841858e": [1108, 1458], "3845": 1326, "38459777832031": 1445, "386": 981, "3865": 666, "3869": 1326, "387": 1460, "3873": 1326, "3874": 1326, "3878": 1326, "3879932251": 1466, "389056": 1444, "38916": 1317, "38916016": 1317, "38941833": 244, "389631": 1470, "38j": [693, 695], "39": [674, 729, 827, 1061, 1313, 1320, 1346, 1350, 1411, 1429, 1430, 1432, 1433, 1436, 1437, 1443, 1470], "390": [1429, 1445], "390276": 1434, "3904844661": 1466, "3914": 1326, "393": 1439, "39350128173828": 1445, "3948981463909149": 1466, "396": 1439, "397": 1439, "3974": 113, "39764675": 1385, "39774987": 1385, "39904642": 1425, "3992505346": 1466, "39j": 679, "39m": [1313, 1350, 1411, 1429, 1430, 1432, 1433, 1436, 1443, 1470], "3d": [517, 566, 597, 786, 1139, 1140, 1346, 1452, 1453], "3e6": [560, 760], "3e7": 560, "3f": 1462, "3j": [563, 572, 633, 637, 683, 693, 695, 745, 749, 766, 935, 939, 963, 984, 985, 1313, 1437], "3rd": [1313, 1343, 1433], "3x": [1313, 1320, 1374, 1437], "3x3": [676, 743, 793, 806, 1077, 1078, 1082, 1085, 1086, 1087], "4": [10, 61, 73, 76, 98, 137, 166, 195, 235, 238, 244, 246, 247, 262, 277, 282, 283, 293, 295, 296, 303, 304, 311, 315, 316, 328, 335, 337, 362, 363, 364, 365, 366, 367, 387, 403, 415, 423, 425, 426, 427, 433, 434, 435, 450, 457, 471, 472, 484, 493, 498, 499, 502, 506, 524, 526, 527, 540, 547, 549, 558, 563, 565, 566, 567, 568, 569, 570, 572, 575, 576, 577, 578, 579, 582, 583, 584, 586, 588, 595, 596, 597, 598, 599, 600, 601, 606, 608, 609, 610, 613, 614, 615, 617, 619, 621, 622, 628, 633, 634, 635, 637, 638, 639, 642, 644, 645, 646, 647, 650, 651, 652, 653, 654, 655, 656, 659, 660, 662, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 716, 717, 719, 721, 723, 724, 727, 729, 730, 731, 732, 733, 735, 736, 737, 739, 741, 742, 745, 746, 749, 750, 757, 758, 759, 765, 776, 777, 779, 780, 781, 782, 783, 787, 788, 789, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 819, 820, 821, 822, 823, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 862, 865, 868, 869, 870, 871, 873, 874, 875, 876, 877, 879, 880, 882, 883, 884, 886, 887, 888, 890, 892, 894, 895, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 917, 918, 919, 920, 921, 923, 924, 929, 930, 932, 934, 935, 937, 938, 939, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 971, 972, 973, 974, 975, 976, 978, 980, 982, 983, 985, 986, 987, 988, 989, 990, 991, 992, 995, 997, 998, 1012, 1058, 1059, 1060, 1061, 1062, 1064, 1066, 1067, 1069, 1071, 1072, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1097, 1099, 1101, 1130, 1132, 1141, 1149, 1218, 1239, 1263, 1265, 1269, 1270, 1271, 1272, 1277, 1279, 1280, 1281, 1282, 1297, 1299, 1304, 1313, 1315, 1317, 1319, 1321, 1324, 1328, 1331, 1333, 1334, 1337, 1339, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1360, 1373, 1375, 1382, 1385, 1386, 1395, 1399, 1402, 1404, 1410, 1411, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1430, 1431, 1432, 1433, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1465, 1467, 1468, 1470, 1473, 1474], "40": [639, 775, 873, 877, 896, 921, 986, 1064, 1313, 1346, 1373, 1437, 1442, 1443, 1445], "400": [921, 1272, 1439, 1445], "4000": 1426, "4000001": 841, "40015721": 1421, "4003078": 1348, "4008": [1423, 1428], "4012985e": 936, "4028235e": 844, "4031753540039": 1445, "4039": 1423, "404": 1435, "4042607538": 1466, "404566": 1434, "405": 1373, "4075895579": 1466, "40774566": 517, "408": 667, "4087536357031": 1358, "4096": [779, 1353, 1431, 1455, 1458, 1460], "41": [671, 691, 729, 856, 1059, 1061, 1239, 1315, 1326, 1339, 1360], "410": 1445, "4101": 1326, "410288286": 1354, "41094971": 1317, "41095": 1317, "4130025": [804, 1083], "41358184814453": 1445, "4142135": [784, 1068, 1313, 1433], "41466522216797": 1445, "41614684": [1313, 1318, 1433], "4163033": 1458, "4165789807": 1360, "41666582": 803, "41770416": 518, "4190113959127": 1358, "4194957": 1458, "4196": 1326, "41972351074219": 1445, "42": [516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 582, 588, 619, 710, 716, 738, 964, 1072, 1267, 1340, 1343, 1360, 1431, 1434, 1443, 1466, 1469], "420": 1445, "4209507": 1385, "4212713": 1385, "4223280707176": 1358, "4230705069": 1354, "42419338": 1468, "4263792037783": 1358, "42640156": [804, 1083], "4273176064": 1466, "42807006835938": 1445, "4287": 1373, "4294967289": 862, "4294967291": 862, "4294967292": 888, "4294967295": 1326, "4297j": 1373, "42j": [693, 695], "43": [693, 695, 729, 954, 1059, 1061, 1063, 1267, 1313, 1331, 1353, 1437, 1444, 1466], "430": 1445, "432": 1326, "4320": 892, "4323065": 1466, "43314594": [1320, 1437], "43322435": [804, 1083], "43360388": 1085, "434": 741, "437": 1360, "437153685251": 1358, "4375": 882, "43887842": 716, "4390": 666, "43j": 695, "44": [690, 693, 695, 1061, 1331, 1434, 1443, 1460], "440": [1427, 1445], "44005057": 1348, "4410": 1428, "44116902": [1440, 1468], "44122": 1317, "44122314": 1317, "4427": 1326, "4431417": 1458, "444": 572, "44430563": 1385, "44436368": 1385, "449491": 1085, "44j": [639, 684], "45": [421, 566, 695, 899, 936, 1061, 1108, 1315, 1331, 1338, 1360, 1432, 1474], "450": 1445, "4502": 1373, "4506445": 1434, "452": 1430, "4520254": 524, "453": 1430, "454": [827, 1430, 1434], "455": 1430, "45591735839844": 1445, "456": 1430, "456195": 1434, "4564": 1326, "4567": 499, "459539105": 1360, "45j": [693, 695], "46": [681, 729, 986, 1462], "460": [1445, 1466], "4608": 1326, "4610935": 697, "4636": 1326, "464": 1360, "46401": 1434, "4650": 1326, "4651": 1326, "4657": 499, "4662397": 1458, "46700746": 522, "46713185": 1466, "4675": 499, "468": 981, "4692": 1460, "469475": 1434, "46b5594773cb": 1438, "46j": [679, 693], "47": [693, 695, 698, 813, 883, 942, 944, 985, 1434], "470": 1445, "4725": 1422, "4744": 1326, "4749839305877686": 1444, "477554": 1434, "4776451856": 1346, "4776979920": 1346, "478": 1353, "4782867": 1434, "48": [698, 847, 930, 1360, 1437, 1468], "480": [290, 1445], "481": 666, "48327": 235, "484": [1273, 1414], "485": 1323, "48648298": 1424, "486833": [801, 814], "48737738": [804, 1083], "4877": 1326, "48870957": 1434, "49": [695, 710, 729, 795, 829, 977, 998, 1313, 1320, 1350, 1360, 1434, 1437, 1462], "490": 1445, "4903": 1326, "4915": 666, "493": [998, 1075], "4937": 1373, "496": 1468, "4963": 1373, "4971": 1326, "4d": [506, 517], "4e": 585, "4f": 1460, "4j": [555, 571, 671, 683, 749, 764, 767, 837, 862, 868, 888, 926, 935, 1313, 1437], "4kbi": 1457, "4x": 1320, "4x2": 499, "4x32": 1395, "4x4": [499, 1075, 1462], "4x8x1": 1463, "5": [0, 10, 98, 99, 129, 130, 158, 195, 234, 235, 240, 291, 292, 293, 295, 303, 311, 315, 328, 362, 363, 364, 366, 367, 387, 423, 426, 433, 434, 450, 454, 457, 471, 472, 492, 493, 499, 502, 506, 515, 524, 526, 527, 528, 537, 539, 540, 550, 555, 565, 566, 567, 568, 569, 570, 571, 572, 575, 576, 577, 578, 579, 582, 586, 588, 591, 598, 600, 602, 610, 613, 615, 617, 619, 621, 622, 628, 632, 633, 635, 637, 638, 639, 640, 642, 644, 645, 646, 647, 650, 651, 653, 655, 656, 657, 659, 660, 662, 665, 666, 667, 670, 672, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 701, 708, 710, 711, 712, 713, 714, 715, 719, 721, 725, 727, 729, 730, 731, 734, 735, 736, 737, 739, 741, 745, 749, 750, 757, 758, 759, 765, 768, 769, 776, 777, 778, 779, 780, 781, 782, 783, 788, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 807, 808, 809, 812, 813, 814, 815, 817, 819, 820, 821, 822, 827, 829, 830, 831, 832, 833, 834, 835, 838, 839, 841, 842, 845, 846, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 862, 864, 865, 871, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 892, 894, 895, 897, 898, 901, 902, 903, 904, 905, 906, 907, 908, 911, 912, 913, 915, 916, 918, 919, 920, 923, 924, 927, 930, 932, 934, 935, 936, 937, 939, 941, 942, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 956, 958, 960, 962, 963, 964, 965, 971, 972, 977, 978, 980, 983, 985, 986, 988, 990, 994, 997, 998, 1015, 1043, 1058, 1060, 1063, 1064, 1069, 1070, 1072, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1095, 1096, 1099, 1101, 1108, 1135, 1238, 1239, 1263, 1265, 1267, 1268, 1269, 1270, 1271, 1272, 1280, 1299, 1303, 1304, 1313, 1315, 1319, 1321, 1328, 1331, 1332, 1333, 1334, 1337, 1339, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1358, 1360, 1374, 1382, 1385, 1386, 1394, 1395, 1399, 1411, 1415, 1417, 1420, 1421, 1422, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1449, 1453, 1456, 1458, 1460, 1465, 1467, 1468, 1469, 1470, 1473, 1474], "50": [305, 306, 667, 727, 775, 815, 827, 831, 853, 875, 896, 1047, 1064, 1317, 1339, 1360, 1432, 1439, 1443, 1445], "500": [1272, 1439, 1445], "5000": [1436, 1464], "500e": 667, "50197446": 1468, "5022564": 528, "503": 1356, "50350785": 519, "5048": 1460, "5066295": 1085, "5069753": 1385, "507": 1444, "5071844": 1385, "508031": 808, "509j": 575, "50mb": 1455, "51": [660, 729, 812, 1317, 1434], "510": 1445, "5117505070573": 1358, "512": [827, 1435, 1442, 1449, 1455, 1456, 1458, 1460, 1461, 1462], "513": 981, "51350402832031": 1445, "513605": [1440, 1468], "51512145996094": 1445, "5156": 1326, "516885716": 1343, "5182": 1326, "51j": [693, 695], "52": [697, 827, 1088, 1313, 1320, 1429, 1437, 1443, 1468], "520": 1445, "520033493": 1343, "521": 573, "5224": 1326, "522672": 1385, "5227761": 1385, "524": 571, "5243": 1326, "5244": 1326, "525": 1356, "525117": 1468, "529": 570, "529106145": 1343, "52j": [693, 695], "53": [697, 887, 916, 942, 1060, 1239, 1434, 1435, 1437], "530": 1445, "5309029e": 1108, "532": [573, 916], "53225708007812": 1445, "5331743016213": 1358, "5339818238837": 1358, "534": 1430, "535": 1430, "535548": 1458, "536": [1358, 1430], "53674316e": 674, "536743e": 819, "537": 1358, "53887904": 517, "54": [619, 666, 671, 797, 1043, 1060, 1088, 1343, 1360, 1464, 1468], "540": [1444, 1445], "5403023": [1313, 1343, 1433], "54030231": 1318, "541": 1460, "5418116": 1468, "5423026j": [1313, 1437], "54248166": 1458, "543": 639, "543625": 1348, "543860509": 1331, "54485": 296, "547": 827, "547482522": 1343, "548": 639, "5488135": 1466, "5488135039273248": 1466, "549": 575, "549973693": 1343, "55": [981, 1059, 1360, 1442, 1464], "550": [1430, 1445], "5505103": 1085, "551": 1430, "551600": 1353, "5516644": 518, "551741": 1353, "552": 1430, "553": 1430, "554": 1430, "55526584": 1074, "55818176269531": 1445, "559": 1430, "559373j": [1313, 1437], "55j": 684, "56": [690, 693, 695, 858, 1059, 1468], "560": [1430, 1445], "561016": 1434, "5615997314453": 1445, "562": 1430, "5625": 882, "5627": 1326, "56293887": 523, "567": 981, "569184356": 1466, "57": [563, 574, 693, 1059, 1060, 1061, 1442], "570": [1358, 1445], "5707963e": 1108, "5707964": [648, 1107], "571": [569, 571, 573], "571j": [572, 575], "5723649": 1349, "572365": 1349, "57279968261719": 1445, "573": 1353, "573858283": 1343, "5746": 1326, "576": 1358, "5767248": 1348, "5768": 1326, "577": [948, 1075, 1358], "5776": 1460, "58": [685, 942, 1060, 1239, 1360, 1443], "580": 1445, "584931": 1436, "585866": 1434, "58665067": 1424, "586697": 1434, "5868": 1326, "587": [827, 1358], "588": 827, "58j": [684, 685, 686, 693, 695], "59": [563, 619, 684, 1360, 1437, 1464], "590": 1445, "591674": 1385, "592": 1043, "5930698237612": 1358, "59403396": 1444, "594215549": 1466, "59566": 296, "5984": 1460, "59848": 1317, "59848022": 1317, "5989196": 1468, "59993696": 1458, "5_spmd": 1350, "5d": 517, "5e": [585, 587], "5j": [563, 632, 633, 637, 683, 684, 688, 695, 745, 911, 926, 949, 963, 1084, 1101, 1313, 1437], "6": [61, 73, 98, 137, 234, 236, 240, 290, 303, 311, 315, 335, 362, 363, 364, 365, 366, 367, 387, 423, 433, 434, 450, 471, 472, 479, 484, 493, 499, 502, 511, 538, 540, 548, 555, 565, 566, 567, 568, 578, 579, 582, 585, 586, 588, 598, 600, 610, 615, 617, 621, 622, 628, 634, 635, 637, 638, 642, 644, 645, 646, 647, 650, 651, 653, 655, 656, 659, 660, 662, 665, 666, 670, 671, 674, 675, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 699, 701, 711, 712, 713, 719, 721, 724, 725, 730, 731, 736, 737, 738, 739, 741, 750, 758, 765, 766, 767, 777, 778, 780, 781, 782, 788, 794, 795, 796, 799, 802, 803, 804, 807, 808, 809, 812, 813, 815, 816, 819, 821, 827, 829, 830, 831, 832, 833, 834, 835, 838, 839, 841, 847, 848, 849, 850, 851, 853, 855, 856, 857, 858, 862, 864, 865, 871, 873, 874, 875, 876, 879, 880, 881, 883, 884, 885, 886, 888, 890, 892, 894, 895, 897, 898, 901, 902, 907, 908, 912, 915, 916, 918, 919, 923, 924, 926, 930, 933, 934, 935, 937, 939, 941, 944, 946, 947, 948, 950, 952, 956, 958, 960, 962, 963, 964, 965, 971, 978, 980, 981, 983, 985, 986, 988, 990, 994, 995, 996, 998, 1058, 1059, 1060, 1064, 1078, 1081, 1083, 1085, 1089, 1090, 1091, 1094, 1099, 1100, 1149, 1267, 1269, 1271, 1281, 1304, 1313, 1318, 1320, 1331, 1332, 1333, 1334, 1339, 1342, 1343, 1346, 1349, 1350, 1353, 1354, 1374, 1382, 1385, 1386, 1395, 1415, 1421, 1422, 1424, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1453, 1455, 1456, 1457, 1460, 1465, 1467, 1468, 1473, 1474], "60": [648, 660, 666, 775, 778, 896, 1064, 1313, 1356, 1439, 1443, 1445, 1468], "600": 1445, "60000": 1442, "600000": 800, "6002": 1357, "6006": 1464, "60130310058594": 1445, "6014": 1326, "6022964": 527, "60237121582031": 1445, "6027633760716439": 1466, "60276338": 1466, "602836": 1434, "6028657": 518, "604": 1043, "6047": 1326, "6050892": 517, "60544": 1445, "60576403": 1466, "6057640314102173": 1466, "606": 1343, "60663575": 1348, "607": 1343, "6085": 1326, "61": [619, 660, 691, 693, 695, 710, 729, 776, 827, 883, 1317, 1434, 1437], "610": 1445, "610491522": 1466, "6112": 1326, "612": 1414, "6129": 1326, "6129413": 524, "613": 1075, "6136": 1326, "61430776": 1303, "6145": 1326, "6156273667873": 1358, "6162715": 1434, "6165": 1326, "61677957": 522, "619b39acbaac": 1432, "62": [619, 639, 660, 666, 692, 729, 1059, 1460], "620": 1445, "6209": [293, 295], "6211": 1460, "623": 827, "624": 1466, "62452": 296, "62471": 1317, "62471008": 1317, "625": [715, 779], "62597656": 1317, "62598": 1317, "6262": 1326, "627": 932, "6274805": 1458, "6288222": 1385, "62893456": 1385, "63": [609, 671, 674, 1313, 1437], "630": 1445, "6310087": 1385, "6310593": 1385, "63115686": 524, "634": [570, 571], "6343j": 1373, "634j": 572, "63500065": [804, 1083], "635532": 1385, "635j": 1373, "636": 1419, "6360": 1326, "6361": 1460, "6369617": 1348, "637": 930, "63918": 1434, "6393332": 519, "6396022": [804, 1083], "63960224": [804, 1083], "63j": [693, 695], "64": [166, 238, 305, 306, 348, 539, 540, 563, 602, 617, 697, 717, 780, 789, 791, 795, 829, 890, 893, 909, 923, 982, 1013, 1033, 1064, 1122, 1323, 1328, 1339, 1341, 1360, 1426, 1432, 1452, 1458, 1468, 1473], "640": 1445, "645": 1444, "646": 1414, "648": 1462, "64862": 1317, "64862061": 1317, "649": 677, "649452": 1373, "64bit": 1323, "65": [566, 1060, 1360, 1455], "650": 1445, "6501": 1326, "6507808565617": 1358, "651": 666, "6532": 1326, "6534991": [804, 1083], "654": 981, "6545286": 1458, "6545715": 716, "6561": 296, "6569": 1326, "6569866": 1440, "657": 827, "6572": 1326, "65979004": 1317, "6598": 1317, "66": [809, 950, 981, 1435, 1455], "660": 1445, "6604483": 520, "6621": 1460, "6666657": 803, "6666666": [963, 1066, 1067, 1079, 1080], "66666666666666": 1460, "6666667": [426, 837, 868, 963, 1079, 1080], "6668043e": 1108, "667": 1078, "668": 1460, "6699999570846558": 1430, "66j": 684, "67": [296, 599, 684, 685, 686, 689, 690, 691, 693, 695, 858, 883, 983, 1239, 1429, 1430], "670": 1445, "670236": 1385, "6702557143142": 1358, "67060554": 1385, "6707332269023": 1358, "6717": 1326, "6720": 1326, "6732632423543772848170429916717": 541, "6733112": 1468, "67402434": 522, "674587": 1458, "6756169e": 526, "6760131792959": 1358, "676704": 493, "676747479": 1466, "6777936517823": 1358, "67948914": 1317, "67949": 1317, "6797972": 1434, "68": [78, 79, 81, 563, 698, 1468], "680": 1445, "6827": 1326, "68294197": 1318, "682942": [1440, 1468], "685": 1326, "6865721": 519, "6866574": 524, "6875": 779, "6883": 1326, "68864440917969": 1445, "689": 1313, "6890297": [1320, 1437], "6892": 1326, "68939": 1317, "68939209": 1317, "6899": 1425, "6899995": 1074, "69": [563, 872, 1360, 1444], "690": 1445, "69001764": [1320, 1437], "6900277": 1434, "6902338": 1458, "6904554": 1470, "691938": 528, "69244087": 1468, "6937828": 1373, "6947": 1326, "6950": 1326, "6956": 1326, "696824676": 1466, "69735717773438": 1445, "6978912984252": 1358, "698959": 1434, "6999998": 841, "6j": [678, 683, 695, 862, 888, 898, 938, 963], "6x": [1320, 1374, 1462], "7": [98, 303, 315, 362, 363, 364, 387, 433, 434, 471, 472, 499, 502, 506, 516, 526, 528, 565, 567, 570, 578, 582, 585, 586, 588, 598, 602, 621, 622, 628, 632, 633, 639, 650, 651, 653, 655, 656, 659, 660, 662, 665, 666, 667, 670, 678, 679, 681, 683, 684, 685, 688, 690, 691, 692, 693, 695, 698, 701, 708, 711, 712, 713, 730, 731, 734, 735, 736, 739, 757, 765, 777, 781, 782, 788, 796, 799, 801, 804, 812, 814, 815, 827, 830, 831, 832, 833, 835, 838, 839, 841, 848, 849, 850, 851, 856, 857, 862, 864, 865, 872, 874, 879, 880, 882, 883, 886, 887, 888, 894, 895, 897, 902, 906, 908, 911, 912, 915, 918, 919, 920, 926, 937, 942, 943, 947, 952, 954, 956, 958, 960, 962, 965, 978, 986, 988, 990, 1015, 1019, 1022, 1059, 1060, 1063, 1069, 1083, 1091, 1094, 1096, 1097, 1100, 1108, 1239, 1267, 1303, 1313, 1315, 1319, 1333, 1334, 1339, 1342, 1343, 1346, 1354, 1358, 1360, 1373, 1385, 1386, 1395, 1415, 1421, 1424, 1426, 1429, 1431, 1432, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1453, 1456, 1463, 1468], "70": [697, 775, 1064, 1081, 1313, 1445, 1468], "700": 1445, "7030899164106": 1358, "7042": 1326, "707": [638, 790, 929, 938], "70710677": [784, 789, 1068, 1070], "7077524804807109": 1318, "707j": [790, 938], "7088872126624": 1460, "71": [563, 693, 695, 856, 1435, 1455], "710": 1445, "7102678": 1385, "7104083": 1385, "7104991444398": 1358, "711355": 1434, "7133658182976": 1460, "7144494518315": 1358, "71479625": 523, "7151893663724195": 1466, "71518937": 1466, "7177599838802657": 1318, "7178471720636": 1358, "7182817": 1444, "719": 981, "7196": 1326, "71j": 1088, "72": [964, 1315, 1316, 1437, 1455, 1468], "720": [567, 644, 1445], "7214407167121": 1460, "72172546": 1317, "72173": 1317, "72174072": 1317, "7229": 1326, "722961019": 1429, "7230015": 528, "72503686": 1434, "726157440174": 1358, "7268": 1317, "72680664": 1317, "7271": 1373, "72747803": 1317, "72748": 1317, "7278922": [1313, 1433], "72949654": 1348, "72965544": 1348, "72971725": 1385, "7298445": 1385, "72j": [693, 695], "73": [1059, 1239, 1349, 1435], "730": 1445, "7310586": [1313, 1433], "7317": 1326, "7320509": [1313, 1433], "7320935035265": 1358, "734": 566, "7352965": 1468, "7354604": [1320, 1437], "73571277": 1425, "7357177734375": 1445, "7361260076634": 1358, "7363498e": 1441, "73712474": 517, "7376612408998": 1358, "739723": 1434, "73j": [678, 681, 685, 692], "74": [639, 691, 932, 983, 1313, 1320, 1437, 1442], "740": 1445, "7409311e": 526, "74162567": 1458, "7416575": [801, 814], "742": 1075, "7429386": 1470, "7441479": 1374, "74414825": 1374, "7446210750584": 1358, "74519426": 1085, "745281": 1071, "7461": 1326, "74853515625": 1445, "7492269469092": 1358, "74j": [693, 695], "75": [684, 688, 689, 710, 715, 733, 779, 797, 815, 853, 855, 875, 897, 936, 1059, 1313, 1349, 1352, 1426, 1429, 1433, 1455], "750": 1445, "752513": 1434, "75262755": 518, "75341904": [1313, 1437], "754": [667, 697, 1473], "75433": 1317, "7543335": 1317, "7568025": [1348, 1440], "7581426": [804, 1083], "7581523280307": 1358, "76": [683, 887, 981, 1059, 1084, 1313, 1340, 1435, 1468], "760": 1445, "760109": 1434, "7613": 1326, "7619329": 518, "762": [949, 1331], "7620008": [804, 1083], "762535": 801, "763": [570, 1331], "76364135742188": 1445, "764": 1331, "76405235": 1421, "765": 1331, "766": 1331, "7662": 1326, "7676109": 523, "76827": 296, "7683716e": 883, "77": [566, 732, 1313, 1320, 1340, 1437, 1460], "770": 1445, "7717": 1445, "77225566": 1385, "7724008": 1385, "7728694": 808, "7732": 1326, "7733": 1326, "7737": 1326, "773956": 716, "7747": 1326, "775": 981, "775133": 1434, "775211": 1458, "7768645e": 1108, "777622": 1434, "7798324141778": 1358, "78": [660, 690, 693, 695, 1061, 1460], "780": 1445, "7802": 1326, "78051674": 1458, "78232": 296, "7839": 1326, "784": [1434, 1435, 1442, 1443], "785": 573, "786": 1075, "7870499": [804, 1083], "78907233": 67, "78j": 1084, "79": [574, 698, 1082, 1437, 1460], "790": 1445, "79051971435547": 1445, "7907": 1326, "7925": 1326, "7927": 1326, "7936": 1326, "7949833": 517, "79611576": 521, "7987": 1326, "7995253": 1458, "79j": [678, 692, 695], "7j": [573, 683, 903, 1313, 1437], "7th": 1343, "8": [13, 61, 84, 166, 303, 315, 316, 362, 363, 364, 387, 433, 434, 445, 446, 471, 472, 498, 499, 500, 502, 506, 526, 528, 540, 555, 565, 578, 585, 586, 587, 598, 610, 617, 621, 628, 633, 635, 637, 650, 651, 653, 655, 656, 660, 662, 665, 666, 670, 679, 681, 683, 684, 685, 688, 690, 691, 693, 695, 699, 701, 710, 712, 714, 719, 727, 735, 736, 739, 741, 777, 780, 781, 782, 788, 796, 799, 802, 812, 815, 816, 820, 822, 830, 831, 832, 833, 834, 835, 838, 841, 847, 849, 858, 865, 871, 872, 874, 880, 883, 886, 887, 890, 894, 905, 908, 910, 912, 915, 918, 919, 920, 937, 938, 939, 943, 944, 952, 956, 958, 960, 962, 963, 964, 965, 971, 982, 983, 986, 988, 990, 998, 1058, 1060, 1064, 1069, 1087, 1091, 1095, 1097, 1099, 1108, 1135, 1239, 1267, 1304, 1313, 1315, 1317, 1331, 1332, 1333, 1334, 1339, 1341, 1342, 1343, 1346, 1350, 1354, 1358, 1360, 1367, 1382, 1386, 1395, 1402, 1404, 1410, 1411, 1415, 1417, 1422, 1424, 1426, 1430, 1431, 1432, 1435, 1437, 1438, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1467, 1468, 1473, 1474], "80": [87, 775, 1064, 1437, 1445, 1453, 1460], "800": 1445, "8000": 1431, "8000002": 841, "8047469e": 526, "8051": 1460, "80833": 1445, "808557": 1434, "8088631": 519, "8089": 1460, "81": [708, 797, 1059, 1434, 1435], "810": 1445, "810046": 1434, "811": 827, "81115675": 1468, "811b7ddb3300": 1432, "8121": 1326, "8132702": 1348, "81566876": 519, "8158": 1326, "81585354": 1348, "818": [572, 1419], "818481": 1434, "818595": [1440, 1468], "818634": 1434, "819": 1460, "8192": [1353, 1434, 1443, 1460], "81989": 1445, "819e9": 1460, "819gb": 1460, "82": [238, 667, 942, 1059, 1313], "820": 1445, "8227171": 1071, "822799": 1464, "823": 981, "824237": [1440, 1468], "825": 1075, "8258905": 1468, "826": 1460, "8261659": 1458, "8290": 666, "8293481": 1385, "82974285": 1385, "829906058": 1466, "8299482112": 1343, "83": [684, 686, 729, 1313], "830": 1445, "831": [666, 741], "8315067": [807, 1089], "8333335": 834, "8347540e": 1108, "83563": 1317, "83563232": 1317, "83594": 1373, "836": 1424, "83602": 501, "836303": 527, "84": [619, 1060, 1460], "840": 1445, "8400499820709229": 1442, "8402481j": 1373, "84032": 1445, "84033": 1373, "840334": [1440, 1468], "840824": 1373, "8414632": 522, "84147": [293, 295], "8414709568023682": 1333, "84147096": [1313, 1342, 1433, 1440], "841471": [1336, 1348], "8430": 1326, "843624": 290, "845365j": 1373, "84567260742188": 1445, "8469000458717346": 1442, "848": 1460, "84848": 1445, "849": 827, "85": [641, 1060, 1088, 1353], "850": 1445, "8511534j": [1313, 1437], "8518669": 522, "8526619429658": 1358, "8532515": 1434, "8539824e": 1108, "85629272460938": 1445, "8574043": 1348, "85743": 296, "858128": 1434, "86": [666, 710, 1059, 1060, 1468], "860": 1445, "86013": 1434, "86097646": 1458, "861367": 1434, "862": 1424, "8634": 1326, "866": 638, "8662417": 528, "8675309": 811, "8678": 1326, "8680282": 1444, "86f83c871e81": 1438, "87": [563, 667], "870": 1445, "8711953e": 1108, "87225807": 520, "87239074707031": 1445, "87282": 1434, "873": 981, "8740077": [804, 1083], "8743029": 1458, "8743667006492615": 1442, "8745": 1460, "8784217": 1385, "8785025": 1385, "8791": 1464, "8793": 1430, "8794": 1430, "8795": 1430, "87j": [678, 679, 681, 686], "88": [1059, 1060, 1084, 1313, 1320, 1360, 1437, 1460], "880": 1445, "8803000450134277": 1442, "8805201": 1425, "8807971": [1313, 1433], "881": 572, "881943": 796, "88632202148438": 1445, "88j": [693, 695], "89": [690, 698, 1430, 1442], "890": 1445, "8901500105857849": 1442, "8902587890625": 1445, "89036560058594": 1445, "8907": 1326, "8907972116419": 1358, "893": 572, "8931118": 1468, "8941": 1326, "8948097": 1470, "8957000374794006": 1442, "89874267578125": 1445, "8991333246231079": 1442, "8j": 926, "8m32": 1431, "8tb": 1458, "8x": 1462, "8x128": 1457, "8x128x1x1": 1457, "8x128x8x128": 1457, "8x4x2": 1463, "8x4xf32": 1350, "9": [76, 87, 98, 137, 246, 247, 303, 362, 363, 364, 387, 433, 434, 471, 472, 479, 484, 502, 506, 555, 567, 572, 574, 578, 585, 586, 587, 602, 610, 616, 621, 628, 633, 641, 642, 645, 647, 650, 651, 653, 655, 656, 659, 660, 662, 665, 666, 667, 670, 674, 677, 678, 681, 690, 691, 692, 693, 695, 698, 701, 708, 712, 725, 727, 730, 731, 741, 778, 781, 782, 788, 796, 801, 807, 808, 809, 812, 814, 815, 819, 831, 832, 833, 834, 835, 850, 851, 857, 858, 865, 874, 879, 880, 882, 883, 886, 888, 894, 908, 912, 915, 918, 919, 932, 935, 937, 939, 943, 944, 950, 952, 956, 958, 960, 962, 963, 965, 982, 983, 986, 990, 998, 1058, 1060, 1069, 1089, 1091, 1097, 1099, 1239, 1267, 1313, 1315, 1328, 1331, 1339, 1342, 1343, 1346, 1350, 1354, 1356, 1358, 1360, 1367, 1386, 1395, 1412, 1420, 1424, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1440, 1442, 1443, 1444, 1453, 1460, 1467, 1468], "90": [311, 648, 775, 778, 899, 915, 981, 1064, 1107, 1108, 1328, 1360, 1430, 1445, 1453, 1460], "900": 1445, "9001": 1464, "9026976e": 526, "903700053691864": 1442, "90433645": 523, "904491": [1313, 1437], "9047365": 527, "9051978525331": 1358, "9061833620071411": 1442, "9064622": 1374, "9064634": 1374, "9066": 1326, "907651": 1434, "9087000489234924": 1442, "9088": 1460, "9092974": [1313, 1336, 1342, 1348, 1433, 1440], "9092974066734314": 1333, "9092974662780762": [1333, 1336], "91": [1082, 1430, 1460], "910": 1445, "91113025": [1313, 1433], "9113333225250244": 1442, "9119454": 523, "91204834": 1317, "91205": 1317, "9120717": 517, "912600040435791": 1442, "912752": 1468, "91275555": 1348, "913": 1313, "9133632183074951": 1444, "91421": 296, "9148926": 1458, "9156666994094849": 1435, "9156833291053772": 1442, "9176000356674194": 1442, "9178": 1326, "9178486": [1440, 1468], "9184": 1326, "91874694824219": 1445, "9189": 1326, "9192000031471252": 1442, "9199000000953674": 1435, "91j": 1084, "92": [686, 831, 983, 1088, 1317, 1430, 1460], "920": 1445, "920298": 1443, "920299": 1443, "9209373": 1058, "9213133e": 1108, "9214000701904297": 1442, "9220": 1343, "9222500324249268": 1442, "92279494": 1468, "92330932617188": 1445, "9240990200157": 1358, "9241000413894653": 1442, "9253666996955872": 1442, "925881": 1434, "9263": [1402, 1416, 1428, 1466], "9267": 1460, "9269000291824341": 1442, "927": 677, "928": 1317, "9282": 1343, "92j": [693, 695], "93": [883, 1317, 1430], "930": 1445, "9311": 1326, "933040465": 1466, "9350724": 1348, "9370499849319458": 1435, "9383999705314636": 1435, "93j": [679, 695], "94": [883, 986], "940": 1445, "940545j": [1313, 1437], "9407": 1428, "941": 1460, "9419": 1428, "941e": 667, "943": 1414, "94398826": 1470, "944": 741, "9467999935150146": 1435, "947667": [1402, 1425], "948": 827, "9490833282470703": 1435, "95": [305, 306, 660, 693, 695, 776, 883, 1353, 1435, 1442], "950": 1445, "95065307617188": 1445, "95257413": [1313, 1433], "953": 1462, "953006": [804, 1083], "95321447": 520, "9532999992370605": 1435, "95348358154297": 1445, "9542246": 1458, "9545448661609": 1358, "9547038": 1458, "954962": 1458, "95585632324219": 1445, "9562": 1326, "9568833708763123": 1435, "957": 981, "9574999809265137": 1435, "95799255371094": 1445, "9589243": 1440, "9596": 1414, "96": [660, 684, 883, 977, 1343, 1434, 1445], "960": 1445, "960099": 1434, "9604645e": 936, "961043": 289, "9615999460220337": 1435, "9620": 1326, "962584079": 1466, "9631666541099548": 1435, "963323": 1458, "964": 949, "9652999639511108": 1435, "967199981212616": 1435, "9675000309944153": 1435, "9697036743164": 1445, "96j": 695, "96mb": 1455, "97": [619, 1019, 1060, 1072, 1339, 1445], "970": 1445, "9709500074386597": 1435, "9714314": 1458, "9729187": [1320, 1437], "97329711914062": 1445, "9736999869346619": 1435, "9753758": 1458, "97606325": 1468, "9774251": 1468, "9785799": 1425, "9787164": [1440, 1468], "978733": 1343, "978767": 1343, "9791922366721637": 1466, "9799849932008908": 1318, "979984993200891": 1318, "98": [674, 964, 1360, 1445], "980": 1445, "9802322e": 936, "9812148": [1440, 1468], "98229736": 1468, "98279375": 563, "983416": 1434, "983j": 1373, "9843135": 856, "984375": 858, "984j": 1373, "98526000976562": 1445, "9856": 1460, "9858954": 1458, "98690795898438": 1445, "988": 1462, "9896846": [1313, 1437], "9899": 1326, "9899924966004454": 1318, "9899925": [1313, 1433], "99": [621, 710, 750, 873, 896, 964, 1439, 1445], "990": 1445, "9906": 1326, "9917": 1414, "992": 1075, "9940": 666, "9946": 1326, "99478912353516": 1445, "995": 949, "9950": 1414, "9955574": 1458, "99563598632812": 1445, "996": 1460, "999": [844, 1367, 1425], "999859": 1373, "9999": [1414, 1464], "99998045": [1440, 1468], "99999974e": 1350, "9999998": 863, "9999999": 863, "99999994": 1107, "99999997e": 819, "99j": [679, 692, 693, 695], "A": [29, 62, 63, 64, 67, 69, 71, 73, 74, 75, 76, 82, 83, 84, 85, 96, 101, 102, 113, 114, 121, 128, 132, 133, 135, 136, 137, 143, 153, 160, 166, 173, 174, 182, 194, 201, 202, 203, 204, 209, 210, 211, 218, 219, 220, 221, 235, 236, 241, 251, 262, 263, 264, 268, 277, 281, 282, 283, 284, 285, 288, 289, 290, 292, 293, 295, 296, 311, 328, 337, 339, 342, 345, 368, 382, 383, 392, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 414, 419, 422, 456, 475, 481, 484, 492, 498, 500, 501, 502, 503, 504, 506, 517, 518, 519, 520, 521, 522, 523, 535, 536, 539, 563, 565, 566, 582, 588, 624, 625, 633, 636, 637, 641, 642, 652, 653, 654, 655, 659, 664, 667, 670, 676, 682, 683, 687, 689, 690, 691, 696, 704, 705, 706, 715, 716, 717, 722, 735, 736, 738, 743, 746, 750, 751, 752, 753, 754, 758, 760, 761, 764, 765, 766, 767, 768, 769, 770, 777, 783, 784, 789, 790, 793, 796, 804, 805, 806, 807, 814, 824, 836, 844, 865, 872, 873, 874, 878, 879, 882, 883, 887, 893, 895, 896, 901, 907, 908, 909, 912, 917, 927, 935, 937, 951, 957, 958, 961, 962, 967, 968, 969, 970, 973, 974, 975, 998, 1006, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1139, 1140, 1143, 1149, 1218, 1256, 1260, 1262, 1263, 1264, 1266, 1267, 1268, 1273, 1275, 1276, 1278, 1302, 1303, 1304, 1313, 1315, 1318, 1319, 1320, 1325, 1326, 1328, 1329, 1331, 1334, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1351, 1353, 1354, 1360, 1367, 1368, 1373, 1374, 1382, 1386, 1395, 1402, 1404, 1405, 1411, 1412, 1414, 1417, 1418, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1449, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1466, 1468, 1470, 1471, 1474], "AND": [322, 323, 324, 325, 440, 601, 823], "AS": [1435, 1442], "And": [696, 965, 1313, 1318, 1329, 1339, 1341, 1342, 1343, 1348, 1350, 1353, 1360, 1417, 1424, 1425, 1432, 1433, 1436, 1437, 1439, 1440, 1443, 1452, 1453, 1457, 1469], "As": [67, 113, 114, 235, 343, 344, 378, 381, 457, 502, 553, 697, 772, 864, 965, 998, 1012, 1104, 1123, 1313, 1315, 1318, 1321, 1326, 1329, 1331, 1334, 1336, 1339, 1341, 1342, 1343, 1348, 1349, 1350, 1353, 1354, 1357, 1360, 1373, 1385, 1410, 1412, 1413, 1414, 1415, 1417, 1419, 1420, 1421, 1422, 1424, 1427, 1429, 1431, 1433, 1434, 1438, 1440, 1443, 1444, 1448, 1449, 1452, 1455, 1457, 1458, 1461, 1462, 1463, 1466, 1468, 1474], "At": [67, 160, 789, 791, 1083, 1273, 1312, 1313, 1318, 1319, 1340, 1343, 1346, 1350, 1353, 1360, 1412, 1413, 1416, 1417, 1425, 1426, 1430, 1431, 1432, 1433, 1435, 1442, 1443, 1445, 1449, 1452, 1453, 1457, 1458, 1460], "BE": [144, 145, 147, 148, 149, 150, 151, 155], "Be": [773, 909, 1339, 1431, 1464], "Being": 1455, "But": [67, 92, 113, 114, 120, 800, 882, 885, 1313, 1318, 1319, 1320, 1328, 1331, 1334, 1336, 1341, 1343, 1349, 1350, 1354, 1357, 1358, 1410, 1413, 1414, 1415, 1417, 1418, 1419, 1421, 1423, 1424, 1426, 1433, 1434, 1437, 1438, 1440, 1443, 1444, 1456, 1457, 1469], "By": [10, 82, 121, 263, 284, 296, 304, 360, 361, 381, 435, 457, 493, 559, 564, 574, 640, 772, 832, 834, 835, 838, 849, 850, 851, 852, 854, 856, 857, 858, 860, 892, 894, 895, 901, 933, 942, 944, 982, 983, 987, 994, 995, 996, 997, 1084, 1088, 1218, 1239, 1273, 1313, 1318, 1326, 1331, 1334, 1336, 1337, 1339, 1340, 1343, 1346, 1348, 1353, 1354, 1357, 1360, 1373, 1382, 1408, 1412, 1413, 1419, 1420, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1436, 1438, 1441, 1443, 1444, 1449, 1455, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1468, 1475], "For": [10, 13, 18, 21, 67, 71, 73, 75, 76, 77, 80, 81, 83, 85, 96, 98, 99, 113, 114, 119, 120, 121, 127, 131, 137, 172, 173, 183, 194, 246, 247, 262, 283, 288, 289, 290, 292, 296, 297, 298, 303, 311, 315, 316, 335, 336, 337, 343, 344, 345, 346, 349, 357, 359, 360, 363, 366, 381, 398, 399, 416, 417, 420, 421, 426, 431, 433, 434, 450, 456, 458, 459, 460, 461, 462, 463, 464, 468, 469, 473, 479, 487, 492, 499, 500, 502, 505, 506, 508, 535, 537, 541, 548, 555, 566, 567, 568, 569, 570, 571, 572, 573, 575, 600, 610, 623, 628, 633, 636, 637, 639, 641, 660, 663, 665, 666, 674, 675, 677, 683, 695, 696, 697, 699, 712, 713, 726, 740, 746, 749, 757, 758, 759, 783, 785, 789, 793, 795, 799, 800, 801, 807, 816, 819, 824, 829, 830, 833, 834, 836, 839, 860, 861, 862, 872, 879, 885, 887, 888, 890, 893, 895, 896, 898, 901, 904, 907, 909, 915, 916, 917, 918, 919, 925, 926, 932, 933, 936, 938, 939, 940, 946, 947, 949, 953, 965, 972, 973, 974, 975, 976, 981, 989, 990, 998, 1003, 1004, 1005, 1006, 1012, 1013, 1041, 1043, 1066, 1071, 1072, 1077, 1079, 1083, 1090, 1093, 1123, 1124, 1135, 1148, 1149, 1218, 1238, 1239, 1260, 1275, 1304, 1306, 1307, 1309, 1310, 1312, 1313, 1315, 1316, 1318, 1319, 1321, 1322, 1323, 1326, 1328, 1329, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1357, 1358, 1360, 1373, 1374, 1382, 1385, 1387, 1395, 1399, 1402, 1404, 1405, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1472, 1473, 1474, 1475], "IT": 1448, "If": [10, 61, 67, 69, 71, 76, 81, 82, 83, 85, 95, 96, 97, 98, 99, 101, 102, 108, 113, 119, 127, 131, 132, 133, 135, 137, 138, 153, 155, 160, 172, 173, 174, 177, 182, 194, 203, 206, 212, 216, 219, 220, 224, 228, 233, 235, 239, 244, 246, 247, 249, 251, 263, 284, 288, 289, 290, 291, 292, 293, 295, 296, 297, 301, 303, 304, 311, 313, 322, 324, 325, 331, 336, 337, 343, 344, 348, 349, 359, 361, 362, 363, 364, 365, 366, 367, 368, 372, 373, 375, 378, 379, 380, 381, 382, 383, 392, 395, 397, 398, 404, 405, 406, 407, 409, 411, 412, 414, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 430, 431, 432, 433, 435, 449, 450, 453, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 469, 475, 476, 479, 480, 481, 482, 483, 493, 494, 496, 498, 499, 500, 501, 506, 508, 526, 533, 534, 539, 545, 550, 559, 560, 563, 564, 565, 568, 576, 577, 578, 579, 580, 582, 583, 588, 591, 598, 600, 622, 623, 628, 629, 630, 636, 637, 640, 641, 644, 645, 646, 647, 650, 651, 656, 657, 663, 664, 675, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 701, 716, 717, 722, 727, 729, 735, 736, 737, 738, 740, 746, 747, 750, 757, 758, 760, 763, 765, 777, 784, 785, 794, 798, 806, 807, 809, 812, 814, 815, 827, 832, 834, 835, 836, 838, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 860, 864, 872, 874, 877, 878, 882, 883, 884, 885, 887, 892, 894, 896, 906, 907, 910, 911, 912, 914, 917, 918, 919, 920, 923, 924, 934, 935, 937, 940, 941, 942, 944, 946, 947, 950, 951, 954, 955, 957, 961, 971, 972, 973, 974, 975, 976, 977, 982, 983, 987, 989, 990, 998, 1012, 1019, 1022, 1043, 1045, 1058, 1059, 1060, 1061, 1062, 1063, 1070, 1071, 1072, 1074, 1082, 1083, 1086, 1087, 1089, 1090, 1098, 1099, 1101, 1102, 1103, 1106, 1136, 1138, 1147, 1149, 1196, 1218, 1238, 1239, 1256, 1264, 1266, 1267, 1271, 1274, 1278, 1280, 1302, 1303, 1304, 1312, 1313, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1326, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1367, 1382, 1395, 1399, 1402, 1404, 1410, 1411, 1412, 1413, 1415, 1417, 1418, 1419, 1420, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1437, 1439, 1440, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1473, 1475], "In": [9, 10, 61, 67, 84, 99, 127, 194, 197, 199, 219, 262, 283, 290, 296, 304, 305, 306, 337, 339, 343, 344, 357, 378, 415, 421, 424, 456, 463, 486, 493, 499, 591, 600, 621, 634, 641, 642, 650, 660, 666, 667, 675, 719, 772, 773, 774, 793, 795, 801, 803, 829, 845, 846, 860, 864, 873, 878, 906, 923, 965, 971, 972, 998, 1003, 1012, 1072, 1077, 1085, 1104, 1105, 1106, 1256, 1279, 1280, 1304, 1312, 1313, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1325, 1326, 1327, 1329, 1331, 1332, 1333, 1334, 1336, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1357, 1360, 1368, 1382, 1395, 1402, 1404, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1437, 1438, 1440, 1441, 1443, 1444, 1448, 1449, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1473, 1474], "It": [67, 74, 76, 81, 85, 99, 131, 137, 160, 174, 184, 237, 248, 249, 289, 290, 296, 297, 452, 493, 499, 502, 504, 506, 540, 548, 666, 717, 832, 849, 852, 881, 883, 884, 887, 916, 981, 987, 998, 1012, 1088, 1093, 1098, 1103, 1106, 1148, 1159, 1161, 1163, 1164, 1192, 1194, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1282, 1283, 1302, 1303, 1313, 1318, 1319, 1321, 1324, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1336, 1339, 1341, 1342, 1343, 1346, 1350, 1354, 1358, 1360, 1374, 1375, 1382, 1385, 1386, 1402, 1405, 1411, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1441, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1464, 1466, 1468, 1469, 1474, 1475], "Its": [0, 67, 114, 289, 290, 297, 337, 430, 493, 501, 998, 1302, 1303, 1313, 1318, 1319, 1326, 1374, 1382, 1385, 1404, 1422, 1425, 1433], "NOT": [322, 323, 324, 325, 824, 1328], "No": [10, 236, 860, 1326, 1333, 1343, 1353, 1360, 1395, 1441, 1453, 1455, 1457, 1464], "Not": [25, 194, 841, 916, 952, 1088, 1316, 1335, 1343, 1411, 1415, 1417, 1424, 1435, 1444, 1449, 1453, 1457, 1464], "OF": [1435, 1442], "OR": [322, 323, 324, 325, 443, 606, 825, 1336, 1339, 1435, 1442, 1448], "Of": [73, 1435, 1442, 1462], "On": [94, 99, 137, 153, 248, 397, 499, 998, 1001, 1326, 1328, 1339, 1343, 1348, 1350, 1353, 1354, 1356, 1358, 1382, 1395, 1414, 1415, 1418, 1426, 1431, 1434, 1443, 1449, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1464], "One": [69, 242, 434, 529, 536, 596, 629, 630, 634, 757, 772, 774, 785, 864, 1313, 1318, 1319, 1324, 1325, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1354, 1360, 1410, 1411, 1414, 1415, 1418, 1419, 1420, 1426, 1429, 1433, 1434, 1437, 1438, 1444, 1448, 1449, 1452, 1457, 1460, 1462, 1465, 1467], "Or": [1318, 1339, 1343, 1353, 1375, 1395, 1415, 1417, 1426, 1443, 1448, 1449, 1458, 1463, 1465], "Such": [296, 499, 1316, 1321, 1342, 1346, 1382, 1386, 1411, 1418, 1426, 1469], "TO": [144, 145, 147, 148, 149, 150, 151, 155], "That": [67, 76, 120, 327, 422, 435, 439, 456, 486, 1043, 1313, 1316, 1318, 1319, 1320, 1331, 1334, 1339, 1340, 1349, 1350, 1354, 1357, 1411, 1413, 1415, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1426, 1429, 1431, 1432, 1433, 1436, 1437, 1438, 1440, 1443, 1444, 1448, 1452, 1457, 1460, 1463, 1465, 1466, 1468, 1470, 1474], "The": [10, 24, 38, 48, 49, 50, 67, 69, 76, 78, 81, 82, 83, 84, 85, 92, 96, 97, 98, 99, 101, 114, 120, 121, 127, 128, 136, 137, 140, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 160, 172, 173, 174, 177, 178, 182, 183, 184, 186, 187, 190, 194, 201, 202, 211, 212, 216, 218, 223, 235, 236, 244, 246, 247, 251, 253, 262, 263, 264, 268, 277, 281, 282, 283, 284, 285, 289, 290, 291, 292, 295, 296, 297, 304, 305, 306, 311, 321, 335, 336, 337, 338, 339, 343, 344, 345, 357, 361, 365, 367, 378, 381, 387, 395, 397, 401, 403, 406, 408, 409, 410, 423, 424, 431, 435, 449, 450, 456, 457, 458, 459, 460, 461, 462, 471, 473, 475, 479, 486, 492, 493, 498, 499, 500, 501, 502, 503, 504, 506, 510, 515, 517, 525, 530, 539, 540, 545, 550, 553, 559, 564, 565, 566, 570, 572, 574, 575, 578, 580, 585, 587, 599, 600, 609, 613, 621, 628, 635, 636, 639, 641, 642, 648, 651, 652, 654, 655, 656, 664, 666, 678, 679, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 699, 700, 714, 719, 725, 729, 732, 733, 734, 746, 758, 762, 771, 773, 776, 777, 778, 780, 783, 784, 785, 798, 800, 801, 803, 804, 806, 807, 813, 827, 832, 834, 838, 847, 848, 849, 850, 852, 854, 856, 857, 858, 860, 864, 871, 872, 874, 878, 879, 881, 882, 884, 885, 887, 892, 895, 896, 899, 902, 904, 905, 907, 908, 910, 914, 915, 917, 918, 919, 920, 923, 926, 930, 932, 942, 944, 946, 947, 949, 952, 953, 954, 955, 965, 971, 972, 973, 974, 975, 976, 977, 978, 981, 983, 985, 990, 994, 995, 996, 997, 998, 1003, 1004, 1006, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1068, 1072, 1074, 1075, 1076, 1078, 1081, 1082, 1083, 1084, 1085, 1089, 1091, 1093, 1098, 1099, 1103, 1104, 1105, 1106, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1120, 1123, 1124, 1125, 1126, 1128, 1129, 1134, 1135, 1137, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1260, 1263, 1264, 1272, 1273, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1302, 1303, 1304, 1308, 1312, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1367, 1368, 1371, 1373, 1374, 1375, 1382, 1385, 1386, 1387, 1392, 1395, 1396, 1399, 1400, 1402, 1404, 1405, 1407, 1408, 1409, 1410, 1412, 1414, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1473, 1474], "Their": [311, 1315, 1385, 1440], "Then": [397, 499, 1313, 1318, 1329, 1331, 1339, 1341, 1346, 1349, 1350, 1358, 1360, 1416, 1417, 1428, 1429, 1440, 1443, 1455, 1458, 1464, 1475], "There": [77, 80, 160, 413, 895, 1148, 1312, 1313, 1318, 1319, 1326, 1329, 1331, 1337, 1339, 1341, 1343, 1349, 1350, 1352, 1354, 1356, 1358, 1368, 1408, 1411, 1414, 1415, 1417, 1418, 1419, 1422, 1426, 1431, 1432, 1433, 1435, 1437, 1438, 1442, 1443, 1448, 1449, 1452, 1455, 1458, 1460, 1461, 1462, 1463, 1470, 1473], "These": [182, 194, 205, 250, 363, 450, 471, 492, 500, 574, 697, 807, 902, 987, 1089, 1312, 1313, 1315, 1318, 1321, 1325, 1326, 1328, 1330, 1331, 1337, 1341, 1343, 1346, 1348, 1349, 1353, 1354, 1356, 1360, 1366, 1379, 1385, 1395, 1408, 1411, 1413, 1414, 1415, 1418, 1419, 1427, 1429, 1430, 1437, 1439, 1440, 1443, 1449, 1452, 1456, 1465, 1468, 1470, 1472, 1474, 1475], "To": [61, 69, 73, 92, 99, 137, 182, 290, 291, 296, 397, 492, 540, 559, 564, 568, 574, 640, 683, 832, 834, 838, 849, 852, 854, 856, 857, 858, 892, 894, 907, 942, 944, 972, 983, 1098, 1218, 1239, 1312, 1313, 1317, 1318, 1319, 1323, 1326, 1331, 1333, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1350, 1353, 1354, 1356, 1358, 1360, 1366, 1371, 1382, 1385, 1395, 1402, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474], "Will": [386, 437, 622, 628, 675, 798, 803, 853, 855, 875, 897, 1360], "With": [61, 529, 642, 783, 914, 1019, 1022, 1140, 1313, 1318, 1325, 1326, 1328, 1336, 1350, 1354, 1358, 1367, 1382, 1399, 1410, 1413, 1414, 1415, 1417, 1422, 1424, 1425, 1426, 1429, 1434, 1437, 1440, 1443, 1444, 1448, 1455, 1456, 1460, 1462, 1468], "_": [120, 251, 315, 316, 501, 673, 735, 736, 794, 918, 919, 940, 1278, 1297, 1313, 1318, 1319, 1323, 1332, 1334, 1336, 1343, 1346, 1348, 1353, 1354, 1360, 1373, 1374, 1411, 1421, 1423, 1430, 1432, 1433, 1434, 1437, 1438, 1443, 1448, 1452, 1455, 1458, 1460, 1462, 1465, 1466, 1469, 1474], "_1f_1": 1129, "__": 1443, "__add__": [1318, 1319], "__array__": [582, 588, 1318, 1342, 1414, 1422], "__array_function__": 1422, "__array_namespace__": 1399, "__array_priority__": 1318, "__array_ufunc__": 1422, "__array_wrap__": 1422, "__bool__": [1318, 1331], "__call__": [1318, 1405], "__cause__": [1326, 1328], "__class__": 1318, "__closure__": 69, "__constraints__": 1273, "__contravariant__": 1273, "__covariant__": 1273, "__cuda_array_interface__": 1326, "__dlpack__": [101, 102, 716, 1326], "__dlpack_device__": [101, 102, 716], "__enter__": 1360, "__eq__": [296, 998, 1318, 1326, 1349, 1382], "__exit__": 1360, "__getattr__": 1318, "__getitem__": [1414, 1449], "__gpu": 1326, "__gt__": 1318, "__hash__": [296, 998, 1318, 1326, 1349, 1382], "__iadd__": 1432, "__index__": [1342, 1414], "__init__": [0, 62, 63, 72, 73, 77, 80, 103, 107, 115, 127, 140, 141, 142, 143, 158, 159, 160, 162, 163, 165, 166, 167, 168, 187, 195, 196, 197, 198, 199, 200, 241, 252, 253, 254, 255, 256, 257, 258, 267, 394, 620, 624, 625, 627, 664, 697, 700, 704, 705, 706, 709, 726, 744, 748, 751, 752, 753, 754, 756, 866, 867, 928, 965, 967, 968, 969, 970, 979, 1003, 1004, 1064, 1092, 1107, 1108, 1196, 1275, 1280, 1281, 1282, 1283, 1318, 1319, 1332, 1349, 1422, 1462, 1465, 1469, 1474], "__instancecheck__": 1414, "__int__": [246, 247, 1414], "__isinstance__": 1414, "__iter__": 1414, "__jax_array__": [1414, 1428], "__lt__": 1318, "__main__": [1313, 1360, 1432, 1433, 1474], "__mul__": [1318, 1319], "__name__": [503, 1273, 1318, 1426, 1432, 1434], "__neg__": 1318, "__new__": [1280, 1282, 1332, 1465], "__nonzero__": 1318, "__radd__": 1318, "__repr__": [1318, 1465, 1474], "__rmul__": 1318, "__rshift__": 1318, "__setitem__": 1449, "__slots__": 1318, "__str__": [1318, 1319, 1474], "__tracebackhide__": [1326, 1328], "_add": 1318, "_argnum": 1413, "_assert_l": 1424, "_autosummari": [1326, 1432, 1444], "_auxdata": [1280, 1282], "_await_consum": 1452, "_before_refine_polymorphic_shap": 1346, "_bool": 1318, "_build": [1339, 1350], "_buildfromchildren": 249, "_bwd": [1313, 1433], "_calc": 1349, "_check_forgot_shape_tupl": 1331, "_check_shape_assert": 1343, "_children": 1280, "_code": 115, "_colab": 1323, "_compil": 1343, "_compute_newshap": 1430, "_cond_partial_ev": 1318, "_custom_call_targets_guaranteed_st": 1343, "_default_toler": 1326, "_deserializeauxdata": 249, "_dimexpr": 1346, "_div": 1134, "_do_fetch": 1452, "_dot_gener": 666, "_doubl": 1323, "_dual": 1319, "_empti": [232, 233], "_entr": 1146, "_execut": 1412, "_export": 1343, "_faq": 1323, "_function_nam": 186, "_fwd": [1313, 1433], "_get_vjp": 1386, "_gt": 1318, "_hlo_const": 1318, "_i": [533, 883, 1136], "_impl": [1386, 1425], "_indent": 1360, "_index_tricks_impl": [746, 917], "_init": 168, "_inline_liter": 1318, "_inputs_": 1350, "_invalid_shape_error": [1331, 1430], "_jax": [1360, 1444], "_jax_": 1360, "_jaxcomputationbuild": 1360, "_jnp_function_equival": 1430, "_join_jaxpr_const": 1318, "_join_jaxpr_r": 1318, "_jv_jvp": 1348, "_jvp": [1313, 1360, 1437], "_k": [1129, 1326], "_kk": 1129, "_layernorm": 1415, "_lt": 1318, "_m": 1144, "_metadata": 115, "_mgrid": 837, "_minim": 69, "_mlir": 1360, "_mlir_dtyp": 1318, "_mlir_lib": 1360, "_mul": 1318, "_must_": 138, "_neg": 1318, "_nonzero": 1318, "_ogrid": 868, "_output": [1354, 1438], "_outputs_": 1350, "_override_lowering_rul": 244, "_p": 1436, "_pattern": 1373, "_payload": 115, "_platform_index": 1343, "_plu": 547, "_pred": 115, "_private_paramet": 1405, "_profil": 1008, "_promote_shap": 1432, "_python_pjit_help": 1360, "_radd": 1318, "_rais": 1348, "_rbg_fold_in": 277, "_rbg_random_bit": [277, 282], "_rbg_seed": [277, 282], "_rbg_split": 277, "_ref": [172, 173], "_relu": 531, "_renderable_repr": [1354, 1438], "_repr_html_": [1354, 1438], "_rmul": 1318, "_rope": 1415, "_rule": 1425, "_run_cod": 1360, "_run_module_as_main": 1360, "_safe_mul": 1326, "_scipy_jv": 1348, "_segment": 1135, "_serializeauxdata": 249, "_sigmoid": [511, 512, 513, 532, 548], "_sign": 544, "_silu": [512, 513], "_softmax": [533, 1136], "_split_transpos": [456, 1350, 1411], "_src": [65, 66, 70, 88, 89, 91, 92, 93, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 168, 497, 537, 538, 552, 615, 837, 868, 898, 923, 971, 993, 1119, 1121, 1123, 1129, 1135, 1137, 1144, 1150, 1151, 1152, 1315, 1316, 1318, 1326, 1328, 1331, 1339, 1343, 1346, 1353, 1354, 1360, 1414, 1416, 1425, 1427, 1430, 1436, 1463, 1470], "_stablehlo": 1430, "_state": 1326, "_t": 424, "_tanh": 514, "_to": 1323, "_trace": [1318, 1360], "_trace_ind": 1360, "_trace_unind": 1360, "_tree_flatten": [1318, 1349], "_tree_unflatten": [1318, 1349], "_true_bind": 1430, "_unsafe_rbg_fold_in": 282, "_unsafe_rbg_split": 282, "_valu": 1331, "_version": 1427, "_where": 1430, "_with_sharding_constraint": 1415, "_wrapped_jax_export_main": 1343, "_wrapper": 1460, "_x3": 1395, "_xla": 1326, "a0": 1458, "a1": [583, 584, 665, 880, 885, 886, 1318, 1346, 1465, 1474], "a100": [1326, 1353, 1395], "a2": [583, 584, 621, 650, 665, 880, 885, 886, 1318, 1346, 1465, 1474], "a2_": 1318, "a3": [1465, 1474], "a_": [633, 637, 1090], "a_0": [1313, 1433], "a_bar": [1313, 1433], "a_block": [1415, 1443], "a_block_s": 540, "a_gmem": 1452, "a_i": [534, 621, 1138], "a_inv": [793, 1077], "a_load": 1452, "a_matrix": 407, "a_max": [622, 1326], "a_min": [622, 1326], "a_pinv": 803, "a_reconstruct": [1075, 1078, 1082], "a_ref": 1452, "a_ref_t": 1452, "a_scal": [539, 540], "a_slic": 1452, "a_smem": 1452, "a_tre": 1474, "aarch64": [1326, 1356], "ab": [235, 305, 306, 340, 506, 549, 555, 677, 801, 926, 1014, 1043, 1072, 1313, 1326, 1367, 1433, 1457, 1458, 1462], "abc": [774, 1318, 1443], "abil": [1326, 1339, 1412, 1414, 1415, 1418, 1419, 1421, 1422, 1426, 1429], "abl": [882, 885, 1313, 1316, 1318, 1319, 1333, 1334, 1336, 1339, 1343, 1346, 1349, 1350, 1351, 1356, 1358, 1360, 1399, 1410, 1412, 1414, 1417, 1419, 1427, 1429, 1432, 1435, 1437, 1442, 1449, 1452, 1455, 1458, 1460, 1464, 1465, 1474], "abort": 1328, "about": [61, 83, 155, 262, 267, 283, 337, 397, 450, 491, 574, 578, 612, 613, 614, 697, 789, 800, 874, 987, 1019, 1022, 1083, 1107, 1279, 1313, 1318, 1319, 1320, 1322, 1323, 1326, 1328, 1333, 1336, 1339, 1340, 1342, 1343, 1348, 1349, 1350, 1353, 1354, 1360, 1366, 1395, 1399, 1402, 1410, 1412, 1415, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1443, 1444, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1460, 1461, 1466, 1468, 1469, 1470, 1473, 1475], "abov": [61, 82, 262, 283, 290, 306, 321, 378, 381, 403, 408, 409, 415, 456, 457, 486, 502, 529, 651, 654, 955, 956, 957, 958, 960, 961, 962, 981, 1012, 1082, 1122, 1135, 1313, 1315, 1318, 1319, 1320, 1324, 1325, 1326, 1329, 1331, 1334, 1336, 1339, 1340, 1341, 1342, 1346, 1349, 1350, 1356, 1360, 1399, 1402, 1410, 1411, 1414, 1415, 1417, 1418, 1419, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1437, 1439, 1443, 1445, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1464, 1465, 1466, 1468, 1469, 1470, 1473, 1474, 1475], "abs_p": 1385, "abseil": 1328, "absenc": [82, 1360, 1448, 1470, 1474], "absl": [1326, 1343, 1357, 1410, 1413, 1424, 1432, 1467], "absolut": [298, 340, 449, 529, 534, 554, 560, 585, 587, 602, 641, 677, 725, 760, 778, 805, 1071, 1112, 1127, 1138, 1257, 1258, 1259, 1326, 1339], "abstract": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 25, 26, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 107, 114, 263, 284, 337, 501, 620, 627, 650, 700, 709, 748, 756, 860, 864, 866, 923, 928, 971, 972, 979, 1280, 1318, 1320, 1326, 1331, 1333, 1334, 1342, 1348, 1349, 1351, 1386, 1410, 1411, 1413, 1414, 1417, 1419, 1424, 1426, 1429, 1430, 1449, 1455, 1456, 1457, 1470, 1474], "abstract_arrai": 1326, "abstract_eval_rul": 1318, "abstract_mesh": 1360, "abstract_token": [262, 283], "abstracted_ax": [296, 501, 1382], "abstractif": 1422, "abstractifi": 1326, "abstractli": [1334, 1360, 1422], "abstractmemoryref": [169, 170], "abstractmesh": [194, 1256, 1326, 1343, 1360, 1440], "abstractvalu": [255, 258, 1318, 1346], "acc": [178, 1449, 1452], "acc_ref": [1452, 1460], "acc_scratch": 1458, "acceler": [18, 67, 235, 887, 920, 1003, 1312, 1315, 1316, 1317, 1323, 1325, 1336, 1339, 1341, 1343, 1348, 1351, 1354, 1355, 1356, 1395, 1424, 1426, 1429, 1430, 1431, 1432, 1435, 1436, 1442, 1449, 1455, 1456, 1457, 1460, 1473, 1475], "accept": [69, 74, 76, 78, 81, 120, 121, 236, 237, 357, 456, 499, 602, 780, 801, 880, 882, 885, 886, 910, 1093, 1098, 1102, 1103, 1113, 1129, 1256, 1312, 1315, 1318, 1326, 1328, 1339, 1341, 1343, 1350, 1385, 1395, 1409, 1414, 1417, 1418, 1421, 1422, 1423, 1425, 1426, 1430, 1432, 1447, 1452, 1457, 1464, 1465, 1474], "access": [18, 67, 99, 114, 158, 322, 323, 324, 325, 368, 382, 383, 392, 395, 398, 408, 409, 414, 419, 452, 465, 466, 467, 492, 578, 634, 652, 653, 830, 861, 874, 925, 933, 978, 1070, 1087, 1282, 1313, 1320, 1326, 1328, 1339, 1341, 1343, 1349, 1350, 1387, 1395, 1399, 1408, 1416, 1421, 1425, 1427, 1431, 1437, 1440, 1443, 1449, 1452, 1453, 1455, 1456, 1459, 1464, 1468], "accident": [1319, 1326, 1341, 1415, 1425, 1431, 1474], "accommod": [1420, 1458], "accompani": [1329, 1452], "accomplish": [842, 1351, 1385, 1413, 1414, 1429, 1448, 1456], "accord": [137, 194, 206, 292, 343, 344, 368, 382, 383, 392, 398, 414, 419, 423, 431, 432, 464, 616, 951, 1015, 1016, 1017, 1020, 1021, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1035, 1037, 1038, 1039, 1041, 1042, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1055, 1056, 1091, 1313, 1326, 1341, 1343, 1354, 1374, 1414, 1417, 1422, 1425, 1433, 1440, 1441, 1443, 1448], "accordingli": [61, 1304, 1326, 1474], "account": [502, 1326, 1329, 1348, 1350, 1414, 1418, 1425, 1431, 1434, 1444, 1452, 1462], "acct": 1431, "accum": 1395, "accum_pipelin": 1458, "accum_ref": 1458, "accum_scratch": [1458, 1462], "accumul": [92, 178, 341, 343, 345, 346, 347, 360, 361, 445, 446, 568, 633, 637, 644, 645, 646, 647, 660, 666, 721, 749, 795, 809, 813, 829, 847, 848, 882, 885, 950, 965, 984, 985, 1313, 1326, 1328, 1340, 1349, 1360, 1395, 1437, 1443, 1448, 1449, 1457, 1458, 1460, 1461, 1462], "accumulation_typ": 1395, "accur": [375, 412, 568, 674, 819, 930, 1104, 1105, 1349, 1395], "accuraci": [92, 331, 349, 372, 373, 375, 411, 412, 413, 455, 469, 476, 482, 483, 1029, 1106, 1123, 1326, 1328, 1337, 1395, 1418, 1435, 1442, 1444, 1457], "accuracymod": [331, 349, 372, 373, 375, 411, 412, 455, 469, 476, 482, 483], "accustom": [1322, 1402, 1449], "achiev": [113, 403, 1104, 1105, 1106, 1140, 1318, 1324, 1328, 1339, 1341, 1343, 1351, 1382, 1414, 1417, 1419, 1420, 1421, 1441, 1447, 1449, 1452, 1455, 1457, 1462], "acknowledg": 1339, "aco": [309, 312, 349, 571, 638], "acontext": 1473, "acosh": [310, 314, 350], "acquir": 1464, "acronym": 1315, "across": [29, 67, 69, 94, 99, 135, 137, 138, 139, 172, 194, 303, 378, 422, 433, 456, 486, 498, 499, 500, 545, 666, 729, 873, 877, 987, 998, 1147, 1304, 1312, 1315, 1316, 1319, 1321, 1322, 1326, 1336, 1339, 1340, 1350, 1353, 1354, 1377, 1382, 1387, 1402, 1404, 1405, 1410, 1414, 1415, 1418, 1421, 1422, 1430, 1431, 1438, 1439, 1440, 1441, 1443, 1444, 1446, 1449, 1452, 1455, 1456, 1458, 1461, 1463, 1468, 1474, 1475], "act": [965, 987, 1313, 1360, 1419, 1422, 1423, 1426, 1433, 1434, 1443, 1448, 1455], "action": [176, 235, 1313, 1318, 1339, 1348, 1414, 1420, 1427, 1437, 1463, 1471], "activ": [160, 174, 456, 504, 505, 507, 508, 510, 511, 512, 513, 514, 515, 531, 532, 535, 537, 538, 541, 542, 543, 544, 546, 547, 548, 549, 551, 1008, 1009, 1011, 1316, 1318, 1336, 1339, 1343, 1375, 1385, 1418, 1425, 1435, 1442, 1443, 1448, 1449, 1452, 1455, 1456, 1464, 1471], "activitydis": 1464, "actual": [250, 296, 424, 456, 499, 553, 697, 700, 927, 1149, 1313, 1315, 1317, 1318, 1319, 1323, 1326, 1328, 1333, 1336, 1339, 1341, 1343, 1346, 1348, 1350, 1353, 1354, 1357, 1360, 1382, 1386, 1411, 1412, 1413, 1414, 1415, 1419, 1421, 1423, 1430, 1432, 1434, 1437, 1438, 1440, 1443, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1460, 1463, 1466, 1469, 1470], "acycl": [1318, 1426], "ad": [65, 66, 69, 119, 121, 263, 284, 293, 295, 304, 326, 343, 506, 550, 673, 1012, 1025, 1050, 1056, 1091, 1279, 1281, 1283, 1284, 1312, 1313, 1319, 1321, 1326, 1328, 1334, 1335, 1336, 1339, 1344, 1350, 1353, 1360, 1366, 1386, 1410, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1426, 1428, 1432, 1433, 1434, 1439, 1447, 1448, 1449, 1457, 1458, 1460, 1469, 1473], "ad_checkpoint": [1326, 1354, 1438, 1441], "adagrad": 1367, "adam": [1367, 1469], "adamax": 1367, "adapt": [277, 281, 282, 344, 345, 501, 529, 1312, 1366, 1367, 1420, 1423, 1443], "add": [10, 88, 89, 119, 121, 173, 311, 326, 327, 329, 343, 458, 503, 504, 580, 600, 645, 647, 664, 673, 696, 721, 758, 848, 860, 864, 873, 878, 895, 896, 923, 940, 965, 971, 972, 973, 974, 975, 976, 981, 1012, 1269, 1275, 1279, 1284, 1313, 1315, 1318, 1319, 1324, 1325, 1326, 1328, 1329, 1333, 1334, 1336, 1339, 1343, 1346, 1350, 1353, 1360, 1386, 1395, 1399, 1409, 1411, 1412, 1414, 1415, 1416, 1417, 1419, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1430, 1432, 1433, 1434, 1436, 1440, 1441, 1443, 1448, 1452, 1455, 1456, 1457, 1458, 1460, 1461, 1464, 1470], "add_arrai": [1440, 1468], "add_const": 1318, "add_dual": 1319, "add_eqn": 1318, "add_func": 1441, "add_jvp": 1318, "add_kernel": 1449, "add_matric": 1455, "add_matrices_kernel": [1455, 1461], "add_matrices_pipelin": 1455, "add_matrices_pipelined_kernel": 1455, "add_matrices_pipelined_megacor": 1461, "add_matrices_pipelined_param": 1455, "add_on": [1275, 1324, 1448], "add_one_inplac": 1448, "add_one_to_a_scalar": 1318, "add_p": [1318, 1385, 1416, 1422, 1430, 1436], "add_row": [1354, 1438], "add_subplot": 1439, "add_transpos": 1360, "add_transpose_rul": 1318, "add_var": 1318, "add_vector": 1456, "add_vector_kernel": 1456, "add_vectors_kernel": 1456, "add_with_out_sharding_kwarg": 1440, "addit": [10, 62, 67, 85, 105, 172, 174, 184, 187, 194, 232, 233, 237, 301, 365, 367, 456, 458, 491, 504, 506, 558, 566, 601, 606, 608, 621, 636, 641, 719, 816, 823, 825, 826, 843, 860, 873, 877, 906, 920, 943, 965, 997, 998, 1003, 1256, 1258, 1259, 1304, 1312, 1313, 1315, 1316, 1317, 1319, 1325, 1326, 1328, 1331, 1334, 1336, 1341, 1346, 1349, 1356, 1360, 1367, 1395, 1409, 1410, 1411, 1414, 1415, 1417, 1419, 1420, 1421, 1424, 1425, 1426, 1427, 1430, 1432, 1434, 1437, 1440, 1443, 1444, 1447, 1448, 1449, 1452, 1455, 1456, 1458, 1460, 1462, 1474, 1475], "addition": [65, 66, 197, 199, 202, 212, 409, 1009, 1011, 1316, 1326, 1328, 1339, 1346, 1348, 1349, 1402, 1418, 1419, 1426, 1443, 1452, 1458, 1462, 1474], "addop": [1360, 1416], "address": [2, 29, 99, 138, 495, 498, 499, 500, 574, 864, 1326, 1341, 1342, 1349, 1399, 1404, 1414, 1415, 1417, 1425, 1426, 1431, 1458, 1464], "addressable_data": [498, 499, 1326, 1410], "addressable_devic": [500, 1341, 1404], "addressable_devices_indices_map": [500, 1404], "addressable_shard": [1326, 1343, 1386, 1410, 1431], "adequ": [547, 1343], "adher": 1420, "adjac": [697, 815, 936, 954, 1063, 1416, 1440], "adjoint": [406, 1313, 1349, 1437], "adjust": [61, 363, 366, 367, 798, 946, 1100, 1313, 1326, 1353, 1433], "admittedli": 1418, "ado": 1443, "adopt": [1326, 1355, 1414, 1420, 1426], "advanc": [244, 265, 286, 450, 1276, 1308, 1312, 1320, 1325, 1333, 1360, 1415, 1421, 1444, 1448, 1449, 1459, 1462, 1472], "advanced_configur": 1464, "advantag": [415, 1319, 1339, 1341, 1348, 1414, 1426, 1449, 1455, 1456, 1457, 1458], "advers": 1412, "advic": [1432, 1469], "advis": [793, 1077], "adviso": 1432, "ae1": [1411, 1432], "ae2": [1411, 1432], "aelem": [1411, 1432], "aesthet": 1419, "affect": [82, 381, 502, 887, 1313, 1316, 1326, 1331, 1336, 1357, 1395, 1412, 1417, 1421, 1429, 1443, 1460, 1461], "affin": 1415, "aforement": 1412, "afoul": 1414, "after": [99, 113, 153, 249, 302, 335, 343, 344, 345, 346, 347, 403, 421, 422, 434, 529, 578, 584, 610, 665, 697, 717, 759, 811, 863, 873, 874, 913, 919, 981, 1082, 1104, 1105, 1279, 1281, 1283, 1284, 1313, 1316, 1318, 1324, 1326, 1328, 1336, 1339, 1340, 1343, 1346, 1349, 1353, 1356, 1358, 1371, 1399, 1414, 1415, 1419, 1422, 1423, 1424, 1426, 1429, 1431, 1433, 1441, 1443, 1448, 1449, 1452, 1455, 1456, 1458, 1462, 1463, 1464, 1465, 1475], "after_1": 873, "after_2": 873, "after_n": 873, "after_valu": 873, "afterward": 1440, "afunct": 1340, "ag": [664, 1431, 1463], "again": [136, 621, 998, 1312, 1313, 1326, 1329, 1330, 1331, 1339, 1341, 1348, 1349, 1353, 1371, 1411, 1414, 1415, 1417, 1424, 1425, 1426, 1432, 1433, 1437, 1440, 1443, 1444, 1448, 1455, 1458, 1462, 1463, 1466, 1470], "against": [146, 1257, 1258, 1259, 1316, 1326, 1339, 1354, 1356, 1412, 1414, 1418, 1419, 1420, 1431, 1434, 1438, 1443, 1449, 1457, 1469, 1473], "agent": 1474, "aggreg": [305, 306, 735, 736, 738, 1313, 1468], "aggregate_to_topk": [305, 306], "aggress": [1353, 1399, 1432, 1473], "agil": 1312, "agnost": [1313, 1339, 1470], "ago": 1326, "agre": [99, 456, 1326, 1422, 1435, 1440, 1442, 1443], "agreement": [628, 675], "ahead": [800, 1306, 1314, 1317, 1319, 1326, 1334, 1343, 1405, 1417, 1440, 1449, 1455], "ai": [1337, 1355, 1431], "aid": 1315, "aim": [1312, 1318, 1387, 1402, 1414, 1418, 1419, 1424, 1443, 1454], "aka": [76, 518, 519, 520, 521, 543, 551, 1268, 1309, 1314, 1328, 1351, 1413], "akin": [1432, 1449, 1460], "al": 1402, "alabast": 1339, "alf": [1139, 1140], "algebra": [987, 1088, 1326, 1343, 1349, 1351, 1360, 1385, 1411, 1418, 1430, 1460, 1475], "algebraic_simplifi": 1349, "algorithm": [92, 305, 306, 360, 361, 394, 406, 434, 452, 579, 803, 920, 934, 1082, 1092, 1106, 1313, 1325, 1326, 1328, 1350, 1352, 1395, 1402, 1418, 1425, 1437, 1443, 1452, 1458, 1460, 1463, 1466], "alia": [10, 157, 161, 164, 262, 283, 294, 554, 556, 557, 561, 562, 581, 589, 590, 592, 593, 594, 603, 604, 605, 607, 611, 618, 622, 626, 631, 643, 648, 649, 658, 661, 697, 707, 728, 755, 759, 780, 798, 803, 840, 853, 855, 859, 860, 875, 889, 891, 897, 899, 900, 922, 931, 966, 1274, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1300, 1301, 1326, 1342, 1354, 1367, 1395, 1399, 1414, 1438, 1444, 1448], "alias": [67, 96, 182, 512, 513, 543, 551, 1316, 1326, 1328, 1354, 1395, 1407, 1413, 1414, 1425, 1438, 1447, 1455, 1462, 1474], "alic": 1474, "align": [610, 664, 773, 1135, 1142, 1326, 1415, 1456, 1457, 1462], "aliv": 1448, "all": [1, 10, 29, 61, 64, 67, 68, 69, 71, 73, 77, 83, 84, 85, 94, 97, 98, 99, 111, 112, 114, 134, 135, 136, 137, 139, 153, 171, 172, 182, 184, 189, 205, 235, 241, 250, 291, 302, 303, 304, 335, 339, 356, 357, 363, 366, 378, 407, 408, 422, 424, 425, 426, 427, 433, 434, 435, 456, 464, 479, 481, 486, 493, 494, 499, 502, 503, 504, 533, 534, 545, 564, 565, 578, 596, 597, 598, 610, 616, 620, 621, 627, 640, 653, 663, 681, 682, 686, 687, 691, 695, 696, 700, 701, 709, 717, 721, 722, 726, 729, 740, 746, 748, 756, 758, 772, 783, 786, 795, 800, 801, 814, 829, 832, 834, 838, 845, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 866, 874, 883, 892, 894, 912, 917, 918, 921, 928, 940, 942, 944, 953, 972, 973, 975, 977, 979, 983, 987, 989, 994, 995, 996, 997, 998, 1002, 1012, 1022, 1024, 1071, 1074, 1090, 1093, 1136, 1138, 1147, 1239, 1256, 1260, 1273, 1275, 1276, 1278, 1279, 1285, 1304, 1312, 1313, 1315, 1316, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1329, 1331, 1333, 1334, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1358, 1360, 1373, 1382, 1386, 1399, 1402, 1404, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1444, 1447, 1449, 1452, 1453, 1455, 1457, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1473, 1474, 1475], "all_bias": [1354, 1438], "all_check": 1334, "all_default_mem_kind": 1360, "all_gath": [434, 1326], "all_gather_invari": [1417, 1443], "all_gather_invariant_p": 1417, "all_gather_kernel": 1458, "all_gather_p": 1417, "all_gather_ref": 1443, "all_reduc": 1458, "all_reduce_invari": 1417, "all_reduce_kernel": 1458, "all_to_al": [303, 435, 1326, 1417, 1458], "all_to_all_ref": 1443, "all_weight": [1354, 1438], "all_x": 1445, "allclos": [583, 584, 671, 678, 679, 681, 683, 735, 736, 738, 760, 784, 793, 800, 803, 804, 806, 807, 810, 811, 817, 819, 821, 822, 954, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1313, 1360, 1434, 1436, 1437, 1441, 1443, 1444], "allgath": [1353, 1417, 1443, 1475], "alloc": [178, 184, 1006, 1326, 1340, 1349, 1424, 1444, 1446, 1448, 1455, 1458, 1460, 1461, 1462], "allocatedi": 1352, "allow": [67, 77, 78, 81, 99, 111, 119, 127, 140, 160, 194, 262, 283, 289, 295, 337, 356, 362, 364, 365, 367, 404, 499, 502, 586, 616, 650, 662, 739, 758, 807, 918, 923, 924, 930, 937, 981, 987, 988, 993, 1012, 1083, 1106, 1276, 1279, 1281, 1282, 1283, 1284, 1302, 1312, 1313, 1317, 1318, 1324, 1325, 1326, 1329, 1331, 1333, 1334, 1336, 1340, 1343, 1346, 1348, 1350, 1353, 1354, 1360, 1373, 1385, 1386, 1395, 1402, 1410, 1413, 1414, 1415, 1416, 1417, 1419, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1438, 1441, 1443, 1444, 1447, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1471, 1473, 1474, 1475], "allow_extended_dtyp": 104, "allow_growth": 1352, "allow_imprecise_accumul": 1395, "allow_int": [289, 294, 295, 1302], "allow_negative_indic": [362, 363, 364, 365, 366, 367, 1326], "allow_pickl": 918, "allow_singular": [1221, 1222], "allow_split_physical_ax": [132, 133, 502], "allow_tf32": 154, "allowlist": 1326, "allreduc": [1353, 1475], "allreducesum": [1417, 1443], "alltoal": [1417, 1443], "alltru": 1326, "almost": [343, 1313, 1319, 1415, 1431, 1437, 1440, 1444, 1468], "almost_perex_grad": 1313, "alon": [1349, 1417], "along": [3, 4, 14, 34, 35, 36, 41, 53, 58, 60, 67, 121, 172, 181, 183, 184, 194, 202, 233, 249, 267, 303, 304, 305, 306, 307, 308, 311, 315, 338, 351, 352, 353, 354, 355, 362, 364, 387, 415, 416, 417, 425, 426, 427, 430, 431, 432, 433, 434, 456, 472, 473, 474, 475, 484, 499, 510, 533, 534, 536, 545, 550, 559, 564, 565, 566, 567, 576, 577, 578, 579, 586, 598, 610, 615, 623, 628, 629, 630, 640, 642, 644, 645, 646, 647, 650, 651, 653, 654, 655, 656, 662, 663, 665, 666, 675, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 701, 702, 703, 727, 729, 739, 740, 749, 783, 786, 813, 814, 815, 827, 832, 833, 834, 835, 838, 839, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 872, 873, 874, 875, 883, 892, 894, 896, 897, 898, 906, 912, 915, 933, 934, 935, 937, 941, 942, 944, 946, 947, 951, 952, 954, 957, 958, 961, 962, 972, 973, 974, 975, 976, 977, 980, 981, 983, 985, 988, 989, 994, 995, 996, 997, 998, 1019, 1022, 1040, 1045, 1059, 1060, 1061, 1062, 1063, 1065, 1098, 1099, 1100, 1102, 1103, 1136, 1138, 1147, 1218, 1238, 1239, 1256, 1313, 1315, 1318, 1326, 1342, 1343, 1349, 1350, 1356, 1360, 1373, 1399, 1411, 1414, 1415, 1417, 1418, 1419, 1424, 1425, 1430, 1433, 1437, 1440, 1441, 1443, 1444, 1449, 1452, 1455, 1457, 1458, 1460, 1462, 1468], "alongsid": [1350, 1356, 1416, 1463], "alpha": [296, 407, 505, 507, 531, 541, 1016, 1024, 1181, 1182, 1429, 1430, 1455], "alpha_i": [1024, 1181, 1182], "alphabet": 1312, "alphanumer": 251, "alreadi": [96, 99, 239, 500, 918, 919, 1313, 1318, 1326, 1329, 1334, 1339, 1341, 1343, 1346, 1350, 1356, 1357, 1360, 1382, 1410, 1417, 1418, 1419, 1422, 1423, 1424, 1433, 1434, 1435, 1437, 1442, 1449, 1455, 1457, 1458, 1460, 1464, 1469, 1471], "also": [67, 82, 92, 98, 114, 120, 121, 136, 141, 172, 182, 263, 284, 322, 323, 324, 325, 343, 344, 345, 346, 347, 368, 378, 382, 383, 392, 397, 414, 419, 456, 457, 465, 466, 467, 486, 503, 504, 566, 587, 610, 636, 637, 641, 664, 666, 671, 673, 697, 723, 724, 735, 736, 738, 797, 842, 861, 877, 907, 909, 910, 925, 927, 933, 940, 953, 965, 972, 998, 1003, 1009, 1011, 1012, 1060, 1062, 1082, 1148, 1264, 1273, 1312, 1313, 1315, 1318, 1319, 1320, 1321, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1333, 1334, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1360, 1367, 1371, 1373, 1382, 1385, 1395, 1402, 1405, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1474], "alter": [1315, 1373, 1463], "altern": [10, 67, 82, 182, 401, 413, 424, 432, 646, 647, 666, 860, 877, 895, 942, 983, 1268, 1282, 1284, 1313, 1316, 1318, 1326, 1339, 1341, 1342, 1343, 1350, 1352, 1354, 1360, 1399, 1402, 1413, 1414, 1415, 1418, 1425, 1431, 1433, 1437, 1438, 1448, 1452, 1456, 1458, 1463, 1464, 1465, 1468, 1474], "although": [463, 574, 651, 655, 718, 720, 1315, 1316, 1326, 1342, 1348, 1356, 1399, 1414, 1426, 1427, 1430, 1444, 1449, 1452, 1458, 1463], "altinstal": 1339, "altogeth": [1416, 1436, 1458], "alu": 1452, "alwai": [96, 101, 102, 153, 173, 235, 449, 492, 574, 588, 591, 635, 651, 654, 655, 668, 669, 716, 746, 749, 789, 791, 879, 882, 885, 893, 907, 911, 917, 927, 963, 981, 998, 1001, 1006, 1088, 1094, 1095, 1096, 1097, 1304, 1313, 1316, 1318, 1326, 1331, 1339, 1341, 1343, 1346, 1348, 1349, 1350, 1358, 1360, 1395, 1414, 1415, 1418, 1422, 1423, 1425, 1426, 1427, 1431, 1432, 1433, 1436, 1437, 1443, 1444, 1452, 1455, 1457, 1460, 1462, 1463, 1465, 1466, 1471, 1473], "am": 499, "amax": 833, "amazonaw": 1435, "ambigu": [574, 1278, 1331, 1434, 1448], "ambiguit": 1447, "amdgpu": 1356, "amen": 1449, "american": 1043, "amin": 839, "among": [202, 212, 433, 578, 874, 1279, 1326, 1343, 1354, 1386, 1402, 1416, 1420, 1422, 1438, 1452], "amort": 1323, "amount": [67, 296, 423, 780, 910, 912, 998, 1316, 1317, 1318, 1323, 1326, 1328, 1340, 1349, 1352, 1353, 1354, 1382, 1417, 1418, 1421, 1423, 1438, 1443, 1452, 1455, 1458, 1460, 1462, 1463], "an": [11, 12, 13, 18, 31, 39, 44, 45, 51, 55, 56, 57, 61, 62, 63, 67, 69, 74, 76, 81, 82, 83, 84, 85, 86, 88, 89, 92, 94, 95, 96, 97, 98, 99, 101, 102, 107, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 137, 140, 146, 155, 160, 166, 172, 174, 178, 182, 183, 184, 190, 194, 203, 204, 209, 210, 215, 216, 219, 220, 221, 232, 233, 235, 236, 243, 244, 246, 247, 248, 249, 251, 259, 262, 263, 264, 268, 277, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 295, 296, 297, 298, 301, 303, 304, 305, 306, 311, 315, 316, 321, 322, 323, 324, 325, 326, 327, 331, 334, 335, 337, 338, 341, 343, 344, 347, 348, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 378, 379, 380, 381, 387, 389, 396, 397, 398, 401, 402, 403, 404, 406, 411, 412, 413, 415, 416, 417, 418, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 439, 440, 441, 442, 443, 445, 446, 448, 449, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 469, 471, 472, 475, 476, 478, 480, 482, 483, 484, 486, 487, 491, 492, 493, 496, 497, 499, 500, 501, 502, 505, 506, 507, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 537, 538, 541, 542, 543, 545, 547, 548, 550, 551, 555, 559, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 585, 586, 587, 588, 591, 595, 596, 597, 598, 599, 600, 602, 609, 610, 612, 613, 614, 615, 617, 619, 621, 622, 628, 629, 630, 632, 634, 635, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 655, 656, 657, 660, 662, 664, 665, 666, 668, 669, 671, 672, 674, 675, 677, 678, 679, 681, 683, 684, 685, 686, 688, 692, 693, 695, 696, 697, 698, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 716, 717, 719, 721, 722, 723, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 745, 747, 750, 757, 758, 759, 762, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 787, 788, 789, 790, 791, 792, 797, 800, 801, 803, 804, 805, 806, 809, 810, 815, 816, 817, 818, 819, 820, 822, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 861, 862, 863, 864, 868, 869, 870, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 890, 892, 894, 895, 896, 897, 898, 899, 901, 903, 904, 905, 906, 907, 908, 910, 911, 912, 914, 915, 916, 918, 919, 920, 921, 923, 924, 925, 926, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 986, 987, 988, 990, 991, 992, 994, 995, 996, 997, 998, 1001, 1002, 1005, 1006, 1012, 1013, 1017, 1018, 1022, 1023, 1024, 1031, 1033, 1040, 1043, 1045, 1048, 1050, 1057, 1058, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1074, 1075, 1078, 1079, 1080, 1083, 1086, 1087, 1088, 1091, 1093, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1135, 1136, 1138, 1142, 1143, 1147, 1148, 1203, 1218, 1238, 1256, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1274, 1275, 1279, 1280, 1282, 1284, 1299, 1302, 1303, 1304, 1312, 1313, 1315, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1360, 1366, 1367, 1368, 1373, 1374, 1382, 1385, 1386, 1395, 1398, 1399, 1401, 1402, 1404, 1405, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474], "anaconda": 1339, "analog": [431, 1313, 1318, 1326, 1351, 1414, 1415, 1417, 1419, 1425, 1433, 1436, 1443, 1449, 1452, 1455, 1474], "analogi": [1354, 1438], "analogu": [378, 486, 1374, 1413, 1452], "analysi": [1003, 1313, 1315, 1340, 1414, 1417, 1432, 1433, 1441, 1448, 1460], "analyt": [729, 1124], "analyz": [1448, 1452, 1454, 1460, 1464], "analyze_matmul": 1460, "anf": [1318, 1319, 1411], "angl": [574, 638, 648, 741, 899, 929, 948, 981], "angular": 757, "ani": [10, 45, 57, 59, 61, 65, 66, 67, 69, 73, 74, 78, 81, 83, 84, 88, 89, 91, 92, 93, 95, 96, 98, 99, 102, 104, 108, 109, 110, 111, 112, 114, 127, 128, 131, 132, 133, 135, 136, 137, 138, 140, 142, 144, 145, 147, 148, 149, 150, 151, 153, 159, 160, 168, 173, 175, 182, 184, 194, 205, 215, 237, 240, 244, 254, 255, 262, 263, 265, 267, 283, 284, 286, 287, 296, 297, 326, 337, 339, 343, 344, 356, 357, 359, 374, 405, 421, 422, 424, 431, 439, 453, 456, 457, 478, 486, 493, 497, 498, 499, 501, 503, 529, 533, 536, 545, 552, 558, 582, 586, 588, 600, 601, 606, 608, 616, 621, 622, 624, 625, 641, 660, 662, 666, 667, 668, 669, 704, 705, 706, 716, 717, 719, 721, 723, 724, 727, 735, 739, 746, 749, 751, 752, 753, 754, 762, 763, 771, 772, 777, 801, 815, 816, 821, 822, 823, 824, 825, 826, 827, 829, 833, 839, 843, 860, 861, 862, 867, 869, 870, 873, 907, 909, 917, 918, 925, 933, 940, 943, 950, 951, 953, 965, 967, 968, 969, 970, 984, 985, 987, 988, 991, 992, 993, 998, 1012, 1083, 1087, 1093, 1104, 1105, 1106, 1136, 1147, 1196, 1256, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1276, 1277, 1278, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1301, 1302, 1303, 1304, 1305, 1313, 1315, 1316, 1318, 1319, 1320, 1324, 1326, 1328, 1329, 1331, 1332, 1336, 1338, 1339, 1340, 1341, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1357, 1360, 1367, 1371, 1373, 1382, 1385, 1395, 1402, 1405, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475], "anima": 1432, "ann": [1326, 1369], "annot": [0, 487, 504, 1300, 1326, 1328, 1343, 1349, 1409, 1417, 1422, 1428, 1434, 1440, 1444, 1461], "annotate_funct": [1326, 1464], "announc": [1316, 1387, 1416], "anoth": [113, 114, 343, 344, 348, 486, 502, 746, 917, 953, 972, 1009, 1011, 1104, 1105, 1107, 1304, 1313, 1317, 1318, 1319, 1320, 1321, 1325, 1326, 1331, 1332, 1333, 1336, 1341, 1342, 1343, 1346, 1349, 1350, 1354, 1358, 1360, 1382, 1399, 1411, 1412, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1425, 1426, 1429, 1431, 1432, 1433, 1435, 1437, 1438, 1442, 1443, 1444, 1448, 1449, 1452, 1458, 1464, 1465, 1466, 1467, 1469, 1470, 1474], "another_list_of_list": 1474, "anotherfunc": 1340, "ans1": [1313, 1318, 1437], "ans2": [1313, 1318, 1437], "ans3": 1318, "ans4": 1318, "ans_dot": [1313, 1433], "answer": [1313, 1319, 1322, 1329, 1331, 1341, 1349, 1350, 1418, 1433, 1437, 1448], "anti": [636, 641], "antialia": [291, 292], "antialias": [291, 292], "anticip": [1326, 1332, 1465], "any_f8_any_f8_ani": [1328, 1395], "any_f8_any_f8_any_fast_accum": [1328, 1395], "any_f8_any_f8_f32": [1328, 1395], "any_f8_any_f8_f32_fast_accum": [1328, 1395], "anybuff": 1350, "anymor": [616, 1326, 1343, 1346, 1447], "anyth": [99, 998, 1273, 1313, 1319, 1334, 1336, 1339, 1346, 1360, 1382, 1410, 1412, 1414, 1417, 1419, 1435, 1436, 1437, 1440, 1442, 1444, 1452, 1474], "anywai": [1313, 1350, 1433, 1440, 1464, 1469], "anywher": [746, 917, 1355], "aot": [84, 424, 1326, 1353, 1405], "apach": [1435, 1442], "apart": 1458, "api": [13, 21, 76, 84, 94, 97, 98, 111, 112, 113, 194, 198, 244, 262, 265, 283, 286, 296, 321, 322, 323, 324, 325, 328, 348, 368, 382, 383, 392, 413, 414, 419, 429, 440, 441, 442, 443, 445, 446, 448, 452, 453, 458, 459, 460, 461, 462, 465, 466, 467, 496, 558, 574, 601, 606, 608, 629, 630, 642, 645, 646, 647, 666, 676, 696, 719, 726, 759, 773, 783, 784, 786, 787, 790, 793, 795, 804, 806, 807, 809, 812, 813, 823, 825, 826, 842, 843, 848, 878, 895, 896, 913, 940, 943, 945, 950, 953, 965, 998, 1001, 1002, 1006, 1012, 1063, 1068, 1069, 1070, 1073, 1077, 1078, 1083, 1085, 1086, 1089, 1093, 1280, 1281, 1283, 1312, 1315, 1318, 1319, 1320, 1325, 1326, 1327, 1328, 1331, 1334, 1336, 1343, 1346, 1348, 1350, 1352, 1353, 1354, 1355, 1356, 1360, 1367, 1375, 1379, 1380, 1381, 1386, 1395, 1405, 1409, 1413, 1416, 1421, 1425, 1426, 1432, 1435, 1436, 1437, 1438, 1440, 1442, 1444, 1446, 1447, 1448, 1449, 1452, 1453, 1454, 1456, 1458, 1461, 1465, 1466, 1469], "api_doc": 76, "api_util": [1360, 1416], "api_vers": [264, 265, 285, 286, 1305, 1343, 1350], "api_version_typed_ffi": 1350, "apicallback": 1464, "apivers": 1431, "app": [1313, 1360, 1432, 1433], "app2": [1313, 1433], "app2_jvp": [1313, 1433], "app_bwd": [1313, 1433], "app_fwd": [1313, 1433], "app_jvp": [1313, 1433], "appar": 1326, "appeal": 1417, "appear": [241, 343, 344, 421, 758, 765, 783, 998, 1218, 1304, 1313, 1318, 1326, 1343, 1346, 1358, 1360, 1411, 1429, 1432, 1433, 1440, 1443, 1453, 1461, 1464, 1474], "append": [182, 456, 504, 597, 656, 665, 877, 918, 919, 1318, 1319, 1321, 1339, 1340, 1342, 1429, 1453, 1462, 1474], "appl": [1312, 1326, 1356, 1474], "appli": [10, 67, 77, 80, 108, 114, 127, 190, 194, 250, 267, 280, 292, 296, 311, 339, 343, 344, 345, 346, 347, 362, 363, 364, 366, 387, 402, 415, 423, 432, 457, 458, 459, 460, 461, 462, 466, 467, 472, 474, 481, 493, 501, 506, 527, 539, 566, 567, 616, 719, 728, 817, 860, 862, 877, 883, 891, 896, 901, 907, 909, 922, 946, 947, 965, 998, 1074, 1082, 1098, 1100, 1101, 1102, 1103, 1140, 1258, 1259, 1267, 1304, 1313, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1326, 1328, 1331, 1333, 1334, 1335, 1336, 1341, 1342, 1343, 1346, 1350, 1351, 1353, 1354, 1360, 1368, 1385, 1395, 1404, 1411, 1412, 1413, 1415, 1417, 1419, 1420, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1441, 1443, 1444, 1449, 1452, 1453, 1457, 1460, 1469, 1470, 1471, 1473, 1474], "applic": [0, 67, 99, 113, 194, 311, 378, 459, 479, 501, 529, 567, 1082, 1088, 1256, 1313, 1318, 1320, 1323, 1328, 1333, 1336, 1341, 1346, 1350, 1351, 1354, 1360, 1382, 1385, 1399, 1413, 1414, 1415, 1417, 1432, 1433, 1434, 1435, 1437, 1438, 1442, 1443, 1449, 1456, 1462, 1474], "applicatoin": 99, "apply_along_axi": [567, 1326], "apply_fun": [1368, 1421], "apply_lay": 1413, "apply_matrix": 1444, "apply_over_ax": [566, 1326], "apply_primit": 1430, "approach": [67, 235, 574, 800, 930, 1124, 1128, 1313, 1318, 1319, 1325, 1339, 1349, 1350, 1353, 1414, 1416, 1420, 1422, 1425, 1426, 1433, 1437, 1439, 1441, 1443, 1449, 1452, 1455, 1456, 1466], "appropri": [137, 219, 235, 348, 361, 431, 680, 694, 697, 1022, 1036, 1326, 1343, 1348, 1349, 1350, 1352, 1356, 1386, 1399, 1414, 1415, 1417, 1418, 1426, 1443, 1444, 1449, 1452, 1465, 1466, 1468], "approv": 1414, "approx": 1135, "approx_": 1326, "approx_flop": 800, "approx_math": 160, "approx_max_k": [484, 578, 874], "approx_min_k": [484, 578, 874], "approxim": [160, 188, 305, 306, 493, 508, 560, 578, 697, 729, 760, 800, 874, 954, 1015, 1019, 1022, 1032, 1063, 1072, 1081, 1100, 1104, 1105, 1106, 1135, 1143, 1319, 1328, 1349, 1374, 1412, 1418, 1426, 1445, 1455, 1460, 1466], "april": [1338, 1357], "ar": [0, 9, 10, 12, 13, 61, 62, 64, 67, 69, 71, 77, 78, 80, 81, 82, 83, 92, 94, 95, 96, 98, 99, 101, 102, 113, 114, 120, 121, 127, 137, 153, 160, 172, 173, 177, 182, 193, 194, 197, 199, 203, 205, 220, 234, 235, 240, 241, 244, 246, 247, 249, 250, 251, 253, 262, 263, 265, 267, 268, 283, 284, 286, 290, 291, 292, 296, 303, 304, 305, 306, 311, 328, 331, 335, 337, 339, 343, 344, 349, 357, 361, 362, 363, 364, 365, 366, 367, 372, 373, 375, 378, 381, 387, 397, 398, 401, 404, 406, 411, 412, 415, 421, 422, 424, 431, 433, 455, 456, 457, 458, 459, 460, 461, 462, 464, 469, 471, 472, 473, 476, 479, 482, 483, 486, 487, 492, 493, 498, 499, 500, 501, 503, 504, 506, 512, 513, 524, 527, 528, 529, 533, 534, 539, 543, 545, 551, 559, 560, 564, 566, 578, 583, 584, 585, 587, 591, 595, 596, 597, 598, 600, 616, 617, 621, 627, 628, 633, 634, 636, 637, 640, 641, 650, 654, 657, 660, 664, 665, 666, 667, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 696, 697, 712, 713, 716, 717, 719, 721, 722, 726, 728, 729, 734, 741, 742, 749, 758, 760, 762, 765, 768, 769, 771, 772, 774, 794, 797, 798, 800, 803, 804, 805, 807, 813, 817, 828, 829, 832, 833, 834, 835, 836, 838, 839, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 864, 873, 874, 875, 877, 878, 883, 891, 892, 893, 894, 895, 896, 897, 902, 908, 912, 914, 918, 919, 922, 923, 924, 927, 935, 942, 944, 946, 955, 956, 957, 958, 960, 961, 962, 965, 971, 972, 973, 974, 975, 976, 977, 978, 981, 983, 985, 987, 990, 994, 995, 996, 997, 998, 1012, 1013, 1015, 1016, 1017, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1035, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1055, 1056, 1070, 1071, 1074, 1078, 1080, 1082, 1083, 1086, 1087, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1104, 1105, 1106, 1122, 1123, 1136, 1138, 1139, 1140, 1147, 1148, 1149, 1218, 1238, 1239, 1244, 1246, 1256, 1257, 1258, 1259, 1267, 1273, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1304, 1305, 1308, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1360, 1366, 1367, 1368, 1371, 1373, 1374, 1375, 1379, 1382, 1385, 1386, 1394, 1395, 1399, 1402, 1404, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1473, 1474, 1475], "ar1": [758, 923, 924, 971], "ar1_indic": 758, "ar2": [758, 923, 924, 971], "ar2_indic": 758, "arang": [0, 10, 13, 73, 75, 84, 129, 130, 137, 234, 238, 240, 244, 290, 296, 303, 311, 362, 363, 364, 387, 426, 433, 434, 450, 471, 472, 498, 499, 500, 558, 566, 587, 595, 596, 597, 601, 606, 608, 610, 612, 615, 623, 629, 630, 634, 662, 663, 666, 669, 696, 701, 719, 721, 723, 724, 727, 740, 750, 757, 759, 779, 780, 788, 809, 812, 815, 823, 825, 826, 827, 828, 837, 843, 860, 861, 868, 870, 878, 897, 898, 909, 918, 919, 925, 933, 943, 947, 950, 952, 989, 990, 992, 994, 995, 996, 997, 998, 1012, 1022, 1045, 1091, 1279, 1280, 1281, 1304, 1313, 1315, 1318, 1321, 1326, 1332, 1333, 1334, 1336, 1337, 1342, 1343, 1346, 1348, 1349, 1353, 1354, 1382, 1386, 1399, 1404, 1410, 1413, 1415, 1422, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1456, 1462, 1465, 1467, 1468, 1473], "arbitrari": [98, 296, 415, 456, 566, 578, 621, 623, 663, 721, 740, 747, 777, 874, 918, 987, 989, 998, 1074, 1124, 1276, 1313, 1317, 1318, 1320, 1326, 1341, 1360, 1367, 1382, 1405, 1414, 1419, 1421, 1422, 1423, 1437, 1442, 1452, 1457, 1460, 1461, 1465], "arbitrarili": [1367, 1423, 1444], "arc": [299, 309, 312, 313, 349, 469, 482], "arcco": [556, 571, 573, 638], "arccosh": [557, 572, 575, 639, 1326], "architectur": [1325, 1348, 1349, 1351, 1354, 1356, 1438, 1452, 1455, 1457], "archiv": [918, 919, 1339, 1343, 1356, 1386], "arcsin": [569, 573, 589, 929], "arcsinh": [570, 575, 590, 932], "arctan": [569, 571, 574, 592, 948], "arctan2": 593, "arctang": 574, "arctanh": [570, 572, 594, 949, 1436], "are_clos": 1441, "area": [736, 954, 1063, 1142, 1143, 1312, 1346, 1418], "aren": [402, 1334, 1341, 1354, 1413, 1415, 1416, 1417, 1424, 1438, 1439, 1443, 1448, 1465, 1474], "arg": [31, 45, 59, 62, 69, 83, 85, 108, 114, 127, 131, 153, 162, 163, 190, 194, 195, 196, 197, 198, 199, 200, 244, 250, 394, 424, 436, 501, 527, 558, 566, 601, 606, 608, 612, 718, 720, 775, 816, 821, 822, 823, 825, 826, 833, 839, 843, 862, 877, 891, 909, 919, 922, 943, 947, 999, 1004, 1012, 1036, 1093, 1256, 1257, 1258, 1259, 1267, 1268, 1275, 1313, 1318, 1319, 1326, 1331, 1332, 1336, 1343, 1346, 1350, 1354, 1360, 1367, 1373, 1374, 1386, 1404, 1405, 1411, 1412, 1430, 1431, 1436, 1438, 1449, 1460, 1462, 1465, 1469, 1470, 1474], "arg0": [1003, 1004, 1315, 1343, 1350, 1440, 1468], "arg1": [773, 1315, 1411, 1440, 1468], "arg2": [773, 1411], "arg3": 1360, "arg_0": 1350, "arg_h": 1343, "arg_info": 1350, "arg_nam": 1405, "arg_shap": 1373, "arg_shard": [1350, 1373], "arg_spec": 1346, "arg_tang": 1360, "arg_token": 1343, "arg_valu": 1360, "arg_w": 1343, "argmax": [577, 845, 846, 896, 1326, 1349, 1435, 1442], "argmin": [576, 845, 846, 947, 1326], "argnum": [76, 234, 240, 289, 290, 293, 294, 295, 1302, 1320, 1360, 1437, 1445], "argpartit": 874, "args_av": 1343, "args_bar": 69, "args_flat": [1318, 1405], "args_info": [1350, 1405], "args_spec": [1326, 1346], "args_str": 1319, "argsort": [578, 783, 920, 934, 947, 1326, 1349], "arguabl": [1341, 1414, 1418, 1449], "argument": [10, 13, 67, 69, 74, 76, 77, 78, 79, 81, 82, 83, 85, 98, 99, 102, 106, 108, 114, 119, 120, 121, 127, 128, 131, 138, 174, 182, 184, 185, 186, 190, 194, 219, 234, 235, 237, 240, 241, 244, 246, 247, 249, 250, 262, 263, 265, 267, 268, 283, 284, 286, 289, 290, 291, 292, 293, 295, 296, 297, 337, 339, 356, 357, 378, 397, 404, 430, 456, 457, 479, 487, 492, 493, 498, 500, 501, 502, 515, 525, 529, 530, 534, 566, 568, 578, 580, 595, 596, 597, 615, 621, 622, 628, 632, 634, 636, 641, 646, 647, 657, 666, 675, 681, 686, 719, 721, 742, 745, 758, 798, 803, 816, 828, 853, 855, 860, 864, 873, 874, 875, 877, 893, 897, 898, 903, 913, 919, 920, 923, 946, 952, 953, 971, 972, 973, 974, 975, 976, 987, 998, 1003, 1005, 1012, 1013, 1033, 1060, 1062, 1072, 1074, 1087, 1091, 1093, 1099, 1104, 1105, 1106, 1138, 1149, 1218, 1238, 1239, 1256, 1257, 1258, 1259, 1267, 1268, 1273, 1274, 1275, 1279, 1280, 1282, 1302, 1303, 1304, 1318, 1319, 1320, 1321, 1324, 1326, 1328, 1331, 1333, 1334, 1336, 1339, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1357, 1360, 1367, 1368, 1373, 1374, 1382, 1386, 1398, 1399, 1402, 1404, 1405, 1410, 1411, 1414, 1415, 1417, 1418, 1419, 1421, 1423, 1424, 1425, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1439, 1440, 1443, 1447, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1465, 1467, 1468, 1469, 1470, 1474], "argv": 1431, "argwher": 990, "ari": [586, 595, 596, 597, 662, 665, 739, 937, 988, 1474], "aris": [1313, 1318, 1342, 1346, 1360, 1411, 1413, 1417, 1432, 1433, 1455, 1462, 1470], "arisen": 1414, "arith": 1449, "arithmet": [241, 306, 413, 465, 466, 467, 529, 697, 882, 885, 888, 1318, 1326, 1346, 1349, 1402, 1417, 1426, 1432, 1439, 1443, 1452, 1458, 1460, 1461], "ariti": [1277, 1417], "arm": [1326, 1356], "aros": [972, 1342, 1424], "around": [61, 69, 85, 330, 341, 347, 362, 364, 365, 367, 387, 421, 440, 441, 442, 443, 445, 446, 448, 472, 479, 1007, 1281, 1283, 1312, 1313, 1318, 1326, 1333, 1336, 1342, 1346, 1348, 1350, 1354, 1355, 1395, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1426, 1431, 1432, 1433, 1434, 1438, 1443, 1448, 1452, 1458, 1462, 1469, 1475], "arr": [86, 137, 206, 215, 237, 239, 498, 500, 565, 566, 585, 622, 650, 653, 675, 750, 878, 896, 901, 918, 941, 947, 951, 958, 962, 972, 980, 1065, 1326, 1331, 1342, 1353, 1357, 1404, 1411, 1422, 1430, 1431, 1432, 1441, 1468], "arr1": 1440, "arr_0": 919, "arr_1": 919, "arr_dev": 1441, "arr_host": 1441, "arr_shap": [880, 886], "arr_shard": 1468, "arrai": [63, 64, 67, 69, 71, 73, 75, 76, 78, 79, 81, 82, 84, 86, 95, 96, 98, 101, 102, 114, 119, 131, 132, 135, 136, 137, 138, 140, 143, 152, 155, 166, 172, 173, 175, 180, 181, 182, 183, 186, 188, 190, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 250, 253, 262, 276, 277, 280, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 498, 499, 500, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 701, 702, 703, 704, 705, 706, 708, 710, 711, 712, 713, 714, 715, 716, 717, 719, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 749, 750, 751, 752, 753, 754, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1275, 1279, 1280, 1281, 1282, 1284, 1300, 1302, 1303, 1304, 1309, 1312, 1313, 1314, 1315, 1317, 1318, 1320, 1321, 1323, 1324, 1326, 1331, 1332, 1333, 1334, 1336, 1337, 1340, 1342, 1343, 1346, 1348, 1350, 1351, 1354, 1357, 1360, 1362, 1367, 1373, 1374, 1382, 1385, 1386, 1395, 1398, 1400, 1402, 1404, 1409, 1411, 1412, 1416, 1417, 1421, 1423, 1424, 1425, 1426, 1429, 1430, 1433, 1435, 1436, 1437, 1439, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1470, 1471, 1473, 1474], "arrang": [499, 1313, 1415, 1433, 1443, 1452, 1458], "array1": 1410, "array2": 1410, "array2str": [585, 587], "array3": 1410, "array4": 1410, "array_abstraction_level": 1318, "array_api": [629, 876, 980, 1326, 1399], "array_cr": 1331, "array_equ": [584, 1326], "array_equiv": [583, 1326], "array_lik": [803, 918, 1074], "array_method": 1430, "array_operand": 1432, "array_repr": 587, "array_seri": 1326, "array_split": [662, 739, 937, 988, 1443], "array_str": 585, "array_typ": [1318, 1411], "arrayannot": 1414, "arrayimpl": [498, 499, 500, 1326, 1331, 1414, 1444], "arrayinst": 1414, "arraylik": [3, 4, 11, 12, 14, 23, 34, 35, 36, 39, 40, 44, 47, 53, 54, 56, 58, 60, 153, 206, 221, 222, 278, 298, 299, 300, 301, 307, 308, 309, 310, 312, 313, 314, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 336, 338, 340, 344, 345, 348, 349, 350, 359, 361, 363, 364, 365, 366, 367, 368, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 386, 389, 391, 392, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 429, 430, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 455, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 488, 498, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 531, 532, 533, 534, 535, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 583, 584, 586, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 612, 614, 617, 619, 621, 622, 623, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 662, 663, 665, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 725, 729, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745, 750, 757, 758, 759, 760, 761, 764, 765, 766, 767, 770, 775, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 830, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 861, 862, 863, 864, 865, 872, 873, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 894, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 915, 916, 920, 921, 923, 924, 925, 926, 927, 929, 930, 932, 933, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 948, 949, 951, 952, 953, 954, 956, 958, 959, 960, 962, 963, 964, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 988, 989, 990, 994, 995, 996, 997, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1098, 1099, 1100, 1101, 1102, 1103, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1326, 1409, 1414, 1422], "arriv": [158, 169, 172, 1455, 1458], "arrow": [76, 1318, 1426], "arrows": 1426, "artifact": [1326, 1343, 1356, 1419, 1429, 1431, 1475], "artifici": [160, 1412, 1417, 1458], "arxiv": [235, 305, 306, 506, 549, 1014, 1043, 1367, 1415], "as_eul": 1108, "as_hashable_funct": 1326, "as_hlo_text": 1326, "as_matrix": 1107, "as_numpi": 1442, "as_numpy_iter": 1341, "as_rotvec": 1107, "as_supervis": 1442, "as_text": [1315, 1326, 1350, 1405, 1434], "asarrai": [129, 130, 293, 295, 582, 595, 596, 597, 718, 720, 1317, 1318, 1326, 1332, 1342, 1348, 1373, 1382, 1409, 1422, 1435, 1465, 1473], "ascend": [10, 398, 790, 792, 860, 946, 1395], "ascii_lowercas": 1318, "asid": [1350, 1414, 1418, 1419, 1425, 1426, 1444], "asin": [299, 312, 469, 569, 573, 929], "asinh": [300, 314, 470], "ask": [999, 1322, 1326, 1329, 1334, 1412, 1440], "asm": 190, "aspect": [1449, 1457], "assembl": [1431, 1468], "assembli": 190, "assert": [73, 121, 321, 356, 357, 499, 500, 987, 1023, 1276, 1313, 1315, 1318, 1319, 1326, 1333, 1334, 1341, 1343, 1348, 1350, 1353, 1360, 1373, 1404, 1411, 1414, 1415, 1426, 1431, 1436, 1437, 1443, 1447, 1452, 1453, 1458, 1460, 1462, 1471], "assert_allclos": [1036, 1318, 1326, 1350, 1444, 1456, 1460, 1461], "assert_array_equ": [1455, 1460], "assert_gradient_neg": 1334, "assertallclos": 1326, "assertionerror": [1257, 1258, 1259], "assign": [99, 491, 641, 919, 1058, 1318, 1326, 1329, 1341, 1382, 1404, 1432, 1444, 1448, 1452, 1456, 1457, 1461], "assist": 1326, "associ": [94, 101, 102, 109, 311, 343, 344, 365, 367, 439, 503, 567, 600, 697, 716, 757, 800, 877, 1000, 1002, 1022, 1075, 1084, 1085, 1139, 1140, 1313, 1318, 1326, 1341, 1349, 1350, 1405, 1415, 1419, 1425, 1426, 1427, 1433, 1439, 1440, 1443, 1449, 1452, 1468, 1473], "associative_scan": 1328, "assum": [10, 131, 137, 263, 284, 292, 356, 357, 408, 499, 529, 539, 650, 758, 765, 803, 807, 860, 902, 920, 923, 924, 946, 981, 987, 998, 1012, 1022, 1072, 1086, 1087, 1098, 1101, 1279, 1313, 1318, 1329, 1339, 1341, 1343, 1346, 1348, 1349, 1350, 1360, 1373, 1402, 1410, 1412, 1414, 1420, 1423, 1431, 1433, 1436, 1437, 1439, 1443, 1448, 1449, 1452, 1453, 1455, 1458, 1460, 1461, 1462, 1463, 1465, 1466], "assume_a": [1086, 1326], "assume_uniqu": [206, 758, 765, 923, 924], "assume_unique_indic": 650, "assumpt": [155, 404, 499, 981, 1318, 1346, 1348, 1350, 1431, 1461], "ast": [1318, 1331, 1449], "astyp": [348, 568, 862, 888, 1326, 1348, 1349, 1353, 1430, 1432, 1445, 1449, 1457, 1460, 1462, 1470], "asymmetr": [1426, 1458], "asymmetri": 1421, "asymptot": 1135, "async": [160, 1323, 1334, 1353, 1450, 1452, 1454, 1455, 1461, 1475], "async_copi": [1452, 1461], "async_copy_op": 1458, "async_help": 1360, "asynccollectivefus": 1475, "asynccopydescriptor": 1458, "asynchron": [18, 96, 158, 172, 173, 178, 1323, 1326, 1340, 1349, 1353, 1412, 1429, 1444, 1446, 1448, 1451, 1455, 1457, 1458, 1461, 1464, 1475], "asynchroni": [1452, 1455], "asyncio": 1360, "atan": [299, 309, 313, 482, 569, 571, 573, 948], "atan2": [312, 482, 574, 981], "atanh": [300, 310, 483, 1436], "atleast_1d": [596, 597], "atleast_2d": [595, 597], "atleast_3d": [595, 596], "atol": [560, 760, 793, 800, 803, 804, 807, 810, 1070, 1077, 1083, 1084, 1085, 1089, 1104, 1105, 1106, 1257, 1258, 1259, 1313, 1437, 1441, 1443, 1444, 1460], "atom": [144, 145, 146, 147, 148, 149, 150, 151, 253, 254, 1318, 1319, 1411, 1427, 1449, 1456], "atop": 1402, "atrou": [343, 344, 345, 346, 347], "attach": [1318, 1319, 1326, 1386, 1431, 1457, 1463], "attempt": [69, 88, 89, 99, 132, 248, 249, 328, 502, 940, 1074, 1326, 1328, 1331, 1342, 1346, 1348, 1349, 1353, 1360, 1385, 1414, 1415, 1418, 1429, 1432, 1434, 1444, 1457, 1462, 1463, 1464, 1470], "attend": [506, 1415], "attent": [506, 1353, 1415, 1449, 1462], "attn": 1415, "attr": [1326, 1349, 1350], "attrgett": 1318, "attribut": [0, 21, 62, 63, 67, 69, 72, 73, 77, 81, 103, 107, 114, 127, 131, 133, 140, 141, 142, 143, 158, 159, 160, 162, 163, 165, 166, 167, 168, 187, 195, 196, 197, 198, 199, 200, 244, 252, 253, 254, 255, 256, 258, 262, 263, 267, 283, 284, 337, 394, 492, 501, 620, 624, 625, 627, 664, 669, 697, 700, 704, 705, 706, 709, 724, 726, 744, 748, 751, 752, 753, 754, 756, 861, 866, 867, 870, 919, 925, 928, 933, 965, 967, 968, 969, 970, 973, 974, 975, 979, 992, 1003, 1004, 1012, 1092, 1107, 1108, 1196, 1275, 1279, 1280, 1315, 1318, 1326, 1340, 1343, 1349, 1350, 1354, 1360, 1385, 1386, 1409, 1410, 1414, 1422, 1425, 1429, 1430, 1431, 1438, 1444, 1469], "attributeerror": 1318, "attributekeypathentri": 1326, "atupl": 1474, "audienc": 1416, "aug": 1358, "augment": [1415, 1440, 1443, 1449], "august": [1338, 1341, 1343, 1414, 1417, 1425], "aupdat": 150, "author": [1414, 1435, 1442], "auto": [99, 194, 397, 404, 666, 667, 765, 987, 1094, 1095, 1096, 1097, 1319, 1326, 1328, 1329, 1339, 1350, 1402, 1411, 1443, 1468, 1475], "auto_ax": 1440, "auto_batch_convolv": 1321, "auto_batch_convolve_v2": 1321, "auto_mesh": 1440, "auto_spmd_partit": 491, "auto_spmd_partitioning_mesh_id": 491, "auto_spmd_partitioning_mesh_shap": 491, "autobatch": 1314, "autodesk": 1358, "autodetect": 99, "autodidax": [1326, 1330], "autodidax2": 1330, "autodiff": [67, 73, 197, 199, 356, 378, 479, 1093, 1312, 1314, 1315, 1320, 1326, 1328, 1348, 1349, 1351, 1354, 1385, 1415, 1416, 1417, 1419, 1423, 1433, 1443, 1444, 1470], "autodifferenti": [1350, 1436], "autodoc": 1414, "autodoc_type_alias": 1414, "autograd": [1313, 1331, 1419, 1437], "autom": [1326, 1339, 1356, 1358], "automat": [67, 76, 77, 80, 81, 99, 121, 160, 194, 293, 295, 356, 459, 479, 487, 491, 502, 506, 539, 729, 784, 790, 792, 800, 907, 987, 993, 1073, 1093, 1150, 1151, 1256, 1257, 1258, 1259, 1308, 1309, 1318, 1322, 1326, 1328, 1329, 1333, 1334, 1335, 1339, 1346, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1360, 1374, 1382, 1402, 1404, 1410, 1412, 1413, 1415, 1417, 1419, 1422, 1427, 1430, 1431, 1432, 1433, 1435, 1437, 1438, 1440, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1456, 1458, 1460, 1461, 1464, 1466, 1467, 1472, 1474, 1475], "autotun": 1463, "aux": [297, 493, 1282, 1303, 1326], "aux1": 269, "aux2": 269, "aux_arg": 69, "aux_data": [1280, 1281, 1282, 1283, 1332, 1349, 1465, 1474], "auxdata": 249, "auxiliari": [267, 289, 290, 293, 295, 297, 356, 357, 493, 1280, 1282, 1302, 1303, 1312, 1367, 1465, 1474], "auxiliary_data": [289, 293, 295, 1302], "avail": [62, 77, 82, 84, 97, 99, 235, 291, 292, 296, 303, 315, 316, 331, 349, 372, 373, 375, 380, 397, 411, 412, 424, 426, 433, 434, 455, 469, 476, 482, 483, 491, 499, 506, 633, 634, 637, 657, 721, 728, 796, 814, 891, 892, 901, 907, 918, 922, 923, 940, 944, 971, 990, 998, 1088, 1094, 1095, 1096, 1097, 1100, 1122, 1317, 1318, 1326, 1328, 1329, 1331, 1333, 1334, 1336, 1337, 1339, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1382, 1385, 1386, 1395, 1402, 1404, 1409, 1412, 1413, 1414, 1418, 1422, 1426, 1429, 1430, 1431, 1432, 1434, 1438, 1439, 1440, 1441, 1447, 1452, 1455, 1457, 1458, 1461, 1462, 1464, 1468, 1470, 1473, 1475], "aval": [255, 258, 1318, 1360, 1410, 1426, 1430, 1440], "aval_to_ir_typ": 1318, "avals_in": [1318, 1360], "avals_out": [1318, 1360], "averag": [529, 834, 1098, 1103, 1238, 1346], "avg": 1462, "avgpool": 1368, "avoid": [67, 83, 85, 98, 102, 492, 493, 506, 550, 568, 623, 629, 630, 651, 655, 663, 740, 772, 821, 822, 836, 919, 941, 989, 1140, 1280, 1282, 1313, 1317, 1318, 1319, 1326, 1328, 1331, 1332, 1336, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1367, 1412, 1416, 1417, 1418, 1420, 1424, 1425, 1429, 1430, 1431, 1432, 1443, 1444, 1446, 1447, 1448, 1449, 1452, 1456, 1458, 1462, 1463, 1465, 1466, 1467, 1474], "avx": 1326, "avx512": 1326, "awai": [69, 673, 830, 842, 901, 907, 913, 940, 945, 953, 1313, 1341, 1395, 1399, 1410, 1419, 1424, 1433, 1440, 1443, 1448, 1449, 1455], "await": [160, 173], "awar": [65, 66, 234, 240, 337, 773, 853, 909, 1282, 1328, 1342, 1350, 1431, 1444, 1457], "away_from_zero": [454, 1395], "aweight": 641, "awesom": [1322, 1355, 1423], "awkward": [1415, 1417, 1448], "ax": [52, 55, 59, 132, 133, 137, 172, 184, 194, 211, 218, 346, 365, 367, 388, 415, 440, 441, 442, 443, 445, 446, 448, 456, 502, 518, 519, 520, 521, 522, 523, 529, 533, 534, 536, 545, 550, 559, 564, 566, 567, 598, 623, 640, 642, 663, 666, 667, 673, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 701, 729, 740, 786, 801, 809, 810, 811, 832, 834, 835, 838, 842, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 875, 876, 892, 894, 897, 907, 912, 913, 915, 940, 941, 942, 944, 945, 950, 952, 953, 956, 960, 983, 989, 998, 1012, 1060, 1062, 1087, 1100, 1104, 1105, 1106, 1136, 1138, 1147, 1218, 1239, 1256, 1304, 1318, 1321, 1326, 1350, 1360, 1382, 1404, 1411, 1417, 1418, 1424, 1426, 1430, 1432, 1434, 1439, 1440, 1441, 1444, 1453, 1457, 1458, 1467, 1468], "axi": [1, 3, 4, 5, 6, 7, 8, 14, 19, 20, 34, 35, 36, 40, 41, 44, 51, 52, 53, 54, 56, 60, 61, 138, 172, 181, 183, 184, 194, 202, 218, 262, 283, 303, 304, 306, 307, 308, 311, 315, 316, 337, 338, 351, 352, 353, 354, 355, 362, 364, 365, 367, 387, 415, 416, 417, 425, 426, 427, 431, 432, 433, 434, 435, 440, 441, 442, 443, 445, 446, 448, 450, 456, 472, 475, 484, 499, 501, 502, 510, 517, 518, 519, 520, 521, 522, 523, 526, 529, 533, 534, 536, 540, 545, 550, 559, 561, 562, 564, 565, 566, 567, 576, 577, 578, 579, 586, 598, 610, 615, 623, 628, 629, 630, 640, 642, 644, 645, 646, 647, 650, 655, 656, 662, 663, 665, 666, 673, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 701, 702, 703, 727, 729, 739, 740, 746, 749, 750, 783, 786, 801, 813, 814, 815, 827, 830, 832, 833, 834, 835, 838, 839, 842, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 872, 873, 874, 875, 892, 894, 896, 897, 898, 906, 912, 913, 915, 917, 933, 934, 935, 937, 940, 941, 942, 944, 945, 946, 947, 951, 952, 953, 954, 957, 958, 961, 962, 972, 977, 980, 981, 983, 985, 988, 989, 994, 995, 996, 997, 998, 1012, 1019, 1022, 1040, 1041, 1045, 1050, 1059, 1060, 1061, 1062, 1063, 1098, 1099, 1101, 1102, 1103, 1107, 1136, 1138, 1147, 1203, 1218, 1238, 1239, 1256, 1304, 1313, 1318, 1321, 1323, 1326, 1336, 1341, 1342, 1343, 1346, 1350, 1360, 1368, 1373, 1382, 1404, 1414, 1415, 1417, 1431, 1432, 1434, 1435, 1439, 1441, 1442, 1443, 1445, 1449, 1453, 1455, 1456, 1457, 1458, 1462, 1465, 1468, 1474], "axicy2daaaaaewab": 1339, "axis1": [22, 55, 58, 655, 945, 952], "axis2": [22, 55, 58, 655, 945, 952], "axis_": 1318, "axis_context": 1360, "axis_env": 501, "axis_group": 1326, "axis_index": [434, 1417, 1443, 1448, 1449, 1452, 1458], "axis_index_group": [303, 304, 425, 426, 427, 433, 434, 435, 1326, 1415, 1443], "axis_nam": [303, 304, 315, 316, 425, 426, 427, 431, 432, 433, 434, 435, 502, 998, 1256, 1304, 1326, 1334, 1353, 1373, 1404, 1415, 1417, 1443, 1448], "axis_resourc": 1326, "axis_s": [73, 74, 304, 998, 1304, 1318, 1326, 1415, 1443, 1448], "axis_shap": 502, "axis_size_env": 1360, "axis_typ": [502, 1360, 1404, 1440, 1443, 1468], "axisa": 642, "axisb": 642, "axisc": 642, "axisenv": 1326, "axisnam": [289, 315, 316, 501, 536, 998, 1256, 1302, 1303, 1304, 1443], "axiss": 1326, "axistyp": [502, 1404, 1440, 1468], "axlearn": 1355, "azimuth": 1149, "b": [13, 23, 76, 106, 128, 154, 178, 204, 225, 229, 236, 262, 283, 290, 298, 311, 320, 339, 356, 408, 410, 453, 456, 481, 501, 506, 534, 539, 540, 549, 555, 560, 565, 610, 642, 660, 664, 671, 672, 717, 749, 760, 774, 777, 793, 794, 798, 806, 811, 817, 829, 871, 893, 896, 918, 950, 959, 984, 985, 987, 1016, 1044, 1052, 1065, 1066, 1067, 1070, 1072, 1077, 1079, 1080, 1086, 1087, 1104, 1105, 1106, 1110, 1111, 1112, 1129, 1138, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1181, 1182, 1233, 1234, 1242, 1243, 1244, 1245, 1246, 1247, 1261, 1262, 1277, 1299, 1304, 1312, 1313, 1315, 1318, 1319, 1320, 1326, 1328, 1329, 1336, 1339, 1341, 1343, 1346, 1350, 1354, 1360, 1386, 1411, 1415, 1416, 1419, 1424, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1448, 1465, 1469, 1470, 1474], "b0": 1458, "b0_bar": [1313, 1433], "b1": [1318, 1367, 1434, 1473], "b19a2dc1abf7": [1313, 1433], "b1_": 1318, "b1_bar": [1313, 1433], "b1b1u1u2u4u8i1i2i4i8bff2f4f8c8c16i": 1473, "b1u1u2u4u8i1i2i4i8bff2f4f8c8c16i": 1473, "b2": [1318, 1367, 1434], "b2_": 1318, "b3": 1434, "b4": 1434, "b_1": 1109, "b_block": [1415, 1443], "b_block_siz": 540, "b_first": 1443, "b_frag": 1443, "b_gmem": 1452, "b_grad": [1320, 1437], "b_grad_autodiff": [1320, 1437], "b_grad_numer": [1320, 1437], "b_i": [534, 1138], "b_init": 1368, "b_k": 1460, "b_kei": [1313, 1320, 1435, 1437, 1442], "b_last": 1443, "b_load": 1452, "b_m": 1460, "b_n": [1109, 1460], "b_reconstruct": 811, "b_ref": 1452, "b_scale": [539, 540], "b_slice": 1452, "b_smem": 1452, "ba": [1072, 1354, 1432, 1438], "back": [82, 84, 120, 236, 288, 337, 450, 456, 539, 965, 1313, 1317, 1318, 1319, 1326, 1328, 1339, 1341, 1342, 1343, 1348, 1349, 1350, 1353, 1367, 1371, 1385, 1410, 1412, 1414, 1415, 1419, 1432, 1433, 1435, 1437, 1441, 1442, 1443, 1444, 1452, 1455, 1456, 1458, 1460, 1461, 1465, 1466, 1468, 1474], "backend": [10, 67, 82, 90, 94, 97, 99, 153, 182, 184, 192, 236, 244, 296, 341, 343, 344, 345, 346, 347, 360, 361, 381, 404, 457, 458, 459, 460, 461, 462, 491, 494, 495, 496, 503, 504, 506, 539, 615, 660, 666, 749, 789, 791, 795, 800, 809, 813, 829, 837, 860, 868, 882, 885, 898, 920, 946, 950, 984, 985, 998, 1000, 1001, 1002, 1006, 1007, 1083, 1098, 1315, 1318, 1320, 1326, 1329, 1336, 1348, 1351, 1355, 1360, 1379, 1382, 1395, 1396, 1405, 1411, 1421, 1424, 1426, 1432, 1447, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1475], "backend_compil": 1326, "backend_config": [263, 284, 1343, 1350], "backend_independent_test": 1339, "backend_specific_transl": 1326, "background": [160, 1313, 1437, 1450, 1457, 1459, 1473], "backofflimit": 1431, "backpressur": 1452, "backpropag": [537, 1313], "backtrac": 1336, "backward": [67, 76, 81, 356, 403, 539, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 697, 1059, 1060, 1061, 1062, 1091, 1257, 1313, 1318, 1326, 1334, 1336, 1350, 1353, 1354, 1360, 1371, 1382, 1413, 1414, 1415, 1416, 1419, 1420, 1422, 1427, 1432, 1433, 1436, 1438, 1441, 1443, 1460, 1475], "backward_pass": [1318, 1432], "bad": [1341, 1358, 1415, 1425, 1445, 1448, 1466], "bad_example_jit": 1331, "bag": 1414, "baggag": 1414, "bake": [1318, 1436, 1469], "balanc": [1353, 1426, 1427, 1460], "ball": 1326, "ban": 1326, "banana": 1474, "band": 1452, "bandwidth": [1341, 1443, 1452, 1455, 1456, 1458, 1460, 1461, 1462], "bank": 1452, "banker": 1395, "bar": [85, 264, 285, 1278, 1318, 1339, 1421, 1436, 1445, 1466], "bare": 1460, "barrier": [139, 160, 169, 170, 172, 422, 1431, 1448, 1461], "barrier_arr": [172, 1452], "barrier_sem": [1448, 1458], "barrier_wait": [172, 1452], "bartlett": [609, 732, 733, 776], "base": [0, 104, 200, 216, 235, 246, 247, 296, 331, 349, 372, 373, 375, 380, 389, 403, 411, 412, 424, 430, 455, 463, 469, 476, 481, 482, 483, 501, 616, 620, 621, 627, 671, 672, 674, 697, 700, 708, 709, 726, 748, 756, 762, 771, 798, 803, 817, 818, 819, 820, 822, 827, 866, 877, 878, 890, 909, 921, 928, 938, 939, 979, 990, 1058, 1066, 1078, 1079, 1082, 1100, 1123, 1135, 1143, 1313, 1316, 1318, 1319, 1324, 1326, 1329, 1334, 1341, 1343, 1346, 1348, 1351, 1353, 1355, 1356, 1367, 1382, 1395, 1402, 1404, 1405, 1414, 1417, 1418, 1419, 1421, 1425, 1426, 1428, 1433, 1434, 1437, 1439, 1441, 1443, 1444, 1448, 1449, 1457, 1462, 1466, 1470, 1471, 1473, 1475], "base_dil": 447, "base_ev": 1360, "basearrai": 500, "bash": [1339, 1358, 1431], "basi": [235, 1140, 1149, 1313, 1413, 1418, 1427, 1430, 1435, 1437, 1440, 1442], "basic": [381, 457, 540, 600, 616, 1275, 1312, 1329, 1339, 1349, 1350, 1352, 1360, 1417, 1418, 1419, 1423, 1431, 1437, 1441, 1448, 1452, 1454, 1457, 1458, 1460, 1461, 1462, 1470, 1472, 1474], "bat": 1278, "batch": [33, 73, 74, 75, 195, 196, 202, 207, 212, 217, 218, 219, 222, 223, 236, 237, 262, 283, 291, 317, 339, 343, 344, 361, 395, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 415, 422, 481, 499, 506, 539, 642, 660, 749, 784, 788, 795, 801, 806, 812, 813, 814, 829, 830, 831, 920, 953, 956, 960, 980, 984, 985, 986, 987, 1012, 1014, 1024, 1030, 1040, 1041, 1043, 1066, 1068, 1069, 1086, 1087, 1090, 1106, 1203, 1304, 1313, 1315, 1321, 1326, 1331, 1341, 1346, 1349, 1351, 1354, 1355, 1368, 1373, 1395, 1402, 1409, 1411, 1413, 1415, 1416, 1417, 1421, 1425, 1430, 1431, 1437, 1438, 1439, 1444, 1449, 1456, 1458, 1468], "batch_": 1443, "batch_ax": 1360, "batch_axi": [518, 519, 520, 521, 522, 523, 529], "batch_convolve_v3": 1321, "batch_dim": [195, 1318, 1460], "batch_group_count": [343, 1326], "batch_partition_spec": 1410, "batch_shd": 1350, "batch_singl": 1434, "batch_siz": [415, 1431, 1434, 1435, 1442, 1443, 1445], "batchaxi": 1318, "batched_apply_matrix": 1444, "batched_f": 1318, "batched_kei": 1425, "batched_log_joint": 1445, "batched_pr": [1435, 1442], "batched_predict": [1435, 1442], "batched_r_t": 1313, "batched_s_t": 1313, "batched_s_tm1": 1313, "batched_test_beta": 1445, "batched_theta": 1313, "batched_x": 1444, "batchnorm": [1326, 1368, 1469], "batchtrac": [1315, 1318, 1360, 1416], "bayesian": [1314, 1325], "baz": [1278, 1318, 1421, 1466], "bazel": [1326, 1427], "bazel_opt": 1339, "bazelrc": 1339, "bb": [1354, 1432, 1438], "bc": [1326, 1354, 1356, 1432, 1438, 1475], "bcoo": [197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 232, 233, 234, 237, 238, 240], "bcsr": [220, 221, 222, 223], "bct": 1360, "bd": [1318, 1354, 1432, 1438], "bdim": 1318, "bdim_out": 1318, "bdims_in": 1318, "bdims_out": 1318, "beam": 1019, "bear": 1422, "becam": [1414, 1424, 1425, 1430], "becaus": [67, 83, 85, 114, 193, 378, 402, 479, 486, 492, 503, 504, 580, 610, 634, 650, 668, 669, 718, 720, 746, 758, 772, 800, 853, 855, 864, 913, 917, 923, 924, 971, 972, 973, 974, 975, 976, 981, 998, 1085, 1091, 1100, 1122, 1128, 1275, 1280, 1282, 1313, 1318, 1319, 1320, 1323, 1324, 1326, 1331, 1332, 1333, 1336, 1337, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1354, 1360, 1367, 1373, 1385, 1386, 1399, 1402, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1452, 1454, 1455, 1456, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1474], "becom": [327, 636, 641, 783, 1257, 1258, 1259, 1312, 1316, 1324, 1326, 1334, 1336, 1341, 1346, 1350, 1357, 1408, 1410, 1412, 1414, 1419, 1421, 1422, 1424, 1426, 1428, 1429, 1430, 1444, 1448, 1452, 1455, 1458, 1460, 1462, 1469], "been": [98, 335, 634, 951, 1010, 1093, 1101, 1104, 1105, 1262, 1325, 1326, 1329, 1339, 1342, 1343, 1349, 1350, 1355, 1369, 1386, 1392, 1400, 1402, 1410, 1411, 1413, 1414, 1417, 1418, 1420, 1422, 1424, 1425, 1434, 1435, 1436, 1447, 1448, 1455, 1456, 1458, 1462, 1463, 1466, 1471], "befor": [99, 119, 132, 153, 160, 174, 225, 226, 229, 230, 249, 262, 283, 343, 344, 345, 346, 347, 395, 398, 422, 433, 527, 529, 565, 578, 579, 636, 641, 656, 873, 874, 896, 913, 934, 946, 947, 972, 1106, 1316, 1317, 1318, 1319, 1326, 1328, 1333, 1339, 1340, 1341, 1343, 1346, 1350, 1354, 1356, 1357, 1358, 1371, 1373, 1382, 1386, 1402, 1410, 1411, 1412, 1414, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1429, 1430, 1431, 1434, 1436, 1438, 1441, 1443, 1444, 1447, 1448, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1468, 1475], "before_1": 873, "before_2": 873, "before_n": 873, "before_valu": 873, "beforehand": 1458, "began": [1418, 1426], "begin": [333, 343, 468, 505, 507, 514, 531, 541, 547, 548, 578, 717, 734, 874, 895, 919, 926, 1052, 1090, 1114, 1128, 1134, 1135, 1142, 1146, 1148, 1154, 1155, 1177, 1179, 1185, 1187, 1233, 1234, 1238, 1244, 1246, 1249, 1250, 1313, 1319, 1320, 1321, 1331, 1333, 1348, 1350, 1412, 1414, 1416, 1418, 1426, 1437, 1444, 1448, 1452, 1455, 1456, 1458, 1460, 1462, 1463, 1464, 1474], "begun": 1414, "behalf": 1412, "behav": [77, 80, 96, 493, 990, 1012, 1091, 1326, 1334, 1339, 1348, 1354, 1357, 1402, 1409, 1411, 1419, 1421, 1424, 1425, 1429, 1431, 1432, 1438, 1448, 1449, 1453, 1455, 1457, 1461], "behavior": [9, 67, 73, 83, 84, 92, 98, 101, 102, 113, 114, 127, 137, 160, 219, 262, 267, 283, 363, 381, 395, 397, 404, 424, 434, 457, 458, 459, 460, 461, 462, 464, 553, 591, 621, 683, 716, 758, 784, 790, 792, 794, 845, 846, 892, 909, 914, 923, 924, 944, 946, 947, 953, 965, 990, 1012, 1091, 1098, 1104, 1105, 1106, 1275, 1313, 1316, 1326, 1331, 1333, 1336, 1346, 1348, 1350, 1352, 1353, 1354, 1360, 1382, 1395, 1410, 1412, 1414, 1415, 1416, 1419, 1421, 1422, 1424, 1425, 1426, 1432, 1433, 1438, 1441, 1443, 1447, 1453, 1455, 1458, 1461, 1464, 1467, 1473, 1475], "behind": [18, 1318, 1326, 1409, 1410, 1419, 1420, 1426, 1429, 1430, 1440, 1443, 1452, 1458, 1468], "being": [75, 99, 182, 267, 473, 503, 504, 579, 587, 634, 664, 697, 726, 801, 882, 885, 934, 1003, 1004, 1005, 1047, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1275, 1279, 1281, 1283, 1284, 1306, 1307, 1308, 1309, 1310, 1313, 1318, 1320, 1323, 1325, 1326, 1328, 1333, 1339, 1342, 1346, 1349, 1350, 1354, 1356, 1357, 1358, 1360, 1392, 1399, 1412, 1414, 1415, 1417, 1418, 1419, 1422, 1424, 1427, 1428, 1432, 1433, 1434, 1437, 1438, 1440, 1441, 1443, 1444, 1448, 1449, 1452, 1455, 1458, 1461, 1463, 1464, 1466, 1469, 1473], "believ": [1343, 1419, 1421, 1427, 1448, 1457], "bell": 1419, "belong": [96, 133, 137, 1019, 1319, 1424, 1431], "below": [10, 67, 73, 76, 79, 235, 343, 344, 345, 399, 404, 409, 468, 492, 499, 621, 651, 654, 666, 719, 772, 801, 811, 860, 873, 919, 920, 937, 946, 947, 955, 956, 957, 958, 960, 961, 962, 990, 998, 1075, 1100, 1279, 1304, 1308, 1315, 1316, 1318, 1325, 1328, 1329, 1333, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1356, 1360, 1375, 1395, 1399, 1402, 1411, 1414, 1415, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1439, 1440, 1443, 1445, 1452, 1453, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1473, 1474, 1475], "benchmark": [68, 1349, 1352, 1413, 1419, 1429, 1444, 1460, 1462], "benefici": [113, 1414, 1415, 1418], "benefit": [1036, 1273, 1325, 1326, 1341, 1349, 1352, 1413, 1414, 1417, 1426, 1463], "benign": 98, "bernoulli": [1421, 1457, 1462], "bertseka": [1313, 1433], "besid": [1346, 1470], "bessel": [318, 319, 742, 1130, 1131, 1132, 1133, 1252, 1253, 1348], "bessel_jn": 1418, "best": [96, 506, 666, 1313, 1316, 1317, 1325, 1326, 1337, 1339, 1341, 1342, 1350, 1353, 1366, 1385, 1414, 1415, 1418, 1419, 1424, 1427, 1434, 1437, 1445, 1449, 1452, 1457, 1460, 1462, 1468], "beta": [320, 407, 776, 1111, 1112, 1163, 1164, 1181, 1182, 1204, 1205, 1206, 1326, 1445, 1455, 1463], "beta_1": 1367, "beta_2": 1367, "beta_init": 1368, "beta_loc": 1445, "beta_loc_grad": 1445, "beta_log_scal": 1445, "beta_log_scale_grad": 1445, "beta_sampl": 1445, "betabinom": 1326, "betainc": [1326, 1418], "betaln": [1110, 1111], "better": [132, 197, 199, 397, 784, 790, 792, 844, 1036, 1140, 1313, 1326, 1328, 1350, 1351, 1352, 1353, 1414, 1416, 1417, 1418, 1420, 1424, 1428, 1433, 1437, 1441, 1443, 1444, 1449, 1457, 1458, 1460, 1466], "between": [61, 76, 174, 209, 343, 344, 422, 423, 463, 547, 548, 574, 616, 621, 628, 641, 656, 665, 675, 697, 715, 716, 727, 800, 815, 827, 853, 855, 875, 877, 882, 885, 897, 916, 918, 921, 936, 937, 954, 965, 984, 990, 1058, 1063, 1098, 1099, 1101, 1102, 1103, 1106, 1123, 1313, 1315, 1316, 1318, 1323, 1326, 1331, 1336, 1339, 1340, 1341, 1349, 1350, 1352, 1353, 1354, 1358, 1367, 1373, 1395, 1396, 1402, 1408, 1412, 1415, 1416, 1417, 1419, 1421, 1426, 1429, 1430, 1431, 1432, 1437, 1438, 1440, 1441, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1466, 1469, 1471, 1473, 1475], "bewar": 1431, "beyond": [600, 628, 1334, 1337, 1338, 1341, 1414, 1415, 1420, 1425, 1426, 1444, 1455], "bf": [1354, 1432, 1438, 1473], "bf16": [1426, 1460], "bf16_bf16_bf16": [1328, 1395], "bf16_bf16_f32": [1328, 1395], "bf16_bf16_f32_x3": [1328, 1395], "bf16_bf16_f32_x6": [1328, 1395], "bf16_bf16_f32_x9": [1328, 1395], "bfbfbfbfbfbfbfbfbfbfbff4f4f8c8c16bfbfc8": 1473, "bfc": 1352, "bff2f4f8c8c16f": 1473, "bff2f4f8c8c16u8f": 1473, "bfg": [1092, 1093, 1326, 1385], "bfloat16": [92, 106, 259, 539, 568, 763, 773, 816, 834, 909, 1123, 1326, 1328, 1337, 1353, 1395, 1415, 1426, 1452, 1457, 1462, 1473], "bg": [1354, 1438], "bh": [1354, 1438], "bi": 1104, "bia": [506, 641, 697, 1354, 1438, 1443, 1468, 1469], "bias": [1019, 1022, 1435, 1442, 1443, 1474], "bias_kei": 1469, "bicgstab": 1418, "bicub": [291, 292], "bidirect": [1443, 1458], "bidirection": 1443, "big": [872, 977, 1318, 1328, 1352, 1353, 1413, 1415, 1418, 1424, 1431, 1449, 1452, 1455, 1456, 1460, 1466, 1475], "bigcrush": 1402, "bigger": [1417, 1460], "biggest": [1360, 1452], "bilinear": [291, 292], "billion": [1313, 1437], "bin": [600, 657, 735, 736, 737, 738, 780, 910, 1101, 1340, 1358], "bin_edg": [735, 738], "bin_width": 738, "binari": [47, 193, 311, 602, 697, 893, 918, 919, 920, 965, 977, 1006, 1326, 1331, 1339, 1353, 1356, 1383, 1385, 1417, 1426, 1432, 1440, 1443, 1473], "binary_r": 1439, "binary_search": 765, "bincount": 735, "bind": [99, 501, 1318, 1326, 1343, 1350, 1360, 1411, 1416, 1419, 1422, 1427, 1430, 1432, 1436], "bind1": 1318, "bind_al": 1464, "bind_cond": 1318, "bind_with_trac": 1430, "binder": [1318, 1319, 1411], "binom": 1017, "binomi": [1081, 1163, 1164, 1165, 1166, 1223, 1224, 1313, 1437], "binop_abstract_ev": 1318, "binop_batching_rul": 1318, "bint": 1425, "bipartit": 1318, "bisect": 1358, "bit": [81, 153, 321, 334, 348, 420, 429, 445, 446, 452, 578, 602, 697, 717, 759, 780, 789, 791, 872, 874, 893, 909, 910, 927, 977, 1013, 1015, 1019, 1022, 1028, 1032, 1033, 1034, 1057, 1122, 1313, 1318, 1319, 1322, 1323, 1326, 1328, 1333, 1339, 1349, 1350, 1358, 1395, 1399, 1402, 1414, 1416, 1417, 1419, 1421, 1425, 1426, 1428, 1429, 1431, 1433, 1435, 1437, 1439, 1440, 1442, 1443, 1444, 1448, 1452, 1456, 1457, 1460, 1466, 1468, 1469, 1473], "bit_width": [277, 281, 282], "bitcast": 321, "bitcast_convert": 321, "bitcast_convert_typ": [61, 348], "bitord": [872, 977, 1318], "bitwidth": [61, 1453], "bitwis": [61, 322, 323, 324, 325, 440, 443, 448, 601, 606, 608, 759, 824, 1331], "bitwise_and": [323, 324, 325, 440, 1326], "bitwise_count": [429, 1326], "bitwise_invert": [759, 824], "bitwise_left_shift": 780, "bitwise_not": [322, 324, 325], "bitwise_or": [322, 323, 325, 443, 1326], "bitwise_right_shift": 780, "bitwise_xor": [322, 323, 324, 448, 1326], "bj\u00f6rck": 1088, "bk": 1460, "bla": 667, "black": [1350, 1439, 1458], "blackjax": [1325, 1355], "blackman": [599, 732, 733, 776], "blackwel": [158, 540], "ble1990": 311, "bleed": 1356, "blelloch": 311, "blk": [1455, 1462], "blk_idx": 1462, "blk_idxs_i": 1462, "blk_idxs_k": 1462, "blk_k": 1462, "blk_m": 1462, "blk_n": 1462, "blob": [243, 244, 1326, 1343], "block": [18, 96, 140, 166, 172, 235, 290, 493, 539, 540, 777, 1009, 1011, 1065, 1085, 1088, 1312, 1317, 1318, 1326, 1334, 1336, 1341, 1360, 1424, 1444, 1447, 1448, 1449, 1452, 1453, 1454, 1455, 1457, 1459, 1464, 1468], "block_data": 1462, "block_dimens": 207, "block_dynamic_slic": 1462, "block_host_until_readi": 1326, "block_idx": [1453, 1462], "block_index": 1462, "block_indic": [1449, 1453], "block_k": 1449, "block_m": 1449, "block_mask": 1462, "block_mask_ref": 1462, "block_matmul": 1460, "block_n": 1449, "block_result": 1443, "block_shap": [140, 159, 182, 1326, 1447, 1449, 1453, 1455, 1458, 1462], "block_siz": [540, 1453, 1455, 1458], "block_spec": [1455, 1461], "block_until_readi": [1004, 1005, 1313, 1317, 1323, 1326, 1336, 1340, 1412, 1429, 1434, 1444, 1458, 1460, 1462, 1464], "blockdim": [140, 159], "blocks_kei": 1462, "blockscaleconfig": 539, "blocksiz": 1088, "blockspec": [141, 174, 182, 1326, 1447, 1448, 1449, 1452, 1454, 1456, 1458, 1460, 1461, 1462], "blockspectre": [141, 182], "blow": 235, "blue": [1341, 1431, 1462], "bm": [1455, 1460, 1462], "bmatrix": [1313, 1437, 1456, 1460], "bmk": 540, "bmn": 540, "bmod": 449, "bn": [1455, 1460, 1462], "bnk": 540, "bnt": 506, "board": 1431, "bob": 1474, "bodi": [98, 160, 174, 182, 1318, 1319, 1350, 1353, 1354, 1411, 1412, 1415, 1417, 1419, 1429, 1432, 1438, 1440, 1443, 1448, 1449, 1452, 1456, 1457, 1458, 1461], "body_fun": [378, 486, 1313, 1331, 1348, 1411, 1433], "body_jaxpr": 1411, "body_nconst": 1411, "boil": [1425, 1460, 1468], "boilerpl": [1350, 1419, 1430, 1455], "bold": [1354, 1438], "book": [1058, 1320, 1437], "bookkeep": [1318, 1411, 1412, 1423, 1435, 1442], "bool": [3, 4, 5, 6, 8, 9, 10, 13, 29, 30, 31, 34, 35, 36, 40, 41, 51, 53, 54, 56, 60, 61, 67, 78, 81, 82, 83, 85, 87, 96, 98, 101, 102, 104, 106, 108, 115, 119, 127, 128, 130, 131, 132, 133, 135, 138, 154, 158, 160, 161, 164, 173, 177, 182, 194, 195, 196, 197, 206, 208, 225, 226, 229, 230, 245, 253, 259, 262, 268, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 305, 306, 311, 318, 319, 320, 346, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 369, 370, 371, 378, 381, 384, 385, 387, 393, 395, 397, 398, 403, 404, 405, 406, 407, 408, 409, 428, 456, 457, 458, 459, 460, 461, 462, 473, 474, 486, 489, 491, 493, 506, 508, 534, 559, 560, 561, 562, 563, 564, 576, 577, 578, 579, 582, 583, 584, 585, 587, 588, 591, 598, 611, 616, 636, 640, 641, 646, 647, 650, 657, 660, 664, 666, 667, 668, 669, 670, 671, 678, 679, 681, 683, 696, 716, 723, 724, 727, 730, 731, 735, 736, 738, 746, 747, 749, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 781, 782, 783, 784, 790, 792, 793, 794, 796, 800, 801, 803, 804, 806, 807, 810, 811, 814, 815, 817, 819, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 834, 835, 836, 838, 844, 845, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 865, 869, 870, 871, 874, 875, 878, 882, 883, 885, 892, 894, 895, 896, 897, 907, 914, 917, 918, 923, 924, 927, 934, 935, 936, 942, 944, 946, 947, 950, 954, 972, 973, 975, 982, 983, 984, 985, 986, 991, 992, 994, 995, 996, 997, 999, 1009, 1012, 1019, 1022, 1040, 1045, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1098, 1101, 1102, 1103, 1122, 1138, 1140, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1278, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1298, 1300, 1302, 1303, 1318, 1326, 1328, 1331, 1342, 1349, 1371, 1382, 1386, 1395, 1404, 1405, 1411, 1426, 1429, 1430, 1432, 1443, 1444, 1458, 1460, 1470], "bool_": [61, 1318, 1331, 1426, 1457, 1473], "boolean": [10, 61, 67, 74, 78, 81, 101, 102, 120, 131, 155, 173, 225, 226, 229, 230, 237, 262, 283, 296, 311, 322, 323, 324, 325, 339, 362, 364, 365, 367, 368, 378, 381, 382, 383, 387, 391, 392, 414, 419, 433, 434, 440, 443, 448, 456, 463, 464, 473, 491, 501, 506, 550, 559, 560, 563, 564, 579, 583, 584, 588, 601, 606, 608, 628, 650, 670, 675, 677, 716, 730, 731, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 781, 782, 824, 832, 834, 849, 850, 852, 854, 856, 857, 858, 860, 865, 877, 878, 883, 895, 896, 927, 934, 936, 942, 946, 983, 990, 1009, 1011, 1015, 1022, 1066, 1067, 1256, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1276, 1318, 1326, 1331, 1334, 1342, 1343, 1346, 1354, 1410, 1411, 1413, 1424, 1429, 1432, 1438, 1443, 1444, 1457, 1462, 1470, 1473, 1475], "booleannumer": 486, "bootstrap": 99, "borderlin": 1418, "bore": 1434, "borrow": [1373, 1435, 1442, 1449], "bot": 1329, "both": [0, 73, 76, 78, 120, 127, 143, 172, 203, 220, 251, 262, 283, 296, 339, 439, 456, 463, 493, 512, 513, 543, 551, 565, 574, 598, 637, 675, 712, 713, 758, 772, 784, 790, 792, 800, 833, 839, 873, 898, 915, 942, 957, 959, 961, 983, 998, 1060, 1062, 1070, 1073, 1084, 1093, 1102, 1104, 1105, 1106, 1139, 1140, 1302, 1312, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1333, 1334, 1341, 1342, 1343, 1348, 1350, 1353, 1354, 1360, 1382, 1395, 1402, 1411, 1412, 1414, 1415, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1429, 1430, 1432, 1433, 1436, 1438, 1440, 1441, 1443, 1447, 1448, 1449, 1452, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1468], "bottleneck": [1421, 1455, 1458], "bottom": [578, 874, 1318, 1319, 1333, 1350, 1412, 1417, 1452, 1458, 1464], "bought": 1414, "bounc": [1326, 1415], "bound": [10, 121, 362, 363, 364, 365, 366, 367, 378, 381, 457, 458, 459, 460, 461, 462, 481, 486, 517, 526, 527, 528, 621, 758, 780, 860, 895, 896, 902, 924, 946, 947, 978, 994, 995, 996, 997, 1053, 1106, 1275, 1313, 1316, 1318, 1326, 1328, 1333, 1334, 1354, 1395, 1425, 1426, 1433, 1438, 1447, 1449, 1452, 1453, 1455, 1458, 1460, 1462], "bound_subjaxpr": 1326, "boundari": [69, 162, 163, 292, 394, 735, 736, 738, 772, 937, 1091, 1095, 1097, 1101, 1102, 1313, 1324, 1342, 1367, 1394, 1395, 1412, 1421, 1422, 1433, 1439, 1465], "boundedslic": 140, "bounds_error": 1064, "box": [1318, 1319, 1326, 1339, 1348, 1350, 1354, 1438, 1458, 1474], "bp": 1099, "bracket": 1411, "brainstorm": 1448, "branch": [339, 424, 463, 481, 569, 570, 571, 572, 573, 575, 1326, 1329, 1331, 1339, 1343, 1349, 1350, 1411, 1417, 1420, 1426, 1429, 1434, 1458], "branches_platform": 1350, "brax": 1355, "break": [1012, 1316, 1318, 1326, 1348, 1387, 1412, 1414, 1416, 1417, 1420, 1424, 1426, 1436, 1449, 1457], "breakag": [1326, 1424, 1425], "breakpoint": [1099, 1326, 1335, 1362, 1419], "breakpoint_if_nonfinit": [1333, 1336], "bridg": 1396, "brief": [378, 456, 486, 1326, 1328, 1468, 1475], "briefli": [1430, 1455], "bring": [1441, 1469], "brittl": 1414, "broad": [1414, 1419], "broadcast": [135, 301, 303, 313, 322, 324, 325, 327, 328, 336, 359, 368, 378, 382, 383, 392, 414, 416, 417, 418, 419, 421, 430, 449, 456, 465, 466, 467, 480, 486, 506, 534, 558, 559, 564, 574, 584, 598, 601, 606, 608, 612, 613, 614, 621, 622, 635, 642, 660, 670, 708, 712, 713, 714, 719, 723, 724, 725, 730, 731, 734, 735, 741, 749, 778, 779, 780, 781, 782, 786, 795, 813, 822, 823, 825, 826, 829, 831, 832, 833, 834, 837, 838, 839, 843, 849, 850, 852, 854, 856, 857, 858, 863, 865, 880, 886, 890, 892, 905, 910, 921, 942, 943, 944, 947, 951, 965, 983, 985, 986, 987, 990, 993, 998, 1015, 1016, 1017, 1019, 1021, 1024, 1025, 1027, 1029, 1031, 1036, 1038, 1040, 1041, 1044, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1090, 1138, 1286, 1304, 1318, 1326, 1328, 1346, 1348, 1350, 1382, 1417, 1424, 1445, 1449, 1452, 1467], "broadcast_abstract_ev": 1318, "broadcast_al": [1012, 1348, 1350], "broadcast_arrai": [613, 614, 621, 1326], "broadcast_dimens": [201, 327, 1353, 1411, 1432, 1436], "broadcast_impl": 1318, "broadcast_in_dim": [201, 326, 1318, 1326, 1353, 1411, 1432, 1436], "broadcast_in_dim_p": 1385, "broadcast_p": 1318, "broadcast_shap": [368, 382, 383, 392, 414, 419, 612, 614, 621, 635, 1012, 1041, 1348], "broadcast_to": [612, 613, 951, 1318, 1326], "broadcast_transl": 1318, "broadcasted_iota": 1353, "broadcastindim": 327, "broader": [1329, 1455], "broadli": [1312, 1349, 1414, 1418, 1426, 1474], "broke": 1326, "broken": [1326, 1343, 1349, 1456], "browser": [1340, 1452, 1464], "bruno": 1374, "brute": 1358, "bskh": 506, "bt": 1336, "bte": 1415, "bthd": 1415, "btnh": 506, "btzd": 1415, "bubbl": [1455, 1460, 1462], "bucket": [994, 995, 996, 997, 1326, 1463], "bucket_s": [994, 995, 996, 997], "budget": 1441, "buf": [257, 717, 1318], "buffer": [95, 96, 101, 102, 140, 159, 182, 262, 283, 296, 582, 588, 634, 716, 717, 722, 998, 1006, 1314, 1318, 1326, 1340, 1349, 1350, 1353, 1382, 1399, 1410, 1414, 1415, 1418, 1443, 1447, 1448, 1452, 1456, 1457, 1461, 1471, 1475], "buffer_from_pyv": 1318, "bufferdonationtestcas": 1326, "bug": [999, 1091, 1319, 1328, 1358, 1413, 1414, 1418, 1420, 1422, 1423, 1425, 1429, 1440, 1443, 1445, 1448, 1455, 1457, 1458, 1467], "bugfix": 1326, "buggi": [1423, 1424, 1458], "build": [117, 118, 122, 123, 124, 125, 126, 259, 263, 284, 397, 402, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 746, 917, 1106, 1277, 1312, 1313, 1319, 1320, 1326, 1329, 1330, 1347, 1358, 1366, 1373, 1376, 1411, 1416, 1418, 1424, 1425, 1427, 1431, 1435, 1437, 1439, 1442, 1456, 1461], "build_cuda_with_clang": 1339, "build_jaxlib": 1339, "build_jaxpr": 1319, "build_tre": 1326, "builder": [1318, 1421, 1449], "built": [440, 441, 442, 443, 445, 446, 448, 574, 582, 588, 664, 717, 719, 828, 893, 1106, 1274, 1313, 1315, 1318, 1319, 1325, 1326, 1329, 1333, 1335, 1339, 1342, 1343, 1346, 1350, 1355, 1356, 1358, 1386, 1394, 1399, 1402, 1414, 1415, 1416, 1417, 1418, 1426, 1427, 1435, 1437, 1441, 1442, 1443, 1444, 1449, 1452, 1458, 1465, 1474], "builtin": [415, 1279, 1318, 1323, 1336, 1409], "builtin_jacfwd": [1313, 1437], "builtin_jacrev": [1313, 1437], "bulk": [1415, 1455, 1457], "bullet": 1415, "bump": [1326, 1343, 1420, 1427], "bunch": 1437, "bundl": [1326, 1436], "burden": [1415, 1418, 1421], "busi": [1319, 1452, 1455], "button": [1329, 1464], "bw_method": 1196, "bwd": [81, 1334, 1354, 1423, 1438], "bwd_edge_data": 1353, "bx": [1233, 1234], "bypass": [99, 1339, 1343], "byte": [32, 37, 61, 187, 244, 246, 247, 491, 616, 664, 717, 816, 1006, 1273, 1305, 1326, 1343, 1352, 1386, 1452, 1453, 1455, 1458, 1460, 1463, 1475], "bytearrai": [243, 244, 246, 247, 1343, 1386], "bytes_in_us": 1326, "bytesio": 816, "bytewidth": 1452, "c": [26, 42, 45, 128, 225, 229, 262, 283, 290, 311, 343, 344, 345, 348, 407, 456, 501, 506, 539, 610, 615, 621, 628, 642, 664, 883, 898, 901, 902, 907, 1052, 1056, 1065, 1066, 1067, 1072, 1087, 1090, 1123, 1254, 1255, 1273, 1279, 1304, 1313, 1315, 1318, 1326, 1328, 1336, 1339, 1343, 1346, 1349, 1354, 1356, 1360, 1410, 1411, 1415, 1419, 1424, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1436, 1437, 1438, 1439, 1442, 1443, 1449, 1464, 1469, 1470, 1473, 1474], "c0": 1458, "c1": 1443, "c128": 1426, "c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16": 1473, "c2": 1443, "c36e1f7c1ad4782060cbc8e8c596d85dfb83986f": 1326, "c64": 1426, "c8": 1473, "c8c8c8c16c8c16c": 1473, "c8c8c8c8c8c8c8c8c8c8c8c8c8c16c8c16c8c8c8": 1473, "c_": [636, 641, 898, 1090], "c_0": 1350, "c_and_low": 1067, "c_api": 1350, "c_block": [1415, 1443], "c_k": [633, 637], "c_matrix": 407, "c_partialsum": [1415, 1443], "c_ref": 1443, "cach": [18, 65, 66, 67, 68, 84, 296, 697, 1279, 1313, 1314, 1318, 1326, 1331, 1339, 1342, 1346, 1349, 1350, 1353, 1371, 1382, 1432, 1434, 1437, 1449, 1455, 1461, 1465], "cache_kei": 1463, "cache_miss": 1360, "cache_modifi": 155, "cached_primitive_low": 1360, "calc": 1349, "calc_q": 1075, "calcul": [346, 492, 555, 570, 572, 575, 617, 639, 656, 659, 671, 672, 674, 697, 708, 711, 714, 729, 742, 790, 792, 798, 817, 818, 819, 820, 822, 841, 873, 890, 904, 905, 930, 932, 938, 939, 949, 952, 963, 994, 995, 996, 997, 1071, 1075, 1093, 1104, 1105, 1106, 1135, 1257, 1258, 1259, 1313, 1320, 1325, 1326, 1353, 1360, 1373, 1404, 1419, 1424, 1433, 1437, 1455, 1460, 1462, 1474], "calculu": [501, 1320, 1437], "call": [64, 67, 69, 71, 75, 76, 81, 82, 83, 84, 85, 88, 89, 91, 96, 99, 119, 120, 121, 127, 131, 160, 174, 178, 182, 184, 244, 248, 249, 262, 263, 264, 265, 268, 283, 284, 285, 286, 296, 328, 357, 361, 378, 381, 397, 422, 457, 486, 493, 499, 500, 540, 558, 568, 578, 601, 606, 608, 613, 634, 650, 664, 666, 667, 697, 699, 828, 843, 864, 874, 880, 886, 919, 923, 940, 943, 965, 971, 972, 973, 974, 975, 976, 987, 998, 1009, 1010, 1012, 1033, 1092, 1098, 1104, 1105, 1106, 1135, 1139, 1140, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1280, 1282, 1305, 1312, 1313, 1315, 1318, 1319, 1323, 1324, 1325, 1326, 1327, 1331, 1332, 1333, 1334, 1336, 1339, 1340, 1341, 1342, 1344, 1346, 1348, 1349, 1354, 1360, 1371, 1375, 1382, 1386, 1395, 1399, 1402, 1405, 1408, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1456, 1458, 1460, 1461, 1462, 1464, 1465, 1466, 1469, 1470, 1471, 1473, 1474], "call_bind": 1419, "call_func": 1275, "call_jaxpr": 1326, "call_primit": 1326, "call_target_nam": [263, 284], "call_tf": 1326, "call_tf_graph": 1343, "callabl": [67, 69, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 114, 121, 127, 128, 131, 140, 159, 174, 182, 184, 194, 234, 235, 240, 244, 262, 267, 268, 272, 276, 283, 288, 289, 290, 293, 294, 295, 296, 297, 311, 337, 339, 356, 357, 405, 424, 439, 447, 456, 459, 481, 486, 492, 493, 498, 501, 503, 566, 567, 666, 719, 721, 729, 828, 873, 877, 965, 998, 1005, 1012, 1064, 1074, 1093, 1098, 1102, 1103, 1196, 1256, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1280, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1302, 1303, 1313, 1315, 1318, 1326, 1331, 1336, 1343, 1354, 1367, 1373, 1382, 1386, 1415, 1419, 1423, 1433, 1438, 1443, 1449, 1455, 1458, 1460], "callback": [84, 85, 131, 498, 1012, 1318, 1326, 1342, 1349, 1350, 1410, 1463], "callback_transform": 1326, "calle": [1340, 1343], "caller": [18, 96, 102, 135, 296, 1013, 1318, 1336, 1415, 1416, 1417, 1421, 1425, 1443], "callgraph": 1340, "calling_convention_vers": [1326, 1343, 1386], "calling_mesh": 1343, "callop": 1318, "callsit": 1360, "calver": 1420, "camel": 1414, "camp": 1337, "can": [10, 29, 65, 66, 67, 76, 78, 82, 83, 84, 92, 96, 97, 98, 106, 113, 114, 119, 120, 121, 127, 128, 132, 133, 136, 137, 143, 155, 158, 160, 173, 182, 193, 194, 219, 244, 246, 247, 248, 249, 250, 251, 262, 263, 283, 284, 296, 337, 339, 356, 360, 361, 378, 381, 397, 404, 415, 422, 424, 434, 456, 464, 486, 493, 496, 498, 499, 501, 502, 503, 504, 506, 529, 539, 559, 564, 566, 568, 574, 595, 596, 597, 600, 612, 613, 614, 616, 621, 628, 636, 640, 641, 642, 650, 651, 654, 655, 664, 673, 675, 678, 679, 681, 683, 697, 699, 746, 765, 774, 779, 783, 793, 795, 799, 800, 807, 811, 817, 829, 830, 832, 834, 837, 838, 842, 849, 850, 852, 854, 856, 857, 858, 860, 861, 864, 868, 877, 887, 892, 894, 895, 902, 907, 909, 917, 918, 919, 920, 923, 925, 933, 942, 944, 946, 947, 951, 952, 953, 971, 972, 978, 981, 983, 987, 994, 995, 996, 997, 998, 1003, 1005, 1006, 1008, 1009, 1011, 1012, 1029, 1061, 1062, 1071, 1073, 1075, 1077, 1078, 1082, 1084, 1085, 1086, 1087, 1089, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1140, 1149, 1256, 1268, 1273, 1275, 1278, 1279, 1280, 1282, 1284, 1304, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1328, 1329, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1360, 1367, 1371, 1373, 1374, 1375, 1379, 1382, 1385, 1386, 1394, 1395, 1399, 1402, 1404, 1405, 1408, 1409, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1425, 1426, 1428, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475], "cancel": [235, 1313, 1417, 1433], "candid": [1356, 1418, 1426, 1460], "cannon": 1415, "cannot": [76, 79, 81, 101, 102, 113, 114, 120, 194, 212, 251, 262, 283, 305, 306, 331, 349, 372, 373, 375, 411, 412, 455, 469, 476, 482, 483, 492, 584, 650, 668, 669, 716, 880, 886, 940, 1122, 1279, 1280, 1313, 1326, 1331, 1334, 1336, 1341, 1342, 1343, 1346, 1348, 1349, 1353, 1356, 1382, 1399, 1408, 1414, 1418, 1422, 1424, 1426, 1427, 1430, 1432, 1433, 1444, 1448, 1449, 1452, 1455, 1457, 1458, 1461, 1464, 1470], "canon": [76, 104, 342, 1313, 1417, 1419, 1433, 1468], "canonic": [909, 1326, 1465], "canonical_name_cach": 1360, "canonicalize_shap": [1326, 1331, 1430], "canonicalize_valu": 1430, "capabl": [1325, 1326, 1347, 1348, 1350, 1415, 1419, 1452, 1457, 1460, 1475], "capac": [1441, 1452, 1455, 1458], "capacity_sem": 1458, "capic": 1455, "capsul": [102, 1326, 1350], "captur": [69, 1006, 1009, 1011, 1326, 1333, 1336, 1340, 1360, 1411, 1420, 1429, 1432, 1443, 1463, 1475], "care": [499, 718, 720, 990, 1313, 1319, 1323, 1336, 1341, 1343, 1346, 1349, 1412, 1431, 1437, 1455, 1456, 1457, 1460, 1464, 1465, 1469, 1474], "carefulli": [1313, 1342, 1354, 1418, 1433, 1438, 1457, 1462, 1469], "carnegi": 311, "carri": [69, 113, 174, 378, 456, 486, 1013, 1313, 1315, 1318, 1319, 1353, 1402, 1405, 1411, 1414, 1415, 1419, 1425, 1426, 1432, 1433, 1440, 1443, 1448, 1457, 1466, 1470, 1473], "cartesian": [574, 836], "carv": [1455, 1456], "case": [9, 67, 75, 77, 80, 84, 98, 99, 113, 197, 199, 219, 235, 262, 265, 283, 286, 296, 305, 306, 333, 339, 343, 344, 356, 363, 424, 435, 453, 456, 458, 459, 460, 461, 462, 464, 468, 499, 500, 505, 506, 507, 514, 531, 540, 541, 547, 548, 574, 580, 591, 595, 596, 597, 600, 621, 634, 636, 641, 650, 660, 675, 719, 734, 750, 773, 774, 793, 795, 798, 801, 812, 816, 829, 845, 846, 864, 877, 878, 913, 920, 926, 946, 947, 965, 977, 990, 998, 1022, 1072, 1074, 1077, 1082, 1084, 1085, 1090, 1114, 1128, 1129, 1134, 1135, 1146, 1149, 1154, 1155, 1177, 1179, 1185, 1187, 1233, 1234, 1244, 1246, 1249, 1250, 1256, 1276, 1278, 1279, 1303, 1313, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1325, 1326, 1328, 1329, 1332, 1333, 1334, 1336, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1357, 1360, 1373, 1382, 1395, 1410, 1411, 1412, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1439, 1440, 1443, 1444, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1464, 1465, 1468, 1469, 1470, 1473, 1474, 1475], "cases_from_list": 1326, "cast": [9, 175, 321, 348, 379, 430, 553, 591, 616, 665, 717, 759, 772, 824, 893, 936, 1319, 1326, 1342, 1350, 1409, 1410, 1422, 1426, 1432, 1443, 1457, 1460, 1470, 1473], "cat": 1431, "catastroph": 235, "catch": [114, 1316, 1329, 1334, 1335, 1339, 1349, 1414, 1419, 1424, 1425, 1432, 1458], "categor": 1326, "categori": [121, 763, 1414, 1422, 1424, 1425, 1457, 1473], "cauchi": [1254, 1255, 1313, 1437], "caught": [1328, 1432, 1443, 1445], "caus": [65, 66, 127, 697, 919, 1003, 1004, 1005, 1091, 1326, 1328, 1331, 1341, 1342, 1349, 1350, 1358, 1360, 1409, 1419, 1424, 1429, 1432, 1441, 1452, 1457, 1458, 1466], "causal": [506, 1462], "caution": 1352, "caveat": [73, 235, 1315, 1336, 1350, 1356, 1402, 1434, 1448, 1458], "cb": 498, "cb48f42": 1326, "cb732a921f0c4184995cbed82394931011d12bd4": 1326, "cbid": 1464, "cbrt": [455, 476], "cc": [1349, 1353, 1463, 1464, 1475], "cclass": 615, "ccm": 235, "cct": 1360, "cd": [1329, 1339, 1358], "cdf": [1135, 1143, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1205, 1206, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1236, 1237, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251], "cdll": [264, 285, 1350], "cdot": [510, 512, 513, 535, 543, 551, 1082, 1129, 1313, 1374, 1437, 1460], "cede": 1419, "ceil": [377, 454, 698, 710, 916, 964, 1072, 1326], "cell": [1313, 1318, 1331, 1332, 1339, 1350, 1360, 1430, 1437, 1470, 1473], "center": [292, 633, 637, 682, 1025, 1094, 1095, 1096, 1097, 1100, 1326, 1368, 1426, 1448, 1452, 1462, 1475], "central": [1351, 1418, 1443], "central1": 1431, "centric": 1452, "centroid": [1221, 1222, 1244, 1246], "ceph": 1123, "certain": [78, 81, 1326, 1329, 1333, 1341, 1346, 1349, 1354, 1360, 1412, 1417, 1420, 1432, 1438, 1440, 1456, 1457, 1458, 1465, 1470, 1474], "certainli": [1349, 1449, 1457], "cfac": [1066, 1067], "cg": [1104, 1326, 1418], "chain": [666, 1318, 1320, 1354, 1438], "chain_compos": [1354, 1438], "challeng": [1325, 1341, 1412, 1415, 1416, 1421, 1426, 1448, 1469], "chanc": [1343, 1452, 1453, 1458], "chang": [61, 67, 81, 83, 84, 94, 97, 136, 194, 198, 235, 244, 296, 337, 379, 395, 458, 459, 460, 461, 462, 496, 616, 635, 772, 893, 953, 998, 1001, 1002, 1047, 1091, 1312, 1316, 1319, 1321, 1325, 1328, 1331, 1336, 1339, 1340, 1343, 1346, 1348, 1350, 1353, 1354, 1357, 1375, 1379, 1382, 1385, 1387, 1395, 1412, 1414, 1416, 1417, 1420, 1422, 1425, 1426, 1428, 1429, 1432, 1438, 1444, 1445, 1447, 1449, 1452, 1453, 1454, 1455, 1456, 1458, 1462, 1463, 1465, 1475], "changed_block": 1462, "changelog": [1316, 1326, 1387, 1416, 1454], "channel": [291, 344, 345, 346, 1342, 1439], "channel_id": 1350, "channel_iter": 1360, "chao": 1466, "chapter": 1346, "charact": [343, 344, 867, 1326], "character": [1313, 1433], "characterist": [1349, 1420, 1457], "cheap": [1421, 1427, 1457, 1464], "check": [0, 10, 65, 66, 88, 89, 99, 110, 120, 121, 194, 244, 245, 356, 357, 381, 457, 458, 459, 460, 461, 462, 500, 560, 583, 584, 760, 761, 762, 765, 770, 771, 772, 774, 793, 804, 860, 1023, 1066, 1067, 1077, 1079, 1080, 1083, 1089, 1256, 1257, 1258, 1259, 1276, 1298, 1313, 1318, 1319, 1322, 1326, 1331, 1341, 1342, 1343, 1346, 1350, 1353, 1354, 1355, 1356, 1358, 1360, 1371, 1386, 1395, 1415, 1416, 1417, 1418, 1425, 1427, 1429, 1431, 1432, 1433, 1435, 1440, 1442, 1443, 1444, 1447, 1455, 1462, 1464, 1468, 1474], "check_bool_convers": 1331, "check_clos": 1326, "check_eq": 1326, "check_eqn": 1326, "check_eval_arg": 1430, "check_finit": [1058, 1066, 1067, 1068, 1069, 1070, 1075, 1077, 1078, 1079, 1080, 1083, 1084, 1086, 1087, 1089], "check_grad": [1320, 1326, 1437], "check_in_auto_context": 1440, "check_jaxpr": 1326, "check_rep": 194, "check_same_dtyp": 1430, "check_shmap": 1443, "check_toposort": 1318, "check_tracer_leak": [1326, 1429], "check_typ": 1326, "check_user_dtype_support": 1331, "check_valid_jaxtyp": 1326, "check_vma": [1256, 1328, 1458, 1463], "check_vmap": 1443, "checked_f": [119, 120, 1333, 1334], "checker": [1273, 1326, 1335, 1342, 1375, 1414, 1432], "checkifi": [1328, 1369, 1447, 1449, 1462], "checkify_of_jit": 1334, "checking_leak": 1342, "checkout": [1329, 1339, 1358], "checkpoint": [99, 1313, 1314, 1326, 1341, 1428, 1437], "checkpoint_dot": [1354, 1413, 1438], "checkpoint_dots_with_no_batch_dim": [1354, 1438], "checkpoint_nam": [1354, 1438, 1441], "checkpoint_names_saved_offloaded_recomput": 1354, "checkpoint_offload_dot_with_no_batch_dim": 1354, "checkpoint_polici": [67, 1354, 1413, 1438, 1441], "cherri": 1437, "chex": 1355, "chi": [1175, 1176, 1177, 1178, 1179, 1180], "chi2": 1326, "child": [1282, 1299, 1426], "child_count": 1318, "child_tre": 1318, "child_treedef": 1318, "childless_nod": 1318, "children": [249, 1280, 1281, 1282, 1283, 1297, 1318, 1332, 1349, 1465, 1474], "children_flat": 1318, "children_it": 1318, "chip": [1326, 1351, 1410, 1431, 1457, 1458, 1460, 1461, 1462, 1464], "chisquar": 1326, "chlo": [299, 300, 309, 310, 312, 314, 350, 421, 470, 1343], "cho_factor": [1067, 1068], "cho_solv": [1066, 1068, 1086], "choic": [11, 99, 424, 499, 621, 1312, 1317, 1326, 1331, 1352, 1354, 1414, 1421, 1422, 1426, 1427, 1432, 1438, 1440, 1464], "choice_1": 621, "choice_2": 621, "choice_3": 621, "choicelist": 921, "choleski": [396, 1041, 1066, 1067, 1086, 1313, 1326, 1437], "choos": [99, 235, 539, 574, 800, 877, 921, 1163, 1164, 1165, 1166, 1223, 1224, 1320, 1326, 1332, 1339, 1341, 1346, 1354, 1382, 1414, 1422, 1431, 1432, 1437, 1438, 1439, 1443, 1448, 1468], "chose": [1318, 1415, 1426, 1434, 1440], "chosen": [84, 99, 404, 464, 783, 798, 1083, 1140, 1149, 1257, 1258, 1259, 1316, 1319, 1373, 1418, 1426, 1475], "chronologi": 1343, "chunk": [140, 182, 303, 304, 475, 586, 937, 1341, 1349, 1352, 1443, 1452, 1454, 1456, 1457, 1460], "churn": 1316, "chw": 345, "ci": [1316, 1326, 1329, 1339, 1414, 1427], "cint": 1326, "circ": [1313, 1374, 1437], "circl": [574, 1318], "circuit": 1331, "circular": 1318, "circult": 1331, "circumst": [1313, 1385, 1456], "circumv": [1416, 1448, 1463], "cl": [1281, 1283, 1284, 1318, 1343, 1349, 1465], "cla": 1329, "claim": 1318, "clamp": [10, 363, 366, 381, 457, 458, 459, 460, 461, 462, 481, 860, 1326, 1395, 1411, 1432], "clang": [1326, 1339], "clariti": [1350, 1419, 1426], "class": [0, 62, 63, 72, 73, 77, 80, 103, 105, 107, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 140, 141, 142, 143, 158, 159, 160, 162, 163, 165, 166, 167, 168, 187, 195, 196, 197, 198, 199, 200, 207, 222, 224, 228, 237, 241, 244, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 267, 270, 271, 277, 281, 282, 394, 452, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 536, 539, 540, 620, 624, 625, 627, 664, 697, 700, 704, 705, 706, 709, 717, 719, 722, 726, 744, 748, 751, 752, 753, 754, 756, 866, 867, 928, 965, 967, 968, 969, 970, 979, 1003, 1004, 1014, 1016, 1017, 1020, 1021, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1064, 1092, 1107, 1108, 1196, 1273, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1313, 1315, 1318, 1319, 1326, 1332, 1342, 1349, 1351, 1360, 1367, 1408, 1410, 1416, 1418, 1419, 1422, 1425, 1430, 1432, 1437, 1448, 1449, 1462, 1463, 1465, 1469, 1473, 1474], "classic": [1043, 1320, 1326, 1337, 1437, 1473], "classmethod": [1281, 1283, 1318, 1349, 1386, 1404, 1465], "clean": [1326, 1339, 1343, 1410, 1417, 1418, 1419, 1426, 1458], "cleaner": 1326, "cleanest": 1343, "cleanli": [1326, 1418], "cleanup": 1326, "clear": [68, 759, 783, 1316, 1414, 1416, 1418, 1419, 1420, 1423, 1432, 1448, 1469], "clear_backend": 1326, "clear_cach": 1326, "clearer": [913, 1425, 1447], "clearli": [1350, 1418, 1452, 1475], "clever": 1448, "cli": [82, 1326, 1475], "click": [1329, 1333, 1356, 1464], "client": [94, 97, 192, 490, 491, 495, 496, 1000, 1001, 1002, 1326, 1327, 1360], "clip": [10, 364, 365, 381, 457, 458, 459, 460, 461, 462, 600, 621, 860, 895, 902, 946, 947, 978, 1149, 1326, 1367, 1395, 1423], "clip_grad": 1367, "clip_gradi": [1313, 1423, 1433], "clip_gradient_bwd": [1313, 1423, 1433], "clip_gradient_fwd": [1313, 1423, 1433], "clip_sin": [1313, 1433], "clobber": 1448, "clock": [1343, 1443, 1452], "clockwis": 915, "clone": [1329, 1339, 1358], "cloned_kei": 1023, "close": [67, 76, 357, 569, 571, 585, 587, 674, 819, 918, 919, 1036, 1074, 1313, 1318, 1319, 1326, 1349, 1352, 1395, 1399, 1415, 1417, 1418, 1419, 1423, 1426, 1433, 1436, 1443, 1444, 1447, 1449, 1455, 1456, 1460], "closed_jaxpr": [260, 1436], "closedjaxpr": [260, 501, 1326, 1405], "closer": [1354, 1418, 1438, 1460, 1462], "closest": [936, 1058, 1455], "closur": [69, 76, 114, 1275, 1313, 1318, 1339, 1342, 1354, 1417, 1419, 1423, 1437, 1438, 1449], "closure_convert": 1326, "cloth": 1440, "cloud": [99, 1326, 1431, 1464], "clu": 1318, "clue": 1326, "cluster": [99, 172, 1326, 1356, 1431, 1452, 1463], "cluster_detection_method": 99, "cluster_s": 172, "clz": 429, "cm": 1439, "cmake": 1350, "cmap": 1439, "cmath": 1350, "cmp": 146, "cmu": 311, "cnhw": 345, "cnn": 344, "cnst": 1318, "co": [67, 73, 77, 78, 79, 80, 81, 113, 299, 337, 469, 482, 493, 501, 569, 574, 639, 729, 929, 948, 981, 1074, 1123, 1140, 1149, 1252, 1253, 1254, 1255, 1303, 1313, 1318, 1319, 1333, 1336, 1343, 1350, 1353, 1354, 1360, 1374, 1399, 1413, 1415, 1419, 1433, 1437, 1438, 1439, 1444, 1449, 1452, 1457, 1470], "coars": [1427, 1460], "code": [120, 127, 190, 235, 244, 337, 424, 439, 493, 500, 746, 867, 882, 885, 917, 918, 998, 1003, 1004, 1058, 1092, 1279, 1314, 1316, 1317, 1318, 1319, 1321, 1322, 1324, 1326, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1342, 1343, 1346, 1348, 1349, 1351, 1354, 1355, 1360, 1366, 1382, 1399, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1438, 1443, 1444, 1445, 1448, 1449, 1454, 1455, 1457, 1458, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1473, 1474, 1475], "code_book": 1058, "codebas": [479, 1312, 1325, 1326, 1410, 1413, 1414, 1416], "codifi": 1414, "codomain": [1313, 1437], "coeff": [914, 1313, 1437], "coeffici": [636, 641, 794, 879, 880, 881, 882, 883, 884, 885, 886, 887, 914, 1081, 1123, 1313, 1320, 1326, 1354, 1367, 1374, 1413, 1437, 1438], "coerc": 1331, "coercibl": 1426, "cognit": 1414, "cohes": 1412, "col": [225, 229, 292, 775, 998], "col_norm": 998, "colab": [1323, 1326, 1339, 1356, 1360, 1475], "colab_": 1323, "colatitud": [1140, 1149], "colatitudin": 1149, "cold": 1463, "collabor": 1418, "collaps": [345, 1426], "collapsed_slice_dim": [381, 1395], "collat": 1435, "collate_fn": 1435, "collect": [117, 118, 122, 123, 124, 125, 126, 132, 160, 161, 164, 172, 184, 194, 248, 249, 259, 277, 281, 282, 296, 431, 501, 582, 588, 774, 861, 925, 933, 998, 1006, 1007, 1009, 1011, 1256, 1304, 1313, 1318, 1319, 1326, 1340, 1349, 1373, 1382, 1415, 1418, 1428, 1430, 1431, 1433, 1434, 1440, 1448, 1452, 1457, 1458, 1464, 1465, 1468, 1474, 1475], "collect_profil": [1326, 1464], "collective_ax": [172, 184], "collective_id": 1458, "collective_ref": 1443, "collectivepermut": 431, "collis": 1346, "color": [1341, 1434, 1439, 1448, 1458, 1462], "color_map": 87, "colormap": 87, "cols_sort": 197, "column": [81, 233, 236, 262, 283, 293, 404, 499, 517, 526, 566, 621, 623, 628, 636, 641, 642, 750, 789, 790, 807, 898, 901, 902, 907, 941, 955, 957, 961, 982, 1043, 1078, 1082, 1083, 1089, 1090, 1313, 1326, 1341, 1426, 1437, 1449, 1452, 1453, 1456, 1460, 1462, 1474], "column_axi": [517, 526], "column_stack": [580, 941], "com": [188, 491, 1323, 1326, 1328, 1329, 1337, 1339, 1340, 1356, 1358, 1431, 1432, 1435], "combin": [73, 121, 311, 340, 378, 381, 456, 458, 460, 461, 462, 486, 636, 641, 664, 666, 746, 917, 998, 1313, 1318, 1325, 1326, 1336, 1339, 1343, 1346, 1348, 1350, 1353, 1356, 1368, 1421, 1425, 1435, 1441, 1442, 1443, 1444, 1448, 1453, 1454, 1456, 1458, 1470, 1473, 1475], "combinator": 1350, "combinatori": 1339, "combine_threshold_byt": [1353, 1475], "come": [432, 487, 621, 965, 1318, 1319, 1325, 1331, 1337, 1339, 1349, 1350, 1354, 1356, 1414, 1416, 1417, 1422, 1426, 1427, 1431, 1434, 1436, 1438, 1440, 1447, 1448, 1452, 1455, 1456, 1457, 1462, 1466, 1474], "comfort": 1456, "comma": [251, 664, 666, 667, 1328, 1475], "command": [99, 1326, 1328, 1329, 1333, 1335, 1336, 1339, 1352, 1353, 1356, 1358, 1431, 1432, 1464, 1466, 1467, 1471, 1475], "comment": [296, 1313, 1326, 1350, 1382, 1414, 1430, 1433, 1437], "commit": [57, 96, 101, 160, 171, 173, 568, 582, 588, 591, 668, 669, 676, 680, 694, 716, 723, 724, 815, 869, 870, 991, 992, 1313, 1326, 1331, 1339, 1357, 1358, 1434, 1437], "commit_group": 173, "commit_smem": [160, 173], "common": [67, 296, 422, 499, 558, 601, 606, 608, 612, 613, 614, 666, 718, 720, 725, 778, 823, 825, 826, 843, 943, 953, 1218, 1313, 1318, 1325, 1326, 1331, 1332, 1333, 1334, 1337, 1340, 1342, 1349, 1350, 1354, 1385, 1397, 1398, 1405, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1420, 1422, 1424, 1426, 1429, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1452, 1455, 1456, 1458, 1460, 1462, 1464, 1465, 1469], "common_gotchas_in_jax": 1323, "common_lin": 1318, "commonli": [500, 1342, 1420, 1429, 1440, 1441, 1457, 1458, 1462, 1474, 1475], "commonmark": 1339, "commun": [132, 133, 194, 501, 998, 1256, 1312, 1316, 1322, 1326, 1328, 1329, 1330, 1336, 1338, 1341, 1350, 1355, 1377, 1414, 1415, 1417, 1418, 1420, 1431, 1434, 1440, 1443, 1448, 1452, 1455, 1457, 1462, 1463, 1468, 1475], "commut": [1072, 1426], "compact": [1043, 1278, 1326, 1399, 1426], "compactli": 1426, "compar": [61, 97, 146, 368, 375, 382, 383, 392, 412, 414, 419, 560, 583, 584, 729, 760, 772, 807, 930, 977, 998, 1074, 1089, 1318, 1323, 1326, 1339, 1341, 1350, 1385, 1414, 1424, 1426, 1430, 1443, 1452, 1455, 1457, 1458, 1460, 1462, 1465], "compare_abstract_ev": 1318, "compare_al": [765, 920], "compare_shard": 1440, "compare_transl": 1318, "compare_typ": [368, 382, 383, 392, 414, 419], "comparison": [235, 368, 381, 382, 383, 392, 414, 416, 417, 419, 457, 1071, 1323, 1326, 1349, 1417, 1427, 1429, 1443, 1457, 1465], "comparison_direct": [368, 382, 383, 392, 414, 419], "comparisondirectionattr": 1318, "compat": [21, 99, 111, 112, 127, 197, 199, 216, 238, 296, 301, 313, 322, 324, 325, 328, 336, 359, 368, 382, 383, 392, 403, 414, 416, 417, 418, 419, 421, 430, 449, 459, 465, 466, 467, 480, 498, 559, 564, 566, 574, 580, 598, 600, 613, 621, 622, 628, 635, 642, 650, 660, 670, 675, 697, 708, 712, 713, 714, 721, 730, 731, 734, 735, 741, 758, 779, 780, 781, 782, 786, 795, 807, 813, 816, 822, 829, 831, 832, 833, 834, 838, 839, 849, 850, 852, 854, 856, 857, 858, 863, 864, 865, 890, 892, 905, 906, 910, 913, 914, 918, 921, 923, 924, 942, 944, 947, 971, 972, 973, 974, 975, 976, 983, 985, 986, 990, 1009, 1011, 1015, 1016, 1017, 1019, 1021, 1024, 1027, 1029, 1031, 1036, 1038, 1040, 1041, 1044, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1090, 1091, 1104, 1105, 1106, 1275, 1279, 1281, 1326, 1333, 1335, 1342, 1344, 1348, 1356, 1358, 1371, 1382, 1385, 1387, 1399, 1409, 1410, 1414, 1415, 1418, 1420, 1426, 1427, 1429, 1435, 1442, 1444, 1446, 1452, 1466], "compel": [1313, 1437], "compil": [10, 68, 84, 88, 89, 98, 113, 143, 160, 182, 187, 192, 193, 194, 205, 264, 285, 296, 331, 337, 339, 349, 360, 361, 363, 372, 373, 375, 378, 411, 412, 415, 422, 424, 455, 456, 463, 469, 476, 482, 483, 486, 491, 497, 503, 504, 552, 580, 651, 655, 664, 673, 772, 800, 830, 836, 842, 860, 882, 885, 887, 901, 907, 913, 920, 940, 945, 952, 953, 972, 994, 995, 996, 997, 998, 1093, 1280, 1284, 1308, 1312, 1313, 1314, 1318, 1319, 1321, 1322, 1323, 1325, 1326, 1331, 1333, 1335, 1337, 1339, 1340, 1342, 1343, 1346, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1362, 1371, 1373, 1375, 1382, 1386, 1395, 1399, 1402, 1405, 1411, 1413, 1415, 1416, 1417, 1419, 1421, 1422, 1425, 1426, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1448, 1449, 1451, 1457, 1458, 1460, 1461, 1462, 1466, 1468, 1469, 1470, 1472, 1473, 1474], "compilation_cach": [1326, 1328, 1369, 1463], "compile_and_load": 1318, "compiled_comput": 1412, "compiled_func": 1279, "compiled_upd": [1402, 1421], "compileopt": [491, 1326], "compiler_ir": [1326, 1343, 1405], "compiler_opt": [296, 1326, 1382, 1405], "compiler_param": [182, 1447, 1457, 1458, 1460, 1461], "compiler_token": 1412, "compileropt": 1405, "compilerparam": [182, 1447, 1457, 1458, 1460, 1461], "complain": [1423, 1452, 1457], "complement": [862, 1116], "complementari": [371, 385, 1415, 1426, 1443], "complet": [18, 65, 66, 96, 127, 172, 346, 378, 456, 493, 667, 726, 804, 1093, 1317, 1318, 1325, 1326, 1328, 1331, 1333, 1336, 1340, 1360, 1404, 1410, 1412, 1414, 1417, 1418, 1419, 1426, 1431, 1443, 1448, 1455, 1457, 1458, 1463, 1475], "complex": [15, 16, 31, 289, 298, 299, 300, 309, 310, 312, 313, 314, 318, 319, 320, 331, 340, 349, 350, 358, 369, 370, 371, 372, 373, 375, 382, 383, 384, 385, 386, 392, 393, 395, 398, 399, 408, 409, 411, 412, 413, 414, 416, 417, 428, 430, 437, 455, 468, 469, 470, 473, 476, 482, 483, 484, 489, 492, 529, 553, 555, 563, 569, 570, 571, 572, 573, 575, 578, 579, 616, 617, 619, 621, 627, 632, 633, 637, 639, 660, 669, 671, 677, 683, 697, 710, 723, 724, 727, 734, 741, 742, 745, 746, 749, 761, 762, 763, 768, 769, 771, 776, 783, 790, 792, 815, 827, 829, 831, 862, 870, 871, 874, 878, 879, 885, 888, 893, 895, 896, 903, 914, 917, 926, 927, 932, 934, 935, 938, 939, 946, 947, 949, 950, 984, 985, 986, 992, 1043, 1072, 1074, 1084, 1085, 1088, 1090, 1091, 1124, 1127, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1300, 1302, 1321, 1325, 1326, 1341, 1346, 1348, 1395, 1413, 1414, 1419, 1423, 1449, 1452, 1458, 1468, 1473, 1474], "complex128": [259, 336, 386, 437, 618, 626, 763, 789, 791, 1072, 1326, 1426], "complex64": [259, 336, 386, 437, 569, 570, 571, 572, 573, 575, 582, 588, 632, 633, 637, 639, 643, 678, 679, 681, 683, 684, 685, 688, 692, 693, 695, 697, 749, 763, 773, 789, 790, 791, 862, 879, 885, 888, 911, 914, 926, 932, 935, 938, 939, 949, 963, 984, 985, 1072, 1074, 1090, 1313, 1326, 1373, 1426, 1437, 1473], "complex_arr": 1326, "complexflo": 773, "compli": 1316, "complianc": [1326, 1422, 1435, 1442], "compliant": 1422, "complic": [361, 381, 457, 458, 459, 460, 461, 462, 503, 504, 666, 1313, 1319, 1331, 1341, 1342, 1343, 1348, 1349, 1350, 1358, 1385, 1411, 1418, 1419, 1437, 1444, 1452, 1458], "compon": [288, 682, 683, 697, 1312, 1319, 1324, 1326, 1343, 1349, 1350, 1367, 1395, 1416, 1417, 1419, 1426, 1427, 1441, 1443, 1448, 1461, 1466], "compos": [67, 337, 1107, 1312, 1318, 1321, 1334, 1341, 1351, 1355, 1360, 1368, 1415, 1419, 1432, 1433, 1436, 1443, 1444, 1456, 1463], "composit": [954, 1063, 1313, 1318, 1354, 1368, 1417, 1433, 1436, 1437, 1438, 1444], "composite_attribut": 337, "composition": 1318, "comprehens": [1313, 1414, 1418, 1425, 1437, 1457], "compress": [675, 919, 1385, 1463], "compris": [69, 81, 1313, 1329, 1416, 1424, 1430, 1433, 1474], "compromis": [1414, 1419], "comput": [1, 13, 23, 33, 53, 60, 67, 76, 82, 83, 84, 85, 88, 89, 91, 92, 98, 99, 113, 114, 127, 128, 144, 145, 147, 148, 149, 151, 178, 204, 216, 224, 225, 226, 228, 229, 230, 234, 235, 240, 263, 284, 290, 293, 295, 296, 297, 305, 306, 307, 308, 311, 351, 352, 353, 354, 355, 356, 360, 361, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 410, 415, 424, 425, 426, 427, 433, 434, 439, 440, 441, 442, 443, 445, 446, 447, 448, 456, 463, 479, 486, 487, 491, 492, 493, 497, 499, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 598, 601, 606, 608, 622, 633, 636, 637, 638, 639, 641, 642, 656, 657, 660, 665, 666, 667, 674, 677, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 715, 725, 729, 734, 735, 736, 737, 738, 741, 749, 758, 759, 765, 777, 778, 779, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 814, 819, 821, 822, 823, 824, 825, 826, 828, 829, 832, 834, 835, 838, 845, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 871, 874, 875, 879, 880, 881, 882, 883, 884, 885, 886, 887, 890, 892, 894, 897, 902, 907, 920, 923, 924, 929, 930, 932, 939, 942, 944, 947, 948, 949, 950, 965, 971, 972, 973, 974, 975, 976, 983, 985, 994, 995, 996, 997, 998, 1032, 1041, 1059, 1060, 1061, 1062, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1083, 1085, 1087, 1088, 1089, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1122, 1135, 1136, 1138, 1139, 1140, 1147, 1148, 1149, 1150, 1151, 1218, 1238, 1239, 1303, 1308, 1310, 1312, 1313, 1315, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1326, 1328, 1331, 1333, 1334, 1336, 1337, 1339, 1342, 1344, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1360, 1367, 1373, 1374, 1382, 1385, 1395, 1401, 1402, 1405, 1409, 1410, 1411, 1412, 1413, 1415, 1417, 1418, 1419, 1421, 1422, 1426, 1429, 1432, 1433, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1446, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1463, 1465, 1466, 1468, 1470, 1472, 1475], "computation": [1325, 1421, 1429, 1457], "computationsinlin": 1328, "compute_argu": 1353, "compute_cap": 1326, "compute_expm": [1073, 1074], "compute_index": 1447, "compute_intens": 1353, "compute_left_eigenvector": 397, "compute_result": 1353, "compute_right_eigenvector": 397, "compute_schur_vector": 405, "compute_typ": 1360, "compute_uv": [406, 807, 1089], "computermsnorm": 1350, "con": 1420, "concat": [138, 610, 630], "concat_axi": [304, 1443], "concaten": [138, 194, 202, 288, 303, 304, 415, 610, 615, 623, 629, 663, 740, 898, 941, 989, 1256, 1318, 1326, 1341, 1346, 1368, 1385, 1410, 1417, 1432], "concatenate_p": 1385, "concentr": [1024, 1056], "concept": [339, 1308, 1319, 1322, 1326, 1341, 1426, 1431, 1444, 1449, 1452, 1454, 1460], "conceptu": [173, 178, 998, 1318, 1334, 1339, 1360, 1411, 1426, 1431, 1453, 1455, 1461], "concern": [194, 987, 1256, 1349, 1350, 1418, 1421, 1461], "concis": [1414, 1420, 1436, 1466], "conclud": [1313, 1341, 1449, 1456, 1460], "conclus": [1450, 1459], "concret": [98, 498, 650, 816, 864, 890, 923, 971, 972, 1315, 1319, 1326, 1331, 1342, 1343, 1346, 1349, 1360, 1414, 1417, 1420, 1422, 1424, 1429, 1430, 1432, 1444, 1455, 1456, 1470], "concrete_av": 1326, "concrete_devic": 1343, "concrete_mesh": 1343, "concretearrai": [1318, 1326, 1360, 1470], "concretization_function_error": [1331, 1470], "concretizationtypeerror": [67, 113, 650, 864, 923, 971, 972, 1326, 1334, 1342, 1399, 1424], "concurr": [10, 160, 174, 860, 1326, 1339, 1341, 1352, 1446, 1452, 1458], "cond": [98, 463, 481, 877, 1326, 1333, 1335, 1348, 1350, 1417, 1429, 1432, 1440, 1457, 1470], "cond_abstract_ev": 1318, "cond_fun": [486, 1313, 1331, 1411, 1433], "cond_impl": 1318, "cond_jaxpr": 1411, "cond_jvp_rul": 1318, "cond_nconst": 1411, "cond_p": [1318, 1385], "cond_partial_ev": 1318, "cond_peval_eqn": 1318, "cond_transl": 1318, "cond_transpose_rul": 1318, "cond_vmap_rul": 1318, "conda": [397, 1339], "condit": [14, 67, 160, 191, 339, 424, 481, 560, 628, 675, 760, 785, 798, 877, 883, 921, 990, 1052, 1128, 1313, 1318, 1326, 1331, 1333, 1343, 1346, 1429, 1433, 1435, 1439, 1442, 1443, 1444, 1452, 1455, 1456, 1457, 1463, 1466, 1470, 1475], "condition": [339, 1343], "condlist": [877, 921], "conf": [1339, 1464], "confer": 1019, "confid": [1326, 1419], "config": [65, 66, 68, 88, 89, 91, 92, 93, 104, 110, 111, 112, 397, 497, 509, 539, 552, 993, 1013, 1019, 1022, 1032, 1033, 1326, 1328, 1333, 1335, 1337, 1339, 1343, 1352, 1353, 1360, 1373, 1375, 1410, 1413, 1424, 1426, 1431, 1432, 1434, 1440, 1442, 1463, 1467, 1468, 1471, 1473], "config_with_absl": 1432, "configproto": 1352, "configur": [91, 92, 99, 263, 284, 397, 529, 539, 668, 728, 869, 891, 909, 922, 991, 1009, 1011, 1315, 1316, 1326, 1329, 1337, 1339, 1343, 1350, 1352, 1353, 1373, 1375, 1382, 1425, 1431, 1432, 1434, 1441, 1446, 1452, 1455, 1458, 1463, 1467, 1471, 1473], "configure_onli": 1339, "configurewhich": 1328, "confirm": [800, 806, 1086, 1087, 1350, 1431, 1432], "conflict": [10, 860, 1337, 1452], "conform": [1326, 1414], "confus": [346, 621, 729, 1313, 1319, 1326, 1349, 1414, 1418, 1420, 1422, 1423, 1437, 1473], "conj": [336, 386, 437, 745, 903, 1075, 1084, 1090], "conjug": [15, 235, 336, 340, 386, 408, 437, 631, 637, 745, 749, 807, 813, 879, 903, 984, 985, 986, 1043, 1089, 1104, 1105, 1313, 1437], "conjugate_a": 408, "conjunct": [63, 1318, 1346, 1422, 1453, 1458], "connect": [99, 344, 1008, 1354, 1368, 1426, 1431, 1435, 1438, 1442, 1448, 1458, 1464], "conquer": 1326, "consecut": [656, 1452, 1455, 1457, 1462], "consensu": 1440, "consequ": [726, 1012, 1317, 1318, 1326, 1346, 1348, 1415, 1421, 1422, 1424, 1425, 1470], "conserv": [160, 1414, 1448], "consid": [67, 111, 112, 289, 290, 293, 295, 297, 337, 415, 421, 479, 493, 560, 568, 574, 583, 610, 636, 641, 718, 720, 760, 762, 771, 772, 798, 807, 882, 883, 885, 887, 965, 972, 981, 1012, 1089, 1129, 1279, 1280, 1281, 1282, 1283, 1302, 1303, 1313, 1316, 1317, 1318, 1319, 1321, 1326, 1328, 1331, 1334, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1360, 1367, 1374, 1385, 1408, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1421, 1422, 1426, 1429, 1430, 1432, 1433, 1434, 1436, 1437, 1438, 1443, 1444, 1448, 1452, 1455, 1456, 1457, 1458, 1462, 1465, 1466, 1474, 1475], "consider": [987, 1316, 1329, 1346, 1417, 1418, 1419, 1420, 1452, 1462, 1473], "consist": [76, 187, 194, 343, 344, 378, 456, 486, 491, 697, 726, 774, 907, 1066, 1067, 1079, 1080, 1149, 1256, 1313, 1315, 1318, 1326, 1333, 1349, 1353, 1398, 1405, 1410, 1412, 1414, 1419, 1422, 1426, 1432, 1433, 1437, 1440, 1452, 1458, 1461, 1462], "consol": [1354, 1438], "const": [252, 1318, 1350, 1411, 1436], "const_bind": 1318, "const_trac": 1318, "constant": [113, 251, 253, 296, 356, 479, 525, 530, 729, 757, 873, 877, 884, 998, 1091, 1098, 1099, 1102, 1103, 1315, 1318, 1319, 1326, 1343, 1346, 1350, 1353, 1357, 1360, 1367, 1382, 1395, 1424, 1436, 1447, 1452, 1457, 1469, 1473], "constant_valu": [873, 1326], "constantli": [1316, 1340, 1462], "constid_to_var": 1318, "constitu": 1452, "constrain": [487, 1346, 1418, 1421, 1426, 1440, 1465, 1468, 1474], "constraint": [190, 241, 250, 251, 487, 499, 1313, 1326, 1331, 1337, 1343, 1402, 1414, 1418, 1419, 1421, 1426, 1427, 1432, 1433, 1440, 1448, 1455, 1457, 1460, 1469], "constraints_str": 241, "constrecip": 1318, "construct": [11, 44, 101, 132, 133, 192, 249, 250, 251, 321, 340, 345, 361, 386, 437, 456, 486, 582, 588, 610, 621, 636, 651, 664, 716, 717, 722, 746, 836, 906, 908, 917, 947, 951, 952, 965, 1065, 1071, 1082, 1090, 1107, 1318, 1319, 1325, 1326, 1331, 1334, 1342, 1343, 1346, 1360, 1367, 1368, 1386, 1411, 1414, 1422, 1424, 1431, 1436, 1440, 1444, 1447, 1449, 1453, 1458, 1461, 1462, 1465, 1468], "constructor": [232, 233, 624, 625, 704, 705, 706, 751, 752, 753, 754, 772, 773, 967, 968, 969, 970, 1274, 1279, 1326, 1368, 1402, 1410, 1411, 1414, 1425, 1444, 1455], "consts1": 1318, "consts2": 1318, "constval": 1318, "constvar": [253, 1318, 1326, 1411, 1436], "constvar_to_v": 1318, "consult": 1329, "consum": [37, 102, 718, 720, 1013, 1033, 1326, 1342, 1343, 1354, 1367, 1375, 1417, 1422, 1425, 1434, 1438, 1444, 1448, 1449, 1452, 1457, 1466], "consumpt": [1452, 1466], "contact": 1312, "contain": [45, 61, 63, 67, 69, 95, 96, 114, 121, 135, 153, 195, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 218, 220, 236, 244, 250, 251, 265, 286, 289, 290, 292, 296, 297, 298, 299, 300, 301, 303, 304, 309, 310, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 331, 332, 334, 338, 340, 341, 343, 344, 345, 347, 349, 350, 359, 360, 362, 363, 364, 365, 366, 367, 368, 372, 373, 375, 377, 378, 381, 382, 383, 386, 389, 391, 392, 398, 399, 400, 401, 403, 406, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 429, 430, 433, 434, 435, 437, 449, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 476, 480, 482, 483, 484, 486, 492, 493, 499, 501, 517, 526, 534, 550, 555, 558, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 591, 599, 600, 601, 602, 606, 608, 609, 612, 617, 619, 621, 622, 632, 633, 635, 637, 638, 639, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 660, 664, 665, 666, 667, 670, 671, 672, 674, 677, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 698, 699, 708, 710, 711, 712, 713, 714, 717, 722, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 738, 741, 742, 745, 749, 757, 758, 760, 761, 762, 764, 766, 767, 768, 769, 770, 771, 776, 778, 780, 781, 782, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 803, 806, 807, 809, 810, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 829, 831, 833, 839, 841, 843, 844, 845, 846, 847, 848, 850, 851, 853, 854, 855, 856, 857, 858, 862, 863, 864, 865, 875, 877, 879, 880, 883, 886, 888, 890, 897, 899, 902, 903, 904, 905, 910, 911, 914, 915, 916, 919, 923, 924, 926, 927, 929, 930, 932, 936, 938, 939, 943, 948, 949, 950, 952, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 971, 972, 973, 974, 975, 976, 982, 984, 985, 986, 998, 999, 1006, 1022, 1033, 1058, 1059, 1060, 1061, 1062, 1070, 1072, 1074, 1077, 1079, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1094, 1095, 1096, 1097, 1099, 1100, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1137, 1138, 1139, 1140, 1141, 1149, 1150, 1151, 1264, 1266, 1272, 1273, 1279, 1280, 1281, 1282, 1302, 1303, 1304, 1305, 1314, 1316, 1318, 1320, 1322, 1326, 1329, 1334, 1339, 1340, 1341, 1343, 1346, 1350, 1351, 1354, 1358, 1360, 1367, 1374, 1375, 1382, 1386, 1395, 1404, 1407, 1408, 1411, 1414, 1416, 1417, 1418, 1420, 1422, 1423, 1425, 1426, 1427, 1431, 1437, 1438, 1443, 1446, 1448, 1452, 1454, 1455, 1456, 1458, 1462, 1463, 1465, 1474], "contend": 1417, "content": [18, 216, 422, 499, 500, 864, 1306, 1307, 1308, 1309, 1310, 1326, 1333, 1339, 1342, 1348, 1349, 1411, 1422, 1423, 1444, 1458, 1466, 1470], "context": [65, 66, 67, 88, 89, 91, 92, 93, 98, 110, 111, 112, 113, 129, 130, 343, 497, 503, 504, 533, 545, 552, 758, 923, 971, 972, 973, 974, 975, 976, 993, 1003, 1004, 1011, 1012, 1023, 1136, 1147, 1256, 1275, 1313, 1318, 1320, 1326, 1331, 1336, 1337, 1342, 1343, 1348, 1349, 1357, 1360, 1375, 1382, 1399, 1414, 1417, 1422, 1424, 1430, 1433, 1437, 1439, 1440, 1441, 1443, 1447, 1452, 1455, 1458, 1464, 1467, 1469, 1471, 1473, 1474], "contextlib": [1318, 1319], "contextmanag": [1260, 1318, 1319], "contextu": [1337, 1373], "contigu": [132, 136, 137, 1410, 1452], "contiguous_submesh": [132, 502], "continu": [137, 505, 636, 641, 1124, 1312, 1313, 1315, 1320, 1326, 1328, 1331, 1339, 1341, 1343, 1349, 1354, 1414, 1417, 1418, 1425, 1432, 1437, 1441, 1452, 1463, 1464, 1475], "contract": [203, 204, 220, 360, 361, 539, 540, 667, 749, 809, 813, 950, 985, 987, 1012, 1346, 1348, 1414, 1443, 1452, 1460, 1462], "contracting_dim_s": 1353, "contraction_dim": 1460, "contrast": [339, 1084, 1106, 1315, 1318, 1348, 1415, 1432, 1443, 1455, 1456, 1458, 1468, 1474], "contravari": 1273, "contribut": [135, 994, 995, 996, 997, 1312, 1339, 1349, 1358, 1374, 1414, 1418], "contributor": [1312, 1322, 1414, 1418], "contriv": [113, 1313, 1433], "control": [13, 67, 76, 92, 101, 113, 140, 194, 360, 361, 381, 397, 404, 415, 499, 506, 616, 621, 633, 637, 695, 716, 883, 887, 920, 946, 993, 1012, 1072, 1093, 1094, 1095, 1096, 1097, 1100, 1238, 1260, 1309, 1313, 1314, 1315, 1317, 1322, 1326, 1328, 1329, 1335, 1337, 1342, 1343, 1349, 1350, 1353, 1354, 1404, 1411, 1412, 1413, 1414, 1419, 1421, 1424, 1429, 1430, 1433, 1437, 1439, 1448, 1449, 1452, 1454, 1455, 1458, 1461, 1464, 1465, 1468, 1470, 1472], "conv": [92, 343, 344, 346, 1328, 1368], "conv1dtranspos": 1368, "conv2d": [343, 344], "conv2d_transpos": 1439, "conv2dtranspos": 346, "conv_convolut": [344, 345], "conv_dimension_numb": 1439, "conv_gener": 1449, "conv_general_dil": [92, 114, 341, 344, 345, 346, 347, 1094, 1095, 1096, 1097, 1326, 1328, 1418, 1430], "conv_general_dilated_p": 1385, "conv_sam": 114, "convdimensionnumb": [342, 343, 344, 1395, 1439], "convei": 500, "conveni": [76, 77, 79, 85, 108, 113, 330, 341, 346, 347, 362, 364, 365, 367, 387, 432, 472, 628, 795, 799, 829, 830, 837, 868, 901, 907, 940, 953, 987, 1007, 1313, 1319, 1320, 1323, 1326, 1334, 1336, 1339, 1354, 1367, 1415, 1418, 1419, 1421, 1426, 1430, 1431, 1433, 1437, 1438, 1439, 1443, 1444, 1445, 1452, 1467, 1473, 1474], "convent": [244, 249, 288, 346, 569, 570, 571, 572, 573, 574, 575, 666, 772, 872, 1109, 1129, 1148, 1175, 1176, 1177, 1178, 1179, 1180, 1240, 1241, 1318, 1326, 1344, 1346, 1386, 1411, 1414, 1419, 1426, 1430, 1436, 1439, 1466], "convention": [1319, 1402], "converg": [235, 403, 1092, 1104, 1105, 1106, 1313, 1418, 1433], "convers": [61, 69, 153, 321, 348, 591, 616, 746, 917, 1318, 1326, 1331, 1332, 1342, 1412, 1414, 1422, 1429, 1432, 1465, 1470, 1471], "convert": [61, 69, 104, 136, 137, 207, 217, 222, 223, 224, 227, 228, 231, 239, 246, 247, 339, 342, 348, 402, 430, 433, 481, 500, 503, 504, 582, 588, 591, 595, 596, 597, 616, 628, 648, 657, 664, 675, 717, 722, 836, 899, 902, 978, 1084, 1085, 1107, 1278, 1317, 1318, 1326, 1328, 1342, 1346, 1367, 1373, 1385, 1402, 1409, 1410, 1411, 1412, 1414, 1422, 1428, 1430, 1432, 1435, 1439, 1442, 1444, 1449, 1452, 1462, 1465, 1466, 1469, 1471, 1474], "convert_element_typ": [9, 321, 591, 1411, 1432], "converted_fn": 69, "convertelementtyp": 1432, "convertibletoint": 1414, "convex": [547, 1313, 1437], "convgeneraldilateddimensionnumb": [343, 344, 345, 346, 1395], "convolut": [92, 341, 342, 343, 344, 345, 346, 347, 529, 633, 637, 1094, 1095, 1096, 1097, 1100, 1313, 1314, 1321, 1326, 1328, 1368, 1382, 1385, 1395, 1418, 1430, 1432, 1437, 1443, 1449, 1475], "convolv": [637, 1095, 1096, 1097, 1100, 1321, 1326, 1382, 1418, 1430, 1439], "convolve2d": [1094, 1439], "convtranspos": 1368, "convwithgeneralpad": 1430, "coo": [195, 224, 225, 226, 227, 1385, 1462], "cook": 1417, "cookbook": [1314, 1433, 1438], "cool": 1456, "cooper": 1452, "coord": 1431, "coord_addr": 1431, "coordin": [99, 183, 292, 344, 574, 729, 757, 981, 1064, 1091, 1149, 1341, 1431, 1443, 1462], "coordinator_address": [99, 1431], "coordinator_bind_address": 99, "copi": [9, 10, 18, 31, 51, 57, 59, 61, 71, 95, 96, 101, 102, 160, 172, 173, 177, 290, 582, 588, 591, 612, 614, 635, 650, 651, 655, 664, 673, 682, 687, 696, 716, 750, 830, 836, 842, 844, 860, 873, 874, 876, 878, 888, 895, 896, 901, 907, 908, 912, 913, 915, 934, 935, 940, 945, 953, 981, 1098, 1279, 1313, 1323, 1326, 1329, 1336, 1339, 1341, 1348, 1349, 1356, 1404, 1410, 1412, 1415, 1417, 1421, 1434, 1435, 1437, 1442, 1443, 1444, 1445, 1451, 1455, 1456, 1460, 1461, 1463, 1471], "copt": 1339, "copy_0_to_1": 1458, "copy_2_to_3": 1458, "copy_3_to_2": 1458, "copy_gmem_to_smem": 1452, "copy_in": 1455, "copy_in_start": 1455, "copy_in_wait": 1455, "copy_out": 1455, "copy_out_start": 1455, "copy_out_wait": 1455, "copy_sem": 1458, "copy_sharded_x": 1410, "copy_slot": 1458, "copy_smem_to_gmem": 1452, "copy_start": 1455, "copy_wait": 1455, "copyright": [1329, 1435, 1442], "copysign": 1326, "copytohostasync": 1324, "core": [158, 160, 262, 267, 283, 291, 292, 447, 501, 525, 530, 719, 987, 998, 1312, 1313, 1314, 1316, 1322, 1326, 1330, 1331, 1339, 1342, 1343, 1346, 1351, 1354, 1360, 1382, 1385, 1386, 1387, 1399, 1402, 1405, 1410, 1414, 1415, 1418, 1419, 1420, 1421, 1424, 1425, 1430, 1431, 1433, 1436, 1441, 1452, 1456, 1457, 1458, 1464, 1468, 1470, 1475], "core_index": 1458, "core_map": 1451, "core_on_chip": 1431, "core_test": 1318, "coreutil": 1339, "corner": [1322, 1326, 1414, 1432], "corollari": 1421, "corrcoef": 641, "correct": [53, 60, 262, 283, 407, 439, 527, 550, 574, 887, 907, 942, 983, 1015, 1313, 1318, 1321, 1326, 1341, 1344, 1348, 1349, 1356, 1395, 1414, 1417, 1422, 1425, 1441, 1443, 1444, 1448, 1449, 1452, 1455, 1457, 1458, 1461, 1462, 1470], "correct_sum": 1455, "correct_sum_kernel": 1455, "correctli": [339, 499, 1321, 1326, 1339, 1341, 1348, 1349, 1382, 1399, 1414, 1420, 1422, 1423, 1424, 1426, 1431, 1448], "correl": [633, 636, 641, 1094, 1095, 1097, 1326, 1418, 1425, 1439, 1466], "correlate2d": [1096, 1439], "correspond": [67, 69, 78, 79, 81, 102, 105, 113, 121, 137, 182, 183, 194, 201, 218, 251, 289, 290, 292, 296, 305, 306, 327, 343, 344, 346, 356, 398, 431, 440, 441, 442, 443, 445, 446, 448, 456, 484, 498, 499, 500, 501, 595, 596, 597, 635, 666, 667, 697, 725, 729, 742, 778, 783, 789, 790, 877, 919, 921, 954, 958, 962, 987, 998, 1010, 1019, 1057, 1063, 1084, 1101, 1218, 1256, 1262, 1263, 1267, 1268, 1302, 1304, 1305, 1313, 1315, 1318, 1320, 1324, 1326, 1328, 1331, 1339, 1341, 1343, 1349, 1350, 1354, 1356, 1360, 1367, 1382, 1386, 1395, 1405, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1424, 1425, 1429, 1431, 1433, 1436, 1437, 1438, 1440, 1443, 1447, 1449, 1452, 1453, 1455, 1456, 1457, 1460, 1461, 1462, 1465, 1466, 1471, 1474], "correspondingli": [1313, 1433, 1443], "corrupt": [1326, 1452, 1458], "cos_jvp": 1318, "cos_p": 1318, "cos_x": [73, 80, 81, 1313, 1354, 1419, 1433, 1437, 1438], "cosh": [300, 470, 483, 570, 932, 949], "cosin": [299, 300, 309, 310, 312, 314, 349, 350, 469, 470, 482, 483, 569, 570, 571, 572, 573, 575, 638, 639, 929, 932, 948, 949, 981, 1059, 1060, 1061, 1062, 1318, 1419], "cost": [67, 78, 81, 235, 493, 800, 887, 1015, 1019, 1022, 1032, 1106, 1313, 1315, 1317, 1326, 1328, 1350, 1354, 1395, 1405, 1426, 1427, 1429, 1437, 1438, 1443, 1447, 1449, 1455, 1457, 1458, 1462], "cost_analysi": [800, 1315, 1326, 1405], "cost_estim": 182, "costestim": [182, 1447], "costli": [1326, 1426, 1456, 1463], "cotang": [76, 81, 1303, 1313, 1318, 1326, 1354, 1360, 1386, 1433, 1437, 1438], "cotangents_in_flat": 1318, "cotangents_out": 1318, "cotangents_out_flat": 1318, "could": [83, 262, 283, 337, 343, 344, 357, 987, 990, 1009, 1011, 1123, 1283, 1313, 1318, 1319, 1321, 1326, 1328, 1334, 1336, 1339, 1342, 1348, 1350, 1352, 1353, 1354, 1356, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1434, 1437, 1438, 1440, 1443, 1444, 1448, 1449, 1453, 1455, 1456, 1458, 1460, 1462, 1463, 1464, 1465, 1469, 1470, 1471, 1474, 1475], "couldn": [1313, 1412, 1413, 1417, 1437], "count": [160, 183, 235, 280, 334, 378, 429, 600, 602, 640, 667, 717, 722, 735, 736, 738, 933, 972, 973, 974, 975, 976, 977, 1040, 1218, 1318, 1326, 1328, 1360, 1421, 1426, 1431, 1457, 1469], "count_leading_zero": 334, "counter": [1319, 1402, 1418, 1421, 1426, 1434, 1458, 1462, 1466], "counterclockwis": [563, 915], "counterexampl": 1426, "counterintuit": 1412, "counterpart": [398, 893, 1331, 1349, 1431], "counterst": 1469, "counterv2": 1469, "countrysid": 1432, "coupl": [1318, 1414, 1448, 1463], "cours": [1326, 1348, 1412, 1414, 1435, 1442, 1462], "cov": [636, 883, 1041, 1199, 1221, 1222], "covari": [636, 641, 883, 1041, 1221, 1222, 1273], "covector": [1313, 1437], "cover": [303, 304, 425, 426, 427, 433, 434, 435, 1312, 1313, 1320, 1328, 1329, 1333, 1341, 1350, 1360, 1414, 1417, 1436, 1437, 1452, 1455, 1458, 1460, 1462, 1463, 1468, 1472, 1474], "coverag": [1326, 1418, 1422, 1441, 1445], "cp": 1441, "cp312": 1339, "cpu": [62, 91, 94, 97, 102, 182, 236, 242, 244, 265, 286, 287, 296, 397, 399, 404, 405, 409, 424, 496, 716, 789, 791, 920, 998, 1001, 1002, 1008, 1009, 1011, 1012, 1083, 1085, 1088, 1305, 1312, 1315, 1317, 1318, 1323, 1325, 1326, 1329, 1336, 1339, 1343, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1357, 1360, 1382, 1386, 1395, 1402, 1427, 1429, 1431, 1432, 1443, 1444, 1449, 1452, 1453, 1455, 1457, 1464, 1468, 1471, 1475], "cpu_cod": 424, "cpu_test": 1339, "cpudevic": [97, 1386, 1444, 1468], "cpython": [1338, 1339], "crack": 1412, "crash": [1326, 1328, 1358, 1443, 1458], "creat": [57, 105, 132, 133, 137, 139, 158, 174, 194, 195, 207, 222, 224, 228, 232, 233, 249, 251, 277, 281, 282, 289, 337, 380, 491, 499, 500, 501, 502, 503, 504, 509, 539, 566, 568, 582, 588, 610, 615, 634, 651, 664, 668, 669, 676, 680, 694, 719, 721, 723, 724, 743, 788, 815, 816, 836, 837, 868, 869, 870, 873, 898, 991, 992, 1009, 1011, 1013, 1033, 1065, 1076, 1081, 1108, 1279, 1302, 1304, 1313, 1318, 1319, 1320, 1326, 1329, 1335, 1337, 1341, 1342, 1343, 1346, 1348, 1349, 1353, 1357, 1360, 1373, 1385, 1386, 1399, 1402, 1404, 1412, 1414, 1417, 1418, 1421, 1424, 1425, 1426, 1428, 1431, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1452, 1455, 1458, 1460, 1462, 1463, 1464, 1466, 1468, 1474], "create_device_mesh": [194, 502, 1353], "create_mesh": 1354, "create_perfetto_link": [1009, 1011, 1326, 1464], "create_perfetto_trac": [1009, 1011], "create_us": 1426, "creation": [0, 1326, 1328, 1337, 1342, 1357, 1424, 1431, 1446], "criteria": [1418, 1426, 1463], "criterion": [235, 1426], "critic": [1317, 1320, 1328, 1385, 1452, 1462], "cross": [637, 1096, 1097, 1098, 1103, 1313, 1326, 1328, 1344, 1353, 1356, 1386, 1415, 1434, 1443, 1460, 1468, 1475], "cross_product": 987, "crucial": [1320, 1346, 1431, 1441, 1452, 1455, 1466], "cruft": 1319, "csc": 1385, "csd": [1103, 1326], "cse": [67, 1441], "csingl": 697, "csr": [196, 228, 229, 230, 231, 236, 1326, 1385], "csrmetisnd": 236, "cstdint": 1350, "ct": [76, 1313, 1318, 1350, 1360, 1419, 1433, 1437], "ct_env": 1318, "ct_x": 1360, "ct_y": [1350, 1360], "cta": 1452, "ctrl": 1464, "cts_in": 1318, "cts_out": 1318, "ctx": [254, 1318, 1343, 1350, 1360, 1416], "ctype": [264, 285, 1350], "cu12": 1349, "cube": [331, 455, 476, 617], "cubic": [291, 292, 1394, 1455, 1460], "cublaslt_matmul_desc_fast_accum": 1395, "cuda": [172, 188, 236, 242, 244, 424, 1326, 1339, 1343, 1350, 1386, 1427, 1449, 1452, 1464], "cuda11": [1326, 1356], "cuda111": 1326, "cuda11_cudnn805": 1326, "cuda11_cudnn82": 1326, "cuda12": [1326, 1356, 1444], "cuda12_loc": 1326, "cuda12_pip": 1326, "cuda_12": 1349, "cuda_compute_cap": 1326, "cuda_malloc_async": 1352, "cuda_vers": 1339, "cuda_visible_devic": 1358, "cudadevic": [1326, 1357, 1431], "cudamallocasync": 1352, "cudastream_t": 1350, "cudnn": [506, 539, 540, 1326, 1339, 1356], "cudnn82": 1356, "cudnn88": 1326, "cudnn89": 1326, "cudnn_vers": 1339, "cufft": 1326, "culprit": 1417, "cumbersom": [1313, 1415], "cummax": 1328, "cummin": 1328, "cumprod": [646, 847, 1326, 1328], "cumproduct": 1326, "cumsum": [647, 656, 665, 848, 981, 1326, 1328], "cumul": [19, 20, 351, 352, 353, 354, 355, 644, 645, 646, 647, 656, 665, 847, 848, 965, 1153, 1156, 1157, 1158, 1160, 1162, 1167, 1169, 1171, 1173, 1174, 1175, 1176, 1178, 1180, 1183, 1184, 1186, 1188, 1189, 1190, 1191, 1193, 1195, 1204, 1209, 1212, 1216, 1217, 1225, 1227, 1229, 1231, 1232, 1235, 1242, 1243, 1245, 1247, 1248, 1251, 1326, 1328], "cumulative_sum": [645, 848, 965, 1326], "cupi": 1326, "cupti": 1464, "cupti_callbackfunc": 1464, "cupti_cb_domain_driver_api": 1464, "cupti_error_insufficient_privileg": 1464, "cupti_error_not_initi": 1464, "cupti_interface_": 1464, "cupti_trac": 1464, "cur_abstract_mesh": 1360, "cur_slot": 1455, "curat": 1322, "curiou": 1349, "current": [29, 82, 99, 137, 174, 218, 236, 262, 283, 360, 361, 379, 399, 403, 404, 409, 424, 459, 491, 539, 540, 667, 998, 1010, 1012, 1059, 1060, 1061, 1062, 1071, 1082, 1093, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1312, 1315, 1316, 1318, 1319, 1324, 1326, 1328, 1329, 1331, 1337, 1339, 1341, 1342, 1343, 1346, 1349, 1350, 1356, 1360, 1375, 1385, 1386, 1395, 1404, 1409, 1410, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1427, 1432, 1440, 1441, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1474, 1475], "current_interpret": 1319, "current_phase_slic": 1458, "curri": [493, 1326, 1419], "curs": 1417, "cursed_ident": 1417, "curv": [954, 1063, 1349], "curvatur": [1313, 1437], "cusolv": 1326, "custom": [10, 69, 73, 76, 77, 78, 80, 81, 111, 127, 128, 244, 249, 262, 263, 264, 265, 283, 284, 285, 286, 287, 378, 540, 726, 773, 828, 860, 864, 873, 930, 1123, 1150, 1151, 1264, 1266, 1280, 1281, 1282, 1305, 1312, 1320, 1326, 1347, 1348, 1349, 1373, 1378, 1386, 1387, 1413, 1415, 1416, 1422, 1423, 1428, 1435, 1437, 1439, 1443, 1447, 1448, 1449, 1454, 1456, 1458, 1462], "custom_bind": 1326, "custom_cal": [263, 284, 1326, 1343, 1350, 1386], "custom_call_api_vers": [262, 283, 1350], "custom_call_target": 1350, "custom_dc": [1326, 1369], "custom_deriv": [81, 537, 538, 1119, 1121, 1123, 1129, 1135, 1137, 1144, 1150, 1151, 1152, 1326], "custom_hook": 1463, "custom_jvp": [112, 537, 538, 1119, 1121, 1123, 1129, 1135, 1137, 1144, 1150, 1151, 1152, 1318, 1326, 1328, 1350, 1419, 1423], "custom_jvp_cal": 1419, "custom_jvp_call_jaxpr": 1419, "custom_jvp_call_jaxpr_p": 1326, "custom_lin": 1419, "custom_linear_solv": [806, 1086, 1104, 1105, 1106], "custom_method": 1422, "custom_operation_for_gpu": 1360, "custom_pad": 873, "custom_partit": [1326, 1350, 1369, 1449], "custom_requirements_lock": 1339, "custom_root": [1313, 1433], "custom_transform": [1326, 1419], "custom_transpos": [112, 1328], "custom_vjp": [69, 73, 76, 112, 1326, 1328, 1334, 1336, 1343, 1350, 1413, 1415, 1419, 1443, 1449, 1460], "custom_vjp_cal": 1419, "custom_vmap": [75, 1350, 1449], "customarrai": 1422, "customcal": [1360, 1449], "customcallop": 1373, "customcalltargettrait": 1305, "customcallwithlayout": 1326, "customcallwithoutlayout": 1326, "customiz": 1425, "customnod": [1279, 1430, 1465], "customvjpprim": 81, "cut": [569, 570, 571, 572, 573, 575, 794, 1312, 1336, 1415, 1431], "cutlass": 1452, "cutoff": [803, 882, 885], "cval": 1091, "cwh": 345, "cy": 1360, "cycl": [1316, 1326, 1328, 1342, 1353, 1408, 1427, 1452, 1465], "cycle_back": 1353, "cython": 1339, "cz": 1360, "czpf": 1339, "d": [83, 91, 346, 398, 409, 410, 500, 501, 502, 610, 616, 651, 654, 680, 683, 688, 694, 695, 717, 722, 738, 800, 930, 952, 1014, 1022, 1071, 1093, 1111, 1113, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1141, 1145, 1157, 1158, 1167, 1169, 1175, 1176, 1183, 1184, 1190, 1191, 1203, 1204, 1209, 1212, 1225, 1227, 1242, 1243, 1248, 1304, 1313, 1315, 1318, 1319, 1322, 1326, 1328, 1331, 1336, 1339, 1341, 1343, 1346, 1348, 1350, 1353, 1354, 1358, 1373, 1382, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1423, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1436, 1437, 1438, 1442, 1443, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1462, 1464, 1469, 1470], "d0": 1458, "d1": 951, "d2": 951, "d2fdx": 1320, "d2h": 1441, "d3fdx": 1320, "d4fdx": 1320, "d_ff": 1415, "d_k": 506, "da": 1410, "dag": [1318, 1373, 1426, 1465], "dai": [1312, 1315, 1343, 1358, 1414, 1416, 1420, 1463], "damnit": 1415, "danger": [1412, 1429, 1448], "dash": 1326, "data": [13, 24, 45, 96, 98, 105, 132, 133, 135, 137, 138, 172, 194, 195, 201, 204, 216, 221, 233, 236, 263, 284, 289, 290, 293, 295, 297, 356, 357, 360, 361, 378, 424, 433, 456, 486, 493, 498, 499, 500, 539, 540, 568, 580, 587, 616, 624, 625, 664, 697, 704, 705, 706, 716, 717, 722, 735, 736, 737, 738, 751, 752, 753, 754, 758, 763, 812, 816, 853, 855, 864, 875, 883, 896, 897, 914, 918, 919, 923, 924, 954, 955, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 981, 994, 995, 996, 997, 998, 1012, 1023, 1028, 1034, 1057, 1063, 1098, 1099, 1101, 1102, 1103, 1123, 1196, 1238, 1256, 1279, 1280, 1282, 1302, 1303, 1313, 1314, 1319, 1323, 1326, 1328, 1334, 1336, 1337, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1360, 1367, 1382, 1386, 1395, 1398, 1399, 1404, 1405, 1407, 1408, 1410, 1412, 1414, 1415, 1417, 1418, 1420, 1421, 1422, 1424, 1425, 1426, 1430, 1432, 1433, 1436, 1437, 1439, 1440, 1444, 1446, 1448, 1452, 1455, 1456, 1458, 1459, 1460, 1465, 1469, 1470, 1471, 1474, 1475], "data_callback": 498, "data_dir": 1442, "data_field": [1279, 1326, 1474], "data_parallel": 1341, "data_shd": 1350, "data_slic": 1455, "datacent": 1458, "dataclass": [182, 1279, 1280, 1281, 1283, 1319, 1326, 1447, 1474], "datafram": 1426, "dataload": 1435, "dataset": [1196, 1203, 1313, 1314, 1320, 1341, 1350, 1355, 1385, 1435, 1437, 1439, 1468, 1474], "dataset_as_numpi": 1442, "datatyp": [341, 343, 345, 346, 347, 633, 637, 660, 666, 683, 749, 795, 809, 813, 829, 950, 984, 985, 1350, 1395, 1434, 1468], "date": [1338, 1339, 1343, 1350, 1355, 1358, 1414, 1415, 1420, 1475], "davmr": 1445, "db": [305, 306, 1434, 1435, 1442], "dblquad": 1418, "dce": [127, 128, 1326], "dce_rul": [127, 128], "dcmake_build_typ": 1350, "dcn": [133, 1475], "dcn_mesh_shap": 133, "dct": [290, 1060, 1061, 1062, 1304, 1313, 1433], "dctn": [1059, 1061, 1062], "ddf": 1374, "ddkq8": 1431, "ddof": [53, 60, 641, 856, 858, 942, 983, 1239], "ddot": 1460, "de": [1386, 1432, 1439], "deactiv": 99, "dead": [127, 1319, 1326], "deadlock": [1326, 1328, 1431, 1435, 1452], "deal": [1318, 1343, 1360, 1412, 1429, 1448, 1452, 1462, 1469], "dealloc": 1352, "dealt": 1318, "debian": [397, 1339], "debug": [75, 98, 119, 131, 182, 253, 267, 497, 503, 504, 1012, 1086, 1087, 1308, 1326, 1339, 1342, 1344, 1349, 1350, 1352, 1359, 1405, 1415, 1419, 1429, 1431, 1434, 1436, 1443, 1447, 1449, 1458, 1463, 1465, 1468, 1474], "debug_bwd": [1313, 1433], "debug_check": [1328, 1447], "debug_fwd": [1313, 1433], "debug_inf": 1326, "debug_info": [253, 267, 272, 1315, 1326, 1360, 1405], "debug_key_reus": [1342, 1375], "debug_nan": 1326, "debug_options_flag": 1475, "debug_print": [85, 1447], "debugg": [65, 66, 82, 1313, 1328, 1333, 1336, 1419, 1432, 1433], "debuginfo": [253, 267, 1326], "decai": 1367, "decay_r": 1367, "decay_step": 1367, "decemb": [1326, 1338, 1420, 1426], "decentr": 1312, "decid": [182, 236, 1346, 1382, 1410, 1416, 1419, 1434, 1440, 1441, 1449], "decim": [46, 581, 697, 916, 1453], "decis": [1312, 1319, 1326, 1353, 1354, 1414, 1416, 1418, 1425, 1438, 1440, 1449, 1457, 1468], "deck": 1419, "declar": [1273, 1326, 1342, 1350, 1404, 1414, 1418], "decod": 1350, "decode_shard": 1373, "decompos": [337, 779, 1078, 1313, 1395, 1417, 1419, 1437, 1450, 1455, 1460], "decomposit": [337, 395, 396, 401, 403, 404, 405, 406, 784, 790, 792, 798, 804, 805, 807, 1066, 1067, 1068, 1070, 1078, 1079, 1082, 1083, 1084, 1085, 1089, 1106, 1313, 1326, 1395, 1437, 1460], "decor": [67, 73, 75, 76, 77, 78, 80, 127, 238, 248, 249, 268, 296, 337, 504, 1005, 1012, 1279, 1281, 1283, 1284, 1313, 1325, 1326, 1333, 1336, 1339, 1350, 1354, 1360, 1367, 1410, 1413, 1424, 1429, 1430, 1433, 1434, 1438, 1440, 1444, 1447, 1465, 1468, 1474], "decorator_kwarg": 1005, "decoupl": 1462, "decreas": [176, 657, 982, 1106, 1328, 1349, 1352, 1353, 1463], "decrement": 1458, "dedic": 337, "dedup_refer": 1326, "deem": [102, 1418], "deep": [1313, 1318, 1351, 1429, 1430, 1433, 1437, 1439, 1443, 1448, 1457, 1460], "deepcopi": [1326, 1399], "deeper": [1320, 1422], "deepli": 1322, "deepmind": [1312, 1368, 1369, 1418], "def": [0, 67, 69, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 98, 113, 114, 119, 120, 121, 127, 238, 293, 295, 296, 303, 305, 306, 315, 316, 337, 339, 378, 415, 422, 424, 434, 456, 479, 481, 486, 493, 498, 501, 504, 566, 621, 719, 729, 780, 800, 828, 873, 910, 987, 998, 1005, 1012, 1074, 1273, 1275, 1279, 1280, 1281, 1282, 1283, 1284, 1303, 1304, 1313, 1315, 1318, 1319, 1320, 1321, 1323, 1324, 1326, 1331, 1332, 1333, 1334, 1335, 1336, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1360, 1367, 1373, 1385, 1399, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1468, 1469, 1470, 1474], "def_abstract_ev": [1343, 1360, 1416], "def_dc": 127, "def_impl": [1360, 1416], "def_partit": [1350, 1373], "def_vmap": 73, "default": [10, 13, 67, 78, 81, 82, 90, 91, 92, 93, 96, 97, 99, 111, 112, 121, 132, 133, 135, 138, 160, 182, 194, 206, 207, 222, 233, 236, 237, 242, 244, 246, 247, 262, 263, 265, 283, 284, 286, 289, 290, 291, 292, 293, 295, 296, 297, 304, 305, 306, 331, 341, 343, 344, 345, 346, 347, 349, 356, 360, 361, 362, 364, 372, 373, 375, 380, 381, 387, 397, 403, 404, 411, 412, 424, 434, 435, 452, 454, 455, 456, 469, 472, 473, 476, 482, 483, 491, 493, 494, 501, 503, 504, 505, 506, 507, 510, 516, 517, 524, 526, 527, 528, 531, 534, 536, 539, 540, 550, 559, 560, 563, 564, 565, 568, 578, 579, 582, 583, 585, 587, 588, 591, 598, 621, 622, 628, 633, 636, 637, 640, 641, 642, 644, 645, 646, 647, 651, 652, 654, 655, 656, 657, 660, 665, 666, 667, 668, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 701, 716, 717, 719, 722, 723, 727, 729, 735, 736, 737, 738, 743, 747, 749, 757, 758, 760, 765, 783, 784, 785, 786, 790, 792, 794, 795, 796, 798, 800, 801, 803, 804, 805, 807, 809, 812, 813, 814, 815, 827, 829, 832, 834, 835, 836, 838, 844, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 864, 869, 872, 873, 874, 875, 877, 881, 882, 883, 884, 885, 892, 894, 895, 897, 901, 902, 906, 907, 913, 914, 915, 916, 918, 919, 920, 921, 923, 924, 933, 934, 937, 942, 944, 946, 947, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 971, 972, 973, 974, 975, 976, 977, 981, 982, 983, 984, 985, 987, 991, 994, 995, 996, 997, 998, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1138, 1218, 1238, 1239, 1256, 1273, 1278, 1279, 1302, 1303, 1305, 1313, 1318, 1320, 1323, 1326, 1331, 1334, 1339, 1340, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1357, 1367, 1373, 1375, 1382, 1395, 1399, 1402, 1404, 1410, 1413, 1415, 1417, 1425, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1441, 1443, 1444, 1446, 1449, 1452, 1453, 1455, 1457, 1458, 1461, 1463, 1464, 1465, 1466, 1467, 1471, 1473, 1474, 1475], "default_backend": 1326, "default_col": 1435, "default_devic": [1326, 1357], "default_export_platform": 1343, "default_input_handl": 1318, "default_lowering_platform": 1343, "default_matmul_precis": [343, 1457], "default_mesh": 1434, "default_prng_impl": 1326, "default_rng": [716, 981, 1348, 1468], "defaultdict": 1318, "defeat": [67, 1334, 1342], "defens": [1320, 1417, 1421, 1426, 1437, 1443], "defer": [305, 306, 1313, 1318, 1371, 1386, 1426, 1433], "defici": [798, 803, 1348], "defin": [10, 61, 69, 73, 74, 76, 77, 78, 79, 80, 81, 111, 114, 121, 127, 128, 131, 137, 182, 219, 234, 240, 244, 262, 283, 296, 305, 306, 337, 356, 357, 359, 362, 363, 364, 365, 366, 367, 381, 396, 398, 422, 449, 457, 458, 459, 460, 461, 462, 464, 468, 506, 529, 533, 539, 540, 545, 570, 572, 575, 585, 587, 624, 625, 633, 637, 639, 641, 704, 705, 706, 734, 742, 751, 752, 753, 754, 772, 785, 860, 877, 888, 890, 902, 915, 919, 930, 932, 949, 965, 967, 968, 969, 970, 987, 998, 1012, 1022, 1076, 1123, 1124, 1136, 1147, 1148, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1171, 1173, 1174, 1175, 1176, 1178, 1180, 1183, 1184, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1209, 1212, 1216, 1217, 1221, 1222, 1225, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1242, 1243, 1245, 1247, 1248, 1251, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1312, 1316, 1318, 1319, 1325, 1326, 1328, 1332, 1341, 1343, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1367, 1382, 1395, 1405, 1408, 1411, 1414, 1416, 1418, 1419, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1448, 1452, 1453, 1456, 1462, 1463, 1465, 1466, 1468, 1474, 1475], "define_": 1326, "definit": [77, 80, 290, 395, 547, 784, 954, 1041, 1063, 1066, 1067, 1068, 1082, 1086, 1088, 1105, 1149, 1273, 1313, 1325, 1326, 1348, 1349, 1350, 1354, 1360, 1367, 1382, 1387, 1398, 1414, 1419, 1422, 1426, 1430, 1433, 1437, 1438, 1443, 1469, 1474], "definitely_equ": 1326, "defjvp": [77, 1313, 1348, 1419, 1433], "defragment": 1326, "defvjp": [69, 73, 80, 1313, 1334, 1336, 1350, 1419, 1423, 1433], "defvjp_al": 1419, "deg": [563, 883], "deg2rad": [899, 900, 981], "degrad": [1326, 1427, 1432, 1452, 1457], "degre": [563, 641, 648, 856, 858, 883, 899, 915, 942, 981, 983, 1021, 1027, 1051, 1107, 1108, 1139, 1140, 1149, 1175, 1176, 1177, 1178, 1179, 1180, 1239, 1240, 1241, 1313, 1328, 1374, 1414, 1418, 1420, 1422, 1437, 1448], "del": [1318, 1332, 1350, 1444, 1462, 1465, 1466], "delai": [85, 113, 174, 1318, 1326, 1336, 1338, 1346, 1368, 1413, 1419, 1458], "delay_releas": [160, 174], "deleg": 1425, "delet": [96, 296, 304, 565, 634, 750, 1019, 1308, 1326, 1328, 1343, 1413, 1427, 1463], "deliber": [718, 720, 1337, 1432, 1440], "delight": 1419, "delta": [517, 1047, 1313], "delta_theta": 1313, "delta_theta_original_calcul": 1313, "demand": [1346, 1352, 1415], "demo": [1419, 1431, 1439], "demonstr": [75, 666, 807, 817, 1012, 1089, 1101, 1316, 1334, 1341, 1342, 1348, 1350, 1353, 1360, 1434, 1439, 1441, 1445, 1449, 1458, 1462, 1468, 1474], "denomin": 1027, "denomni": 574, "denorm": [421, 697], "denormal_numb": 697, "denot": [76, 135, 456, 1070, 1139, 1140, 1175, 1176, 1177, 1178, 1179, 1180, 1313, 1346, 1411, 1426, 1437, 1458, 1461, 1462, 1470], "dens": [99, 195, 202, 203, 206, 207, 209, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 290, 529, 747, 837, 868, 1238, 1313, 1315, 1350, 1353, 1360, 1368, 1385, 1418, 1435, 1437, 1442, 1459], "dense_dim": 195, "dense_mat": 1462, "denseelementsattr": 1318, "densegener": 1353, "densiti": [735, 736, 738, 1016, 1020, 1021, 1024, 1025, 1026, 1027, 1029, 1030, 1032, 1035, 1037, 1038, 1039, 1041, 1042, 1044, 1049, 1051, 1052, 1053, 1055, 1056, 1098, 1103, 1142, 1157, 1158, 1175, 1176, 1181, 1182, 1183, 1184, 1190, 1191, 1196, 1201, 1202, 1204, 1209, 1212, 1225, 1227, 1233, 1234, 1439], "depart": [1399, 1432], "depend": [9, 61, 67, 76, 96, 98, 102, 108, 121, 133, 138, 140, 153, 262, 283, 321, 339, 422, 424, 526, 534, 578, 580, 591, 633, 637, 654, 668, 675, 700, 758, 800, 801, 864, 869, 874, 879, 923, 924, 971, 972, 973, 974, 975, 976, 991, 998, 1012, 1082, 1087, 1093, 1094, 1095, 1096, 1097, 1100, 1124, 1128, 1138, 1313, 1316, 1318, 1319, 1320, 1325, 1326, 1329, 1331, 1333, 1336, 1342, 1346, 1348, 1349, 1350, 1353, 1356, 1358, 1382, 1386, 1395, 1399, 1405, 1410, 1411, 1412, 1414, 1415, 1416, 1418, 1421, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1437, 1443, 1444, 1446, 1447, 1448, 1449, 1452, 1453, 1455, 1462, 1469, 1470, 1474], "depict": [1455, 1458, 1462], "deploi": [1343, 1458], "deploy": [1328, 1341, 1431], "deprec": [111, 112, 262, 283, 539, 579, 622, 798, 803, 853, 855, 875, 897, 918, 934, 1012, 1149, 1277, 1316, 1326, 1328, 1343, 1348, 1356, 1359, 1371, 1382, 1399, 1400, 1410, 1414, 1416, 1418, 1422, 1425, 1447], "deprecatedarg": [262, 283, 622, 798, 803, 853, 855, 875, 897, 1012], "deprecationwan": 1326, "deprecationwarn": [622, 798, 803, 853, 855, 875, 897, 1313, 1316, 1326, 1437], "depriv": 1466, "depth": [194, 493, 586, 623, 662, 663, 739, 740, 937, 941, 988, 989, 1135, 1263, 1313, 1339, 1430, 1437, 1443, 1468, 1472, 1474, 1475], "dereferenc": [1452, 1461], "deriv": [69, 77, 81, 102, 346, 422, 491, 548, 726, 881, 884, 930, 1073, 1104, 1105, 1123, 1139, 1145, 1150, 1151, 1314, 1318, 1319, 1320, 1326, 1346, 1348, 1350, 1360, 1387, 1402, 1419, 1423, 1425, 1435, 1437, 1442, 1452], "deriv1": 1318, "deriv2": 1318, "deriv3": 1318, "deriv4": 1318, "deriv5": 1318, "derivative_fn": 1444, "derivi": 1433, "descend": [8, 51, 579, 934, 1326], "descent": [1367, 1469, 1474], "describ": [92, 158, 182, 184, 262, 283, 346, 379, 381, 398, 408, 409, 457, 458, 459, 460, 461, 462, 498, 500, 501, 549, 558, 601, 606, 608, 621, 623, 630, 663, 664, 740, 823, 825, 826, 843, 909, 941, 943, 965, 989, 994, 995, 996, 997, 1006, 1012, 1082, 1088, 1107, 1139, 1140, 1272, 1313, 1319, 1326, 1328, 1339, 1341, 1346, 1350, 1353, 1360, 1362, 1373, 1386, 1395, 1401, 1402, 1404, 1410, 1411, 1415, 1419, 1420, 1421, 1423, 1426, 1431, 1432, 1433, 1440, 1441, 1443, 1446, 1449, 1452, 1456, 1457, 1462, 1464, 1466, 1468, 1469, 1473], "descript": [141, 267, 633, 637, 918, 919, 990, 1094, 1095, 1096, 1097, 1149, 1318, 1326, 1329, 1386, 1420, 1440, 1468], "descriptor": [62, 346, 1386, 1448, 1458], "deseri": [244, 248, 249, 1326, 1343, 1346, 1367, 1386], "deserialize_auxdata": 249, "desiderata": [1419, 1421], "desideratum": 1412, "design": [83, 99, 131, 456, 499, 567, 998, 1012, 1098, 1312, 1316, 1318, 1321, 1326, 1336, 1348, 1351, 1355, 1366, 1382, 1385, 1399, 1412, 1415, 1416, 1418, 1419, 1420, 1424, 1428, 1429, 1430, 1432, 1444, 1446, 1448, 1457, 1458, 1461, 1466, 1468, 1472, 1473, 1475], "desir": [132, 133, 235, 492, 568, 717, 722, 853, 855, 864, 875, 897, 1098, 1102, 1103, 1328, 1339, 1341, 1421, 1422, 1426, 1432, 1449, 1452, 1456, 1463, 1466, 1473], "despit": [235, 726, 1339, 1418, 1460, 1463], "destin": [172, 431, 842, 896, 1354, 1426, 1443, 1458, 1466], "destination_index": [431, 1443], "destroi": 1326, "det": [805, 1041, 1221, 1222], "detail": [1, 9, 10, 33, 67, 75, 77, 80, 96, 140, 141, 182, 241, 250, 262, 283, 288, 296, 303, 304, 305, 306, 425, 426, 427, 431, 432, 433, 434, 435, 501, 586, 591, 662, 728, 739, 772, 789, 796, 814, 860, 891, 893, 909, 922, 988, 990, 998, 1083, 1093, 1135, 1238, 1273, 1304, 1315, 1316, 1319, 1320, 1322, 1326, 1329, 1333, 1334, 1336, 1339, 1340, 1341, 1343, 1346, 1348, 1349, 1350, 1351, 1356, 1373, 1374, 1382, 1386, 1395, 1402, 1404, 1410, 1411, 1414, 1416, 1417, 1419, 1421, 1424, 1426, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1441, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1463, 1464, 1465, 1466, 1469, 1475], "detailed_log": 491, "detect": [78, 81, 88, 89, 99, 1313, 1315, 1326, 1328, 1333, 1335, 1336, 1341, 1342, 1349, 1356, 1373, 1375, 1423, 1429, 1432, 1433], "determin": [69, 81, 84, 182, 277, 281, 282, 288, 290, 296, 305, 306, 378, 404, 406, 424, 456, 464, 473, 568, 623, 630, 635, 663, 719, 740, 757, 765, 787, 798, 803, 805, 941, 972, 989, 994, 995, 996, 997, 1013, 1019, 1022, 1032, 1033, 1069, 1082, 1101, 1312, 1326, 1328, 1342, 1346, 1350, 1351, 1353, 1354, 1357, 1382, 1402, 1415, 1420, 1422, 1425, 1426, 1430, 1441, 1443, 1446, 1448, 1449, 1456, 1466, 1468, 1473], "determinist": [1028, 1263, 1326, 1402, 1421, 1434, 1440, 1444, 1458, 1466, 1468, 1475], "detrend": [1098, 1102, 1103], "dev": [13, 84, 137, 241, 244, 250, 251, 288, 1009, 1011, 1256, 1260, 1304, 1313, 1323, 1326, 1328, 1331, 1339, 1346, 1350, 1356, 1360, 1378, 1386, 1402, 1404, 1409, 1424, 1426, 1429, 1430, 1432, 1434, 1437, 1443, 1444, 1464, 1470], "dev20240416": 1339, "develop": [697, 1313, 1319, 1322, 1325, 1326, 1329, 1337, 1339, 1344, 1350, 1355, 1356, 1375, 1385, 1417, 1418, 1419, 1420, 1426, 1427, 1433, 1434, 1449, 1454, 1457], "deviaiton": [856, 942], "deviat": [53, 235, 524, 527, 529, 856, 858, 942, 983, 1038, 1093, 1244, 1246, 1318, 1458], "devic": [9, 13, 18, 29, 57, 84, 91, 94, 96, 99, 101, 102, 131, 132, 133, 136, 137, 139, 192, 194, 296, 303, 304, 315, 316, 426, 433, 434, 435, 491, 495, 496, 498, 499, 500, 502, 568, 582, 588, 591, 668, 669, 676, 680, 694, 716, 723, 724, 815, 869, 870, 991, 992, 998, 1003, 1006, 1007, 1008, 1009, 1011, 1012, 1256, 1310, 1312, 1314, 1315, 1317, 1318, 1323, 1324, 1326, 1331, 1334, 1336, 1344, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1357, 1373, 1376, 1382, 1386, 1395, 1399, 1404, 1410, 1411, 1412, 1414, 1418, 1421, 1424, 1426, 1428, 1431, 1432, 1440, 1443, 1448, 1455, 1457, 1458, 1461, 1462, 1463, 1464, 1466, 1468, 1471, 1473, 1475], "device0": 433, "device1": 433, "device2": 433, "device3": 433, "device_assign": [491, 1360], "device_buff": [1326, 1410, 1432], "device_count": [97, 499, 500, 1341, 1386, 1431], "device_get": 1471, "device_id": [1448, 1458], "device_id_typ": 1458, "device_indices_map": 1404, "device_kind": [1458, 1462], "device_memory_profil": [1007, 1441], "device_put": [13, 95, 500, 1323, 1324, 1326, 1343, 1350, 1353, 1354, 1357, 1386, 1404, 1410, 1431, 1434, 1440, 1443, 1458, 1468, 1471], "device_put_repl": [95, 1326], "device_put_shard": 95, "device_set": [499, 1404, 1410], "device_to_devic": 1471, "device_to_host": 1471, "device_typ": 1442, "device_under_test": 1326, "device_variance_typ": 1417, "devicearrai": [1326, 1410, 1414, 1471, 1473], "deviceassign": [296, 1326, 1382], "deviceidtyp": 1458, "devicelocallayout": [262, 263, 283, 284], "devices_indices_map": 1404, "dex": 1449, "df": [1021, 1027, 1051, 1175, 1176, 1177, 1178, 1179, 1180, 1240, 1241, 1349, 1374], "dfden": 1027, "dfdx": 1320, "dfm": 1416, "dfnum": 1027, "dg": 1349, "di": [99, 1313, 1374, 1432, 1437], "diag": [654, 655, 788, 807, 952, 1070, 1071, 1089, 1326], "diag_indic": 653, "diag_indices_from": 652, "diagflat": [651, 655, 952], "diagnos": 1316, "diagnost": [356, 357], "diagon": [58, 233, 401, 404, 408, 409, 410, 636, 641, 651, 652, 653, 654, 666, 676, 696, 807, 812, 952, 955, 956, 957, 958, 960, 961, 962, 1065, 1070, 1071, 1083, 1085, 1087, 1089, 1090, 1439, 1462], "diagram": [1404, 1455, 1458, 1461, 1462], "dialect": [1318, 1326, 1328, 1350, 1360, 1405, 1419, 1449], "dict": [67, 69, 78, 81, 114, 115, 182, 254, 262, 265, 268, 283, 286, 296, 339, 378, 456, 486, 491, 492, 501, 664, 873, 998, 1279, 1304, 1318, 1319, 1326, 1349, 1351, 1367, 1382, 1405, 1408, 1414, 1432, 1442, 1465, 1474], "dictat": [1374, 1458], "dictionari": [182, 262, 263, 283, 284, 664, 919, 1093, 1278, 1304, 1349, 1430, 1436, 1465, 1474], "dictkei": [1264, 1266, 1326, 1474], "did": [1313, 1319, 1323, 1326, 1415, 1421, 1440, 1443, 1447, 1448], "didact": 1469, "didn": [1275, 1313, 1319, 1329, 1354, 1415, 1417, 1421, 1429, 1431, 1437, 1438, 1443, 1445, 1469], "diff": [665, 735, 736, 738, 1339, 1462], "diff_bas": 1340, "differ": [9, 13, 61, 76, 94, 101, 120, 137, 184, 296, 304, 380, 424, 449, 453, 480, 486, 493, 500, 568, 574, 578, 587, 591, 600, 654, 656, 660, 664, 665, 696, 697, 716, 719, 729, 758, 772, 773, 783, 789, 791, 800, 803, 845, 846, 873, 874, 878, 879, 880, 881, 882, 885, 886, 893, 895, 896, 906, 915, 918, 923, 924, 946, 947, 965, 971, 978, 981, 984, 987, 990, 998, 1074, 1091, 1093, 1098, 1104, 1105, 1106, 1148, 1257, 1258, 1259, 1275, 1279, 1304, 1312, 1313, 1315, 1316, 1318, 1319, 1323, 1324, 1326, 1328, 1329, 1331, 1333, 1334, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1358, 1367, 1382, 1386, 1399, 1402, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1425, 1426, 1429, 1431, 1432, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475], "differenc": 923, "different": 1440, "differenti": [67, 69, 76, 77, 78, 80, 81, 194, 289, 290, 293, 295, 297, 356, 357, 402, 459, 479, 486, 493, 505, 537, 538, 729, 784, 790, 792, 881, 930, 990, 1073, 1093, 1104, 1105, 1150, 1151, 1256, 1257, 1258, 1259, 1302, 1303, 1308, 1318, 1322, 1326, 1331, 1343, 1348, 1349, 1351, 1354, 1355, 1374, 1386, 1410, 1411, 1413, 1419, 1422, 1423, 1430, 1432, 1438, 1443, 1444, 1449, 1472], "difficult": [1321, 1326, 1337, 1341, 1342, 1349, 1414, 1415, 1418, 1420, 1421, 1426, 1432, 1444, 1452, 1458, 1462], "diffrax": 1355, "dig": 1444, "digamma": [1145, 1418], "digest": 1428, "digit": [600, 697, 1319, 1453], "digraph": 1426, "dilat": [343, 344, 345, 346, 347, 423, 1326], "dilogarithm": 1148, "dim": [499, 540, 615, 898, 902, 1326, 1350, 1460], "dim1": 1343, "dim_args_spec": 1343, "dim_var_valu": 1360, "dimens": [38, 75, 140, 160, 174, 201, 202, 205, 207, 212, 215, 218, 219, 222, 235, 237, 241, 245, 250, 251, 262, 263, 283, 284, 291, 292, 301, 303, 304, 305, 306, 311, 313, 322, 324, 325, 326, 327, 329, 330, 335, 336, 338, 343, 344, 345, 346, 347, 359, 360, 361, 363, 364, 365, 366, 367, 368, 374, 381, 382, 383, 392, 414, 418, 419, 421, 423, 430, 434, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 457, 458, 459, 460, 461, 462, 465, 466, 467, 472, 473, 474, 475, 478, 480, 499, 506, 510, 518, 519, 520, 521, 522, 523, 529, 534, 536, 539, 545, 565, 566, 576, 577, 580, 582, 595, 596, 597, 610, 615, 621, 623, 628, 640, 642, 652, 653, 660, 663, 673, 676, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 696, 702, 703, 719, 729, 735, 736, 738, 740, 743, 747, 749, 772, 775, 795, 796, 801, 812, 813, 814, 828, 829, 830, 831, 832, 838, 845, 846, 849, 852, 853, 855, 856, 858, 861, 872, 873, 875, 876, 880, 886, 894, 897, 898, 902, 907, 940, 942, 947, 951, 952, 955, 972, 983, 985, 986, 987, 989, 998, 1012, 1014, 1024, 1030, 1041, 1043, 1057, 1060, 1062, 1065, 1090, 1099, 1106, 1107, 1138, 1141, 1147, 1218, 1239, 1304, 1313, 1318, 1321, 1326, 1334, 1341, 1343, 1344, 1350, 1354, 1360, 1373, 1382, 1386, 1395, 1398, 1402, 1404, 1410, 1415, 1418, 1422, 1424, 1425, 1432, 1434, 1438, 1440, 1441, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1468, 1475], "dimension": [26, 42, 226, 230, 233, 341, 343, 344, 345, 346, 347, 357, 362, 363, 364, 365, 366, 367, 387, 423, 471, 472, 484, 567, 579, 580, 595, 596, 600, 610, 621, 622, 624, 625, 628, 629, 630, 633, 636, 637, 641, 642, 644, 645, 646, 647, 653, 654, 655, 656, 660, 665, 675, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 699, 704, 705, 706, 727, 729, 735, 736, 737, 738, 739, 749, 750, 751, 752, 753, 754, 757, 765, 772, 774, 775, 783, 786, 795, 800, 801, 802, 806, 809, 814, 815, 827, 829, 836, 837, 847, 848, 853, 855, 864, 868, 872, 873, 875, 895, 897, 898, 901, 902, 906, 920, 934, 935, 937, 946, 947, 950, 953, 967, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 984, 985, 987, 1014, 1058, 1060, 1062, 1064, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1100, 1181, 1182, 1218, 1239, 1321, 1326, 1350, 1351, 1373, 1414, 1418, 1425, 1430, 1435, 1443, 1453, 1455, 1457, 1468], "dimension_as_valu": 1326, "dimension_numb": [203, 204, 208, 220, 342, 343, 344, 345, 346, 361, 381, 457, 458, 459, 460, 461, 462, 539, 1354, 1368, 1436, 1438, 1439, 1470], "dimension_semant": [160, 1457, 1458, 1460, 1461], "dimensionsemant": 160, "dims_compl": 1318, "dims_in": 1318, "dimsiz": [245, 251, 568, 614, 676, 743, 907, 951, 1326], "dir": [1339, 1358], "dirac": 1047, "direct": [120, 235, 236, 421, 452, 491, 499, 566, 578, 615, 666, 783, 793, 805, 863, 898, 915, 1066, 1073, 1077, 1079, 1094, 1095, 1096, 1097, 1100, 1257, 1258, 1259, 1313, 1315, 1318, 1320, 1326, 1339, 1349, 1360, 1386, 1415, 1424, 1426, 1433, 1437, 1443, 1449, 1452, 1459, 1471], "direct_transl": 1318, "directli": [0, 69, 81, 85, 114, 265, 286, 298, 299, 300, 301, 309, 310, 312, 313, 314, 321, 322, 323, 324, 325, 331, 332, 334, 336, 346, 348, 349, 350, 356, 359, 361, 368, 372, 375, 377, 381, 382, 383, 386, 391, 392, 397, 402, 411, 412, 414, 416, 417, 418, 419, 420, 421, 429, 430, 437, 449, 454, 455, 457, 465, 466, 467, 468, 469, 470, 476, 480, 482, 483, 566, 568, 578, 579, 746, 797, 864, 874, 917, 987, 1123, 1135, 1275, 1284, 1313, 1315, 1318, 1325, 1326, 1328, 1336, 1339, 1341, 1342, 1343, 1349, 1350, 1354, 1356, 1360, 1385, 1395, 1411, 1414, 1418, 1422, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1444, 1449, 1452, 1453, 1455, 1456, 1457, 1464, 1469], "directori": [160, 1009, 1011, 1328, 1329, 1339, 1343, 1350, 1353, 1371, 1464], "dirichlet": 1326, "disabl": [65, 66, 68, 98, 129, 244, 1313, 1326, 1333, 1335, 1339, 1342, 1343, 1352, 1353, 1356, 1360, 1386, 1414, 1417, 1437, 1443, 1452, 1463, 1464, 1467, 1473, 1475], "disable_jit": 1415, "disable_omnistag": 1424, "disable_x64": 1326, "disabled_check": [244, 1326, 1343], "disabled_safety_check": 1386, "disabledsafetycheck": [244, 1326, 1343, 1386], "disadvantag": 1426, "disagre": [1349, 1417, 1440], "disallow": [552, 918, 1315, 1326, 1343, 1425, 1471], "disallow_explicit": [1328, 1471], "disappear": [1328, 1466], "disastr": 1331, "discard": [359, 553, 906, 1313, 1318, 1337, 1350, 1354, 1358, 1395, 1426, 1437, 1438, 1453, 1466], "discharg": [1318, 1334], "disconnect": 1412, "discont": 981, "discontinu": [981, 1349], "discourag": [452, 453, 1414], "discov": [99, 1312, 1431, 1463], "discover": [1349, 1418, 1428], "discrep": 1091, "discret": [678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 1059, 1060, 1061, 1062, 1373, 1418], "discuss": [339, 479, 580, 666, 699, 893, 896, 946, 947, 1312, 1319, 1321, 1322, 1326, 1329, 1339, 1342, 1343, 1346, 1349, 1350, 1351, 1354, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1426, 1428, 1429, 1432, 1434, 1438, 1444, 1446, 1449, 1452, 1453, 1455, 1458, 1460, 1466, 1469, 1472], "disequ": 1346, "disjoint": [1431, 1449, 1456, 1458], "disk": [529, 981, 1340, 1348, 1349, 1371, 1463], "disp": 1074, "dispatch": [719, 1319, 1323, 1326, 1340, 1349, 1350, 1410, 1412, 1415, 1424, 1429, 1430, 1444, 1446, 1458, 1460, 1464], "displai": [1074, 1352, 1426, 1468], "disrupt": 1334, "dissect": 1456, "dist": [305, 306, 1058, 1339, 1358], "distanc": [306, 697, 1058, 1418], "distil": [1411, 1417], "distinct": [343, 344, 772, 873, 998, 1318, 1336, 1346, 1426, 1430, 1441, 1449, 1460], "distinguish": [291, 1318, 1319, 1348, 1404, 1425, 1456, 1471], "distrax": 1355, "distribut": [137, 305, 306, 452, 453, 487, 499, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 636, 641, 1015, 1016, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1046, 1047, 1049, 1051, 1052, 1055, 1056, 1110, 1111, 1112, 1125, 1126, 1135, 1142, 1143, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1309, 1312, 1314, 1316, 1326, 1340, 1350, 1353, 1359, 1404, 1410, 1416, 1418, 1421, 1427, 1431, 1435, 1441, 1442, 1443, 1444, 1452, 1454, 1455, 1459, 1466, 1468], "distributed_arrays_and_automatic_parallel": [1402, 1404], "div": [121, 1313, 1429, 1432, 1433], "div_check": 121, "div_p": 1432, "dive": [1412, 1426, 1456, 1458, 1462], "diverg": [1123, 1134, 1395, 1418, 1457], "divers": 1449, "divid": [10, 137, 304, 337, 359, 434, 506, 586, 662, 711, 739, 860, 937, 988, 1029, 1103, 1313, 1326, 1334, 1415, 1432, 1433, 1443, 1452, 1453, 1455, 1456, 1460, 1470], "dividend": [449, 659, 711, 714, 882, 905, 963], "divis": [121, 359, 415, 434, 449, 510, 550, 659, 711, 714, 880, 882, 885, 886, 905, 963, 1326, 1334, 1343, 1346, 1410, 1417, 1432, 1443, 1447, 1452, 1453, 1457, 1462], "divisionbyzeroerror": [117, 118, 122, 123], "divisor": [449, 659, 711, 714, 725, 778, 856, 858, 882, 905, 942, 963, 983], "divmod": [714, 841, 905, 1443], "djv_dz": 1348, "dl": 410, "dl_devic": 102, "dl_device_typ": 102, "dldevicetyp": 102, "dlerror": 1464, "dlmanagedtensorvers": 102, "dlopen": 397, "dlpack": [582, 588, 716, 1316, 1326, 1359], "dlpackmanagedtensor": 102, "dlpackmanagedtensortobuff": 1326, "dm": 1418, "dma": [1448, 1457], "dma_descriptor": 1458, "dmlc": 102, "dn": [951, 1439], "do": [69, 71, 73, 99, 114, 160, 173, 178, 194, 212, 235, 249, 381, 430, 457, 493, 501, 540, 621, 633, 637, 697, 746, 795, 829, 917, 981, 994, 995, 996, 997, 1094, 1095, 1096, 1097, 1100, 1104, 1105, 1106, 1257, 1258, 1259, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1324, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1350, 1352, 1353, 1354, 1356, 1358, 1360, 1367, 1368, 1371, 1385, 1386, 1402, 1409, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1443, 1444, 1447, 1449, 1450, 1452, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1473], "doc": [13, 85, 188, 241, 244, 250, 251, 288, 343, 1256, 1260, 1284, 1304, 1316, 1323, 1326, 1328, 1331, 1339, 1346, 1350, 1360, 1378, 1386, 1402, 1404, 1409, 1410, 1414, 1415, 1417, 1419, 1423, 1424, 1426, 1428, 1429, 1431, 1432, 1440, 1441, 1443, 1444, 1452, 1464, 1468, 1470], "docker": 1358, "docstr": [92, 140, 344, 345, 378, 501, 990, 1304, 1318, 1326, 1328, 1339, 1343, 1360, 1386], "doctest": 1346, "doctre": 1339, "document": [3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 74, 75, 102, 141, 144, 145, 147, 148, 149, 150, 151, 155, 244, 250, 251, 262, 283, 303, 304, 361, 425, 426, 427, 431, 432, 433, 434, 435, 586, 662, 666, 728, 739, 789, 891, 922, 988, 990, 1007, 1083, 1091, 1107, 1238, 1306, 1307, 1309, 1310, 1315, 1316, 1320, 1322, 1326, 1328, 1329, 1330, 1340, 1341, 1342, 1344, 1345, 1346, 1349, 1350, 1353, 1356, 1358, 1360, 1378, 1386, 1392, 1395, 1399, 1404, 1411, 1413, 1417, 1418, 1419, 1420, 1422, 1426, 1428, 1429, 1432, 1436, 1439, 1444, 1447, 1449, 1453, 1454, 1455, 1459, 1464, 1465, 1466, 1473, 1475], "docutil": 1339, "doe": [18, 71, 85, 99, 100, 133, 182, 218, 248, 249, 291, 381, 422, 431, 445, 446, 457, 458, 459, 460, 461, 462, 503, 504, 527, 574, 586, 616, 628, 650, 662, 675, 739, 772, 779, 844, 864, 887, 901, 907, 918, 937, 940, 981, 984, 987, 988, 1013, 1071, 1074, 1081, 1088, 1093, 1106, 1122, 1124, 1127, 1152, 1257, 1258, 1259, 1280, 1313, 1315, 1317, 1318, 1320, 1321, 1324, 1326, 1328, 1331, 1336, 1339, 1340, 1342, 1343, 1346, 1348, 1349, 1358, 1360, 1373, 1374, 1385, 1386, 1395, 1402, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1421, 1422, 1426, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1466, 1470, 1474], "doesn": [67, 68, 84, 132, 133, 337, 673, 830, 842, 901, 907, 913, 940, 945, 953, 998, 1009, 1011, 1313, 1318, 1319, 1326, 1331, 1334, 1336, 1341, 1350, 1353, 1354, 1395, 1410, 1415, 1416, 1417, 1419, 1421, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1445, 1449, 1450, 1456, 1463, 1466, 1474], "doi": [235, 697], "domain": [877, 1016, 1017, 1020, 1021, 1026, 1027, 1029, 1030, 1031, 1038, 1039, 1042, 1044, 1047, 1049, 1052, 1053, 1055, 1056, 1123, 1254, 1255, 1312, 1313, 1322, 1351, 1418, 1437, 1449, 1457, 1475], "domin": [1340, 1455], "don": [75, 133, 160, 235, 1280, 1282, 1313, 1318, 1319, 1323, 1329, 1331, 1333, 1334, 1336, 1339, 1341, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1410, 1412, 1417, 1418, 1419, 1421, 1429, 1431, 1432, 1433, 1435, 1437, 1438, 1440, 1442, 1443, 1444, 1448, 1449, 1456, 1460, 1462, 1463, 1469, 1474, 1475], "donat": [96, 296, 634, 998, 1314, 1326, 1382], "donate_argnam": [296, 1326, 1382], "donate_argnum": [296, 634, 998, 1324, 1326, 1382], "done": [160, 219, 397, 404, 527, 616, 790, 792, 799, 953, 1143, 1312, 1318, 1319, 1321, 1326, 1332, 1343, 1349, 1350, 1352, 1356, 1358, 1373, 1412, 1414, 1427, 1430, 1431, 1440, 1444, 1448, 1449, 1458, 1461, 1463, 1464, 1465, 1470, 1473, 1475], "dot": [92, 114, 305, 306, 361, 504, 506, 509, 539, 666, 749, 795, 809, 813, 829, 950, 984, 985, 998, 1004, 1005, 1304, 1313, 1317, 1320, 1321, 1328, 1336, 1354, 1385, 1395, 1411, 1413, 1415, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1444, 1445, 1447, 1449, 1457, 1460, 1462, 1470], "dot_gener": [360, 539, 660, 666, 809, 829, 950, 984, 985, 987, 1326, 1346, 1353, 1354, 1395, 1436, 1438, 1457, 1460, 1470], "dot_general_p": 1385, "dot_product": [305, 504], "dot_with_no_batch_dim": 1438, "dotalgorithm": [360, 361, 660, 666, 749, 829, 950, 984, 985, 1395], "dotalgorithmpreset": [92, 360, 361, 660, 666, 749, 829, 950, 984, 985, 1328, 1395, 1447], "dotdimensionnumb": [203, 204, 220, 361, 539], "dotgener": 361, "dots_sav": [1354, 1438], "dots_with_no_batch_dims_sav": [1354, 1438], "doubl": [500, 909, 1015, 1019, 1022, 1025, 1032, 1129, 1135, 1313, 1323, 1326, 1341, 1448, 1475], "double_barri": 1458, "double_buffered_pipelin": 1455, "double_out": 1410, "doubli": 610, "doubly_norm": 998, "doubt": [1315, 1349, 1466], "dougalm": [1417, 1419], "down": [99, 100, 288, 619, 698, 701, 711, 915, 964, 998, 1019, 1022, 1313, 1318, 1319, 1336, 1340, 1341, 1342, 1343, 1350, 1412, 1414, 1425, 1431, 1433, 1437, 1449, 1457, 1460, 1464, 1468], "downcast": [909, 1395, 1460], "download": [1326, 1339, 1350, 1435], "downsampl": [291, 292], "downsid": [1418, 1426, 1448, 1455], "downstream": [1316, 1326, 1417, 1422, 1425, 1429, 1452, 1465], "downward": [710, 916, 1349], "dozen": 1469, "dp": 1443, "dr": 1354, "draft": [1306, 1307, 1309, 1310, 1311, 1318], "drag": 1464, "drain": 1455, "dram": [1455, 1456, 1461], "dramat": [1104, 1105, 1106, 1424], "drastic": 1349, "draw": [1032, 1328, 1417, 1421, 1426, 1434, 1444, 1466], "draw_sampl": 1421, "drawback": [1425, 1452], "drawn": [529, 636, 641, 990, 1022], "driven": [1339, 1418], "driver": [1089, 1326, 1356], "drop": [10, 83, 216, 296, 381, 457, 458, 459, 460, 461, 462, 600, 860, 994, 995, 996, 997, 1320, 1326, 1338, 1343, 1356, 1382, 1386, 1414, 1415, 1421, 1424, 1426, 1427, 1437, 1440, 1444], "drop_field": 1279, "dropdown": 1464, "dropout": [1368, 1421], "dsd": 1462, "dsd_kernel": 1462, "dso_load": 1464, "dsplit": [586, 739, 937, 988], "dst": [172, 173, 1318, 1443], "dst_ref": 1458, "dst_sem": 1458, "dstack": [610, 740, 941, 989], "dt": [1123, 1142, 1148, 1425], "dtdloss_dtheta": 1313, "dtype": [9, 10, 19, 20, 35, 40, 53, 54, 58, 60, 61, 63, 67, 73, 75, 76, 78, 79, 81, 84, 95, 98, 114, 129, 130, 131, 142, 161, 164, 168, 182, 183, 190, 195, 207, 222, 224, 225, 226, 228, 229, 230, 232, 233, 235, 236, 237, 238, 240, 244, 250, 262, 280, 283, 288, 289, 290, 295, 296, 298, 299, 300, 301, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 330, 331, 332, 334, 336, 337, 340, 345, 348, 349, 350, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 386, 387, 389, 390, 391, 392, 395, 398, 401, 408, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 429, 430, 433, 437, 440, 441, 442, 443, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 479, 480, 482, 483, 484, 486, 492, 493, 498, 500, 501, 506, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 536, 537, 540, 553, 555, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 588, 591, 595, 596, 597, 598, 600, 601, 602, 606, 608, 610, 612, 614, 615, 616, 617, 619, 621, 622, 623, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 716, 717, 719, 721, 722, 723, 724, 725, 727, 730, 731, 734, 735, 736, 737, 738, 740, 741, 742, 743, 745, 747, 749, 750, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 862, 863, 864, 865, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 890, 892, 893, 894, 895, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 920, 921, 923, 924, 926, 927, 929, 930, 932, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 994, 995, 996, 997, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1107, 1108, 1123, 1135, 1142, 1143, 1148, 1218, 1238, 1239, 1275, 1279, 1280, 1281, 1284, 1301, 1302, 1304, 1313, 1315, 1317, 1318, 1320, 1321, 1323, 1326, 1331, 1333, 1336, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1359, 1360, 1373, 1382, 1385, 1395, 1398, 1399, 1402, 1409, 1414, 1416, 1417, 1422, 1426, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1452, 1453, 1455, 1456, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1470, 1474], "dtype1": 1426, "dtype2": 1426, "dtype_to_etyp": 1326, "dtypelik": [9, 19, 20, 23, 35, 40, 53, 54, 58, 60, 61, 106, 207, 222, 224, 228, 232, 233, 307, 308, 321, 330, 341, 343, 346, 347, 348, 360, 361, 379, 380, 390, 498, 500, 539, 540, 568, 591, 630, 633, 637, 644, 645, 646, 647, 663, 676, 680, 694, 717, 719, 722, 740, 743, 747, 763, 773, 795, 809, 812, 813, 834, 847, 848, 850, 854, 856, 857, 858, 892, 893, 941, 942, 944, 952, 955, 983, 989, 1326, 1395, 1409, 1414], "dtypelikefloat": [1014, 1016, 1017, 1020, 1021, 1024, 1025, 1026, 1027, 1029, 1030, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1049, 1051, 1052, 1053, 1054, 1055, 1056], "dtypelikeinexact": [516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530], "dtypelikeint": [1031, 1046, 1047, 1048], "dtypelikeuint": 1018, "du": 410, "dual": [1319, 1417], "dual_numb": 1319, "dual_number_in": 1319, "dual_number_out": 1319, "dualnumb": 1319, "duchi11a": 1367, "duck": [114, 492, 1318, 1346, 1444], "ducktypedarrai": [380, 669, 724, 870, 992], "due": [10, 568, 860, 862, 882, 885, 1093, 1318, 1320, 1326, 1338, 1349, 1352, 1356, 1386, 1414, 1415, 1418, 1419, 1422, 1424, 1429, 1430, 1432, 1444, 1449, 1452, 1453, 1457, 1458, 1462, 1470], "dummi": [1343, 1353, 1412], "dummy_data": 1353, "dump": [1009, 1011, 1326, 1343, 1346, 1464], "dump_dir": 1353, "duplic": [83, 195, 201, 206, 216, 459, 650, 758, 783, 923, 924, 994, 995, 996, 997, 1348, 1464], "durat": [1003, 1004, 1463], "duration_in_m": 1464, "dure": [69, 119, 172, 248, 249, 380, 424, 439, 479, 1106, 1280, 1282, 1313, 1315, 1318, 1326, 1328, 1334, 1336, 1339, 1342, 1343, 1346, 1348, 1349, 1353, 1354, 1360, 1382, 1411, 1412, 1413, 1414, 1419, 1422, 1424, 1427, 1429, 1432, 1433, 1440, 1441, 1452, 1455, 1457, 1462, 1463, 1465, 1468, 1471, 1473, 1474], "dw": [1434, 1435, 1442], "dx": [735, 736, 738, 930, 954, 1063], "dy": [736, 738], "dynam": [98, 114, 143, 205, 264, 285, 362, 363, 364, 365, 403, 456, 719, 864, 923, 971, 972, 1082, 1279, 1313, 1325, 1326, 1331, 1333, 1336, 1342, 1349, 1373, 1411, 1414, 1418, 1419, 1424, 1425, 1437, 1449, 1459, 1464, 1465], "dynamax": 1325, "dynamic_index_in_dim": [363, 364, 365, 387, 1415], "dynamic_shap": 403, "dynamic_slic": [205, 362, 364, 471, 1326, 1353, 1449, 1462], "dynamic_slice_in_dim": [362, 363, 367, 472, 1443], "dynamic_slice_kernel": 1462, "dynamic_slice_p": 1385, "dynamic_trac": 1318, "dynamic_update_index_in_dim": [366, 367], "dynamic_update_slic": [365, 367, 1326, 1353], "dynamic_update_slice_in_dim": 366, "dynamicjaxprtrac": [98, 1275, 1318, 1331, 1333, 1346, 1348, 1349, 1360, 1424, 1429, 1430, 1432, 1470], "dynamicslic": 363, "dynamicupdateslic": 366, "dz": 738, "e": [10, 29, 62, 67, 68, 69, 76, 78, 81, 83, 85, 91, 96, 97, 99, 102, 113, 114, 132, 133, 136, 137, 138, 140, 143, 160, 182, 219, 232, 233, 241, 265, 286, 288, 289, 290, 292, 303, 304, 311, 318, 319, 335, 343, 345, 348, 356, 372, 373, 375, 378, 409, 411, 412, 413, 421, 423, 424, 425, 426, 427, 433, 435, 454, 456, 468, 492, 493, 498, 501, 506, 532, 541, 542, 543, 546, 551, 579, 580, 585, 586, 587, 598, 621, 623, 636, 639, 641, 662, 663, 671, 672, 673, 697, 715, 739, 740, 757, 767, 772, 773, 779, 785, 801, 804, 807, 819, 860, 873, 911, 919, 923, 927, 932, 934, 937, 941, 946, 947, 949, 953, 987, 988, 989, 998, 1012, 1013, 1021, 1022, 1025, 1026, 1029, 1030, 1032, 1033, 1035, 1037, 1039, 1041, 1042, 1046, 1053, 1071, 1072, 1073, 1078, 1083, 1085, 1089, 1115, 1116, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1131, 1133, 1135, 1142, 1152, 1177, 1179, 1185, 1187, 1192, 1194, 1210, 1211, 1214, 1215, 1228, 1230, 1236, 1237, 1244, 1246, 1252, 1253, 1263, 1273, 1275, 1298, 1304, 1312, 1313, 1315, 1317, 1318, 1319, 1324, 1326, 1327, 1328, 1329, 1333, 1334, 1335, 1336, 1337, 1339, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1360, 1367, 1382, 1385, 1386, 1395, 1398, 1402, 1404, 1405, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1443, 1445, 1448, 1449, 1452, 1453, 1454, 1456, 1457, 1458, 1460, 1461, 1462, 1464, 1465, 1470, 1471, 1473, 1474, 1475], "e1": [241, 251], "e2": [241, 251], "e48aedf368ad": 1438, "e4m3": 1326, "e5m2": 1326, "e_1": 1118, "e_n": 1121, "each": [71, 74, 77, 79, 81, 84, 92, 97, 99, 127, 132, 135, 137, 138, 140, 153, 160, 172, 182, 184, 187, 190, 194, 201, 207, 213, 222, 244, 253, 262, 263, 277, 281, 282, 283, 284, 290, 292, 301, 303, 304, 311, 313, 322, 323, 324, 325, 327, 334, 343, 344, 345, 346, 347, 359, 363, 366, 381, 398, 399, 415, 418, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 440, 441, 442, 443, 445, 446, 448, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 480, 497, 498, 499, 500, 503, 504, 506, 529, 536, 555, 563, 569, 570, 571, 572, 573, 575, 600, 602, 621, 623, 624, 625, 629, 630, 635, 636, 638, 639, 641, 652, 663, 671, 672, 674, 679, 685, 690, 691, 693, 695, 699, 704, 705, 706, 708, 711, 712, 713, 719, 729, 735, 736, 738, 740, 743, 749, 751, 752, 753, 754, 758, 764, 765, 766, 767, 768, 769, 775, 777, 780, 800, 805, 817, 818, 819, 820, 833, 836, 839, 864, 873, 877, 902, 904, 906, 910, 912, 919, 921, 929, 932, 936, 941, 948, 949, 951, 957, 958, 961, 962, 965, 967, 968, 969, 970, 972, 973, 974, 975, 989, 994, 995, 996, 997, 998, 1003, 1006, 1012, 1022, 1040, 1045, 1047, 1058, 1078, 1093, 1098, 1101, 1102, 1103, 1106, 1218, 1256, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1282, 1303, 1304, 1313, 1315, 1318, 1319, 1321, 1325, 1326, 1328, 1331, 1338, 1339, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1360, 1366, 1367, 1368, 1373, 1382, 1386, 1395, 1404, 1410, 1411, 1412, 1414, 1416, 1417, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1473, 1474], "eafp": 1414, "eager": [98, 113, 127, 666, 667, 1331, 1413, 1415, 1419], "eager_constant_fold": 1328, "eagerli": [113, 1319, 1331, 1334, 1335, 1349, 1412, 1415, 1417, 1419, 1443], "earli": [84, 235, 1106, 1326, 1418, 1420, 1428, 1455], "earlier": [262, 265, 283, 286, 424, 1319, 1326, 1341, 1348, 1350, 1358, 1411, 1441, 1448, 1449], "earliest": [1319, 1343], "eas": [981, 1326, 1355, 1414], "easi": [1313, 1319, 1320, 1325, 1335, 1415, 1417, 1421, 1423, 1425, 1427, 1434, 1436, 1437, 1440, 1444, 1448, 1449, 1456, 1457, 1462], "easier": [67, 337, 1313, 1326, 1339, 1341, 1342, 1415, 1416, 1417, 1419, 1426, 1427, 1431, 1443, 1445, 1449, 1457, 1458, 1460, 1474], "easiest": [1322, 1329, 1339, 1349, 1360, 1410, 1422, 1424, 1426, 1431, 1468], "easili": [1326, 1335, 1339, 1341, 1342, 1350, 1356, 1358, 1405, 1411, 1418, 1419, 1421, 1434, 1449], "easylm": 1355, "echo": [1326, 1339, 1358, 1431, 1464], "econom": [1083, 1318, 1326], "ecosystem": [1312, 1329, 1418, 1444], "ed": [1012, 1304, 1313, 1336, 1433, 1449, 1474], "edg": [633, 637, 657, 735, 736, 737, 738, 873, 1094, 1095, 1096, 1097, 1100, 1312, 1313, 1350, 1353, 1356, 1413, 1417, 1436, 1437, 1439, 1448, 1454, 1458], "edge_ord": 729, "ediff1d": 656, "edit": [1326, 1329, 1354, 1438, 1443], "editor": [1329, 1339], "edu": 235, "educ": [1448, 1458], "effect": [83, 91, 95, 98, 119, 120, 253, 254, 262, 283, 291, 292, 296, 387, 408, 422, 472, 479, 675, 688, 692, 693, 695, 718, 720, 847, 848, 918, 1012, 1104, 1105, 1106, 1244, 1246, 1275, 1313, 1318, 1326, 1328, 1331, 1334, 1336, 1341, 1342, 1343, 1346, 1348, 1349, 1351, 1353, 1371, 1382, 1386, 1395, 1408, 1413, 1414, 1415, 1419, 1422, 1425, 1426, 1427, 1428, 1429, 1432, 1433, 1441, 1444, 1448, 1452, 1458, 1460, 1466, 1469, 1470, 1475], "effects_barri": [1336, 1412], "effectul": 1412, "effici": [10, 131, 337, 415, 434, 479, 493, 502, 578, 758, 765, 794, 800, 803, 807, 860, 874, 921, 923, 924, 946, 987, 1074, 1313, 1320, 1321, 1324, 1326, 1341, 1349, 1350, 1353, 1355, 1367, 1402, 1410, 1415, 1418, 1421, 1428, 1429, 1430, 1431, 1433, 1437, 1443, 1444, 1449, 1452, 1458, 1460, 1466, 1470, 1475], "effort": [96, 1316, 1326, 1349, 1414, 1428], "eg": [119, 121, 1334, 1463], "eig": [404, 790, 791, 792, 1070, 1326, 1328], "eigen": 1326, "eigendecomposit": [397, 398, 789, 790, 791, 1326], "eigenpair": 235, "eigenvalu": [235, 397, 398, 789, 790, 791, 792, 1070, 1071, 1074, 1082, 1085, 1326], "eigenvector": [235, 397, 398, 789, 790, 791, 792, 1070, 1071], "eigh": [235, 789, 791, 792, 1041, 1071, 1326], "eigh_tridiagon": [1070, 1326], "eighresult": 790, "eight": [1431, 1443, 1463], "eigval": [789, 1070, 1071, 1326], "eigvals_ful": 1071, "eigvals_onli": [1070, 1071], "eigvalsh": 790, "eigvec": 1070, "einop": 1373, "einstein": [666, 871, 1385], "einsum": [361, 540, 667, 809, 871, 950, 1326, 1354, 1373, 1415], "einsum_path": 666, "either": [101, 102, 121, 133, 143, 160, 182, 203, 220, 251, 291, 292, 296, 297, 339, 341, 343, 344, 345, 346, 347, 378, 395, 408, 415, 439, 464, 499, 533, 534, 545, 566, 621, 660, 666, 670, 708, 712, 713, 714, 716, 717, 726, 730, 731, 734, 741, 749, 764, 767, 768, 769, 780, 781, 782, 795, 800, 809, 813, 822, 829, 832, 833, 838, 839, 849, 852, 863, 864, 865, 877, 890, 905, 919, 937, 946, 947, 950, 984, 985, 990, 998, 1064, 1082, 1135, 1138, 1196, 1304, 1317, 1318, 1319, 1323, 1326, 1339, 1341, 1342, 1343, 1348, 1349, 1350, 1352, 1360, 1373, 1374, 1382, 1395, 1404, 1411, 1414, 1417, 1421, 1424, 1430, 1431, 1435, 1442, 1443, 1449, 1455, 1458, 1461, 1464, 1470, 1473], "elapsed_sec": 268, "elbo_v": 1445, "elbo_val_and_grad": 1445, "elem": 311, "elem_indic": 1453, "element": [3, 4, 11, 31, 32, 34, 35, 36, 37, 39, 40, 44, 46, 50, 54, 56, 74, 76, 78, 81, 117, 118, 121, 122, 123, 124, 125, 126, 140, 190, 207, 209, 210, 211, 216, 222, 237, 244, 259, 262, 277, 281, 282, 283, 288, 289, 290, 291, 293, 295, 297, 299, 300, 307, 308, 309, 310, 311, 312, 313, 314, 334, 335, 343, 344, 345, 349, 350, 360, 361, 372, 373, 375, 381, 397, 399, 401, 409, 411, 412, 413, 415, 420, 429, 440, 441, 442, 443, 445, 446, 448, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 482, 483, 493, 501, 505, 506, 507, 508, 511, 512, 513, 514, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 549, 550, 551, 555, 558, 559, 560, 563, 564, 569, 570, 571, 572, 573, 575, 580, 583, 584, 601, 602, 606, 608, 617, 622, 632, 635, 638, 639, 640, 644, 645, 651, 654, 656, 659, 660, 664, 665, 667, 670, 671, 672, 674, 675, 677, 699, 701, 702, 703, 708, 711, 712, 713, 714, 717, 719, 725, 730, 731, 741, 745, 758, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 777, 778, 779, 780, 781, 782, 783, 817, 818, 819, 820, 822, 823, 824, 825, 826, 832, 833, 834, 835, 838, 839, 841, 843, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 862, 863, 864, 865, 873, 878, 884, 888, 890, 892, 894, 895, 896, 903, 904, 905, 906, 908, 910, 911, 912, 923, 924, 926, 927, 929, 932, 933, 938, 939, 942, 943, 944, 946, 947, 948, 949, 951, 952, 955, 956, 958, 960, 962, 963, 965, 971, 972, 973, 974, 975, 976, 983, 990, 1012, 1022, 1024, 1045, 1047, 1071, 1081, 1087, 1093, 1123, 1136, 1138, 1139, 1140, 1147, 1148, 1263, 1264, 1276, 1302, 1303, 1304, 1313, 1315, 1318, 1324, 1326, 1331, 1334, 1350, 1360, 1382, 1385, 1395, 1402, 1404, 1411, 1421, 1425, 1426, 1432, 1433, 1437, 1444, 1447, 1449, 1452, 1455, 1456, 1457, 1458, 1462, 1465, 1468, 1474], "element_count": 1350, "element_s": 1460, "element_typ": 1350, "elementari": [399, 400, 409], "elementwis": [67, 188, 190, 298, 299, 300, 301, 309, 310, 311, 312, 313, 314, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 336, 340, 348, 349, 350, 358, 359, 368, 369, 370, 371, 372, 373, 375, 377, 382, 383, 384, 385, 386, 389, 391, 392, 393, 411, 412, 413, 414, 416, 417, 418, 419, 420, 428, 429, 430, 437, 438, 449, 454, 455, 465, 466, 467, 468, 469, 470, 476, 477, 480, 482, 483, 489, 574, 601, 606, 608, 823, 825, 826, 963, 1122, 1331, 1368, 1385, 1413, 1430, 1432, 1434, 1440, 1449], "elid": [463, 1348, 1349, 1399, 1411, 1466], "elif": [67, 1318, 1354, 1360, 1426, 1438], "elimin": [67, 127, 422, 434, 1319, 1326, 1348, 1424, 1441, 1444], "ellipsi": 1456, "els": [67, 99, 113, 127, 138, 225, 226, 229, 230, 339, 563, 998, 1015, 1016, 1019, 1021, 1024, 1027, 1029, 1031, 1036, 1041, 1044, 1046, 1049, 1051, 1052, 1053, 1055, 1073, 1075, 1078, 1273, 1279, 1284, 1313, 1318, 1319, 1326, 1331, 1332, 1336, 1339, 1342, 1343, 1346, 1354, 1360, 1411, 1413, 1415, 1417, 1419, 1421, 1422, 1425, 1426, 1427, 1429, 1430, 1432, 1433, 1437, 1438, 1440, 1443, 1455, 1458, 1460, 1462, 1465, 1470, 1474], "else_valu": 1353, "elsewher": [955, 956, 960, 1312, 1415, 1425], "eltwise_kernel": 1449, "elu": 541, "emb": [1415, 1449], "embarrass": 1417, "embarrassingli": 1461, "embed": [1326, 1449, 1457], "emerg": [1312, 1415, 1462], "emit": [174, 244, 337, 1326, 1328, 1340, 1449], "emit_pipelin": [1448, 1458], "emitt": [1353, 1455, 1458, 1462], "emphas": [1312, 1350, 1402, 1466], "empir": 1402, "emploi": [527, 1318, 1415, 1419], "employ": 1329, "empti": [117, 118, 122, 123, 124, 125, 126, 259, 288, 456, 464, 500, 669, 723, 869, 870, 873, 991, 1256, 1274, 1279, 1318, 1326, 1331, 1343, 1346, 1443, 1448, 1463], "empty_arrai": 1326, "empty_lik": [668, 724, 992], "empty_ref": 1449, "emul": [1395, 1454, 1457], "en": [13, 241, 244, 250, 251, 288, 357, 697, 1256, 1260, 1304, 1323, 1326, 1328, 1331, 1339, 1346, 1360, 1378, 1386, 1402, 1404, 1409, 1424, 1426, 1429, 1432, 1443, 1444, 1470], "enabl": [65, 66, 81, 83, 84, 99, 111, 112, 121, 129, 130, 133, 194, 235, 348, 397, 456, 491, 1003, 1006, 1012, 1129, 1256, 1312, 1313, 1318, 1323, 1325, 1326, 1333, 1334, 1335, 1342, 1343, 1346, 1352, 1353, 1356, 1362, 1371, 1375, 1385, 1399, 1408, 1414, 1416, 1419, 1421, 1429, 1430, 1431, 1432, 1436, 1441, 1443, 1444, 1448, 1449, 1454, 1456, 1457, 1462, 1463, 1464, 1467, 1468, 1475], "enable_check": 1326, "enable_debug_check": 1447, "enable_march_n": 1326, "enable_pgl": 1353, "enable_remat_opt_pass": 1352, "enable_runtime_assert": 1447, "enable_x64": [129, 1326, 1348], "enable_xla": 1326, "enablecallback": 1464, "encapsul": [102, 287, 337, 1326, 1342, 1350, 1360, 1411, 1436], "encapsulateffical": 1350, "enclos": [296, 1003, 1004, 1328, 1411, 1415], "encod": [141, 431, 432, 536, 1079, 1080, 1318, 1343, 1411, 1415, 1417, 1420, 1426, 1430, 1435, 1442, 1443, 1465, 1470], "encompass": [304, 435], "encound": 1399, "encount": [69, 504, 650, 864, 923, 971, 972, 981, 1328, 1334, 1342, 1346, 1360, 1399, 1419, 1422, 1424, 1425, 1432, 1454, 1455, 1458, 1464, 1474], "encourag": [305, 306, 1312, 1320, 1452], "encrypt": 1463, "end": [153, 213, 333, 335, 343, 362, 363, 364, 365, 366, 367, 398, 423, 468, 472, 473, 505, 507, 514, 531, 541, 547, 548, 565, 568, 734, 807, 811, 827, 842, 864, 873, 884, 913, 918, 926, 959, 977, 1009, 1052, 1090, 1102, 1106, 1114, 1128, 1134, 1135, 1142, 1146, 1148, 1154, 1155, 1177, 1179, 1185, 1187, 1233, 1234, 1244, 1246, 1249, 1250, 1313, 1318, 1319, 1320, 1325, 1326, 1329, 1331, 1340, 1341, 1343, 1348, 1350, 1353, 1354, 1358, 1386, 1411, 1412, 1414, 1415, 1417, 1418, 1420, 1424, 1431, 1432, 1436, 1437, 1438, 1440, 1443, 1452, 1455, 1456, 1457, 1458, 1460, 1464, 1465, 1466], "end_valu": 873, "endian": [872, 977], "endlessli": 1319, "endpoint": [574, 727, 815, 827, 898, 1326, 1331], "endswith": 1318, "enforc": [82, 83, 85, 422, 1326, 1348, 1425, 1427, 1432, 1444, 1448, 1458, 1460], "engend": 1318, "engin": [1349, 1351, 1355, 1414, 1421, 1452], "enhanc": [1312, 1330, 1373, 1426, 1446], "enjoi": 1319, "enorm": 1469, "enough": [616, 878, 987, 1323, 1326, 1339, 1350, 1353, 1358, 1385, 1418, 1419, 1421, 1424, 1426, 1440, 1448, 1449, 1455, 1458, 1460, 1464, 1475], "enqueu": 1317, "ensur": [99, 113, 132, 160, 172, 262, 283, 422, 547, 548, 650, 923, 971, 1013, 1257, 1258, 1259, 1313, 1318, 1321, 1323, 1326, 1328, 1329, 1336, 1339, 1340, 1346, 1349, 1356, 1382, 1395, 1402, 1412, 1413, 1414, 1415, 1417, 1421, 1422, 1426, 1431, 1437, 1439, 1441, 1442, 1443, 1448, 1452, 1458, 1463, 1465, 1470], "ensure_arraylik": 1422, "ensure_compile_time_ev": [67, 1326, 1413], "ensure_typed_key_arrai": 1425, "entail": [84, 1419], "enter": [82, 504, 1318, 1333, 1335, 1419, 1458, 1464], "entir": [81, 406, 777, 1099, 1313, 1316, 1318, 1319, 1326, 1339, 1341, 1348, 1395, 1402, 1404, 1412, 1416, 1419, 1426, 1429, 1431, 1437, 1443, 1447, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1470, 1474], "entireti": 1326, "entr": [1134, 1146], "entri": [140, 195, 224, 228, 236, 301, 322, 323, 324, 325, 359, 380, 418, 440, 441, 442, 443, 445, 446, 448, 457, 463, 465, 466, 467, 480, 484, 578, 600, 621, 628, 636, 641, 650, 654, 675, 682, 687, 696, 699, 750, 758, 763, 783, 784, 844, 864, 874, 877, 878, 895, 896, 906, 921, 923, 924, 936, 971, 972, 973, 974, 975, 976, 978, 1022, 1058, 1313, 1326, 1339, 1350, 1416, 1417, 1424, 1426, 1432, 1437, 1443, 1444, 1447, 1449, 1455, 1457, 1461, 1463, 1465, 1474], "entropi": [1114, 1146, 1466], "entry_comput": 1353, "entry_computation_layout": 1350, "enum": [341, 343, 344, 345, 346, 347, 360, 361, 394, 660, 666, 749, 795, 800, 809, 813, 829, 950, 984, 985, 1319, 1326, 1328, 1395, 1461], "enumer": [621, 1318, 1354, 1426, 1430, 1431, 1438], "env": [1318, 1319, 1326, 1331, 1339, 1350, 1360, 1419, 1430, 1432, 1435, 1436, 1470], "env_options_overrid": 491, "environ": [99, 397, 421, 501, 999, 1313, 1319, 1326, 1328, 1335, 1337, 1339, 1341, 1342, 1343, 1346, 1350, 1352, 1353, 1356, 1357, 1399, 1402, 1410, 1413, 1419, 1424, 1427, 1431, 1432, 1436, 1443, 1452, 1463, 1464, 1466, 1467, 1475], "envisag": 1427, "enzym": 1449, "eof": 1431, "ep": [403, 697, 803, 883, 936, 1082, 1257, 1258, 1259, 1319, 1320, 1350, 1367, 1437, 1444], "epath": 1353, "epilogu": [1455, 1458], "episode_step": 1474, "epoch": [1435, 1442], "epoch_tim": [1435, 1442], "epsilon": [235, 550, 1082, 1319, 1350, 1367, 1368, 1445], "epsilon_shap": 1445, "epsneg": 697, "eq": [382, 383, 392, 414, 419], "eqn": [253, 1318, 1319, 1411, 1436], "eqn1": 1318, "eqn2": 1318, "eqnarrai": 1348, "eqns1": 1318, "eqns2": 1318, "equal": [29, 78, 81, 97, 106, 132, 133, 194, 202, 205, 206, 251, 291, 292, 296, 297, 303, 304, 305, 306, 338, 343, 345, 363, 368, 380, 381, 382, 383, 392, 398, 414, 419, 435, 464, 475, 493, 500, 506, 560, 580, 583, 584, 619, 637, 653, 683, 710, 735, 736, 738, 760, 773, 834, 835, 851, 865, 883, 892, 935, 936, 937, 940, 944, 954, 955, 998, 1015, 1017, 1019, 1021, 1024, 1027, 1029, 1031, 1036, 1038, 1040, 1044, 1046, 1049, 1051, 1052, 1055, 1057, 1063, 1088, 1090, 1143, 1256, 1257, 1258, 1259, 1303, 1304, 1313, 1318, 1326, 1349, 1350, 1374, 1382, 1395, 1402, 1410, 1415, 1417, 1421, 1427, 1433, 1443, 1452, 1453, 1455, 1457, 1465, 1466, 1474], "equal_nan": [560, 583, 760, 972, 973, 974, 975, 976], "equalstor": 267, "equat": [253, 311, 356, 408, 794, 806, 811, 883, 1066, 1067, 1079, 1080, 1086, 1087, 1088, 1148, 1313, 1318, 1319, 1411, 1433, 1436, 1437], "equinox": [1326, 1355], "equip": 1474, "equiv": [616, 1430], "equival": [10, 29, 120, 173, 178, 201, 202, 303, 304, 339, 344, 362, 364, 381, 387, 397, 424, 425, 426, 427, 431, 432, 433, 435, 456, 457, 471, 472, 473, 479, 492, 499, 540, 566, 574, 580, 586, 621, 623, 628, 629, 630, 636, 639, 641, 642, 660, 662, 663, 673, 675, 697, 699, 711, 714, 739, 740, 758, 759, 780, 783, 785, 797, 800, 809, 811, 824, 860, 872, 888, 893, 895, 901, 905, 907, 910, 913, 915, 920, 921, 927, 932, 939, 940, 941, 945, 946, 947, 949, 950, 953, 965, 972, 973, 974, 975, 976, 988, 989, 990, 998, 1029, 1059, 1060, 1061, 1062, 1073, 1313, 1326, 1331, 1336, 1339, 1346, 1367, 1382, 1395, 1399, 1404, 1408, 1414, 1415, 1421, 1422, 1426, 1429, 1430, 1431, 1433, 1437, 1439, 1443, 1444, 1449, 1453, 1458, 1465, 1473, 1474, 1475], "erf": [370, 371, 1116, 1117, 1135, 1142], "erf_inv": 1447, "erfc": [508, 1115, 1117, 1142], "erfinv": [1115, 1116], "ergo": 1457, "ergonom": 1454, "err": [119, 120, 121, 1315, 1333, 1334, 1462], "err_msg": [1258, 1259], "erron": 1129, "error": [13, 57, 76, 99, 101, 102, 113, 114, 119, 120, 121, 182, 184, 219, 235, 248, 249, 296, 328, 331, 349, 357, 369, 370, 371, 372, 373, 375, 397, 411, 412, 424, 445, 446, 455, 469, 476, 482, 483, 508, 568, 588, 600, 660, 665, 716, 729, 794, 845, 846, 853, 855, 875, 882, 885, 897, 923, 940, 971, 972, 998, 1012, 1074, 1099, 1104, 1105, 1106, 1115, 1116, 1117, 1239, 1258, 1259, 1280, 1313, 1315, 1319, 1321, 1324, 1326, 1327, 1331, 1332, 1334, 1335, 1336, 1339, 1341, 1343, 1348, 1349, 1350, 1352, 1356, 1357, 1360, 1382, 1385, 1386, 1399, 1410, 1414, 1415, 1417, 1419, 1423, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1435, 1437, 1440, 1443, 1444, 1445, 1447, 1449, 1452, 1454, 1455, 1457, 1458, 1462, 1464, 1465, 1467, 1469, 1470, 1474], "error_messag": 1343, "errorcategori": 121, "erroreffect": 115, "escap": [1342, 1415, 1417, 1424, 1449], "escaped_tracer_error": [1326, 1424], "especi": [67, 568, 1123, 1326, 1334, 1349, 1412, 1413, 1415, 1419, 1424, 1425, 1443, 1452, 1457, 1470], "essenc": [1313, 1411, 1420, 1423, 1433, 1441], "essenti": [85, 434, 539, 560, 580, 760, 1273, 1313, 1318, 1320, 1348, 1349, 1414, 1415, 1416, 1417, 1418, 1422, 1430, 1431, 1432, 1433, 1436, 1437, 1443, 1444, 1452, 1455, 1466, 1469], "establish": [1353, 1418, 1464], "estim": [235, 641, 800, 1092, 1098, 1103, 1106, 1196, 1203, 1315, 1325, 1328, 1353, 1367, 1405, 1437, 1445, 1447], "estimate_cost": 1447, "et": 1402, "etc": [0, 10, 99, 120, 182, 289, 860, 919, 1012, 1284, 1302, 1319, 1326, 1328, 1337, 1342, 1346, 1348, 1349, 1350, 1385, 1400, 1405, 1409, 1414, 1416, 1418, 1419, 1425, 1427, 1432, 1436, 1437, 1440, 1444, 1447, 1449, 1464, 1469, 1474], "ethernet": 1431, "etil": [1353, 1463], "euclidean": [1058, 1313, 1437], "eval": [493, 1318, 1328, 1419], "eval_atom": 1319, "eval_jaxpr": [1318, 1319, 1436], "eval_jaxpr_transpos": 1318, "eval_shap": 63, "eval_trac": 1430, "evalinterpret": 1319, "evaltrac": [1318, 1326, 1430], "evalu": [3, 4, 67, 76, 113, 114, 121, 289, 290, 293, 295, 297, 305, 306, 422, 434, 463, 479, 492, 493, 559, 560, 564, 667, 729, 757, 760, 762, 771, 797, 800, 877, 879, 881, 883, 884, 887, 914, 930, 972, 1074, 1091, 1092, 1093, 1135, 1145, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1261, 1275, 1302, 1303, 1313, 1317, 1319, 1323, 1328, 1331, 1333, 1334, 1336, 1346, 1354, 1374, 1417, 1419, 1420, 1421, 1430, 1431, 1432, 1433, 1434, 1438, 1442, 1443, 1444, 1466], "even": [67, 98, 101, 119, 206, 262, 283, 303, 356, 403, 424, 456, 492, 499, 683, 688, 692, 693, 716, 772, 873, 882, 885, 887, 902, 911, 916, 930, 1082, 1102, 1104, 1105, 1257, 1258, 1259, 1312, 1313, 1315, 1317, 1318, 1323, 1326, 1328, 1329, 1331, 1334, 1336, 1339, 1341, 1343, 1346, 1348, 1349, 1350, 1352, 1356, 1395, 1405, 1410, 1411, 1412, 1414, 1415, 1417, 1418, 1419, 1421, 1424, 1427, 1432, 1433, 1434, 1436, 1437, 1440, 1443, 1444, 1448, 1449, 1452, 1455, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1468, 1474, 1475], "evenli": [568, 586, 662, 727, 739, 815, 827, 916, 937, 988, 1415, 1443, 1453, 1460], "event": [160, 1003, 1004, 1005, 1019, 1328, 1360], "event_nam": 1005, "eventu": [102, 1319, 1326, 1412, 1415, 1416, 1430, 1440, 1448, 1457, 1463], "ever": [160, 235, 381, 457, 1313, 1318, 1427, 1437, 1452, 1456, 1457], "everi": [67, 88, 89, 206, 432, 500, 921, 946, 947, 972, 998, 1318, 1328, 1331, 1334, 1339, 1341, 1342, 1349, 1382, 1416, 1417, 1419, 1421, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1436, 1440, 1449, 1452, 1457, 1458, 1463, 1465, 1468, 1474], "everyon": [1329, 1448, 1452], "everyth": [67, 1316, 1318, 1321, 1328, 1339, 1354, 1358, 1417, 1421, 1423, 1424, 1431, 1435, 1438, 1442, 1443, 1448, 1464, 1468, 1474], "everything_sav": [1354, 1438], "everywher": [98, 1313, 1334, 1349, 1414, 1421, 1425, 1437, 1470], "evict": [1326, 1463], "eviction_polici": [155, 185, 186], "evid": 1448, "evidenc": 1414, "evolut": [1343, 1415, 1443], "evolv": [456, 1316, 1343, 1349, 1355, 1415], "ex": 166, "ex1": 1424, "exact": [492, 508, 729, 1081, 1104, 1105, 1122, 1316, 1326, 1342, 1346, 1352, 1353, 1402, 1414, 1445, 1452], "exactli": [303, 304, 425, 426, 427, 432, 433, 434, 435, 481, 911, 916, 924, 998, 1313, 1318, 1319, 1333, 1336, 1341, 1348, 1349, 1350, 1352, 1399, 1412, 1415, 1421, 1422, 1424, 1426, 1428, 1431, 1436, 1437, 1440, 1443, 1449, 1452, 1455, 1458, 1460, 1462, 1463, 1474, 1475], "examin": [195, 1313, 1433], "examine_jaxpr": 1436, "exampl": [0, 10, 13, 67, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 92, 95, 98, 99, 107, 113, 114, 119, 120, 121, 127, 136, 137, 172, 173, 183, 194, 195, 234, 238, 240, 251, 262, 264, 283, 285, 289, 290, 296, 297, 303, 305, 306, 311, 315, 316, 328, 335, 337, 343, 344, 345, 362, 363, 364, 365, 366, 367, 378, 380, 381, 387, 398, 415, 421, 422, 423, 426, 433, 434, 450, 454, 456, 457, 471, 472, 479, 484, 486, 487, 492, 493, 498, 499, 500, 501, 502, 504, 515, 517, 518, 519, 520, 521, 522, 523, 526, 537, 539, 540, 555, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 595, 596, 597, 598, 599, 600, 601, 602, 606, 608, 609, 610, 612, 613, 614, 615, 616, 617, 619, 621, 622, 623, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 716, 717, 719, 721, 722, 723, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 749, 750, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 1003, 1004, 1005, 1012, 1023, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1107, 1108, 1149, 1218, 1238, 1239, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1297, 1298, 1299, 1304, 1308, 1312, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1328, 1329, 1331, 1332, 1333, 1334, 1337, 1338, 1340, 1342, 1343, 1346, 1349, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1366, 1367, 1368, 1373, 1374, 1382, 1386, 1387, 1395, 1399, 1402, 1404, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1418, 1419, 1420, 1422, 1423, 1425, 1427, 1429, 1430, 1432, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1447, 1448, 1452, 1453, 1454, 1457, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1473, 1475], "example_arg": 69, "example_contain": 1465, "example_fun": 1331, "example_kernel": 1458, "example_librari": [1316, 1326, 1359], "example_tre": 1474, "exce": [1328, 1353, 1441, 1457], "excel": [1320, 1418, 1437, 1458], "except": [73, 77, 80, 99, 116, 120, 178, 202, 249, 266, 304, 305, 306, 338, 380, 415, 434, 499, 506, 537, 538, 553, 565, 574, 629, 630, 634, 695, 774, 800, 1012, 1313, 1318, 1319, 1326, 1328, 1331, 1333, 1334, 1335, 1336, 1339, 1341, 1342, 1346, 1350, 1354, 1358, 1360, 1395, 1412, 1414, 1419, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1440, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1462, 1463, 1465, 1466, 1470, 1471], "exchang": 150, "excit": 1444, "exclud": [727, 815, 827, 987, 1024, 1040, 1041, 1203, 1339, 1443], "exclude_pattern": 1339, "exclus": [322, 323, 324, 325, 335, 378, 568, 1048, 1054, 1319, 1326, 1410, 1415, 1417, 1458], "exdb": 1435, "execut": [10, 69, 98, 99, 119, 131, 160, 174, 182, 183, 188, 189, 192, 194, 262, 265, 283, 286, 296, 339, 415, 424, 503, 504, 650, 860, 918, 946, 998, 1005, 1006, 1008, 1012, 1256, 1313, 1315, 1317, 1318, 1322, 1324, 1326, 1328, 1331, 1333, 1334, 1336, 1337, 1339, 1340, 1343, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1360, 1382, 1395, 1402, 1405, 1411, 1412, 1413, 1417, 1418, 1419, 1421, 1424, 1429, 1430, 1432, 1433, 1434, 1436, 1437, 1441, 1443, 1444, 1447, 1448, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1463, 1464, 1466, 1469, 1470, 1475], "execute_compil": 1318, "execution_devic": 192, "execution_platform": 424, "exercis": [1350, 1413, 1448, 1458, 1460, 1469], "exhaust": 1475, "exhibit": [1098, 1417], "exist": [69, 83, 107, 303, 403, 453, 501, 610, 623, 629, 630, 663, 740, 800, 913, 941, 965, 989, 1082, 1091, 1135, 1273, 1313, 1318, 1326, 1333, 1339, 1343, 1353, 1356, 1373, 1404, 1410, 1414, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1426, 1427, 1432, 1433, 1434, 1443, 1448, 1449, 1452, 1469], "exist_ok": 1353, "existenti": 1318, "exit": [235, 1336, 1350, 1419, 1458], "exot": 499, "exp": [160, 296, 373, 375, 411, 505, 507, 533, 534, 545, 672, 674, 708, 729, 805, 817, 821, 822, 1036, 1038, 1055, 1056, 1074, 1136, 1138, 1140, 1147, 1149, 1205, 1206, 1221, 1222, 1313, 1343, 1346, 1349, 1386, 1418, 1429, 1430, 1433, 1436, 1440, 1444, 1445, 1449, 1457], "exp1": [1119, 1121], "exp2": [372, 671, 674, 708, 822, 1343], "exp_mesh": 1386, "exp_multi": 1343, "exp_p": 1436, "exp_profil": 1353, "exp_singl": 1343, "exp_static_k": 1346, "exp_unsaf": 1343, "expa_1": 1074, "expa_2": 1074, "expand": [201, 673, 1313, 1326, 1329, 1350, 1422, 1433], "expand_dim": [450, 940, 1012, 1318, 1350], "expans": [1123, 1135], "expect": [131, 146, 190, 262, 263, 267, 283, 284, 291, 292, 527, 580, 650, 719, 729, 864, 923, 971, 972, 987, 1012, 1313, 1316, 1319, 1325, 1326, 1331, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1360, 1373, 1409, 1412, 1413, 1419, 1420, 1422, 1424, 1425, 1426, 1432, 1433, 1437, 1440, 1443, 1444, 1445, 1447, 1452, 1454, 1455, 1457, 1458, 1460, 1462, 1463, 1470, 1471, 1474, 1475], "expectnotimplementederror": 1360, "expedi": 1417, "expens": [67, 114, 697, 920, 1257, 1258, 1259, 1325, 1334, 1341, 1412, 1417, 1429, 1431, 1441, 1448, 1452, 1457, 1464], "expensiveto": 1328, "experi": [1313, 1326, 1352, 1354, 1385, 1395, 1414, 1416, 1419, 1434, 1438, 1460, 1464, 1475], "experiment": [81, 83, 84, 94, 97, 296, 302, 397, 404, 452, 453, 456, 487, 491, 496, 502, 503, 504, 666, 998, 1001, 1002, 1012, 1023, 1313, 1326, 1342, 1344, 1348, 1349, 1350, 1353, 1356, 1357, 1359, 1366, 1399, 1402, 1410, 1415, 1416, 1418, 1419, 1425, 1429, 1431, 1433, 1434, 1440, 1447, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463], "experimental_cpp_jit": 1326, "experimental_cpp_pjit": 1326, "experimental_cpp_pmap": 1326, "expert": [1443, 1449], "expi": [1118, 1121], "expir": 1356, "expit": [1326, 1419, 1445], "explain": [61, 244, 268, 1313, 1339, 1341, 1346, 1350, 1358, 1360, 1374, 1404, 1410, 1419, 1424, 1429, 1437, 1449, 1452, 1463, 1474], "explan": [83, 131, 268, 1012, 1320, 1326, 1328, 1349, 1463, 1474], "explanatori": [1435, 1442], "explicit": [69, 98, 121, 337, 499, 539, 623, 629, 630, 634, 663, 666, 740, 809, 941, 950, 989, 1012, 1256, 1313, 1314, 1315, 1318, 1319, 1326, 1342, 1346, 1349, 1402, 1404, 1405, 1410, 1412, 1415, 1417, 1418, 1421, 1422, 1423, 1425, 1426, 1430, 1433, 1441, 1443, 1444, 1448, 1458, 1471, 1473], "explicit_ax": 1440, "explicit_g": 1440, "explicit_mesh": 1468, "explicitli": [13, 93, 195, 219, 262, 283, 397, 401, 499, 558, 601, 606, 608, 719, 735, 736, 793, 843, 940, 943, 1012, 1077, 1104, 1105, 1106, 1275, 1304, 1318, 1319, 1323, 1328, 1334, 1337, 1339, 1342, 1343, 1346, 1348, 1349, 1350, 1356, 1357, 1385, 1405, 1410, 1411, 1412, 1416, 1419, 1420, 1421, 1422, 1426, 1430, 1431, 1432, 1434, 1440, 1441, 1443, 1444, 1448, 1449, 1452, 1458, 1462, 1466, 1468, 1469, 1470, 1473], "explod": 1333, "exploit": [439, 683, 688, 1313, 1415, 1417, 1421, 1431, 1433, 1443, 1462], "explor": [235, 1318, 1322, 1337, 1340, 1412, 1414, 1418, 1422, 1429, 1441, 1449, 1468], "expm": [1073, 1074, 1088], "expm1": [412, 671, 672, 819], "expm_a": 1073, "expm_frechet": 1072, "expm_frechet_a": 1073, "expm_frechet_ae2": 1073, "expma": 1073, "expma2": 1073, "expn": [1118, 1119], "expon": [389, 430, 566, 697, 708, 715, 779, 797, 890, 1072, 1074, 1326, 1426], "exponent": [372, 373, 375, 411], "exponent_bit": [444, 1354], "exponenti": [318, 319, 372, 373, 375, 505, 507, 534, 541, 671, 672, 674, 708, 742, 779, 817, 822, 890, 938, 939, 1072, 1073, 1074, 1118, 1119, 1121, 1131, 1133, 1138, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1313, 1326, 1367, 1429, 1433], "exponential_decai": 1367, "exponential_minus_on": 375, "export": [717, 1314, 1315, 1326, 1339, 1346, 1353, 1358, 1359, 1402, 1405, 1409, 1414, 1431, 1463, 1464], "export_devic": 1343, "export_ignore_forward_compat": 1360, "export_mesh": 1343, "export_test": 1343, "expos": [452, 726, 1312, 1316, 1326, 1328, 1334, 1350, 1412, 1416, 1427, 1448, 1449, 1452, 1455, 1457, 1461, 1464], "expr": 1411, "express": [10, 61, 67, 113, 194, 241, 251, 304, 375, 381, 412, 457, 566, 666, 746, 860, 917, 998, 1256, 1313, 1316, 1318, 1319, 1320, 1326, 1331, 1334, 1336, 1339, 1341, 1342, 1346, 1349, 1351, 1354, 1386, 1404, 1411, 1414, 1415, 1416, 1418, 1419, 1421, 1424, 1426, 1427, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1444, 1448, 1449, 1455, 1456, 1460, 1462, 1467, 1470, 1473, 1474], "ext": 1339, "extend": [539, 1101, 1102, 1124, 1279, 1280, 1281, 1282, 1283, 1318, 1326, 1347, 1348, 1349, 1359, 1360, 1417, 1421, 1422, 1428, 1432, 1436, 1448, 1450, 1452, 1474], "extend_axis_env_nd": 1326, "extendeddtyp": [104, 106, 142, 348, 1425], "extendnamestackcontextmanag": 504, "extens": [106, 773, 918, 919, 1102, 1312, 1316, 1326, 1330, 1350, 1356, 1360, 1378, 1387, 1408, 1414, 1417, 1428, 1435, 1449, 1454, 1456, 1465], "extern": [83, 99, 101, 102, 131, 264, 285, 716, 1012, 1312, 1326, 1333, 1342, 1343, 1349, 1350, 1353, 1386, 1414, 1416, 1418, 1432, 1464], "external_arrai": [101, 716], "external_ip": 1431, "externalip": 1431, "extra": [67, 263, 265, 267, 284, 286, 343, 502, 877, 898, 914, 965, 998, 1093, 1149, 1280, 1282, 1304, 1313, 1318, 1326, 1328, 1339, 1341, 1343, 1356, 1395, 1402, 1409, 1411, 1416, 1422, 1424, 1427, 1432, 1440, 1444, 1448, 1449, 1457, 1460, 1463, 1464, 1466, 1468], "extract": [69, 206, 221, 336, 340, 345, 381, 386, 437, 628, 651, 699, 788, 864, 895, 896, 902, 946, 947, 972, 973, 974, 975, 976, 1350, 1353, 1367, 1412, 1430, 1435, 1452, 1462, 1470, 1474], "extran": 1328, "extrapol": 757, "extrem": [1343, 1354, 1432, 1438, 1460], "ey": [743, 786, 793, 803, 804, 807, 810, 1070, 1077, 1083, 1085, 1089, 1313, 1318, 1437, 1444], "eyebal": 1319, "ezd": 1415, "f": [0, 69, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 98, 113, 114, 119, 120, 121, 127, 184, 194, 238, 267, 272, 290, 293, 295, 303, 311, 315, 316, 357, 415, 422, 434, 456, 492, 493, 501, 503, 628, 634, 719, 729, 759, 783, 816, 901, 902, 907, 918, 930, 959, 998, 1005, 1015, 1016, 1017, 1020, 1021, 1024, 1025, 1026, 1029, 1030, 1031, 1032, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1055, 1056, 1098, 1101, 1102, 1103, 1154, 1155, 1159, 1161, 1163, 1164, 1165, 1166, 1170, 1172, 1177, 1179, 1181, 1182, 1185, 1187, 1192, 1194, 1205, 1206, 1207, 1208, 1210, 1211, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1228, 1230, 1233, 1234, 1236, 1237, 1240, 1241, 1244, 1246, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1267, 1268, 1275, 1279, 1280, 1281, 1284, 1291, 1292, 1303, 1304, 1313, 1315, 1318, 1319, 1320, 1323, 1326, 1327, 1331, 1333, 1334, 1335, 1336, 1339, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1360, 1373, 1374, 1382, 1385, 1386, 1399, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1419, 1421, 1422, 1423, 1424, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1441, 1443, 1444, 1448, 1449, 1452, 1455, 1458, 1460, 1462, 1463, 1465, 1466, 1468, 1470, 1473, 1474], "f0": [664, 1374], "f1": [67, 479, 664, 998, 1346, 1348, 1354, 1374, 1415, 1417, 1438, 1443], "f16": 1426, "f16_f16_f16": [1328, 1395], "f16_f16_f32": [1328, 1395], "f1_better": 1417, "f1_transpos": 1417, "f2": [67, 479, 664, 998, 1348, 1354, 1374, 1415, 1417, 1431, 1438, 1443, 1473], "f2e2c413b437": 1432, "f2f2f2f2f2f2f2f2f2f2f4f2f4f8c8c16f2f2c8": 1473, "f3": [1354, 1415, 1438, 1443], "f32": [305, 501, 1313, 1318, 1324, 1343, 1346, 1350, 1354, 1360, 1411, 1415, 1417, 1426, 1429, 1430, 1433, 1436, 1438, 1440, 1443, 1455, 1460, 1470], "f32_f32_f32": [1328, 1395], "f32type": 1318, "f4": [616, 1354, 1415, 1417, 1438, 1443], "f4_better": 1417, "f4_transpos": 1417, "f4f4f4f4f4f4f4f4f4f4f4f4f4f8c8c16f4f4c8": 1473, "f5": [1415, 1417, 1443], "f510dde58e22": 1438, "f5_transpos": 1417, "f6": 1443, "f64": [235, 1318, 1326, 1426], "f64_f64_f64": [1328, 1395], "f64type": 1318, "f7": 1443, "f8": [616, 664, 1443], "f811": 1318, "f8f8f8f8f8f8f8f8f8f8f8f8f8f8c16c16f8f8c16": 1473, "f9": 1443, "f_": [84, 1153, 1157, 1158, 1160, 1162, 1167, 1169, 1171, 1174, 1175, 1176, 1178, 1180, 1183, 1184, 1186, 1189, 1190, 1191, 1193, 1195, 1204, 1209, 1212, 1217, 1225, 1227, 1229, 1232, 1235, 1242, 1243, 1245, 1247, 1248, 1354, 1438], "f_0": 1374, "f_1": 1374, "f_bwd": [73, 80, 81, 1313, 1354, 1419, 1433, 1438], "f_bwd2": [1354, 1438], "f_check": 1334, "f_checkpoint": [1354, 1438], "f_checkpoint_grad": [1354, 1438], "f_contract": 1468, "f_dce_rul": 127, "f_elementwis": 1468, "f_elementwise_shard": 1468, "f_ex": 1434, "f_flat": 1318, "f_fwd": [73, 80, 81, 1313, 1419, 1433], "f_grad_bad": [1354, 1438], "f_grad_bad2": [1354, 1438], "f_host": 1348, "f_inv": 1436, "f_jaxpr1": 1318, "f_jaxpr2": 1318, "f_jit": [1318, 1323], "f_jit_correct": 1429, "f_jvp": [77, 78, 493, 1258, 1313, 1318, 1419, 1433], "f_k": 1374, "f_lin": 1318, "f_lin_flat": 1318, "f_nre": 1318, "f_out_uk": 1318, "f_part1": 1443, "f_part2": 1443, "f_primit": 1419, "f_shmap": 1443, "f_shmapped_ref": 1443, "f_sp": 1385, "f_transform": 267, "f_transpos": 492, "f_vjp": [1258, 1259, 1303, 1313, 1318, 1354, 1419, 1433, 1437, 1438], "f_vjp_checkpoint": [1354, 1438], "f_vjp_flat": 1318, "f_vmap_rul": 73, "fab": 1326, "face": [1318, 1319, 1355, 1414, 1426, 1439], "facil": [1343, 1452], "facilit": [235, 1326], "fact": [533, 545, 1136, 1147, 1313, 1316, 1318, 1333, 1336, 1346, 1349, 1360, 1411, 1414, 1415, 1417, 1418, 1419, 1425, 1429, 1431, 1437, 1443, 1448, 1456, 1457, 1458, 1473], "facto": 1420, "factor": [67, 236, 343, 344, 345, 346, 347, 399, 400, 404, 409, 529, 534, 539, 550, 598, 784, 981, 1041, 1066, 1067, 1068, 1079, 1080, 1082, 1086, 1138, 1140, 1149, 1326, 1353, 1373, 1418, 1425, 1443, 1455, 1458, 1462], "factori": [1081, 1124, 1135], "fail": [69, 119, 120, 121, 395, 397, 650, 923, 971, 1092, 1258, 1259, 1326, 1328, 1331, 1332, 1333, 1334, 1339, 1342, 1346, 1348, 1352, 1356, 1414, 1418, 1424, 1426, 1429, 1430, 1435, 1452, 1464, 1465, 1470], "fail_messag": 134, "failedcheckerror": [117, 119, 121, 126], "failur": [120, 197, 199, 395, 1326, 1329, 1339, 1346, 1419, 1452, 1462], "fair": [1323, 1429], "fairli": [1318, 1412, 1415, 1418, 1449, 1455, 1457], "fake": [1341, 1455, 1463], "fall": [82, 236, 337, 539, 1326, 1343, 1350, 1414, 1417, 1419, 1425, 1444, 1458], "fallback": [133, 1328, 1440], "fals": [3, 4, 8, 9, 34, 35, 36, 40, 41, 51, 53, 54, 56, 60, 61, 63, 65, 66, 67, 68, 78, 81, 82, 83, 85, 96, 101, 102, 104, 108, 119, 121, 131, 132, 133, 138, 154, 155, 158, 160, 177, 182, 194, 195, 196, 197, 206, 208, 225, 226, 229, 230, 234, 237, 238, 240, 253, 262, 283, 289, 290, 293, 294, 295, 296, 297, 303, 304, 305, 306, 311, 339, 346, 351, 352, 353, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 378, 381, 387, 391, 395, 397, 398, 403, 404, 405, 406, 407, 408, 409, 434, 456, 457, 458, 459, 460, 461, 462, 463, 491, 493, 501, 506, 508, 534, 559, 560, 561, 562, 563, 564, 579, 583, 584, 585, 587, 588, 591, 598, 616, 628, 636, 640, 641, 646, 647, 650, 657, 664, 666, 667, 668, 669, 670, 675, 677, 696, 716, 717, 721, 723, 727, 730, 731, 735, 736, 738, 746, 747, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 781, 782, 784, 794, 796, 801, 803, 807, 814, 815, 823, 824, 826, 827, 828, 832, 834, 835, 836, 837, 838, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 865, 875, 877, 878, 882, 883, 885, 892, 894, 895, 896, 897, 914, 917, 921, 923, 924, 927, 934, 942, 944, 946, 965, 972, 982, 983, 990, 991, 992, 994, 995, 996, 997, 999, 1009, 1011, 1019, 1022, 1045, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1077, 1078, 1079, 1080, 1083, 1086, 1087, 1089, 1098, 1101, 1102, 1103, 1122, 1138, 1218, 1239, 1261, 1262, 1263, 1264, 1266, 1268, 1273, 1278, 1288, 1290, 1292, 1298, 1302, 1303, 1315, 1318, 1319, 1320, 1326, 1328, 1331, 1335, 1337, 1339, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1360, 1367, 1382, 1395, 1405, 1410, 1411, 1413, 1414, 1415, 1424, 1425, 1430, 1432, 1434, 1435, 1437, 1438, 1441, 1443, 1458, 1460, 1463, 1470, 1471, 1475], "false_bodi": 1411, "false_branch": 1318, "false_const": 1318, "false_fn": [1318, 1333, 1336], "false_fun": [339, 1318, 1331], "false_jaxpr": 1318, "falsei": [1410, 1424], "famili": [1346, 1439], "familiar": [262, 283, 458, 459, 460, 461, 462, 1072, 1313, 1348, 1349, 1350, 1355, 1385, 1411, 1415, 1417, 1423, 1430, 1433, 1437, 1443, 1444, 1449, 1458], "familiari": 457, "familiaris": 1452, "famous": 1440, "fan": 1368, "fan_avg": [518, 519, 529], "fan_geo_avg": 529, "fan_in": [520, 521, 522, 523, 529], "fan_out": 529, "fanci": 1358, "faninconcat": 1368, "faninsum": 1368, "fanout": 1368, "faq": [13, 96, 296, 990, 998, 1322, 1323, 1382, 1424, 1434], "far": [1313, 1318, 1319, 1349, 1350, 1354, 1414, 1424, 1426, 1430, 1438, 1448, 1449, 1452, 1456], "fare": 1418, "fashion": [499, 1312, 1348, 1421, 1452, 1458], "fast": [1094, 1095, 1096, 1097, 1100, 1313, 1326, 1348, 1351, 1418, 1427, 1437, 1452, 1455, 1458, 1460, 1469], "fast_count": 1469, "fast_f": 1436, "fastcach": 1326, "faster": [133, 303, 356, 1282, 1316, 1317, 1323, 1326, 1328, 1358, 1395, 1413, 1429, 1444, 1457, 1458, 1460], "fastest": [92, 343, 800, 1313, 1328, 1395, 1402, 1434, 1437, 1452, 1456], "fastpath": 1326, "fatal": [1326, 1328, 1415], "faulti": 1414, "favor": [235, 1326, 1343, 1348, 1352, 1414, 1418, 1420, 1426, 1457], "favorit": [1329, 1350], "fa\u00e0": 1374, "fb": 959, "fc0ed1c14b8d": 1438, "fct": 1360, "fd": 1435, "fdo_profil": [491, 1353], "feasibl": 1337, "feat": 1443, "featur": [61, 94, 97, 244, 296, 343, 344, 456, 496, 998, 1001, 1002, 1008, 1312, 1315, 1316, 1318, 1320, 1325, 1326, 1328, 1337, 1338, 1339, 1340, 1343, 1346, 1350, 1362, 1366, 1367, 1368, 1386, 1395, 1401, 1410, 1411, 1414, 1415, 1416, 1418, 1424, 1425, 1426, 1429, 1434, 1440, 1441, 1442, 1443, 1444, 1452, 1456, 1457, 1458, 1459, 1462, 1463, 1464, 1468, 1472], "feature_group_count": 343, "feature_length": 499, "februari": 1343, "fed": [132, 133, 1313, 1353, 1417, 1437], "feed": [1313, 1353, 1417, 1444, 1466], "feedback": [491, 1315, 1329], "feel": [1414, 1437], "fenchel": 548, "fetch": [498, 1329, 1418, 1431, 1442, 1455, 1456, 1462, 1471], "fetch_a_b": 1452, "few": [380, 501, 568, 600, 633, 696, 746, 917, 981, 987, 1094, 1095, 1096, 1097, 1100, 1313, 1318, 1320, 1326, 1329, 1334, 1336, 1339, 1342, 1346, 1350, 1352, 1353, 1358, 1374, 1385, 1395, 1399, 1414, 1415, 1418, 1419, 1420, 1422, 1425, 1426, 1431, 1432, 1433, 1435, 1437, 1442, 1443, 1444, 1448, 1452, 1455, 1456, 1460, 1462, 1463, 1470, 1474], "fewer": [758, 864, 880, 886, 923, 924, 971, 972, 973, 974, 975, 976, 998, 1022, 1104, 1105, 1106, 1415, 1419, 1424, 1443, 1460], "ff": 1415, "ffi": [1305, 1326, 1359], "ffi_cal": [127, 263, 284, 1326, 1350], "ffi_low": 1326, "ffilayoutopt": [262, 263, 283, 284], "fft": [1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1313, 1326, 1373, 1395, 1437], "fft2": [685, 1326], "fft_length": 376, "fft_type": 376, "fftfreq": [682, 687, 694, 1326], "fftn": [678, 679, 684, 686, 1326], "fftshift": 687, "ffttype": [376, 1326, 1395], "fidel": 1326, "field": [81, 187, 249, 345, 529, 616, 664, 1279, 1312, 1315, 1318, 1326, 1339, 1343, 1367, 1411, 1414, 1447, 1474], "fig": [1426, 1439], "figsiz": [1426, 1439, 1445], "figur": [1318, 1340, 1341, 1432, 1439, 1445, 1448, 1455, 1462, 1468], "file": [182, 718, 816, 918, 919, 999, 1007, 1009, 1011, 1318, 1319, 1326, 1329, 1331, 1335, 1337, 1339, 1343, 1349, 1350, 1353, 1358, 1360, 1408, 1410, 1414, 1418, 1424, 1428, 1430, 1431, 1432, 1435, 1442, 1457, 1463, 1464, 1470, 1475], "file1": 1329, "file2": 1329, "filelock": 1435, "filenam": [918, 919, 1007], "filepath": 1475, "filesystem": [1328, 1463], "fill": [10, 216, 236, 250, 251, 379, 380, 381, 407, 431, 457, 458, 459, 460, 461, 462, 516, 580, 628, 654, 675, 696, 697, 723, 724, 758, 860, 864, 873, 878, 906, 923, 924, 946, 947, 955, 971, 972, 973, 974, 975, 976, 1091, 1095, 1097, 1326, 1342, 1346, 1395, 1426, 1432, 1434, 1453, 1455], "fill_diagon": 1326, "fill_or_drop": [1326, 1395], "fill_valu": [10, 14, 39, 56, 208, 379, 380, 381, 580, 628, 675, 699, 723, 724, 758, 860, 864, 923, 924, 946, 947, 971, 972, 973, 974, 975, 976, 990, 1064, 1326, 1425, 1432], "fillvalu": [1095, 1097], "filt": 959, "filter": [82, 291, 292, 506, 1326, 1353, 1418, 1439], "filter_fram": 82, "filter_shap": [344, 345, 1368], "final": [174, 212, 361, 378, 403, 450, 456, 486, 610, 895, 906, 1082, 1092, 1123, 1304, 1308, 1313, 1319, 1326, 1329, 1334, 1341, 1342, 1373, 1402, 1414, 1415, 1416, 1419, 1421, 1429, 1430, 1431, 1433, 1436, 1440, 1443, 1448, 1452, 1455, 1456, 1459, 1462, 1467, 1468], "final_b": [1435, 1442], "final_qdd": 258, "final_step_s": 1367, "final_w": [1435, 1442], "find": [69, 235, 296, 357, 484, 576, 577, 578, 580, 657, 793, 845, 846, 874, 883, 887, 914, 920, 936, 972, 1019, 1073, 1077, 1306, 1307, 1309, 1310, 1313, 1325, 1326, 1339, 1348, 1349, 1356, 1382, 1414, 1416, 1425, 1426, 1429, 1433, 1440, 1444, 1448, 1452, 1464, 1469], "find_top_trac": 1318, "fine": [140, 1329, 1331, 1339, 1350, 1353, 1417, 1419, 1426, 1427, 1428, 1454, 1464, 1469, 1474], "finer": [499, 1427, 1430, 1432], "finfo": [421, 803, 936], "finish": [172, 177, 998, 1318, 1382, 1412, 1431, 1443, 1455, 1458, 1464], "finit": [712, 713, 729, 764, 766, 767, 768, 769, 833, 839, 1257, 1258, 1259, 1319, 1320, 1326, 1349, 1437, 1444], "first": [67, 74, 76, 78, 81, 83, 84, 85, 106, 121, 135, 160, 172, 206, 268, 288, 289, 290, 293, 295, 297, 303, 304, 311, 343, 344, 361, 363, 366, 399, 409, 415, 425, 426, 427, 433, 434, 435, 456, 473, 493, 498, 500, 501, 539, 560, 583, 584, 600, 615, 633, 637, 655, 656, 660, 664, 676, 699, 725, 742, 758, 760, 777, 778, 795, 800, 809, 829, 871, 881, 884, 890, 898, 906, 921, 923, 924, 935, 939, 945, 950, 952, 957, 961, 965, 971, 972, 973, 974, 975, 976, 981, 984, 989, 998, 1016, 1075, 1090, 1091, 1094, 1095, 1096, 1097, 1100, 1109, 1132, 1133, 1139, 1140, 1263, 1264, 1267, 1268, 1278, 1280, 1282, 1302, 1303, 1304, 1312, 1313, 1315, 1318, 1319, 1320, 1321, 1323, 1326, 1328, 1329, 1331, 1332, 1333, 1339, 1340, 1341, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1357, 1358, 1360, 1367, 1373, 1374, 1402, 1404, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1426, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1474], "first_finite_differ": 1444, "first_param": 1443, "fist": 1466, "fit": [366, 367, 499, 879, 883, 887, 914, 1099, 1318, 1325, 1341, 1382, 1385, 1410, 1421, 1426, 1431, 1449, 1455, 1456, 1458, 1462, 1469], "fit_logreg": 1385, "fit_logreg_sp": 1385, "five": 1326, "fix": [98, 378, 456, 486, 540, 568, 619, 664, 710, 714, 890, 916, 939, 964, 1091, 1093, 1313, 1316, 1318, 1319, 1329, 1331, 1340, 1342, 1346, 1349, 1352, 1395, 1411, 1413, 1417, 1418, 1420, 1423, 1433, 1434, 1437, 1440, 1443, 1447, 1448, 1449, 1452, 1455, 1458, 1462, 1469], "fix_import": 918, "fixed_point": [1313, 1419, 1433], "fixed_point_fwd": [1313, 1433], "fixed_point_rev": [1313, 1433], "flag": [67, 81, 111, 112, 160, 397, 404, 491, 664, 668, 717, 869, 909, 918, 991, 1013, 1033, 1314, 1316, 1326, 1328, 1329, 1339, 1342, 1343, 1348, 1350, 1357, 1402, 1410, 1413, 1414, 1416, 1424, 1425, 1432, 1434, 1446, 1448, 1463, 1464, 1467, 1471, 1473], "flag1": 1475, "flag2": 1475, "flash": 506, "flashattent": 1452, "flat": [502, 615, 898, 902, 978, 1276, 1318, 1386, 1435, 1436, 1465], "flat_fun": 1318, "flatbuff": [1326, 1343], "flatnonzero": 864, "flatten": [25, 42, 182, 288, 290, 345, 565, 576, 577, 579, 628, 640, 644, 645, 654, 665, 675, 696, 699, 750, 758, 801, 814, 835, 845, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 871, 872, 894, 895, 896, 901, 902, 906, 907, 912, 934, 940, 946, 947, 952, 972, 977, 984, 985, 1238, 1239, 1261, 1262, 1264, 1265, 1267, 1269, 1270, 1272, 1279, 1280, 1282, 1283, 1287, 1326, 1346, 1367, 1386, 1411, 1415, 1421, 1436, 1447, 1457, 1458, 1465, 1474], "flatten_and_cast": 1435, "flatten_fun": 1318, "flatten_func": [249, 1280, 1282], "flatten_pytre": 290, "flatten_util": [290, 1326, 1359], "flatten_with_kei": 1282, "flatten_with_keys_func": 1280, "flatten_with_path": [1266, 1268, 1288, 1326], "flavor": [801, 1333, 1414, 1422, 1426], "flaw": 1415, "flax": [82, 1322, 1325, 1353, 1355, 1366, 1368, 1422], "flaxform": 1413, "fledg": 1414, "flesh": 1448, "flexattent": 1462, "flexibl": [298, 429, 440, 441, 442, 443, 445, 446, 448, 664, 786, 1326, 1333, 1339, 1341, 1349, 1350, 1354, 1367, 1368, 1410, 1411, 1414, 1422, 1430, 1438, 1439, 1457, 1474, 1475], "flexibli": [416, 417], "flight": [177, 179, 1458], "flip": [346, 702, 703, 915, 1313, 1437, 1458], "fliplr": [701, 703, 915], "flipud": [701, 702, 915], "float": [9, 31, 53, 60, 87, 103, 121, 188, 235, 246, 247, 268, 289, 298, 299, 300, 305, 306, 309, 310, 312, 313, 314, 318, 319, 320, 331, 332, 336, 349, 350, 358, 369, 370, 371, 372, 373, 375, 377, 384, 385, 391, 393, 399, 403, 407, 409, 411, 412, 413, 421, 428, 430, 444, 449, 454, 455, 468, 469, 470, 473, 476, 482, 483, 489, 492, 506, 527, 529, 533, 536, 545, 547, 563, 568, 578, 579, 583, 585, 587, 591, 616, 627, 660, 669, 676, 677, 680, 694, 697, 711, 714, 715, 717, 719, 722, 723, 724, 727, 743, 748, 749, 763, 773, 776, 783, 794, 798, 800, 803, 815, 827, 829, 831, 834, 853, 855, 863, 870, 871, 874, 875, 878, 881, 882, 883, 885, 893, 895, 896, 897, 904, 905, 927, 934, 935, 936, 942, 946, 947, 950, 955, 963, 983, 984, 985, 986, 992, 1014, 1015, 1016, 1017, 1020, 1021, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1071, 1082, 1091, 1093, 1095, 1097, 1099, 1104, 1105, 1106, 1122, 1136, 1142, 1143, 1147, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1300, 1313, 1318, 1319, 1326, 1328, 1337, 1339, 1346, 1348, 1349, 1350, 1360, 1367, 1395, 1409, 1413, 1421, 1424, 1430, 1432, 1433, 1440, 1444, 1449, 1453, 1455, 1457, 1460, 1470, 1473], "float0": [289, 295, 1302, 1440], "float16": [259, 539, 763, 834, 893, 1123, 1326, 1395, 1426, 1452, 1453, 1473], "float32": [10, 67, 73, 76, 78, 79, 81, 84, 92, 95, 114, 129, 168, 195, 234, 240, 244, 259, 288, 290, 336, 365, 366, 367, 386, 421, 422, 437, 454, 457, 479, 484, 492, 493, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 536, 537, 539, 540, 555, 563, 568, 569, 570, 571, 572, 573, 575, 582, 588, 591, 595, 596, 597, 598, 610, 616, 617, 619, 623, 629, 630, 633, 635, 636, 637, 639, 641, 648, 659, 663, 668, 672, 674, 676, 677, 682, 683, 687, 689, 690, 691, 696, 697, 698, 708, 710, 711, 712, 713, 714, 715, 716, 719, 722, 723, 724, 727, 734, 736, 737, 738, 740, 741, 742, 743, 745, 757, 763, 772, 773, 779, 784, 785, 786, 787, 790, 792, 793, 796, 797, 801, 803, 804, 805, 806, 807, 808, 809, 812, 814, 815, 817, 819, 820, 827, 833, 834, 835, 837, 839, 841, 844, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 862, 863, 868, 869, 875, 879, 881, 882, 884, 885, 887, 888, 890, 893, 897, 898, 899, 902, 903, 904, 905, 909, 911, 916, 926, 930, 931, 932, 936, 938, 939, 942, 946, 947, 949, 950, 954, 955, 963, 964, 981, 983, 989, 991, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1026, 1027, 1029, 1030, 1032, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1049, 1051, 1052, 1053, 1054, 1055, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1091, 1094, 1095, 1096, 1097, 1107, 1108, 1123, 1135, 1139, 1140, 1142, 1143, 1148, 1238, 1239, 1279, 1280, 1281, 1304, 1313, 1315, 1317, 1318, 1320, 1321, 1323, 1326, 1328, 1331, 1333, 1337, 1342, 1343, 1346, 1348, 1350, 1353, 1354, 1360, 1382, 1385, 1395, 1399, 1402, 1409, 1411, 1425, 1426, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1449, 1452, 1455, 1457, 1458, 1460, 1461, 1462, 1465, 1468, 1470, 1473, 1474], "float4_e2m1fn": [259, 540], "float64": [129, 130, 237, 259, 336, 386, 437, 492, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 536, 616, 661, 668, 697, 707, 717, 763, 834, 869, 893, 909, 991, 1014, 1016, 1017, 1020, 1021, 1024, 1026, 1027, 1029, 1030, 1032, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1049, 1051, 1052, 1053, 1054, 1055, 1072, 1135, 1139, 1140, 1142, 1143, 1148, 1318, 1326, 1337, 1399, 1409, 1411, 1414, 1426, 1432], "float8": [1123, 1326, 1395], "float8_": [568, 763], "float8_e3m4": 259, "float8_e4m3": 259, "float8_e4m3b11fnuz": 259, "float8_e4m3fn": [259, 540], "float8_e4m3fnuz": 259, "float8_e5m2": [259, 540], "float8_e5m2fnuz": 259, "float8_e8m0fnu": [259, 540], "float_": 536, "float_check": [121, 1333, 1334], "float_pow": [890, 939], "floatingpointerror": [1333, 1335, 1432], "floor": [332, 359, 454, 619, 659, 698, 711, 905, 916, 964, 1326], "floor_divid": [359, 659, 963, 1343, 1432], "floordiv": [251, 1326, 1343, 1346], "flop": [67, 114, 667, 800, 1313, 1315, 1326, 1354, 1417, 1433, 1437, 1438, 1443, 1455, 1460], "flow": [67, 76, 113, 415, 479, 1313, 1322, 1335, 1342, 1349, 1354, 1360, 1411, 1412, 1414, 1415, 1419, 1421, 1424, 1429, 1431, 1433, 1438, 1449, 1452, 1465, 1470, 1472], "flush": [421, 1432], "flux": 1326, "fmax": 833, "fmin": 839, "fmod": 905, "fmt": [85, 153, 1336], "fmt_arg": 119, "fmt_kwarg": 119, "fn": [264, 265, 285, 286, 311, 919, 1305, 1326, 1350, 1443], "focu": [1349, 1415, 1417, 1418, 1426, 1436, 1443, 1452, 1455, 1466], "focus": [990, 1312, 1330, 1353, 1355, 1414, 1415, 1418, 1435, 1441, 1442, 1457], "focuss": 1440, "foil": [67, 1354, 1438], "fold": [113, 998, 1028, 1315, 1319, 1326, 1382, 1416, 1424], "fold_in": [276, 277, 281, 282, 1013, 1033, 1050, 1402, 1425], "folder": [1339, 1475], "folk": 1337, "follow": [67, 69, 74, 76, 83, 84, 99, 111, 112, 291, 292, 296, 305, 306, 321, 328, 346, 357, 360, 361, 362, 364, 434, 471, 481, 506, 527, 539, 560, 569, 570, 571, 572, 573, 575, 621, 671, 672, 683, 697, 760, 836, 873, 883, 892, 895, 921, 944, 973, 974, 975, 998, 1012, 1036, 1091, 1093, 1098, 1124, 1175, 1176, 1177, 1178, 1179, 1180, 1240, 1241, 1273, 1315, 1316, 1317, 1318, 1321, 1322, 1324, 1326, 1328, 1329, 1333, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1346, 1349, 1350, 1352, 1353, 1355, 1356, 1357, 1360, 1373, 1385, 1386, 1395, 1399, 1409, 1410, 1411, 1412, 1416, 1417, 1421, 1422, 1424, 1425, 1426, 1427, 1431, 1432, 1439, 1440, 1441, 1443, 1448, 1449, 1452, 1455, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1471, 1473, 1474], "fontsiz": 1426, "foo": [67, 264, 285, 1278, 1304, 1313, 1318, 1319, 1339, 1354, 1413, 1421, 1433, 1436, 1438, 1440, 1466, 1468, 1474], "foo_dual": 1319, "foot": [1415, 1429], "footgun": [1326, 1415, 1448], "footnot": 1419, "footprint": [1336, 1352, 1452], "footstep": 1415, "for_export": 1360, "for_loop": 1457, "for_tensor_cor": 158, "foral": 1426, "forbid": [1326, 1427], "forc": [582, 1313, 1317, 1326, 1336, 1339, 1343, 1354, 1358, 1413, 1414, 1438, 1448, 1455, 1458], "force_color": 1434, "force_jupyt": [1354, 1438], "foreign": [262, 263, 265, 283, 284, 286, 1314, 1326], "foremost": 1337, "forev": 1466, "forg": [397, 1356], "forget": 1445, "fori_loop": [456, 1411, 1418, 1432, 1443, 1448, 1452, 1457, 1470], "fork": [1329, 1421, 1435, 1442, 1466], "forkpti": 1435, "form": [69, 102, 132, 136, 137, 182, 203, 204, 220, 241, 251, 290, 342, 343, 344, 356, 361, 397, 399, 409, 415, 439, 610, 615, 636, 641, 666, 736, 775, 812, 883, 898, 954, 1018, 1028, 1063, 1075, 1082, 1084, 1085, 1093, 1140, 1149, 1313, 1318, 1321, 1326, 1328, 1343, 1346, 1353, 1360, 1367, 1402, 1405, 1411, 1414, 1415, 1417, 1419, 1420, 1421, 1432, 1437, 1443, 1449, 1452, 1455, 1469], "formal": [69, 262, 283, 1319, 1326, 1420, 1460], "format": [85, 96, 102, 119, 153, 195, 201, 203, 207, 209, 210, 211, 218, 220, 222, 224, 227, 228, 231, 232, 233, 236, 498, 664, 759, 918, 919, 1006, 1313, 1326, 1328, 1334, 1336, 1339, 1340, 1343, 1348, 1360, 1385, 1386, 1402, 1416, 1418, 1419, 1430, 1433, 1435, 1437, 1442, 1445, 1457, 1458, 1460, 1462, 1465, 1474], "format_shape_dtype_str": 1326, "formatt": 759, "former": [306, 772, 1091, 1098, 1339, 1417, 1421], "formerli": 1326, "formul": 508, "formula": [1318, 1374], "forth": 69, "forthcom": 1413, "fortran": [901, 902, 907], "fortun": [1321, 1349], "forty_two_subkei": 1466, "forward": [67, 76, 80, 81, 293, 297, 346, 456, 479, 492, 493, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 913, 1257, 1326, 1333, 1334, 1336, 1350, 1351, 1353, 1354, 1356, 1395, 1413, 1414, 1415, 1418, 1419, 1422, 1425, 1427, 1438, 1441, 1443, 1444, 1448, 1452, 1464, 1468, 1469, 1474], "forward_compat_mod": 1343, "found": [397, 404, 863, 924, 1106, 1326, 1328, 1343, 1346, 1348, 1349, 1350, 1353, 1358, 1360, 1394, 1414, 1415, 1423, 1424, 1430, 1435, 1436, 1441, 1462, 1464, 1474, 1475], "foundat": 1455, "four": [99, 403, 973, 1326, 1354, 1426, 1431, 1463], "fourier": [678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1373], "fourth": 1350, "fp": 757, "frac": [395, 398, 413, 505, 506, 508, 510, 511, 529, 533, 542, 543, 544, 545, 547, 548, 549, 550, 551, 575, 636, 639, 641, 648, 742, 899, 926, 930, 932, 949, 1020, 1027, 1035, 1037, 1038, 1040, 1041, 1042, 1046, 1047, 1051, 1052, 1055, 1076, 1082, 1110, 1113, 1115, 1116, 1118, 1119, 1120, 1121, 1125, 1126, 1129, 1130, 1132, 1135, 1136, 1137, 1142, 1144, 1145, 1147, 1148, 1149, 1152, 1159, 1161, 1163, 1164, 1170, 1172, 1177, 1179, 1181, 1182, 1192, 1194, 1205, 1206, 1210, 1211, 1214, 1215, 1219, 1220, 1221, 1222, 1228, 1230, 1236, 1237, 1240, 1241, 1244, 1246, 1252, 1253, 1254, 1255, 1313, 1350, 1433], "fraction": [237, 346, 359, 591, 841, 1326], "fragment": [1326, 1352, 1424], "frame": [82, 1326, 1331, 1336, 1342, 1414, 1419, 1430, 1432, 1470], "framework": [491, 1313, 1326, 1328, 1329, 1339, 1341, 1355, 1356, 1426, 1427, 1449, 1466, 1473], "francesco": 1043, "frechet": 1073, "free": [356, 806, 994, 995, 996, 997, 1086, 1106, 1318, 1326, 1328, 1341, 1348, 1411, 1412, 1413, 1418, 1429, 1436, 1440, 1443, 1448, 1452, 1457, 1458, 1460, 1466, 1474], "freed": [1328, 1448], "freedom": [641, 856, 858, 942, 983, 1021, 1027, 1051, 1175, 1176, 1177, 1178, 1179, 1180, 1239, 1240, 1241, 1313, 1326, 1346, 1382, 1419, 1437, 1466], "freeli": [1313, 1427, 1437], "freevar": 1326, "freq": [682, 687], "freq_axi": 1101, "frequenc": [641, 657, 680, 682, 687, 694, 1098, 1101, 1102, 1103], "frequent": [1036, 1312, 1322, 1328, 1343, 1414, 1418, 1454], "fresh": [303, 1326, 1339, 1412, 1468], "fresh_var": 1319, "fresnlf": 1123, "frexp": 779, "friendli": [235, 452, 1313, 1329, 1418, 1426, 1437, 1458, 1474], "friendlier": 1326, "fro": [785, 796, 801], "frobeniu": [796, 801], "from": [11, 22, 44, 52, 56, 61, 67, 69, 81, 82, 84, 97, 101, 102, 104, 107, 113, 114, 119, 120, 121, 127, 131, 135, 136, 137, 138, 153, 155, 160, 172, 173, 174, 177, 190, 192, 194, 195, 206, 207, 215, 216, 221, 222, 224, 228, 234, 235, 238, 240, 241, 243, 244, 246, 247, 250, 251, 264, 285, 291, 292, 296, 315, 316, 321, 328, 337, 344, 345, 348, 357, 378, 380, 381, 397, 403, 406, 421, 422, 423, 424, 431, 432, 433, 449, 450, 454, 457, 458, 459, 460, 461, 462, 464, 478, 486, 491, 492, 498, 499, 500, 502, 529, 568, 578, 582, 588, 600, 610, 616, 621, 622, 636, 641, 648, 650, 651, 654, 655, 660, 664, 666, 675, 678, 679, 681, 683, 699, 716, 717, 719, 721, 722, 725, 726, 735, 736, 737, 738, 747, 750, 772, 774, 775, 778, 784, 788, 789, 791, 803, 812, 815, 816, 828, 836, 842, 845, 846, 874, 878, 879, 881, 882, 885, 893, 895, 896, 899, 902, 906, 907, 908, 918, 919, 921, 927, 940, 946, 947, 951, 952, 959, 972, 973, 974, 975, 976, 977, 981, 982, 987, 990, 994, 995, 996, 997, 998, 1005, 1012, 1014, 1019, 1022, 1025, 1028, 1029, 1030, 1039, 1040, 1043, 1047, 1050, 1056, 1058, 1061, 1062, 1065, 1068, 1074, 1085, 1091, 1093, 1099, 1101, 1104, 1105, 1106, 1107, 1108, 1124, 1128, 1142, 1143, 1196, 1203, 1244, 1246, 1256, 1257, 1258, 1259, 1267, 1271, 1272, 1274, 1275, 1277, 1279, 1282, 1283, 1299, 1303, 1304, 1312, 1313, 1315, 1317, 1320, 1322, 1323, 1326, 1327, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1344, 1348, 1349, 1350, 1352, 1353, 1354, 1357, 1358, 1360, 1367, 1368, 1373, 1374, 1382, 1385, 1386, 1395, 1398, 1399, 1402, 1404, 1407, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474], "from_": 616, "from_ansi": [1354, 1438], "from_callback": 1410, "from_children": 249, "from_dict_of_list": 1426, "from_dlpack": [582, 588, 1326], "from_eul": [1107, 1108], "from_gda": 1326, "from_it": 1318, "from_iter": 1318, "from_tensor_slic": 1341, "frombuff": [582, 588, 722, 1326], "fromdens": [195, 234, 238, 240, 1385], "fromfunct": 1326, "frompyfunc": [965, 1326], "fromstr": [717, 1326], "front": [127, 326, 423, 898, 1318, 1326, 1350, 1419, 1429, 1448], "frontend": [1396, 1416, 1449], "frontier": 1312, "frostig": 1425, "froystig": 1416, "frozen": 1360, "frozenset": [117, 118, 121, 122, 123, 124, 125, 126, 194, 253, 987, 1404, 1443], "frustrat": [1414, 1418], "fry": [281, 1402, 1425, 1444, 1466], "fspath": 1353, "fsspec": 1435, "fst": 1318, "ft": 1360, "fulfil": 1052, "full": [0, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 92, 380, 381, 395, 397, 403, 404, 406, 433, 492, 516, 525, 530, 578, 580, 610, 633, 637, 668, 669, 699, 719, 724, 807, 869, 874, 883, 906, 991, 992, 1071, 1083, 1089, 1094, 1095, 1096, 1097, 1100, 1106, 1262, 1313, 1319, 1323, 1325, 1326, 1331, 1333, 1339, 1349, 1350, 1356, 1413, 1415, 1418, 1422, 1424, 1425, 1426, 1430, 1431, 1433, 1435, 1437, 1442, 1443, 1444, 1453, 1455, 1457, 1458, 1464, 1468], "full_lik": [669, 723, 870, 992], "full_low": [1318, 1326, 1430], "full_matric": [404, 406, 807, 1089], "full_rais": 1318, "full_random_st": 1466, "full_tre": [1262, 1286], "fuller": 61, "fulli": [29, 30, 138, 487, 499, 633, 637, 1094, 1095, 1096, 1097, 1100, 1315, 1326, 1339, 1341, 1350, 1354, 1366, 1367, 1368, 1404, 1410, 1414, 1415, 1417, 1420, 1422, 1425, 1429, 1435, 1438, 1440, 1442, 1452, 1455, 1457, 1458, 1468], "fun": [67, 69, 73, 76, 77, 80, 114, 121, 127, 234, 240, 268, 270, 271, 289, 290, 293, 294, 295, 296, 297, 492, 493, 501, 503, 998, 1012, 1092, 1093, 1302, 1303, 1304, 1313, 1326, 1336, 1354, 1360, 1368, 1373, 1374, 1382, 1415, 1430, 1433, 1436, 1437, 1438, 1440, 1444], "fun_jit": 244, "fun_kwarg": 1368, "fun_nam": [244, 1343, 1386, 1405], "fun_vjp": [1313, 1437], "fun_with_nested_calls_2": 1318, "func": [205, 212, 213, 215, 357, 459, 567, 721, 916, 965, 1005, 1074, 1275, 1315, 1318, 1323, 1326, 1342, 1343, 1350, 1360, 1414, 1470], "func1": [1340, 1411], "func10": 1411, "func11": [1411, 1432], "func12": 1411, "func1d": 566, "func2": [1340, 1411], "func3": 1411, "func4": 1411, "func7": 1411, "func8": 1411, "func_dialect": 1326, "func_op": 1318, "func_wrapp": 1360, "funclist": 877, "funcptr": [264, 285], "function": [0, 10, 67, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 91, 92, 96, 98, 99, 102, 108, 113, 114, 119, 120, 121, 127, 128, 131, 132, 133, 136, 137, 155, 174, 182, 184, 194, 197, 199, 205, 237, 238, 241, 244, 248, 249, 260, 262, 263, 264, 265, 267, 268, 270, 271, 277, 281, 282, 283, 284, 285, 286, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 309, 310, 311, 312, 313, 314, 318, 319, 321, 322, 323, 324, 325, 331, 332, 334, 336, 337, 339, 340, 342, 343, 344, 346, 348, 349, 350, 356, 357, 359, 361, 363, 368, 369, 370, 371, 372, 373, 375, 377, 378, 381, 382, 383, 384, 385, 386, 391, 392, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 435, 437, 449, 453, 454, 455, 456, 457, 459, 460, 461, 463, 465, 466, 467, 468, 469, 470, 475, 476, 479, 480, 481, 482, 483, 486, 487, 489, 492, 493, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 527, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 555, 558, 560, 566, 567, 568, 574, 579, 580, 584, 587, 591, 595, 596, 597, 600, 601, 606, 608, 616, 621, 628, 629, 630, 634, 642, 657, 659, 666, 667, 670, 673, 675, 697, 699, 718, 719, 720, 721, 729, 734, 742, 757, 758, 759, 760, 762, 771, 772, 773, 788, 795, 800, 801, 802, 816, 817, 823, 825, 826, 828, 837, 843, 860, 861, 864, 865, 868, 873, 877, 882, 883, 885, 887, 893, 901, 902, 907, 913, 914, 923, 924, 925, 930, 933, 934, 940, 943, 945, 953, 965, 971, 972, 973, 974, 975, 976, 978, 981, 987, 990, 994, 995, 996, 997, 998, 1005, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1055, 1056, 1066, 1074, 1079, 1082, 1088, 1089, 1090, 1091, 1092, 1093, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1265, 1267, 1268, 1269, 1270, 1273, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1293, 1302, 1303, 1304, 1305, 1314, 1316, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1331, 1332, 1335, 1336, 1337, 1339, 1340, 1342, 1343, 1346, 1348, 1351, 1353, 1354, 1355, 1357, 1360, 1362, 1367, 1368, 1371, 1373, 1374, 1375, 1382, 1385, 1392, 1395, 1398, 1399, 1400, 1402, 1404, 1405, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1430, 1431, 1434, 1438, 1439, 1441, 1443, 1444, 1446, 1447, 1448, 1452, 1453, 1455, 1456, 1457, 1458, 1462, 1463, 1464, 1466, 1468, 1469, 1470, 1475], "functionaliz": 120, "functool": [66, 67, 114, 260, 270, 271, 296, 305, 306, 315, 316, 539, 987, 998, 1005, 1012, 1258, 1259, 1275, 1279, 1313, 1318, 1326, 1342, 1348, 1349, 1350, 1353, 1354, 1360, 1385, 1413, 1415, 1423, 1429, 1433, 1436, 1438, 1440, 1443, 1448, 1456, 1458, 1460, 1462, 1468, 1470, 1474], "fundament": [664, 1312, 1313, 1320, 1351, 1414, 1418, 1419, 1426, 1429, 1430, 1431, 1433, 1443, 1448, 1458, 1460], "funni": 1319, "funzional": 1432, "further": [404, 456, 1083, 1107, 1326, 1329, 1348, 1356, 1360, 1414, 1418, 1419, 1421, 1424, 1426, 1428, 1429, 1443, 1444, 1452, 1463, 1466, 1475], "furthermor": [244, 1336, 1341, 1360, 1395, 1412, 1415, 1436, 1449, 1453, 1457], "fuse": [296, 344, 422, 540, 1415, 1417, 1424, 1444, 1448, 1449, 1456, 1457, 1458, 1462, 1466, 1475], "fused_comput": 1350, "fused_matmul": 1449, "fusion": [422, 1326, 1336, 1350, 1415, 1460, 1475], "fut": 1448, "futur": [18, 84, 96, 111, 112, 187, 262, 283, 379, 395, 458, 459, 460, 461, 462, 539, 1012, 1104, 1105, 1106, 1313, 1317, 1318, 1326, 1328, 1346, 1348, 1350, 1353, 1375, 1382, 1409, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1425, 1427, 1437, 1447, 1449, 1460], "futurewarn": 1326, "fwd": [69, 81, 1257, 1331, 1334, 1354, 1423, 1438], "fwd_edge_data": 1353, "fweight": 641, "g": [10, 62, 67, 68, 69, 73, 76, 78, 80, 81, 85, 91, 97, 102, 113, 132, 133, 140, 160, 182, 232, 233, 241, 265, 286, 290, 296, 303, 304, 343, 348, 356, 357, 424, 425, 426, 427, 433, 435, 454, 492, 498, 501, 506, 585, 587, 697, 757, 772, 860, 911, 919, 946, 947, 987, 1012, 1013, 1022, 1033, 1273, 1275, 1312, 1313, 1315, 1317, 1318, 1319, 1324, 1326, 1327, 1328, 1331, 1333, 1334, 1335, 1336, 1337, 1339, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1360, 1367, 1374, 1382, 1385, 1386, 1395, 1398, 1402, 1404, 1405, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1425, 1427, 1429, 1430, 1431, 1432, 1433, 1436, 1437, 1438, 1440, 1443, 1448, 1449, 1452, 1453, 1454, 1456, 1457, 1458, 1461, 1462, 1463, 1464, 1465, 1469, 1470, 1471, 1474], "g_": [1354, 1438], "g_aot": 1315, "g_inner_jit": 1429, "g_inner_jitted_lambda": 1429, "g_inner_jitted_norm": 1429, "g_inner_jitted_parti": 1429, "g_jit": 1315, "g_jit_correct": 1429, "g_jit_decor": 1429, "g_vjp": [1354, 1438], "gain": [1313, 1331, 1339, 1461], "gamma": [384, 385, 393, 1036, 1110, 1113, 1122, 1125, 1126, 1127, 1128, 1141, 1144, 1145, 1159, 1161, 1177, 1179, 1205, 1206, 1240, 1241, 1326, 1367, 1463], "gamma_d": 1141, "gamma_init": 1368, "gammainc": 1126, "gammaincc": 1125, "gammaln": [1124, 1128, 1418], "gammasgn": [1124, 1127, 1326], "gap": [697, 1455, 1460, 1466], "garbag": [1318, 1326, 1448, 1453, 1455], "gate": 510, "gather": [83, 85, 138, 208, 303, 431, 432, 946, 947, 1315, 1350, 1373, 1395, 1414, 1415, 1432, 1440, 1449, 1475], "gather_p": 1385, "gatherdimensionnumb": [208, 381, 1395], "gatherscattermod": [10, 208, 381, 457, 458, 459, 460, 461, 462, 860, 947, 994, 995, 996, 997, 1395], "gauss": [1313, 1437], "gaussian": [508, 1142, 1196, 1197, 1199, 1200, 1439], "gaussian_kd": [1326, 1418], "gave": 1419, "gb": 1460, "gc": [1326, 1463], "gcc": 1326, "gcd": 778, "gcloud": [1431, 1464], "gda": [136, 137], "gda1": 1410, "gda2": 1410, "gda_seri": 1326, "ge": [368, 383, 392, 414, 419, 531, 1090, 1134, 1146, 1163, 1164, 1177, 1179, 1185, 1187, 1192, 1194, 1207, 1208, 1223, 1224, 1233, 1234, 1236, 1237, 1252, 1253, 1411], "gelu": 1449, "gemm": [667, 1353, 1475], "gemm_tp": 1443, "gen": [158, 267, 1086, 1415], "gen_static_arg": 267, "gender": 664, "gener": [67, 75, 97, 111, 121, 131, 160, 197, 199, 203, 220, 235, 237, 267, 290, 292, 343, 344, 360, 361, 397, 439, 452, 453, 463, 464, 491, 493, 499, 506, 509, 529, 539, 568, 578, 610, 621, 641, 655, 660, 666, 676, 682, 687, 719, 727, 747, 749, 773, 788, 790, 791, 792, 796, 799, 809, 813, 814, 815, 827, 828, 829, 830, 831, 836, 837, 842, 868, 874, 898, 901, 913, 926, 940, 945, 950, 973, 974, 975, 976, 981, 982, 984, 985, 986, 987, 1003, 1004, 1005, 1009, 1011, 1012, 1022, 1030, 1033, 1043, 1070, 1071, 1085, 1086, 1087, 1093, 1104, 1109, 1121, 1204, 1205, 1206, 1273, 1279, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1326, 1328, 1329, 1331, 1332, 1333, 1334, 1339, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1366, 1367, 1368, 1373, 1385, 1395, 1398, 1399, 1402, 1408, 1410, 1411, 1413, 1414, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1441, 1443, 1444, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1473, 1474, 1475], "generalconv": 1368, "generalconvtranspos": 1368, "generalized_norm": 1326, "generate_block_sparse_mat": 1462, "gennorm": 1326, "geometr": [529, 727, 815, 827, 1207, 1208], "geometri": [1320, 1437], "geomspac": [815, 827, 1326], "geomtric": 727, "geq": 382, "gesdd": 1089, "get": [10, 85, 121, 137, 381, 424, 509, 697, 726, 860, 873, 946, 947, 972, 998, 1265, 1266, 1270, 1280, 1308, 1312, 1313, 1318, 1319, 1320, 1323, 1324, 1326, 1328, 1330, 1331, 1333, 1334, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1358, 1360, 1371, 1382, 1385, 1386, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1423, 1424, 1426, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1464, 1466, 1468, 1469, 1470, 1474], "get_abstract_mesh": 1440, "get_av": 1318, "get_backend": [1318, 1326], "get_barrier_semaphor": [1448, 1458], "get_compute_cap": 1326, "get_dimension_s": 1343, "get_executable_and_tim": 1371, "get_grid_map": 1447, "get_neg": 1444, "get_or_make_const_trac": 1318, "get_param": 1367, "get_primitive_transpos": 1360, "get_printopt": [585, 587], "get_profiled_instructions_proto": 1353, "get_refer": 1326, "get_runtime_token": 1412, "get_scaled_dot_general_config": 539, "get_signless": 1318, "get_stat": 1466, "get_topology_for_devic": 1326, "get_train_batch": 1442, "getattr": 1318, "getattrkei": [1282, 1283, 1326, 1474], "getdim": 1350, "getitemkeypathentri": 1326, "getvalu": 1318, "getvar": 1318, "gf": 1463, "gg": [466, 467], "ghcr": [1358, 1431], "giant": 1431, "gigabyt": 1452, "gist": [1440, 1468], "git": [1329, 1339, 1358], "github": [102, 491, 923, 971, 1312, 1322, 1326, 1328, 1337, 1339, 1340, 1349, 1350, 1356, 1358, 1413, 1414, 1418, 1427, 1432], "give": [232, 326, 329, 343, 344, 345, 346, 347, 389, 423, 430, 457, 458, 459, 460, 461, 462, 501, 758, 783, 793, 798, 898, 907, 946, 1019, 1070, 1077, 1101, 1106, 1275, 1313, 1315, 1318, 1320, 1324, 1326, 1329, 1331, 1333, 1334, 1341, 1350, 1352, 1395, 1404, 1410, 1412, 1413, 1415, 1416, 1420, 1421, 1422, 1426, 1429, 1432, 1433, 1434, 1436, 1437, 1439, 1440, 1442, 1443, 1448, 1449, 1452, 1453, 1455, 1458, 1464, 1466, 1475], "given": [3, 4, 14, 34, 35, 36, 40, 41, 46, 53, 54, 60, 69, 81, 92, 96, 97, 98, 101, 144, 145, 146, 147, 148, 149, 150, 151, 155, 169, 170, 175, 178, 181, 182, 183, 185, 186, 204, 211, 221, 246, 247, 251, 290, 304, 305, 306, 311, 336, 345, 378, 396, 398, 406, 415, 434, 456, 459, 481, 486, 487, 496, 499, 501, 503, 504, 506, 536, 550, 559, 564, 623, 628, 629, 630, 640, 641, 644, 645, 653, 656, 663, 665, 678, 679, 681, 685, 701, 702, 703, 716, 719, 727, 740, 741, 804, 806, 807, 815, 827, 832, 833, 834, 835, 838, 839, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 879, 881, 883, 887, 892, 894, 895, 896, 907, 912, 913, 914, 915, 916, 926, 930, 933, 936, 941, 942, 944, 952, 954, 956, 957, 958, 960, 961, 962, 981, 983, 987, 989, 998, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1041, 1042, 1044, 1045, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1058, 1063, 1082, 1083, 1086, 1087, 1089, 1091, 1099, 1104, 1105, 1106, 1177, 1179, 1192, 1194, 1197, 1198, 1207, 1208, 1210, 1211, 1214, 1215, 1219, 1220, 1223, 1224, 1228, 1230, 1233, 1234, 1236, 1237, 1240, 1241, 1244, 1246, 1249, 1250, 1252, 1253, 1254, 1255, 1262, 1267, 1268, 1274, 1276, 1313, 1316, 1318, 1319, 1326, 1328, 1331, 1340, 1341, 1343, 1346, 1349, 1350, 1354, 1360, 1368, 1374, 1382, 1405, 1410, 1414, 1415, 1417, 1418, 1421, 1426, 1427, 1429, 1430, 1432, 1434, 1436, 1437, 1438, 1440, 1443, 1449, 1452, 1453, 1456, 1458, 1462, 1469, 1473, 1474, 1475], "glanc": [1349, 1426], "glob": [1339, 1350, 1353], "global": [27, 136, 137, 498, 499, 500, 1003, 1273, 1318, 1319, 1326, 1331, 1336, 1337, 1339, 1343, 1348, 1349, 1360, 1375, 1382, 1402, 1404, 1410, 1412, 1419, 1421, 1424, 1425, 1431, 1432, 1440, 1444, 1452, 1458, 1460, 1463, 1465, 1466, 1467, 1468, 1469, 1471, 1473, 1474], "global_arg_shap": [998, 1326], "global_arrai": 1431, "global_array_to_host_local_arrai": [137, 1326, 1410], "global_batch": 1431, "global_batch_arrai": 1341, "global_const": 1343, "global_constant_comput": 1360, "global_data": [1318, 1431], "global_inp": 1410, "global_input": [136, 137], "global_input_data": 498, "global_list": 1429, "global_loss": 1417, "global_mesh": [136, 137, 498], "global_out": [136, 137, 1410], "global_output": 1410, "global_result": 1431, "global_rng": 1348, "global_scal": [509, 539], "global_shap": [499, 500, 1404], "global_step": 1003, "globaldevicearrai": [1326, 1410], "gloo": 1326, "glorot": [518, 519], "glossari": 1284, "gmem": [172, 173, 174, 177], "gmre": 1418, "gnash": [1333, 1432], "gnu": 1339, "go": [1313, 1318, 1319, 1320, 1322, 1326, 1336, 1340, 1341, 1350, 1354, 1356, 1360, 1412, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1429, 1430, 1431, 1433, 1435, 1436, 1437, 1438, 1442, 1443, 1444, 1448, 1449, 1452, 1455, 1458, 1460, 1462, 1465], "goal": [1316, 1318, 1319, 1341, 1349, 1385, 1412, 1414, 1417, 1418, 1421, 1436, 1448, 1455, 1458, 1462, 1463], "goe": [120, 1313, 1318, 1319, 1326, 1411, 1412, 1431, 1437], "gone": [1326, 1341, 1434, 1448], "good": [132, 502, 1312, 1313, 1319, 1322, 1329, 1331, 1339, 1341, 1342, 1348, 1350, 1353, 1354, 1358, 1395, 1412, 1413, 1418, 1419, 1420, 1424, 1426, 1429, 1432, 1433, 1434, 1437, 1438, 1443, 1445, 1448, 1449, 1455, 1460], "good_example_jit": 1331, "googl": [1312, 1323, 1326, 1339, 1340, 1343, 1346, 1368, 1413, 1414, 1431, 1457, 1464, 1468], "googleapi": [1326, 1356], "gopath": 1340, "gopher": 1415, "got": [940, 987, 1313, 1326, 1331, 1334, 1346, 1358, 1409, 1413, 1430, 1431, 1432, 1434, 1437, 1444], "gotcha": [718, 720, 1313, 1331, 1332, 1337, 1432, 1433, 1444, 1465], "govern": [1312, 1435, 1442], "gperftool": 1340, "gpipe": 1443, "gpu": [18, 62, 67, 94, 97, 99, 102, 153, 160, 172, 173, 182, 236, 296, 397, 404, 409, 496, 540, 716, 789, 920, 998, 1001, 1002, 1008, 1009, 1011, 1083, 1106, 1312, 1314, 1315, 1323, 1325, 1326, 1329, 1336, 1341, 1348, 1349, 1351, 1355, 1357, 1358, 1360, 1379, 1382, 1395, 1402, 1410, 1424, 1426, 1427, 1429, 1432, 1435, 1442, 1443, 1444, 1446, 1447, 1453, 1455, 1456, 1457, 1460, 1461, 1463, 1468, 1473], "gpu_cor": 178, "gpu_exampl": 1431, "gpu_hlo_schedul": 1353, "gpu_memory_fract": 1352, "gpu_test": 1339, "gpudevic": 97, "gqa": 506, "grab": [1341, 1412, 1435, 1442], "gracefulli": 1427, "grad": [67, 73, 76, 77, 80, 197, 199, 479, 501, 729, 930, 990, 1303, 1315, 1325, 1326, 1327, 1331, 1333, 1342, 1343, 1348, 1349, 1350, 1351, 1354, 1360, 1367, 1385, 1386, 1411, 1414, 1415, 1417, 1419, 1422, 1430, 1432, 1433, 1434, 1435, 1436, 1438, 1441, 1442, 1443, 1465, 1469, 1470, 1474], "grad_f": [1334, 1360], "grad_tanh": [289, 1320, 1437], "grad_tre": 1367, "grade": 1452, "gradf_exact": 729, "gradfun": [1318, 1434], "gradient": [76, 234, 235, 240, 289, 295, 346, 356, 357, 456, 479, 539, 656, 665, 930, 990, 1092, 1093, 1104, 1105, 1257, 1258, 1259, 1302, 1314, 1326, 1333, 1334, 1335, 1348, 1353, 1360, 1367, 1423, 1430, 1432, 1438, 1441, 1443, 1444, 1469, 1474], "gradual": [1319, 1414], "grain": [140, 499, 1329, 1355, 1427, 1432, 1454, 1464], "grammar": [1411, 1417], "granul": 133, "granular": [1427, 1457], "graph": [1313, 1318, 1331, 1343, 1360, 1373, 1426, 1436, 1448, 1458, 1465, 1475], "graph_view": 1464, "graphic": [1351, 1457, 1458], "graphviz": 1340, "grayscal": 1439, "great": [1313, 1320, 1325, 1339, 1412, 1415, 1416, 1419, 1432, 1435, 1437, 1442, 1443, 1457, 1464], "greater": [305, 306, 368, 382, 383, 392, 414, 419, 547, 548, 619, 670, 731, 781, 782, 798, 865, 1318, 1326, 1328, 1333, 1336, 1346, 1349, 1356, 1427, 1460], "greater_equ": [382, 670, 730, 781, 782, 865], "greater_jvp": 1318, "greater_p": 1318, "greatest": [725, 778], "greatli": [800, 1452], "greedi": [666, 667], "green": [1341, 1354, 1431, 1438, 1473], "grep": [1358, 1431], "grid": [141, 160, 174, 181, 182, 183, 189, 499, 719, 747, 775, 836, 837, 868, 954, 1063, 1064, 1091, 1426, 1447, 1449, 1452, 1454, 1458, 1460, 1461, 1462, 1468], "grid_axi": 1455, "grid_indic": [1449, 1462], "grid_siz": [1453, 1455], "grid_spec": [182, 1457, 1458, 1460, 1462], "griddimensionsemant": 1458, "gridspec": [182, 1447, 1462], "ground": 1416, "group": [173, 178, 303, 304, 425, 426, 427, 433, 434, 435, 506, 994, 995, 996, 997, 1043, 1341, 1343, 1353, 1443, 1452, 1462, 1463], "grow": [793, 1077, 1312, 1319, 1328, 1340, 1352, 1417, 1432, 1460, 1462, 1463], "grown": 1452, "growth": [1340, 1352], "gspmd": [487, 1326, 1382, 1440], "gspmdshard": [1326, 1373], "gt": [368, 382, 392, 414, 419, 1318, 1354, 1424, 1430, 1438], "guarante": [10, 61, 102, 381, 407, 457, 458, 459, 460, 461, 462, 650, 860, 1123, 1313, 1315, 1316, 1324, 1326, 1328, 1336, 1344, 1348, 1350, 1353, 1387, 1405, 1411, 1416, 1417, 1420, 1421, 1429, 1432, 1433, 1443, 1448, 1449, 1452, 1453, 1456, 1457, 1458, 1466, 1475], "guard": [1260, 1310, 1314], "guard_level": 1471, "guardrail": 1446, "guess": [357, 1093, 1104, 1105, 1106, 1313, 1437], "gui": 311, "guid": [1312, 1326, 1328, 1333, 1339, 1341, 1353, 1360, 1373, 1410, 1416, 1418, 1424, 1436, 1439, 1440, 1455, 1456, 1460, 1461, 1464, 1472, 1475], "guidanc": 1339, "guidelin": [1329, 1414], "gumbel": [1019, 1022, 1316], "gumbl": 1328, "gz": [1009, 1011, 1339, 1435], "h": [343, 344, 395, 398, 403, 405, 506, 784, 807, 1068, 1075, 1085, 1089, 1284, 1313, 1343, 1350, 1354, 1358, 1374, 1411, 1413, 1432, 1437, 1438, 1439, 1442], "h0": 1374, "h1": 1374, "h100": [1379, 1395, 1455], "h2": 1374, "h2d": [1326, 1441], "h_": [1076, 1082], "h_0": 1374, "h_1": 1374, "h_2": 1374, "h_k": 1374, "h_vjp": [1354, 1438], "ha": [61, 67, 76, 81, 95, 98, 101, 132, 133, 136, 137, 155, 172, 184, 194, 197, 199, 235, 248, 262, 283, 288, 289, 290, 291, 292, 296, 297, 303, 311, 339, 345, 402, 404, 408, 434, 481, 493, 498, 600, 634, 635, 636, 641, 666, 674, 683, 688, 696, 729, 772, 774, 777, 796, 806, 864, 907, 915, 918, 940, 951, 987, 998, 1012, 1022, 1047, 1072, 1075, 1078, 1082, 1090, 1104, 1105, 1106, 1149, 1267, 1268, 1280, 1282, 1298, 1302, 1313, 1315, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1357, 1360, 1367, 1369, 1374, 1382, 1385, 1386, 1392, 1395, 1402, 1404, 1405, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1464, 1466, 1468, 1470, 1471, 1474], "habit": 1416, "hack": [1328, 1415], "had": [1275, 1313, 1318, 1319, 1326, 1334, 1343, 1346, 1348, 1350, 1354, 1410, 1413, 1414, 1415, 1418, 1424, 1426, 1433, 1437, 1438, 1443, 1448, 1452, 1455, 1458], "hadn": 1319, "haiku": [1322, 1366, 1368], "half": [292, 434, 911, 1123, 1326, 1354, 1415, 1417, 1438, 1439, 1443, 1458, 1462], "half_db_norm": 306, "half_db_norm_sq": 306, "halfwai": [454, 916, 1395], "hallei": [403, 1082], "halo": 1443, "halt": [1106, 1328, 1348], "halv": [1417, 1452, 1460], "ham": [599, 609, 733, 776], "hammarl": 1088, "hammer": 1448, "hamper": [1414, 1466], "han": [599, 609, 732, 776], "hand": [137, 178, 236, 410, 499, 633, 637, 794, 806, 811, 813, 985, 1067, 1080, 1094, 1095, 1096, 1097, 1100, 1104, 1105, 1106, 1312, 1313, 1318, 1319, 1326, 1339, 1346, 1348, 1349, 1350, 1414, 1415, 1416, 1418, 1419, 1426, 1433, 1440, 1443, 1444, 1449, 1456], "handi": [1318, 1331, 1419], "handl": [78, 81, 106, 174, 193, 197, 199, 356, 381, 457, 458, 459, 460, 461, 462, 539, 580, 719, 757, 773, 853, 895, 902, 987, 994, 995, 996, 997, 1135, 1238, 1280, 1318, 1319, 1326, 1332, 1335, 1346, 1348, 1349, 1350, 1351, 1385, 1395, 1408, 1412, 1415, 1417, 1419, 1421, 1422, 1423, 1425, 1430, 1432, 1435, 1436, 1439, 1441, 1442, 1445, 1448, 1449, 1455, 1457, 1458, 1460, 1461, 1468, 1469, 1470], "handle_result": [1318, 1432], "handler": [262, 265, 283, 286, 1305, 1326], "handshak": 1458, "hang": [1326, 1431, 1458], "hann": [1098, 1101, 1102, 1103], "happen": [13, 18, 84, 119, 1313, 1315, 1316, 1319, 1323, 1328, 1331, 1336, 1337, 1341, 1342, 1343, 1346, 1349, 1350, 1357, 1358, 1382, 1386, 1410, 1412, 1416, 1423, 1426, 1429, 1430, 1436, 1437, 1440, 1443, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1460, 1463, 1465, 1468, 1470, 1474], "happi": [1313, 1424, 1432, 1433], "happili": 1334, "hard": [511, 512, 513, 514, 1313, 1326, 1346, 1354, 1415, 1419, 1420, 1424, 1437, 1438, 1440, 1460, 1464, 1466, 1474], "hard_sigmoid": [512, 513], "hard_silu": 513, "hard_swish": 512, "harder": [1415, 1427], "hardest": 1346, "hardwar": [10, 67, 337, 860, 1312, 1326, 1337, 1339, 1348, 1356, 1395, 1404, 1415, 1421, 1427, 1434, 1443, 1448, 1449, 1453, 1455, 1456, 1457, 1458, 1460, 1466, 1475], "harmless": [1313, 1336, 1433], "harmon": [1140, 1149], "has_aux": [234, 240, 289, 290, 293, 294, 295, 297, 356, 357, 493, 1302, 1303], "has_opaque_dtyp": 1326, "has_side_effect": [262, 283, 1326, 1350], "has_vjp": 1386, "hasattr": [716, 1426], "hash": [280, 296, 1318, 1326, 1328, 1339, 1346, 1349, 1382, 1402, 1416, 1421, 1429, 1463, 1465], "hashabl": [184, 194, 267, 276, 296, 303, 304, 315, 316, 425, 426, 427, 431, 432, 433, 434, 435, 998, 1279, 1280, 1282, 1284, 1304, 1318, 1326, 1349, 1382, 1474], "hashable_const": 1318, "hashable_jaxpr": 1318, "hashablefunct": 1326, "haskel": [76, 378, 456, 486, 1313, 1318, 1411, 1433, 1437], "hasn": [1010, 1413, 1419, 1421, 1452], "hat": 786, "hatch": [1415, 1417, 1449], "have": [9, 61, 62, 65, 66, 71, 73, 76, 84, 98, 99, 114, 131, 134, 135, 137, 138, 172, 202, 205, 206, 219, 235, 248, 249, 250, 262, 283, 289, 290, 295, 296, 298, 299, 300, 301, 304, 309, 310, 312, 313, 314, 322, 323, 324, 325, 331, 332, 334, 335, 336, 338, 340, 349, 350, 359, 361, 362, 363, 368, 372, 373, 375, 377, 380, 382, 383, 386, 389, 391, 392, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 429, 430, 431, 435, 437, 440, 443, 445, 446, 448, 449, 454, 455, 456, 463, 464, 465, 466, 467, 469, 470, 476, 480, 482, 483, 487, 492, 499, 500, 506, 526, 565, 567, 578, 591, 596, 597, 610, 619, 621, 623, 629, 630, 633, 637, 642, 653, 656, 660, 663, 670, 673, 675, 677, 679, 683, 685, 690, 693, 695, 696, 697, 708, 710, 712, 713, 714, 719, 725, 730, 731, 734, 740, 741, 777, 778, 780, 781, 782, 783, 784, 795, 800, 801, 807, 810, 822, 829, 830, 832, 833, 838, 839, 842, 844, 849, 852, 853, 855, 863, 865, 873, 874, 875, 877, 883, 884, 887, 890, 892, 897, 901, 902, 905, 907, 913, 914, 915, 918, 921, 940, 941, 944, 945, 947, 951, 952, 953, 956, 958, 959, 960, 962, 972, 980, 982, 984, 987, 989, 990, 998, 1012, 1040, 1066, 1067, 1068, 1073, 1080, 1082, 1089, 1093, 1094, 1095, 1096, 1097, 1100, 1101, 1104, 1105, 1106, 1149, 1262, 1267, 1271, 1275, 1279, 1280, 1302, 1304, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1326, 1328, 1331, 1333, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1367, 1382, 1385, 1386, 1395, 1399, 1400, 1402, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1468, 1469, 1470, 1473, 1474, 1475], "haven": [1313, 1318, 1360, 1415, 1448, 1449, 1464], "hbm": [1455, 1456, 1457, 1460, 1461, 1462], "hbm_scratch": 1458, "hbm_vmem_kernel": 1461, "hcb": 1326, "hde": 1415, "he": [520, 521], "head": [506, 1329, 1415, 1427, 1449], "header": 1350, "health": 99, "heap": 1326, "heap_profil": 1326, "hear": 1458, "heard": 1338, "heart": [1312, 1423, 1430, 1460], "heavi": [1349, 1350, 1411, 1414, 1415], "heavili": [1312, 1349, 1414, 1426, 1440, 1468], "heavisid": 1349, "hed": 1415, "height": [1318, 1439], "held": 1328, "hello": [85, 664, 1348, 1412, 1454], "help": [947, 1106, 1312, 1313, 1315, 1316, 1326, 1329, 1333, 1336, 1339, 1346, 1350, 1353, 1354, 1358, 1374, 1410, 1412, 1413, 1414, 1415, 1416, 1424, 1427, 1429, 1432, 1437, 1441, 1447, 1452, 1458, 1460, 1462, 1463, 1466, 1468, 1469, 1474], "helper": [10, 860, 1278, 1313, 1318, 1326, 1339, 1343, 1350, 1360, 1411, 1431, 1434, 1435, 1437, 1439, 1442, 1462, 1468], "henc": [1346, 1354, 1415, 1419, 1421, 1424, 1438, 1443, 1452, 1453], "her": 1086, "here": [67, 69, 76, 98, 113, 267, 362, 363, 364, 365, 366, 367, 381, 387, 457, 471, 472, 493, 501, 610, 621, 628, 636, 641, 642, 664, 666, 721, 783, 830, 873, 877, 947, 973, 974, 975, 976, 987, 1027, 1073, 1123, 1149, 1167, 1169, 1242, 1243, 1248, 1275, 1280, 1281, 1282, 1304, 1313, 1315, 1317, 1318, 1319, 1322, 1323, 1325, 1326, 1328, 1329, 1331, 1333, 1334, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1358, 1360, 1375, 1385, 1392, 1409, 1411, 1412, 1413, 1414, 1415, 1417, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1452, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1474, 1475], "herk": 1019, "hermet": 1326, "hermetic_cuda_vers": 1339, "hermetic_cudnn_vers": 1339, "hermetic_python_prefix": 1339, "hermetic_python_sha256": 1339, "hermetic_python_url": 1339, "hermetic_python_vers": 1339, "hermetic_requirements_lock": 1339, "hermitian": [235, 395, 398, 403, 409, 683, 688, 784, 789, 790, 791, 792, 803, 807, 1066, 1067, 1068, 1070, 1071, 1082, 1086, 1090, 1105, 1326], "hesit": 1432, "hess1": 1318, "hess2": 1318, "hess3": 1318, "hess4": 1318, "hess5": 1318, "hess6": 1318, "hess7": 1318, "hess_inv": 1092, "hessenberg": 1326, "hessian": [1092, 1348, 1444], "heterogen": 415, "heurist": [1452, 1468], "hfft": [688, 1326], "hi": [1313, 1318, 1326, 1423, 1433, 1443], "hidden": [1328, 1331, 1430, 1440, 1444, 1455, 1466, 1470, 1474], "hide": [174, 1317, 1353, 1358, 1418, 1425, 1432, 1449, 1455, 1458, 1460, 1475], "hierarch": 1418, "hierarchi": [106, 773, 1408, 1425, 1426, 1449, 1454, 1456, 1457, 1461], "high": [67, 200, 337, 341, 343, 344, 345, 346, 347, 423, 539, 660, 666, 749, 795, 800, 809, 813, 829, 887, 950, 984, 985, 1015, 1019, 1022, 1032, 1070, 1129, 1198, 1341, 1353, 1374, 1385, 1395, 1418, 1421, 1430, 1431, 1443, 1444, 1448, 1449, 1452, 1453, 1454, 1456, 1457, 1458, 1461, 1464, 1475], "higher": [69, 83, 98, 337, 356, 361, 595, 596, 660, 674, 853, 855, 875, 887, 897, 898, 930, 987, 1312, 1318, 1319, 1320, 1326, 1328, 1331, 1341, 1343, 1348, 1350, 1351, 1374, 1385, 1395, 1412, 1417, 1419, 1424, 1425, 1426, 1433, 1436, 1437, 1443, 1449, 1452, 1455, 1456, 1460, 1470], "highest": [82, 291, 292, 341, 343, 344, 345, 346, 347, 660, 666, 749, 795, 800, 809, 813, 829, 950, 984, 985, 1318, 1328, 1354, 1395], "highli": [160, 1379, 1439, 1457], "highlight": [1328, 1350, 1426, 1456, 1473], "hindsight": 1428, "hint": [360, 361, 487, 1339, 1415, 1434, 1440, 1452, 1461], "histogram": [600, 657, 736, 737, 738], "histogram2d": [735, 737, 738], "histogram_bin_edg": [735, 736, 738], "histogramdd": [735, 736, 737], "histor": [1318, 1325, 1356, 1414, 1427, 1434, 1456], "histori": [1343, 1358], "hit": [1318, 1326, 1328, 1331, 1336, 1350, 1358, 1449, 1452, 1455, 1458], "hline": 1331, "hlo": [67, 343, 349, 413, 431, 469, 1313, 1315, 1318, 1326, 1334, 1343, 1346, 1350, 1352, 1360, 1373, 1405, 1412, 1416, 1417, 1424, 1433, 1443, 1448, 1449, 1463, 1475], "hlo_batch": 1350, "hlo_cal": 1419, "hlo_data": 1350, "hlo_data_partit": 1350, "hlo_data_shmap": 1350, "hlo_modul": 1373, "hlo_transl": 1318, "hlomodul": 1350, "hloshard": [1326, 1386], "hoc": 1426, "hoist": [69, 113, 1411], "hold": [241, 378, 456, 486, 671, 1036, 1072, 1092, 1313, 1318, 1324, 1349, 1367, 1411, 1417, 1426, 1427, 1433, 1452, 1457, 1458], "hollow": 1315, "holomorph": [289, 290, 293, 294, 295, 1302, 1313, 1437], "home": [1350, 1360, 1424, 1435], "homogen": 664, "hood": [361, 1318, 1320, 1336, 1339, 1412, 1430, 1432, 1443, 1456, 1466], "hoof": 1019, "hook": [1412, 1464], "hope": [1313, 1326, 1425, 1427, 1433, 1437], "hopefulli": [1416, 1460], "hopper": 1326, "horizon": 1318, "horizont": [586, 610, 623, 662, 663, 739, 740, 937, 941, 988, 989], "host": [18, 29, 71, 95, 99, 131, 134, 135, 136, 137, 138, 139, 397, 404, 499, 1012, 1309, 1314, 1317, 1326, 1333, 1334, 1336, 1341, 1342, 1348, 1353, 1377, 1415, 1418, 1421, 1424, 1432, 1444, 1456, 1463, 1464, 1471], "host_callback": [1326, 1348, 1360, 1412], "host_count": 1326, "host_id": [137, 496, 1326], "host_local_array_to_global_arrai": [136, 1326, 1410], "host_local_data": 499, "host_local_input": [136, 137], "host_local_output": [136, 137], "host_side_random_lik": 1348, "host_to_devic": 1471, "host_tracer_level": 1464, "hot": [536, 1313, 1435, 1437, 1442], "hour": 1358, "household": [399, 400, 409, 1326], "householder_product": 1326, "how": [61, 67, 140, 182, 194, 250, 262, 283, 378, 381, 431, 456, 457, 458, 459, 460, 461, 462, 487, 498, 500, 666, 667, 757, 895, 902, 987, 994, 995, 996, 997, 1006, 1012, 1015, 1019, 1022, 1032, 1043, 1098, 1102, 1103, 1238, 1256, 1280, 1283, 1312, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1329, 1334, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1350, 1353, 1354, 1355, 1356, 1358, 1360, 1362, 1366, 1367, 1373, 1374, 1382, 1385, 1395, 1401, 1404, 1411, 1412, 1414, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1430, 1431, 1432, 1433, 1435, 1436, 1438, 1439, 1440, 1441, 1446, 1449, 1450, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1465, 1466, 1468, 1469, 1470, 1474, 1475], "howev": [10, 61, 76, 84, 94, 98, 114, 137, 219, 235, 248, 339, 479, 481, 487, 493, 673, 697, 746, 793, 830, 842, 860, 901, 907, 913, 917, 921, 940, 945, 953, 998, 1072, 1077, 1106, 1313, 1317, 1318, 1320, 1321, 1325, 1326, 1328, 1334, 1341, 1342, 1346, 1348, 1349, 1350, 1352, 1353, 1360, 1373, 1385, 1399, 1405, 1412, 1414, 1418, 1419, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1437, 1444, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1463, 1465, 1466, 1474], "hparam": 1415, "hpc": 99, "hq": [804, 1083], "hsplit": [586, 662, 937, 988], "hstack": [610, 623, 663, 941, 989], "html": [13, 102, 188, 241, 244, 250, 251, 288, 1019, 1256, 1260, 1284, 1304, 1323, 1326, 1328, 1331, 1339, 1346, 1354, 1356, 1360, 1378, 1386, 1402, 1404, 1409, 1414, 1424, 1426, 1429, 1432, 1438, 1443, 1444, 1470], "http": [13, 76, 102, 188, 235, 241, 244, 250, 251, 288, 305, 306, 344, 345, 357, 452, 506, 549, 697, 1009, 1011, 1014, 1019, 1043, 1256, 1260, 1284, 1304, 1323, 1326, 1328, 1329, 1331, 1337, 1339, 1346, 1351, 1356, 1358, 1360, 1367, 1378, 1386, 1402, 1404, 1409, 1415, 1424, 1426, 1429, 1430, 1431, 1432, 1435, 1442, 1443, 1444, 1464, 1470], "http_proxi": 99, "https_proxi": 99, "hu": [784, 807, 1068, 1089], "hudr": 1452, "hug": 1355, "hugepag": 1326, "human": 1405, "hundr": [1349, 1414], "hurdl": 1360, "hurt": [1431, 1434], "hurwitz": [489, 1152], "hv": [807, 1089], "hvp": [1313, 1437], "hvp_revfwd": [1313, 1437], "hvp_revrev": [1313, 1437], "hwdio": 1439, "hwio": [343, 344, 1439], "hx": [1080, 1087], "hybrid": [133, 1441], "hybrid_lay": 1441, "hybrid_scan": 1441, "hyperbol": [188, 300, 310, 314, 350, 470, 483, 570, 572, 575, 639, 932, 949], "hypergeometr": 1129, "hypervisor": 1326, "hypot": 1326, "hypotenus": 741, "hypothesi": 1418, "hypothet": [1418, 1419], "i": [0, 9, 10, 13, 18, 29, 30, 61, 63, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 113, 114, 119, 120, 121, 127, 131, 133, 135, 136, 137, 138, 140, 143, 153, 155, 158, 160, 166, 172, 173, 174, 178, 179, 182, 183, 184, 187, 194, 197, 199, 202, 203, 211, 216, 218, 219, 220, 233, 234, 235, 236, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 262, 264, 267, 268, 277, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 295, 296, 297, 301, 303, 304, 305, 306, 311, 313, 315, 316, 322, 324, 325, 327, 331, 335, 336, 337, 339, 343, 344, 345, 346, 347, 348, 349, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 372, 373, 375, 378, 380, 381, 382, 383, 387, 389, 391, 392, 395, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 439, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 475, 476, 479, 480, 481, 482, 483, 484, 486, 487, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 503, 504, 506, 510, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 533, 534, 536, 540, 545, 547, 548, 550, 555, 558, 560, 563, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 582, 583, 585, 586, 587, 588, 591, 595, 596, 597, 598, 600, 601, 606, 608, 610, 616, 619, 621, 622, 623, 628, 629, 630, 633, 634, 636, 637, 639, 641, 642, 646, 647, 648, 650, 651, 654, 655, 656, 660, 662, 663, 664, 666, 673, 674, 675, 676, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 696, 697, 699, 701, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 729, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746, 747, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 779, 780, 783, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 800, 801, 803, 804, 805, 806, 807, 809, 811, 814, 815, 816, 819, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 837, 838, 839, 843, 844, 845, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 863, 864, 868, 872, 873, 874, 875, 877, 878, 879, 881, 882, 883, 884, 885, 887, 888, 890, 892, 893, 894, 895, 896, 897, 899, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 930, 932, 933, 934, 935, 936, 937, 939, 940, 941, 942, 943, 944, 946, 947, 949, 950, 951, 953, 954, 955, 957, 959, 961, 965, 971, 972, 973, 974, 975, 976, 977, 978, 981, 983, 987, 988, 989, 990, 994, 995, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1116, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1262, 1263, 1264, 1266, 1267, 1268, 1273, 1274, 1275, 1276, 1278, 1279, 1281, 1282, 1283, 1284, 1298, 1302, 1303, 1304, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1366, 1367, 1368, 1371, 1373, 1374, 1375, 1382, 1385, 1386, 1387, 1392, 1395, 1396, 1398, 1399, 1402, 1404, 1405, 1408, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1447, 1448, 1449, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1475], "i0": [318, 1132, 1133, 1252, 1253, 1326], "i0619": 1343, "i1": [319, 664, 742, 1130, 1131, 1343], "i16": 1426, "i1i1i2i4i8f": 1473, "i1i2i4i8bff2f4f8c8c16i1f": 1473, "i2": [664, 1473], "i2i2i2i4i8f": 1473, "i2i2i4i8bff2f4f8c8c16i2f": 1473, "i32": [305, 1315, 1318, 1343, 1346, 1350, 1411, 1417, 1426, 1429, 1430, 1432, 1436, 1440, 1443], "i32_scalar": 1315, "i4": [616, 664], "i4i4i4i4i8f": 1473, "i4i4i4i8bff2f4f8c8c16i4f": 1473, "i64": [1318, 1343, 1426], "i8": [616, 664, 1426], "i8i8i8i8bff2f4f8c8c16i8f": 1473, "i8i8i8i8i8f": 1473, "i_0": [742, 1130, 1131, 1252, 1253], "i_1": [1132, 1133], "i_k": 1460, "i_m": [1043, 1460], "i_n": 1043, "iaxi": 873, "ib": [298, 555], "ici": [133, 1341, 1415, 1431, 1458], "id": [99, 184, 287, 303, 491, 502, 1318, 1326, 1349, 1350, 1357, 1360, 1386, 1399, 1414, 1431, 1434, 1436, 1444, 1452, 1455, 1458, 1468], "id_": 1318, "id_print": [1326, 1412], "id_psumrev": [1415, 1417], "id_tap": 1326, "idct": [1059, 1060, 1062], "idctn": [1059, 1060, 1061], "idea": [1313, 1318, 1320, 1341, 1350, 1353, 1354, 1366, 1373, 1413, 1415, 1416, 1417, 1426, 1427, 1431, 1432, 1433, 1437, 1438, 1440, 1443, 1449, 1452, 1457, 1461, 1468], "ideal": [235, 1341, 1426, 1455, 1460], "ident": [96, 137, 233, 346, 439, 450, 479, 499, 574, 676, 721, 750, 793, 807, 953, 965, 998, 1023, 1077, 1089, 1124, 1313, 1318, 1326, 1346, 1349, 1354, 1360, 1373, 1402, 1408, 1411, 1414, 1417, 1422, 1423, 1425, 1431, 1433, 1436, 1437, 1438, 1444, 1448, 1449, 1455, 1458, 1466, 1474], "identif": [1313, 1415, 1421, 1437, 1443], "identifi": [88, 89, 97, 241, 311, 343, 344, 998, 1304, 1313, 1318, 1328, 1329, 1340, 1358, 1415, 1421, 1424, 1437, 1440, 1441, 1443, 1449, 1455, 1468, 1470], "idhash": 1318, "idl": [1455, 1457, 1460], "idx": [10, 144, 145, 147, 148, 149, 150, 151, 155, 185, 186, 388, 578, 621, 860, 947, 1264, 1266, 1268, 1326, 1342, 1417, 1443, 1444, 1449, 1474], "idx1": 1435, "idx3": 1435, "idx_i": 1462, "idx_j": 1462, "idxs_i_ref": 1462, "idxs_k_ref": 1462, "ieee": [697, 1473], "ieeestd": 697, "iexp": 697, "ifft": [678, 680, 681, 685, 686, 689, 694, 1395], "ifft2": [679, 1326], "ifftn": [678, 681, 684, 685, 1326], "ifftshift": 682, "ifop": 1318, "igammagrada": 1326, "ignor": [10, 291, 379, 381, 395, 398, 408, 409, 518, 519, 520, 521, 522, 523, 525, 529, 530, 539, 576, 577, 628, 644, 645, 646, 647, 757, 833, 839, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 875, 883, 892, 897, 918, 942, 944, 946, 983, 1073, 1082, 1087, 1090, 1313, 1318, 1319, 1326, 1339, 1343, 1352, 1358, 1373, 1382, 1408, 1414, 1417, 1419, 1426, 1430], "ignore_exception_detail": 1346, "ihfft": [683, 1326], "ii": [69, 636, 666], "iinfo": [697, 1318], "ij": [636, 641, 666, 667, 738, 836, 1076, 1090, 1354, 1460], "ijk": [666, 809, 950], "ik": [641, 1354, 1460], "il": [666, 667], "ill": [785, 793, 798, 883, 1022, 1077, 1418], "illeg": [1326, 1440], "illus": 1412, "illustr": [1320, 1353, 1431, 1443, 1458, 1462], "ilp": 1452, "im": [386, 666, 809, 950], "imag": [336, 340, 345, 437, 632, 903, 1090, 1313, 1316, 1326, 1341, 1351, 1359, 1395, 1418, 1431, 1435, 1437, 1439, 1442, 1452], "image_rel_amd64_addr32nb": 1326, "imagepullpolici": 1431, "imagepullsecret": 1431, "imagin": [1318, 1334, 1341, 1350, 1412, 1416, 1426, 1448, 1449], "imaginari": [28, 336, 340, 386, 416, 417, 437, 473, 553, 632, 697, 745, 762, 771, 837, 868, 898, 903, 935, 1074, 1313, 1426, 1437], "imbalanc": 1415, "img": 1439, "immedi": [84, 96, 1261, 1265, 1267, 1269, 1270, 1297, 1313, 1317, 1329, 1336, 1341, 1354, 1356, 1414, 1416, 1420, 1432, 1437, 1438, 1444, 1466], "immut": [101, 102, 117, 118, 122, 123, 124, 125, 126, 296, 634, 696, 716, 878, 895, 896, 998, 1274, 1279, 1324, 1326, 1349, 1382, 1399, 1432, 1444, 1449, 1456, 1468], "impact": [65, 66, 673, 697, 830, 842, 887, 901, 907, 913, 940, 945, 953, 1328, 1395, 1410, 1414, 1441, 1457], "impenetr": 1318, "imper": 1336, "impl": [278, 1013, 1033, 1057, 1318, 1326, 1350, 1402, 1425, 1430], "impl_rul": 1318, "implement": [9, 10, 25, 57, 74, 77, 80, 85, 93, 96, 98, 111, 112, 120, 160, 195, 196, 197, 198, 199, 202, 205, 212, 213, 215, 235, 236, 262, 277, 281, 282, 283, 296, 298, 305, 306, 311, 331, 337, 339, 349, 356, 359, 362, 363, 364, 365, 366, 367, 372, 373, 375, 378, 381, 397, 398, 399, 404, 405, 409, 411, 412, 415, 422, 424, 449, 453, 455, 456, 457, 458, 459, 460, 461, 462, 464, 469, 476, 482, 483, 486, 506, 534, 539, 553, 555, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 586, 588, 591, 595, 596, 597, 598, 599, 600, 601, 602, 606, 608, 609, 610, 612, 613, 614, 615, 617, 619, 621, 622, 623, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 723, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 747, 749, 750, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 920, 921, 923, 924, 925, 926, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 998, 1013, 1033, 1036, 1040, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1303, 1304, 1312, 1318, 1319, 1320, 1321, 1326, 1327, 1329, 1331, 1333, 1337, 1341, 1342, 1343, 1346, 1348, 1350, 1351, 1353, 1354, 1355, 1357, 1360, 1367, 1373, 1374, 1382, 1385, 1395, 1399, 1402, 1410, 1412, 1413, 1415, 1416, 1421, 1423, 1426, 1427, 1428, 1429, 1430, 1432, 1434, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1449, 1450, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1466, 1470, 1472, 1475], "implemnet": 779, "impli": [1090, 1104, 1105, 1106, 1326, 1342, 1349, 1382, 1410, 1426, 1427, 1435, 1442, 1443, 1460], "implic": [1313, 1427, 1437, 1466], "implicit": [98, 356, 357, 633, 637, 666, 1094, 1095, 1096, 1097, 1100, 1104, 1105, 1326, 1328, 1342, 1346, 1395, 1404, 1410, 1418, 1420, 1421, 1422, 1426, 1432, 1446, 1452, 1466, 1471, 1473], "implicit_function_theorem": 357, "implicitli": [356, 824, 1313, 1346, 1409, 1414, 1418, 1422, 1425, 1426, 1430, 1433, 1443, 1452, 1469], "import": [67, 84, 95, 98, 107, 113, 114, 119, 120, 121, 136, 137, 234, 238, 240, 244, 264, 285, 289, 290, 293, 295, 296, 297, 305, 306, 315, 316, 381, 421, 423, 454, 492, 493, 498, 499, 500, 501, 504, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 539, 582, 585, 587, 588, 616, 641, 664, 697, 716, 717, 721, 746, 774, 816, 893, 896, 917, 918, 919, 987, 994, 995, 996, 997, 998, 1005, 1012, 1023, 1107, 1108, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1297, 1298, 1299, 1303, 1304, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1325, 1326, 1328, 1331, 1333, 1334, 1335, 1336, 1337, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1357, 1360, 1367, 1368, 1373, 1374, 1375, 1382, 1385, 1386, 1392, 1399, 1402, 1404, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1474, 1475], "importantli": [1419, 1429, 1436, 1440, 1444, 1466, 1468], "impos": [1426, 1432], "imposs": [1313, 1341, 1349, 1414, 1415, 1432, 1437, 1452], "imprecis": 1318, "impress": 1419, "improv": [235, 381, 457, 458, 459, 460, 461, 462, 887, 996, 997, 1029, 1074, 1104, 1105, 1106, 1313, 1316, 1326, 1328, 1329, 1339, 1346, 1353, 1354, 1374, 1410, 1414, 1416, 1417, 1418, 1419, 1421, 1424, 1427, 1433, 1438, 1443, 1447, 1452, 1457, 1458, 1462, 1463], "impur": [83, 131, 1012, 1348, 1418, 1429], "impure_func": 1349, "impure_print_side_effect": 1432, "impure_saves_glob": 1432, "impure_uses_glob": 1432, "imshow": 1439, "in1": [290, 1094, 1095, 1096, 1097, 1100], "in1d": 1326, "in2": [290, 1094, 1095, 1096, 1097, 1100], "in_1_1": 290, "in_1_2": 290, "in_2_1": 290, "in_2_2": 290, "in_arr": 1411, "in_av": [244, 1318, 1343, 1346, 1386], "in_ax": [566, 998, 1012, 1304, 1313, 1318, 1321, 1326, 1360, 1415, 1417, 1425, 1435, 1437, 1442, 1443, 1465, 1474], "in_axes_flat": 1318, "in_axi": [518, 519, 520, 521, 522, 523, 529], "in_axis_resourc": [1326, 1410], "in_batch": 73, "in_bind": 1318, "in_block_shap": 1452, "in_hbm": 1455, "in_index_map": 1452, "in_part": 1326, "in_pspec": [136, 137, 1410], "in_ref": 1448, "in_shard": [84, 296, 487, 1326, 1334, 1343, 1373, 1382, 1386, 1410, 1440, 1463], "in_shardings_hlo": [1326, 1343, 1386], "in_shardings_jax": [1326, 1343, 1386], "in_slic": 1455, "in_spec": [141, 174, 182, 194, 316, 1256, 1350, 1417, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1468], "in_specs_tre": 1447, "in_sram": 1455, "in_tang": 493, "in_trac": 1318, "in_tre": [134, 135, 138, 192, 249, 1318, 1354, 1386, 1405, 1438], "in_tree2": 1318, "in_typ": [267, 1318], "in_uk": 1318, "in_unknown": 1318, "in_val": 1318, "inaccur": [798, 1326], "inaccuraci": 1414, "inadvert": [1326, 1342, 1426], "inc": 1458, "incident": 1469, "includ": [67, 69, 76, 98, 114, 153, 289, 291, 296, 397, 407, 432, 500, 533, 534, 539, 545, 559, 564, 582, 588, 641, 646, 647, 657, 666, 667, 677, 697, 727, 746, 815, 827, 832, 838, 849, 850, 852, 854, 856, 857, 858, 884, 892, 898, 917, 918, 927, 942, 944, 965, 983, 998, 999, 1009, 1011, 1085, 1138, 1258, 1259, 1302, 1308, 1313, 1316, 1320, 1323, 1326, 1329, 1333, 1334, 1335, 1339, 1341, 1342, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1360, 1367, 1368, 1382, 1385, 1386, 1399, 1402, 1404, 1405, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1429, 1430, 1431, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1452, 1453, 1455, 1457, 1458, 1463, 1464, 1465, 1468, 1469, 1470, 1472, 1474], "include_initi": [646, 647], "inclus": [335, 378, 568, 574, 1048, 1054, 1418, 1426], "incompat": [328, 613, 864, 902, 1315, 1316, 1326, 1337, 1342, 1343, 1346, 1399, 1414, 1418, 1420, 1421, 1427, 1432, 1434, 1435, 1444, 1445], "incomplet": [320, 384, 385, 1111, 1125, 1126, 1326, 1417], "inconclus": [1326, 1346], "inconclusivedimensionoper": 1346, "inconsist": [882, 885, 1326, 1405, 1419], "inconveni": [1354, 1421, 1438], "incorpor": [1427, 1449], "incorrect": [1015, 1313, 1326, 1328, 1341, 1349, 1356, 1414, 1415, 1425, 1432, 1437, 1443, 1448, 1455, 1462, 1463], "incorrect_sum": 1455, "incorrect_sum_kernel": 1455, "incorrectli": [1326, 1443, 1445, 1458], "increas": [67, 119, 132, 133, 176, 219, 235, 404, 456, 657, 887, 982, 1032, 1083, 1106, 1321, 1323, 1326, 1336, 1340, 1352, 1353, 1354, 1382, 1415, 1419, 1420, 1421, 1427, 1438, 1452, 1458, 1462, 1475], "increasingli": [1414, 1427], "increat": 981, "increment": [378, 1106, 1316, 1318, 1358, 1411, 1420, 1427, 1448, 1458, 1469], "incur": [67, 493, 1336, 1352, 1413, 1418], "ind": [810, 895, 946, 958, 962], "indbidx": 1326, "inde": [493, 1312, 1319, 1356, 1415, 1417, 1443, 1458], "indefinit": [1328, 1431, 1458], "indent": [1318, 1360], "indented_block": 1318, "independ": [235, 642, 719, 1045, 1093, 1313, 1326, 1331, 1341, 1386, 1412, 1421, 1425, 1427, 1437, 1443, 1444, 1452, 1461, 1464, 1466], "index": [5, 6, 10, 99, 121, 133, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 172, 182, 185, 186, 188, 206, 216, 232, 233, 303, 307, 308, 315, 345, 362, 363, 364, 365, 366, 367, 378, 381, 387, 404, 431, 432, 457, 458, 459, 460, 461, 462, 472, 481, 496, 498, 499, 500, 536, 576, 577, 578, 621, 650, 673, 675, 738, 746, 750, 758, 783, 836, 842, 845, 846, 860, 874, 877, 878, 895, 896, 913, 917, 921, 924, 937, 945, 946, 947, 958, 962, 978, 998, 1001, 1083, 1304, 1326, 1331, 1333, 1334, 1339, 1341, 1342, 1343, 1346, 1356, 1360, 1367, 1375, 1385, 1386, 1395, 1399, 1404, 1411, 1419, 1426, 1431, 1440, 1443, 1444, 1447, 1449, 1452, 1455, 1456, 1458, 1459, 1461, 1474], "index_add": [1326, 1400, 1432], "index_check": [121, 1333, 1334], "index_dtyp": [207, 222, 224, 228, 232, 233, 307, 308], "index_exp": 917, "index_in_dim": [362, 471, 472], "index_map": [140, 159, 1326, 1447, 1449, 1453, 1455, 1458, 1462], "index_trick": [615, 837, 868, 898], "index_upd": [1326, 1400], "index_vector_dim": 1395, "indexerror": 1432, "indexexpress": [746, 917], "indexing_mod": [140, 159, 1447, 1453], "indic": [7, 8, 10, 39, 56, 67, 78, 81, 82, 83, 85, 99, 102, 127, 128, 137, 155, 172, 173, 174, 182, 195, 204, 205, 206, 207, 213, 214, 216, 221, 222, 224, 228, 236, 237, 262, 283, 289, 290, 293, 295, 296, 297, 303, 304, 305, 306, 313, 337, 339, 341, 343, 344, 345, 346, 347, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 381, 398, 406, 425, 426, 427, 431, 433, 434, 435, 457, 458, 459, 460, 461, 462, 471, 481, 484, 491, 493, 496, 498, 499, 506, 534, 536, 550, 560, 578, 579, 580, 583, 584, 621, 633, 636, 637, 642, 650, 652, 653, 657, 660, 666, 696, 699, 719, 729, 746, 749, 750, 758, 760, 761, 763, 764, 766, 767, 768, 769, 770, 783, 795, 805, 807, 809, 810, 813, 828, 829, 836, 837, 842, 860, 862, 864, 868, 874, 877, 878, 883, 888, 895, 896, 902, 917, 920, 923, 924, 926, 934, 937, 946, 947, 950, 957, 958, 961, 962, 965, 971, 972, 973, 974, 975, 976, 978, 984, 985, 994, 995, 996, 997, 998, 1002, 1033, 1043, 1050, 1058, 1071, 1138, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1276, 1302, 1303, 1304, 1313, 1315, 1318, 1321, 1324, 1326, 1328, 1341, 1342, 1346, 1350, 1354, 1382, 1385, 1386, 1395, 1410, 1414, 1415, 1417, 1420, 1423, 1425, 1426, 1432, 1433, 1438, 1440, 1443, 1444, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1466, 1468, 1474], "indices_2d": 978, "indices_are_sort": [10, 56, 208, 381, 457, 458, 459, 460, 461, 462, 860, 946, 994, 995, 996, 997, 1326], "indices_dtyp": 237, "indices_flat": 902, "indices_i": 1462, "indices_j": 1462, "indices_k": 1462, "indices_or_sect": [586, 662, 739, 937, 988], "indices_sort": [195, 196], "indirect": [578, 874, 1318], "indirectli": [346, 1346, 1452], "indistinguish": 574, "individu": [95, 98, 140, 158, 906, 912, 1017, 1031, 1045, 1279, 1349, 1351, 1425, 1432, 1444, 1460, 1466], "indptr": [221, 236], "inductor": 1449, "industri": 1457, "indygreg": 1339, "ineffect": 1463, "ineffici": [219, 1313, 1354, 1437, 1438, 1458], "inefficient_perex_grad": 1313, "inequ": [1326, 1346], "inevit": [1323, 1449], "inexact": [10, 289, 381, 569, 570, 571, 572, 573, 575, 635, 638, 639, 671, 672, 674, 708, 734, 741, 817, 818, 819, 820, 841, 844, 860, 879, 882, 885, 890, 911, 929, 930, 932, 939, 946, 948, 949, 1348], "inf": [88, 121, 533, 545, 560, 570, 572, 573, 575, 712, 713, 760, 764, 766, 767, 768, 769, 785, 801, 806, 844, 904, 927, 1086, 1136, 1147, 1313, 1326, 1333, 1334, 1336, 1349, 1426, 1433, 1449], "infe": [1313, 1326, 1433], "infeed_p": 1326, "infer": [114, 296, 499, 540, 582, 588, 735, 736, 737, 738, 907, 1256, 1271, 1304, 1314, 1315, 1326, 1332, 1343, 1346, 1382, 1415, 1417, 1440, 1443, 1465], "infer_sharding_from_operand": [1350, 1373], "infin": [332, 377, 454, 711, 764, 766, 767, 768, 769, 927, 1142, 1367], "infiniband": 1431, "infinit": [391, 766, 768, 769, 844, 930, 1106, 1319, 1419], "infinitesim": 1349, "infix": [1318, 1319], "influenc": [537, 1452, 1475], "info": [267, 1104, 1105, 1106, 1326, 1343, 1353, 1442], "inform": [13, 84, 91, 99, 105, 253, 262, 283, 378, 380, 450, 491, 500, 503, 504, 505, 508, 535, 537, 541, 548, 574, 580, 587, 697, 718, 720, 981, 990, 999, 1006, 1007, 1074, 1104, 1105, 1106, 1260, 1273, 1279, 1318, 1326, 1328, 1329, 1333, 1336, 1339, 1340, 1342, 1343, 1346, 1349, 1350, 1353, 1358, 1360, 1367, 1399, 1402, 1405, 1409, 1410, 1414, 1417, 1424, 1426, 1429, 1432, 1434, 1439, 1440, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1464, 1466, 1468, 1470, 1474, 1475], "infrastructur": [1412, 1424, 1425, 1427, 1449, 1463], "infrequ": 1316, "infti": [391, 533, 742, 1020, 1021, 1026, 1027, 1029, 1030, 1039, 1042, 1044, 1049, 1055, 1056, 1114, 1116, 1118, 1119, 1121, 1124, 1126, 1128, 1129, 1130, 1132, 1134, 1136, 1142, 1143, 1146, 1152, 1157, 1158, 1167, 1169, 1175, 1176, 1183, 1184, 1190, 1191, 1204, 1209, 1212, 1225, 1227, 1242, 1243, 1248, 1313, 1433], "ing": [1336, 1448], "ingest": [1312, 1341, 1382], "ingredi": [1318, 1421, 1435, 1442, 1443], "inher": [683, 688, 1336, 1414], "inherit": [296, 424, 491, 1326, 1382, 1415, 1419, 1432], "init": [456, 1108, 1326, 1353, 1367, 1368, 1411, 1424, 1443, 1452, 1469], "init_arrai": 1452, "init_carri": [174, 1411], "init_fn": 1367, "init_fun": [1367, 1368, 1421], "init_lay": [1434, 1443], "init_mlp_param": 1474, "init_model": 1434, "init_network_param": [1435, 1442], "init_v": [378, 486, 1331], "init_valu": [439, 447], "initfn": 1367, "initi": [18, 34, 36, 40, 54, 174, 235, 357, 378, 456, 486, 561, 562, 646, 647, 668, 669, 697, 832, 838, 849, 852, 854, 857, 892, 944, 1093, 1269, 1274, 1293, 1313, 1314, 1315, 1319, 1320, 1326, 1328, 1342, 1353, 1360, 1367, 1371, 1397, 1411, 1414, 1415, 1416, 1419, 1420, 1431, 1435, 1437, 1442, 1443, 1447, 1449, 1452, 1455, 1457, 1458, 1460, 1462, 1464, 1466, 1469, 1474, 1475], "initial_copi": 1458, "initial_guess": 357, "initial_left_copi": 1458, "initial_qdd": 258, "initial_right_copi": 1458, "initialization_timeout": 99, "initialize_cach": [1326, 1371], "initramf": 1464, "inject": [120, 1412, 1448], "inlin": [190, 253, 296, 1318, 1326, 1350, 1382, 1411, 1414, 1419, 1431, 1443, 1449, 1451], "inner": [133, 305, 415, 610, 666, 871, 998, 1271, 1313, 1326, 1336, 1342, 1343, 1349, 1386, 1411, 1415, 1429, 1437, 1443, 1448, 1458, 1462, 1474], "inner_block_s": 1458, "inner_block_spec": 1458, "inner_grid": 1458, "inner_kernel": 1458, "inner_kernel_alloc": 1458, "inner_kernel_arg": 1458, "inner_param": 1443, "inner_structur": 1271, "inner_treedef": [1271, 1295, 1326, 1474], "inner_xla_cal": 1318, "innermost": [812, 1455, 1456], "innocu": [83, 1336], "inp": [1354, 1404], "inp1": 1326, "inp2": 1326, "inp_data": 500, "inp_shard": 498, "inplac": [696, 721, 878, 895, 896, 965], "inpuat": 632, "input": [13, 61, 64, 67, 71, 74, 77, 78, 79, 81, 85, 92, 96, 102, 114, 120, 136, 137, 138, 140, 153, 160, 174, 182, 194, 202, 203, 212, 219, 220, 224, 228, 239, 248, 253, 262, 263, 267, 283, 284, 288, 289, 290, 292, 295, 296, 298, 299, 300, 301, 304, 305, 306, 309, 310, 311, 312, 313, 314, 321, 322, 323, 324, 325, 331, 332, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 357, 359, 360, 361, 362, 368, 372, 373, 375, 377, 380, 382, 383, 386, 387, 389, 391, 392, 397, 398, 404, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429, 430, 432, 433, 434, 435, 437, 449, 450, 455, 456, 465, 466, 467, 468, 469, 470, 473, 476, 479, 480, 481, 482, 483, 492, 493, 498, 500, 505, 507, 508, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 559, 560, 564, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 582, 583, 584, 585, 587, 588, 591, 595, 596, 597, 602, 610, 612, 613, 614, 615, 617, 619, 623, 632, 633, 634, 635, 637, 638, 639, 640, 642, 644, 645, 651, 653, 654, 655, 656, 659, 660, 663, 665, 666, 670, 671, 672, 673, 674, 677, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 708, 710, 711, 712, 713, 716, 719, 721, 722, 725, 730, 731, 734, 738, 740, 742, 745, 747, 749, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 777, 778, 779, 780, 781, 782, 783, 784, 789, 790, 791, 792, 793, 795, 798, 801, 803, 804, 807, 809, 811, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 830, 832, 833, 834, 835, 836, 838, 839, 841, 842, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 861, 862, 864, 865, 871, 872, 874, 875, 876, 877, 878, 879, 880, 882, 885, 886, 888, 890, 892, 894, 895, 896, 897, 898, 901, 903, 904, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 923, 924, 925, 926, 927, 929, 930, 932, 933, 935, 938, 939, 940, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 974, 975, 981, 982, 983, 984, 985, 987, 990, 998, 1012, 1022, 1028, 1059, 1060, 1061, 1062, 1065, 1066, 1068, 1069, 1070, 1077, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1113, 1115, 1116, 1117, 1123, 1124, 1127, 1129, 1135, 1136, 1138, 1144, 1147, 1218, 1238, 1239, 1256, 1257, 1258, 1259, 1267, 1268, 1276, 1279, 1281, 1283, 1284, 1302, 1304, 1312, 1313, 1315, 1316, 1319, 1320, 1321, 1323, 1324, 1326, 1328, 1331, 1332, 1339, 1341, 1342, 1343, 1348, 1349, 1350, 1351, 1353, 1354, 1357, 1360, 1367, 1368, 1373, 1382, 1385, 1386, 1395, 1402, 1404, 1405, 1409, 1411, 1412, 1418, 1419, 1421, 1423, 1426, 1429, 1430, 1433, 1434, 1436, 1437, 1438, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1465, 1466, 1468, 1469, 1470, 1471, 1473, 1474], "input_arg": 1462, "input_arr": 1458, "input_batching_dim": 1395, "input_buf": 1318, "input_buff": [1353, 1455], "input_data": [1334, 1353], "input_handl": 1318, "input_layout": [262, 283, 1350], "input_onesid": 1101, "input_output_alias": [182, 262, 283, 1350, 1448, 1455, 1462], "input_ref": [174, 1458, 1462], "input_s": 1424, "input_shap": [498, 1411, 1421], "inputtyp": [267, 1326], "ins": [1312, 1430, 1470], "ins1": 1318, "ins2": 1318, "insert": [160, 304, 374, 423, 450, 565, 585, 587, 650, 657, 673, 746, 878, 917, 920, 1313, 1318, 1326, 1373, 1395, 1417, 1419, 1426, 1431, 1433, 1434, 1443, 1447, 1448, 1452, 1455, 1458, 1462], "inserted_window_dim": [457, 1395], "insertionpoint": [1318, 1360], "insid": [0, 10, 67, 83, 84, 153, 205, 363, 487, 504, 697, 860, 887, 919, 1040, 1318, 1326, 1327, 1331, 1334, 1336, 1340, 1342, 1346, 1349, 1354, 1358, 1362, 1366, 1412, 1415, 1417, 1419, 1427, 1429, 1432, 1434, 1440, 1443, 1449, 1452, 1455, 1456, 1457, 1458, 1460, 1462, 1468, 1474], "insight": [1313, 1433, 1455], "insignific": 1319, "inspect": [82, 84, 244, 296, 501, 1313, 1315, 1317, 1326, 1343, 1349, 1350, 1354, 1360, 1362, 1373, 1382, 1411, 1419, 1431, 1432, 1433, 1434, 1438, 1440, 1443, 1444, 1466], "inspect_array_callback": 84, "inspir": [1366, 1422, 1444, 1445], "inst": 1318, "instal": [99, 397, 918, 999, 1326, 1329, 1343, 1349, 1350, 1355, 1358, 1427, 1431, 1435, 1463], "install_onli": 1339, "instanc": [0, 64, 69, 71, 77, 78, 80, 81, 98, 105, 190, 194, 246, 247, 249, 291, 292, 498, 500, 697, 746, 773, 909, 917, 1108, 1256, 1273, 1280, 1282, 1284, 1313, 1315, 1318, 1326, 1329, 1341, 1349, 1404, 1405, 1411, 1412, 1415, 1416, 1417, 1419, 1425, 1430, 1431, 1433, 1434, 1439, 1440, 1443, 1444, 1456, 1457, 1458, 1460, 1463, 1464, 1465, 1466, 1474], "instanti": [107, 697, 700, 965, 1313, 1318, 1353, 1399, 1417, 1425, 1437], "instantiate_const": 1318, "instantiate_const_output": 1326, "instead": [0, 10, 25, 67, 73, 77, 80, 81, 85, 113, 114, 131, 137, 235, 262, 283, 306, 337, 345, 361, 381, 415, 424, 452, 457, 501, 568, 579, 718, 720, 793, 860, 898, 913, 934, 946, 998, 1013, 1043, 1077, 1098, 1104, 1105, 1149, 1277, 1279, 1313, 1315, 1317, 1318, 1319, 1323, 1325, 1326, 1328, 1334, 1336, 1339, 1341, 1342, 1343, 1346, 1350, 1352, 1354, 1357, 1360, 1366, 1367, 1371, 1373, 1382, 1392, 1395, 1399, 1400, 1402, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1423, 1424, 1425, 1426, 1427, 1430, 1432, 1433, 1434, 1435, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1464, 1466, 1469, 1471, 1473, 1474], "instruct": [158, 160, 188, 337, 1319, 1326, 1328, 1339, 1340, 1353, 1356, 1358, 1360, 1455, 1457, 1458, 1463, 1464, 1474, 1475], "instrument": [1006, 1334, 1427, 1464], "insuffici": [99, 1326, 1349, 1455, 1458, 1463], "int": [5, 6, 7, 8, 9, 14, 22, 31, 32, 37, 38, 39, 44, 46, 48, 50, 51, 53, 55, 56, 57, 58, 60, 67, 77, 80, 82, 87, 94, 99, 102, 115, 127, 132, 133, 140, 142, 143, 152, 158, 159, 160, 161, 164, 165, 166, 167, 168, 172, 174, 176, 177, 179, 180, 181, 182, 183, 187, 190, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 211, 212, 213, 215, 216, 218, 219, 222, 224, 228, 233, 234, 235, 240, 246, 247, 251, 262, 265, 276, 277, 278, 281, 282, 283, 286, 289, 290, 292, 293, 294, 295, 296, 304, 305, 306, 307, 308, 311, 316, 318, 319, 320, 326, 327, 329, 330, 335, 337, 338, 341, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 358, 361, 362, 364, 365, 367, 369, 370, 371, 374, 376, 378, 384, 385, 387, 388, 389, 390, 393, 398, 402, 403, 406, 415, 423, 428, 431, 432, 435, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 456, 471, 472, 473, 474, 475, 478, 484, 485, 489, 491, 495, 496, 501, 502, 506, 510, 517, 518, 519, 520, 521, 522, 523, 526, 529, 533, 534, 536, 545, 550, 559, 564, 565, 566, 567, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 591, 599, 600, 609, 628, 629, 630, 640, 641, 642, 644, 645, 646, 647, 650, 651, 652, 654, 655, 656, 660, 662, 664, 666, 667, 668, 669, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 717, 719, 721, 722, 723, 724, 727, 729, 732, 733, 739, 743, 747, 749, 750, 758, 759, 776, 780, 783, 788, 796, 797, 801, 807, 809, 810, 811, 812, 813, 814, 815, 827, 828, 829, 831, 832, 834, 835, 838, 842, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 861, 864, 869, 870, 871, 872, 873, 874, 875, 876, 878, 881, 883, 884, 887, 892, 893, 894, 895, 896, 897, 902, 906, 908, 910, 912, 913, 915, 916, 923, 924, 925, 933, 934, 935, 937, 940, 941, 942, 944, 945, 946, 947, 950, 952, 953, 954, 955, 956, 957, 958, 960, 961, 962, 965, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 988, 991, 992, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1008, 1013, 1014, 1019, 1022, 1031, 1033, 1040, 1043, 1045, 1046, 1047, 1048, 1050, 1059, 1060, 1061, 1062, 1063, 1070, 1072, 1076, 1080, 1081, 1082, 1087, 1088, 1091, 1092, 1093, 1098, 1099, 1100, 1101, 1102, 1103, 1109, 1135, 1136, 1138, 1139, 1140, 1141, 1147, 1149, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1273, 1300, 1302, 1304, 1305, 1315, 1318, 1326, 1328, 1337, 1339, 1346, 1382, 1386, 1395, 1404, 1405, 1409, 1411, 1414, 1415, 1417, 1421, 1426, 1430, 1431, 1440, 1447, 1449, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1466, 1468, 1469, 1470, 1473, 1474], "int128": 1426, "int16": [61, 259, 664, 763, 1326, 1426, 1473], "int2": 259, "int256": 1421, "int32": [73, 75, 98, 183, 195, 207, 222, 224, 228, 232, 233, 238, 259, 296, 311, 315, 316, 362, 363, 364, 381, 387, 401, 402, 423, 450, 471, 472, 484, 506, 555, 558, 565, 566, 567, 568, 576, 577, 578, 579, 580, 582, 585, 588, 591, 595, 596, 600, 601, 606, 608, 612, 614, 615, 616, 621, 622, 623, 628, 629, 630, 632, 634, 640, 642, 644, 645, 646, 647, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 663, 664, 665, 666, 667, 669, 673, 675, 676, 696, 699, 701, 702, 703, 711, 712, 713, 714, 715, 717, 719, 721, 722, 723, 724, 725, 736, 740, 743, 745, 747, 750, 758, 763, 772, 773, 775, 777, 778, 779, 780, 783, 788, 795, 798, 799, 802, 809, 812, 813, 828, 829, 830, 831, 832, 833, 837, 838, 839, 843, 845, 846, 864, 868, 870, 871, 873, 874, 876, 877, 878, 880, 886, 890, 892, 893, 894, 895, 898, 901, 902, 903, 905, 906, 907, 908, 909, 910, 912, 915, 920, 921, 923, 924, 934, 939, 940, 941, 943, 944, 947, 950, 951, 952, 953, 956, 957, 958, 959, 960, 961, 962, 965, 971, 972, 973, 974, 975, 976, 978, 980, 982, 985, 986, 989, 990, 992, 994, 995, 996, 997, 1031, 1046, 1048, 1090, 1218, 1275, 1279, 1284, 1315, 1318, 1326, 1331, 1333, 1337, 1342, 1343, 1346, 1348, 1353, 1385, 1409, 1411, 1416, 1421, 1422, 1424, 1425, 1426, 1429, 1430, 1432, 1434, 1436, 1440, 1445, 1449, 1453, 1456, 1458, 1462, 1467, 1468, 1470, 1473, 1474], "int4": [259, 763, 1457], "int64": [259, 616, 664, 755, 763, 893, 1031, 1046, 1048, 1318, 1326, 1337, 1411, 1426, 1432, 1473], "int64_t": 1350, "int8": [61, 259, 664, 763, 1326, 1426, 1460, 1473], "int_": [1115, 1116, 1119, 1142, 1157, 1158, 1167, 1169, 1175, 1176, 1183, 1184, 1190, 1191, 1204, 1209, 1212, 1225, 1227, 1242, 1243, 1248], "int_0": [954, 1063, 1111, 1123, 1124, 1125, 1148], "int_1": 1148, "int_liter": 1417, "int_smin": [359, 449], "int_typ": 744, "int_x": [1118, 1121, 1126], "integ": [63, 74, 153, 182, 202, 205, 212, 213, 215, 216, 232, 235, 246, 247, 251, 262, 280, 283, 289, 290, 291, 292, 293, 295, 296, 298, 305, 306, 311, 315, 316, 322, 323, 324, 325, 326, 328, 332, 334, 341, 342, 343, 344, 345, 346, 347, 359, 363, 377, 378, 379, 381, 387, 389, 415, 420, 423, 429, 430, 431, 432, 433, 434, 440, 441, 442, 443, 445, 446, 448, 449, 450, 452, 454, 456, 464, 465, 466, 467, 468, 473, 481, 484, 492, 496, 501, 533, 545, 550, 566, 568, 576, 577, 578, 579, 580, 582, 586, 598, 600, 601, 602, 606, 608, 613, 616, 619, 621, 641, 644, 645, 646, 647, 650, 655, 657, 659, 662, 673, 676, 677, 679, 681, 682, 685, 686, 687, 690, 691, 693, 695, 697, 698, 699, 701, 708, 710, 711, 714, 715, 717, 719, 721, 722, 725, 729, 736, 738, 739, 743, 747, 759, 763, 773, 778, 779, 780, 783, 797, 801, 809, 810, 812, 815, 828, 841, 845, 846, 847, 848, 853, 861, 862, 864, 873, 874, 875, 876, 879, 881, 890, 892, 902, 904, 905, 906, 907, 910, 911, 912, 915, 916, 925, 927, 928, 933, 934, 936, 937, 939, 940, 944, 946, 947, 950, 951, 952, 953, 963, 964, 978, 979, 980, 981, 987, 988, 990, 994, 995, 996, 997, 998, 1001, 1002, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1092, 1104, 1105, 1106, 1109, 1122, 1124, 1128, 1135, 1145, 1163, 1164, 1165, 1166, 1203, 1238, 1239, 1278, 1302, 1304, 1313, 1318, 1321, 1326, 1331, 1337, 1342, 1343, 1346, 1348, 1367, 1368, 1395, 1402, 1411, 1414, 1421, 1423, 1425, 1427, 1430, 1432, 1433, 1449, 1453, 1455, 1456, 1457, 1458, 1462, 1473, 1475], "integer_pow": [430, 890, 939], "integerarrai": [1028, 1048], "integertyp": 1318, "integr": [320, 763, 841, 881, 884, 954, 1111, 1118, 1119, 1121, 1123, 1125, 1126, 1141, 1142, 1148, 1198, 1199, 1200, 1312, 1325, 1326, 1414, 1449], "intellisens": 1414, "intend": [357, 1316, 1326, 1337, 1341, 1367, 1368, 1405, 1418, 1422, 1423, 1429, 1440, 1467], "intens": [132, 133, 1323, 1458, 1460], "intent": [1326, 1328, 1339, 1416, 1420], "intention": [235, 1012, 1316, 1335, 1348, 1425], "intenum": 1326, "inter": [341, 343, 344, 345, 347, 1431, 1443, 1468], "interact": [82, 241, 1313, 1315, 1323, 1326, 1339, 1350, 1354, 1412, 1415, 1419, 1426, 1429, 1433, 1438, 1444, 1446, 1449, 1452, 1456, 1462, 1464], "interactiveshel": 1360, "intercept": 1318, "interchang": [1313, 1437, 1444], "interchip": 1458, "interconnect": [1341, 1431, 1443, 1458], "interest": [491, 1313, 1319, 1320, 1322, 1341, 1350, 1354, 1411, 1418, 1419, 1421, 1422, 1426, 1431, 1433, 1437, 1438, 1440, 1449, 1455, 1457, 1464, 1466], "interestingli": [1313, 1417, 1437, 1470], "interfac": [0, 99, 262, 263, 283, 284, 327, 582, 588, 716, 717, 722, 987, 1093, 1104, 1105, 1281, 1283, 1314, 1318, 1326, 1331, 1339, 1347, 1360, 1385, 1402, 1405, 1411, 1414, 1418, 1422, 1430, 1439, 1444, 1452, 1464], "interfer": [1336, 1339, 1412, 1466], "interior": 423, "interleav": [1326, 1412, 1443, 1458], "intermedi": [67, 76, 84, 92, 182, 487, 501, 667, 1313, 1315, 1318, 1328, 1333, 1336, 1342, 1343, 1346, 1348, 1349, 1351, 1354, 1360, 1411, 1413, 1415, 1416, 1429, 1430, 1432, 1433, 1436, 1437, 1438, 1440, 1441, 1443, 1448, 1455, 1457, 1461, 1474], "intermediate_dtyp": 1415, "intermitt": 1328, "intern": [67, 82, 110, 111, 112, 195, 244, 357, 479, 481, 501, 504, 539, 800, 804, 1019, 1074, 1279, 1280, 1281, 1282, 1283, 1312, 1313, 1314, 1315, 1318, 1319, 1326, 1328, 1329, 1331, 1332, 1342, 1343, 1349, 1350, 1351, 1354, 1387, 1396, 1410, 1414, 1416, 1417, 1419, 1422, 1425, 1429, 1430, 1432, 1436, 1437, 1438, 1448, 1458, 1464, 1470, 1472, 1474], "internet": 1339, "interoper": [1312, 1343, 1344, 1408], "interp_rot": 1108, "interpol": [291, 292, 757, 853, 855, 875, 897, 1091, 1108, 1326, 1394], "interpret": [114, 182, 246, 247, 337, 363, 366, 506, 717, 1006, 1091, 1101, 1280, 1315, 1316, 1320, 1326, 1339, 1340, 1343, 1347, 1349, 1360, 1411, 1415, 1424, 1425, 1432, 1437, 1443, 1447, 1453, 1455, 1456, 1457, 1466, 1474], "interpret_op": 1319, "intersect": [758, 923, 924, 971], "intersect1d": [923, 924, 971, 1326, 1418], "interspers": [998, 1382], "interv": [529, 568, 569, 571, 657, 815, 1053, 1252, 1253], "intric": 1312, "introduc": [67, 219, 253, 550, 1316, 1318, 1319, 1322, 1326, 1333, 1334, 1341, 1346, 1349, 1402, 1410, 1411, 1414, 1416, 1417, 1418, 1419, 1421, 1425, 1426, 1427, 1430, 1432, 1443, 1448, 1449, 1452, 1458, 1470, 1474], "introduct": [77, 80, 91, 132, 194, 311, 1307, 1308, 1309, 1313, 1314, 1319, 1322, 1328, 1348, 1350, 1401, 1414, 1433, 1441, 1444, 1450, 1472], "introductori": [1320, 1432], "introspect": [1273, 1348, 1436], "intuit": [913, 1334, 1336, 1417, 1443, 1448, 1456, 1460], "inu": 1336, "inv": [785, 797, 803, 1072], "inv_a": 797, "inval": [1318, 1436], "invalid": [890, 946, 947, 1315, 1324, 1326, 1346, 1350, 1426, 1432, 1435, 1442, 1458], "invalidargu": 1350, "invalidargumenterror": [1426, 1464], "invar": [253, 254, 1411, 1436], "invari": [110, 356, 772, 1273, 1326, 1328, 1367, 1421, 1422, 1443], "invers": [120, 292, 300, 310, 314, 323, 350, 370, 470, 483, 569, 570, 571, 572, 573, 575, 638, 639, 673, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 715, 759, 793, 797, 803, 810, 817, 872, 902, 929, 932, 940, 941, 948, 949, 972, 973, 974, 975, 976, 977, 978, 980, 1059, 1060, 1061, 1062, 1077, 1092, 1101, 1102, 1104, 1105, 1106, 1117, 1143, 1156, 1168, 1173, 1188, 1213, 1216, 1226, 1231, 1251, 1272, 1326, 1349, 1367, 1395, 1432], "inverse_indic": [973, 974, 975], "inverse_jaxpr": 1436, "inverse_registri": 1436, "inverse_time_decai": 1367, "invert": [323, 324, 356, 603, 605, 765, 793, 803, 810, 824, 977, 1072, 1077], "invest": 1449, "investig": 1330, "invis": [1336, 1412], "invoc": [140, 160, 241, 1315, 1342, 1346, 1360, 1386, 1405, 1411, 1431, 1452, 1453, 1455, 1456, 1457, 1458], "invocation_indic": 1453, "invok": [13, 131, 182, 268, 424, 1012, 1313, 1315, 1319, 1339, 1343, 1346, 1357, 1360, 1386, 1429, 1432, 1433, 1455, 1456, 1460], "involv": [13, 61, 67, 69, 78, 81, 92, 113, 241, 251, 290, 501, 780, 1304, 1312, 1313, 1315, 1318, 1321, 1326, 1328, 1331, 1336, 1339, 1342, 1346, 1349, 1357, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1424, 1426, 1431, 1433, 1434, 1437, 1443, 1444, 1447, 1448, 1449, 1452, 1455, 1457, 1458, 1460, 1469, 1470], "io": [102, 816, 1318, 1323, 1348, 1349, 1358, 1431, 1460], "io_callback": [83, 1012, 1326, 1349, 1429], "iota": [330, 568, 1424, 1456], "iota_2d_kernel": 1453, "iota_dimens": 1424, "iota_kernel": 1456, "ip": [99, 1360], "ipkernel": 1360, "ipykernel": 1360, "ipykernel_228231": 1470, "ipykernel_228273": 1350, "ipykernel_228667": 1313, "ipykernel_228731": 1429, "ipykernel_229182": 1354, "ipykernel_229732": 1360, "ipykernel_230133": 1331, "ipykernel_231220": 1430, "ipykernel_231467": 1432, "ipykernel_231925": 1437, "ipykernel_launch": 1360, "ipynb": 1442, "ipython": [1313, 1323, 1326, 1328, 1360, 1426, 1432, 1433, 1438, 1444, 1464], "ir": [263, 284, 337, 1315, 1318, 1326, 1330, 1360, 1411, 1416, 1443, 1449], "ir_const": 1318, "irfft": [680, 690, 691, 692, 694, 1326, 1395], "irfft2": [691, 693, 1326], "irfftn": [689, 690, 692, 695, 1326], "irregular": [954, 1063], "irrelev": [726, 1318], "irrespect": 1475, "is_": 1318, "is_cache_first_us": 268, "is_caus": 506, "is_converg": 403, "is_custom_cal": 1386, "is_dir": 1353, "is_end": 1462, "is_equivalent_to": 1404, "is_even": 1331, "is_finit": [1333, 1336], "is_first_cycl": 1353, "is_first_devic": 1353, "is_forward_compat": 1343, "is_fully_address": [1404, 1410], "is_fully_repl": 1404, "is_hermitian": 403, "is_high": 253, "is_initi": 1371, "is_invocable_r_v": 1350, "is_known": 1318, "is_last_devic": 1353, "is_leaf": [1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1276, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1326, 1474], "is_leaf_takes_path": [1264, 1266, 1268, 1288, 1290, 1292], "is_loc": [29, 1404], "is_nonzero": 1462, "is_norm": 1140, "is_opaque_dtyp": 1326, "is_poly_dim": 1326, "is_readi": 1326, "is_schedul": 1350, "is_sourc": 135, "is_stabl": [473, 474, 1326], "is_start": [1458, 1462], "is_start_of_kernel": 1458, "is_symbolic_dim": 1326, "is_train": [67, 1413], "is_undefined_prim": 1360, "is_unknown": 1318, "is_user_file_cach": 1360, "isalignedstruct": 664, "isclos": [560, 1326], "iscomplex": [762, 770], "iscomplexobj": [761, 771], "isdtyp": 773, "isf": [1167, 1169, 1170, 1171, 1172, 1173, 1174, 1212, 1214, 1215, 1216, 1217, 1225, 1227, 1228, 1229, 1230, 1231, 1232], "isfinit": [391, 766, 767, 768, 769, 1333, 1336], "isin": 1326, "isinf": [391, 764, 767, 768, 769], "isinst": [0, 774, 1273, 1318, 1319, 1326, 1332, 1349, 1360, 1409, 1410, 1414, 1422, 1444, 1465], "isn": [1313, 1317, 1318, 1320, 1326, 1331, 1341, 1349, 1350, 1354, 1357, 1417, 1419, 1421, 1423, 1425, 1426, 1433, 1437, 1438, 1445, 1449, 1464, 1469], "isnan": [391, 764, 766, 768, 769, 844, 1335, 1432], "isneginf": [764, 766, 767, 769, 844], "isol": [1313, 1339, 1437, 1443], "isomorph": [1313, 1367, 1437], "ispec": 1463, "isposinf": [764, 766, 767, 768, 844], "isreal": 771, "isrealobj": [761, 762, 770], "isscalar": [1326, 1409], "issu": [160, 665, 772, 972, 1312, 1316, 1318, 1326, 1328, 1329, 1331, 1341, 1342, 1349, 1350, 1354, 1356, 1358, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1425, 1426, 1428, 1431, 1432, 1438, 1444, 1448, 1455, 1457, 1458, 1466], "issubclass": 1273, "issubdtyp": [107, 1318, 1326, 1348, 1425], "issubsctyp": 1326, "ist": 1336, "istft": 1102, "itali": 1432, "item": [500, 600, 717, 722, 1274, 1278, 1313, 1318, 1326, 1416, 1426, 1432, 1435, 1437, 1442, 1444], "item_shap": 1452, "items": [321, 1452, 1460], "iter": [117, 118, 122, 123, 124, 125, 126, 174, 182, 235, 259, 296, 378, 403, 456, 486, 501, 566, 720, 998, 1082, 1092, 1093, 1104, 1105, 1106, 1260, 1272, 1274, 1276, 1277, 1280, 1282, 1296, 1299, 1318, 1340, 1349, 1352, 1354, 1358, 1367, 1382, 1411, 1414, 1418, 1427, 1432, 1438, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1461, 1462, 1465, 1466, 1474, 1475], "iter_operand": 1432, "itertool": [1318, 1326, 1449], "itr": 1455, "its": [18, 64, 67, 69, 71, 74, 76, 77, 78, 81, 82, 84, 98, 132, 133, 138, 184, 235, 268, 297, 337, 340, 344, 348, 357, 380, 386, 398, 401, 407, 408, 437, 452, 453, 456, 458, 459, 460, 461, 462, 479, 499, 501, 506, 529, 553, 580, 587, 667, 683, 688, 697, 718, 720, 748, 759, 784, 881, 893, 912, 913, 919, 920, 936, 953, 965, 978, 994, 995, 996, 997, 998, 1007, 1012, 1022, 1043, 1045, 1068, 1073, 1079, 1080, 1088, 1101, 1102, 1104, 1105, 1106, 1264, 1266, 1282, 1304, 1312, 1313, 1315, 1316, 1318, 1319, 1322, 1324, 1325, 1326, 1328, 1331, 1333, 1334, 1336, 1339, 1340, 1341, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1357, 1360, 1368, 1369, 1374, 1382, 1396, 1399, 1402, 1404, 1405, 1410, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1438, 1440, 1443, 1444, 1448, 1449, 1452, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1465, 1466, 1468, 1469, 1471, 1472, 1474], "itself": [361, 619, 664, 710, 1088, 1268, 1318, 1326, 1334, 1339, 1348, 1350, 1354, 1355, 1360, 1414, 1416, 1418, 1422, 1428, 1429, 1438, 1443, 1448, 1449, 1455, 1458, 1462], "iv": 1320, "j": [315, 316, 582, 588, 610, 632, 633, 637, 639, 641, 666, 678, 679, 681, 683, 684, 685, 686, 688, 692, 693, 695, 749, 789, 790, 791, 828, 862, 879, 885, 888, 911, 914, 926, 932, 935, 938, 939, 949, 963, 984, 985, 1074, 1076, 1084, 1088, 1090, 1101, 1313, 1339, 1354, 1373, 1411, 1415, 1417, 1431, 1432, 1437, 1438, 1443, 1449, 1453, 1455, 1456, 1458, 1460, 1462], "j1": 1348, "j12": 1339, "j_": 1348, "j_1": 1348, "j_dict": [1313, 1437], "jac": 1092, "jacfun": [1313, 1437], "jacfwd": [1318, 1360, 1444], "jacobi": 1326, "jacobian": [81, 293, 295, 297, 357, 493, 1092, 1303, 1319, 1332, 1351, 1354, 1360, 1413, 1433, 1438, 1444, 1465], "jacrev": [294, 1444], "jake": [1322, 1418, 1425, 1426], "jakevdp": [1414, 1416, 1422], "januari": [1338, 1415], "jargon": [1318, 1319], "jax": [1306, 1307, 1309, 1310, 1311, 1314, 1315, 1317, 1321, 1324, 1327, 1328, 1330, 1331, 1332, 1337, 1338, 1342, 1344, 1346, 1348, 1350, 1351, 1352, 1353, 1358, 1415, 1417, 1422, 1423, 1435, 1442, 1443, 1445, 1446, 1448, 1450, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1469, 1471, 1472], "jax2tf": [503, 504, 1326, 1343, 1345, 1386], "jax2tf_associative_scan_reduct": [1326, 1328], "jax2tf_default_experimental_native_low": 1326, "jax2tf_default_native_seri": 1328, "jax2tf_native_seri": 1326, "jax_accelerator_count": 1339, "jax_arrai": [1326, 1410, 1422, 1432], "jax_array_garbage_collection_guard": 1328, "jax_array_migr": 1326, "jax_array_new": 1432, "jax_backend_target": 1328, "jax_bcoo_cusparse_low": 1328, "jax_cach": [1353, 1463], "jax_captured_constants_report_fram": 1328, "jax_captured_constants_warn_byt": 1328, "jax_check_positive_even": 1331, "jax_check_proxy_env": 1328, "jax_check_tracer_leak": [65, 66, 1328, 1342], "jax_compilation_cache_dir": [1328, 1353, 1463], "jax_compilation_cache_expect_pgl": [1328, 1353], "jax_compilation_cache_include_metadata_in_kei": 1328, "jax_compilation_cache_max_s": [1326, 1328], "jax_compiler_detailed_logging_min_op": 1328, "jax_compiler_enable_remat_pass": 1328, "jax_coordination_servic": 1326, "jax_cpp_pmap": 1326, "jax_cpu_collectives_implement": [1326, 1328], "jax_cpu_enable_async_dispatch": [1326, 1328], "jax_cpu_enable_gloo_collect": [1326, 1328], "jax_cuda_releas": 1356, "jax_cuda_visible_devic": [1326, 1328], "jax_custom_vjp_disable_shape_check": 1328, "jax_data_dependent_tracing_fallback": 1326, "jax_debug_inf": [88, 1328], "jax_debug_key_reus": [1328, 1342, 1375], "jax_debug_log_modul": [1328, 1343, 1463], "jax_debug_nan": [89, 1328, 1333, 1432], "jax_default_devic": [91, 1328], "jax_default_matmul_precis": [92, 1328], "jax_default_prng_impl": [93, 1013, 1033, 1328, 1402], "jax_disable_jit": [1328, 1333], "jax_disable_most_optim": 1328, "jax_disable_vmap_shmap_error": 1328, "jax_disallow_mesh_context_manag": 1328, "jax_distributed_debug": 1328, "jax_dtyp": 1331, "jax_dump_ir_to": [1326, 1328, 1343, 1346], "jax_dynamic_shap": 1328, "jax_eager_pmap": 1326, "jax_enable_check": [110, 1328], "jax_enable_compilation_cach": [68, 1328, 1353], "jax_enable_custom_prng": [111, 1328], "jax_enable_custom_vjp_by_custom_transpos": [112, 1328], "jax_enable_empty_arrai": 1328, "jax_enable_memori": 1326, "jax_enable_pgl": [1328, 1353], "jax_enable_x64": [717, 909, 1014, 1016, 1017, 1018, 1020, 1021, 1024, 1026, 1027, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1326, 1328, 1337, 1339, 1426, 1432], "jax_error_checking_behavior_divid": 1328, "jax_error_checking_behavior_nan": 1328, "jax_error_checking_behavior_oob": 1328, "jax_exec_time_optimization_effort": [1326, 1328], "jax_experimental_name_stack": 1326, "jax_experimental_unsafe_xla_runtime_error": 1328, "jax_explain_cache_miss": [1328, 1463], "jax_export_calling_convention_vers": [1328, 1343], "jax_export_ignore_forward_compat": [1328, 1343], "jax_fn": 113, "jax_gpu_magma_path": 397, "jax_high_dynamic_range_gumbel": 1328, "jax_hlo_source_file_canonicalization_regex": 1328, "jax_host_callback_ad_transform": 1326, "jax_host_callback_legaci": 1326, "jax_hypothesis_profil": 1339, "jax_include_debug_info_in_dump": 1328, "jax_include_full_tracebacks_in_loc": 1328, "jax_ir0_jit_sin_export": 1343, "jax_ir1_jit_sin_compil": 1343, "jax_ir2_jit_call_exported_compil": 1343, "jax_ir3_jit_my_fun_export": 1343, "jax_jit": 1430, "jax_jit_pjit_api_merg": 1326, "jax_legacy_prng_kei": [1328, 1425], "jax_log_checkpoint_residu": 1328, "jax_log_compil": [497, 1328], "jax_logging_level": [1328, 1463], "jax_memory_fitting_effort": [1326, 1328], "jax_memory_fitting_level": 1328, "jax_mock_gpu_topologi": [1328, 1463], "jax_mosaic_allow_hlo": 1328, "jax_mutable_array_check": 1328, "jax_new_checkpoint": 1413, "jax_no_trac": [552, 1328], "jax_num_cpu_devic": [1326, 1328, 1431, 1440, 1468], "jax_num_generated_cas": 1339, "jax_numpy_dtype_promot": [1328, 1473], "jax_numpy_rank_promot": [993, 1326, 1328, 1467], "jax_omnistag": 1424, "jax_optimization_level": 1328, "jax_pallas_dump_promela_to": 1328, "jax_pallas_enable_debug_check": 1328, "jax_pallas_use_mosaic_gpu": 1328, "jax_pallas_verbose_error": 1328, "jax_parallel_functions_output_gda": 1326, "jax_persistent_cache_enable_xla_cach": [1328, 1463], "jax_persistent_cache_min_compile_time_sec": [1326, 1328, 1463], "jax_persistent_cache_min_entry_size_byt": [1328, 1463], "jax_pgle_aggregation_percentil": [1328, 1353], "jax_pgle_profiling_run": [1328, 1353], "jax_pjrt_client_create_opt": 1328, "jax_platform": [1326, 1328, 1357], "jax_platform_nam": 1328, "jax_pmap_no_rank_reduct": [1326, 1328], "jax_pmap_shmap_merg": 1328, "jax_pprint_use_color": 1328, "jax_raise_persistent_cache_error": [1326, 1328], "jax_random_seed_offset": 1328, "jax_releas": 1326, "jax_remove_custom_partitioning_ptr_from_cache_kei": [1328, 1350], "jax_rocm_visible_devic": 1328, "jax_serialization_vers": 1326, "jax_share_binary_between_host": 1328, "jax_share_binary_between_hosts_timeout_m": 1328, "jax_skip_cuda_constraints_check": 1356, "jax_skip_slow_test": [1326, 1339], "jax_softmax_custom_jvp": 1328, "jax_tests_per_acceler": 1339, "jax_threefry_gpu_kernel_low": [1326, 1328], "jax_threefry_partition": [1326, 1328, 1402, 1434], "jax_traceback_filt": [1326, 1328, 1339], "jax_traceback_in_locations_limit": 1328, "jax_tracer_error_num_traceback_fram": 1328, "jax_transfer_guard": [1328, 1471], "jax_transfer_guard_device_to_devic": 1328, "jax_transfer_guard_device_to_host": 1328, "jax_transfer_guard_host_to_devic": [1328, 1471], "jax_triton_compile_via_xla": 1326, "jax_typ": 1318, "jax_use_direct_linear": 1328, "jax_use_magma": [397, 404, 1328], "jax_use_pjrt_c_api_on_tpu": 1326, "jax_use_shardy_partition": 1328, "jax_xla_backend": 1328, "jax_xla_profile_vers": 1328, "jaxcomputationbuild": 1360, "jaxexporttest": 1343, "jaxircontext": 1360, "jaxjob": 1431, "jaxlib": [1343, 1350, 1353, 1360, 1405, 1416, 1428, 1444, 1463], "jaxlib_extension_vers": 1427, "jaxlib_nightly_cuda12_releas": 1356, "jaxlib_vers": 1343, "jaxopt": [1325, 1418], "jaxpr": [252, 296, 424, 501, 1313, 1314, 1315, 1319, 1322, 1326, 1328, 1346, 1347, 1350, 1351, 1354, 1405, 1415, 1416, 1417, 1419, 1429, 1432, 1433, 1438, 1440, 1443, 1444, 1470], "jaxpr1": 1318, "jaxpr1_typ": 1318, "jaxpr1ti": 1318, "jaxpr2": 1318, "jaxpr2_typ": 1318, "jaxpr2ti": 1318, "jaxpr_as_fun": [1318, 1326], "jaxpr_eqn_ctx": 1360, "jaxpr_subcomp": 1318, "jaxpr_typ": 1318, "jaxpr_util": 1326, "jaxprbuild": 1318, "jaxpreqn": [253, 1318, 1326], "jaxpreqncontext": [254, 1360], "jaxpreqnrecip": 1318, "jaxprrecip": 1318, "jaxprti": 1318, "jaxprtrac": [1318, 1360], "jaxprtyp": 1318, "jaxruntimeerror": [119, 120, 121, 1326, 1342], "jaxspars": 239, "jaxstacktracebeforetransform": [1326, 1360], "jaxtestcas": 1326, "jaxtestload": 1326, "jaxtyp": [1367, 1414, 1419], "jekbradburi": 1415, "jep": [1312, 1316, 1326, 1330, 1387, 1402, 1409, 1414, 1417, 1443, 1446, 1466], "jet": [1326, 1369], "jex": 1416, "ji": 666, "jinja2": 1435, "jit": [10, 67, 84, 88, 89, 91, 98, 113, 119, 120, 121, 127, 182, 205, 216, 244, 305, 306, 363, 378, 379, 380, 422, 456, 486, 487, 497, 498, 501, 504, 552, 580, 600, 628, 634, 650, 651, 655, 673, 675, 718, 720, 758, 772, 800, 816, 830, 836, 842, 860, 864, 901, 902, 906, 907, 913, 914, 923, 924, 940, 945, 952, 953, 971, 972, 973, 974, 975, 976, 994, 995, 996, 997, 998, 1012, 1093, 1275, 1279, 1280, 1281, 1284, 1313, 1315, 1316, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1333, 1335, 1336, 1340, 1342, 1343, 1346, 1348, 1350, 1351, 1353, 1354, 1357, 1371, 1375, 1382, 1385, 1386, 1399, 1402, 1404, 1405, 1408, 1409, 1412, 1413, 1414, 1415, 1416, 1418, 1419, 1421, 1422, 1424, 1426, 1427, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1449, 1456, 1457, 1458, 1460, 1462, 1463, 1465, 1466, 1469, 1470, 1472, 1473, 1474, 1475], "jit__unnamed_wrapped_function_": 1350, "jit_bincount": 600, "jit_bind": 1343, "jit_delet": 650, "jit_f": [1315, 1424], "jit_info": 1360, "jit_of_checkifi": 1334, "jit_repeat": 906, "jit_rms_norm_cross_platform": 1350, "jit_rms_norm_shmap": 1350, "jit_select_tril": 1424, "jit_setdiff1d": 923, "jit_union1d": 971, "jit_uniqu": 972, "jittabl": 1328, "jittable_f": [1333, 1334], "jitted_batch_convolv": 1321, "jitter": [1415, 1452], "jitwrap": [296, 1382], "jj": 636, "jk": [666, 667, 1354], "jkm": [809, 950], "jlk": 666, "jmlr": 1367, "jmp": 1358, "jn": 641, "jnp": [0, 10, 61, 67, 73, 75, 77, 78, 79, 80, 81, 84, 107, 113, 114, 119, 121, 127, 129, 130, 142, 161, 164, 168, 195, 234, 235, 238, 240, 244, 290, 293, 295, 296, 311, 315, 316, 328, 337, 362, 363, 364, 365, 366, 367, 381, 387, 415, 421, 423, 450, 454, 457, 471, 472, 479, 484, 493, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 536, 539, 540, 555, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 586, 588, 591, 595, 596, 597, 598, 599, 600, 601, 602, 606, 608, 609, 610, 612, 613, 614, 615, 617, 619, 621, 622, 623, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 747, 749, 750, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 920, 921, 923, 924, 925, 926, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 1004, 1005, 1012, 1025, 1036, 1039, 1047, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1108, 1149, 1218, 1238, 1239, 1275, 1279, 1280, 1281, 1282, 1304, 1313, 1315, 1317, 1320, 1321, 1326, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1357, 1360, 1382, 1385, 1395, 1399, 1409, 1410, 1411, 1413, 1414, 1415, 1417, 1422, 1423, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1474], "jnp_dtype": 1426, "jnp_dtype_to_cod": 1426, "jnp_result_cod": 1426, "job": [99, 1326, 1431, 1449], "jobs_per_acc": 1339, "jobset": 1431, "join": [344, 345, 629, 630, 941, 1278, 1318, 1319, 1360, 1367, 1426, 1430, 1431, 1473], "join_effect": 1326, "joinpoint": 1367, "jointli": 173, "jokingli": 1318, "json": [1009, 1011], "jsp": [1439, 1445], "jt": [1313, 1437], "jtu": [1326, 1354], "judg": [1414, 1418, 1420], "judgment": 1418, "juli": [1338, 1343], "jump": [1322, 1415], "jun": 1343, "june": [1338, 1343], "jupyt": [1339, 1354, 1438], "jupyterrender": [1354, 1438], "jupytext": 1339, "just": [108, 296, 346, 378, 424, 456, 486, 499, 503, 504, 664, 1308, 1313, 1315, 1318, 1319, 1320, 1322, 1323, 1326, 1328, 1331, 1333, 1334, 1336, 1337, 1339, 1341, 1343, 1346, 1350, 1351, 1354, 1355, 1358, 1360, 1367, 1373, 1382, 1405, 1410, 1411, 1412, 1415, 1417, 1419, 1421, 1423, 1426, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1445, 1448, 1449, 1452, 1455, 1456, 1457, 1460, 1466, 1467, 1469, 1472, 1474], "justifi": 1426, "jv": 1348, "jv_minus_1": 1348, "jv_plus_1": 1348, "jvp": [77, 78, 79, 493, 1073, 1123, 1258, 1259, 1326, 1343, 1348, 1350, 1351, 1354, 1360, 1374, 1395, 1423, 1428, 1438, 1444, 1449, 1470], "jvp_flat": 1318, "jvp_interpret": 1319, "jvp_jaxpr": 1318, "jvp_rule": 1318, "jvp_traceabl": 1318, "jvp_v1": 1318, "jvpinterpr": 1319, "jvpinterpret": 1319, "jvptrace": 1318, "jvptracer": [1318, 1360, 1416], "jy": 336, "k": [140, 182, 233, 235, 277, 281, 282, 292, 305, 306, 311, 400, 402, 484, 506, 540, 578, 582, 610, 633, 637, 641, 651, 654, 676, 742, 788, 794, 798, 804, 807, 808, 809, 828, 829, 874, 883, 884, 901, 915, 950, 955, 956, 957, 958, 960, 961, 962, 987, 1015, 1017, 1019, 1024, 1031, 1041, 1046, 1047, 1058, 1078, 1079, 1080, 1082, 1083, 1089, 1122, 1129, 1130, 1132, 1153, 1154, 1155, 1156, 1163, 1164, 1165, 1166, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1193, 1195, 1204, 1207, 1208, 1209, 1212, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1235, 1236, 1237, 1304, 1314, 1318, 1326, 1329, 1343, 1346, 1354, 1374, 1411, 1415, 1418, 1421, 1429, 1432, 1435, 1437, 1438, 1439, 1442, 1443, 1445, 1448, 1449, 1452, 1454, 1455, 1456, 1457, 1460, 1462, 1468], "k1": [1328, 1434, 1443, 1456, 1460, 1465, 1474], "k2": [1328, 1434, 1443, 1456, 1460, 1465, 1474], "k8": 1431, "k_": 1090, "k_a": 540, "k_b": 540, "k_fetch": 1462, "k_i": 1460, "k_slice": 1460, "kaim": [520, 521], "kaiser": [599, 609, 732, 733], "kappa": [1252, 1253], "kde": [1197, 1200], "keep": [132, 296, 504, 634, 796, 814, 1218, 1239, 1304, 1313, 1317, 1318, 1319, 1323, 1326, 1328, 1329, 1341, 1346, 1348, 1349, 1358, 1366, 1367, 1373, 1415, 1416, 1417, 1419, 1421, 1424, 1425, 1426, 1427, 1430, 1437, 1441, 1443, 1452, 1455, 1457, 1458, 1462, 1465, 1466, 1469, 1473], "keep_unus": [296, 1382], "keepal": [1326, 1360], "keepdim": [3, 4, 5, 6, 34, 35, 36, 40, 41, 53, 54, 60, 362, 387, 534, 559, 561, 562, 564, 567, 576, 577, 598, 640, 796, 801, 814, 832, 834, 835, 838, 845, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 875, 892, 894, 896, 897, 942, 944, 947, 983, 1138, 1218, 1239, 1350, 1415, 1468], "kei": [107, 113, 133, 237, 248, 262, 265, 268, 277, 280, 281, 282, 283, 286, 291, 292, 296, 311, 339, 452, 473, 474, 506, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 619, 636, 641, 667, 698, 710, 738, 783, 800, 810, 811, 919, 964, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1073, 1203, 1264, 1266, 1268, 1278, 1279, 1282, 1283, 1308, 1313, 1316, 1317, 1318, 1320, 1322, 1324, 1325, 1326, 1340, 1342, 1346, 1349, 1350, 1353, 1382, 1394, 1398, 1410, 1414, 1416, 1417, 1419, 1421, 1424, 1426, 1428, 1429, 1432, 1434, 1435, 1436, 1437, 1439, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1469, 1470, 1473], "kepler": [1326, 1356], "kept": [253, 697, 1313, 1343, 1354, 1411, 1426, 1428, 1433, 1458], "kera": [346, 1355, 1398, 1422], "kernel": [81, 114, 127, 140, 153, 160, 174, 182, 183, 187, 189, 194, 291, 292, 296, 337, 341, 342, 343, 344, 345, 346, 347, 422, 517, 529, 1196, 1306, 1314, 1326, 1343, 1350, 1378, 1394, 1447, 1450, 1451, 1456, 1458, 1459, 1461, 1463, 1464], "kernel1": 1449, "kernel2": 1449, "kernel_nam": 182, "kernel_rot": 1439, "kernelapp": 1360, "kernelbas": 1360, "key1": [667, 783, 800, 811, 1073, 1425, 1444], "key2": [667, 783, 800, 811, 1073, 1425, 1444], "key3": [667, 800], "key_arr": 1425, "key_bits_arrai": 1057, "key_data": [1326, 1402, 1425], "key_path": 1474, "key_reus": [1023, 1369], "key_rot": 1108, "key_shap": [276, 277, 281, 282], "key_tim": 1108, "key_value_seq_length": 506, "keyarrai": [1326, 1414, 1425], "keyentri": [1274, 1278], "keyerror": 1360, "keyleafpair": [1280, 1282], "keypair": 280, "keypath": [1264, 1266, 1278, 1288, 1290], "keyreuseerror": [1342, 1375], "keystr": [1326, 1474], "keyword": [67, 82, 83, 85, 114, 119, 131, 184, 232, 233, 237, 262, 263, 265, 267, 283, 284, 286, 337, 424, 502, 566, 719, 783, 873, 919, 972, 977, 998, 1003, 1012, 1279, 1304, 1313, 1318, 1320, 1326, 1350, 1386, 1402, 1405, 1419, 1433, 1437], "ki": 1452, "kick": [1318, 1342], "kind": [8, 51, 579, 587, 616, 697, 742, 763, 801, 934, 1081, 1139, 1140, 1313, 1318, 1326, 1333, 1336, 1341, 1342, 1348, 1350, 1404, 1410, 1414, 1419, 1421, 1422, 1426, 1431, 1433, 1435, 1442, 1443, 1444, 1457, 1469], "kinda": 1448, "kj": 1460, "kl": [666, 667, 1134], "kl_div": [1114, 1146], "kloop": 1350, "know": [1280, 1313, 1315, 1318, 1324, 1326, 1329, 1331, 1334, 1339, 1341, 1342, 1343, 1349, 1350, 1354, 1356, 1360, 1385, 1414, 1417, 1419, 1421, 1425, 1427, 1429, 1432, 1437, 1438, 1440, 1441, 1448, 1449, 1452, 1456, 1460, 1462], "knowledg": [1313, 1329, 1421, 1448], "known": [127, 143, 197, 199, 205, 343, 344, 345, 346, 347, 363, 378, 381, 424, 457, 458, 459, 460, 461, 462, 493, 650, 817, 923, 971, 994, 995, 996, 997, 1148, 1318, 1326, 1339, 1342, 1343, 1346, 1351, 1354, 1356, 1368, 1386, 1395, 1399, 1411, 1417, 1420, 1426, 1430, 1432, 1436, 1441, 1444, 1455, 1456, 1458], "known_trac": 1318, "known_val": 1318, "kool": 1019, "kool19a": 1019, "kp": 1268, "kron": 1326, "kroneck": 777, "krylov": [235, 1106], "kth": [7, 578, 874], "kubectl": 1431, "kullback": 1134, "kv": 1415, "kv_cach": 1415, "kvcach": 1415, "kw": [877, 1275], "kw_type": 184, "kwarg": [62, 82, 83, 85, 86, 114, 131, 234, 240, 244, 265, 286, 337, 566, 718, 719, 720, 816, 873, 877, 891, 922, 1003, 1004, 1012, 1275, 1284, 1326, 1336, 1343, 1354, 1360, 1386, 1404, 1405, 1419, 1436, 1438, 1440, 1460, 1462, 1469], "kwd": [162, 163, 232, 233, 237, 394, 919], "l": [395, 401, 784, 790, 792, 1068, 1078, 1079, 1080, 1139, 1140, 1149, 1313, 1318, 1320, 1336, 1342, 1343, 1354, 1411, 1431, 1432, 1437, 1438, 1443, 1464], "l1": [1072, 1318, 1449, 1455], "l1789": 1425, "l1802": 1425, "l2": [235, 306, 1318, 1367, 1455], "l2_ann": 306, "l2_norm": 1367, "l2phy": 1415, "l_max": [1139, 1140], "la": 1444, "label": [343, 344, 1284, 1313, 1320, 1428, 1429, 1435, 1437, 1441, 1442, 1445, 1469], "label_prob": [1320, 1437], "lack": [1417, 1418, 1421, 1422, 1457], "lai": [1416, 1434], "laid": [335, 498, 500, 654, 952, 1341, 1404, 1426, 1452, 1468], "lam": 1046, "lambda": [67, 76, 79, 85, 114, 182, 234, 235, 240, 290, 303, 337, 357, 426, 433, 434, 492, 499, 501, 541, 628, 634, 759, 800, 877, 998, 1046, 1267, 1268, 1304, 1313, 1315, 1318, 1319, 1320, 1326, 1331, 1332, 1342, 1343, 1346, 1348, 1350, 1354, 1360, 1373, 1374, 1382, 1386, 1404, 1410, 1411, 1415, 1416, 1417, 1419, 1426, 1429, 1432, 1433, 1437, 1438, 1441, 1443, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1461, 1462, 1465, 1469, 1474], "lambda_": [1429, 1430], "lambdabindingrecip": 1318, "lanczo": [291, 292, 1394], "lanczos3": [291, 292, 1394], "lanczos5": [291, 292, 1394], "land": [1326, 1341, 1414, 1417], "landscap": 1312, "lane": [160, 1452, 1457], "langl": 550, "languag": [501, 1306, 1314, 1315, 1339, 1350, 1351, 1405, 1414, 1419, 1429, 1430, 1432, 1435, 1436, 1442, 1449, 1460], "lapack": [397, 404, 804], "lapack_driv": 1089, "laptop": [1356, 1427], "larg": [235, 357, 366, 367, 397, 404, 456, 486, 862, 920, 923, 971, 1123, 1257, 1258, 1259, 1313, 1318, 1323, 1326, 1329, 1331, 1339, 1340, 1341, 1346, 1349, 1350, 1354, 1355, 1367, 1385, 1413, 1414, 1418, 1424, 1426, 1427, 1431, 1433, 1437, 1438, 1441, 1443, 1449, 1452, 1455, 1457, 1460], "larger": [197, 199, 216, 219, 397, 578, 600, 622, 697, 712, 833, 873, 874, 906, 908, 972, 981, 998, 1052, 1059, 1061, 1106, 1313, 1322, 1326, 1329, 1343, 1349, 1353, 1354, 1426, 1428, 1431, 1437, 1438, 1439, 1443, 1452, 1455, 1456, 1457, 1458, 1460, 1462, 1463], "largest": [10, 381, 398, 484, 667, 697, 785, 801, 807, 860, 946, 1032, 1122, 1424, 1426, 1449, 1452, 1460], "largest_singular_valu": [794, 798, 803], "largest_valu": [578, 874], "largish": 1343, "laser": [1435, 1442], "last": [10, 61, 119, 120, 121, 303, 304, 328, 425, 426, 427, 433, 434, 435, 484, 540, 550, 579, 610, 613, 615, 621, 634, 642, 650, 679, 685, 690, 691, 693, 695, 749, 783, 800, 809, 830, 842, 860, 864, 877, 880, 886, 898, 906, 923, 934, 935, 940, 946, 950, 953, 971, 972, 987, 1024, 1040, 1041, 1099, 1102, 1106, 1203, 1280, 1313, 1315, 1316, 1318, 1326, 1331, 1332, 1342, 1343, 1346, 1349, 1350, 1354, 1360, 1373, 1375, 1395, 1419, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1435, 1438, 1439, 1442, 1443, 1447, 1452, 1453, 1455, 1457, 1458, 1460, 1470, 1473, 1474], "last_iter": 1458, "last_param": 1443, "lastdim": 1350, "lastli": 1331, "late": [424, 1318, 1455], "latenc": [174, 1328, 1353, 1415, 1452, 1455, 1457, 1458, 1475], "later": [82, 101, 716, 1091, 1313, 1318, 1329, 1336, 1341, 1342, 1343, 1346, 1353, 1405, 1414, 1416, 1426, 1428, 1430, 1436, 1437, 1449, 1452, 1457, 1458, 1466], "latest": [13, 102, 241, 244, 250, 251, 288, 1256, 1260, 1304, 1323, 1326, 1328, 1331, 1339, 1340, 1343, 1346, 1360, 1378, 1386, 1402, 1404, 1409, 1424, 1426, 1429, 1432, 1443, 1444, 1470], "latter": [343, 344, 772, 1098, 1273, 1313, 1318, 1328, 1339, 1343, 1360, 1416, 1417, 1421, 1422, 1431, 1433], "lattic": 1473, "lattice_join": 1326, "launch": [99, 1343, 1350, 1431, 1464], "launch_new_inst": 1360, "launcher": 99, "laundri": 1414, "law": [1435, 1442], "lax": [9, 10, 61, 92, 113, 114, 201, 202, 205, 208, 212, 213, 215, 296, 539, 568, 578, 579, 591, 615, 621, 629, 630, 633, 637, 660, 673, 783, 784, 789, 790, 804, 806, 807, 809, 829, 830, 837, 842, 860, 868, 874, 877, 887, 890, 898, 901, 907, 921, 934, 939, 940, 945, 946, 947, 950, 953, 965, 984, 985, 990, 994, 995, 996, 997, 998, 1040, 1068, 1070, 1078, 1083, 1085, 1086, 1089, 1094, 1095, 1096, 1097, 1098, 1104, 1105, 1106, 1304, 1313, 1316, 1318, 1326, 1328, 1331, 1333, 1335, 1341, 1343, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1359, 1360, 1369, 1385, 1399, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1424, 1425, 1429, 1432, 1433, 1434, 1436, 1438, 1440, 1441, 1443, 1447, 1448, 1449, 1452, 1455, 1457, 1460, 1462, 1465, 1468, 1470, 1474], "lax_control_flow": 1419, "lax_intern": 23, "lax_linalg": 1326, "lax_numpi": [1326, 1339, 1432], "lax_numpy_test": 1339, "lax_reduce_sum_scatt": 1458, "lax_scipy_test": 1329, "lax_sum": 1458, "layer": [344, 346, 504, 529, 1312, 1318, 1336, 1353, 1354, 1368, 1398, 1415, 1417, 1419, 1421, 1435, 1438, 1441, 1442, 1443, 1468, 1469, 1474, 1475], "layer0_output": [1354, 1438], "layer1_output": [1354, 1438], "layer_auto": 1468, "layer_s": [1434, 1435, 1442, 1443], "layer_shard": 1468, "layer_width": 1474, "layernorm": 1463, "layernorm_matmul_with_shard_map": 1463, "layernorm_matmul_without_shard_map": 1463, "layerparam": [1354, 1438], "layout": [175, 219, 262, 263, 283, 284, 1415, 1434, 1443, 1449, 1451, 1460, 1468], "lazi": [1357, 1424], "lazili": [1326, 1343, 1436], "lceil": 332, "lcm": 725, "ld": 1349, "ld_library_path": [1326, 1349, 1356, 1464], "ldexp": [715, 1326], "ldot": [510, 1040], "le": [368, 382, 383, 414, 419, 505, 507, 514, 541, 560, 636, 760, 1015, 1016, 1024, 1026, 1029, 1039, 1044, 1076, 1090, 1159, 1161, 1165, 1166, 1207, 1208, 1223, 1224, 1244, 1246, 1249, 1250, 1252, 1253, 1254, 1255], "lead": [10, 57, 67, 101, 102, 131, 219, 262, 283, 326, 327, 329, 334, 415, 429, 456, 463, 486, 568, 580, 623, 660, 673, 696, 697, 716, 719, 765, 783, 784, 790, 792, 793, 795, 829, 831, 845, 860, 882, 885, 914, 946, 959, 986, 987, 994, 995, 996, 997, 998, 1012, 1050, 1057, 1077, 1090, 1123, 1129, 1304, 1318, 1326, 1328, 1337, 1342, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1360, 1402, 1410, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1431, 1432, 1435, 1438, 1443, 1448, 1452, 1453, 1457, 1458, 1463, 1467, 1468, 1473], "leaf": [71, 81, 127, 131, 288, 290, 303, 304, 425, 426, 427, 431, 432, 433, 435, 1012, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1282, 1287, 1289, 1296, 1298, 1318, 1326, 1408, 1430, 1465, 1474], "leak": [65, 66, 1326, 1342, 1429], "leaked_tracer_error": 1326, "leaki": 531, "lean": [1312, 1418, 1426], "learn": [250, 548, 1019, 1312, 1313, 1318, 1320, 1325, 1333, 1341, 1348, 1351, 1354, 1355, 1356, 1360, 1366, 1367, 1402, 1411, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1443, 1444, 1449, 1457, 1458, 1460, 1462, 1466, 1468, 1469, 1474], "learning_r": [1367, 1469, 1474], "least": [64, 71, 92, 160, 306, 404, 595, 596, 597, 623, 653, 655, 663, 702, 703, 725, 740, 762, 771, 778, 794, 879, 883, 887, 914, 1106, 1304, 1313, 1318, 1326, 1328, 1331, 1337, 1338, 1346, 1353, 1356, 1395, 1412, 1415, 1416, 1417, 1421, 1426, 1427, 1429, 1433, 1443, 1447, 1453, 1455, 1457, 1458, 1469, 1470, 1475], "leav": [64, 71, 81, 114, 131, 135, 194, 288, 290, 291, 296, 378, 456, 486, 501, 844, 1012, 1256, 1261, 1262, 1263, 1266, 1267, 1268, 1269, 1270, 1272, 1276, 1279, 1282, 1284, 1289, 1296, 1313, 1326, 1328, 1349, 1350, 1367, 1382, 1405, 1408, 1410, 1414, 1415, 1418, 1430, 1440, 1441, 1443, 1452, 1463, 1465], "leaves_with_path": [1268, 1290], "lecun": [522, 523, 1435], "led": [1312, 1349, 1420], "left": [47, 178, 235, 332, 377, 378, 397, 406, 434, 456, 465, 466, 467, 505, 507, 508, 510, 533, 534, 559, 564, 598, 633, 637, 640, 657, 701, 718, 720, 757, 780, 807, 813, 832, 834, 835, 838, 849, 850, 851, 852, 854, 856, 857, 858, 892, 894, 915, 920, 942, 944, 982, 983, 985, 1027, 1038, 1051, 1052, 1055, 1082, 1089, 1094, 1095, 1096, 1097, 1100, 1136, 1138, 1149, 1218, 1221, 1222, 1239, 1263, 1313, 1346, 1348, 1349, 1350, 1357, 1415, 1417, 1419, 1426, 1431, 1433, 1443, 1448, 1449, 1452, 1457, 1458, 1460, 1462, 1464], "left_capacity_sem": 1458, "left_copi": 1458, "left_copy_devic": 1458, "left_copy_slic": 1458, "left_neighbor": [1448, 1458], "left_or_right": 1458, "left_recv_sem": 1458, "left_send_sem": 1458, "left_shift": [465, 604], "left_sid": 408, "left_window_s": 506, "leg": 741, "legaci": [99, 262, 283, 716, 1012, 1013, 1104, 1105, 1106, 1350, 1356, 1392, 1402, 1425, 1475], "legacy_backend_config": [262, 283, 1350], "legacy_vector": 1012, "legal": 1448, "legend": [1445, 1469], "legendr": [1139, 1140, 1418], "leibler": 1134, "lemma": 1313, "len": [67, 237, 464, 475, 481, 496, 499, 500, 621, 628, 675, 691, 695, 747, 836, 864, 873, 877, 883, 902, 937, 982, 1139, 1140, 1267, 1268, 1273, 1313, 1318, 1321, 1331, 1341, 1343, 1350, 1354, 1373, 1410, 1414, 1421, 1430, 1431, 1434, 1435, 1437, 1438, 1442, 1443, 1444, 1452, 1453, 1462, 1474], "length": [32, 52, 76, 78, 81, 97, 140, 205, 212, 213, 288, 291, 292, 297, 343, 344, 345, 363, 381, 450, 456, 493, 506, 536, 595, 600, 616, 628, 642, 652, 653, 673, 679, 680, 683, 685, 690, 693, 694, 700, 717, 719, 729, 735, 738, 747, 788, 836, 864, 877, 879, 887, 906, 907, 921, 937, 940, 953, 972, 998, 1058, 1059, 1061, 1064, 1091, 1098, 1101, 1102, 1103, 1304, 1313, 1326, 1331, 1343, 1350, 1354, 1360, 1368, 1374, 1382, 1404, 1411, 1425, 1433, 1438, 1440, 1443, 1453, 1457, 1461, 1474], "leq": [392, 547, 548, 1043, 1052], "less": [306, 368, 382, 383, 392, 397, 414, 419, 449, 547, 548, 670, 697, 710, 730, 731, 782, 865, 998, 1019, 1022, 1106, 1313, 1318, 1326, 1346, 1349, 1352, 1354, 1395, 1399, 1414, 1415, 1418, 1427, 1429, 1437, 1438, 1443, 1444, 1445, 1448, 1452, 1455, 1458, 1460, 1462, 1469, 1473], "less_equ": [392, 670, 730, 731, 781, 865], "less_jvp": 1318, "less_p": 1318, "lesson": 1457, "let": [182, 501, 502, 628, 634, 977, 1313, 1315, 1318, 1319, 1326, 1331, 1333, 1334, 1341, 1343, 1348, 1349, 1350, 1351, 1356, 1357, 1358, 1374, 1385, 1410, 1411, 1412, 1419, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1442, 1444, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1468, 1469, 1470], "letter": [251, 506, 1373, 1458], "levant": 1355, "level": [67, 92, 98, 200, 337, 356, 357, 361, 381, 440, 441, 442, 443, 445, 446, 448, 452, 457, 497, 501, 579, 591, 697, 934, 1260, 1312, 1313, 1318, 1319, 1326, 1331, 1339, 1341, 1343, 1346, 1350, 1353, 1354, 1360, 1367, 1385, 1402, 1408, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1438, 1440, 1448, 1449, 1452, 1454, 1455, 1456, 1457, 1461, 1463, 1464, 1468, 1471, 1475], "leverag": [337, 1326, 1449], "lexic": [76, 1313, 1423, 1437], "lexicograph": [237, 416, 417, 473, 579, 783, 934, 935, 1427, 1457], "lexsort": [579, 934, 1326], "lfloor": 377, "lh": [203, 204, 209, 210, 220, 317, 341, 343, 344, 345, 346, 347, 360, 361, 539, 540, 1318, 1353, 1395, 1434, 1443, 1460, 1462], "lhs_batch_dim": [203, 204, 220, 361, 539], "lhs_block": 1443, "lhs_component_count": 1395, "lhs_contracting_dim": [203, 204, 220, 361, 539], "lhs_dilat": [343, 344, 345, 347], "lhs_dtype": 1395, "lhs_precision_typ": 1395, "lhs_rhs_accum": 1395, "lhs_scale": 540, "lhs_shape": 342, "lhs_spec": [343, 344, 345, 1395, 1439, 1443], "li": 574, "lib": [264, 285, 746, 917, 918, 919, 1316, 1326, 1331, 1339, 1343, 1350, 1360, 1416, 1427, 1430, 1435, 1470], "lib64": 1464, "libcupti": 1464, "libdevic": 1326, "libdevice10": 1356, "libfoo": [264, 285], "librari": [82, 98, 264, 285, 397, 404, 800, 918, 1276, 1313, 1326, 1329, 1339, 1342, 1350, 1354, 1355, 1356, 1360, 1366, 1367, 1368, 1386, 1394, 1395, 1397, 1399, 1402, 1408, 1410, 1414, 1416, 1418, 1419, 1420, 1421, 1426, 1427, 1433, 1435, 1438, 1442, 1443, 1444, 1449, 1464, 1466, 1469, 1475], "librms_norm": 1350, "libtpu": [1326, 1356], "libtpu_releas": 1356, "licens": [1435, 1442], "lie": 636, "life": [1326, 1342], "lifecycl": 1463, "lifegiv": 1466, "lifetim": 1452, "lift": [1318, 1319, 1350, 1410, 1411, 1417, 1440, 1456], "light": 1418, "lightgrai": [1426, 1439], "lightweight": [1417, 1418, 1428], "like": [10, 63, 67, 76, 77, 78, 80, 81, 82, 83, 85, 92, 94, 96, 97, 98, 99, 106, 113, 120, 121, 127, 142, 194, 212, 251, 262, 277, 281, 282, 283, 296, 346, 348, 356, 357, 361, 364, 378, 380, 381, 415, 434, 456, 486, 493, 496, 498, 499, 502, 503, 504, 506, 555, 568, 580, 582, 588, 600, 602, 612, 615, 616, 621, 628, 634, 650, 662, 669, 675, 711, 724, 739, 763, 772, 773, 793, 800, 816, 860, 861, 870, 898, 909, 910, 911, 919, 920, 921, 925, 933, 937, 965, 972, 988, 992, 998, 1001, 1002, 1012, 1022, 1050, 1077, 1104, 1105, 1106, 1123, 1264, 1266, 1282, 1300, 1312, 1313, 1315, 1318, 1319, 1320, 1321, 1324, 1326, 1327, 1328, 1331, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1346, 1348, 1349, 1350, 1354, 1356, 1357, 1360, 1366, 1367, 1368, 1373, 1375, 1382, 1385, 1395, 1399, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1473, 1474, 1475], "likelihood": [1320, 1325, 1437], "likewis": 1458, "limit": [12, 380, 404, 471, 498, 503, 504, 697, 930, 1019, 1022, 1052, 1111, 1125, 1126, 1198, 1313, 1315, 1318, 1319, 1326, 1327, 1329, 1333, 1346, 1348, 1350, 1352, 1353, 1356, 1358, 1360, 1402, 1411, 1415, 1421, 1422, 1426, 1429, 1431, 1432, 1433, 1435, 1439, 1442, 1444, 1448, 1449, 1452, 1453, 1457, 1458, 1462], "limit_index": 472, "limit_indic": [213, 471, 1414], "lin_fn": 493, "linalg": [306, 357, 642, 666, 829, 831, 950, 985, 986, 1313, 1326, 1328, 1437], "line": [182, 1092, 1093, 1313, 1318, 1319, 1326, 1328, 1331, 1332, 1335, 1339, 1342, 1343, 1349, 1354, 1356, 1358, 1360, 1366, 1418, 1419, 1422, 1424, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1438, 1452, 1455, 1467, 1469, 1470, 1471], "line2d": [1313, 1433], "linear": [67, 76, 236, 291, 292, 356, 357, 410, 492, 505, 507, 508, 510, 531, 537, 538, 541, 547, 548, 757, 793, 794, 806, 853, 855, 873, 875, 877, 897, 987, 1064, 1066, 1067, 1077, 1078, 1079, 1080, 1086, 1087, 1088, 1091, 1098, 1099, 1102, 1103, 1104, 1105, 1106, 1108, 1313, 1325, 1326, 1336, 1343, 1346, 1350, 1351, 1354, 1360, 1385, 1394, 1411, 1415, 1416, 1417, 1418, 1419, 1429, 1430, 1433, 1437, 1438, 1444, 1452, 1460, 1475], "linear_ramp": 873, "linear_transpos": 1326, "linear_util": [1318, 1326, 1360, 1387], "linearize_flat": 1318, "linearli": [235, 1354, 1360, 1411, 1432, 1438, 1458], "linearoper": [1104, 1105], "lineax": [1355, 1418], "linen": 1353, "linewidth": [585, 587], "link": [1009, 1011, 1304, 1319, 1326, 1333, 1339, 1341, 1356, 1426, 1428, 1431, 1436, 1464], "linker": 1349, "linspac": [568, 574, 582, 588, 727, 729, 827, 837, 868, 898, 954, 1063, 1313, 1326, 1350, 1399, 1414, 1433, 1439, 1444], "linter": 1339, "linux": [1326, 1338, 1339, 1444], "list": [2, 27, 67, 69, 78, 81, 85, 97, 114, 160, 205, 211, 218, 253, 254, 267, 296, 297, 303, 304, 339, 342, 363, 366, 378, 397, 425, 426, 427, 431, 432, 433, 434, 435, 456, 464, 486, 491, 492, 496, 500, 501, 539, 582, 586, 588, 595, 596, 597, 610, 612, 662, 666, 667, 727, 729, 736, 738, 739, 815, 827, 836, 861, 877, 919, 925, 933, 937, 988, 998, 1002, 1257, 1263, 1264, 1265, 1266, 1273, 1278, 1279, 1287, 1288, 1289, 1290, 1297, 1304, 1314, 1318, 1319, 1321, 1322, 1324, 1326, 1328, 1331, 1338, 1339, 1340, 1341, 1342, 1343, 1348, 1349, 1350, 1351, 1355, 1357, 1358, 1367, 1374, 1382, 1386, 1395, 1399, 1405, 1411, 1412, 1414, 1418, 1425, 1430, 1431, 1432, 1434, 1435, 1436, 1438, 1443, 1447, 1452, 1456, 1457, 1462, 1465, 1474], "list_of_list": 1474, "list_of_tre": 1474, "listedcolormap": 1439, "listen": 99, "lit": 1318, "lit_bind": 1318, "lit_val": 1318, "lite": 1462, "liter": [176, 182, 246, 247, 378, 404, 406, 493, 501, 506, 509, 529, 534, 539, 1070, 1073, 1075, 1078, 1083, 1089, 1138, 1303, 1318, 1319, 1326, 1411, 1417, 1436, 1473], "literatur": 1319, "littl": [83, 197, 199, 872, 977, 1318, 1326, 1350, 1354, 1358, 1418, 1420, 1429, 1438, 1445, 1448, 1452], "live": [18, 264, 285, 494, 1326, 1340, 1341, 1343, 1409, 1412, 1427, 1436, 1448, 1455, 1456, 1458, 1461], "lj": 667, "ll": [160, 423, 465, 784, 836, 981, 1052, 1068, 1073, 1135, 1280, 1281, 1282, 1313, 1318, 1319, 1334, 1336, 1348, 1349, 1350, 1353, 1360, 1412, 1414, 1417, 1418, 1422, 1423, 1424, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1455, 1456, 1460, 1461, 1469], "ll128": 1353, "llm": [1355, 1413, 1417], "llo": 1449, "llvm": [190, 1326, 1339, 1427], "lm": 666, "lm1b": 1353, "lmbda": 296, "lmpn": 1418, "ln": [570, 572, 575], "ln_2": 1429, "ln_out": 1463, "ln_x": 1429, "lo": [1313, 1326, 1423, 1433], "load": [160, 171, 172, 185, 186, 264, 285, 499, 918, 919, 1009, 1011, 1314, 1328, 1350, 1352, 1353, 1355, 1386, 1418, 1419, 1422, 1431, 1439, 1441, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1464], "load_i": 1452, "load_slot": 1452, "loadabl": 918, "loader": [1341, 1431, 1435, 1442], "loadlibrari": [264, 285, 1350], "lobpcg": 235, "loc": [1025, 1056, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1343, 1360, 1445], "local": [83, 85, 97, 99, 132, 136, 137, 235, 344, 397, 404, 496, 499, 500, 506, 998, 999, 1012, 1260, 1326, 1329, 1331, 1334, 1341, 1354, 1360, 1368, 1375, 1412, 1417, 1425, 1431, 1443, 1444, 1462, 1463, 1464, 1467, 1468, 1470, 1471, 1473], "local_arrai": 1431, "local_barri": 1458, "local_batch": 1443, "local_copi": 1458, "local_copy_op": 1458, "local_copy_sem": 1458, "local_cuda_path": 1339, "local_cudnn_path": 1339, "local_data": [499, 1410], "local_devic": [499, 1326, 1341, 1343, 1404, 1431, 1434], "local_device_count": [94, 137, 499, 998, 1353, 1431, 1458], "local_device_id": 99, "local_hardware_id": 102, "local_inp": 1410, "local_input": [137, 1410, 1449], "local_loss": [1417, 1443], "local_nccl_path": 1339, "local_out": 1410, "local_output": 1449, "local_param": 1443, "local_scratch": 1458, "local_scratch_ref": 1458, "local_shap": 499, "local_shard": 1410, "local_test_job": 1339, "local_wheel_dist_fold": 1339, "local_wheel_exclusion_list": 1339, "local_wheel_inclusion_list": 1339, "local_window_s": 506, "local_xla_path": 1339, "localhost": [99, 1431, 1464], "locat": [10, 292, 326, 344, 424, 735, 736, 750, 860, 878, 921, 981, 1025, 1055, 1304, 1315, 1318, 1321, 1326, 1339, 1342, 1349, 1405, 1426, 1441, 1447, 1452, 1456, 1462, 1463, 1464, 1469], "location_cach": 1360, "lock": [235, 1339], "lockstep": 1452, "log": [85, 268, 372, 373, 375, 393, 412, 491, 497, 532, 533, 534, 546, 671, 805, 819, 821, 822, 1009, 1011, 1019, 1029, 1036, 1038, 1112, 1113, 1114, 1124, 1127, 1128, 1134, 1135, 1136, 1137, 1138, 1141, 1145, 1146, 1148, 1150, 1151, 1154, 1158, 1159, 1160, 1163, 1165, 1169, 1170, 1171, 1174, 1176, 1177, 1178, 1181, 1184, 1185, 1186, 1191, 1192, 1193, 1201, 1205, 1207, 1210, 1214, 1219, 1221, 1223, 1227, 1228, 1229, 1233, 1236, 1240, 1243, 1244, 1245, 1247, 1249, 1252, 1254, 1313, 1320, 1333, 1334, 1335, 1339, 1343, 1346, 1348, 1349, 1350, 1353, 1385, 1412, 1429, 1431, 1433, 1436, 1437, 1447, 1464, 1471], "log1p": [375, 674, 817, 1385], "log1pexp": [1313, 1433], "log1pexp_jvp": [1313, 1433], "log2": [672, 817, 819, 822, 1072, 1429], "log2_if_rank_2": 1429, "log2_with_print": 1429, "log_2": [389, 822, 1354, 1438], "log_compil": 1326, "log_dir": [1009, 1010, 1011, 1464], "log_explicit": [1328, 1471], "log_joint": 1445, "log_plus_on": 412, "log_prob": 1445, "log_sigmoid": 542, "log_softmax": [545, 1147, 1326], "log_valu": [1333, 1348, 1412], "logabsdet": 805, "logaddexp": [822, 1326], "logaddexp2": 1326, "logarithm": [372, 373, 411, 412, 533, 534, 671, 672, 674, 727, 805, 815, 817, 818, 819, 820, 822, 827, 1136, 1138, 1326, 1349], "logcdf": [1157, 1159, 1160, 1161, 1162, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1242, 1244, 1245, 1246, 1247], "logdir": 1464, "loggamma": [1029, 1326], "logger": 1328, "logic": [83, 85, 132, 133, 296, 304, 321, 440, 443, 448, 465, 466, 467, 491, 502, 610, 616, 621, 719, 823, 825, 826, 921, 1280, 1282, 1318, 1322, 1333, 1339, 1341, 1342, 1343, 1349, 1350, 1353, 1354, 1373, 1382, 1404, 1410, 1415, 1417, 1419, 1422, 1425, 1429, 1431, 1432, 1434, 1440, 1443, 1449, 1452, 1458, 1460, 1462, 1465, 1468, 1472, 1474], "logical_and": [1326, 1331, 1452, 1458], "logical_not": [759, 1331], "logical_or": 1331, "logical_to_phys": 1415, "logist": [1120, 1437], "logit": [504, 506, 1019, 1032, 1313, 1326, 1336, 1419, 1435, 1437, 1442], "logpdf": [1157, 1158, 1160, 1161, 1162, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1204, 1206, 1209, 1211, 1212, 1213, 1215, 1216, 1217, 1219, 1222, 1223, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1234, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1251, 1253, 1255, 1326, 1445], "logpmf": [1153, 1155, 1156, 1164, 1166, 1208, 1220, 1224, 1235, 1237, 1326], "logsf": [1157, 1158, 1159, 1161, 1162, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1180, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1242, 1243, 1244, 1246, 1247], "logspac": [727, 815], "logsumexp": [351, 1326, 1435, 1442], "lollipop": 1318, "long": [99, 616, 803, 1313, 1318, 1323, 1326, 1337, 1339, 1343, 1349, 1360, 1386, 1412, 1414, 1416, 1417, 1418, 1422, 1424, 1426, 1427, 1432, 1433, 1449, 1455, 1464, 1474], "long_mask": 675, "longer": [84, 296, 585, 587, 634, 998, 1313, 1316, 1326, 1338, 1342, 1349, 1350, 1352, 1356, 1382, 1399, 1410, 1413, 1419, 1422, 1425, 1426, 1428, 1434, 1437, 1446, 1447, 1448, 1452, 1455, 1463, 1464, 1468, 1469], "longest": 1273, "longitud": [1140, 1149], "longitudin": 1149, "longlong": 259, "look": [133, 194, 248, 249, 499, 1312, 1313, 1318, 1319, 1325, 1326, 1333, 1339, 1342, 1348, 1349, 1350, 1354, 1355, 1356, 1357, 1366, 1367, 1371, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1424, 1426, 1429, 1430, 1431, 1433, 1434, 1436, 1437, 1438, 1443, 1448, 1449, 1452, 1455, 1458, 1460, 1464, 1468, 1469, 1474], "lookup": [499, 1462], "loop": [75, 174, 182, 187, 378, 402, 415, 456, 486, 987, 1012, 1313, 1321, 1326, 1331, 1340, 1341, 1342, 1349, 1350, 1353, 1382, 1411, 1421, 1429, 1433, 1434, 1436, 1437, 1441, 1444, 1447, 1449, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1464, 1466, 1475], "loop_bodi": [1429, 1452], "loop_indic": 1449, "loop_jmp": [1313, 1437], "loop_mjp": [1313, 1437], "loop_v": [1313, 1437], "loopi": 1418, "loos": 1318, "lose": [574, 665, 1367, 1412, 1426, 1460], "loss": [548, 793, 1077, 1313, 1320, 1354, 1385, 1417, 1434, 1437, 1438, 1443, 1469, 1474], "loss2": [1320, 1437], "loss_checkpoint": [1354, 1438], "loss_checkpoint2": [1354, 1438], "loss_dp": 1443, "loss_fn": [1313, 1367, 1474], "loss_fsdp": 1443, "loss_fsdp_tp": 1443, "loss_jit": 1434, "loss_pp": 1443, "loss_spmd": 1443, "loss_tp": 1443, "loss_valu": [1320, 1437], "lost": [337, 1328, 1336, 1414], "lot": [746, 917, 1318, 1326, 1331, 1334, 1350, 1367, 1413, 1417, 1418, 1427, 1432, 1435, 1436, 1440, 1442, 1448, 1456, 1460], "loud": [1423, 1424], "love": [1322, 1366], "low": [337, 343, 344, 345, 347, 357, 381, 423, 440, 441, 442, 443, 445, 446, 448, 452, 457, 539, 1015, 1019, 1022, 1032, 1070, 1198, 1313, 1326, 1328, 1350, 1360, 1416, 1418, 1433, 1449, 1452, 1453, 1457, 1460, 1464], "lower": [84, 106, 182, 233, 244, 263, 284, 298, 299, 300, 301, 309, 310, 312, 313, 314, 321, 322, 323, 324, 325, 331, 332, 334, 336, 337, 340, 348, 349, 350, 359, 368, 372, 375, 377, 378, 381, 382, 383, 386, 389, 391, 392, 395, 398, 400, 401, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 424, 429, 430, 434, 437, 449, 454, 455, 456, 457, 465, 466, 467, 468, 469, 470, 476, 480, 482, 483, 486, 501, 527, 568, 579, 591, 676, 773, 784, 790, 792, 800, 853, 855, 875, 890, 897, 934, 955, 956, 957, 958, 960, 961, 962, 990, 1052, 1053, 1066, 1067, 1068, 1070, 1078, 1079, 1080, 1081, 1086, 1087, 1094, 1095, 1096, 1097, 1125, 1126, 1135, 1149, 1306, 1312, 1314, 1316, 1318, 1326, 1334, 1343, 1346, 1349, 1350, 1352, 1353, 1360, 1373, 1385, 1386, 1395, 1405, 1412, 1415, 1416, 1417, 1418, 1424, 1426, 1427, 1430, 1434, 1443, 1447, 1448, 1452, 1454, 1455, 1456, 1457, 1462], "lower_cal": 1405, "lower_fn": 1373, "lower_seg": 1135, "lowered_with_x": 1315, "lowering_arg": [263, 284], "lowering_paramet": [1343, 1360], "lowering_platform": [1326, 1343, 1405], "lowering_semant": 160, "loweringparamet": [1360, 1405], "loweringrul": [263, 284], "loweringrulecontext": [1343, 1360], "loweringsemant": 160, "lowest": [335, 1431, 1449, 1452, 1457], "lp": 1014, "lpmn": [1140, 1326, 1418], "lpmn_valu": [1326, 1418], "lr": 1313, "lru": 1326, "lru_cach": [1318, 1463], "lst": 1318, "lst1": 1318, "lst2": 1318, "lsu": 1452, "lt": [368, 382, 383, 392, 419, 1318, 1354, 1411, 1438], "lu": [402, 805, 1079, 1080, 1086, 1326, 1360], "lu_and_piv": 1080, "lu_factor": 1080, "lu_solv": [1078, 1079, 1086], "luck": 1318, "luckili": [1313, 1341, 1437], "lufac": [1079, 1080], "lurk": [1313, 1433], "lwork": 1083, "lx": 1427, "ly": 1427, "lz": 1427, "m": [166, 195, 233, 235, 238, 400, 401, 403, 404, 405, 406, 407, 408, 410, 428, 540, 597, 599, 609, 636, 641, 660, 666, 676, 683, 689, 690, 691, 701, 702, 703, 715, 732, 733, 776, 777, 779, 785, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 803, 804, 805, 806, 807, 808, 809, 812, 829, 831, 879, 881, 883, 884, 887, 915, 950, 955, 956, 957, 958, 960, 961, 962, 972, 986, 987, 1022, 1043, 1058, 1078, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1104, 1105, 1106, 1139, 1140, 1144, 1149, 1279, 1280, 1281, 1282, 1313, 1317, 1318, 1323, 1326, 1329, 1331, 1339, 1350, 1354, 1358, 1385, 1411, 1415, 1429, 1432, 1434, 1435, 1437, 1438, 1442, 1443, 1452, 1453, 1455, 1460, 1462, 1464], "m1": [915, 1326], "m_i": [1313, 1437, 1460], "m_slice": 1460, "m_sp": [195, 1385], "ma": [585, 1360, 1415], "mac": [1326, 1339], "machep": 697, "machin": [424, 697, 1019, 1312, 1313, 1320, 1326, 1339, 1341, 1343, 1350, 1354, 1355, 1356, 1366, 1411, 1431, 1432, 1434, 1437, 1440, 1443, 1444, 1449, 1456, 1457, 1462, 1466, 1469, 1474, 1475], "machineri": [114, 1313, 1319, 1326, 1346, 1348, 1387, 1411, 1412, 1416, 1417, 1419, 1433, 1436], "maco": [1339, 1356, 1444], "macro": [1339, 1350, 1420], "made": [155, 337, 424, 627, 1316, 1319, 1326, 1340, 1360, 1385, 1402, 1419, 1421, 1425, 1426, 1427, 1449, 1452, 1453, 1461], "magic": [1323, 1430], "magma": [397, 404], "magnitud": [340, 1313, 1413, 1426, 1444, 1455], "mai": [9, 10, 18, 61, 62, 65, 66, 67, 69, 78, 80, 81, 84, 85, 96, 98, 99, 101, 102, 113, 127, 131, 187, 205, 237, 262, 283, 296, 356, 363, 381, 395, 397, 403, 408, 415, 422, 424, 439, 445, 446, 450, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 492, 553, 566, 578, 591, 616, 621, 636, 641, 650, 651, 654, 655, 664, 666, 667, 697, 716, 718, 719, 720, 723, 724, 735, 736, 738, 759, 798, 800, 836, 860, 872, 873, 874, 877, 879, 882, 885, 893, 907, 909, 918, 953, 1009, 1011, 1012, 1074, 1085, 1093, 1106, 1129, 1276, 1306, 1307, 1309, 1310, 1312, 1313, 1316, 1318, 1321, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1360, 1367, 1373, 1382, 1386, 1395, 1399, 1402, 1405, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1440, 1442, 1443, 1444, 1448, 1449, 1453, 1455, 1456, 1458, 1460, 1462, 1464, 1465, 1466, 1469, 1471], "main": [0, 233, 651, 652, 653, 654, 655, 773, 788, 802, 812, 952, 955, 956, 957, 958, 960, 961, 962, 1312, 1315, 1316, 1318, 1326, 1328, 1329, 1335, 1336, 1337, 1339, 1343, 1350, 1353, 1356, 1358, 1360, 1385, 1387, 1410, 1412, 1413, 1414, 1417, 1418, 1420, 1421, 1424, 1425, 1427, 1428, 1431, 1432, 1434, 1440, 1448, 1449, 1455, 1457, 1458, 1460, 1461, 1462, 1465, 1468, 1474], "mainli": [493, 1348, 1417, 1418, 1422, 1462], "mainlin": 1318, "maintain": [235, 772, 920, 1312, 1326, 1329, 1339, 1343, 1355, 1412, 1413, 1418, 1421, 1422, 1425, 1426, 1427, 1441, 1448, 1449, 1455, 1457, 1469, 1473, 1475], "mainten": [1350, 1418], "maintrac": 1318, "major": [102, 262, 263, 283, 284, 335, 887, 901, 902, 907, 1316, 1318, 1326, 1350, 1414, 1415, 1420, 1425, 1427, 1448, 1449, 1452, 1455, 1458, 1460, 1462, 1474], "make": [67, 82, 110, 171, 238, 296, 336, 346, 366, 367, 456, 486, 487, 503, 504, 506, 600, 642, 664, 667, 697, 972, 981, 998, 1022, 1102, 1275, 1280, 1299, 1312, 1313, 1315, 1316, 1318, 1319, 1320, 1323, 1324, 1326, 1328, 1329, 1331, 1332, 1333, 1334, 1339, 1341, 1342, 1343, 1346, 1348, 1352, 1353, 1356, 1358, 1360, 1362, 1367, 1374, 1382, 1401, 1410, 1411, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1429, 1430, 1432, 1433, 1434, 1435, 1437, 1439, 1440, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1455, 1457, 1458, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1472, 1474], "make_alpha": 1439, "make_array_from_callback": [137, 499, 1410], "make_array_from_process_local_data": [500, 1341, 1431], "make_array_from_single_device_arrai": [137, 1326, 1410, 1431], "make_async_copi": [1448, 1458], "make_async_remote_copi": [1448, 1458], "make_classif": 1385, "make_device_arrai": 1410, "make_jaxpr": [1313, 1318, 1326, 1349, 1350, 1354, 1411, 1416, 1429, 1430, 1432, 1433, 1436, 1438, 1440, 1443, 1470], "make_jaxpr_v1": 1318, "make_jnp_zero": 1426, "make_kernel": 1449, "make_lay": 1368, "make_mesh": [316, 1326, 1341, 1350, 1415, 1431, 1434, 1440, 1443, 1458, 1468], "make_np_zero": 1426, "make_pair": 1350, "make_ref": 1448, "make_schedul": 1367, "make_sharded_device_arrai": [1326, 1410], "make_tf_zero": 1426, "make_torch_zero": 1426, "make_z": 1315, "make_zero": 1360, "maketupl": [746, 917], "maml": 1313, "manag": [65, 66, 88, 89, 91, 92, 93, 98, 110, 111, 112, 113, 129, 130, 343, 497, 504, 552, 993, 1003, 1004, 1011, 1256, 1312, 1319, 1326, 1342, 1357, 1360, 1375, 1382, 1404, 1423, 1427, 1431, 1440, 1441, 1443, 1447, 1448, 1452, 1458, 1461, 1463, 1464, 1467, 1469, 1471, 1473], "mandat": 1343, "mandatori": 1353, "mani": [67, 182, 219, 378, 403, 415, 456, 464, 493, 696, 726, 878, 1015, 1019, 1022, 1032, 1082, 1312, 1313, 1316, 1320, 1326, 1331, 1336, 1339, 1341, 1342, 1343, 1346, 1349, 1350, 1354, 1355, 1395, 1410, 1411, 1412, 1414, 1415, 1416, 1418, 1419, 1420, 1422, 1424, 1426, 1427, 1429, 1431, 1432, 1437, 1438, 1440, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1456, 1457, 1460, 1462, 1465, 1466, 1469, 1474], "manifest": [1326, 1431, 1452, 1462], "manifold": [1320, 1437], "manipul": [1107, 1327, 1418, 1425, 1427, 1436, 1449], "manner": [235, 305, 306, 650, 965, 1275, 1312, 1342, 1348, 1399, 1405, 1414, 1430, 1444, 1466, 1468], "mantissa": [697, 715, 779, 1426], "mantissa_bit": [444, 1354], "manual": [174, 1256, 1313, 1314, 1315, 1319, 1326, 1328, 1334, 1336, 1339, 1342, 1343, 1350, 1352, 1354, 1358, 1399, 1415, 1427, 1431, 1432, 1438, 1440, 1444, 1448, 1452, 1455, 1458, 1461, 1469], "manual_ax": 1443, "manual_clip": 1342, "manually_batched_convolv": 1321, "manually_vectorized_convolv": 1321, "manylinux2010": 1326, "manylinux2014": 1326, "manylinux2014_x86_64": 1339, "map": [182, 194, 262, 263, 283, 284, 292, 303, 304, 315, 316, 356, 425, 426, 427, 431, 432, 433, 434, 435, 456, 499, 501, 502, 566, 719, 738, 873, 998, 1012, 1091, 1093, 1104, 1105, 1106, 1256, 1268, 1269, 1276, 1282, 1291, 1304, 1313, 1318, 1319, 1326, 1332, 1333, 1334, 1336, 1348, 1367, 1373, 1399, 1402, 1404, 1408, 1421, 1422, 1425, 1426, 1428, 1430, 1433, 1434, 1436, 1437, 1440, 1441, 1444, 1447, 1449, 1452, 1453, 1455, 1456, 1457, 1461, 1462, 1465, 1468, 1469], "map_coordin": 1418, "map_with_path": [1264, 1292, 1326], "mapped_av": 1318, "mapprimit": 1326, "mapsto": [1313, 1433, 1437], "march": [1343, 1357, 1410], "margin": [1313, 1343, 1437], "marin": 1355, "mark": [96, 101, 102, 296, 634, 716, 998, 1003, 1279, 1284, 1326, 1329, 1342, 1367, 1382, 1414, 1419, 1426, 1441, 1455, 1461, 1470, 1474], "markdown": 1339, "marked_pytre": 1367, "marker": 1465, "markupsaf": 1435, "mask": [144, 145, 147, 148, 149, 150, 151, 155, 185, 186, 506, 550, 628, 675, 828, 877, 878, 895, 896, 1326, 1342, 1419, 1424, 1432, 1449, 1459, 1467], "mask_block": 1462, "mask_data": 1462, "mask_func": 828, "mask_index_map": 1462, "mask_kei": 1462, "mask_map": 1462, "mask_ref": 1462, "mask_types_find": 1462, "maskedarrai": 585, "mass": [1015, 1017, 1031, 1040, 1046, 1047, 1153, 1154, 1155, 1163, 1164, 1165, 1166, 1207, 1208, 1219, 1220, 1223, 1224, 1235, 1236, 1237, 1367], "mat": [195, 201, 205, 207, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 311, 1444], "mat_bcoo": 207, "mat_bcsr": 222, "mat_coo": [224, 228], "mat_dens": [217, 227, 231], "mat_out": [214, 216, 219], "match": [81, 131, 135, 182, 212, 219, 235, 250, 262, 283, 301, 311, 313, 322, 324, 325, 336, 337, 343, 344, 348, 359, 360, 361, 365, 367, 368, 382, 383, 392, 414, 416, 417, 418, 419, 421, 430, 434, 449, 450, 464, 465, 466, 467, 480, 492, 499, 500, 540, 565, 574, 610, 628, 644, 645, 664, 729, 763, 812, 813, 834, 847, 848, 864, 877, 882, 885, 896, 906, 907, 914, 981, 985, 1012, 1013, 1093, 1104, 1105, 1139, 1140, 1257, 1258, 1259, 1262, 1272, 1277, 1304, 1318, 1319, 1324, 1325, 1326, 1328, 1329, 1339, 1346, 1350, 1360, 1373, 1382, 1395, 1404, 1415, 1418, 1422, 1431, 1440, 1441, 1443, 1447, 1452, 1455, 1465, 1468, 1470, 1474, 1475], "materi": [304, 1313, 1334, 1411, 1424, 1431, 1437], "math": [160, 498, 500, 533, 545, 1014, 1043, 1108, 1136, 1147, 1326, 1349, 1354, 1430, 1432, 1433, 1440], "mathbb": [1313, 1433, 1437, 1460], "mathbf": [1181, 1182, 1313], "mathcal": [1354, 1438], "mathemat": [76, 289, 290, 293, 295, 297, 493, 540, 927, 1043, 1302, 1303, 1313, 1320, 1325, 1326, 1349, 1360, 1418, 1419, 1426, 1433, 1437], "mathit": [333, 391, 408, 468, 1082, 1135], "mathrm": [188, 299, 300, 309, 310, 312, 313, 314, 318, 319, 333, 349, 350, 369, 370, 371, 372, 373, 375, 386, 391, 393, 411, 412, 416, 417, 437, 468, 469, 470, 482, 483, 505, 506, 507, 508, 510, 511, 512, 513, 514, 531, 532, 533, 535, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 734, 742, 926, 930, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1154, 1155, 1157, 1158, 1167, 1169, 1175, 1176, 1177, 1179, 1183, 1184, 1185, 1187, 1190, 1191, 1204, 1209, 1212, 1225, 1227, 1242, 1243, 1244, 1246, 1248, 1249, 1250], "mathsf": [1313, 1433, 1437], "mathtt": [560, 760], "matmul": [92, 158, 178, 311, 361, 539, 540, 660, 666, 749, 797, 800, 813, 831, 984, 985, 986, 987, 1082, 1104, 1105, 1106, 1326, 1346, 1360, 1415, 1431, 1443, 1452, 1456, 1460, 1462], "matmul_2d_wg_manu": 1415, "matmul_allgath": 1443, "matmul_allgather_overlap": 1443, "matmul_allgather_overlapped_bidi": 1443, "matmul_bas": [1415, 1443], "matmul_flop": 1460, "matmul_flops_intens": 1460, "matmul_kernel": [1449, 1456, 1460], "matmul_membw": 1460, "matmul_psumscatt": 1443, "matmul_psumscatter_overlap": 1443, "matmul_psumscatter_overlapped_bidi": 1443, "matmul_reduce_scatt": 1415, "matmul_reducescatt": 1415, "matmul_refer": 1443, "matmul_sharded_x": 1410, "matmul_smal": 1460, "matplotlib": [1313, 1358, 1426, 1433, 1439, 1444, 1445, 1469], "matric": [238, 262, 283, 311, 395, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 526, 676, 743, 777, 788, 796, 798, 799, 800, 801, 803, 807, 812, 814, 953, 1041, 1043, 1072, 1078, 1089, 1090, 1313, 1326, 1418, 1437, 1438, 1441, 1443, 1444, 1456, 1460, 1462], "matrix": [33, 92, 195, 196, 197, 198, 199, 207, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 317, 356, 360, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 506, 540, 636, 641, 651, 660, 666, 676, 743, 749, 777, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 807, 808, 809, 812, 813, 814, 829, 830, 831, 836, 879, 883, 950, 953, 982, 984, 985, 986, 987, 1041, 1043, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1104, 1105, 1106, 1107, 1221, 1222, 1304, 1317, 1323, 1326, 1328, 1354, 1385, 1395, 1413, 1415, 1418, 1431, 1434, 1438, 1441, 1444, 1449, 1452, 1454, 1455, 1456, 1458, 1459, 1461, 1463, 1468, 1475], "matrix_norm": 814, "matrix_pow": 1326, "matrix_rank": 1326, "matrix_transpos": [33, 876, 953], "matrix_vector_product": 987, "matter": [99, 487, 1313, 1323, 1326, 1341, 1343, 1415, 1417, 1426, 1431, 1433, 1437, 1439, 1443, 1458, 1466], "mattjj": [1415, 1417, 1423, 1424], "matur": [1316, 1356, 1414, 1449], "matvec": [356, 986], "max": [10, 12, 147, 251, 305, 333, 417, 425, 441, 460, 537, 538, 561, 600, 622, 697, 801, 803, 835, 838, 860, 892, 944, 994, 995, 996, 997, 1019, 1072, 1092, 1104, 1105, 1106, 1149, 1238, 1318, 1326, 1342, 1346, 1349, 1457, 1458, 1462], "max_cache_size_": 1326, "max_concurrent_step": [160, 174], "max_dim": [1326, 1346], "max_iter": [403, 1082], "max_line_width": [585, 587], "max_norm": 1367, "max_shared_dim": 1373, "max_squar": 1072, "max_vers": 102, "max_width": 87, "maxexp": 697, "maxim": [305, 1434, 1458], "maximum": [5, 10, 34, 102, 160, 174, 176, 177, 235, 307, 352, 403, 416, 417, 441, 479, 576, 577, 616, 622, 712, 832, 835, 838, 839, 844, 845, 846, 849, 850, 851, 852, 854, 857, 860, 873, 892, 944, 981, 994, 1048, 1054, 1093, 1104, 1105, 1106, 1135, 1139, 1140, 1149, 1323, 1325, 1326, 1328, 1354, 1367, 1386, 1426, 1434, 1435, 1438, 1442, 1462], "maximum_supported_calling_convention_vers": 1343, "maximum_supported_serialization_vers": 1386, "maxit": [1093, 1104, 1105, 1106], "maxlen": 1415, "maxpool": 1368, "maxtext": [1353, 1355], "maxval": [619, 667, 698, 710, 964, 1048, 1054], "maxwel": [1025, 1356], "may_alia": 96, "mayb": [1313, 1318, 1323, 1358, 1412, 1416, 1421, 1423, 1437, 1449], "maybe_find_leaked_trac": 1326, "mbarrier": 1452, "mcjax": 1328, "mcmc": 1325, "md": [1316, 1326, 1328, 1346, 1355, 1402, 1428], "mdc": 1474, "mdl": [132, 133], "me": [1415, 1417, 1443], "mean": [10, 69, 83, 84, 99, 101, 136, 137, 182, 185, 186, 246, 247, 296, 341, 343, 344, 345, 346, 347, 360, 361, 378, 421, 424, 426, 456, 493, 498, 524, 527, 529, 550, 598, 616, 633, 637, 641, 660, 666, 716, 728, 749, 759, 783, 785, 795, 800, 809, 813, 829, 835, 849, 850, 851, 852, 854, 856, 857, 858, 860, 873, 891, 909, 913, 922, 935, 942, 950, 983, 984, 985, 994, 995, 996, 997, 998, 1012, 1015, 1041, 1046, 1055, 1092, 1098, 1099, 1102, 1103, 1199, 1221, 1222, 1239, 1275, 1312, 1313, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1326, 1328, 1331, 1334, 1336, 1338, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1360, 1367, 1368, 1382, 1385, 1386, 1387, 1395, 1405, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1426, 1429, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1464, 1465, 1466, 1468, 1469, 1473, 1474], "meaning": [499, 1328, 1341, 1349, 1430, 1457, 1465], "meaningfulli": 1315, "meant": [77, 80, 133, 1313, 1315, 1316, 1318, 1326, 1348, 1350, 1366, 1402, 1408, 1417, 1425, 1431, 1433, 1434, 1443, 1447, 1449, 1457, 1461], "meantim": [1414, 1452], "meanwhil": [1346, 1360, 1415], "measur": [981, 1317, 1323, 1349, 1353, 1418, 1422, 1441, 1452, 1460], "mechan": [67, 98, 136, 487, 666, 1313, 1318, 1319, 1320, 1326, 1334, 1336, 1337, 1339, 1342, 1346, 1349, 1350, 1387, 1415, 1416, 1419, 1421, 1422, 1425, 1431, 1433, 1437, 1441, 1443, 1448, 1449, 1458, 1463, 1472], "median": [851, 853, 855, 873, 875, 897, 1098, 1103], "medium": 1457, "meet": [1337, 1418, 1420], "megacor": 1475, "megascal": [1328, 1475], "melissa": [1350, 1360], "mellon": 311, "member": [1312, 1313, 1349, 1395, 1414, 1418, 1449], "membership": 765, "membw": 1460, "memcpi": 1475, "memoiz": [268, 1417], "memori": [67, 101, 119, 142, 160, 166, 262, 283, 296, 415, 456, 486, 493, 816, 998, 1006, 1007, 1310, 1312, 1313, 1314, 1315, 1318, 1324, 1326, 1336, 1349, 1350, 1353, 1354, 1367, 1382, 1404, 1405, 1413, 1415, 1424, 1431, 1433, 1437, 1438, 1442, 1443, 1446, 1448, 1449, 1451, 1454, 1456, 1459, 1460, 1462, 1468, 1475], "memory1": 1340, "memory9": 1340, "memory_analysi": 1405, "memory_kind": [1404, 1431, 1441, 1444, 1468], "memory_spac": [140, 142, 159, 1448, 1452, 1455, 1456, 1458, 1461], "memory_stat": 1326, "memory_view": [1340, 1464], "memoryref": [161, 164, 184], "memoryreftransform": [159, 161, 164], "memoryspac": [161, 164, 1447, 1455, 1456, 1458, 1461, 1462], "memoryview": 1326, "memref": 167, "mental": [1412, 1455, 1458], "mention": [194, 381, 424, 457, 1256, 1319, 1325, 1339, 1341, 1410, 1414, 1415, 1417, 1418, 1426, 1434, 1443, 1458, 1463, 1466, 1470], "menu": 1464, "mere": [1337, 1463], "merg": [302, 1326, 1334, 1366, 1410, 1415, 1440], "merge_list": 1318, "merit": 1452, "mersenn": 1466, "mesh": [84, 132, 133, 136, 137, 194, 316, 491, 498, 499, 500, 502, 775, 836, 1256, 1326, 1334, 1341, 1343, 1350, 1353, 1354, 1373, 1376, 1382, 1386, 1404, 1410, 1415, 1417, 1434, 1441, 1458, 1463, 1468], "mesh1d": 1443, "mesh2d": 1443, "mesh_col": [499, 500], "mesh_devic": 1341, "mesh_lib": 502, "mesh_row": [499, 500], "mesh_shap": [132, 133], "mesh_shard": 1434, "mesh_util": [194, 502, 1326, 1353, 1369], "meshaxisnam": 1404, "meshgrid": [738, 747, 775, 837, 868], "meshpspecshard": 1326, "meso": [1326, 1420], "mess": [1319, 1417], "messag": [119, 120, 121, 182, 497, 1258, 1259, 1326, 1328, 1329, 1334, 1339, 1342, 1360, 1386, 1423, 1432, 1447, 1452, 1457, 1464], "messi": 1321, "meta": [1279, 1313], "meta_field": [1279, 1326, 1474], "meta_grad": 1313, "meta_loss_fn": 1313, "metaclass": 1414, "metadata": [187, 503, 504, 664, 1279, 1318, 1326, 1339, 1343, 1350, 1417, 1422, 1425, 1431, 1452, 1465, 1474], "metal": [1312, 1356], "method": [0, 10, 47, 62, 63, 64, 71, 72, 73, 74, 77, 80, 99, 101, 103, 107, 115, 127, 140, 141, 142, 143, 158, 159, 160, 162, 165, 166, 167, 168, 187, 195, 196, 197, 198, 199, 200, 235, 241, 252, 253, 254, 255, 256, 257, 258, 267, 291, 292, 348, 454, 582, 588, 620, 624, 625, 627, 628, 634, 644, 645, 657, 664, 697, 700, 704, 705, 706, 709, 716, 721, 726, 744, 748, 751, 752, 753, 754, 756, 765, 774, 794, 798, 805, 847, 848, 853, 855, 860, 866, 867, 875, 897, 901, 907, 920, 928, 940, 945, 953, 965, 967, 968, 969, 970, 979, 1003, 1041, 1064, 1072, 1073, 1082, 1088, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1103, 1106, 1107, 1108, 1196, 1238, 1275, 1313, 1315, 1317, 1318, 1319, 1320, 1325, 1326, 1328, 1332, 1333, 1334, 1341, 1342, 1343, 1350, 1356, 1358, 1360, 1367, 1385, 1386, 1394, 1399, 1402, 1412, 1414, 1418, 1419, 1422, 1431, 1432, 1433, 1441, 1444, 1447, 1448, 1458, 1462, 1464, 1465, 1468, 1469, 1474], "metric": [1326, 1418], "mezzadri": 1043, "mgpu": [160, 173, 1452], "mgrid": [747, 775, 836, 868, 1439], "mha": 506, "mhlo": [1315, 1326, 1343, 1350], "mi": [1313, 1426, 1437], "micro": [1420, 1431], "microbatch": [1431, 1443], "microbenchmark": [1317, 1323, 1349, 1464], "micromamba": [1331, 1350, 1360, 1430, 1470], "microsoft": [1356, 1414], "mid": 1414, "middl": [410, 682, 687, 1415], "midpoint": [853, 855, 875, 897], "might": [85, 98, 113, 114, 120, 137, 160, 379, 458, 459, 460, 461, 462, 574, 800, 981, 1278, 1313, 1316, 1318, 1319, 1322, 1326, 1328, 1329, 1331, 1333, 1334, 1336, 1339, 1342, 1348, 1349, 1350, 1353, 1354, 1356, 1367, 1409, 1410, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1440, 1443, 1444, 1445, 1448, 1449, 1452, 1457, 1469], "migrat": [1326, 1344, 1452], "million": [1313, 1437], "millisecond": 1464, "min": [10, 12, 99, 148, 251, 306, 333, 400, 401, 404, 416, 427, 442, 461, 538, 562, 567, 622, 697, 801, 804, 807, 808, 832, 835, 860, 892, 944, 995, 1078, 1079, 1080, 1083, 1089, 1238, 1326, 1342, 1346, 1350, 1373, 1457], "min_dim": [1326, 1346], "min_width": 87, "mind": [1323, 1329, 1336, 1348, 1349, 1414, 1416, 1422, 1426, 1449, 1452, 1455, 1456, 1468, 1473], "mindless": 1445, "minexp": 697, "ming": 1417, "mini": [1366, 1435, 1436, 1442], "miniconda": 1339, "miniforge3": 1435, "minim": [69, 197, 199, 1312, 1313, 1316, 1318, 1319, 1326, 1328, 1336, 1339, 1350, 1352, 1366, 1385, 1412, 1418, 1419, 1431, 1432, 1437, 1444, 1452, 1458], "minimum": [6, 10, 36, 308, 353, 416, 417, 442, 576, 577, 582, 600, 615, 622, 675, 713, 832, 833, 835, 838, 844, 846, 849, 850, 851, 852, 854, 857, 860, 873, 892, 898, 923, 944, 947, 971, 972, 973, 974, 975, 976, 994, 995, 996, 997, 1048, 1054, 1326, 1328, 1342, 1343, 1386, 1427, 1455, 1460, 1462, 1463], "minimum_supported_calling_convention_vers": 1343, "minimum_supported_serialization_vers": [1343, 1386], "minlength": 600, "minor": [102, 262, 263, 283, 284, 335, 1093, 1316, 1326, 1343, 1420, 1427, 1460, 1462], "minormost": [1452, 1453], "minu": [375, 1142], "minuend": 886, "minval": [619, 667, 698, 710, 964, 1048, 1054], "mip": 305, "mirror": [1091, 1346, 1356, 1395, 1418, 1444, 1449], "miscellan": 1355, "miscompil": 1326, "mise": [1252, 1253], "mishandl": 1326, "mislead": 1317, "mismatch": [1315, 1417, 1432], "miss": [182, 251, 268, 1318, 1326, 1334, 1350, 1354, 1358, 1360, 1414, 1438, 1440, 1458], "mission": 1448, "mistak": [1423, 1440, 1447], "mistakenli": 1326, "misus": 1425, "mitig": [1350, 1352, 1354, 1432, 1438], "mix": [212, 301, 359, 418, 480, 499, 1313, 1325, 1341, 1346, 1410, 1412, 1414, 1418, 1430, 1437, 1440, 1443, 1444, 1462, 1473], "mixtur": [1414, 1443], "mkdir": [1339, 1353], "mkvirtualenv": 1339, "ml": [113, 923, 971, 1091, 1313, 1326, 1328, 1329, 1337, 1339, 1341, 1356, 1358, 1424, 1432, 1449, 1455, 1460], "ml_dtype": [259, 1326], "mlir": [244, 263, 284, 491, 1318, 1326, 1328, 1343, 1346, 1360, 1387, 1405, 1416, 1419, 1427, 1449], "mlir_api_vers": 1326, "mlir_modul": [1343, 1386], "mlir_module_seri": [1343, 1386], "mlir_module_serialization_vers": [1326, 1343], "mlircontext": 1318, "mlp": [1415, 1435, 1442, 1474], "mlperf": 1413, "mlr": 1019, "mlup": 1358, "mlups3d": 1358, "mm": [1304, 1326, 1460], "mm2": 1304, "mm_flop": 1460, "mm_func": 1460, "mma": 1451, "mma_async": 1452, "mma_transform": 1452, "mnist": [1435, 1442], "mnist_data": 1442, "mnist_dataset": 1435, "mnist_dataset_test": 1435, "moc": 1474, "mock": [1326, 1339, 1463], "mock_num_gpu_process": 1328, "mod": [251, 714, 905, 1326, 1346, 1458], "modal": 1218, "mode": [10, 11, 56, 67, 69, 73, 76, 80, 119, 127, 129, 130, 208, 293, 295, 297, 331, 348, 349, 356, 372, 373, 375, 378, 379, 381, 411, 412, 455, 457, 458, 459, 460, 461, 462, 469, 476, 479, 482, 483, 486, 493, 509, 518, 519, 520, 521, 522, 523, 529, 588, 616, 621, 633, 637, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 757, 804, 860, 873, 895, 896, 902, 946, 947, 990, 994, 995, 996, 997, 1015, 1019, 1022, 1032, 1052, 1059, 1060, 1061, 1062, 1083, 1091, 1094, 1095, 1096, 1097, 1100, 1257, 1303, 1326, 1328, 1329, 1331, 1337, 1339, 1344, 1346, 1349, 1350, 1351, 1353, 1360, 1368, 1374, 1386, 1395, 1415, 1418, 1419, 1421, 1422, 1432, 1434, 1436, 1439, 1443, 1444, 1447, 1452, 1464, 1468, 1473], "model": [339, 998, 1313, 1320, 1322, 1325, 1326, 1328, 1337, 1342, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1367, 1382, 1385, 1402, 1410, 1412, 1413, 1414, 1415, 1418, 1420, 1422, 1426, 1432, 1435, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1446, 1449, 1452, 1454, 1455, 1459, 1460, 1463, 1468, 1469], "model_replica": 1341, "moder": [1455, 1458], "moderesult": 1218, "modern": [1320, 1339, 1414, 1452, 1455, 1460, 1466, 1473, 1474], "modif": [10, 860, 1312, 1334, 1426], "modifi": [10, 101, 318, 319, 696, 716, 742, 860, 873, 878, 895, 896, 1103, 1130, 1131, 1132, 1133, 1252, 1253, 1315, 1326, 1329, 1342, 1373, 1385, 1402, 1418, 1426, 1432, 1441, 1444, 1448, 1449, 1457, 1458, 1461, 1466, 1469], "modprob": 1464, "modul": [162, 163, 244, 267, 394, 582, 588, 697, 717, 802, 1312, 1315, 1316, 1318, 1326, 1339, 1346, 1347, 1349, 1350, 1353, 1358, 1359, 1360, 1411, 1412, 1414, 1418, 1419, 1428, 1431, 1432, 1434, 1454, 1457, 1466, 1468, 1474], "module_context": 1360, "module_kept_var_idx": [1343, 1386], "modulecontext": 1360, "modulo": [714, 905, 1346, 1452], "mojav": 1326, "moment": [160, 1318, 1326, 1346, 1367, 1414, 1426, 1432, 1452, 1453, 1457], "momentum": 1367, "monoid": 439, "monolith": [1326, 1356], "monoton": [535, 547, 657], "monotoni": 1466, "month": [1316, 1326, 1338, 1343, 1413, 1420], "moor": 803, "moral": [1417, 1419], "more": [10, 13, 52, 67, 69, 75, 77, 80, 83, 88, 89, 91, 96, 99, 113, 131, 140, 141, 160, 177, 179, 194, 241, 244, 262, 265, 283, 286, 296, 298, 302, 303, 304, 328, 337, 356, 360, 375, 378, 412, 415, 416, 417, 425, 426, 427, 429, 431, 432, 433, 434, 435, 440, 441, 442, 443, 445, 446, 448, 452, 457, 479, 493, 499, 505, 508, 534, 535, 537, 541, 548, 566, 567, 568, 578, 580, 595, 596, 597, 610, 612, 613, 614, 621, 623, 660, 663, 666, 667, 673, 674, 699, 718, 720, 740, 741, 758, 759, 765, 772, 783, 786, 788, 789, 793, 794, 796, 798, 799, 800, 803, 807, 809, 814, 819, 860, 864, 874, 896, 907, 909, 913, 920, 923, 924, 940, 945, 946, 947, 950, 981, 987, 989, 990, 998, 1006, 1007, 1012, 1013, 1072, 1077, 1093, 1138, 1260, 1268, 1273, 1278, 1279, 1282, 1304, 1312, 1314, 1315, 1316, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1328, 1329, 1331, 1334, 1335, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1366, 1367, 1368, 1373, 1374, 1382, 1385, 1386, 1387, 1394, 1395, 1399, 1402, 1404, 1405, 1409, 1410, 1411, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1438, 1439, 1440, 1442, 1443, 1444, 1446, 1448, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1464, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474], "moreov": [493, 1313, 1318, 1415, 1421, 1423, 1429, 1433, 1434, 1443, 1462], "mortem": 1432, "mosaic": [153, 160, 172, 173, 1380, 1447, 1453, 1455, 1456], "mosaic_gpu": [182, 1378, 1447, 1452], "mosaic_gpu_dump_ptxa": 1452, "mosaic_tpu": 182, "most": [81, 94, 119, 120, 121, 132, 133, 328, 361, 381, 424, 452, 453, 457, 458, 459, 460, 461, 462, 499, 613, 634, 650, 666, 697, 726, 774, 793, 800, 864, 880, 886, 913, 920, 923, 940, 965, 971, 972, 987, 1001, 1065, 1077, 1218, 1280, 1313, 1315, 1316, 1318, 1320, 1321, 1323, 1326, 1327, 1331, 1332, 1336, 1339, 1341, 1342, 1343, 1346, 1349, 1350, 1351, 1352, 1353, 1356, 1360, 1375, 1382, 1385, 1386, 1395, 1399, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1422, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1437, 1440, 1442, 1443, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1470, 1473, 1474], "mostli": [73, 235, 357, 1308, 1318, 1417, 1418, 1427, 1431, 1443, 1449, 1464], "motion": 1353, "motiv": [1313, 1326, 1414, 1418, 1421, 1426, 1433, 1450, 1473], "move": [127, 137, 422, 811, 842, 945, 953, 1316, 1318, 1326, 1328, 1354, 1357, 1369, 1392, 1410, 1414, 1415, 1416, 1418, 1422, 1432, 1434, 1441, 1448, 1455, 1458, 1462, 1464, 1469], "move_batch_axi": 1318, "moveaxi": [913, 945, 953, 1318], "movement": [1348, 1415, 1431, 1441, 1443], "mpi": [99, 1326, 1328], "mpi4pi": 99, "mpiexec": 99, "mpirun": 99, "mpl": 1439, "mpmath": 1435, "mpmd": [491, 1328], "mqa": 506, "msg": [119, 1342, 1360, 1424, 1430], "msort": 1326, "msvc": [1326, 1339], "msys2": 1339, "mt": [799, 830, 1452], "mt19937": 1466, "mu": [1025, 1041, 1055, 1221, 1222, 1235, 1236, 1237], "much": [67, 83, 219, 356, 378, 493, 674, 1106, 1313, 1318, 1319, 1322, 1323, 1326, 1339, 1350, 1351, 1354, 1356, 1358, 1368, 1411, 1413, 1415, 1417, 1418, 1421, 1423, 1425, 1426, 1429, 1430, 1433, 1434, 1437, 1438, 1448, 1449, 1452, 1455, 1457, 1458, 1466], "mul": [501, 1313, 1315, 1318, 1319, 1334, 1346, 1349, 1354, 1360, 1411, 1416, 1417, 1419, 1430, 1433, 1438, 1443, 1457], "mul_add": 1416, "mul_add_abstract": 1416, "mul_add_mlir": 1416, "mul_add_p": 1416, "mul_dual": 1319, "mul_jvp": 1318, "mul_p": [1318, 1385, 1436], "mul_transpose_rul": 1318, "mulop": [1360, 1416], "mult_transpos": 1360, "multi": [29, 91, 94, 99, 194, 424, 499, 506, 642, 660, 675, 727, 749, 750, 775, 783, 795, 815, 827, 829, 830, 837, 868, 872, 902, 935, 947, 972, 978, 998, 1001, 1093, 1218, 1239, 1267, 1268, 1309, 1314, 1326, 1328, 1341, 1344, 1346, 1350, 1351, 1356, 1382, 1386, 1402, 1404, 1410, 1415, 1417, 1421, 1430, 1439, 1443, 1449, 1453, 1455, 1458, 1466, 1468, 1474], "multi_device_test": 1357, "multi_dot": [666, 1326], "multi_gpu": 1339, "multi_index": 902, "multi_process": 1339, "multiacceler": 1339, "multicast": 172, "multicontrol": 1326, "multidimension": [652, 678, 679, 681, 684, 685, 686, 689, 690, 691, 692, 693, 695, 978, 1059, 1060, 1061, 1062, 1326, 1404, 1449], "multigamma": 1141, "multihost": 1326, "multihost_util": [1326, 1369, 1410, 1431], "multinomi": 1326, "multipl": [10, 11, 29, 92, 99, 121, 209, 210, 244, 248, 249, 317, 331, 349, 360, 372, 373, 375, 398, 411, 412, 418, 455, 456, 457, 459, 462, 464, 469, 476, 479, 482, 483, 493, 506, 540, 566, 579, 595, 596, 597, 616, 650, 660, 673, 717, 719, 725, 749, 750, 778, 779, 783, 795, 803, 807, 809, 813, 829, 831, 837, 842, 843, 860, 868, 872, 934, 950, 972, 984, 985, 986, 987, 998, 1012, 1069, 1088, 1089, 1102, 1267, 1313, 1315, 1317, 1318, 1319, 1323, 1326, 1327, 1328, 1329, 1331, 1334, 1339, 1341, 1343, 1346, 1348, 1349, 1352, 1353, 1354, 1355, 1360, 1373, 1377, 1382, 1395, 1410, 1411, 1412, 1415, 1417, 1421, 1424, 1433, 1434, 1436, 1437, 1438, 1441, 1443, 1444, 1445, 1448, 1449, 1453, 1454, 1455, 1456, 1458, 1459, 1461, 1465, 1468, 1474, 1475], "multiple_result": [1326, 1436], "multipli": [10, 303, 304, 373, 389, 418, 462, 527, 644, 646, 660, 719, 777, 793, 800, 847, 860, 1029, 1077, 1078, 1082, 1313, 1315, 1318, 1326, 1334, 1353, 1360, 1395, 1413, 1417, 1422, 1424, 1433, 1437, 1453, 1455, 1456, 1457, 1460, 1462], "multiply_add": 1360, "multiply_add_abstract_ev": 1360, "multiply_add_batch": 1360, "multiply_add_impl": 1360, "multiply_add_lax": 1360, "multiply_add_low": 1360, "multiply_add_numpi": 1360, "multiply_add_p": 1360, "multiply_add_prim": 1360, "multiply_add_transpos": 1360, "multiply_add_value_and_jvp": 1360, "multiply_dynam": 1350, "multiprocess": 500, "multiprocessor": 1452, "multistream": 1421, "multithread": 1435, "multivari": [1041, 1141, 1221, 1222, 1313], "mung": [1318, 1435, 1442], "must": [67, 69, 73, 76, 81, 96, 99, 101, 102, 119, 120, 131, 135, 136, 137, 153, 160, 172, 174, 182, 194, 202, 205, 212, 216, 235, 237, 241, 246, 247, 248, 249, 251, 287, 289, 296, 298, 299, 300, 301, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 331, 332, 334, 336, 338, 339, 340, 349, 350, 356, 359, 360, 361, 363, 368, 372, 373, 375, 377, 378, 381, 382, 383, 386, 389, 391, 392, 395, 397, 406, 408, 411, 412, 413, 414, 416, 417, 418, 419, 421, 423, 425, 426, 427, 429, 430, 433, 434, 435, 437, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 454, 455, 456, 463, 464, 465, 466, 467, 469, 470, 475, 476, 480, 481, 482, 483, 486, 491, 492, 498, 499, 500, 506, 510, 517, 534, 540, 558, 565, 566, 567, 580, 598, 600, 601, 606, 608, 610, 619, 621, 623, 628, 629, 630, 633, 635, 637, 642, 653, 655, 656, 657, 660, 663, 675, 677, 679, 683, 685, 690, 693, 696, 710, 712, 713, 716, 717, 725, 729, 730, 731, 734, 740, 741, 758, 759, 778, 779, 780, 781, 782, 783, 784, 785, 795, 800, 810, 811, 813, 823, 825, 826, 829, 830, 831, 832, 838, 843, 849, 852, 864, 877, 878, 881, 883, 884, 887, 895, 896, 902, 906, 907, 910, 914, 915, 916, 921, 923, 937, 941, 943, 947, 952, 956, 958, 959, 960, 962, 971, 972, 973, 974, 975, 976, 980, 982, 984, 985, 986, 987, 989, 990, 994, 995, 996, 997, 998, 1013, 1015, 1016, 1017, 1019, 1021, 1024, 1027, 1029, 1031, 1036, 1040, 1041, 1044, 1046, 1049, 1051, 1052, 1053, 1055, 1066, 1067, 1068, 1071, 1080, 1081, 1090, 1093, 1094, 1095, 1096, 1097, 1100, 1104, 1105, 1106, 1138, 1149, 1218, 1239, 1256, 1272, 1273, 1279, 1280, 1282, 1284, 1302, 1304, 1313, 1315, 1317, 1318, 1319, 1326, 1327, 1328, 1329, 1331, 1334, 1339, 1341, 1342, 1343, 1349, 1350, 1352, 1354, 1356, 1360, 1382, 1386, 1395, 1399, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1421, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1440, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1469, 1470, 1474, 1475], "mutabl": [1318, 1319, 1349, 1444, 1449, 1452, 1456], "mutat": [101, 102, 716, 1326, 1349, 1399, 1412, 1432, 1444, 1448, 1456, 1466], "mutual": [621, 921, 1043, 1415, 1417], "mv": 1304, "mv1": 1304, "mv2": 1304, "mx": 1427, "mxfp8": [509, 539, 540], "mxn": 812, "mxu": [1457, 1460, 1461], "my": [337, 1353, 1419, 1427], "my_arrai": 1440, "my_bucket": 1353, "my_cmap": 1439, "my_fft": 1373, "my_funct": 1409, "my_id": 1458, "my_label": 1004, "my_lay": 1415, "my_log": 1349, "my_log_or_i": 1349, "my_lowering_rul": 1343, "my_new_bind": 1343, "my_new_prim": 1343, "my_program": 1328, "my_python": 1339, "my_scop": 1346, "my_softmax_composit": 337, "my_tangent_composit": 337, "my_target": 1343, "my_top_k": 1346, "my_top_k_with_dimens": 1346, "mycontain": [1280, 1281, 1282], "mydataclasscontain": 1474, "mylog": 1343, "myothercontain": 1474, "mypi": [1326, 1329, 1339], "myriad": 1465, "myst": 1339, "mysteri": [1326, 1327], "mystruct": 1279, "mytestcas": 1326, "mytre": [1332, 1465], "mz": 1427, "n": [166, 176, 177, 179, 218, 233, 235, 296, 341, 343, 344, 345, 346, 347, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 432, 484, 506, 510, 529, 540, 567, 596, 597, 621, 622, 628, 636, 641, 642, 644, 645, 646, 647, 652, 654, 655, 656, 660, 665, 676, 678, 680, 682, 683, 684, 687, 688, 689, 692, 694, 696, 699, 719, 727, 729, 735, 736, 737, 738, 743, 749, 757, 765, 775, 777, 783, 784, 785, 786, 788, 793, 794, 795, 796, 797, 798, 799, 801, 803, 804, 806, 807, 808, 809, 812, 814, 815, 827, 828, 829, 831, 836, 847, 848, 853, 855, 856, 858, 864, 872, 875, 877, 883, 895, 897, 906, 920, 921, 937, 942, 946, 950, 951, 953, 955, 957, 958, 961, 962, 972, 973, 974, 975, 976, 977, 982, 983, 984, 985, 986, 987, 1017, 1022, 1024, 1040, 1041, 1043, 1058, 1059, 1061, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1096, 1100, 1109, 1118, 1121, 1122, 1124, 1135, 1139, 1140, 1145, 1149, 1152, 1163, 1164, 1165, 1166, 1219, 1220, 1223, 1224, 1273, 1313, 1317, 1318, 1319, 1326, 1328, 1329, 1331, 1339, 1350, 1351, 1352, 1353, 1354, 1356, 1373, 1411, 1415, 1417, 1421, 1429, 1430, 1431, 1432, 1434, 1435, 1437, 1438, 1440, 1441, 1442, 1443, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1464, 1465, 1466, 1468, 1469, 1474], "n1": 1318, "n10": [1313, 1437], "n2": 1318, "n_batch": [207, 219, 222, 237], "n_class": 1385, "n_data": 1196, "n_dens": [207, 219, 222, 237], "n_dimens": 1196, "n_i": 1460, "n_in": [1434, 1443, 1474], "n_l": 1140, "n_max": 1149, "n_n": 1149, "n_out": [1434, 1443, 1474], "n_slice": 1460, "n_spars": 195, "n_target": [1435, 1442], "n_trial": 1462, "n_uniqu": [972, 973, 974, 975, 976], "nabla": [537, 538, 1313, 1320, 1437], "naiv": [375, 412, 667, 674, 819, 930, 1313, 1321, 1350, 1412, 1437, 1444, 1455, 1456, 1458, 1460, 1462], "naively_batched_apply_matrix": 1444, "name": [29, 90, 92, 105, 139, 162, 163, 182, 194, 256, 262, 263, 264, 265, 267, 276, 283, 284, 285, 286, 287, 296, 303, 304, 315, 316, 337, 348, 394, 424, 425, 426, 427, 431, 432, 433, 434, 435, 501, 502, 503, 504, 664, 666, 667, 919, 942, 965, 973, 974, 975, 983, 998, 1003, 1005, 1006, 1007, 1091, 1098, 1101, 1102, 1103, 1240, 1241, 1256, 1279, 1305, 1313, 1316, 1318, 1319, 1326, 1329, 1332, 1336, 1339, 1340, 1342, 1343, 1346, 1350, 1351, 1354, 1356, 1360, 1371, 1373, 1382, 1386, 1394, 1395, 1399, 1402, 1404, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1433, 1434, 1437, 1438, 1442, 1443, 1447, 1449, 1457, 1458, 1463, 1464, 1466, 1467, 1468, 1471, 1474, 1475], "name_count": 1319, "name_scop": 503, "name_stack": 1360, "named_arg": 119, "named_cal": 1326, "named_scop": [1326, 1415], "named_shap": 1326, "named_shard": 1404, "namedshap": 1414, "namedshard": [44, 84, 194, 450, 498, 499, 500, 614, 906, 1256, 1326, 1341, 1343, 1350, 1353, 1354, 1373, 1386, 1404, 1410, 1415, 1431, 1443, 1458, 1468], "namedtupl": [69, 114, 248, 249, 492, 790, 973, 974, 975, 1313, 1318, 1326, 1367, 1430, 1433, 1465, 1469, 1474], "nameerror": 1332, "namegen": 1318, "names_which_can_be_offload": [1354, 1441], "names_which_can_be_sav": [1354, 1441], "namespac": [328, 809, 812, 813, 1326, 1350, 1399, 1407, 1414, 1469], "namestack": 1360, "nan": [10, 89, 121, 381, 391, 395, 397, 468, 473, 533, 534, 545, 560, 569, 570, 571, 572, 575, 576, 577, 578, 583, 644, 645, 646, 647, 708, 712, 713, 760, 764, 766, 767, 768, 769, 784, 806, 833, 839, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 874, 875, 890, 897, 914, 927, 930, 938, 942, 946, 947, 972, 983, 990, 1064, 1086, 1124, 1128, 1136, 1138, 1147, 1148, 1239, 1313, 1326, 1333, 1334, 1335, 1336, 1419, 1433, 1443, 1447, 1449, 1453], "nan_check": [121, 1334], "nan_polici": [1218, 1238, 1239], "nanargmax": [576, 846, 1432], "nanargmin": [577, 845, 1432], "nancumprod": [644, 646], "nancumsum": [645, 647], "nanerror": [117, 118, 123, 125], "nanj": 914, "nanmax": [833, 850, 851, 852, 854, 857], "nanmean": [849, 851, 852, 854, 856, 857, 858], "nanmin": [839, 849, 850, 851, 854, 857], "nanobind": 1350, "nanpercentil": [855, 875], "nanprod": [849, 850, 852, 857], "nanquantil": [853, 897], "nanstd": [858, 942, 983], "nansum": [849, 850, 852, 854, 1432], "nansum_2": 1432, "nanvar": [856, 942, 983], "narg": 965, "narrow": [445, 446, 1329, 1416, 1457], "narrowli": 1355, "naryop": 1326, "naryop_dtype_rul": 1326, "nativ": [75, 248, 249, 456, 486, 1318, 1326, 1343, 1346, 1418, 1419, 1426, 1444, 1457, 1460, 1466, 1474], "native_seri": [1326, 1328], "native_serializaation_disabled_check": 1326, "native_serialization_strict_check": 1326, "natur": [372, 373, 411, 412, 805, 817, 1112, 1124, 1127, 1128, 1141, 1312, 1318, 1412, 1414, 1417, 1426, 1429, 1449, 1458, 1469], "navig": [1452, 1464], "nb": [137, 499, 1318, 1350], "nb_execution_mod": 1339, "nb_gpu": 1339, "nb_modul": 1350, "nbit": 420, "nccl": [1326, 1339, 1356], "nccl_ll128_buffsiz": 1353, "nccl_ll_buffsiz": 1353, "nccl_proto": 1353, "nchw": [343, 344, 345, 1439], "nchwd": 345, "nd": [633, 637, 1094, 1095, 1096, 1097, 1458], "ndarrai": [9, 114, 132, 133, 195, 203, 204, 209, 211, 218, 220, 221, 259, 318, 319, 320, 358, 362, 363, 364, 365, 366, 367, 369, 370, 371, 380, 381, 384, 385, 387, 393, 428, 457, 458, 459, 460, 461, 462, 471, 472, 485, 489, 491, 492, 498, 499, 578, 579, 585, 587, 621, 623, 630, 660, 663, 669, 723, 724, 726, 727, 740, 749, 776, 783, 815, 827, 829, 831, 870, 871, 873, 874, 878, 895, 896, 934, 935, 941, 946, 947, 950, 984, 985, 986, 989, 992, 1022, 1091, 1104, 1105, 1106, 1108, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1279, 1300, 1313, 1317, 1318, 1326, 1342, 1346, 1349, 1351, 1354, 1367, 1399, 1400, 1404, 1409, 1414, 1415, 1422, 1432, 1434, 1437, 1438, 1444, 1460, 1465, 1469], "ndim": [182, 205, 213, 363, 381, 440, 441, 442, 443, 445, 446, 448, 471, 559, 564, 567, 580, 628, 633, 637, 652, 656, 665, 679, 685, 690, 693, 696, 795, 811, 829, 830, 832, 834, 835, 838, 849, 850, 851, 852, 854, 857, 864, 876, 892, 913, 915, 944, 947, 952, 953, 956, 958, 959, 960, 962, 980, 982, 987, 1094, 1095, 1096, 1097, 1100, 1304, 1318, 1326, 1353, 1385, 1404, 1429, 1439], "ndindex": 621, "ndmin": 582, "ndtr": 1135, "ne": [368, 382, 383, 392, 414, 926, 1348], "nearest": [291, 306, 332, 377, 454, 619, 697, 698, 710, 711, 853, 855, 875, 897, 911, 916, 964, 978, 1058, 1064, 1091, 1394, 1395, 1418], "nearli": [1106, 1385, 1399], "neat": [1437, 1448], "neatli": 1313, "necessari": [67, 99, 101, 102, 132, 133, 172, 216, 430, 582, 588, 591, 634, 716, 794, 1012, 1106, 1313, 1315, 1319, 1326, 1339, 1341, 1343, 1350, 1412, 1414, 1417, 1418, 1420, 1422, 1423, 1434, 1452, 1457, 1458, 1464], "necessarili": [1316, 1317, 1326, 1348, 1410, 1431, 1449, 1458], "necula": 1343, "need": [67, 78, 99, 101, 102, 113, 114, 119, 140, 178, 235, 249, 296, 356, 365, 367, 381, 415, 456, 457, 499, 610, 628, 716, 719, 916, 918, 919, 965, 987, 990, 994, 995, 996, 997, 998, 1009, 1011, 1093, 1104, 1105, 1106, 1267, 1275, 1282, 1312, 1313, 1315, 1317, 1318, 1319, 1323, 1324, 1325, 1326, 1328, 1329, 1333, 1336, 1337, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1358, 1360, 1366, 1367, 1371, 1373, 1382, 1386, 1399, 1402, 1405, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1474], "neg": [10, 205, 233, 323, 332, 362, 363, 364, 365, 366, 367, 377, 378, 381, 454, 501, 531, 534, 578, 600, 617, 641, 651, 654, 655, 676, 697, 708, 711, 764, 766, 767, 768, 769, 788, 797, 805, 812, 860, 874, 877, 888, 890, 898, 913, 915, 926, 927, 938, 939, 946, 952, 977, 978, 998, 1046, 1124, 1125, 1126, 1128, 1138, 1148, 1163, 1164, 1165, 1166, 1223, 1224, 1313, 1318, 1320, 1326, 1328, 1333, 1334, 1342, 1349, 1437, 1470], "neg1": 1430, "neg_jvp": 1318, "neg_p": [1318, 1385], "neg_transpose_rul": 1318, "negat": [420, 862, 1318, 1346], "negative_slop": 531, "negep": 697, "neginf": 844, "neighbor": [291, 305, 306, 1091, 1394, 1418, 1443, 1448, 1458], "neighborhood": [1313, 1433], "neither": [155, 236, 296, 301, 313, 322, 324, 325, 336, 359, 368, 382, 383, 392, 414, 416, 417, 418, 419, 421, 430, 449, 465, 466, 467, 480, 691, 695, 1326, 1331, 1353, 1382, 1416, 1443], "nep": [1326, 1414], "neq": 419, "nest": [67, 69, 78, 81, 95, 96, 114, 290, 296, 311, 339, 356, 378, 415, 456, 479, 486, 492, 610, 921, 998, 1277, 1304, 1313, 1318, 1319, 1354, 1367, 1382, 1405, 1408, 1415, 1430, 1433, 1453, 1455, 1460, 1474], "nesterov": 1367, "net": [346, 1351, 1354, 1368, 1418, 1421, 1430, 1438, 1469], "netlib": 1143, "network": [99, 132, 133, 541, 1308, 1313, 1314, 1322, 1325, 1326, 1337, 1341, 1353, 1354, 1355, 1368, 1397, 1398, 1417, 1430, 1431, 1437, 1438, 1439, 1441, 1455, 1457, 1458, 1464, 1468, 1469, 1473, 1475], "networkx": [1426, 1435], "neural": [346, 541, 1308, 1313, 1314, 1322, 1325, 1337, 1351, 1353, 1354, 1355, 1368, 1397, 1398, 1417, 1421, 1430, 1437, 1438, 1439, 1441, 1457, 1468, 1469, 1473], "neural_network_and_data_load": 1442, "never": [101, 102, 107, 160, 381, 424, 457, 716, 965, 987, 1128, 1313, 1319, 1325, 1349, 1414, 1417, 1419, 1422, 1426, 1427, 1431, 1433, 1437, 1444, 1452, 1455, 1458, 1460, 1462, 1466], "nevertheless": [1411, 1417, 1418, 1424], "new": [45, 61, 67, 120, 138, 219, 251, 259, 292, 303, 321, 326, 327, 348, 365, 366, 367, 379, 396, 456, 491, 565, 610, 629, 630, 664, 760, 761, 770, 777, 842, 907, 908, 941, 951, 1012, 1028, 1050, 1091, 1260, 1267, 1268, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1316, 1318, 1319, 1326, 1328, 1329, 1331, 1334, 1338, 1342, 1343, 1346, 1350, 1353, 1354, 1356, 1358, 1366, 1368, 1373, 1399, 1402, 1404, 1408, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1441, 1443, 1444, 1447, 1448, 1455, 1456, 1458, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1474, 1475], "new_arg": 1318, "new_axi": 1318, "new_base_main": 1326, "new_compiler_token": 1412, "new_const": 1318, "new_const_bind": 1318, "new_dtyp": [321, 348, 1411, 1432], "new_dynam": 1318, "new_eqn": 1318, "new_interpret": 1319, "new_jax_arrai": 1432, "new_jaxpr": 1318, "new_jaxpr1": 1318, "new_jaxpr2": 1318, "new_kei": [1425, 1444, 1445, 1466], "new_layout": 175, "new_main": 1318, "new_optimizer_st": 1469, "new_out": 1318, "new_param": [1318, 1469], "new_prim": 1343, "new_r": 1318, "new_rng": 1421, "new_runtime_token": 1412, "new_shap": [908, 1318], "new_siz": [212, 450], "new_token": 1343, "new_trac": 1318, "new_val": [65, 88, 89, 91, 92, 93, 110, 111, 112, 130, 497, 552, 993, 1260], "new_valu": 1342, "newaxi": 1439, "newer": [913, 1008, 1326, 1339, 1343, 1350, 1353, 1356, 1375, 1409, 1414, 1434, 1457], "newest": 1356, "newli": [1339, 1360, 1419, 1471], "newlin": [585, 587], "newshap": [1326, 1430], "newton": [1313, 1433, 1437], "newton_sqrt": [1313, 1433], "newval": 1272, "nexp": 697, "next": [174, 332, 377, 421, 454, 697, 863, 936, 1102, 1318, 1326, 1341, 1343, 1350, 1353, 1385, 1402, 1411, 1415, 1419, 1421, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1435, 1444, 1448, 1452, 1455, 1460, 1462, 1464, 1474], "next_aft": 421, "next_block_chang": 1462, "next_i": 1462, "next_j": 1462, "next_mask_type_idx": 1462, "next_nonzero_block": 1462, "next_slot": 1455, "nextaft": [697, 936, 1326], "nf": 1463, "nfev": 1092, "nfft": [1098, 1101, 1102, 1103], "nfound": 1360, "ngc": 1431, "ngradient": 1360, "nhw": 345, "nhwc": [343, 344, 1439], "nhwdc": 1439, "nice": [1412, 1413, 1414, 1426, 1460], "niceerrormessag": 1346, "nicer": [746, 917], "nich": 453, "nightli": [1316, 1326, 1464], "nightly_upd": 1339, "nin": [721, 965], "nine": 1338, "ninf": 1326, "nit": 1092, "njaxlib": 1339, "njev": 1092, "nmant": 697, "nn": [337, 413, 479, 504, 1316, 1326, 1328, 1336, 1349, 1359, 1431, 1439, 1443, 1449, 1456, 1457, 1460, 1468, 1474], "nnormal": 1360, "nnx": 1422, "no_kwarg": 1405, "no_perfetto_link": 1464, "noblockspec": [141, 182], "nobodi": 1445, "node": [81, 99, 248, 249, 1267, 1268, 1279, 1280, 1281, 1282, 1283, 1298, 1318, 1320, 1326, 1353, 1408, 1426, 1458, 1465], "node_color": 1426, "node_metadata": 1318, "node_s": 1426, "node_typ": 1318, "nodetyp": [248, 249, 1279, 1280, 1282, 1318, 1326], "nois": [1328, 1439, 1469], "noise_rng": 1469, "noisi": [1353, 1439], "noisy_imag": 1439, "nomenclatur": [1244, 1246], "nomin": 1092, "non": [0, 57, 128, 132, 137, 138, 205, 218, 236, 361, 363, 381, 382, 383, 392, 404, 414, 416, 417, 421, 464, 484, 499, 506, 535, 539, 580, 600, 617, 676, 696, 708, 718, 719, 720, 743, 749, 789, 791, 806, 813, 824, 834, 845, 890, 938, 939, 940, 985, 998, 1022, 1046, 1070, 1083, 1086, 1089, 1125, 1126, 1163, 1164, 1165, 1166, 1279, 1304, 1315, 1316, 1318, 1319, 1326, 1328, 1333, 1334, 1339, 1342, 1343, 1346, 1349, 1350, 1353, 1356, 1360, 1404, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1417, 1418, 1421, 1422, 1423, 1425, 1426, 1431, 1437, 1440, 1443, 1447, 1452, 1457, 1458, 1462, 1463, 1468, 1473, 1474], "non_contracting_dim_s": 1353, "non_negative_dim": 1326, "nonconcretebooleanindexerror": [1342, 1432, 1444], "noncontigu": 1449, "nondeterminist": [10, 860], "nondiff_argnam": [77, 80], "nondiff_argnum": [69, 77, 78, 79, 80, 81, 1350, 1419, 1428], "none": [3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 19, 20, 23, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 56, 57, 58, 60, 61, 63, 67, 79, 81, 82, 83, 84, 85, 87, 91, 94, 96, 97, 99, 101, 102, 106, 115, 119, 120, 121, 127, 128, 131, 132, 133, 135, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 178, 182, 185, 186, 187, 189, 192, 194, 201, 203, 206, 207, 208, 212, 213, 216, 219, 220, 222, 224, 228, 232, 233, 235, 237, 244, 249, 250, 251, 253, 258, 262, 263, 265, 267, 268, 272, 283, 284, 286, 287, 296, 303, 304, 317, 326, 327, 330, 331, 335, 337, 341, 342, 343, 344, 345, 346, 347, 349, 356, 360, 361, 372, 373, 375, 378, 379, 380, 381, 394, 397, 398, 403, 404, 405, 406, 411, 412, 413, 415, 424, 425, 426, 427, 433, 434, 435, 447, 450, 452, 455, 456, 457, 458, 459, 460, 461, 462, 469, 471, 472, 476, 482, 483, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 509, 533, 534, 539, 545, 550, 558, 559, 561, 562, 564, 565, 568, 576, 577, 579, 580, 581, 582, 585, 587, 588, 591, 598, 600, 601, 606, 608, 614, 621, 622, 628, 629, 630, 633, 634, 636, 637, 640, 641, 642, 644, 645, 646, 647, 650, 656, 657, 660, 663, 665, 666, 668, 669, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 698, 699, 701, 716, 721, 723, 724, 727, 729, 735, 736, 737, 738, 740, 743, 746, 747, 749, 750, 757, 758, 768, 769, 772, 785, 790, 792, 794, 795, 798, 800, 801, 803, 805, 807, 809, 811, 812, 813, 814, 815, 821, 822, 823, 825, 826, 827, 828, 829, 832, 833, 834, 835, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 862, 864, 869, 870, 871, 872, 875, 877, 883, 884, 892, 894, 895, 896, 897, 901, 906, 907, 912, 916, 917, 919, 920, 923, 924, 933, 934, 940, 941, 942, 943, 944, 946, 947, 950, 952, 953, 954, 955, 957, 961, 965, 971, 972, 973, 974, 975, 976, 977, 981, 982, 983, 984, 985, 987, 989, 990, 991, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1024, 1027, 1029, 1031, 1032, 1033, 1036, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1057, 1059, 1060, 1061, 1062, 1063, 1070, 1071, 1073, 1074, 1081, 1082, 1083, 1087, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1136, 1138, 1147, 1149, 1152, 1196, 1218, 1221, 1238, 1239, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1276, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1304, 1305, 1313, 1315, 1318, 1321, 1326, 1328, 1332, 1334, 1336, 1343, 1346, 1348, 1350, 1354, 1360, 1368, 1371, 1373, 1382, 1386, 1394, 1395, 1404, 1405, 1410, 1411, 1414, 1415, 1417, 1418, 1423, 1424, 1425, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1447, 1448, 1449, 1452, 1453, 1455, 1458, 1463, 1465, 1468], "nonlinear": [67, 1313, 1318, 1433], "nonneg": [342, 994, 995, 996, 997, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1027, 1029, 1031, 1032, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1044, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1203, 1395], "nonsens": 1326, "nonsingular": 1082, "nonsymmetr": [397, 1104], "nontrivi": 1460, "nonzero": [197, 199, 580, 640, 699, 828, 990, 1313, 1326, 1342, 1399, 1418, 1437, 1462], "nonzero_jit": 864, "noop": 1328, "noqa": 1318, "nor": [155, 218, 236, 296, 430, 691, 695, 1326, 1353, 1382, 1405, 1416, 1434, 1443], "norm": [235, 306, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 738, 785, 796, 814, 1014, 1059, 1060, 1061, 1062, 1072, 1104, 1105, 1106, 1367, 1439, 1444, 1445], "norm_compil": 1444, "normal": [18, 98, 296, 398, 421, 479, 518, 520, 522, 527, 529, 539, 540, 541, 598, 636, 641, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 735, 736, 738, 790, 800, 810, 811, 816, 913, 930, 998, 1013, 1030, 1038, 1041, 1053, 1059, 1060, 1061, 1062, 1073, 1135, 1140, 1142, 1143, 1149, 1204, 1205, 1206, 1221, 1222, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1242, 1243, 1244, 1245, 1246, 1247, 1252, 1253, 1254, 1255, 1275, 1313, 1320, 1321, 1326, 1329, 1336, 1339, 1340, 1342, 1349, 1350, 1360, 1368, 1375, 1385, 1402, 1411, 1414, 1421, 1423, 1424, 1426, 1434, 1435, 1436, 1437, 1439, 1440, 1442, 1443, 1444, 1445, 1452, 1456, 1457, 1458, 1460, 1461, 1462, 1464, 1466, 1468, 1469, 1470, 1474], "normal_sampl": 1445, "normalis": 1313, "normalize_device_to_shard": 1331, "normed_sum": [735, 736], "not_equ": [419, 670], "not_map": 1318, "not_side_effect": 1342, "notabl": [774, 1399, 1426, 1444, 1452, 1453, 1466, 1473], "notat": [1149, 1313, 1318, 1320, 1373, 1417, 1426, 1437], "note": [29, 73, 98, 99, 114, 119, 137, 172, 197, 199, 235, 249, 250, 262, 263, 283, 284, 291, 292, 337, 363, 365, 367, 379, 404, 410, 420, 421, 445, 446, 459, 468, 492, 499, 506, 527, 539, 540, 566, 610, 616, 621, 628, 673, 675, 697, 717, 746, 757, 772, 774, 779, 784, 789, 790, 791, 792, 793, 798, 801, 803, 834, 842, 873, 901, 907, 913, 917, 918, 919, 920, 940, 945, 984, 987, 990, 998, 1003, 1009, 1011, 1013, 1072, 1074, 1077, 1083, 1088, 1090, 1091, 1098, 1104, 1105, 1109, 1113, 1115, 1116, 1117, 1122, 1123, 1124, 1127, 1144, 1148, 1149, 1273, 1275, 1279, 1312, 1315, 1316, 1319, 1324, 1326, 1328, 1334, 1336, 1341, 1342, 1343, 1346, 1348, 1350, 1352, 1356, 1360, 1374, 1382, 1385, 1386, 1402, 1408, 1409, 1410, 1411, 1412, 1414, 1416, 1424, 1426, 1427, 1429, 1430, 1432, 1435, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1473, 1474, 1475], "notebook": [1256, 1313, 1319, 1321, 1323, 1326, 1329, 1354, 1402, 1404, 1419, 1423, 1433, 1434, 1437, 1438, 1440, 1443, 1445, 1458, 1460, 1462, 1475], "noteworthi": [1453, 1456, 1459], "noth": [71, 100, 1326, 1334, 1348, 1429, 1448, 1458, 1461, 1464, 1469, 1470], "nothing_sav": [1354, 1438], "notic": [98, 578, 675, 729, 783, 874, 1043, 1075, 1090, 1313, 1318, 1319, 1326, 1333, 1336, 1343, 1348, 1354, 1360, 1367, 1373, 1385, 1412, 1415, 1417, 1421, 1424, 1426, 1429, 1430, 1433, 1436, 1437, 1438, 1440, 1443, 1448, 1452, 1455, 1469, 1470, 1474], "notimplementederror": [262, 283, 1012, 1139, 1140, 1318, 1360, 1436], "notion": [1414, 1417, 1430, 1449], "notmap": 1318, "notset": 1328, "nout": [721, 965], "noverlap": [1098, 1101, 1102, 1103], "now": [135, 502, 539, 636, 641, 721, 811, 978, 981, 1280, 1282, 1284, 1308, 1313, 1318, 1319, 1326, 1334, 1341, 1343, 1346, 1348, 1350, 1351, 1353, 1358, 1360, 1373, 1382, 1408, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1436, 1437, 1440, 1442, 1443, 1447, 1448, 1449, 1452, 1455, 1456, 1458, 1460, 1461, 1462, 1464, 1468, 1469, 1474], "np": [13, 24, 129, 130, 132, 133, 137, 244, 303, 304, 305, 306, 345, 357, 362, 363, 364, 365, 366, 367, 380, 387, 415, 426, 433, 434, 456, 472, 485, 492, 498, 499, 500, 582, 585, 587, 588, 616, 621, 623, 630, 654, 663, 664, 697, 716, 718, 719, 720, 740, 746, 772, 773, 774, 861, 873, 879, 882, 885, 904, 909, 914, 917, 918, 919, 925, 933, 941, 981, 989, 1015, 1017, 1019, 1031, 1036, 1038, 1045, 1055, 1315, 1317, 1318, 1323, 1324, 1326, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1354, 1360, 1373, 1374, 1382, 1385, 1386, 1395, 1404, 1409, 1410, 1411, 1414, 1415, 1418, 1419, 1421, 1422, 1424, 1425, 1426, 1430, 1431, 1432, 1434, 1435, 1439, 1440, 1441, 1443, 1444, 1445, 1453, 1455, 1456, 1460, 1461, 1462, 1466, 1468, 1470, 1473, 1474], "np_array1": 1410, "np_array2": 1410, "np_dtype": 1426, "np_dtype_to_cod": 1426, "np_inp": 1354, "np_result_cod": 1426, "nperseg": [1098, 1101, 1102, 1103], "npy": [816, 918, 919], "npyio": 919, "npz": [816, 918, 919], "npzfile": 919, "nr_devic": [1343, 1386], "nse": [195, 197, 199, 207, 216, 222, 224, 228, 234, 237, 240, 1385], "nstep": 1460, "nsy": 1353, "nt": 506, "nth_order_deriv": 1319, "ntrial": [1460, 1462], "nu": [1021, 1051, 1240, 1241, 1348], "nu_1": 1027, "nu_2": 1027, "nuc": 801, "nuclear": 801, "null": 1431, "nullari": 1440, "num": [727, 815, 827, 1050, 1368, 1443, 1466], "num_addressable_indic": 499, "num_arg": 1319, "num_arriv": 158, "num_barri": 158, "num_batch_dim": 1350, "num_block": 1462, "num_carri": [1350, 1411], "num_circ_repeat": 1353, "num_class": [536, 1442], "num_col": 803, "num_const": [1318, 1350, 1405, 1411], "num_cor": 1458, "num_covec": [1313, 1437], "num_devic": [1353, 1360, 1404, 1458], "num_elem": 311, "num_epoch": [1435, 1442], "num_featur": 1445, "num_fram": 82, "num_it": 403, "num_iter": 1353, "num_kei": 473, "num_label": 1442, "num_m_block": 1462, "num_microbatch": 1353, "num_model_replicas_per_process": 1341, "num_model_replicas_tot": 1341, "num_n_block": 1462, "num_partit": [491, 1315, 1343, 1350], "num_pixel": 1442, "num_point": 1445, "num_primitive_oper": 1395, "num_proc": 1431, "num_process": [99, 137, 1341, 1431], "num_program": [1453, 1458, 1462], "num_r": 1318, "num_replica": [491, 1315, 1343, 1350], "num_row": 803, "num_scalar_prefetch": [1457, 1458, 1460, 1462], "num_seg": [994, 995, 996, 997], "num_shard": 1341, "num_stag": 187, "num_step": [1003, 1367, 1402, 1421, 1452], "num_vec": [1313, 1437], "num_warp": 187, "numba": 1326, "number": [38, 50, 78, 81, 82, 94, 99, 111, 132, 133, 158, 160, 174, 176, 177, 182, 187, 190, 197, 199, 207, 215, 216, 218, 219, 222, 224, 228, 233, 235, 237, 246, 247, 262, 283, 291, 292, 297, 301, 305, 306, 311, 313, 318, 319, 320, 322, 324, 325, 334, 335, 336, 340, 343, 344, 345, 358, 359, 368, 369, 370, 371, 374, 382, 383, 384, 385, 386, 392, 393, 403, 414, 416, 417, 418, 419, 420, 421, 422, 428, 429, 430, 437, 449, 453, 456, 465, 466, 467, 473, 478, 479, 480, 484, 489, 491, 493, 495, 506, 529, 536, 553, 563, 565, 568, 576, 577, 578, 579, 580, 582, 585, 587, 600, 602, 615, 621, 627, 640, 641, 652, 656, 657, 660, 665, 666, 669, 675, 697, 699, 712, 713, 717, 721, 722, 723, 724, 727, 735, 736, 737, 738, 748, 749, 758, 762, 764, 766, 767, 768, 769, 771, 776, 783, 785, 798, 800, 801, 810, 815, 827, 829, 831, 833, 839, 845, 846, 853, 855, 856, 858, 861, 863, 864, 870, 871, 872, 873, 874, 875, 878, 883, 887, 895, 896, 897, 898, 906, 912, 915, 916, 923, 924, 933, 934, 935, 936, 942, 946, 947, 950, 951, 957, 961, 965, 971, 972, 973, 974, 975, 976, 977, 982, 983, 984, 985, 986, 992, 994, 995, 996, 997, 998, 1000, 1003, 1017, 1022, 1033, 1040, 1043, 1050, 1072, 1091, 1092, 1093, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1244, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1300, 1303, 1304, 1308, 1318, 1319, 1322, 1325, 1326, 1328, 1331, 1339, 1342, 1343, 1346, 1348, 1350, 1353, 1354, 1356, 1367, 1368, 1374, 1382, 1385, 1386, 1395, 1398, 1402, 1404, 1411, 1414, 1415, 1417, 1418, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1430, 1431, 1433, 1438, 1443, 1452, 1453, 1455, 1458, 1460, 1462, 1463, 1464, 1467, 1469, 1472, 1474], "numer": [67, 113, 235, 301, 356, 359, 360, 361, 389, 418, 445, 446, 480, 537, 574, 616, 664, 729, 741, 748, 763, 793, 798, 801, 866, 877, 878, 996, 997, 1027, 1077, 1104, 1105, 1106, 1140, 1312, 1318, 1322, 1325, 1326, 1328, 1329, 1331, 1334, 1336, 1337, 1350, 1355, 1367, 1402, 1405, 1409, 1414, 1416, 1418, 1419, 1421, 1425, 1426, 1432, 1436, 1441, 1443, 1444, 1449, 1457, 1461, 1465, 1466, 1470], "numpi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 67, 78, 81, 84, 95, 98, 105, 106, 113, 114, 119, 121, 138, 168, 207, 222, 224, 228, 237, 259, 289, 290, 293, 295, 296, 297, 298, 301, 305, 306, 321, 322, 323, 324, 325, 328, 348, 359, 361, 362, 363, 364, 365, 366, 367, 368, 378, 381, 382, 383, 387, 391, 392, 414, 416, 417, 418, 419, 423, 429, 440, 441, 442, 443, 445, 446, 448, 449, 452, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 471, 472, 480, 486, 493, 498, 499, 500, 501, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 536, 537, 539, 540, 993, 998, 1063, 1068, 1069, 1070, 1077, 1078, 1083, 1084, 1086, 1089, 1094, 1095, 1096, 1097, 1100, 1275, 1279, 1303, 1304, 1312, 1313, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1326, 1331, 1333, 1334, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1373, 1374, 1382, 1385, 1386, 1395, 1400, 1402, 1404, 1409, 1410, 1411, 1413, 1415, 1417, 1421, 1422, 1425, 1428, 1429, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1449, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475], "numpy_arrai": 1432, "numpy_array_new": 1432, "numpy_col": 1435, "numpy_dtype_promot": 1473, "numpy_random_lik": 1348, "numpy_random_like_ord": 1348, "numpy_rank_promot": 1467, "numpy_resid": 794, "numpyro": 1355, "nutshel": [1331, 1457], "nvcc": [1339, 1356], "nvfp4": [509, 539, 540], "nvidia": [188, 540, 1312, 1326, 1339, 1349, 1358, 1431, 1444, 1452, 1464], "nvlink": [1341, 1356, 1431], "nvmap": [1313, 1437], "nvreg_restrictprofilingtoadminus": 1464, "nvvm": 1356, "nwc": 1439, "nx": [1399, 1426], "nzero": 1326, "o": [76, 343, 344, 389, 396, 816, 867, 1009, 1011, 1043, 1135, 1318, 1326, 1343, 1350, 1353, 1354, 1411, 1419, 1432, 1435, 1438, 1439, 1443, 1448, 1458, 1460, 1462, 1463, 1475], "o0": 1328, "o1": 1328, "o2": 1328, "o3": 1328, "o_map": 1462, "o_ref": [1449, 1453, 1455, 1456, 1458, 1462], "o_wo": 1415, "ob": [1058, 1474], "obei": [1316, 1319], "obj": [287, 650, 664, 750, 774, 1280, 1282, 1332, 1349, 1465], "obj1": 1349, "obj2": 1349, "object": [63, 65, 66, 69, 70, 78, 81, 88, 89, 91, 92, 93, 101, 102, 105, 110, 111, 112, 114, 117, 118, 121, 122, 123, 124, 125, 126, 131, 136, 137, 168, 182, 200, 241, 244, 259, 262, 264, 265, 277, 281, 282, 283, 285, 286, 287, 296, 303, 304, 315, 316, 331, 339, 342, 343, 344, 348, 349, 372, 373, 375, 381, 411, 412, 425, 426, 427, 431, 432, 433, 434, 435, 455, 457, 458, 459, 460, 461, 462, 469, 476, 481, 482, 483, 492, 497, 498, 501, 502, 537, 538, 552, 555, 582, 588, 602, 612, 615, 621, 634, 635, 664, 667, 669, 697, 711, 716, 717, 718, 720, 722, 724, 746, 750, 762, 771, 772, 773, 774, 799, 816, 837, 861, 867, 868, 870, 893, 898, 909, 910, 911, 917, 918, 919, 925, 933, 937, 965, 992, 993, 998, 1006, 1012, 1050, 1064, 1074, 1082, 1092, 1093, 1104, 1105, 1106, 1107, 1119, 1121, 1123, 1129, 1135, 1137, 1144, 1150, 1151, 1152, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1274, 1277, 1279, 1280, 1282, 1293, 1300, 1304, 1305, 1313, 1315, 1318, 1319, 1325, 1326, 1328, 1331, 1332, 1342, 1343, 1346, 1349, 1350, 1351, 1360, 1367, 1373, 1382, 1385, 1386, 1395, 1399, 1404, 1405, 1408, 1409, 1414, 1419, 1421, 1422, 1425, 1429, 1430, 1432, 1433, 1434, 1437, 1441, 1444, 1447, 1449, 1452, 1453, 1456, 1458, 1463, 1464, 1466, 1468, 1469, 1470, 1473, 1474], "objective_fn": 69, "obscur": 981, "observ": [636, 641, 981, 1058, 1123, 1313, 1343, 1346, 1349, 1360, 1413, 1419, 1448, 1452, 1453, 1460, 1474], "obtain": [92, 243, 539, 683, 978, 1103, 1313, 1315, 1326, 1328, 1339, 1343, 1346, 1349, 1360, 1404, 1411, 1435, 1442, 1452, 1455, 1458, 1460, 1468], "obviou": [1340, 1349, 1412, 1418, 1439, 1440], "occas": 1414, "occasion": [1332, 1349, 1422, 1465], "occupi": [697, 1441, 1452, 1457], "occur": [84, 121, 311, 616, 923, 971, 972, 1003, 1004, 1005, 1036, 1318, 1328, 1331, 1334, 1335, 1336, 1342, 1349, 1352, 1410, 1412, 1417, 1429, 1430, 1432, 1458, 1463, 1464, 1470], "occurr": [600, 735, 972, 973, 974, 1346, 1360, 1467], "oct": [1353, 1423], "octob": [1338, 1343, 1418], "od": [1326, 1418], "odd": [303, 343, 683, 688, 692, 693, 873, 1102, 1432], "odeint": [1313, 1326, 1418, 1419, 1433], "odrpack": 1418, "off": [67, 92, 636, 641, 794, 1071, 1318, 1319, 1326, 1328, 1339, 1342, 1352, 1353, 1354, 1413, 1438, 1439, 1475], "offer": [0, 92, 197, 199, 1312, 1315, 1328, 1329, 1335, 1336, 1337, 1341, 1343, 1360, 1385, 1387, 1412, 1414, 1415, 1416, 1417, 1418, 1422, 1426, 1432, 1436, 1439, 1448, 1449, 1455, 1458, 1460, 1469], "offici": [1339, 1448, 1475], "offload": [1314, 1475], "offload_dot_with_no_batch_dim": 1354, "offload_dst": [1354, 1441], "offload_src": [1354, 1441], "offset": [22, 58, 651, 654, 655, 664, 676, 717, 743, 788, 812, 828, 898, 952, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1374, 1395, 1457, 1458], "offset_dim": [381, 1395], "often": [63, 113, 131, 262, 283, 920, 1012, 1106, 1139, 1140, 1312, 1313, 1315, 1317, 1318, 1319, 1339, 1341, 1342, 1343, 1351, 1352, 1354, 1368, 1399, 1412, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1425, 1426, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1443, 1444, 1449, 1452, 1457, 1458, 1460, 1461, 1464, 1465, 1470, 1474], "oftentim": 1457, "og": 1417, "ogrid": [747, 775, 836, 837], "oh": 1469, "oi": [344, 345], "oihw": [343, 344, 1439], "oihwd": 345, "oiwh": 345, "ok": [1331, 1341, 1349, 1427, 1429, 1431], "okai": [1412, 1448], "old": [186, 1013, 1306, 1307, 1309, 1310, 1316, 1317, 1326, 1343, 1410, 1419, 1423, 1425, 1427, 1444, 1447, 1448, 1458, 1466], "older": [842, 945, 1279, 1308, 1326, 1338, 1340, 1343, 1427], "omit": [99, 337, 1239, 1328, 1350, 1404, 1434], "omni": 1424, "omnistag": [1318, 1319, 1326, 1428], "ompi": 99, "on_fals": 463, "on_ineffici": 219, "on_tru": 463, "onc": [82, 84, 99, 296, 303, 304, 415, 425, 426, 427, 432, 433, 434, 435, 456, 493, 595, 596, 597, 998, 1012, 1279, 1313, 1318, 1319, 1323, 1328, 1329, 1339, 1341, 1346, 1349, 1353, 1360, 1382, 1411, 1412, 1414, 1415, 1417, 1422, 1425, 1429, 1430, 1431, 1432, 1434, 1437, 1440, 1443, 1444, 1448, 1452, 1455, 1456, 1458, 1462, 1463, 1464, 1466, 1468, 1469], "one": [32, 52, 67, 76, 79, 93, 98, 99, 111, 114, 182, 205, 219, 226, 230, 241, 244, 291, 292, 296, 302, 313, 328, 339, 343, 344, 348, 360, 361, 362, 363, 364, 366, 387, 424, 433, 440, 441, 442, 443, 445, 446, 448, 450, 452, 472, 481, 529, 534, 536, 567, 616, 621, 633, 636, 637, 641, 646, 647, 664, 666, 667, 674, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 703, 712, 713, 736, 739, 740, 741, 746, 757, 762, 771, 772, 775, 800, 809, 817, 819, 833, 839, 853, 855, 872, 875, 897, 907, 909, 917, 918, 919, 920, 924, 940, 947, 950, 955, 957, 958, 961, 962, 987, 998, 1009, 1011, 1012, 1039, 1041, 1058, 1059, 1060, 1061, 1062, 1081, 1091, 1093, 1098, 1099, 1101, 1102, 1103, 1123, 1138, 1149, 1271, 1304, 1313, 1315, 1318, 1319, 1320, 1321, 1322, 1324, 1326, 1328, 1329, 1331, 1333, 1336, 1337, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1357, 1360, 1366, 1368, 1382, 1399, 1402, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1474, 1475], "one_hot": [1326, 1435, 1442], "one_of_thre": 1411, "oneapi": 1356, "oner": 1326, "ones": [0, 73, 233, 234, 240, 365, 366, 367, 415, 540, 596, 597, 610, 623, 629, 630, 636, 641, 663, 668, 723, 740, 749, 809, 828, 842, 847, 861, 870, 913, 925, 933, 945, 950, 955, 956, 960, 987, 989, 991, 1004, 1005, 1065, 1091, 1279, 1280, 1282, 1304, 1313, 1315, 1318, 1323, 1324, 1331, 1333, 1334, 1337, 1339, 1341, 1342, 1346, 1354, 1357, 1368, 1402, 1411, 1414, 1419, 1424, 1427, 1430, 1431, 1432, 1433, 1436, 1437, 1438, 1439, 1441, 1448, 1449, 1455, 1456, 1457, 1460, 1461, 1462, 1474], "ones_lik": [669, 724, 869, 992, 1350, 1434], "ongo": [1337, 1418], "onli": [10, 61, 67, 78, 81, 82, 83, 85, 98, 99, 102, 114, 121, 127, 135, 172, 182, 184, 194, 205, 212, 235, 236, 249, 250, 262, 283, 296, 305, 306, 339, 363, 378, 395, 397, 398, 399, 404, 405, 406, 407, 409, 415, 434, 453, 463, 472, 492, 496, 499, 502, 506, 534, 568, 578, 582, 588, 591, 598, 602, 616, 621, 633, 637, 664, 683, 701, 726, 758, 780, 789, 790, 791, 804, 807, 832, 834, 836, 838, 844, 849, 850, 852, 854, 857, 860, 874, 880, 882, 885, 886, 888, 892, 910, 918, 919, 923, 924, 944, 957, 959, 961, 971, 972, 973, 974, 975, 976, 987, 990, 998, 1009, 1011, 1012, 1059, 1060, 1061, 1062, 1070, 1071, 1072, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1100, 1101, 1104, 1105, 1115, 1116, 1117, 1122, 1123, 1129, 1138, 1140, 1144, 1148, 1218, 1238, 1239, 1256, 1257, 1258, 1259, 1267, 1273, 1279, 1282, 1304, 1315, 1316, 1317, 1318, 1319, 1321, 1323, 1326, 1328, 1329, 1331, 1333, 1334, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1358, 1360, 1366, 1367, 1368, 1373, 1382, 1386, 1387, 1395, 1402, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1447, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1473, 1474, 1475], "onlin": [1319, 1367], "ont": 1336, "onto": [101, 365, 366, 367, 457, 458, 460, 461, 462, 716, 1318, 1323, 1341, 1350, 1410, 1412, 1431, 1434, 1443, 1452, 1457, 1458, 1462], "oob": 1449, "ooberror": [117, 118, 124], "oom": [1326, 1328], "oop": [1414, 1469], "op": [98, 331, 337, 349, 372, 373, 375, 408, 411, 412, 455, 469, 476, 482, 483, 965, 1279, 1316, 1318, 1319, 1326, 1349, 1359, 1373, 1410, 1413, 1417, 1424, 1429, 1432, 1436, 1440, 1443, 1444, 1457, 1460, 1461, 1462, 1475], "op_nam": 1350, "op_profil": 1464, "opaqu": [81, 127, 262, 264, 283, 285, 1326, 1340, 1350, 1419, 1425, 1458, 1465, 1474], "opaquetracest": 1326, "open": [99, 491, 775, 836, 837, 868, 918, 919, 1009, 1011, 1053, 1313, 1320, 1326, 1328, 1329, 1339, 1340, 1349, 1350, 1386, 1414, 1433, 1437, 1444, 1449, 1464, 1475], "open_mesh": 775, "openai": 1449, "openxla": [491, 1312, 1326, 1328, 1350, 1356, 1430, 1475], "oper": [10, 13, 67, 83, 88, 89, 91, 92, 96, 98, 119, 121, 127, 144, 145, 146, 147, 148, 149, 150, 151, 160, 173, 179, 190, 194, 203, 204, 220, 241, 277, 281, 282, 292, 296, 298, 299, 300, 301, 302, 309, 310, 311, 312, 313, 314, 321, 322, 323, 324, 325, 327, 331, 332, 334, 336, 337, 338, 339, 343, 344, 348, 349, 350, 356, 359, 360, 361, 363, 366, 368, 372, 373, 375, 377, 381, 382, 383, 386, 390, 391, 392, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 429, 430, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 480, 481, 482, 483, 485, 503, 504, 539, 540, 558, 579, 601, 606, 608, 633, 637, 642, 650, 670, 673, 714, 719, 721, 759, 777, 779, 795, 799, 800, 803, 810, 823, 824, 825, 826, 829, 830, 843, 860, 865, 888, 890, 893, 905, 934, 941, 943, 953, 956, 960, 965, 998, 1009, 1011, 1023, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1135, 1256, 1269, 1276, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1326, 1328, 1334, 1336, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1360, 1367, 1382, 1385, 1399, 1402, 1408, 1410, 1411, 1415, 1417, 1418, 1419, 1422, 1424, 1425, 1426, 1429, 1431, 1434, 1437, 1438, 1439, 1441, 1443, 1444, 1449, 1450, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1470, 1472, 1474, 1475], "operand": [83, 85, 96, 178, 201, 202, 205, 208, 212, 263, 284, 302, 305, 306, 307, 308, 321, 326, 327, 335, 338, 339, 348, 351, 352, 353, 354, 355, 362, 363, 364, 365, 366, 367, 381, 387, 422, 423, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 457, 458, 459, 460, 461, 462, 471, 472, 473, 475, 481, 484, 485, 540, 580, 666, 667, 1315, 1318, 1326, 1331, 1343, 1360, 1373, 1395, 1411, 1414, 1417, 1432, 1460, 1474], "operand_batching_dim": 1395, "operand_layout": [263, 284, 1350], "operand_layout_constraint": 1350, "operand_map": 1373, "operation": 479, "operation_semant": [344, 345, 452], "operatornam": [534, 1138], "opinion": 1440, "oplu": 325, "opportun": 1475, "oppos": [1419, 1449, 1460], "opposit": [1414, 1415, 1443, 1458], "opresult": 1360, "opset": 1343, "opshard": [1326, 1410, 1415, 1416], "opshardingshard": 1326, "opt": [836, 1275, 1325, 1326, 1358, 1413, 1414, 1422, 1426, 1435, 1457], "opt_barrier_st": 1448, "opt_einsum": [666, 667, 800], "opt_init": 1367, "opt_mak": 1367, "opt_stat": 1367, "opt_upd": 1367, "optax": [1325, 1326, 1355, 1367, 1369], "optic": 1457, "optim": [67, 81, 113, 194, 216, 235, 337, 339, 422, 491, 666, 667, 673, 794, 800, 830, 842, 901, 907, 913, 940, 945, 953, 1256, 1279, 1315, 1318, 1324, 1325, 1326, 1336, 1348, 1349, 1350, 1353, 1354, 1355, 1357, 1366, 1385, 1399, 1412, 1413, 1415, 1429, 1430, 1432, 1437, 1438, 1440, 1441, 1443, 1444, 1448, 1449, 1452, 1455, 1456, 1458, 1460, 1463, 1468, 1469, 1475], "optimis": 1415, "optimistix": [1355, 1418], "optimization_barri": [1326, 1448], "optimize_remat": 81, "optimizer_st": 1469, "optimizeresult": 1093, "optimizerst": 1367, "option": [10, 63, 65, 66, 67, 68, 78, 81, 82, 83, 85, 88, 89, 91, 92, 93, 94, 96, 97, 99, 101, 102, 110, 111, 112, 121, 131, 132, 133, 135, 155, 174, 182, 194, 212, 216, 219, 232, 233, 244, 250, 251, 267, 289, 290, 293, 295, 296, 297, 303, 304, 305, 306, 331, 337, 341, 343, 344, 345, 346, 347, 349, 360, 361, 372, 373, 375, 378, 379, 380, 397, 398, 403, 411, 412, 415, 424, 425, 426, 427, 433, 434, 435, 450, 455, 456, 457, 469, 471, 472, 476, 482, 483, 491, 493, 496, 497, 499, 501, 502, 503, 506, 516, 524, 527, 528, 536, 539, 540, 550, 552, 568, 576, 577, 580, 582, 585, 587, 588, 591, 598, 600, 616, 621, 622, 623, 628, 630, 636, 640, 641, 644, 645, 646, 647, 651, 652, 654, 655, 656, 657, 663, 664, 665, 666, 667, 668, 669, 675, 676, 679, 680, 682, 683, 685, 687, 688, 690, 691, 693, 694, 695, 699, 716, 717, 719, 721, 722, 723, 724, 727, 728, 729, 735, 736, 738, 740, 743, 757, 758, 765, 796, 798, 800, 801, 805, 807, 811, 814, 815, 827, 828, 834, 835, 836, 844, 845, 846, 847, 848, 851, 853, 855, 856, 858, 860, 864, 869, 870, 872, 873, 875, 891, 894, 896, 897, 901, 902, 915, 918, 919, 920, 922, 923, 933, 941, 942, 946, 947, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 971, 972, 973, 974, 975, 976, 977, 982, 983, 987, 989, 991, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1006, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1063, 1070, 1072, 1074, 1080, 1081, 1086, 1087, 1090, 1093, 1094, 1095, 1096, 1097, 1100, 1102, 1104, 1105, 1106, 1196, 1203, 1238, 1239, 1256, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1279, 1282, 1302, 1303, 1304, 1313, 1315, 1318, 1321, 1322, 1325, 1326, 1329, 1331, 1337, 1339, 1342, 1343, 1346, 1349, 1350, 1352, 1353, 1356, 1367, 1373, 1382, 1386, 1399, 1402, 1404, 1405, 1412, 1417, 1418, 1420, 1427, 1431, 1432, 1433, 1434, 1439, 1443, 1449, 1452, 1458, 1463, 1467, 1471, 1474, 1475], "optix": [1326, 1369], "optstatepytre": 1367, "or_": 1318, "orang": 1458, "orbax": [1355, 1358], "orchestr": 1431, "ord": [796, 801, 814], "order": [8, 10, 26, 42, 45, 51, 67, 69, 82, 83, 85, 131, 132, 133, 160, 212, 218, 237, 262, 263, 283, 284, 305, 306, 318, 319, 337, 343, 344, 345, 398, 422, 450, 457, 473, 501, 502, 578, 579, 580, 582, 588, 616, 628, 634, 656, 657, 665, 666, 667, 675, 701, 702, 703, 729, 742, 783, 785, 790, 792, 800, 809, 860, 872, 874, 881, 884, 887, 901, 902, 906, 907, 915, 920, 923, 930, 934, 946, 950, 953, 971, 972, 977, 982, 998, 1076, 1081, 1091, 1130, 1131, 1132, 1133, 1139, 1140, 1145, 1149, 1257, 1263, 1279, 1280, 1282, 1312, 1315, 1318, 1319, 1320, 1321, 1326, 1328, 1329, 1333, 1337, 1339, 1341, 1343, 1346, 1348, 1350, 1351, 1354, 1357, 1374, 1382, 1385, 1386, 1395, 1399, 1402, 1404, 1414, 1415, 1417, 1419, 1421, 1422, 1426, 1430, 1431, 1433, 1434, 1436, 1437, 1438, 1443, 1444, 1447, 1448, 1449, 1455, 1456, 1457, 1458, 1460, 1462, 1466, 1470], "orderabilti": 1420, "ordered_effect": 1386, "ordereddict": 1465, "ordin": 1238, "ordinari": [1319, 1334, 1360], "org": [76, 235, 305, 306, 344, 345, 357, 452, 506, 549, 697, 1014, 1043, 1284, 1339, 1351, 1356, 1367, 1415, 1430, 1435, 1442, 1464], "org_tensorflow": 1464, "organ": [1430, 1452], "orient": [1281, 1283, 1355, 1402, 1414, 1419, 1421, 1444, 1469], "orig_ind": 1318, "origin": [10, 81, 101, 121, 127, 128, 565, 615, 634, 682, 687, 715, 716, 817, 860, 898, 902, 908, 912, 978, 981, 1075, 1078, 1082, 1098, 1123, 1275, 1313, 1315, 1326, 1328, 1329, 1333, 1336, 1339, 1346, 1349, 1351, 1354, 1358, 1399, 1412, 1414, 1417, 1424, 1425, 1426, 1427, 1432, 1433, 1436, 1437, 1438, 1439, 1440, 1444, 1448, 1455, 1465], "ortho": [678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 1059, 1060, 1061, 1062], "orthogon": [235, 400, 404, 517, 804, 1083, 1326, 1418], "orthonorm": [235, 526, 804, 807, 1043, 1070, 1082, 1083, 1089, 1140, 1149], "oryx": 1416, "ospec": 1463, "oss": [1343, 1346, 1356], "ossci": 1435, "other": [63, 65, 66, 67, 82, 83, 85, 98, 99, 135, 137, 155, 182, 216, 263, 284, 290, 292, 337, 357, 361, 378, 381, 398, 408, 409, 415, 424, 433, 440, 441, 442, 443, 445, 446, 448, 456, 457, 458, 459, 460, 461, 462, 486, 499, 501, 503, 504, 506, 539, 595, 596, 597, 600, 642, 650, 666, 667, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 712, 713, 718, 720, 741, 758, 786, 801, 817, 864, 902, 906, 914, 923, 924, 947, 971, 972, 973, 974, 975, 976, 998, 1013, 1123, 1200, 1279, 1281, 1304, 1312, 1315, 1318, 1319, 1320, 1321, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1337, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1357, 1360, 1368, 1382, 1386, 1395, 1399, 1402, 1404, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1434, 1436, 1437, 1438, 1440, 1441, 1443, 1444, 1446, 1448, 1452, 1453, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1468, 1469, 1470, 1471, 1474, 1475], "other_bind": 1318, "other_mesh": 1343, "other_platforms_cod": 424, "otherwis": [10, 61, 67, 78, 81, 82, 96, 97, 99, 133, 174, 236, 296, 304, 305, 306, 333, 337, 378, 381, 391, 398, 404, 405, 406, 408, 497, 506, 670, 730, 731, 757, 762, 764, 766, 767, 768, 769, 771, 772, 774, 781, 782, 795, 804, 806, 807, 829, 860, 865, 927, 946, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1024, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1070, 1083, 1089, 1114, 1123, 1134, 1146, 1154, 1155, 1177, 1179, 1185, 1187, 1244, 1246, 1249, 1250, 1298, 1313, 1315, 1318, 1319, 1321, 1326, 1328, 1339, 1346, 1352, 1371, 1373, 1395, 1402, 1414, 1418, 1419, 1421, 1431, 1432, 1433, 1437, 1440, 1441, 1448, 1452, 1457, 1462, 1464], "ought": [1329, 1346, 1416], "our": [981, 1148, 1280, 1312, 1313, 1315, 1316, 1318, 1319, 1329, 1331, 1349, 1350, 1356, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1423, 1425, 1426, 1427, 1429, 1431, 1433, 1435, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1461, 1462, 1468, 1469], "our_jacfwd": [1313, 1437], "our_jacrev": [1313, 1437], "ourselv": 1412, "out": [3, 4, 5, 6, 10, 11, 14, 19, 20, 34, 35, 36, 40, 41, 46, 53, 54, 56, 58, 60, 69, 82, 83, 84, 85, 113, 114, 119, 120, 121, 127, 140, 205, 212, 213, 215, 335, 362, 363, 364, 365, 366, 367, 381, 424, 450, 457, 458, 459, 460, 461, 462, 481, 487, 498, 500, 503, 504, 506, 539, 558, 559, 561, 562, 564, 576, 577, 581, 598, 601, 606, 608, 616, 621, 628, 644, 645, 654, 666, 698, 758, 768, 769, 821, 822, 823, 825, 826, 832, 833, 834, 835, 838, 839, 841, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 862, 871, 875, 892, 894, 895, 896, 897, 902, 916, 924, 940, 941, 942, 943, 944, 946, 947, 952, 978, 983, 994, 995, 996, 997, 998, 1304, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1322, 1326, 1328, 1329, 1333, 1334, 1336, 1337, 1339, 1340, 1341, 1342, 1344, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1368, 1395, 1402, 1404, 1405, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1429, 1430, 1431, 1433, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1474], "out1": 290, "out2": 290, "out_1": 290, "out_2": 290, "out_av": [1318, 1346, 1386], "out_ax": [493, 998, 1304, 1321, 1326, 1360, 1415, 1417, 1443, 1465, 1474], "out_axi": [518, 519, 520, 521, 522, 523, 529], "out_axis_resourc": [1326, 1334], "out_batch": 73, "out_bdim": 1318, "out_bind": 1318, "out_binders1": 1318, "out_binders2": 1318, "out_block": 1443, "out_block_shap": 1452, "out_buf": 1318, "out_chan": 1368, "out_ct": 1360, "out_dev": 1441, "out_dim": 1368, "out_flat": [1318, 1360], "out_hbm": 1455, "out_host": 1441, "out_index_map": 1452, "out_info": 1326, "out_nod": 1318, "out_part": 1326, "out_prim": 1318, "out_pspec": [136, 137, 1410], "out_ref": 1448, "out_shap": [182, 1448, 1449, 1453, 1455, 1456, 1458, 1460, 1461, 1462], "out_shard": [26, 42, 44, 45, 84, 203, 220, 296, 326, 327, 330, 361, 450, 452, 614, 660, 666, 901, 906, 907, 1018, 1042, 1045, 1048, 1053, 1054, 1326, 1334, 1350, 1373, 1382, 1410, 1436, 1440, 1441, 1463], "out_shardings_hlo": 1386, "out_shardings_jax": 1386, "out_slic": 1455, "out_spec": [141, 174, 182, 194, 316, 343, 344, 345, 1256, 1350, 1395, 1439, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1468], "out_specs_tre": 1447, "out_sram": 1455, "out_stor": 267, "out_summand": 1443, "out_summand_hi": 1443, "out_summand_lo": 1443, "out_tan": 1318, "out_tang": 493, "out_trac": 1318, "out_tre": [192, 249, 1318, 1386, 1405], "out_tree_": 1318, "out_typ": [1012, 1318, 1350], "out_types1": 1318, "out_types2": 1318, "out_uk": 1318, "out_unknown": 1318, "out_val": 1318, "out_var": 1318, "out_vmem_ref": 1461, "outcom": [1040, 1327], "outdbidx": 1326, "outer": [133, 610, 666, 721, 777, 809, 950, 965, 998, 1271, 1313, 1323, 1326, 1342, 1367, 1437, 1440, 1449, 1458, 1462, 1463, 1470, 1474], "outer_block_s": 1458, "outer_grid": 1458, "outer_kernel": 1458, "outer_step": 1458, "outer_structur": 1271, "outer_treedef": [1271, 1295, 1474], "outfe": [1313, 1326, 1433], "outfeed_p": 1326, "outfeed_receiv": 1326, "outfil": [918, 919], "outlin": [1348, 1414, 1418, 1420, 1422, 1425, 1426, 1428, 1446, 1452, 1455, 1457], "outperform": [1349, 1449], "output": [67, 69, 74, 76, 78, 79, 81, 88, 89, 114, 120, 121, 127, 128, 131, 136, 138, 153, 160, 174, 182, 194, 204, 206, 216, 219, 233, 248, 249, 253, 262, 263, 267, 283, 284, 288, 289, 290, 291, 292, 293, 295, 296, 297, 303, 304, 321, 343, 344, 345, 346, 348, 360, 361, 362, 379, 380, 381, 387, 402, 407, 415, 422, 432, 434, 435, 456, 457, 458, 459, 460, 461, 462, 481, 486, 487, 492, 493, 498, 499, 500, 501, 506, 518, 519, 520, 521, 522, 523, 527, 529, 534, 539, 545, 547, 548, 559, 564, 578, 580, 582, 588, 591, 600, 613, 628, 633, 637, 642, 644, 645, 646, 647, 650, 664, 675, 679, 680, 683, 685, 690, 691, 693, 694, 695, 697, 719, 721, 727, 729, 758, 759, 777, 796, 800, 801, 803, 812, 814, 816, 827, 828, 832, 834, 835, 838, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 864, 874, 879, 882, 885, 892, 898, 904, 906, 907, 910, 914, 919, 923, 924, 938, 942, 944, 945, 946, 952, 958, 962, 965, 971, 972, 973, 974, 975, 976, 977, 982, 983, 987, 994, 995, 996, 997, 998, 1006, 1007, 1012, 1022, 1029, 1047, 1067, 1080, 1085, 1094, 1095, 1096, 1097, 1100, 1138, 1147, 1256, 1257, 1258, 1259, 1263, 1302, 1303, 1304, 1313, 1315, 1316, 1317, 1320, 1321, 1324, 1326, 1328, 1331, 1334, 1335, 1336, 1339, 1340, 1343, 1348, 1350, 1351, 1353, 1354, 1358, 1360, 1368, 1373, 1382, 1386, 1395, 1399, 1402, 1405, 1409, 1410, 1411, 1416, 1418, 1419, 1421, 1423, 1426, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1473, 1474, 1475], "output_buff": [1353, 1455], "output_copi": 1458, "output_global_arrai": 499, "output_layout": [262, 283, 1350], "output_ref": [174, 1458, 1462], "output_shap": 321, "output_shape_dtyp": 1326, "output_tang": 1360, "output_token": 1412, "outs1": 1318, "outs1_r": 1318, "outs2": 1318, "outs_flat": 1318, "outs_transpos": 1318, "outsid": [0, 67, 73, 120, 292, 422, 464, 536, 572, 575, 994, 995, 996, 997, 1023, 1064, 1091, 1123, 1312, 1313, 1326, 1331, 1334, 1342, 1362, 1402, 1412, 1417, 1419, 1426, 1432, 1437, 1448, 1449, 1462, 1470], "outsiz": 1418, "outstand": [1091, 1374, 1424, 1452], "outval": 1436, "outvar": [253, 254, 1318, 1436], "outweigh": [1418, 1420], "over": [40, 54, 67, 76, 140, 174, 182, 194, 211, 303, 304, 306, 311, 313, 339, 357, 359, 381, 415, 425, 426, 427, 433, 434, 435, 438, 440, 441, 442, 443, 445, 446, 448, 455, 456, 473, 481, 534, 566, 567, 642, 719, 738, 774, 801, 809, 814, 835, 851, 856, 858, 862, 892, 895, 942, 944, 946, 950, 954, 965, 983, 998, 1012, 1022, 1063, 1074, 1102, 1138, 1198, 1256, 1261, 1267, 1268, 1269, 1304, 1312, 1313, 1315, 1316, 1318, 1319, 1321, 1326, 1329, 1333, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1350, 1354, 1356, 1382, 1402, 1408, 1410, 1411, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1441, 1444, 1447, 1448, 1449, 1452, 1453, 1454, 1455, 1457, 1458, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1474], "overal": [305, 306, 1339, 1341, 1349, 1352, 1353, 1414, 1419, 1447, 1452, 1453, 1457, 1462], "overarch": 1385, "overflow": [359, 449, 697, 821, 822, 1140, 1326, 1349, 1426], "overflowerror": 1326, "overhead": [65, 66, 67, 219, 492, 1106, 1313, 1317, 1323, 1328, 1341, 1348, 1349, 1350, 1352, 1409, 1412, 1414, 1416, 1424, 1429, 1432, 1437, 1448, 1452, 1460, 1462], "overlai": [1402, 1425, 1444, 1466], "overlap": [381, 457, 458, 459, 460, 461, 462, 499, 633, 637, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1353, 1414, 1415, 1418, 1443, 1448, 1449, 1452, 1455, 1457, 1458, 1460, 1475], "overli": [1413, 1414, 1424], "overlin": [340, 637, 641], "overload": [666, 1273, 1319, 1346], "overpromot": 1473, "overrid": [249, 305, 306, 356, 397, 404, 642, 666, 669, 724, 844, 870, 992, 1318, 1326, 1328, 1349, 1352, 1356, 1440, 1463], "overridden": [1357, 1427, 1440, 1455, 1464, 1474], "override_lowering_rul": 1360, "override_repositori": 1339, "overrun": 363, "overus": 1457, "overview": [1322, 1326, 1444, 1461, 1475], "overwhelmingli": 1413, "overwrit": [160, 1432, 1452, 1458], "overwrite_a": [1066, 1067, 1068, 1069, 1070, 1075, 1077, 1078, 1079, 1083, 1086, 1089], "overwrite_b": [1067, 1070, 1080, 1086, 1087], "overwrite_data": 1099, "overwrite_input": [835, 851, 853, 855, 875, 897], "overwritten": [96, 296, 696], "own": [176, 184, 499, 953, 965, 998, 1319, 1320, 1323, 1326, 1329, 1336, 1339, 1341, 1349, 1352, 1369, 1379, 1412, 1414, 1415, 1417, 1421, 1427, 1430, 1432, 1436, 1437, 1443, 1448, 1452, 1458, 1460, 1461, 1463, 1464, 1474], "owner": 1312, "ownership": 1326, "p": [96, 245, 316, 401, 404, 450, 498, 499, 500, 614, 777, 785, 881, 883, 884, 887, 906, 914, 981, 1014, 1015, 1017, 1022, 1030, 1031, 1040, 1078, 1082, 1083, 1134, 1137, 1143, 1146, 1153, 1154, 1155, 1156, 1165, 1166, 1207, 1208, 1219, 1220, 1223, 1224, 1235, 1313, 1318, 1319, 1326, 1336, 1343, 1350, 1354, 1360, 1373, 1404, 1410, 1415, 1421, 1431, 1432, 1433, 1434, 1438, 1440, 1441, 1442, 1443, 1458, 1462, 1468, 1474], "p_": 887, "p_0": 887, "p_1": [887, 1040], "p_i": [1219, 1220], "p_k": 1040, "p_l": 1140, "p_n": 1149, "p_transpos": 1360, "pack": [161, 164, 190, 872, 1313, 1339, 1411, 1433, 1465, 1474], "pack_optimizer_st": 1367, "packag": [397, 666, 667, 1315, 1316, 1318, 1325, 1326, 1331, 1336, 1339, 1340, 1343, 1349, 1350, 1356, 1360, 1369, 1396, 1402, 1411, 1414, 1416, 1418, 1422, 1424, 1430, 1435, 1444, 1464, 1470], "packbit": [977, 1318], "packed_st": 1367, "pacman": 1339, "pad": [114, 216, 341, 343, 344, 345, 346, 347, 403, 447, 628, 633, 637, 664, 675, 699, 758, 864, 872, 923, 924, 971, 972, 973, 974, 975, 976, 977, 1059, 1061, 1094, 1095, 1096, 1097, 1098, 1100, 1102, 1103, 1326, 1339, 1349, 1353, 1354, 1368, 1430, 1438, 1447, 1453, 1457], "pad_func": 873, "pad_width": 873, "padding_config": 423, "padding_valu": 423, "paddingtyp": 1326, "padvaluelik": 873, "page": [1329, 1333, 1342, 1349, 1350, 1353, 1355, 1452, 1457], "pai": [1354, 1426, 1438, 1473], "paid": 1352, "pain": [1318, 1334], "pair": [69, 76, 78, 81, 121, 244, 280, 288, 289, 290, 293, 295, 297, 301, 322, 324, 325, 343, 344, 345, 347, 359, 399, 404, 405, 416, 417, 418, 431, 456, 465, 466, 467, 480, 493, 501, 534, 712, 713, 736, 738, 833, 839, 965, 1070, 1085, 1138, 1263, 1264, 1266, 1280, 1282, 1302, 1303, 1304, 1313, 1318, 1319, 1325, 1326, 1328, 1341, 1350, 1354, 1360, 1368, 1374, 1404, 1405, 1411, 1415, 1417, 1419, 1426, 1431, 1433, 1437, 1438, 1443, 1448, 1455, 1458, 1462, 1465, 1466, 1473, 1474], "palla": [81, 194, 1306, 1326, 1343, 1350, 1369, 1453, 1460, 1461, 1462], "pallas_cal": [127, 141, 1447, 1448, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462], "pallas_cor": [161, 164, 169, 170, 174], "pallas_impl": 1462, "pallas_reduce_scatt": 1458, "pallas_result": 1458, "palm": 1415, "panda": 1426, "paper": [1318, 1367, 1402, 1415, 1457, 1466], "paradigm": [1350, 1351], "parallel": [91, 95, 133, 160, 188, 194, 311, 415, 487, 501, 998, 1304, 1308, 1322, 1326, 1328, 1336, 1339, 1350, 1351, 1355, 1368, 1382, 1402, 1404, 1410, 1412, 1413, 1414, 1415, 1417, 1421, 1431, 1440, 1444, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1466, 1472, 1475], "parallel_accelerator_execut": 1339, "paralleliz": [1421, 1461, 1466], "param": [254, 267, 268, 272, 1278, 1313, 1318, 1324, 1350, 1354, 1358, 1367, 1385, 1386, 1402, 1411, 1413, 1415, 1417, 1421, 1430, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1447, 1465, 1469, 1474], "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 31, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 108, 109, 110, 111, 112, 114, 115, 119, 120, 121, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 264, 265, 267, 268, 270, 271, 272, 276, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 619, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 708, 710, 711, 712, 713, 714, 715, 716, 717, 719, 721, 722, 723, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 749, 750, 751, 752, 753, 754, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1313, 1315, 1318, 1319, 1324, 1325, 1326, 1328, 1333, 1339, 1342, 1343, 1346, 1350, 1353, 1357, 1367, 1368, 1374, 1382, 1385, 1386, 1395, 1404, 1405, 1411, 1414, 1415, 1417, 1423, 1424, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1439, 1442, 1443, 1445, 1451, 1453, 1455, 1457, 1458, 1462, 1463, 1464, 1468, 1469, 1470], "parameter": [1318, 1346, 1458], "parameteris": 1313, "parameterizedlayout": 175, "parameterpytre": 1367, "parametr": 1326, "params_": 1443, "params_dens": 1385, "params_dict": [1320, 1437], "params_fn": 1367, "params_frag": 1443, "params_singl": 1434, "params_spars": 1385, "params_stack": 1443, "params_without_jaxpr": 1318, "paramsfn": 1367, "paramslist": [1354, 1438], "paramspec": 1414, "parent": [1318, 1353], "parenthes": 251, "parlanc": 1426, "pars": [251, 491, 717, 722, 1346, 1410, 1413, 1422, 1424, 1432, 1449], "parse_flags_with_absl": [1328, 1335, 1432], "part": [28, 43, 83, 120, 249, 268, 296, 336, 340, 359, 386, 434, 437, 473, 506, 553, 632, 745, 762, 771, 790, 792, 841, 903, 935, 1074, 1087, 1315, 1320, 1321, 1326, 1329, 1330, 1339, 1340, 1341, 1346, 1350, 1354, 1366, 1382, 1395, 1404, 1410, 1411, 1413, 1414, 1415, 1418, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1437, 1438, 1440, 1443, 1448, 1452, 1456, 1458, 1465, 1466, 1468, 1469, 1470, 1475], "parti": [1312, 1414], "partial": [7, 66, 67, 69, 77, 114, 260, 270, 271, 296, 305, 306, 311, 315, 316, 337, 401, 493, 539, 578, 874, 987, 998, 1005, 1012, 1258, 1259, 1279, 1313, 1318, 1326, 1328, 1342, 1348, 1349, 1350, 1353, 1354, 1360, 1367, 1374, 1385, 1411, 1412, 1413, 1415, 1418, 1419, 1422, 1423, 1426, 1427, 1429, 1433, 1436, 1437, 1438, 1440, 1443, 1448, 1449, 1453, 1456, 1457, 1458, 1460, 1461, 1462, 1468, 1470, 1474], "partial_0": [1313, 1433, 1437], "partial_1": [1313, 1433, 1437], "partial_ev": [1318, 1326, 1349, 1360, 1416, 1424, 1449], "partial_eval_flat": 1318, "partial_eval_jaxpr": 1318, "partial_eval_jaxpr_rul": 1318, "partial_eval_rul": 1318, "partial_i": [1313, 1320, 1437], "partial_j": 1313, "partial_prod": 311, "partialevaltrac": 1318, "partialv": 1318, "particip": [998, 1312, 1431], "particular": [9, 10, 61, 290, 304, 380, 381, 422, 499, 591, 701, 860, 965, 1106, 1279, 1313, 1315, 1318, 1320, 1325, 1326, 1329, 1339, 1343, 1348, 1350, 1354, 1360, 1368, 1385, 1402, 1409, 1414, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1429, 1430, 1433, 1434, 1437, 1438, 1440, 1443, 1444, 1448, 1457, 1460, 1464, 1465, 1466, 1468, 1474], "particularli": [99, 920, 998, 1012, 1122, 1316, 1321, 1326, 1350, 1354, 1414, 1418, 1426, 1438, 1440, 1441], "partit": [83, 85, 137, 172, 491, 578, 1326, 1373, 1382, 1402, 1404, 1410, 1415, 1431, 1434, 1440, 1441, 1443, 1452, 1457, 1458, 1462, 1468, 1475], "partition": [487, 491, 1326, 1373, 1382, 1415, 1434, 1449], "partition_list": 1318, "partition_spec": [84, 1410], "partitioned_axi": 172, "partitioned_rms_norm": 1350, "partitionspec": [44, 84, 136, 137, 194, 316, 498, 499, 500, 1256, 1326, 1334, 1341, 1343, 1350, 1353, 1373, 1382, 1386, 1404, 1410, 1415, 1431, 1434, 1440, 1441, 1443, 1458, 1463, 1468], "partli": [1414, 1418], "pass": [10, 57, 67, 69, 74, 76, 78, 81, 82, 83, 85, 95, 98, 99, 114, 121, 131, 137, 190, 232, 233, 237, 239, 248, 249, 262, 263, 265, 267, 283, 284, 286, 292, 296, 335, 337, 363, 366, 424, 491, 492, 506, 517, 539, 566, 568, 595, 596, 597, 600, 610, 650, 657, 667, 675, 716, 719, 828, 837, 860, 864, 868, 873, 877, 898, 906, 919, 920, 923, 946, 971, 972, 987, 998, 1003, 1005, 1010, 1012, 1013, 1040, 1093, 1104, 1105, 1106, 1267, 1275, 1279, 1280, 1282, 1284, 1304, 1313, 1315, 1317, 1318, 1320, 1326, 1327, 1329, 1331, 1332, 1333, 1334, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1350, 1351, 1352, 1353, 1354, 1356, 1360, 1367, 1373, 1375, 1382, 1385, 1386, 1395, 1402, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1421, 1422, 1423, 1429, 1430, 1432, 1433, 1438, 1440, 1441, 1443, 1444, 1447, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1474, 1475], "past": [1349, 1420], "patch": [345, 1326, 1339, 1426, 1427], "patchwork": 1414, "path": [397, 666, 667, 800, 816, 918, 919, 1264, 1266, 1268, 1278, 1282, 1316, 1317, 1326, 1328, 1331, 1339, 1349, 1350, 1353, 1356, 1371, 1392, 1405, 1410, 1415, 1418, 1426, 1427, 1449, 1452, 1458, 1464, 1473], "path_info": 667, "path_val": 1264, "pathlib": [918, 919, 1350], "pathlik": [816, 1009, 1011], "pattern": [206, 234, 240, 296, 337, 499, 1318, 1324, 1325, 1326, 1342, 1348, 1349, 1350, 1353, 1354, 1373, 1409, 1414, 1415, 1425, 1426, 1429, 1430, 1438, 1440, 1441, 1448, 1452, 1455, 1456, 1457, 1459, 1466, 1469], "paus": [1333, 1336], "pave": 1415, "pax": [1353, 1413], "payload": 115, "pb": 1353, "pbroadcast": [1415, 1417], "pci": 1431, "pd": 1426, "pdb": [1313, 1335, 1336, 1415, 1419, 1433], "pdf": [235, 1143, 1157, 1158, 1159, 1160, 1162, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1203, 1204, 1205, 1209, 1210, 1212, 1213, 1214, 1216, 1217, 1221, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1240, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1251, 1252, 1254, 1326, 1367, 1415, 1439], "peak": [41, 894, 1052, 1462], "pearson": 636, "peculiar": 1402, "ped": [1350, 1415, 1443], "pedagog": [1319, 1458], "peel": 1318, "peer": [1326, 1431], "penalti": [1346, 1426, 1435, 1442, 1473], "pendulum": 1419, "penros": 803, "peopl": [1414, 1432, 1440], "pep": [1273, 1326, 1356, 1414, 1427], "pepper": 1414, "per": [99, 205, 363, 366, 499, 500, 735, 736, 738, 1003, 1101, 1318, 1323, 1326, 1328, 1339, 1349, 1353, 1367, 1373, 1412, 1428, 1429, 1431, 1434, 1435, 1437, 1440, 1442, 1443, 1444, 1455, 1458, 1460, 1463, 1464, 1468], "per_device_batch_s": 1431, "per_device_shap": 499, "per_host_data": 499, "per_host_gener": 499, "per_host_shap": 499, "per_platform": 424, "per_process_batch": 1341, "per_process_batch_s": 1431, "percent": [1156, 1173, 1188, 1216, 1231, 1251], "percentag": [1460, 1462], "percentil": [853, 855, 897, 1326], "perceptron": 1474, "perex_grad": 1313, "perfect": 636, "perfectli": [636, 641, 1415], "perfetto": [1009, 1011, 1326], "perfetto_trac": [1009, 1011], "perform": [10, 47, 65, 66, 67, 76, 77, 80, 92, 99, 101, 113, 114, 127, 132, 146, 160, 172, 173, 178, 211, 235, 296, 306, 311, 348, 356, 362, 381, 387, 397, 401, 402, 415, 425, 426, 427, 431, 433, 434, 453, 456, 457, 458, 459, 460, 461, 462, 497, 506, 539, 540, 650, 673, 716, 749, 793, 795, 829, 830, 834, 842, 860, 887, 901, 907, 913, 920, 940, 941, 945, 953, 965, 984, 985, 994, 995, 996, 997, 998, 1003, 1019, 1022, 1059, 1061, 1077, 1093, 1101, 1106, 1308, 1313, 1318, 1319, 1323, 1326, 1328, 1339, 1341, 1342, 1346, 1348, 1349, 1350, 1351, 1354, 1356, 1357, 1358, 1360, 1367, 1382, 1385, 1386, 1395, 1412, 1413, 1415, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1435, 1438, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1452, 1454, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1468, 1469, 1473, 1475], "perhap": [378, 381, 666, 1313, 1318, 1343, 1349, 1354, 1414, 1418, 1424, 1426, 1433, 1437, 1438, 1449, 1455, 1470], "period": [99, 757, 981, 1316, 1326, 1356, 1452, 1466], "periodogram": [1098, 1103], "perk": 1350, "perm": [431, 432, 1318, 1443, 1458], "permalink": 1464, "permiss": [1313, 1327, 1329, 1431, 1432, 1433, 1435, 1442, 1463], "permissive_sum": 1432, "permit": [363, 366, 1326, 1327, 1395], "permut": [167, 212, 218, 401, 402, 431, 432, 450, 473, 474, 485, 842, 876, 913, 945, 953, 1078, 1318, 1326, 1341, 1353, 1434, 1439, 1443, 1448, 1452, 1457, 1475], "permutation_s": 402, "permute_l": 1078, "permuted_devic": 1434, "persist": [68, 244, 1314, 1318, 1326, 1350, 1353, 1371, 1386, 1461], "perspect": [1343, 1348, 1414, 1425, 1440, 1461], "perturb": [81, 1313, 1319, 1349, 1360, 1437, 1449], "pervas": 1326, "pgle_profil": 1360, "pgle_profiling_run": 1353, "ph": 1043, "phase": [468, 926, 981, 1316, 1339, 1455, 1457, 1458], "phi": [1140, 1149], "philosophi": [1415, 1421], "philox": 1395, "phrase": 1420, "physic": [132, 133, 491, 502, 1326, 1343, 1355, 1410, 1415, 1417, 1418, 1431, 1434, 1443, 1449, 1452, 1455, 1460, 1468], "pi": [337, 508, 569, 571, 573, 574, 638, 648, 757, 899, 929, 930, 948, 954, 981, 1038, 1041, 1042, 1055, 1063, 1115, 1116, 1123, 1135, 1141, 1142, 1149, 1170, 1172, 1221, 1222, 1228, 1230, 1240, 1241, 1244, 1246, 1252, 1253, 1254, 1255, 1313, 1349, 1437, 1439, 1445], "pic": 1435, "pick": [82, 1323, 1328, 1339, 1341, 1437, 1452, 1455, 1456, 1458, 1460], "pickl": [918, 1273, 1326, 1383, 1399], "pictur": 1452, "pid": 1435, "piec": [1143, 1318, 1319, 1341, 1360, 1415, 1427, 1434, 1443, 1455], "piecewis": [1099, 1331], "piecewise_const": 1367, "pil": 1435, "pillow": [1339, 1435], "pin": [1326, 1339, 1342, 1416, 1427, 1431, 1441], "ping": [1350, 1415, 1452], "pink": 1341, "pinned_host": [1354, 1441], "pinpoint": [1336, 1358], "pinv": 1326, "pip": [1326, 1329, 1349, 1358, 1427, 1431, 1435, 1444, 1463, 1464], "pipe": 1469, "pipelin": [174, 187, 305, 306, 499, 1328, 1442, 1449, 1452, 1454, 1459, 1462, 1475], "pipeline_mod": [140, 159], "pipeline_parallelism_opt_level_en": 1353, "pipelinl": 1475, "pitfal": 1353, "piv": [1079, 1080], "pivot": [401, 402, 404, 578, 874, 1079, 1080, 1083, 1326, 1475], "pivot_valu": [578, 874], "pix": [1394, 1418], "pixel": [292, 1415], "pjit": [84, 136, 137, 296, 487, 1324, 1326, 1328, 1333, 1335, 1336, 1360, 1369, 1373, 1402, 1411, 1417, 1430, 1449], "pjit_fft": 1373, "pjit_my_fft": 1373, "pjit_p": 1326, "pjit_transformer_lay": 1415, "pjitted_f": 1410, "pjitted_fun": [136, 137], "pjrt": [1312, 1326, 1339, 1356], "pkg": 1356, "pl": [140, 182, 1328, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1461, 1462], "place": [10, 13, 57, 81, 101, 102, 311, 348, 435, 479, 499, 651, 654, 696, 716, 860, 873, 895, 896, 1012, 1065, 1272, 1312, 1313, 1315, 1322, 1326, 1333, 1339, 1342, 1343, 1346, 1349, 1354, 1357, 1382, 1399, 1404, 1409, 1414, 1415, 1419, 1424, 1426, 1433, 1434, 1438, 1441, 1443, 1444, 1448, 1449, 1452, 1456, 1458, 1461, 1462, 1463, 1464, 1469, 1475], "placehold": [153, 250, 251, 1104, 1105, 1106, 1306, 1307, 1309, 1310, 1311, 1318, 1346, 1411, 1431, 1434, 1462], "placement": [13, 91, 96, 1323, 1328, 1357, 1404, 1415, 1434, 1443, 1468], "plai": [1354, 1432, 1435, 1438, 1442, 1475], "plain": [919, 1273, 1317, 1452], "plan": [1093, 1326, 1329, 1343, 1415, 1422, 1425], "plane": [915, 1313, 1437], "platform": [10, 61, 90, 92, 94, 102, 133, 182, 242, 244, 264, 265, 285, 286, 287, 407, 424, 452, 490, 494, 860, 998, 1001, 1305, 1312, 1315, 1316, 1326, 1339, 1344, 1346, 1352, 1357, 1360, 1382, 1386, 1395, 1427, 1431, 1434, 1441, 1444, 1449, 1453, 1455, 1461, 1464, 1475], "platform_depend": 1350, "platform_index": [1343, 1350], "platformstream": 1350, "pleas": [99, 105, 137, 919, 1022, 1089, 1308, 1316, 1326, 1328, 1329, 1339, 1346, 1348, 1349, 1350, 1356, 1358, 1366, 1382, 1400, 1410, 1413, 1419, 1425, 1432, 1440, 1455, 1457, 1458, 1462, 1475], "plenti": 1440, "plgpu": 1452, "plot": [1313, 1336, 1433, 1439, 1444, 1445, 1469], "plot_scal": 1445, "plt": [1313, 1426, 1433, 1439, 1444, 1445, 1469], "pltpu": [1447, 1448, 1456, 1457, 1458, 1460, 1461, 1462], "plu": [547, 674, 746, 817, 819, 917, 1315, 1416, 1439, 1460, 1464], "plug": [1312, 1339, 1435, 1442], "pluggabl": [1428, 1466], "plugin": [1326, 1339, 1353, 1356, 1427, 1464], "plumb": [1318, 1326, 1334, 1448, 1449], "pm": [391, 1124, 1128], "pmap": [67, 91, 120, 303, 304, 315, 425, 426, 427, 431, 432, 433, 434, 435, 497, 501, 1012, 1284, 1304, 1324, 1325, 1326, 1333, 1335, 1342, 1351, 1404, 1405, 1409, 1410, 1412, 1417, 1424, 1432, 1436, 1443, 1449, 1470], "pmapshard": [1404, 1410], "pmean": [1417, 1443], "pmf": [1153, 1154, 1156, 1163, 1165, 1207, 1219, 1223, 1235, 1236, 1326], "pmlr": 1019, "po": [1086, 1326, 1426], "poch": 1129, "pochamm": [1129, 1144], "pocketfft": 1326, "pod": [998, 1326, 1382, 1431, 1458], "point": [67, 82, 103, 111, 112, 121, 188, 235, 246, 247, 289, 299, 300, 309, 310, 312, 313, 314, 332, 336, 349, 350, 372, 373, 375, 377, 391, 399, 409, 411, 412, 413, 421, 454, 468, 469, 470, 473, 482, 483, 493, 533, 545, 568, 574, 585, 587, 627, 636, 641, 676, 680, 694, 697, 709, 711, 714, 715, 719, 727, 735, 736, 738, 743, 748, 757, 773, 794, 798, 800, 803, 815, 827, 834, 853, 855, 863, 875, 882, 883, 885, 897, 904, 905, 916, 927, 954, 963, 981, 1063, 1064, 1091, 1092, 1098, 1101, 1102, 1103, 1136, 1139, 1140, 1147, 1150, 1151, 1156, 1173, 1188, 1197, 1216, 1231, 1251, 1313, 1315, 1318, 1319, 1326, 1328, 1333, 1337, 1339, 1340, 1342, 1349, 1350, 1356, 1360, 1374, 1395, 1412, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1435, 1437, 1442, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1460, 1462, 1464, 1465, 1466, 1473, 1474], "pointer": [236, 264, 265, 285, 286, 287, 1305, 1319, 1328, 1350, 1449, 1463], "pointless": 346, "pointwis": 1360, "poison": 1337, "poke": [1333, 1419], "polar": [403, 1149, 1326], "polar_unitari": 1326, "pole": [1124, 1128], "poli": [883, 887, 914, 1326], "polici": [67, 84, 111, 112, 1315, 1316, 1326, 1328, 1434, 1443, 1446, 1463], "policy_1": 1354, "policy_2": 1354, "polyadd": [882, 885, 886, 1418], "polyd": 884, "polydiv": [880, 885, 886, 1418], "polyfit": [879, 887, 914], "polygamma": 1113, "polyint": 881, "polymoni": 1319, "polymorph": [250, 1326, 1344, 1447], "polymul": [880, 882, 886], "polynomi": [879, 880, 881, 882, 883, 884, 885, 886, 887, 914, 1319, 1374], "polynomial_decai": 1367, "polyshap": 1326, "polysub": [880, 882, 885], "polyv": [879, 881, 883, 884, 914], "pong": 1452, "pool": [1352, 1368], "poor": [67, 793, 1077, 1123, 1352, 1444], "poorli": [1418, 1444], "pop": [1318, 1448], "popcnt": 429, "popcount": 429, "popul": [18, 137, 1326, 1414, 1431, 1463], "popular": [1436, 1449, 1452, 1462], "population_count": 334, "port": [99, 1008, 1323, 1464], "portabl": [918, 1343, 1405, 1449], "portion": [633, 637, 697, 1070, 1094, 1095, 1096, 1097, 1100, 1325, 1339, 1350, 1415, 1426, 1456, 1464], "posdef": 1082, "pose": [1414, 1469], "posinf": 844, "posit": [10, 65, 66, 79, 83, 85, 114, 119, 120, 138, 182, 183, 184, 194, 202, 206, 233, 262, 283, 289, 290, 293, 295, 296, 297, 303, 304, 305, 306, 332, 337, 343, 344, 357, 377, 381, 395, 434, 435, 454, 456, 492, 493, 501, 529, 566, 568, 615, 641, 651, 654, 655, 673, 676, 697, 764, 766, 767, 768, 769, 784, 788, 810, 812, 842, 844, 860, 862, 877, 881, 898, 912, 913, 919, 926, 946, 952, 953, 977, 981, 987, 998, 1041, 1050, 1066, 1067, 1068, 1075, 1082, 1086, 1101, 1105, 1124, 1125, 1126, 1129, 1135, 1148, 1256, 1267, 1268, 1302, 1303, 1304, 1313, 1318, 1320, 1324, 1326, 1328, 1331, 1334, 1335, 1342, 1346, 1349, 1360, 1367, 1368, 1373, 1374, 1382, 1386, 1405, 1414, 1418, 1419, 1432, 1433, 1437, 1443, 1448, 1449, 1466, 1470], "position": 1326, "positive_valu": 1342, "possibl": [83, 84, 96, 98, 101, 102, 113, 422, 454, 463, 487, 499, 616, 650, 673, 696, 716, 830, 842, 878, 895, 896, 901, 907, 913, 919, 940, 945, 953, 998, 1013, 1032, 1275, 1313, 1316, 1318, 1326, 1329, 1339, 1341, 1342, 1343, 1346, 1349, 1350, 1352, 1353, 1354, 1356, 1373, 1394, 1395, 1399, 1410, 1414, 1415, 1417, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1437, 1438, 1443, 1444, 1447, 1448, 1455, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1470], "possibli": [311, 362, 364, 1315, 1343, 1346, 1350, 1405, 1425, 1443], "post": [1353, 1420, 1432, 1452], "post_norm_batch": 1415, "post_norm_emb": 1415, "post_process_cal": 1326, "posterior": [1325, 1445], "postmortem": 1335, "potenti": [67, 83, 337, 363, 499, 635, 718, 720, 748, 845, 1316, 1318, 1328, 1332, 1336, 1339, 1352, 1412, 1413, 1414, 1415, 1417, 1418, 1424, 1426, 1432, 1443, 1449, 1455, 1457, 1458, 1467, 1473], "pow": [331, 389, 455, 476, 890, 1326, 1457], "power": [10, 290, 331, 389, 430, 455, 476, 666, 697, 797, 860, 889, 938, 939, 982, 1098, 1103, 1268, 1282, 1313, 1346, 1348, 1367, 1411, 1414, 1419, 1430, 1436, 1437, 1441, 1444, 1448, 1453, 1455, 1458, 1466], "powershel": 1339, "pp": [697, 1318, 1326, 1336, 1360], "pp_": 1326, "pp_eqn": 1318, "pp_jaxpr": 1318, "pp_param": 1318, "pp_rule": 1318, "pp_valu": 1360, "ppermut": [432, 1415, 1448], "ppermute_add_one_kernel": 1448, "ppermute_and_add_on": 1448, "ppermute_don": 1448, "ppermute_done_kernel": 1448, "ppermute_done_st": 1448, "ppermute_kernel": 1448, "ppermute_ref": 1443, "ppermute_start": 1448, "ppermute_start_kernel": 1448, "ppermute_start_st": 1448, "ppf": [1153, 1154, 1155, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1183, 1184, 1185, 1186, 1187, 1189, 1212, 1213, 1214, 1215, 1217, 1225, 1226, 1227, 1228, 1229, 1230, 1232, 1248, 1249, 1250], "ppmerut": 1415, "pprint": 1318, "pprint_cond": 1318, "pprint_xla_cal": 1318, "pprof": [1006, 1340], "pr": [1329, 1339, 1343, 1357, 1358, 1366, 1414, 1419, 1423, 1427], "practic": [10, 673, 830, 842, 860, 901, 907, 913, 940, 945, 953, 1316, 1325, 1339, 1341, 1350, 1395, 1412, 1414, 1415, 1419, 1420, 1421, 1422, 1424, 1427, 1429, 1430, 1431, 1434, 1441, 1443, 1444, 1448, 1449, 1452, 1458, 1460, 1462], "practition": 1337, "pre": [666, 965, 1313, 1329, 1331, 1339, 1346, 1349, 1352, 1353, 1356, 1360, 1382, 1424, 1429, 1437, 1455, 1475], "prealloc": [1326, 1352], "prebuilt": [1325, 1339, 1427], "preced": [246, 247, 1328, 1360, 1414, 1419, 1422, 1431, 1443], "precis": [23, 69, 78, 79, 81, 88, 89, 92, 154, 203, 219, 220, 291, 292, 317, 337, 341, 343, 344, 345, 346, 347, 360, 361, 539, 540, 563, 568, 569, 570, 571, 572, 573, 574, 575, 585, 587, 599, 609, 617, 619, 633, 636, 637, 638, 639, 641, 660, 665, 666, 671, 674, 678, 679, 681, 683, 684, 685, 686, 689, 690, 691, 692, 693, 695, 697, 698, 710, 727, 729, 732, 733, 741, 749, 776, 789, 790, 791, 793, 794, 795, 797, 798, 800, 803, 809, 812, 813, 818, 827, 829, 834, 856, 858, 883, 909, 929, 930, 932, 938, 942, 948, 949, 950, 964, 983, 984, 985, 1036, 1059, 1060, 1061, 1062, 1075, 1077, 1078, 1081, 1082, 1084, 1088, 1094, 1095, 1096, 1097, 1099, 1100, 1104, 1105, 1123, 1129, 1135, 1239, 1313, 1318, 1323, 1326, 1335, 1343, 1346, 1349, 1354, 1395, 1413, 1414, 1415, 1418, 1430, 1436, 1437, 1443, 1447, 1449, 1453, 1460, 1468, 1470, 1473], "precisionlik": [23, 317, 341, 343, 344, 346, 347, 360, 361, 633, 637, 795, 800, 809, 813, 1094, 1095, 1096, 1097, 1395], "preclud": [80, 1415, 1419], "precompil": [1326, 1328, 1383], "precondit": [235, 1104, 1105, 1106], "precondition": [1104, 1105, 1106], "pred": [119, 339, 463, 464, 1318, 1320, 1331, 1411, 1424, 1435, 1437, 1442, 1469], "pred_dim": 1318, "pred_trac": 1318, "pred_tracer_": 1318, "pred_typ": 1318, "pred_unk": 1318, "predefin": [700, 746, 917], "predic": [119, 120, 173, 339, 463, 481, 1318, 1326, 1331, 1411], "predict": [1313, 1320, 1354, 1413, 1415, 1417, 1426, 1434, 1437, 1438, 1443, 1448, 1466, 1469], "predict_dict": [1313, 1437], "predict_fsdp": 1443, "predict_fsdp_tp": 1443, "predict_pp": 1443, "predict_tp": 1443, "predicted_class": [1435, 1442], "prefer": [197, 199, 381, 450, 457, 458, 459, 460, 461, 462, 913, 1066, 1079, 1318, 1319, 1322, 1326, 1328, 1337, 1339, 1342, 1349, 1356, 1395, 1421, 1425, 1427, 1428, 1452, 1457, 1473, 1474], "preferenti": 1328, "preferred_element_typ": [23, 203, 220, 341, 343, 345, 346, 347, 360, 361, 539, 540, 633, 637, 660, 666, 749, 795, 809, 813, 829, 950, 984, 985, 1354, 1395, 1436, 1457, 1460, 1462, 1470], "prefetch": [1442, 1454, 1457, 1459], "prefetch_arg": 1462, "prefetch_i": 1462, "prefetch_j": 1462, "prefetch_map": 1462, "prefetch_mask": 1462, "prefetch_ref": 1462, "prefetchscalargridspec": [1457, 1458, 1460, 1462], "prefix": [96, 194, 250, 296, 311, 503, 504, 1024, 1040, 1041, 1203, 1256, 1262, 1267, 1268, 1304, 1316, 1326, 1339, 1346, 1382, 1457, 1465, 1474], "prefix_tre": [1262, 1286], "preinstal": [1339, 1356], "preliminari": [1326, 1416], "prepar": [99, 1326, 1329, 1343, 1386, 1458, 1463], "prepend": [596, 597, 656, 665], "preprocess": 1462, "prerequisit": 1339, "prescript": 1366, "presenc": [83, 765, 1326, 1336, 1337, 1343, 1386, 1412, 1448], "present": [67, 182, 248, 249, 789, 791, 977, 1006, 1083, 1313, 1318, 1319, 1326, 1328, 1336, 1339, 1343, 1350, 1356, 1357, 1373, 1386, 1414, 1422, 1429, 1432, 1433, 1434, 1447], "preserv": [321, 337, 387, 434, 450, 503, 504, 616, 640, 856, 858, 894, 942, 983, 1326, 1328, 1336, 1339, 1348, 1385, 1408, 1410, 1412, 1419, 1422, 1432], "preset": 1395, "press": [1019, 1464], "pressur": [1441, 1475], "pretend": [1313, 1360, 1412, 1463], "pretransform": 1326, "pretti": [1278, 1313, 1318, 1320, 1326, 1328, 1336, 1339, 1416, 1419, 1420, 1433, 1434, 1435, 1436, 1437, 1442, 1460], "prev": 1430, "prev_dynamic_trac": 1318, "prev_i": 1429, "prev_interpret": 1319, "prev_trac": 1430, "prevent": [67, 235, 422, 479, 882, 885, 1326, 1328, 1337, 1352, 1358, 1419, 1425, 1432, 1448, 1458, 1463, 1473], "prevent_cs": [67, 1354, 1438, 1441], "previou": [174, 1313, 1319, 1320, 1321, 1326, 1339, 1341, 1343, 1353, 1410, 1411, 1412, 1414, 1421, 1426, 1429, 1437, 1440, 1443, 1444, 1448, 1452, 1455, 1458, 1460, 1462, 1464, 1474], "previous": [173, 1326, 1328, 1342, 1348, 1350, 1360, 1375, 1410, 1414, 1416, 1418, 1422, 1424, 1425, 1426, 1447, 1452, 1458], "prim": [1318, 1430], "prim_requires_devices_during_low": 1326, "primaci": 1426, "primal": [67, 76, 77, 78, 79, 81, 297, 492, 493, 1303, 1313, 1318, 1319, 1326, 1334, 1343, 1348, 1350, 1354, 1374, 1386, 1419, 1433, 1437, 1438, 1440], "primal_env": 1318, "primal_out": [77, 78, 79, 1313, 1318, 1360, 1433], "primal_pv": 1318, "primal_pvals_in": 1318, "primals_and_tang": 1318, "primals_flat": 1318, "primals_in": 1318, "primals_in_flat": 1318, "primals_out": [297, 493, 1303, 1318, 1374], "primals_out_flat": 1318, "primals_tangents_in": 1318, "primari": [264, 285, 473, 783, 1315, 1326, 1351, 1385, 1408, 1417, 1418, 1419, 1449], "primarili": [1273, 1326, 1418, 1427, 1452, 1465], "primer": 1348, "primit": [67, 83, 98, 121, 182, 244, 254, 413, 415, 452, 456, 486, 998, 1312, 1313, 1314, 1319, 1322, 1326, 1328, 1333, 1334, 1335, 1343, 1346, 1348, 1349, 1351, 1354, 1357, 1374, 1385, 1395, 1399, 1412, 1415, 1416, 1418, 1419, 1421, 1422, 1424, 1429, 1430, 1432, 1433, 1436, 1437, 1438, 1443, 1447, 1451, 1457, 1458, 1460, 1463, 1465, 1470], "primitive_batch": 1360, "primitive_jvp": 1360, "primitive_transpos": 1360, "primitives_with_limited_support": 1326, "primitivetyp": 1326, "principl": [1106, 1313, 1319, 1357, 1415, 1419, 1425, 1431, 1433, 1434, 1449, 1458], "print": [73, 75, 76, 78, 79, 81, 82, 83, 84, 98, 114, 129, 130, 131, 153, 182, 289, 290, 293, 295, 296, 297, 303, 315, 337, 415, 426, 433, 434, 493, 501, 563, 574, 578, 586, 597, 599, 609, 619, 634, 636, 638, 641, 662, 667, 671, 674, 678, 681, 683, 684, 686, 698, 710, 716, 719, 728, 729, 732, 733, 735, 739, 759, 776, 783, 794, 800, 818, 821, 836, 856, 858, 874, 883, 891, 896, 918, 922, 929, 930, 937, 942, 948, 964, 972, 978, 980, 983, 988, 998, 999, 1009, 1011, 1012, 1058, 1059, 1060, 1061, 1062, 1075, 1078, 1081, 1082, 1084, 1088, 1090, 1099, 1100, 1101, 1275, 1278, 1303, 1304, 1313, 1315, 1317, 1318, 1319, 1320, 1326, 1328, 1331, 1334, 1335, 1337, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1357, 1360, 1362, 1373, 1374, 1382, 1385, 1405, 1411, 1412, 1415, 1416, 1422, 1424, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1449, 1453, 1455, 1458, 1460, 1462, 1465, 1466, 1468, 1469, 1470, 1471, 1473, 1474], "print_binari": [780, 910], "print_exc": 1360, "print_except": 1434, "print_fwd_bwd": [1354, 1438], "print_grad": 1336, "print_grad_bwd": 1336, "print_grad_fwd": 1336, "print_large_const": 1326, "print_saved_residu": [1354, 1438], "print_someth": 1348, "print_truncated_random_st": 1466, "print_zero": 1275, "printabl": 667, "printer": [1318, 1328], "printopt": [78, 79, 81, 337, 563, 569, 570, 571, 572, 573, 574, 575, 599, 609, 617, 619, 636, 638, 639, 641, 671, 674, 678, 679, 681, 683, 684, 685, 686, 689, 690, 691, 692, 693, 695, 698, 710, 727, 728, 729, 732, 733, 741, 759, 776, 789, 790, 791, 794, 797, 818, 827, 856, 858, 883, 922, 929, 930, 932, 938, 942, 948, 949, 964, 983, 1059, 1060, 1061, 1062, 1075, 1078, 1081, 1082, 1084, 1088, 1099, 1100, 1239, 1349], "prior": [99, 144, 145, 146, 147, 148, 149, 150, 151, 186, 424, 1315, 1326, 1329, 1338, 1339, 1343, 1354, 1371, 1399, 1405, 1416, 1420, 1463], "priorit": [1313, 1353, 1419, 1422], "prioriti": [82, 1349, 1357, 1421], "pristin": 1371, "privat": [1326, 1343, 1414, 1425, 1431, 1447], "prng": [93, 107, 237, 277, 281, 282, 452, 453, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1203, 1316, 1326, 1342, 1395, 1398, 1416, 1418, 1424, 1428, 1434, 1447, 1466, 1469], "prng_kei": [106, 1057, 1326, 1425], "prngimpl": [278, 1425], "prngkei": [539, 540, 1326, 1402, 1410, 1424, 1425, 1466], "prngkeyarrai": [277, 278, 281, 282, 1326, 1425], "prngspecdesc": [1013, 1033, 1057], "pro": 1420, "prob": 506, "probabilist": 1355, "probabl": [641, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1055, 1056, 1142, 1153, 1154, 1155, 1157, 1158, 1159, 1161, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1172, 1175, 1176, 1177, 1179, 1181, 1182, 1183, 1184, 1185, 1187, 1190, 1191, 1192, 1194, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1230, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1246, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1313, 1320, 1328, 1329, 1342, 1355, 1417, 1418, 1427, 1431, 1437, 1440, 1443, 1456, 1462], "problem": [127, 235, 574, 697, 793, 800, 1070, 1071, 1077, 1087, 1106, 1326, 1331, 1334, 1340, 1342, 1349, 1350, 1356, 1385, 1410, 1413, 1414, 1415, 1421, 1424, 1426, 1429, 1432, 1448, 1449, 1452, 1455, 1458, 1460, 1466, 1469, 1474], "problemat": [1316, 1326, 1342, 1349, 1426, 1429, 1448, 1466, 1473, 1474], "proc_id": 1431, "proce": [1360, 1411, 1458, 1463], "procedur": [1313, 1316, 1433, 1440, 1457], "proceed": 1019, "process": [29, 94, 99, 101, 102, 132, 133, 138, 182, 244, 287, 415, 495, 496, 499, 500, 716, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1009, 1011, 1106, 1309, 1314, 1315, 1326, 1336, 1339, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1357, 1360, 1371, 1382, 1404, 1405, 1410, 1411, 1414, 1416, 1417, 1419, 1420, 1425, 1426, 1428, 1432, 1440, 1443, 1444, 1455, 1456, 1457, 1458, 1463, 1464, 1466, 1469, 1470], "process_allgath": 1431, "process_batch": 1431, "process_count": [137, 496, 1326, 1341, 1431], "process_id": [99, 1431], "process_idx": 1341, "process_index": [97, 137, 496, 998, 1326, 1341, 1431], "process_indic": 1326, "process_is_granul": 133, "process_primit": [1318, 1430], "processed_eqn": 1318, "processor": [1326, 1455, 1456], "prod": [182, 345, 445, 498, 499, 500, 567, 644, 810, 832, 838, 847, 944, 1315, 1326, 1346, 1354, 1424, 1430, 1453, 1455, 1456, 1462], "prod_": [1024, 1122, 1141, 1181, 1182, 1219, 1220], "produc": [67, 78, 81, 88, 89, 102, 120, 132, 133, 190, 194, 290, 306, 343, 359, 378, 449, 456, 493, 666, 683, 708, 777, 800, 862, 938, 987, 1013, 1015, 1016, 1017, 1019, 1021, 1024, 1027, 1028, 1029, 1031, 1036, 1038, 1040, 1041, 1044, 1046, 1049, 1050, 1051, 1052, 1053, 1055, 1256, 1267, 1268, 1313, 1315, 1317, 1318, 1319, 1321, 1326, 1328, 1333, 1334, 1335, 1337, 1341, 1343, 1346, 1349, 1350, 1352, 1354, 1360, 1373, 1411, 1417, 1419, 1421, 1423, 1424, 1425, 1426, 1429, 1432, 1433, 1434, 1436, 1438, 1440, 1443, 1444, 1449, 1452, 1455, 1456, 1457, 1458, 1462, 1463, 1464, 1465, 1466, 1470, 1474], "product": [19, 23, 40, 92, 132, 133, 225, 226, 229, 230, 290, 297, 305, 311, 354, 360, 361, 400, 407, 418, 445, 493, 506, 539, 642, 644, 646, 660, 666, 749, 777, 786, 795, 800, 802, 807, 809, 810, 813, 829, 831, 832, 838, 847, 849, 850, 852, 854, 857, 871, 880, 882, 885, 886, 892, 944, 950, 965, 984, 985, 986, 996, 998, 1089, 1104, 1105, 1106, 1200, 1303, 1304, 1319, 1325, 1326, 1328, 1351, 1360, 1385, 1395, 1411, 1432, 1433, 1440, 1444, 1449, 1457, 1468], "prof": 1340, "profil": [160, 491, 503, 504, 1308, 1316, 1326, 1336, 1359, 1360, 1412, 1415, 1441, 1443, 1458, 1460], "profile_dir": [160, 1353], "profile_spac": 160, "profileopt": [1009, 1011, 1464], "profiler_opt": [1009, 1011, 1464], "profilerserv": 1008, "program": [82, 83, 91, 99, 120, 127, 183, 184, 194, 501, 503, 504, 998, 1009, 1011, 1012, 1308, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1322, 1326, 1328, 1333, 1336, 1337, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1355, 1360, 1375, 1382, 1385, 1386, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1424, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1440, 1442, 1443, 1444, 1448, 1449, 1452, 1453, 1454, 1455, 1457, 1458, 1461, 1462, 1469, 1472, 1475], "program_id": [1452, 1453, 1455, 1456, 1458, 1460, 1462], "program_ids_kernel": 1453, "programm": [1315, 1415, 1421, 1440, 1444, 1446, 1461, 1469], "programmat": 1419, "programmazion": 1432, "progress": [1308, 1318, 1326, 1409, 1416, 1419, 1437, 1440, 1448, 1452, 1457, 1458, 1470], "prohibit": [1257, 1258, 1259], "project": [1106, 1316, 1322, 1326, 1329, 1339, 1350, 1356, 1387, 1414, 1415, 1416, 1418, 1439, 1463], "projector": 1464, "prologu": [1320, 1437, 1448, 1455, 1458], "promis": [10, 194, 289, 290, 293, 295, 381, 457, 458, 459, 460, 461, 462, 492, 860, 1256, 1302, 1313, 1326, 1343, 1395, 1412, 1415, 1416, 1421, 1437, 1443, 1448], "promise_in_bound": [10, 381, 457, 458, 459, 460, 461, 462, 860, 1395], "promot": [108, 288, 360, 361, 378, 456, 486, 568, 569, 570, 571, 572, 573, 575, 623, 630, 635, 638, 639, 663, 671, 672, 674, 708, 734, 740, 741, 812, 817, 818, 819, 820, 841, 879, 882, 885, 890, 892, 893, 904, 909, 911, 929, 930, 932, 939, 941, 944, 948, 949, 989, 993, 1326, 1348, 1351, 1399, 1417, 1428, 1430, 1432, 1444, 1446], "promote_integ": [40, 54, 892, 944], "promote_typ": 1473, "prompt": [1333, 1336, 1464], "prone": [1321, 1352, 1425, 1426, 1444, 1448], "prop": [1313, 1433], "propag": [491, 847, 848, 990, 1218, 1238, 1239, 1313, 1319, 1328, 1338, 1350, 1374, 1382, 1433, 1434, 1440, 1452, 1468], "propagate_user_shard": 1373, "proper": [249, 1360, 1432, 1447], "properli": [193, 773, 1326, 1339, 1419, 1425, 1432, 1449, 1452, 1458, 1469], "properti": [1, 2, 10, 13, 21, 24, 25, 27, 28, 29, 30, 32, 33, 37, 38, 43, 48, 49, 50, 62, 237, 439, 458, 459, 460, 461, 462, 671, 672, 772, 799, 817, 830, 860, 861, 925, 933, 953, 973, 974, 975, 1072, 1086, 1087, 1106, 1313, 1315, 1318, 1326, 1328, 1349, 1357, 1360, 1395, 1400, 1402, 1404, 1405, 1419, 1421, 1425, 1432, 1437, 1453, 1456, 1459, 1460, 1466, 1474], "proport": 1455, "propos": [1312, 1329, 1330, 1409, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1446], "propto": [1016, 1020, 1021, 1024, 1025, 1027, 1029, 1030, 1039, 1049, 1051, 1053, 1056], "prospect": 1421, "protect": 1342, "proto": 1353, "protobuf": 1353, "protocol": [582, 588, 664, 716, 1006, 1326, 1405, 1414, 1428, 1458], "prototyp": [669, 1326, 1414, 1415], "prove": 1346, "proven": [1418, 1449], "provid": [10, 67, 77, 84, 93, 99, 127, 174, 262, 263, 283, 284, 296, 339, 356, 357, 360, 361, 378, 415, 452, 456, 498, 499, 500, 502, 506, 558, 601, 606, 608, 670, 759, 763, 779, 837, 843, 860, 865, 868, 872, 884, 919, 942, 943, 952, 954, 957, 961, 980, 983, 987, 990, 994, 995, 996, 997, 998, 1003, 1006, 1012, 1029, 1036, 1063, 1074, 1089, 1267, 1281, 1283, 1304, 1313, 1315, 1317, 1318, 1320, 1321, 1322, 1325, 1326, 1328, 1331, 1334, 1339, 1341, 1346, 1350, 1353, 1354, 1355, 1356, 1360, 1366, 1373, 1382, 1385, 1387, 1395, 1398, 1399, 1402, 1405, 1408, 1410, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1458, 1461, 1462, 1464, 1466, 1468, 1474, 1475], "proxi": [99, 1464], "prune": [82, 296, 1318, 1326, 1382], "pscatter": [1417, 1443], "psd": [1098, 1103], "pseudo": [111, 803, 1028, 1033, 1313, 1328, 1402, 1432, 1444, 1466, 1469], "pseudocod": [1448, 1455], "pseudorandom": [1308, 1316, 1322, 1342, 1402, 1425, 1432, 1469, 1472], "psi": [358, 428, 1113, 1145], "pspec": [136, 137, 1410, 1415, 1434, 1443], "pspect": 137, "psum": [304, 434, 435, 998, 1304, 1326, 1415, 1431, 1440, 1448, 1468], "psum2": 1417, "psum_idrev": [1415, 1417], "psum_invari": 1443, "psum_ref": 1443, "psum_scatt": [1415, 1417], "psum_scatter_ref": 1443, "pt": [1313, 1433], "pt_dot": [1313, 1433], "ptx": [1326, 1452], "ptx84": 1326, "ptxa": [1356, 1452], "pty": 1435, "pu": 1082, "public": [0, 1315, 1316, 1326, 1343, 1350, 1356, 1387, 1409, 1414, 1416, 1422, 1425, 1431], "publicli": [1326, 1329], "publish": [1326, 1356, 1427, 1457], "pull": [1312, 1313, 1326, 1339, 1366, 1414, 1425, 1428, 1431, 1432, 1437], "pullback": [1313, 1437], "punt": 1414, "pura": 1432, "pure": [10, 69, 83, 131, 296, 718, 720, 860, 998, 1012, 1313, 1318, 1319, 1326, 1331, 1334, 1336, 1341, 1342, 1348, 1349, 1350, 1351, 1356, 1382, 1399, 1412, 1414, 1418, 1425, 1427, 1429, 1434, 1437, 1443, 1458, 1460, 1469], "pure_callback": [83, 131, 262, 283, 1326, 1349, 1350], "pure_uses_internal_st": 1432, "purer": 1414, "puriti": [1334, 1348], "purpos": [67, 131, 453, 981, 998, 1012, 1313, 1315, 1316, 1318, 1333, 1341, 1342, 1348, 1349, 1350, 1351, 1356, 1360, 1366, 1405, 1408, 1417, 1419, 1426, 1427, 1429, 1430, 1435, 1437, 1442, 1452, 1455, 1458, 1461, 1462, 1465, 1469, 1470], "pursu": 1313, "purview": 1440, "push": [898, 998, 1019, 1022, 1313, 1318, 1329, 1339, 1432, 1437, 1455, 1458], "pushforward": [493, 1313, 1437], "pushfwd": [493, 1318], "put": [878, 896, 1313, 1318, 1319, 1323, 1339, 1349, 1382, 1386, 1412, 1414, 1415, 1422, 1426, 1437, 1440, 1452, 1460, 1464, 1470], "put_along_axi": 1326, "put_executable_and_tim": 1371, "pval": 1318, "pvals_in": 1318, "pvals_out": 1318, "pvari": 1443, "pwd": [1339, 1358], "pxla": [1326, 1410, 1416], "pxx": [1098, 1103], "pxy": 1098, "py": [923, 971, 1313, 1318, 1326, 1328, 1329, 1331, 1337, 1339, 1343, 1346, 1350, 1353, 1354, 1357, 1358, 1360, 1367, 1414, 1419, 1424, 1425, 1427, 1429, 1430, 1431, 1432, 1435, 1437, 1465, 1467, 1470, 1475], "py_val": 1432, "pybind11": [1350, 1414], "pybuff": [582, 588, 717], "pyc": 1432, "pycapsul": [102, 265, 286, 287, 1305, 1350], "pyfunc": 987, "pygment": 1339, "pyi": [1326, 1414, 1422], "pylanc": 1414, "pylint": 1360, "pymc": [1325, 1355], "pypi": [1326, 1339, 1356], "pyplot": [1313, 1426, 1433, 1439, 1444, 1445, 1469], "pyright": 1414, "pytensor": 1325, "pytest": [1329, 1343], "python": [31, 65, 66, 67, 69, 76, 78, 81, 83, 85, 95, 96, 113, 114, 120, 131, 268, 289, 290, 296, 297, 303, 304, 311, 315, 316, 339, 362, 364, 378, 415, 424, 425, 426, 427, 431, 432, 433, 434, 435, 456, 471, 481, 486, 492, 493, 501, 503, 504, 568, 582, 588, 616, 711, 717, 746, 867, 917, 918, 923, 971, 977, 987, 998, 1006, 1009, 1011, 1012, 1104, 1105, 1106, 1135, 1279, 1280, 1282, 1284, 1302, 1303, 1304, 1315, 1317, 1318, 1319, 1320, 1321, 1326, 1327, 1328, 1329, 1334, 1335, 1336, 1337, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1353, 1355, 1356, 1357, 1358, 1360, 1369, 1374, 1382, 1395, 1396, 1405, 1408, 1409, 1411, 1412, 1414, 1415, 1416, 1418, 1421, 1423, 1424, 1425, 1427, 1429, 1430, 1431, 1432, 1436, 1437, 1440, 1444, 1446, 1447, 1449, 1460, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1474, 1475], "python3": [1331, 1339, 1350, 1358, 1360, 1430, 1431, 1435, 1470, 1475], "python_check_positive_even": 1331, "python_init_repositori": 1339, "python_spec": 102, "python_tracer_level": 1464, "python_vers": 1339, "pythonpath": 1358, "pytorch": [1313, 1314, 1326, 1331, 1343, 1419, 1433, 1449, 1462, 1473], "pytre": [64, 69, 71, 74, 81, 82, 84, 95, 114, 127, 128, 131, 135, 136, 137, 138, 182, 193, 194, 244, 248, 249, 250, 288, 290, 296, 303, 304, 339, 415, 422, 424, 425, 426, 427, 431, 432, 433, 435, 456, 479, 486, 487, 492, 501, 719, 1012, 1256, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1275, 1279, 1280, 1281, 1282, 1283, 1284, 1299, 1303, 1304, 1308, 1320, 1322, 1324, 1326, 1336, 1346, 1350, 1351, 1367, 1382, 1386, 1387, 1404, 1408, 1415, 1419, 1423, 1427, 1443, 1444, 1447, 1455, 1458, 1462, 1472], "pytree_arg": 1318, "pytree_to_transpos": [1271, 1295, 1474], "pytreedef": [115, 1263, 1264, 1270, 1271, 1272, 1277, 1279, 1287, 1288, 1294, 1295, 1296, 1297, 1298, 1299, 1318, 1326, 1386, 1405, 1430, 1465], "pytyp": [1326, 1424], "pytype_aval_map": 1326, "pyvista": 1358, "pzero": 1326, "q": [404, 405, 489, 506, 777, 804, 853, 855, 875, 897, 1075, 1083, 1134, 1146, 1152, 1156, 1168, 1173, 1188, 1226, 1231, 1251, 1313, 1318, 1336, 1354, 1358, 1411, 1415, 1431, 1432, 1433, 1438], "q1": 1326, "q_wi": 1415, "q_wi_per_head": 1415, "qdwh": [1082, 1326], "qk": 506, "qkv": 1415, "qquad": [1313, 1433, 1437], "qr": [236, 403, 805, 1082, 1106, 1326], "qrresult": 804, "quad": 1418, "quadrant": [313, 574], "quadrat": [1319, 1455, 1460], "quadrupl": 1458, "qualiti": [1329, 1339, 1402, 1457], "qualnam": [162, 163, 394, 1394, 1395], "quantifi": [1318, 1418], "quantil": [853, 855, 875, 1326], "quantiti": [666, 1313, 1342, 1426, 1433, 1443, 1455], "quantiz": [509, 539], "quarter": [1341, 1452], "quartil": [853, 855, 875, 897], "quasi": [1084, 1085, 1445], "quasidynamicdata": 258, "quat": 1107, "queri": [506, 919, 920, 1315, 1405, 1431, 1440, 1455, 1462, 1468], "query_point": 1064, "query_seq_length": 506, "queryabl": [1440, 1468], "question": [999, 1322, 1329, 1341, 1414, 1418, 1426, 1449, 1455], "queue": 1452, "quick": [1319, 1358, 1413, 1424, 1432, 1444, 1460, 1462], "quickli": [1349, 1350, 1426, 1444, 1456], "quickstart": [182, 1322, 1435, 1442, 1453, 1454, 1455], "quiet_remove_fram": 1328, "quit": [1313, 1320, 1325, 1329, 1414, 1415, 1420, 1437, 1443, 1445, 1457, 1464], "quo": 1422, "quotient": [359, 659, 711, 714, 841, 880, 882, 885, 886, 905, 963], "qy": [305, 306], "qy_siz": 305, "r": [77, 83, 85, 235, 311, 396, 404, 615, 804, 898, 1083, 1090, 1107, 1313, 1318, 1326, 1329, 1331, 1339, 1343, 1354, 1360, 1411, 1421, 1430, 1432, 1433, 1434, 1437, 1438, 1445, 1448, 1460], "r1": 1417, "r2": [1107, 1417], "r3": [1107, 1313, 1437], "r_": [615, 636, 1090], "r_0": 1090, "r_matrix": 396, "r_n": 1135, "r_t": 1313, "race": [1328, 1444, 1452, 1455, 1456, 1457], "rad2deg": [648, 649, 981], "radian": [563, 569, 571, 573, 574, 638, 648, 899, 929, 948], "radiu": [291, 292, 1394], "rag": [132, 1443], "rais": [11, 13, 76, 99, 101, 102, 113, 114, 120, 121, 132, 133, 219, 235, 262, 283, 296, 328, 397, 499, 553, 621, 708, 716, 797, 845, 846, 861, 879, 890, 902, 925, 933, 939, 940, 993, 998, 1009, 1010, 1011, 1012, 1135, 1139, 1140, 1142, 1143, 1148, 1257, 1258, 1259, 1273, 1279, 1313, 1315, 1316, 1318, 1319, 1326, 1331, 1333, 1334, 1335, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1357, 1382, 1395, 1399, 1409, 1414, 1415, 1419, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1440, 1443, 1452, 1467, 1470, 1471, 1474], "raise_concretization_error": 1424, "raise_if_neg": 1348, "raise_to_shap": [1318, 1326], "raise_to_shaped_map": 1326, "raise_via_callback": 1348, "ram": 1456, "ramif": 1457, "ramp": 873, "ran": [1348, 1432, 1435, 1442, 1448, 1463], "rand": [305, 306, 1421, 1431, 1444, 1445, 1466], "rand_uniform": 1326, "randint": [113, 667, 1326], "randn": [1373, 1421, 1444, 1445, 1470], "random": [107, 111, 113, 237, 296, 305, 306, 311, 452, 453, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 539, 540, 619, 636, 641, 667, 698, 710, 716, 738, 800, 810, 811, 964, 981, 1059, 1060, 1061, 1062, 1073, 1203, 1313, 1317, 1320, 1326, 1340, 1341, 1342, 1348, 1353, 1359, 1373, 1375, 1387, 1398, 1410, 1414, 1421, 1424, 1425, 1431, 1435, 1436, 1437, 1439, 1442, 1443, 1444, 1445, 1455, 1456, 1458, 1460, 1461, 1462, 1464, 1468, 1469, 1470, 1474], "random_bit": [276, 277, 281, 282], "random_flattened_imag": [1435, 1442], "random_kei": 1353, "random_layer_param": [1435, 1442], "random_se": [277, 281, 282], "random_st": 1385, "random_unwrap": 1416, "random_wrap": 1416, "randomalgorithm": [452, 1395], "randomgamma": 1326, "randomli": [1045, 1203, 1257, 1258, 1259, 1435, 1442], "randomst": 1421, "rang": [10, 12, 41, 99, 296, 364, 365, 378, 398, 406, 453, 464, 492, 527, 528, 533, 534, 536, 545, 568, 569, 570, 571, 572, 573, 575, 582, 588, 610, 622, 636, 735, 736, 737, 738, 748, 807, 860, 876, 877, 894, 902, 930, 953, 994, 995, 996, 997, 1045, 1048, 1054, 1071, 1136, 1138, 1147, 1304, 1318, 1319, 1321, 1326, 1329, 1331, 1337, 1340, 1341, 1343, 1346, 1349, 1350, 1353, 1367, 1373, 1395, 1402, 1411, 1413, 1418, 1421, 1426, 1431, 1432, 1434, 1435, 1439, 1442, 1443, 1444, 1445, 1449, 1452, 1453, 1455, 1458, 1460, 1462, 1466, 1469], "range_select": 398, "rangl": 550, "rank": [201, 301, 329, 341, 343, 344, 345, 346, 347, 359, 362, 378, 387, 396, 403, 404, 416, 417, 418, 434, 456, 480, 486, 623, 663, 740, 794, 798, 803, 883, 914, 993, 1083, 1221, 1222, 1238, 1326, 1346, 1349, 1350, 1373, 1382, 1404, 1417, 1425, 1440, 1446, 1452, 1453, 1457, 1463], "rankdata": [1326, 1418], "rankedtensortyp": 1318, "rare": [424, 1316, 1331, 1343, 1414, 1458], "rate": [1029, 1046, 1104, 1105, 1106, 1367, 1368, 1418, 1421, 1455, 1460, 1474], "rather": [10, 67, 69, 107, 194, 263, 284, 346, 356, 402, 566, 578, 660, 673, 696, 746, 749, 762, 771, 772, 830, 842, 860, 874, 875, 878, 895, 896, 901, 906, 907, 913, 917, 940, 945, 953, 965, 987, 998, 999, 1091, 1104, 1105, 1256, 1313, 1318, 1319, 1326, 1328, 1331, 1333, 1334, 1341, 1343, 1354, 1399, 1408, 1410, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1433, 1437, 1438, 1440, 1443, 1444, 1448, 1458, 1465, 1466, 1470, 1473], "ratio": [785, 794, 1455, 1460], "ration": 1143, "rational": 1326, "ravel": [26, 288, 335, 699, 902, 907, 940, 946, 1326, 1419, 1435, 1439], "ravel_multi_index": [978, 1326], "ravel_pytre": 1326, "raw": [804, 1326, 1328, 1341, 1343, 1410, 1415, 1425, 1435, 1466], "raw_kei": 1425, "rb": 918, "rbac": 1431, "rbg": [277, 1326, 1328, 1402, 1425], "rbg_kei": 1326, "rc": 1356, "rceil": 332, "rclass": 898, "rcond": [794, 803, 883, 1326], "rdma": 1459, "re": [67, 69, 73, 80, 81, 120, 121, 424, 437, 493, 578, 874, 1124, 1312, 1313, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1328, 1329, 1331, 1335, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1360, 1373, 1382, 1386, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1429, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1440, 1442, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1464, 1465, 1466, 1468, 1469, 1470], "reach": [1092, 1104, 1105, 1106, 1326, 1348, 1353, 1356, 1413, 1420, 1458, 1460, 1462], "read": [102, 160, 177, 361, 612, 613, 614, 717, 722, 1312, 1313, 1317, 1318, 1319, 1326, 1328, 1339, 1342, 1348, 1349, 1353, 1357, 1415, 1426, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1443, 1444, 1445, 1448, 1452, 1455, 1456, 1457, 1458, 1460, 1463, 1468, 1475], "read_cotang": 1318, "read_prim": 1318, "readabl": [1328, 1405, 1448], "reader": [1350, 1458, 1460, 1469, 1474], "readi": [64, 102, 1317, 1322, 1326, 1329, 1339, 1358, 1405, 1412, 1414, 1426, 1431, 1448, 1452, 1458], "readili": [84, 1426], "readm": [241, 1326, 1328, 1339, 1419, 1436], "readthedoc": 1323, "real": [113, 336, 340, 386, 395, 398, 408, 416, 417, 473, 492, 524, 528, 529, 553, 569, 570, 571, 575, 632, 637, 641, 677, 683, 688, 689, 690, 691, 692, 693, 695, 697, 715, 745, 763, 770, 779, 784, 790, 792, 807, 862, 879, 888, 926, 935, 936, 938, 1066, 1067, 1068, 1071, 1074, 1084, 1085, 1089, 1093, 1098, 1102, 1103, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1141, 1144, 1145, 1146, 1148, 1150, 1151, 1152, 1196, 1313, 1318, 1326, 1343, 1349, 1353, 1358, 1395, 1414, 1426, 1431, 1433, 1434, 1437, 1452, 1456, 1460], "realarrai": [1015, 1016, 1017, 1019, 1021, 1022, 1024, 1025, 1027, 1029, 1031, 1036, 1038, 1040, 1041, 1044, 1046, 1049, 1051, 1052, 1053, 1054, 1055, 1056], "realist": [1417, 1455], "realiti": 1452, "realiz": [1418, 1448, 1452, 1462], "realli": [361, 1318, 1319, 1326, 1349, 1358, 1412, 1417, 1418, 1419, 1425, 1429, 1443, 1444, 1448, 1456, 1460], "realnumer": [517, 524, 526, 527, 528, 529], "realpath": 1339, "reap": 1449, "rearrang": [1313, 1341, 1349, 1353, 1373, 1426, 1433, 1452, 1457, 1460], "reason": [113, 264, 285, 306, 772, 798, 918, 1091, 1313, 1318, 1319, 1326, 1338, 1341, 1342, 1343, 1346, 1349, 1399, 1402, 1410, 1411, 1414, 1415, 1417, 1418, 1419, 1424, 1425, 1426, 1427, 1430, 1432, 1433, 1434, 1440, 1443, 1449, 1455, 1456, 1457, 1458, 1460, 1462, 1465, 1469], "reassign": 1463, "rebas": 1329, "rebind": 1432, "reboot": 1464, "rebound": 1432, "rebuild": [1106, 1339, 1343, 1358, 1427], "rebuilt": 1356, "recal": [305, 306, 1313, 1333, 1354, 1415, 1426, 1430, 1431, 1437, 1438, 1443, 1468], "recall_target": [305, 306], "recap": 1452, "receiv": [172, 174, 182, 1326, 1341, 1350, 1414, 1434, 1443, 1448, 1449, 1452, 1453, 1457, 1458], "receive_scratch": 1458, "receiving_slot": 1458, "recent": [119, 120, 121, 328, 613, 634, 650, 864, 880, 886, 923, 940, 971, 972, 987, 1280, 1315, 1319, 1326, 1328, 1331, 1332, 1339, 1342, 1343, 1346, 1349, 1353, 1360, 1375, 1414, 1418, 1425, 1430, 1432, 1452, 1454, 1470, 1473], "recept": [344, 345, 529], "recip": [1318, 1417, 1465, 1466, 1474], "recipe_to_eqn": 1318, "recipor": [331, 455, 476], "reciproc": 455, "recogn": [337, 1279, 1280, 1326, 1339, 1349, 1385, 1414, 1426, 1444, 1465], "recogniz": 1420, "recommend": [65, 66, 337, 361, 1013, 1264, 1266, 1316, 1326, 1328, 1329, 1338, 1339, 1340, 1348, 1349, 1352, 1353, 1356, 1357, 1385, 1402, 1409, 1414, 1418, 1420, 1425, 1432, 1439, 1452, 1457, 1458, 1463], "recommonmark": 1339, "recompil": [296, 998, 1326, 1328, 1331, 1353, 1358, 1371, 1382, 1429, 1463], "recomput": [67, 1354, 1413, 1438, 1441], "reconcil": 1452, "reconfigur": [219, 1457], "reconstruct": [574, 678, 679, 681, 683, 715, 779, 784, 804, 807, 811, 972, 1061, 1062, 1068, 1075, 1078, 1082, 1083, 1084, 1085, 1089, 1101, 1272, 1342, 1429, 1465, 1474], "record": [81, 158, 1341, 1429, 1436, 1470], "recours": 1416, "recov": [574, 682, 687, 902, 981, 1012, 1034, 1326, 1425], "rectangular": [407, 676, 1064], "rectifi": [531, 537, 538], "recurr": 1348, "recurs": [67, 311, 656, 1088, 1280, 1318, 1319, 1408, 1419, 1456, 1465, 1474], "recursive_checkpoint": [67, 1354, 1438], "recv": [1448, 1458], "recv_sem": [1448, 1458], "recycl": [296, 998, 1382], "red": [1434, 1469], "redefin": 1429, "redeploi": 1343, "redirect": 1464, "redistribut": [1329, 1339, 1356, 1443], "redo": 1318, "reduc": [67, 236, 296, 399, 404, 406, 409, 415, 425, 426, 427, 433, 434, 440, 441, 442, 443, 448, 456, 486, 502, 534, 559, 564, 598, 640, 697, 721, 794, 796, 800, 801, 804, 814, 832, 834, 835, 838, 849, 850, 851, 852, 854, 856, 857, 858, 892, 894, 942, 944, 965, 983, 994, 995, 996, 998, 1138, 1218, 1239, 1261, 1267, 1293, 1324, 1325, 1326, 1343, 1349, 1350, 1353, 1354, 1382, 1404, 1413, 1417, 1419, 1421, 1424, 1429, 1430, 1438, 1441, 1452, 1455, 1460, 1462, 1475], "reduce_and": [441, 442, 443, 445, 446, 448, 1326], "reduce_ax": [289, 492, 1302, 1303, 1415], "reduce_max": [416, 440, 442, 443, 445, 446, 448, 1326], "reduce_min": [417, 440, 441, 443, 445, 446, 448, 1326], "reduce_or": [440, 441, 442, 445, 446, 448, 1326], "reduce_precis": 1354, "reduce_prod": [440, 441, 442, 443, 446, 448, 1326, 1424, 1430], "reduce_scatt": [1443, 1458], "reduce_scatter_kernel": 1458, "reduce_sum": [440, 441, 442, 443, 445, 448, 1318, 1326, 1411, 1432], "reduce_sum_abstract_ev": 1318, "reduce_sum_batching_rul": 1318, "reduce_sum_jvp": 1318, "reduce_sum_p": [1318, 1385], "reduce_sum_transl": 1318, "reduce_sum_transpose_rul": 1318, "reduce_xor": [440, 441, 442, 443, 445, 446, 1326], "reduceat": [965, 1326], "reduceop": 1318, "reduceprecis": 444, "reducer_region": 1318, "reducescatt": [1353, 1415, 1475], "reducescattersum": [1417, 1443], "reducewindow": [1326, 1328], "reducewindowwithgeneralpad": 447, "reduct": [3, 4, 19, 20, 34, 35, 36, 40, 41, 52, 53, 54, 60, 112, 173, 305, 306, 378, 433, 440, 441, 442, 443, 445, 446, 448, 534, 567, 666, 801, 834, 883, 947, 965, 1138, 1269, 1313, 1326, 1353, 1385, 1430, 1443, 1460, 1461], "reduction_dim": [305, 306], "reduction_dimens": [305, 306], "reduction_input_size_overrid": [305, 306], "reduction_op": 173, "reduction_s": 1455, "reductionop": 173, "redund": [1328, 1354, 1434, 1438], "reexpress": 1342, "ref": [144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 166, 172, 174, 182, 186, 1318, 1323, 1326, 1448, 1452, 1455, 1456, 1458, 1460, 1462], "ref_impl": 1462, "refactor": [1326, 1329, 1414, 1418, 1425], "refer": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 69, 160, 172, 173, 174, 178, 184, 194, 233, 296, 303, 479, 586, 633, 637, 662, 664, 697, 699, 739, 860, 895, 909, 955, 956, 957, 958, 960, 961, 962, 988, 990, 998, 1014, 1019, 1043, 1088, 1094, 1095, 1096, 1097, 1129, 1273, 1278, 1308, 1313, 1318, 1326, 1328, 1333, 1336, 1339, 1341, 1342, 1343, 1348, 1350, 1351, 1353, 1354, 1356, 1357, 1360, 1382, 1399, 1408, 1411, 1417, 1419, 1426, 1428, 1431, 1434, 1436, 1438, 1441, 1443, 1444, 1447, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1465, 1466, 1470, 1474, 1475], "referenc": [296, 873, 990, 1086, 1326, 1343, 1458], "referencetyp": 1318, "referenti": 1465, "refin": [1318, 1331, 1343, 1346, 1386], "refine_polymorphic_shap": 1346, "reflect": [533, 545, 600, 666, 873, 1091, 1136, 1147, 1315, 1348, 1356, 1360, 1402, 1405, 1411, 1416, 1417, 1420, 1428, 1434, 1452, 1468], "reflect_typ": 873, "reflector": [399, 400, 409], "reformat": 1452, "refrain": 1343, "refresh": [1354, 1464], "regard": [61, 1329, 1343, 1416, 1418, 1420, 1422, 1446, 1458], "regardless": [500, 914, 990, 1318, 1326, 1328, 1339, 1348, 1471], "regex": 1373, "regim": [1318, 1455], "region": [160, 506, 1452, 1457, 1463], "regist": [82, 176, 248, 249, 262, 264, 265, 283, 285, 286, 287, 1264, 1266, 1279, 1280, 1281, 1282, 1283, 1284, 1305, 1318, 1326, 1349, 1360, 1387, 1408, 1414, 1416, 1422, 1436, 1437, 1449, 1452, 1455, 1456, 1457, 1461, 1465, 1474], "register_collective_primit": 1326, "register_custom_call_target": [264, 265, 285, 286, 1326, 1350], "register_dataclass": [1280, 1281, 1283, 1326, 1474], "register_dialect": 1318, "register_ffi_target": [262, 283, 1350], "register_ffi_type_id": 1326, "register_keypath": 1326, "register_low": [1326, 1343, 1360, 1416], "register_pytree_nod": [248, 249, 1281, 1282, 1283, 1318, 1332, 1349, 1465, 1474], "register_pytree_node_class": [1280, 1283, 1465], "register_pytree_with_kei": [1264, 1266, 1268, 1280, 1281, 1283, 1326], "register_pytree_with_keys_class": [1279, 1280, 1281, 1282], "register_stat": [1280, 1281, 1283], "register_transl": 1326, "registeredspeci": [1465, 1474], "registeredspecial2": 1465, "registr": [248, 249, 1279, 1339, 1350, 1414, 1422, 1465, 1474], "registri": [1279, 1281, 1283, 1284, 1326, 1356, 1408, 1431, 1436, 1465, 1474], "regress": [160, 1326, 1330, 1418, 1432, 1437, 1457], "regular": [320, 344, 384, 385, 535, 954, 1063, 1064, 1111, 1125, 1126, 1331, 1334, 1339, 1342, 1343, 1346, 1357, 1423, 1429, 1448, 1449, 1452, 1457, 1467, 1470], "regulargridinterpol": 1418, "regularli": [1339, 1416], "rehydr": [244, 1343], "rehydrated_exp": 1343, "rehydrated_f": 1343, "reimplement": [1326, 1350, 1360], "reinforc": [1313, 1474], "reiniti": 1326, "reinstal": [1339, 1464], "reinterpret_cast": 1350, "reintroduc": 1416, "reinvent": [1319, 1435, 1442], "reject": 1418, "rel": [362, 363, 364, 365, 366, 367, 560, 641, 760, 883, 1146, 1257, 1258, 1259, 1336, 1341, 1348, 1349, 1385, 1402, 1417, 1418, 1426, 1428, 1452, 1460, 1462], "rel_entr": [1114, 1134], "relat": [381, 457, 458, 459, 460, 461, 462, 1124, 1306, 1307, 1309, 1310, 1313, 1322, 1326, 1349, 1351, 1353, 1356, 1411, 1412, 1416, 1418, 1422, 1425, 1428, 1433, 1443, 1452, 1457, 1463, 1466, 1474, 1475], "relatedli": [1315, 1399], "relationship": [1318, 1348], "relax": [1326, 1331, 1337, 1356, 1413, 1426, 1447, 1458], "relayout": 1460, "releas": [61, 539, 1313, 1316, 1326, 1338, 1339, 1343, 1348, 1350, 1353, 1356, 1358, 1387, 1409, 1414, 1416, 1420, 1434, 1437, 1446, 1448, 1458], "relev": [1326, 1331, 1343, 1349, 1350, 1353, 1382, 1413, 1414, 1418, 1446, 1452, 1463, 1470, 1475], "reli": [235, 380, 1319, 1326, 1334, 1339, 1346, 1349, 1354, 1374, 1382, 1414, 1416, 1417, 1419, 1422, 1424, 1425, 1429, 1430, 1438, 1452], "reliabl": [1315, 1405, 1449], "reload": 1452, "reloc": [1326, 1416], "relu": [504, 531, 538, 1336, 1349, 1431, 1435, 1442, 1443, 1456, 1457, 1460, 1474], "relu6": [511, 537], "rem": [1432, 1448, 1452, 1458], "remain": [99, 127, 473, 547, 654, 667, 758, 813, 906, 923, 924, 971, 972, 973, 974, 975, 976, 985, 998, 1239, 1313, 1315, 1316, 1318, 1326, 1334, 1336, 1392, 1405, 1419, 1421, 1425, 1426, 1431, 1433, 1434, 1441, 1448, 1457, 1460, 1464, 1470, 1475], "remaind": [415, 449, 659, 714, 840, 841, 880, 882, 885, 886, 1343, 1346, 1440], "remat": [67, 81, 1314, 1326, 1343, 1352, 1428, 1441, 1443], "remat2": [1354, 1438], "remat_cal": 1326, "remat_lay": 1441, "remateri": [67, 422, 1328, 1352, 1354, 1438, 1441, 1443], "rememb": [746, 917, 1331, 1339, 1349, 1360, 1411, 1414, 1460], "remind": [696, 878, 895, 896], "reminisc": 1426, "remot": [1326, 1328, 1329, 1339, 1358, 1448, 1459, 1463], "remote_copi": 1458, "remote_copy_op": 1458, "remote_recv_sem": 1458, "remote_send_sem": 1458, "remov": [52, 98, 119, 127, 187, 304, 434, 440, 441, 442, 443, 445, 446, 448, 450, 453, 539, 666, 673, 882, 885, 907, 940, 1012, 1098, 1099, 1102, 1103, 1316, 1318, 1326, 1339, 1343, 1348, 1349, 1352, 1356, 1357, 1400, 1414, 1416, 1418, 1422, 1424, 1425, 1427, 1432, 1447, 1448, 1449, 1457, 1464], "remove_dupl": 1318, "remove_fram": [1326, 1328], "renam": [1326, 1343, 1425, 1435, 1447], "render": [1328, 1351], "reopen": [918, 919], "reorder": [83, 236, 666, 811, 1012, 1336, 1412, 1413, 1424, 1449, 1452, 1466], "rep": [951, 1414], "rep149": 235, "repartit": 1373, "repeat": [398, 540, 567, 696, 797, 873, 878, 908, 951, 987, 994, 995, 996, 997, 1273, 1323, 1326, 1341, 1343, 1350, 1374, 1424, 1440, 1443, 1466, 1469], "repeatedli": [486, 566, 567, 697, 1354, 1463], "repetit": [389, 951], "repl": 1432, "replac": [127, 128, 250, 253, 290, 337, 407, 457, 459, 499, 801, 844, 847, 848, 907, 1019, 1022, 1315, 1318, 1319, 1326, 1341, 1342, 1346, 1349, 1352, 1382, 1414, 1415, 1416, 1418, 1419, 1424, 1425, 1431, 1432, 1444, 1452, 1457, 1458, 1464, 1470], "replai": 1339, "replic": [29, 30, 137, 138, 194, 487, 499, 794, 998, 1098, 1256, 1326, 1331, 1350, 1353, 1373, 1382, 1404, 1410, 1415, 1416, 1431, 1432, 1434, 1440, 1443, 1458, 1463, 1468], "replica": [132, 133, 303, 304, 425, 426, 427, 433, 435, 491, 499, 998, 1318, 1341, 1402, 1415, 1421, 1431], "replica_devic": 1341, "replica_group": 1350, "replica_id": 1386, "replicaid": [1417, 1443], "replicate_sharding_on_last_dim": 1350, "replicated_arrai": [1440, 1468], "replicated_shard": 1434, "replicatedjob": 1431, "repo": [1329, 1339], "repo_env": 1339, "report": [235, 311, 1104, 1105, 1106, 1342, 1356, 1414, 1424, 1431, 1432, 1444, 1457], "repositori": [1329, 1350, 1356, 1427], "repr": [1317, 1318, 1326, 1337, 1422, 1474], "repres": [62, 63, 76, 78, 81, 94, 95, 96, 97, 98, 101, 120, 121, 166, 194, 197, 199, 219, 225, 226, 229, 230, 235, 236, 246, 247, 262, 267, 283, 288, 290, 291, 296, 303, 315, 316, 328, 341, 342, 343, 344, 345, 347, 348, 378, 401, 425, 426, 427, 431, 433, 434, 456, 486, 496, 499, 501, 506, 527, 550, 574, 585, 587, 624, 625, 636, 641, 667, 704, 705, 706, 716, 717, 738, 751, 752, 753, 754, 772, 773, 777, 784, 794, 800, 830, 873, 881, 909, 914, 925, 926, 967, 968, 969, 970, 987, 994, 995, 996, 997, 998, 1001, 1002, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1042, 1044, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1058, 1066, 1067, 1068, 1074, 1080, 1098, 1102, 1103, 1104, 1105, 1106, 1122, 1256, 1263, 1264, 1270, 1271, 1279, 1297, 1298, 1299, 1303, 1313, 1318, 1319, 1320, 1331, 1334, 1341, 1342, 1346, 1351, 1367, 1368, 1374, 1382, 1395, 1402, 1405, 1410, 1411, 1414, 1415, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1441, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1459, 1468, 1469, 1474], "represent": [101, 195, 207, 219, 222, 224, 228, 251, 262, 283, 401, 409, 420, 421, 501, 503, 504, 585, 587, 602, 697, 748, 759, 772, 804, 844, 863, 872, 927, 936, 977, 981, 1278, 1315, 1318, 1319, 1326, 1336, 1337, 1342, 1346, 1349, 1351, 1385, 1386, 1399, 1402, 1405, 1409, 1410, 1411, 1412, 1419, 1425, 1426, 1430, 1432, 1436, 1440, 1449, 1452, 1462, 1463, 1468, 1473], "reproduc": [1326, 1339, 1343, 1350, 1358, 1402, 1421, 1424, 1444, 1466], "reproduce_failur": 1339, "request": [18, 101, 262, 283, 331, 349, 363, 372, 373, 375, 411, 412, 455, 469, 476, 482, 483, 844, 1022, 1312, 1326, 1337, 1339, 1356, 1366, 1412, 1414, 1419, 1422, 1425, 1428, 1432, 1457, 1460, 1468], "requir": [18, 67, 83, 85, 99, 101, 127, 132, 133, 137, 172, 182, 248, 249, 262, 283, 356, 452, 453, 456, 486, 492, 499, 578, 616, 628, 650, 666, 675, 716, 800, 816, 874, 877, 918, 987, 994, 995, 996, 997, 998, 1072, 1093, 1128, 1280, 1282, 1283, 1312, 1313, 1315, 1318, 1319, 1324, 1326, 1329, 1331, 1334, 1338, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1354, 1356, 1375, 1382, 1395, 1399, 1402, 1405, 1410, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1440, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1454, 1455, 1456, 1457, 1458, 1464, 1466, 1467, 1468, 1469, 1470, 1473, 1474], "requirement_lock": 1339, "requirements_lock": [1326, 1339], "requirements_lock_": 1339, "requirements_lock_3_10": 1339, "requirements_lock_3_11": 1339, "requirements_lock_3_12": 1339, "requirements_lock_3_13": 1339, "requirements_nightli": 1339, "requirements_upd": [1326, 1339], "requisit": 1328, "reraise_with_filtered_traceback": 1360, "rerun": [1353, 1356], "res1": [1318, 1343], "res2": [1318, 1343], "res_": 1318, "res_norm_bwd": 1350, "res_norm_fwd": 1350, "res_trac": 1318, "resampl": [291, 292, 1394], "rescal": [533, 545, 1136, 1147, 1417], "research": [1312, 1323, 1337, 1339, 1355, 1356, 1419, 1444, 1449], "resembl": [1318, 1417, 1426, 1449], "reserv": [1316, 1343, 1448, 1458], "reset": 1469, "reset_cach": 1371, "reset_trace_st": 1326, "reshap": [137, 212, 213, 215, 238, 303, 362, 363, 364, 387, 433, 434, 471, 472, 498, 499, 500, 540, 566, 610, 615, 623, 662, 663, 666, 701, 724, 740, 788, 809, 812, 878, 901, 908, 912, 940, 950, 952, 978, 989, 998, 1091, 1304, 1315, 1318, 1326, 1341, 1343, 1346, 1350, 1353, 1354, 1373, 1385, 1399, 1404, 1410, 1415, 1424, 1430, 1431, 1434, 1435, 1440, 1441, 1442, 1443, 1452, 1458, 1462, 1467, 1468], "reshape_p": 1385, "reshard": [1343, 1350, 1434, 1440], "resid": [96, 794, 883, 1357, 1452, 1457, 1458, 1461], "residu": [67, 81, 235, 794, 883, 1104, 1105, 1106, 1313, 1318, 1350, 1354, 1419, 1423, 1433, 1438], "residual_batch": 1415, "residual_emb": 1415, "residual_tim": 1415, "resiz": [292, 873, 1326, 1341, 1394], "resizemethod": [291, 292, 1394], "resnet": 1326, "resolut": [697, 1032, 1339], "resolv": [424, 1326, 1346, 1349, 1373, 1414, 1419, 1470], "resort": 1350, "resourc": [1322, 1326, 1330, 1382, 1404, 1415, 1418, 1431, 1441], "respect": [82, 234, 236, 240, 289, 290, 293, 295, 311, 313, 336, 337, 343, 344, 357, 397, 499, 660, 898, 1082, 1083, 1140, 1149, 1302, 1313, 1315, 1318, 1319, 1326, 1336, 1339, 1341, 1342, 1343, 1348, 1352, 1360, 1395, 1410, 1411, 1415, 1417, 1423, 1426, 1433, 1434, 1435, 1442, 1443, 1444, 1447, 1448, 1453, 1455, 1457, 1461, 1473], "respond": 1418, "respons": [244, 1340, 1341, 1343, 1349, 1350, 1410, 1424, 1427, 1440, 1443, 1448, 1455, 1468], "rest": [128, 244, 1267, 1268, 1291, 1292, 1318, 1319, 1339, 1346, 1360, 1411, 1417, 1431, 1440, 1449, 1465, 1474], "rest1": 1318, "rest2": 1318, "restart": [1106, 1371, 1431, 1458, 1463], "restartpolici": 1431, "restor": [816, 1326, 1426, 1473], "restrict": [99, 153, 883, 1315, 1328, 1339, 1346, 1348, 1350, 1356, 1414, 1426, 1432, 1447, 1449, 1452, 1453, 1456, 1459, 1463], "restructur": 1414, "result": [10, 13, 61, 96, 101, 131, 137, 155, 166, 184, 190, 203, 204, 209, 210, 211, 212, 219, 220, 235, 244, 249, 263, 284, 296, 303, 304, 305, 306, 311, 326, 327, 328, 336, 341, 343, 344, 345, 346, 347, 356, 357, 362, 363, 364, 365, 366, 367, 379, 380, 403, 415, 425, 426, 427, 431, 432, 433, 434, 435, 439, 449, 450, 453, 459, 463, 492, 533, 534, 539, 545, 558, 559, 563, 564, 566, 567, 568, 574, 578, 595, 596, 597, 598, 600, 601, 606, 608, 610, 615, 621, 622, 623, 629, 630, 633, 637, 640, 642, 660, 663, 664, 665, 666, 675, 678, 679, 681, 683, 684, 686, 689, 699, 714, 716, 719, 727, 740, 749, 765, 772, 773, 774, 777, 780, 784, 786, 795, 798, 803, 806, 809, 813, 815, 816, 817, 821, 822, 823, 825, 826, 827, 829, 832, 834, 835, 838, 843, 845, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 862, 864, 874, 875, 877, 881, 882, 884, 885, 892, 894, 897, 898, 905, 906, 909, 910, 920, 924, 930, 940, 941, 942, 943, 944, 946, 950, 951, 954, 973, 974, 975, 983, 984, 985, 989, 994, 995, 996, 998, 1004, 1005, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1046, 1049, 1051, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1066, 1067, 1071, 1073, 1074, 1079, 1080, 1082, 1086, 1087, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1103, 1122, 1123, 1129, 1136, 1138, 1147, 1149, 1203, 1218, 1239, 1261, 1269, 1275, 1276, 1304, 1313, 1315, 1317, 1318, 1319, 1321, 1324, 1326, 1328, 1329, 1333, 1334, 1339, 1341, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1357, 1358, 1360, 1368, 1373, 1375, 1382, 1385, 1386, 1399, 1402, 1405, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1421, 1422, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1441, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1468, 1470, 1473, 1475], "result1": [780, 800, 821, 822, 1422], "result2": [800, 821, 822, 1422], "result3": 800, "result_activ": 1441, "result_av": 1350, "result_both": 1441, "result_cod": 1426, "result_dtyp": 1432, "result_info": [1315, 1343, 1350], "result_layout": [263, 284, 1350], "result_map": 1373, "result_shap": [1348, 1373, 1432], "result_shape_dtyp": [131, 190, 262, 283, 1012, 1348], "result_shard": [1350, 1373], "result_typ": [616, 664, 990, 1012, 1318, 1326, 1343, 1348], "resultbuff": 1350, "resultmetadata": [262, 283], "resum": 1336, "ret": 1350, "retain": [434, 1326, 1329, 1371, 1460, 1466], "rethink": 1455, "retrac": [67, 1326], "retri": 99, "retriev": [242, 296, 496, 998, 1313, 1382, 1432, 1433], "retstep": 815, "return": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 28, 31, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 94, 95, 96, 97, 98, 101, 102, 104, 106, 108, 109, 113, 114, 115, 119, 120, 121, 127, 128, 131, 132, 133, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 263, 264, 265, 268, 270, 271, 272, 276, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 619, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 708, 710, 711, 712, 713, 714, 715, 716, 717, 719, 721, 722, 723, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 749, 750, 751, 752, 753, 754, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 923, 924, 925, 926, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1326, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1360, 1367, 1368, 1371, 1373, 1374, 1382, 1385, 1386, 1395, 1398, 1399, 1404, 1405, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1473, 1474], "return_": 1318, "return_count": [972, 973, 974], "return_index": [972, 973], "return_indic": 758, "return_invers": [972, 973, 975, 1326], "return_onesid": [1098, 1102, 1103], "return_shap": 501, "return_sign": [534, 1138, 1326], "return_str": 999, "return_v": 1319, "return_weak_typ": 108, "return_weak_type_flag": 108, "returnvalu": [77, 78, 79, 80, 81], "reus": [67, 160, 174, 296, 998, 1023, 1318, 1324, 1331, 1339, 1341, 1342, 1346, 1352, 1382, 1402, 1429, 1432, 1444, 1448, 1449, 1452, 1458, 1466], "rev": [69, 1257, 1331, 1358], "rev_it": [1313, 1433], "reveal": [83, 404, 1083, 1313, 1336, 1373, 1412, 1414, 1437], "reveng": 1450, "revers": [67, 69, 73, 76, 80, 295, 311, 351, 352, 353, 354, 355, 378, 456, 479, 486, 493, 657, 701, 702, 703, 915, 953, 990, 1149, 1303, 1318, 1319, 1326, 1344, 1349, 1350, 1351, 1386, 1411, 1419, 1432, 1436, 1443, 1444], "revert": [1316, 1326, 1329, 1413], "review": [1315, 1329, 1414, 1461, 1462], "revis": [1412, 1417, 1419, 1424, 1443], "revisit": [1414, 1416, 1422, 1425, 1448, 1453], "reward": 1313, "rewrit": [339, 1319, 1321, 1329, 1334, 1346, 1349, 1412, 1415, 1419, 1423, 1424, 1426, 1429, 1443, 1444, 1448, 1455, 1474, 1475], "rewritten": [1319, 1346, 1350, 1412, 1417, 1419, 1444, 1469], "rfft": [680, 683, 688, 689, 693, 694, 695, 1326, 1395], "rfft2": [690, 695, 1326], "rfftfreq": [680, 1326], "rfftn": [689, 691, 692, 693, 1326], "rfloor": 377, "rg": 235, "rgb": 1439, "rh": [203, 204, 209, 210, 220, 317, 341, 343, 344, 345, 346, 347, 360, 361, 539, 540, 1318, 1395, 1434, 1443, 1460, 1462], "rhs_batch_dim": [203, 204, 220, 361, 539], "rhs_block": 1443, "rhs_block_hi": 1443, "rhs_block_lo": 1443, "rhs_component_count": 1395, "rhs_contracting_dim": [203, 204, 220, 361, 539], "rhs_dilat": [343, 344, 345, 346, 347], "rhs_dtype": 1395, "rhs_precision_typ": 1395, "rhs_scale": 540, "rhs_shape": 342, "rhs_spec": [343, 344, 345, 1395, 1439, 1443], "rich": [87, 1354, 1438], "richer": 1318, "riemann": [1152, 1313, 1437], "right": [178, 236, 332, 356, 377, 397, 406, 410, 465, 466, 467, 505, 507, 508, 510, 533, 633, 637, 657, 675, 701, 741, 757, 780, 794, 806, 807, 811, 813, 872, 898, 910, 915, 920, 982, 985, 1027, 1038, 1051, 1052, 1055, 1067, 1080, 1082, 1089, 1094, 1095, 1096, 1097, 1100, 1104, 1105, 1106, 1136, 1149, 1221, 1222, 1263, 1313, 1316, 1319, 1326, 1341, 1343, 1346, 1348, 1350, 1353, 1354, 1360, 1417, 1419, 1426, 1427, 1433, 1438, 1443, 1445, 1448, 1449, 1452, 1455, 1462, 1464], "right_capacity_sem": 1458, "right_copi": 1458, "right_copy_devic": 1458, "right_copy_slic": 1458, "right_neighbor": [1448, 1458], "right_permut": 1458, "right_permute_kernel": 1458, "right_recv_sem": 1458, "right_send_sem": 1458, "right_shift": [466, 467, 607, 780], "right_window_s": 506, "rigor": [1313, 1437], "ring": [502, 1353, 1443, 1448], "rint": 1326, "risk": [1352, 1379, 1457, 1458], "rm": [527, 1053, 1350, 1358], "rms_norm": 1350, "rms_norm_bwd": 1350, "rms_norm_cross_platform": 1350, "rms_norm_cuda": 1350, "rms_norm_fwd": 1350, "rms_norm_infer_sharding_from_operand": 1350, "rms_norm_lib": 1350, "rms_norm_lib_cuda": 1350, "rms_norm_partit": 1350, "rms_norm_ref": 1350, "rms_norm_sequenti": 1350, "rms_norm_shmap": 1350, "rmsnorm": 1350, "rmsnormbwd": 1350, "rmsnormfwd": 1350, "rmsnormimpl": 1350, "rmsprop": 1367, "rmsprop_momentum": 1367, "rng": [716, 981, 1416, 1418, 1421, 1428, 1434, 1445, 1462, 1466, 1468, 1469], "rng_1": 1421, "rng_2": 1421, "rng_3": 1421, "rng_bit_gener": [1326, 1395], "rng_default": [452, 1395], "rng_input": 1421, "rng_philox": 1395, "rng_three_fri": 1395, "rngbitgener": [452, 1475], "rnn": 1441, "roadmap": [1350, 1428], "robin": 1452, "robust": [235, 1326, 1354, 1438], "robustifi": 1423, "rocket": 1445, "rocm": [242, 244, 424, 1343, 1356, 1386], "roi": 1425, "role": [99, 1452, 1469, 1475], "roll": [378, 456, 913, 1326, 1331, 1414, 1443, 1455, 1465], "rollaxi": [842, 912, 945, 1326], "room": 1414, "root": [331, 357, 455, 476, 506, 617, 879, 883, 887, 938, 939, 1088, 1312, 1313, 1318, 1326, 1333, 1339, 1350, 1353, 1419, 1424, 1433], "rot": 1108, "rot90": 1439, "rotat": [915, 981, 1106, 1108, 1313, 1326, 1418, 1437, 1439, 1458], "rotvec": 1108, "rough": [1350, 1449], "roughli": [92, 235, 362, 364, 456, 1318, 1319, 1328, 1336, 1343, 1350, 1415, 1417, 1443, 1455, 1460, 1462], "round": [332, 377, 445, 446, 581, 619, 698, 710, 711, 879, 904, 911, 964, 981, 1082, 1313, 1319, 1326, 1395, 1399, 1419, 1432, 1433, 1452, 1457], "round_": 1326, "rounding_method": 454, "roundingmethod": [454, 1395], "roundoff": 1319, "rout": [1326, 1332, 1414, 1443, 1449, 1465], "routin": [0, 235, 357, 667, 987, 1313, 1326, 1348, 1385, 1399, 1402, 1418, 1433, 1443, 1460], "row": [233, 236, 237, 262, 263, 283, 284, 292, 295, 401, 402, 433, 499, 526, 566, 628, 636, 641, 642, 775, 873, 898, 901, 902, 907, 955, 957, 961, 998, 1022, 1043, 1058, 1078, 1082, 1090, 1313, 1341, 1385, 1415, 1437, 1443, 1444, 1449, 1452, 1453, 1456, 1460, 1462, 1466, 1474], "row_norm": 998, "row_stack": 1326, "rows_per_devic": 499, "rows_sort": 197, "rowvar": [636, 641], "rpath": 1349, "rpc": 1341, "rr": 1331, "rsf2csf": [1085, 1326], "rsqrt": [331, 476], "rst": 1339, "rtd": 1339, "rtol": [560, 760, 798, 803, 1036, 1072, 1074, 1257, 1258, 1259, 1313, 1326, 1350, 1437, 1441, 1443, 1444, 1460], "rtree": 1358, "rudin": [1313, 1433], "ruff": [1329, 1339], "rule": [69, 73, 74, 76, 77, 78, 80, 81, 127, 128, 160, 244, 263, 284, 328, 360, 361, 378, 422, 450, 456, 486, 612, 613, 614, 616, 623, 630, 663, 740, 909, 930, 941, 954, 989, 1063, 1150, 1151, 1314, 1318, 1319, 1320, 1326, 1328, 1333, 1343, 1346, 1348, 1350, 1353, 1354, 1373, 1374, 1395, 1411, 1413, 1416, 1417, 1422, 1423, 1426, 1427, 1428, 1432, 1437, 1438, 1443, 1444, 1447, 1448, 1449, 1455, 1457, 1458, 1466, 1467, 1473], "rules_python": 1339, "run": [82, 84, 99, 100, 119, 121, 127, 182, 190, 296, 303, 304, 345, 378, 424, 434, 435, 456, 503, 998, 1009, 1010, 1011, 1312, 1313, 1315, 1317, 1318, 1319, 1323, 1326, 1329, 1334, 1335, 1340, 1341, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1358, 1360, 1371, 1382, 1386, 1410, 1411, 1414, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1443, 1444, 1447, 1448, 1449, 1452, 1455, 1456, 1457, 1460, 1462, 1463, 1464, 1468, 1470, 1473, 1475], "run_arg": 1386, "run_mesh": 1386, "run_scop": [178, 1447, 1452, 1458], "run_stat": [1448, 1452], "run_und": 1339, "rundir": 1353, "runpi": 1360, "runtim": [96, 131, 887, 1012, 1074, 1273, 1312, 1313, 1315, 1323, 1326, 1334, 1336, 1343, 1348, 1349, 1350, 1356, 1399, 1405, 1409, 1415, 1419, 1422, 1424, 1427, 1429, 1433, 1443, 1447, 1448, 1452, 1455, 1460, 1462, 1475], "runtime_execut": [1373, 1405], "runtime_token": 1412, "runtimeerror": [99, 634, 1009, 1010, 1011, 1324, 1326, 1328, 1431, 1471], "runtimewarn": 1435, "rw": 1343, "s1": [475, 664, 1417], "s10": 664, "s2": [475, 1417], "s25": 664, "s3": 1435, "s32": 1424, "s4": 616, "s_": [746, 1082, 1313], "s_dev": 1441, "s_grad": 1313, "s_host": 1441, "s_sha256_sum": 1339, "s_t": 1313, "s_tm1": 1313, "sa": 1431, "sacrif": 1458, "sad": 1466, "saddl": 1092, "safe": [61, 160, 244, 296, 356, 424, 616, 998, 1012, 1028, 1315, 1318, 1326, 1334, 1336, 1339, 1382, 1409, 1412, 1414, 1415, 1443, 1444, 1452, 1466, 1469, 1473], "safe_for_grad_log": 1349, "safe_map": [1326, 1436], "safe_zip": 1326, "safer": [1415, 1475], "safeti": [244, 1326, 1343, 1386, 1425], "sai": [981, 1313, 1315, 1318, 1319, 1331, 1341, 1343, 1350, 1354, 1356, 1404, 1410, 1412, 1414, 1415, 1417, 1432, 1433, 1434, 1437, 1438, 1440, 1443, 1448, 1449, 1452, 1456, 1458, 1460, 1469], "said": [1316, 1319, 1350, 1418, 1426, 1444, 1445, 1457], "sake": [107, 1348, 1414, 1422, 1426], "salient": 1470, "salmon": 1402, "same": [10, 13, 45, 61, 64, 67, 69, 71, 73, 74, 76, 81, 94, 99, 101, 105, 114, 121, 127, 128, 133, 134, 135, 136, 137, 138, 140, 155, 160, 172, 184, 206, 219, 234, 236, 240, 241, 248, 249, 280, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 321, 322, 323, 324, 325, 331, 332, 334, 336, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 356, 357, 359, 362, 368, 372, 373, 375, 377, 380, 382, 383, 386, 389, 391, 392, 395, 398, 400, 401, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 440, 441, 442, 443, 445, 446, 448, 449, 454, 455, 456, 457, 463, 465, 466, 467, 468, 469, 470, 473, 474, 476, 479, 480, 481, 482, 483, 487, 492, 493, 499, 500, 501, 506, 512, 513, 543, 550, 551, 555, 559, 563, 564, 565, 566, 570, 572, 575, 576, 577, 584, 591, 602, 619, 623, 629, 630, 633, 634, 636, 637, 641, 657, 663, 666, 667, 669, 670, 676, 677, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 708, 710, 712, 713, 714, 716, 724, 726, 730, 731, 734, 736, 738, 740, 741, 746, 747, 759, 764, 766, 767, 768, 769, 780, 781, 782, 783, 794, 795, 799, 801, 810, 822, 829, 830, 832, 833, 838, 839, 845, 846, 849, 850, 852, 853, 854, 855, 857, 860, 862, 863, 865, 870, 873, 875, 877, 878, 879, 887, 888, 890, 892, 897, 898, 901, 902, 904, 905, 910, 912, 916, 917, 921, 926, 927, 930, 935, 936, 941, 944, 945, 947, 956, 959, 960, 964, 978, 987, 989, 992, 998, 1013, 1019, 1060, 1062, 1071, 1073, 1074, 1084, 1086, 1087, 1094, 1095, 1096, 1097, 1098, 1100, 1104, 1105, 1106, 1136, 1147, 1196, 1218, 1239, 1267, 1268, 1274, 1282, 1302, 1303, 1313, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1328, 1331, 1333, 1336, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1357, 1360, 1367, 1368, 1374, 1375, 1382, 1385, 1386, 1395, 1399, 1402, 1404, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1473, 1474, 1475], "same_data": 1023, "same_kind": 616, "same_low": 343, "sampl": [292, 529, 636, 641, 680, 694, 729, 738, 954, 1008, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1063, 1098, 1101, 1102, 1103, 1139, 1140, 1203, 1313, 1326, 1328, 1355, 1366, 1421, 1434, 1435, 1439, 1441, 1444, 1462, 1466], "sample_s": 1421, "sampler": [1019, 1022, 1036, 1326], "saniti": 1431, "sass": 1326, "satisfi": [160, 235, 237, 311, 331, 349, 356, 372, 373, 375, 403, 411, 412, 440, 441, 442, 443, 445, 446, 448, 455, 469, 476, 482, 483, 499, 567, 636, 675, 807, 953, 980, 981, 1024, 1070, 1075, 1082, 1085, 1089, 1329, 1360, 1414, 1425, 1426, 1429, 1435, 1452, 1463, 1466], "satur": 1455, "save": [67, 816, 919, 1007, 1009, 1010, 1011, 1313, 1314, 1326, 1328, 1331, 1339, 1343, 1346, 1353, 1354, 1371, 1413, 1419, 1423, 1424, 1432, 1433, 1437, 1441, 1443, 1458, 1460, 1462, 1463, 1475], "save_and_offload_only_these_nam": [1354, 1441], "save_any_names_but_thes": [1354, 1438], "save_anything_but_these_nam": [1354, 1438], "save_device_memory_profil": 1340, "save_for_backward": [1313, 1433], "save_from_both_polici": 1354, "save_only_these_nam": [1354, 1438], "savetxt": [918, 919], "savez": 918, "savez_compress": 919, "saw": [1339, 1411, 1431], "scaffold": 1422, "scalabl": 1430, "scalar": [31, 67, 69, 92, 95, 96, 105, 107, 109, 114, 138, 153, 205, 253, 288, 289, 290, 296, 297, 301, 313, 321, 322, 324, 325, 336, 339, 348, 357, 359, 363, 365, 366, 367, 368, 380, 382, 383, 389, 392, 399, 400, 407, 409, 414, 416, 417, 418, 419, 421, 430, 449, 454, 456, 464, 465, 466, 467, 480, 481, 486, 492, 493, 501, 505, 507, 531, 560, 569, 570, 571, 572, 573, 575, 580, 582, 583, 584, 588, 595, 596, 597, 615, 616, 617, 619, 620, 623, 624, 625, 627, 632, 638, 639, 641, 642, 648, 654, 656, 660, 663, 664, 665, 670, 671, 672, 674, 677, 680, 694, 696, 700, 704, 705, 706, 708, 709, 710, 712, 713, 714, 719, 721, 723, 724, 725, 726, 727, 729, 730, 731, 734, 735, 737, 740, 741, 742, 745, 748, 751, 752, 753, 754, 756, 757, 764, 766, 767, 768, 769, 772, 773, 778, 781, 782, 815, 817, 819, 822, 827, 828, 833, 839, 841, 853, 855, 861, 862, 863, 865, 866, 875, 877, 878, 879, 880, 882, 884, 885, 886, 888, 890, 893, 897, 898, 899, 903, 904, 905, 908, 909, 910, 916, 925, 926, 928, 929, 932, 933, 938, 939, 948, 949, 964, 967, 968, 969, 970, 977, 979, 984, 987, 989, 998, 1033, 1072, 1074, 1093, 1196, 1279, 1302, 1303, 1313, 1318, 1320, 1326, 1328, 1331, 1342, 1343, 1346, 1351, 1360, 1367, 1368, 1374, 1382, 1395, 1409, 1411, 1414, 1418, 1425, 1431, 1432, 1437, 1440, 1443, 1444, 1447, 1454, 1456, 1457, 1459, 1461, 1465, 1466, 1468, 1473], "scalar_or_schedul": 1367, "scalar_typ": 1318, "scale": [87, 292, 318, 319, 493, 506, 509, 517, 518, 519, 520, 521, 522, 523, 526, 528, 529, 534, 539, 540, 541, 568, 667, 742, 883, 1025, 1029, 1049, 1056, 1072, 1098, 1103, 1131, 1133, 1135, 1138, 1157, 1158, 1159, 1160, 1161, 1162, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1312, 1313, 1319, 1326, 1350, 1353, 1354, 1355, 1367, 1368, 1415, 1421, 1429, 1431, 1435, 1437, 1438, 1442, 1443, 1445, 1449, 1452, 1453, 1455, 1458, 1460], "scaled_dot_gener": 509, "scaled_dot_general_fn": 539, "scaled_matmul": 539, "scan": [47, 67, 98, 113, 119, 120, 182, 311, 378, 415, 887, 920, 1040, 1318, 1326, 1331, 1334, 1335, 1339, 1348, 1349, 1350, 1353, 1354, 1415, 1419, 1432, 1438, 1440, 1441, 1443, 1449, 1465, 1470, 1474, 1475], "scan_out": 1354, "scan_p": 1385, "scan_unrol": 920, "scatter": [434, 458, 459, 460, 461, 462, 1318, 1326, 1395, 1432, 1439, 1440, 1443, 1449, 1469, 1475], "scatter_add": 965, "scatter_dimens": [434, 1415, 1443], "scatter_dims_to_operand_dim": [457, 1395], "scatter_indic": [457, 458, 459, 460, 461, 462, 1395], "scatter_indices_batching_dim": 1395, "scatterdimensionnumb": [457, 458, 459, 460, 461, 462, 1395], "scenario": [160, 1326, 1339, 1341, 1382, 1432, 1448], "scenario1": 1339, "scenario1_requirements_lock_3_13": 1339, "scenario2": 1339, "scenario2_requirements_lock_3_13": 1339, "scene": [18, 1443], "schedul": [539, 1326, 1353, 1367, 1415, 1431, 1449, 1452, 1455, 1457, 1475], "schemat": 1419, "scheme": [236, 1402, 1420, 1426, 1452, 1458], "school": [311, 1313, 1415, 1437, 1468], "schur": [1084, 1088, 1326], "scienc": [311, 1312, 1445], "scientif": [1337, 1338, 1339, 1411, 1432, 1449, 1466], "scipi": [236, 534, 633, 637, 742, 784, 787, 790, 793, 804, 806, 807, 1316, 1323, 1326, 1337, 1338, 1342, 1348, 1359, 1385, 1402, 1428, 1435, 1439, 1442, 1445], "scope": [241, 250, 251, 503, 504, 1273, 1312, 1319, 1326, 1342, 1355, 1360, 1404, 1411, 1419, 1422, 1428, 1429, 1440, 1448, 1452, 1458, 1471], "scott": 1196, "scp": 1431, "scratch": [1106, 1325, 1330, 1341, 1368, 1418, 1448, 1455, 1458, 1460, 1461, 1462, 1468], "scratch_ref": [1452, 1462], "scratch_shap": [141, 182, 1447, 1452, 1458, 1460, 1461, 1462], "scratch_vmem_ref": 1461, "scratchshapetre": [141, 182], "screen": [1336, 1351], "screenshot": 1414, "script": [1326, 1339, 1354, 1358, 1431, 1438, 1452, 1463, 1464, 1475], "sda": 1410, "sdy_batch": 1373, "sdyshardingrul": 1373, "seamlessli": [1279, 1385, 1399], "search": [47, 235, 305, 306, 491, 920, 1092, 1093, 1339, 1343, 1349, 1373, 1418], "searchsort": [657, 1326], "sec": [99, 1415, 1435, 1442], "second": [76, 78, 81, 99, 121, 172, 288, 289, 290, 293, 295, 297, 356, 357, 456, 493, 501, 560, 583, 584, 610, 655, 656, 660, 664, 676, 725, 729, 740, 758, 760, 777, 778, 795, 800, 829, 871, 881, 884, 890, 923, 924, 939, 945, 952, 965, 971, 984, 1016, 1098, 1263, 1264, 1268, 1302, 1303, 1304, 1312, 1313, 1315, 1318, 1319, 1326, 1332, 1333, 1341, 1343, 1346, 1348, 1349, 1353, 1354, 1360, 1367, 1404, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1426, 1431, 1432, 1433, 1434, 1437, 1438, 1441, 1443, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1468], "second_barri": 1458, "secondari": 1419, "secondli": 160, "secret": 1431, "section": [508, 548, 666, 937, 1013, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1319, 1320, 1321, 1326, 1333, 1337, 1339, 1341, 1343, 1356, 1385, 1410, 1414, 1415, 1418, 1420, 1421, 1422, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1436, 1437, 1441, 1443, 1446, 1448, 1452, 1454, 1457, 1458, 1464, 1466, 1469, 1474], "secur": 918, "see": [10, 13, 67, 73, 74, 75, 76, 77, 79, 80, 83, 85, 91, 92, 96, 98, 105, 121, 131, 140, 141, 182, 185, 186, 188, 221, 235, 241, 244, 250, 251, 262, 267, 283, 288, 296, 303, 304, 305, 306, 311, 321, 339, 343, 360, 378, 404, 408, 424, 425, 426, 427, 431, 432, 433, 434, 435, 454, 463, 487, 491, 492, 499, 501, 502, 505, 508, 535, 537, 541, 548, 580, 634, 657, 666, 668, 697, 699, 718, 719, 720, 728, 772, 785, 789, 796, 801, 811, 814, 816, 860, 869, 873, 891, 893, 896, 918, 919, 920, 922, 937, 946, 947, 965, 973, 974, 975, 976, 990, 991, 998, 1006, 1007, 1012, 1013, 1019, 1023, 1083, 1084, 1091, 1107, 1123, 1135, 1238, 1256, 1260, 1273, 1279, 1280, 1304, 1312, 1313, 1315, 1316, 1319, 1320, 1323, 1325, 1326, 1328, 1329, 1330, 1331, 1334, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1358, 1360, 1367, 1373, 1378, 1382, 1385, 1386, 1387, 1395, 1399, 1401, 1402, 1404, 1405, 1408, 1409, 1410, 1412, 1413, 1414, 1416, 1417, 1419, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1442, 1444, 1446, 1447, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1472, 1473, 1474, 1475], "seed": [93, 276, 277, 278, 281, 282, 1013, 1033, 1313, 1326, 1402, 1437, 1444, 1445, 1466], "seek": [816, 918, 919, 1316, 1329, 1414, 1426], "seem": [1313, 1318, 1341, 1353, 1412, 1413, 1422, 1423, 1433, 1437, 1448, 1449, 1452, 1460, 1469], "seen": [1313, 1318, 1319, 1350, 1385, 1424, 1425, 1426, 1432, 1437, 1452, 1455, 1456, 1458, 1469, 1473], "segfault": 1326, "segment": [994, 995, 996, 997, 1098, 1101, 1102, 1103, 1326], "segment_id": [994, 995, 996, 997], "segment_sum": [965, 1326], "seldom": 1413, "select": [14, 93, 331, 339, 349, 372, 373, 375, 411, 412, 455, 464, 469, 476, 481, 482, 483, 506, 877, 940, 990, 1022, 1071, 1089, 1098, 1103, 1313, 1318, 1326, 1328, 1331, 1334, 1339, 1350, 1353, 1354, 1395, 1402, 1411, 1424, 1425, 1432, 1437, 1438, 1441, 1452, 1453, 1455, 1457, 1462, 1464, 1471], "select_cal": 405, "select_n": [877, 921, 1430], "select_on_first_cycl": 1353, "select_on_first_devic": 1353, "select_on_last_devic": 1353, "select_rang": 1071, "select_tril": 1424, "selector": 539, "self": [3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 31, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 206, 506, 535, 541, 1003, 1004, 1196, 1280, 1281, 1282, 1283, 1318, 1319, 1329, 1331, 1332, 1339, 1354, 1356, 1360, 1386, 1404, 1405, 1415, 1422, 1430, 1438, 1449, 1462, 1465, 1469, 1470, 1474], "selu": [296, 507, 1429, 1430], "selu_jit": [1429, 1430], "sem": [1326, 1448, 1458], "semant": [10, 83, 120, 136, 137, 155, 160, 337, 339, 361, 378, 381, 415, 421, 449, 456, 457, 458, 459, 460, 461, 462, 481, 486, 501, 567, 580, 621, 623, 630, 663, 696, 740, 772, 860, 878, 893, 895, 896, 909, 913, 941, 987, 989, 998, 1012, 1275, 1279, 1318, 1326, 1334, 1336, 1343, 1346, 1348, 1350, 1351, 1360, 1382, 1395, 1399, 1410, 1415, 1417, 1418, 1421, 1422, 1424, 1428, 1432, 1436, 1443, 1444, 1445, 1446, 1448, 1449, 1453, 1458], "semaphor": [1448, 1461], "semaphore_read": 1458, "semaphore_sign": [1448, 1458], "semaphore_wait": [1448, 1458], "semaphoretyp": [1448, 1458], "semi": [1043, 1316, 1326, 1417], "semidefinit": 1082, "semver": 1420, "send": [1329, 1339, 1341, 1353, 1366, 1429, 1431, 1443, 1448, 1458], "send_sem": [1448, 1458], "sender": 1458, "sens": [1313, 1318, 1320, 1410, 1414, 1417, 1418, 1419, 1421, 1426, 1437, 1440, 1443, 1444, 1448, 1449, 1452, 1466, 1469], "sensibl": [1313, 1414, 1426, 1433], "sensit": 1328, "sent": [1325, 1448, 1458], "sentinel": 1318, "sep": [722, 1356], "separ": [77, 79, 113, 244, 251, 337, 344, 415, 568, 636, 641, 664, 666, 667, 722, 873, 994, 995, 996, 997, 1278, 1313, 1315, 1316, 1319, 1326, 1327, 1328, 1341, 1343, 1367, 1373, 1410, 1411, 1412, 1414, 1415, 1419, 1426, 1429, 1431, 1432, 1433, 1443, 1448, 1455, 1456, 1457, 1460, 1461, 1468, 1469, 1475], "sept": 1424, "septemb": 1338, "seq": [937, 1358, 1431], "seq_of_zero": 879, "sequel": 1443, "sequenc": [2, 11, 27, 63, 67, 77, 79, 80, 87, 99, 127, 132, 133, 140, 159, 160, 161, 164, 174, 180, 190, 192, 195, 196, 200, 201, 202, 205, 211, 212, 213, 215, 218, 232, 234, 240, 241, 244, 250, 251, 252, 253, 262, 263, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 326, 327, 338, 341, 343, 344, 345, 346, 347, 349, 361, 363, 366, 374, 376, 379, 381, 388, 389, 401, 413, 423, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 469, 471, 473, 475, 478, 481, 485, 500, 501, 502, 506, 518, 519, 520, 521, 522, 523, 529, 534, 567, 568, 574, 578, 586, 598, 613, 621, 623, 629, 630, 636, 640, 641, 650, 662, 663, 666, 667, 668, 673, 679, 681, 682, 685, 686, 687, 690, 691, 693, 695, 701, 723, 729, 735, 736, 737, 738, 739, 740, 747, 774, 775, 783, 800, 801, 809, 834, 835, 842, 849, 850, 851, 852, 854, 856, 857, 858, 869, 877, 879, 883, 894, 902, 907, 912, 914, 921, 937, 940, 941, 942, 950, 951, 953, 981, 983, 988, 989, 991, 998, 1019, 1060, 1062, 1064, 1091, 1099, 1100, 1138, 1274, 1279, 1302, 1303, 1304, 1313, 1318, 1324, 1326, 1331, 1343, 1346, 1349, 1351, 1360, 1368, 1382, 1386, 1395, 1399, 1402, 1404, 1409, 1411, 1414, 1415, 1421, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1443, 1444, 1449, 1455, 1466, 1470, 1474], "sequencekei": [1264, 1266, 1326, 1474], "sequenti": [75, 131, 160, 262, 283, 1012, 1333, 1339, 1348, 1350, 1415, 1421, 1441, 1452, 1453, 1456, 1457], "sequential_unrol": 1012, "seri": [921, 1098, 1101, 1102, 1103, 1108, 1123, 1135, 1326, 1356, 1374], "serial": [192, 243, 244, 248, 249, 424, 1314, 1315, 1326, 1367, 1368, 1386, 1405, 1419, 1421, 1455, 1456], "serializ": [193, 1402], "serialize_auxdata": 249, "serialize_execut": 1369, "serialized_metadata": 187, "serialized_nam": [248, 249], "series_ord": 1135, "series_out": 1374, "seriou": 1457, "serv": [99, 500, 977, 1273, 1318, 1337, 1353, 1360, 1366, 1414, 1418, 1458, 1461, 1464, 1468], "server": [1008, 1464], "servic": [99, 1353, 1431, 1464], "serviceaccountnam": 1431, "session": [1326, 1333, 1339, 1352], "set": [10, 67, 68, 77, 78, 80, 81, 91, 92, 98, 99, 101, 121, 132, 133, 158, 160, 173, 174, 176, 184, 194, 235, 248, 253, 259, 292, 296, 305, 306, 334, 346, 360, 361, 368, 378, 380, 381, 382, 383, 392, 397, 404, 414, 419, 429, 457, 458, 459, 460, 461, 462, 497, 499, 501, 502, 506, 536, 578, 622, 628, 636, 640, 641, 664, 696, 716, 717, 758, 765, 784, 790, 792, 809, 834, 856, 858, 860, 873, 874, 878, 883, 887, 894, 895, 896, 914, 923, 924, 942, 946, 950, 955, 956, 960, 971, 972, 973, 974, 975, 976, 983, 987, 994, 995, 996, 997, 998, 1003, 1013, 1015, 1045, 1058, 1071, 1091, 1135, 1140, 1149, 1218, 1239, 1256, 1279, 1280, 1281, 1282, 1283, 1313, 1315, 1318, 1319, 1320, 1321, 1322, 1326, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1356, 1357, 1360, 1371, 1373, 1375, 1382, 1385, 1386, 1395, 1396, 1399, 1402, 1404, 1408, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1425, 1426, 1429, 1433, 1434, 1435, 1436, 1437, 1439, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1455, 1456, 1457, 1458, 1460, 1462, 1464, 1465, 1466, 1467, 1468, 1471, 1473, 1474, 1475], "set_cache_dir": [1328, 1371, 1463], "set_current_trac": 1430, "set_interpret": 1319, "set_linestyl": 1426, "set_mesh": 1440, "set_printopt": [585, 587, 728, 891], "set_titl": 1439, "set_trac": [1313, 1430, 1433], "set_valu": 1318, "set_visible_devic": [1352, 1442], "set_ylim": 1426, "setdiff1d": [758, 924, 971, 1418], "setop": [923, 971], "setup": [1320, 1326, 1339, 1341, 1353, 1356, 1431, 1437], "setuptool": [1339, 1435], "setxor1d": [758, 923, 971], "seussian": 1415, "sever": [235, 457, 918, 919, 1082, 1093, 1312, 1313, 1316, 1326, 1328, 1329, 1331, 1339, 1341, 1343, 1346, 1348, 1349, 1351, 1356, 1402, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 1428, 1430, 1432, 1436, 1441, 1443, 1444, 1449, 1457, 1458, 1460, 1462, 1466, 1467, 1468], "sf": [1157, 1158, 1159, 1160, 1161, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1212, 1213, 1214, 1215, 1216, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1242, 1243, 1244, 1245, 1246], "sfu": 1452, "sgd": [1313, 1367, 1469, 1474], "sh": [1326, 1339, 1358, 1443], "sha256_sum": 1339, "shape": [26, 42, 45, 61, 63, 73, 87, 98, 114, 131, 132, 133, 135, 136, 137, 138, 142, 152, 161, 164, 166, 168, 172, 182, 183, 190, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 211, 212, 225, 226, 229, 230, 232, 237, 241, 244, 250, 251, 262, 263, 277, 280, 281, 282, 283, 284, 289, 290, 291, 292, 297, 298, 299, 300, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 321, 323, 326, 327, 328, 330, 331, 332, 334, 335, 338, 340, 342, 344, 345, 348, 349, 350, 363, 365, 367, 368, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 386, 389, 391, 392, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 419, 420, 421, 425, 426, 427, 429, 431, 432, 433, 434, 435, 437, 440, 441, 442, 443, 445, 446, 447, 448, 450, 452, 453, 454, 455, 456, 459, 463, 464, 468, 469, 470, 472, 476, 482, 483, 486, 491, 492, 498, 499, 500, 501, 502, 506, 517, 525, 526, 529, 530, 534, 540, 550, 555, 558, 563, 570, 572, 575, 579, 580, 584, 591, 595, 596, 597, 601, 602, 606, 608, 610, 612, 613, 614, 615, 619, 621, 628, 629, 630, 634, 635, 636, 641, 642, 650, 657, 660, 663, 664, 667, 668, 669, 670, 673, 675, 676, 677, 679, 681, 683, 685, 686, 690, 691, 693, 695, 698, 708, 710, 712, 713, 714, 719, 723, 724, 730, 731, 734, 736, 738, 740, 741, 743, 747, 749, 757, 758, 759, 764, 765, 766, 767, 768, 769, 775, 777, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 804, 805, 806, 807, 808, 810, 811, 812, 822, 823, 825, 826, 828, 829, 831, 833, 836, 839, 842, 843, 862, 863, 864, 865, 869, 870, 871, 878, 879, 880, 882, 883, 885, 886, 887, 888, 890, 898, 901, 902, 904, 905, 907, 908, 910, 912, 913, 916, 920, 923, 926, 927, 930, 933, 934, 935, 936, 937, 940, 941, 943, 945, 951, 953, 955, 956, 960, 964, 971, 972, 973, 974, 975, 976, 978, 982, 984, 986, 987, 989, 991, 992, 994, 995, 996, 997, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1104, 1105, 1106, 1125, 1126, 1136, 1138, 1139, 1140, 1147, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1203, 1204, 1205, 1206, 1207, 1208, 1214, 1219, 1220, 1223, 1224, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1252, 1253, 1254, 1255, 1302, 1303, 1304, 1313, 1315, 1317, 1318, 1320, 1321, 1324, 1326, 1331, 1333, 1336, 1341, 1342, 1344, 1348, 1349, 1350, 1353, 1354, 1360, 1368, 1373, 1382, 1385, 1395, 1398, 1399, 1402, 1404, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1421, 1422, 1423, 1425, 1429, 1430, 1431, 1434, 1435, 1436, 1437, 1439, 1440, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1466, 1467, 1468, 1470, 1474], "shape_assert": [1326, 1343], "shape_depend": 1368, "shape_dtyp": 1452, "shape_dtype_struct": 114, "shape_from_pyv": 1326, "shape_poli": [241, 250, 251, 1326, 1328, 1346], "shape_poly_st": 1360, "shape_poly_test": 1346, "shape_spec": [250, 251], "shapecheck": 1326, "shaped_arrai": 1417, "shapedarrai": [98, 244, 501, 1318, 1326, 1331, 1342, 1343, 1346, 1350, 1360, 1386, 1416, 1424, 1440, 1470], "shapedtypespec": 250, "shapedtypestruct": [114, 131, 142, 182, 190, 244, 250, 262, 283, 492, 1012, 1315, 1326, 1343, 1346, 1348, 1350, 1448, 1449, 1452, 1453, 1455, 1456, 1458, 1460, 1461, 1462], "shapelik": 1414, "shapepolyloweringst": 1360, "shapepolytest": 1346, "shapes_spec": 250, "sharad_map": 1415, "sharadmv": [1412, 1415, 1416], "shard": [2, 9, 21, 27, 29, 57, 63, 83, 84, 85, 86, 87, 96, 101, 131, 132, 133, 136, 137, 194, 201, 212, 296, 316, 379, 380, 487, 491, 498, 499, 500, 502, 568, 582, 588, 591, 668, 669, 676, 680, 694, 716, 723, 724, 815, 869, 870, 991, 992, 998, 1012, 1256, 1314, 1326, 1328, 1331, 1334, 1341, 1343, 1353, 1359, 1373, 1382, 1386, 1402, 1410, 1411, 1414, 1415, 1432, 1436, 1458, 1463, 1471, 1475], "shard_map": [316, 1314, 1326, 1328, 1369, 1428, 1440, 1449, 1458, 1463], "shard_shap": 1404, "shardabl": 1402, "sharded_arg": 1343, "sharded_arrai": [1440, 1468], "sharded_cal": 1326, "sharded_dim": 1404, "sharded_jit": 1326, "sharded_x": 1410, "shardeddevicearrai": [1326, 1410], "shardi": [491, 1373], "sharding1": 1434, "sharding2": 1434, "sharding_rul": 1373, "sharding_spec": [1404, 1410], "shardingcontext": 1360, "shardingspec": 1404, "share": [76, 99, 101, 172, 241, 361, 397, 910, 1318, 1324, 1326, 1346, 1350, 1412, 1415, 1419, 1421, 1427, 1431, 1449, 1452, 1455, 1458, 1461, 1463, 1464], "sharp": [909, 1322, 1333, 1349, 1429, 1444, 1448, 1454, 1469], "sheet": 1458, "shelf": 1466, "shell": [1337, 1339, 1353, 1410, 1413, 1424, 1432, 1463, 1464], "shelv": 1466, "shick": 1415, "shift": [465, 466, 467, 682, 687, 780, 910, 912, 1353, 1443], "shift_dn": 1443, "shift_left": [466, 467], "shift_right": 1353, "shift_right_arithmet": [465, 467, 1447], "shift_right_log": [465, 466], "shift_up": 1443, "shifted_freq": [682, 687], "shim": 1435, "ship": [1326, 1356], "shmap": [1417, 1428], "shmap_bodi": 1350, "sho": 1415, "sholto": 1415, "sholto_map": 1415, "shoot": 1429, "short": [1098, 1101, 1102, 1103, 1331, 1338, 1339, 1349, 1351, 1414, 1421, 1426, 1428, 1430, 1449, 1464, 1470], "short_mask": 675, "shortcom": 1415, "shortcut": [972, 1326, 1405], "shorter": 1446, "shortest": 1463, "shorthand": [763, 1313, 1433, 1434], "should": [0, 61, 67, 74, 76, 78, 81, 82, 96, 99, 101, 107, 114, 127, 128, 131, 133, 136, 137, 140, 158, 173, 182, 187, 194, 197, 199, 237, 244, 250, 262, 263, 277, 281, 282, 283, 284, 289, 290, 291, 292, 296, 297, 311, 321, 337, 357, 361, 362, 381, 387, 401, 408, 431, 432, 452, 453, 457, 458, 459, 460, 461, 462, 464, 493, 499, 501, 506, 510, 517, 518, 519, 520, 521, 522, 523, 526, 529, 533, 536, 545, 559, 564, 566, 574, 579, 616, 622, 670, 701, 708, 714, 716, 718, 720, 726, 729, 735, 736, 738, 772, 793, 797, 811, 822, 832, 833, 834, 838, 839, 849, 850, 852, 853, 854, 855, 856, 857, 858, 863, 865, 873, 875, 884, 890, 892, 893, 897, 901, 905, 907, 913, 919, 934, 942, 944, 952, 983, 987, 990, 994, 995, 996, 997, 998, 1006, 1007, 1012, 1040, 1077, 1088, 1104, 1105, 1106, 1136, 1147, 1149, 1256, 1258, 1259, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1279, 1280, 1282, 1302, 1303, 1304, 1313, 1316, 1318, 1319, 1323, 1326, 1328, 1332, 1334, 1336, 1337, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1358, 1371, 1374, 1382, 1386, 1392, 1395, 1402, 1404, 1410, 1411, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1447, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1474], "should_accumulate_out": 1458, "should_be_zero": 1319, "should_comput": 1462, "should_sort_granules_by_kei": 133, "shouldn": [1339, 1354, 1412, 1423, 1429, 1432, 1438, 1469], "show": [503, 504, 666, 759, 761, 770, 786, 811, 1003, 1004, 1005, 1008, 1313, 1315, 1320, 1326, 1328, 1340, 1342, 1350, 1356, 1357, 1358, 1373, 1385, 1411, 1412, 1414, 1418, 1421, 1424, 1429, 1432, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1449, 1452, 1453, 1464, 1471], "show_exampl": 1465, "show_head": [1354, 1438], "show_lin": [1354, 1438], "show_program_id": 1453, "shown": [1325, 1354, 1360, 1411, 1426, 1438, 1441, 1443, 1453, 1469, 1474], "shpecialized_xmap": 1415, "shuffl": [431, 1045, 1326, 1414], "shut": [99, 100, 1464], "shutdown": 1326, "side": [47, 83, 98, 120, 178, 236, 262, 283, 343, 356, 410, 526, 718, 720, 794, 806, 811, 813, 920, 985, 1012, 1025, 1039, 1067, 1080, 1082, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1124, 1128, 1313, 1317, 1318, 1326, 1331, 1333, 1334, 1336, 1342, 1346, 1348, 1349, 1351, 1382, 1414, 1415, 1417, 1418, 1419, 1428, 1429, 1432, 1433, 1440, 1464, 1469], "side_effect": 1342, "sig": 1431, "sight": [1313, 1433], "sigma": [807, 1025, 1038, 1041, 1049, 1056, 1089, 1221, 1222, 1445], "sigmoid": [413, 510, 511, 532, 543, 548, 551, 1120, 1313, 1320, 1349, 1385, 1437, 1468], "sign": [10, 298, 313, 359, 381, 449, 466, 534, 544, 635, 697, 714, 763, 805, 860, 862, 888, 905, 927, 928, 946, 1082, 1124, 1127, 1128, 1138, 1326, 1329, 1349], "signal": [633, 637, 981, 1326, 1420, 1439, 1452, 1458], "signatur": [76, 81, 120, 127, 237, 277, 281, 282, 296, 311, 337, 378, 456, 486, 493, 566, 567, 568, 828, 873, 987, 1273, 1313, 1315, 1318, 1326, 1343, 1350, 1367, 1373, 1382, 1411, 1419, 1427, 1433, 1435, 1437, 1442, 1447, 1449, 1455, 1458, 1462, 1463], "signedinteg": 1318, "signifi": 1326, "signific": [1326, 1337, 1348, 1349, 1413, 1415, 1420, 1423, 1426, 1443, 1452, 1457, 1462, 1473], "significantli": [697, 1326, 1452, 1457], "signigic": 1352, "silenc": [219, 1326], "silent": [1326, 1348, 1356, 1429, 1432, 1443, 1445, 1458, 1467, 1471], "silli": 1350, "silu": [512, 513, 551], "silverman": 1196, "simd": [1421, 1456, 1466], "similar": [92, 113, 120, 194, 237, 249, 304, 328, 348, 380, 424, 434, 463, 493, 567, 568, 587, 664, 721, 773, 802, 812, 813, 837, 868, 878, 914, 965, 994, 995, 996, 997, 1072, 1098, 1256, 1275, 1282, 1283, 1313, 1315, 1326, 1328, 1331, 1333, 1334, 1336, 1341, 1342, 1346, 1348, 1349, 1350, 1352, 1354, 1357, 1399, 1410, 1413, 1414, 1418, 1419, 1420, 1421, 1422, 1426, 1430, 1432, 1433, 1436, 1437, 1438, 1439, 1440, 1443, 1444, 1452, 1457, 1458, 1462, 1463, 1468, 1471, 1473], "similarli": [77, 80, 127, 137, 292, 947, 998, 1313, 1318, 1321, 1325, 1326, 1333, 1343, 1349, 1350, 1414, 1415, 1416, 1418, 1424, 1425, 1431, 1433, 1436, 1443, 1447, 1448, 1449, 1452, 1453, 1460, 1474], "simpl": [67, 363, 450, 471, 479, 566, 574, 579, 598, 610, 616, 676, 729, 743, 806, 816, 831, 877, 934, 986, 994, 995, 996, 997, 1070, 1086, 1087, 1099, 1278, 1308, 1312, 1313, 1314, 1318, 1320, 1321, 1326, 1336, 1339, 1341, 1342, 1346, 1348, 1349, 1353, 1354, 1356, 1385, 1405, 1411, 1412, 1413, 1414, 1416, 1417, 1419, 1420, 1421, 1424, 1426, 1428, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1448, 1449, 1452, 1453, 1456, 1460, 1461, 1465, 1468, 1474], "simple_typ": 1414, "simpler": [327, 676, 746, 917, 1280, 1281, 1283, 1318, 1319, 1341, 1349, 1360, 1410, 1413, 1414, 1415, 1417, 1426, 1431, 1434, 1465], "simplest": [621, 675, 1318, 1341, 1350, 1418, 1422, 1434, 1443, 1444, 1452, 1468], "simpli": [113, 291, 501, 998, 1313, 1315, 1321, 1329, 1339, 1340, 1342, 1349, 1356, 1412, 1419, 1424, 1427, 1429, 1432, 1433, 1452, 1454, 1455, 1458, 1462, 1465, 1468], "simplic": [1325, 1350, 1418, 1419, 1426, 1431, 1452], "simplif": [1318, 1349, 1360], "simplifi": [1278, 1315, 1325, 1326, 1341, 1343, 1346, 1348, 1357, 1410, 1416, 1417, 1419, 1424, 1452, 1458], "simul": [918, 919, 1313, 1353, 1355, 1419, 1433, 1449], "simultan": [942, 983, 1350, 1431, 1455, 1458, 1461, 1466], "sin": [67, 73, 77, 78, 79, 80, 81, 84, 113, 121, 127, 244, 293, 295, 297, 309, 337, 349, 422, 482, 493, 501, 571, 574, 638, 729, 757, 919, 930, 932, 948, 954, 981, 1063, 1074, 1123, 1303, 1313, 1318, 1319, 1333, 1334, 1336, 1342, 1343, 1346, 1348, 1354, 1360, 1374, 1399, 1410, 1411, 1413, 1415, 1419, 1422, 1431, 1433, 1434, 1437, 1438, 1439, 1440, 1444, 1449, 1457, 1468], "sin_deriv_at_3": 1318, "sin_jvp": 1318, "sin_lin": 1318, "sin_p": 1318, "sin_sharded_x": 1410, "sin_vjp": [1354, 1438], "sin_vjp2": [1354, 1438], "sin_x": [73, 80, 81, 1313, 1433], "sinc": [82, 84, 114, 153, 456, 486, 634, 637, 884, 918, 953, 994, 995, 996, 997, 1239, 1313, 1317, 1318, 1319, 1320, 1326, 1336, 1339, 1341, 1343, 1346, 1348, 1350, 1353, 1354, 1356, 1360, 1373, 1399, 1410, 1411, 1412, 1415, 1417, 1418, 1419, 1420, 1421, 1427, 1429, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1441, 1443, 1444, 1449, 1452, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1469, 1474], "sine": [299, 300, 309, 310, 312, 314, 349, 350, 469, 470, 482, 483, 569, 570, 571, 572, 573, 575, 638, 639, 929, 932, 948, 949, 981, 1318], "singl": [21, 77, 80, 99, 133, 153, 160, 190, 194, 250, 290, 296, 335, 337, 344, 345, 357, 365, 367, 378, 423, 456, 463, 486, 500, 506, 567, 568, 587, 610, 623, 629, 630, 636, 641, 642, 663, 697, 716, 729, 740, 750, 783, 788, 799, 800, 801, 812, 814, 907, 919, 920, 921, 937, 941, 945, 981, 989, 998, 1022, 1058, 1078, 1099, 1104, 1105, 1106, 1256, 1257, 1258, 1259, 1297, 1298, 1299, 1313, 1318, 1319, 1320, 1321, 1326, 1328, 1331, 1334, 1336, 1339, 1341, 1343, 1346, 1348, 1350, 1351, 1353, 1367, 1382, 1404, 1408, 1410, 1412, 1415, 1416, 1419, 1422, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1437, 1440, 1441, 1442, 1443, 1444, 1452, 1455, 1456, 1457, 1458, 1461, 1462, 1464, 1465, 1466, 1468, 1474, 1475], "single_device_shard": 1404, "singledeviceshard": [131, 1012, 1326, 1404, 1444, 1468], "singleton": [1318, 1326, 1440, 1457], "singular": [236, 406, 785, 794, 798, 801, 803, 806, 807, 808, 883, 1041, 1082, 1086, 1089, 1326], "sinh": [310, 350, 483, 572, 639, 949], "sit": [1318, 1350, 1457], "site": [1006, 1331, 1339, 1343, 1346, 1350, 1354, 1360, 1382, 1430, 1435, 1438, 1470], "situat": [61, 67, 197, 199, 634, 981, 1313, 1315, 1316, 1334, 1342, 1346, 1348, 1411, 1417, 1432, 1433, 1458, 1463, 1470], "six": [998, 1418], "size": [14, 39, 61, 140, 143, 172, 181, 201, 205, 212, 215, 219, 226, 230, 236, 303, 304, 305, 306, 311, 316, 321, 326, 343, 345, 363, 364, 365, 374, 381, 390, 402, 403, 415, 423, 425, 426, 427, 432, 433, 434, 435, 450, 456, 475, 478, 493, 499, 501, 506, 510, 534, 540, 559, 564, 568, 579, 580, 596, 597, 598, 599, 600, 609, 610, 628, 633, 637, 640, 652, 662, 664, 675, 679, 685, 690, 691, 693, 695, 696, 699, 700, 717, 732, 733, 735, 739, 743, 758, 776, 777, 793, 801, 813, 815, 828, 832, 834, 835, 838, 849, 850, 851, 852, 854, 856, 857, 858, 864, 871, 873, 878, 892, 894, 902, 906, 907, 923, 924, 934, 937, 940, 942, 944, 957, 958, 961, 962, 971, 972, 973, 974, 975, 976, 981, 983, 984, 985, 987, 988, 990, 994, 995, 996, 997, 998, 1012, 1076, 1077, 1081, 1093, 1094, 1095, 1096, 1097, 1100, 1101, 1106, 1138, 1218, 1239, 1257, 1258, 1259, 1280, 1282, 1304, 1318, 1320, 1324, 1326, 1331, 1342, 1343, 1346, 1348, 1350, 1352, 1367, 1382, 1395, 1399, 1410, 1415, 1417, 1418, 1424, 1425, 1431, 1432, 1434, 1435, 1437, 1439, 1442, 1443, 1444, 1447, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1466, 1468, 1474, 1475], "skeleton": [1436, 1458], "sketch": 1318, "skew": 1326, "skh": 506, "skip": [99, 717, 1318, 1319, 1326, 1331, 1339, 1386, 1410, 1417, 1429, 1430, 1432, 1457, 1458, 1462, 1470], "skip_app": 1423, "skip_app_bwd": 1423, "skip_app_fwd": 1423, "skip_canonic": 1430, "skip_on_devic": 1326, "sklearn": 1385, "slate": 1414, "sleep": 1464, "sleev": [1313, 1437], "sleight": 1426, "slerp": [1326, 1418], "slice": [10, 14, 99, 133, 137, 140, 205, 213, 362, 363, 364, 365, 366, 367, 381, 387, 431, 432, 456, 457, 458, 459, 460, 461, 462, 472, 499, 566, 615, 621, 650, 696, 746, 747, 750, 772, 837, 860, 868, 873, 896, 898, 917, 946, 947, 972, 1326, 1328, 1343, 1346, 1350, 1353, 1373, 1386, 1395, 1404, 1414, 1415, 1417, 1431, 1432, 1443, 1449, 1452, 1453, 1455, 1457, 1458, 1459, 1460, 1461], "slice_for_invoc": 1453, "slice_fus": 1350, "slice_i": 1462, "slice_in_dim": [364, 387, 471, 1346], "slice_index": [99, 133], "slice_j": 1462, "slice_p": 1385, "slice_s": [205, 208, 363, 364, 381, 1395, 1462], "slices_for_invoc": 1453, "slide": 1419, "slight": 1349, "slightli": [9, 591, 719, 1098, 1104, 1105, 1317, 1318, 1349, 1354, 1413, 1426, 1427, 1431, 1438, 1448, 1452, 1456, 1462], "slogdet": 1326, "slogdetresult": 805, "slope": 531, "slot": [1452, 1458], "slow": [1106, 1326, 1328, 1335, 1336, 1337, 1339, 1341, 1352, 1402, 1440, 1449, 1457, 1458, 1460], "slowdown": 1358, "slower": [110, 133, 397, 1313, 1323, 1326, 1328, 1395, 1402, 1452, 1455, 1457], "slowest": [262, 283, 335, 1313, 1395, 1434, 1437, 1452, 1457, 1458], "slurm": [99, 1326, 1353, 1431], "sm": [1326, 1350, 1356, 1452], "sm3": 1367, "sm_35": 1326, "small": [397, 550, 674, 784, 794, 798, 803, 807, 819, 920, 923, 971, 1015, 1029, 1066, 1067, 1068, 1069, 1079, 1080, 1089, 1313, 1317, 1318, 1319, 1326, 1328, 1341, 1343, 1353, 1355, 1366, 1367, 1368, 1408, 1411, 1413, 1415, 1417, 1418, 1420, 1426, 1433, 1441, 1443, 1452, 1455, 1456, 1457, 1458, 1460, 1462, 1475], "smaller": [160, 216, 403, 526, 578, 585, 587, 622, 713, 794, 798, 803, 839, 873, 874, 906, 972, 998, 1059, 1061, 1326, 1331, 1336, 1339, 1342, 1349, 1358, 1410, 1417, 1426, 1430, 1443, 1447, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1463], "smallest": [235, 421, 697, 758, 785, 801, 924, 1460], "smallest_norm": 697, "smallest_subnorm": 697, "smallest_valu": [578, 874], "smem": [160, 171, 172, 173, 174, 177, 1326, 1456, 1461, 1462], "smem_ref": 1452, "smooth": [547, 549, 930, 1313, 1325, 1349, 1437, 1439], "smooth_imag": 1439, "smoother": 1103, "snapshot": [1006, 1313, 1343, 1437, 1449], "sneak": 1448, "snippet": [137, 1458, 1463, 1464], "so": [65, 66, 67, 69, 76, 78, 81, 85, 99, 113, 127, 136, 193, 248, 249, 264, 285, 291, 296, 343, 344, 345, 378, 381, 413, 415, 432, 434, 445, 446, 456, 457, 458, 459, 460, 461, 462, 486, 493, 566, 574, 600, 628, 673, 697, 719, 728, 759, 779, 803, 830, 842, 891, 901, 907, 913, 919, 922, 940, 945, 953, 998, 1019, 1071, 1104, 1105, 1106, 1150, 1151, 1279, 1304, 1312, 1313, 1316, 1318, 1319, 1320, 1324, 1326, 1328, 1329, 1331, 1332, 1334, 1336, 1337, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1357, 1358, 1360, 1366, 1367, 1371, 1382, 1385, 1402, 1404, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1440, 1442, 1444, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475], "societi": 1043, "soft": [235, 544, 1463], "soft_pmap": 1326, "soft_sign": 1349, "softmax": [337, 479, 506, 533, 1019, 1136, 1326, 1349], "softplu": [535, 547, 1349], "softwar": [187, 1312, 1325, 1356, 1411, 1418, 1419, 1420, 1421, 1427, 1435, 1442, 1454, 1457, 1461], "sole": [1415, 1455, 1469, 1470], "solidli": 1416, "solut": [236, 356, 357, 410, 793, 794, 1067, 1070, 1077, 1080, 1086, 1087, 1092, 1104, 1105, 1106, 1313, 1332, 1342, 1349, 1352, 1414, 1426, 1433, 1448, 1474], "solv": [356, 357, 408, 793, 811, 1066, 1067, 1070, 1071, 1077, 1079, 1080, 1087, 1104, 1105, 1106, 1313, 1326, 1346, 1349, 1419, 1421, 1433, 1458], "solve_method": 1106, "solve_triangular": 1086, "solver": [236, 356, 357, 793, 806, 1071, 1077, 1078, 1086, 1088, 1092, 1093, 1104, 1105, 1313, 1325, 1326, 1355, 1418, 1419, 1433], "some": [9, 10, 13, 64, 65, 66, 67, 71, 74, 82, 92, 99, 113, 160, 182, 244, 249, 296, 328, 381, 387, 421, 457, 458, 459, 460, 461, 462, 471, 472, 479, 492, 499, 506, 574, 591, 613, 654, 666, 729, 860, 918, 946, 981, 998, 1012, 1093, 1273, 1278, 1280, 1282, 1304, 1306, 1307, 1309, 1310, 1313, 1315, 1316, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1334, 1336, 1339, 1342, 1343, 1346, 1348, 1350, 1353, 1354, 1356, 1357, 1358, 1360, 1366, 1367, 1374, 1382, 1385, 1386, 1395, 1399, 1405, 1409, 1410, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1443, 1444, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1465, 1466, 1468, 1469, 1470, 1472, 1473, 1474], "some_arrai": [1440, 1468], "some_funct": 1413, "some_i": 1440, "some_kernel": 1453, "some_x": 1440, "somebodi": 1339, "somehow": 1419, "someon": 1358, "someth": [381, 457, 1313, 1315, 1318, 1319, 1324, 1326, 1336, 1339, 1346, 1348, 1354, 1356, 1410, 1414, 1417, 1419, 1422, 1423, 1424, 1426, 1432, 1433, 1437, 1438, 1440, 1448, 1449, 1456, 1464, 1469], "sometim": [132, 356, 1312, 1313, 1319, 1326, 1333, 1337, 1341, 1343, 1346, 1349, 1350, 1351, 1352, 1357, 1399, 1414, 1417, 1418, 1424, 1425, 1429, 1431, 1437, 1443, 1457, 1460, 1464, 1465, 1473], "sometru": 1326, "somewhat": [666, 1336, 1339, 1343, 1346, 1350, 1385, 1414, 1432, 1458], "somewher": [1458, 1464], "sonnet": 1398, "soon": [65, 66, 1316, 1326, 1328, 1339, 1342, 1354, 1418, 1425, 1438, 1449, 1455, 1456], "sophist": [67, 1385, 1418], "sort": [7, 8, 10, 47, 133, 214, 216, 237, 305, 306, 381, 398, 457, 458, 459, 460, 461, 462, 474, 578, 579, 657, 757, 758, 765, 783, 790, 792, 860, 874, 919, 920, 923, 924, 935, 946, 947, 971, 972, 973, 974, 975, 976, 994, 995, 996, 997, 1318, 1319, 1326, 1342, 1343, 1386, 1412, 1422, 1432, 1443], "sort_eig_v": 405, "sort_eigenvalu": [398, 1326], "sorted_indic": 237, "sorted_nod": 1318, "sorter": [47, 920], "sought": 1426, "sound": [1313, 1346, 1419, 1437], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 109, 113, 114, 115, 116, 119, 120, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 607, 609, 610, 612, 613, 614, 617, 619, 621, 622, 623, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 701, 702, 703, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 747, 749, 750, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 824, 827, 828, 829, 830, 831, 832, 834, 835, 836, 838, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 863, 864, 865, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1312, 1313, 1315, 1325, 1326, 1329, 1330, 1336, 1346, 1349, 1350, 1354, 1358, 1360, 1366, 1367, 1368, 1371, 1373, 1374, 1382, 1386, 1394, 1395, 1404, 1405, 1412, 1414, 1426, 1430, 1431, 1433, 1443, 1444, 1447, 1452, 1455, 1458, 1463, 1475], "source_fil": [1328, 1350], "source_index": [431, 1443], "source_info": 254, "source_info_util": [254, 504, 1326, 1360], "source_lin": 1350, "source_path": 1328, "sourceinfo": 254, "sp": 1445, "sp_mat": 209, "space": [142, 182, 289, 295, 491, 568, 574, 680, 694, 697, 727, 729, 757, 815, 827, 954, 1029, 1036, 1063, 1106, 1141, 1181, 1182, 1257, 1258, 1259, 1302, 1313, 1325, 1326, 1373, 1437, 1448, 1449, 1455, 1456, 1457, 1458, 1459, 1460, 1475], "spam": [1326, 1466], "span": [29, 1003, 1004, 1312, 1404, 1410, 1434, 1447, 1468], "sparingli": 1458, "sparr": 206, "spars": [547, 548, 747, 836, 837, 868, 1326, 1369, 1426, 1454, 1457, 1459, 1464], "sparse_format": [232, 233], "sparse_mask_data": 1462, "sparse_mask_matmul": 1462, "sparse_plu": 548, "sparsecor": 1326, "sparseefficiencyerror": 219, "sparsif": 238, "sparsify_mask": 1462, "sparsiti": [206, 234, 240, 1385, 1452, 1462], "spatial": [291, 292, 343, 344, 345, 346, 347, 529, 1326, 1341, 1395, 1439, 1443], "spatial_dim": 292, "spawn": 1471, "speak": [1349, 1414, 1426, 1456], "spec": [153, 194, 250, 1256, 1338, 1350, 1368, 1373, 1382, 1395, 1404, 1410, 1414, 1415, 1430, 1431, 1440, 1441, 1443, 1447, 1449, 1453, 1458, 1468], "spec_detect_method": 99, "special": [67, 69, 75, 78, 81, 99, 435, 453, 456, 499, 506, 518, 519, 520, 521, 522, 523, 534, 580, 615, 742, 746, 772, 798, 801, 853, 898, 917, 927, 990, 1106, 1283, 1303, 1313, 1315, 1318, 1326, 1328, 1331, 1332, 1335, 1337, 1339, 1343, 1346, 1348, 1349, 1351, 1360, 1382, 1402, 1405, 1411, 1414, 1415, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1429, 1432, 1435, 1436, 1437, 1442, 1445, 1447, 1449, 1452, 1457, 1458, 1460, 1465, 1466, 1470, 1474], "special2": 1415, "special_flatten": [1465, 1474], "special_unflatten": [1465, 1474], "specici": 642, "specif": [62, 67, 92, 98, 99, 182, 232, 233, 235, 251, 262, 283, 337, 343, 344, 346, 360, 361, 379, 380, 424, 452, 487, 503, 559, 564, 565, 650, 700, 832, 834, 838, 849, 850, 852, 854, 856, 857, 858, 879, 881, 883, 884, 887, 892, 912, 914, 942, 944, 983, 990, 998, 1074, 1092, 1093, 1135, 1304, 1312, 1313, 1315, 1326, 1328, 1329, 1331, 1335, 1339, 1340, 1342, 1343, 1346, 1350, 1351, 1354, 1356, 1358, 1367, 1368, 1374, 1380, 1381, 1382, 1385, 1386, 1395, 1402, 1404, 1409, 1411, 1412, 1414, 1417, 1418, 1419, 1425, 1427, 1433, 1435, 1437, 1438, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1451, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1465, 1466, 1468, 1474, 1475], "specifi": [9, 10, 12, 22, 57, 67, 74, 76, 92, 99, 102, 127, 131, 140, 155, 172, 173, 182, 184, 202, 207, 212, 213, 215, 216, 219, 224, 225, 226, 228, 229, 230, 232, 233, 237, 241, 244, 250, 251, 262, 277, 281, 282, 283, 289, 290, 292, 293, 295, 296, 305, 306, 331, 344, 345, 349, 362, 364, 365, 367, 372, 373, 375, 380, 387, 397, 411, 412, 415, 423, 440, 441, 442, 443, 445, 446, 448, 450, 452, 455, 456, 469, 472, 473, 476, 482, 483, 484, 487, 501, 502, 503, 504, 506, 531, 539, 550, 560, 565, 566, 567, 568, 576, 577, 579, 580, 582, 588, 591, 598, 600, 612, 613, 614, 615, 616, 621, 622, 623, 628, 629, 630, 633, 636, 637, 640, 641, 642, 644, 645, 648, 650, 651, 654, 655, 656, 657, 663, 665, 666, 667, 668, 669, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 701, 708, 714, 717, 719, 721, 722, 723, 724, 727, 729, 734, 735, 736, 737, 738, 740, 741, 742, 743, 749, 750, 757, 758, 760, 763, 765, 773, 780, 788, 790, 792, 793, 796, 798, 801, 803, 809, 810, 811, 814, 827, 828, 832, 838, 845, 846, 847, 848, 849, 852, 853, 855, 858, 860, 861, 863, 864, 869, 870, 872, 873, 875, 876, 877, 881, 883, 884, 887, 890, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 905, 906, 907, 908, 909, 910, 912, 913, 915, 916, 919, 920, 923, 924, 933, 934, 937, 940, 941, 944, 945, 946, 947, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 962, 965, 971, 972, 973, 974, 975, 976, 977, 982, 989, 990, 991, 992, 998, 1012, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1057, 1060, 1062, 1064, 1066, 1067, 1070, 1071, 1073, 1077, 1082, 1085, 1086, 1087, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1203, 1238, 1239, 1244, 1246, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1274, 1279, 1302, 1304, 1313, 1321, 1324, 1326, 1328, 1331, 1334, 1343, 1348, 1349, 1350, 1354, 1360, 1373, 1382, 1385, 1395, 1399, 1404, 1405, 1411, 1414, 1419, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1435, 1439, 1440, 1441, 1442, 1447, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1473, 1474, 1475], "spectral": [1098, 1103, 1326], "spectrum": [682, 683, 688, 1098, 1102, 1103], "speed": [18, 92, 1088, 1312, 1323, 1326, 1328, 1337, 1339, 1352, 1353, 1358, 1382, 1395, 1419, 1429, 1431, 1435, 1442, 1443, 1455, 1457, 1462, 1469, 1474], "speedi": 1460, "speedup": [506, 667, 1413, 1435, 1442, 1457], "spell": 1431, "spend": [1326, 1429, 1455, 1460], "spent": [1353, 1455, 1475], "sph_harm": [1326, 1418], "sph_harm_i": 1149, "spheric": [1108, 1140, 1149], "sphinx": 1414, "spill": [1452, 1457], "spiral": 1326, "spirit": 1431, "spivak": [1320, 1437], "splash": 1462, "splat": 1452, "split": [132, 133, 276, 277, 281, 282, 303, 343, 456, 510, 586, 662, 667, 715, 739, 800, 811, 980, 988, 1013, 1028, 1033, 1073, 1313, 1320, 1326, 1341, 1342, 1350, 1353, 1402, 1416, 1421, 1424, 1425, 1427, 1434, 1435, 1437, 1440, 1441, 1442, 1444, 1445, 1448, 1456, 1460, 1461, 1462, 1466, 1468, 1469], "split_axi": [304, 1443], "split_dict": 1326, "split_half": 1318, "split_list": [1318, 1326], "split_list_check": 1326, "split_merg": 1326, "splitlin": 1318, "splittabl": [1421, 1466], "spmd": [194, 305, 306, 491, 998, 1318, 1326, 1351, 1353, 1373, 1382, 1415, 1456, 1458, 1468], "spmd_axis_nam": [1304, 1326], "spmd_pipelin": 1443, "spoiler": 1417, "spong": 1328, "spot": [1416, 1453], "spread": [1341, 1382], "spuriou": [1328, 1346], "sq_err": 1443, "sqeez": 940, "sqrt": [298, 331, 455, 506, 508, 529, 549, 550, 555, 570, 572, 617, 636, 741, 939, 1038, 1042, 1055, 1115, 1116, 1135, 1142, 1149, 1228, 1230, 1240, 1241, 1244, 1246, 1313, 1320, 1334, 1349, 1350, 1433, 1434, 1437, 1443, 1474], "sqrt_a": 1088, "sqrtm": 1326, "squar": [84, 235, 306, 331, 395, 397, 398, 399, 405, 408, 455, 476, 479, 506, 526, 617, 652, 676, 696, 743, 785, 789, 793, 794, 797, 803, 879, 883, 887, 914, 938, 1072, 1077, 1088, 1106, 1175, 1176, 1177, 1178, 1179, 1180, 1313, 1326, 1350, 1360, 1411, 1418, 1433, 1437, 1469], "square_add_lax": 1360, "square_add_numpi": 1360, "square_add_prim": 1360, "squareplu": [1326, 1349], "squash": 1329, "squeez": [140, 215, 434, 450, 598, 673, 907, 1326, 1453, 1455, 1457], "squeeze_p": 1385, "sram": [1455, 1456, 1461], "src": [96, 172, 173, 388, 1318, 1443, 1458], "src_devic": 102, "src_ref": 1458, "sreg": 1461, "ssh": [1431, 1464], "stabil": [244, 996, 997, 1106, 1140, 1316, 1326, 1328, 1343, 1350, 1352, 1367, 1414, 1420], "stabl": [8, 51, 356, 452, 473, 579, 741, 934, 1104, 1313, 1316, 1323, 1326, 1339, 1343, 1386, 1395, 1418, 1419, 1420, 1427, 1433, 1434], "stablehlo": [298, 301, 313, 321, 322, 323, 324, 325, 331, 332, 334, 336, 340, 348, 349, 359, 368, 372, 373, 375, 377, 382, 383, 386, 389, 391, 392, 411, 412, 414, 416, 417, 418, 419, 420, 424, 429, 430, 437, 449, 454, 455, 465, 466, 467, 468, 469, 476, 480, 482, 483, 1312, 1315, 1318, 1326, 1328, 1343, 1346, 1350, 1360, 1386, 1395, 1405, 1412, 1415, 1427, 1430, 1449], "stack": [82, 138, 303, 415, 456, 504, 610, 615, 621, 623, 629, 630, 636, 641, 660, 663, 740, 749, 788, 796, 799, 814, 980, 989, 1006, 1313, 1318, 1320, 1321, 1326, 1328, 1333, 1336, 1340, 1342, 1350, 1354, 1355, 1360, 1385, 1415, 1419, 1421, 1424, 1432, 1438, 1443, 1444, 1447, 1458, 1462, 1466, 1475], "stackedbias": 1438, "stackedweight": 1438, "stackless": [1319, 1326], "stackoverflow": 1322, "stage": [68, 82, 83, 85, 113, 119, 120, 127, 160, 174, 187, 192, 193, 244, 265, 286, 424, 503, 504, 1315, 1326, 1328, 1330, 1333, 1334, 1336, 1339, 1342, 1344, 1346, 1353, 1354, 1359, 1362, 1415, 1416, 1417, 1419, 1424, 1434, 1436, 1438, 1440, 1443, 1448, 1455, 1468], "stage_param": 1443, "stageabl": 83, "stagger": 1448, "staginginterpret": 1319, "stai": [1332, 1337, 1417, 1452, 1465, 1470], "staircas": 1367, "stakehold": 1414, "stale": [1328, 1452, 1455], "stall": [1455, 1460], "stand": [235, 251, 1346, 1349, 1411, 1414, 1415, 1426, 1430, 1444, 1466, 1470], "standalon": [1325, 1326, 1339], "standard": [31, 53, 67, 69, 78, 81, 95, 96, 114, 216, 235, 289, 290, 296, 297, 492, 493, 501, 524, 527, 529, 636, 641, 645, 697, 721, 746, 749, 773, 779, 786, 845, 847, 848, 856, 858, 917, 942, 983, 998, 1029, 1036, 1038, 1042, 1053, 1070, 1149, 1239, 1244, 1246, 1275, 1302, 1303, 1304, 1313, 1320, 1326, 1328, 1329, 1335, 1336, 1339, 1342, 1349, 1350, 1351, 1374, 1382, 1385, 1395, 1414, 1418, 1419, 1422, 1425, 1426, 1430, 1433, 1437, 1444, 1449, 1458, 1461, 1462, 1463, 1471, 1473], "standard_abstract_ev": 1326, "standard_insert_pvari": 1430, "standard_naryop": 1326, "standard_primit": 1326, "standard_unop": 1326, "standin": 1351, "standpoint": 1414, "start": [71, 143, 162, 163, 213, 251, 267, 296, 335, 362, 363, 364, 366, 367, 394, 398, 471, 472, 568, 727, 807, 815, 827, 837, 868, 898, 913, 978, 1008, 1009, 1010, 1011, 1104, 1105, 1106, 1279, 1308, 1313, 1318, 1319, 1326, 1328, 1331, 1339, 1340, 1343, 1348, 1350, 1352, 1353, 1355, 1358, 1360, 1386, 1394, 1395, 1399, 1411, 1412, 1414, 1416, 1417, 1424, 1425, 1426, 1431, 1432, 1433, 1439, 1440, 1444, 1448, 1449, 1455, 1456, 1457, 1458, 1462, 1464, 1468, 1469, 1475], "start_dimens": 335, "start_idx": 1453, "start_index": [364, 367, 472], "start_index_map": [381, 1395], "start_indic": [205, 208, 213, 363, 366, 381, 457, 459, 460, 461, 462, 471, 1395, 1414, 1462], "start_indices_batching_dim": 1395, "start_serv": [1326, 1464], "start_tim": [1435, 1442], "start_trac": [1010, 1326, 1353, 1464], "starter": 1426, "startup": [1326, 1432, 1455], "stash": [1318, 1419], "stat": [1326, 1439, 1445], "stat_length": 873, "state": [65, 66, 88, 89, 91, 92, 93, 110, 111, 112, 168, 174, 311, 453, 456, 497, 552, 909, 993, 1006, 1279, 1308, 1313, 1318, 1322, 1324, 1325, 1326, 1348, 1349, 1350, 1356, 1367, 1371, 1402, 1414, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1432, 1443, 1444, 1445, 1449, 1450, 1452, 1455, 1458, 1472], "stateful_method": 1469, "statefulclass": 1469, "stateless": [452, 1342, 1447, 1469], "stateless_method": 1469, "statelessclass": 1469, "statement": [67, 75, 921, 987, 1336, 1342, 1348, 1410, 1414, 1424, 1426, 1430, 1470], "static": [63, 67, 78, 81, 114, 127, 128, 143, 205, 250, 267, 296, 363, 364, 378, 389, 430, 456, 486, 578, 580, 600, 628, 650, 655, 675, 699, 719, 758, 828, 864, 874, 881, 883, 884, 887, 906, 916, 923, 952, 971, 972, 973, 974, 975, 976, 994, 995, 996, 997, 998, 1273, 1279, 1280, 1281, 1282, 1283, 1284, 1326, 1329, 1331, 1333, 1336, 1342, 1346, 1350, 1351, 1373, 1382, 1399, 1409, 1411, 1413, 1415, 1418, 1432, 1443, 1444, 1456, 1462, 1465, 1470, 1474], "static_argnam": [296, 305, 306, 600, 650, 864, 906, 923, 971, 972, 1284, 1326, 1331, 1342, 1353, 1382, 1429, 1449, 1460, 1463, 1474], "static_argnum": [67, 127, 128, 296, 501, 994, 995, 996, 997, 1284, 1315, 1326, 1331, 1342, 1346, 1349, 1350, 1360, 1373, 1382, 1413, 1419, 1424, 1429, 1430, 1445, 1462, 1470, 1474], "static_assert": 1350, "static_broadcast_argnum": 1326, "static_broadcasted_argnum": [998, 1284, 1470], "static_cast": 348, "staticmethod": 1318, "staticscalar": 56, "staticstr": 1284, "statist": [873, 1028, 1319, 1326, 1418, 1469], "statu": [1092, 1371, 1422, 1431, 1466], "stax": [1326, 1366, 1421], "std": [550, 697, 856, 983, 1313, 1350, 1429, 1434, 1437, 1444], "stddev": [524, 527], "stdin": 1349, "stdout": [999, 1333, 1336], "steadi": 1455, "stem": [1349, 1421], "step": [160, 174, 403, 415, 568, 727, 734, 815, 827, 837, 868, 887, 898, 981, 1003, 1082, 1104, 1105, 1257, 1258, 1259, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1315, 1318, 1326, 1329, 1336, 1339, 1341, 1343, 1346, 1349, 1350, 1353, 1367, 1395, 1412, 1416, 1417, 1419, 1421, 1433, 1434, 1437, 1443, 1452, 1455, 1457, 1464, 1469, 1475], "step_num": 1003, "step_siz": [1367, 1434, 1435, 1442, 1445], "steptraceannot": 1326, "steptracecontext": 1326, "sterbenz": 1313, "stft": [1098, 1101, 1103, 1326], "stick": [1418, 1422, 1431], "sticki": [664, 1318, 1357], "still": [98, 194, 762, 771, 998, 1273, 1276, 1313, 1315, 1318, 1326, 1328, 1331, 1334, 1339, 1341, 1343, 1346, 1349, 1350, 1352, 1353, 1356, 1373, 1382, 1402, 1410, 1412, 1413, 1416, 1417, 1421, 1424, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1437, 1440, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1463, 1464, 1468, 1470, 1473], "stochast": [1019, 1367, 1466, 1474], "stop": [479, 568, 727, 815, 827, 837, 868, 898, 1010, 1104, 1105, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1331, 1343, 1353, 1426, 1452], "stop_dimens": 335, "stop_serv": 1464, "stop_trac": [1009, 1326, 1353, 1464], "storag": [219, 1326, 1356, 1385, 1395, 1434, 1463, 1468], "store": [67, 69, 81, 160, 173, 186, 195, 219, 222, 267, 296, 493, 616, 642, 816, 918, 919, 998, 1104, 1105, 1106, 1280, 1282, 1313, 1318, 1326, 1342, 1346, 1354, 1367, 1382, 1385, 1386, 1418, 1431, 1433, 1434, 1436, 1437, 1438, 1441, 1443, 1444, 1447, 1452, 1453, 1455, 1457, 1458, 1461, 1462, 1463, 1465, 1468, 1474], "stori": [1313, 1350, 1437, 1449], "storm": 1449, "str": [10, 11, 26, 42, 45, 47, 56, 77, 80, 82, 85, 90, 94, 97, 99, 119, 134, 139, 153, 160, 172, 182, 190, 192, 208, 219, 232, 233, 241, 242, 244, 248, 249, 250, 251, 254, 256, 262, 263, 265, 267, 276, 283, 284, 286, 287, 291, 292, 296, 337, 341, 343, 344, 345, 346, 347, 376, 381, 447, 457, 458, 459, 460, 461, 462, 490, 491, 495, 496, 502, 503, 504, 539, 582, 585, 588, 621, 633, 634, 637, 657, 660, 666, 667, 668, 669, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 722, 723, 724, 727, 749, 757, 763, 790, 792, 796, 801, 804, 805, 814, 815, 816, 827, 829, 836, 853, 855, 860, 869, 870, 872, 873, 875, 895, 896, 897, 901, 902, 907, 918, 919, 920, 946, 947, 950, 959, 965, 977, 984, 985, 991, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1015, 1019, 1022, 1032, 1041, 1059, 1060, 1061, 1062, 1071, 1073, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1218, 1238, 1239, 1260, 1273, 1278, 1279, 1284, 1301, 1305, 1317, 1318, 1319, 1326, 1328, 1336, 1342, 1354, 1360, 1382, 1386, 1395, 1404, 1405, 1430, 1434, 1438, 1443, 1445, 1462, 1466, 1474], "str_eqn_compact": 1326, "str_short": 1318, "straight_through_f": 1313, "straightforward": [381, 1318, 1320, 1348, 1349, 1350, 1418, 1421, 1422, 1426, 1437, 1449, 1452], "strang": [1414, 1426], "strategi": [67, 1313, 1341, 1346, 1354, 1358, 1395, 1412, 1420, 1429, 1437, 1438, 1441, 1443, 1455, 1456, 1458, 1468], "strawperson": 1417, "stream": [57, 102, 1028, 1341, 1350, 1412, 1421, 1425, 1452, 1457, 1464, 1466], "stream_executor": [1326, 1464], "strength": [1333, 1414, 1455], "stress": 1318, "stretch": 1419, "strict": [487, 628, 675, 1328, 1412, 1414, 1415, 1417, 1421, 1430], "stricter": [1414, 1430], "strictest": 1414, "strictli": [160, 421, 1338, 1346, 1350, 1353, 1429], "stride": [143, 213, 341, 343, 344, 345, 346, 347, 471, 472, 1368, 1414], "strike": 1426, "string": [85, 94, 97, 99, 119, 120, 121, 153, 182, 219, 232, 233, 246, 247, 248, 249, 250, 251, 262, 283, 291, 292, 296, 341, 342, 343, 344, 345, 347, 496, 506, 585, 587, 615, 616, 620, 664, 666, 667, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 717, 722, 757, 763, 765, 773, 796, 814, 816, 873, 883, 893, 895, 898, 918, 919, 959, 998, 999, 1001, 1002, 1006, 1012, 1013, 1033, 1059, 1060, 1061, 1062, 1196, 1273, 1278, 1284, 1313, 1316, 1318, 1319, 1326, 1328, 1336, 1339, 1343, 1346, 1350, 1373, 1382, 1386, 1395, 1402, 1404, 1405, 1409, 1414, 1423, 1433, 1463, 1467, 1473, 1474, 1475], "stringio": 1318, "strip": [914, 1319, 1339, 1350, 1414, 1440], "strip_zero": [914, 1326], "strive": [1312, 1337, 1444, 1466], "strong": [1418, 1440], "strongli": [726, 893, 1316, 1328, 1356, 1473], "struct": [664, 1318], "structur": [64, 71, 74, 81, 127, 128, 131, 182, 194, 250, 288, 290, 296, 297, 311, 356, 357, 378, 422, 456, 481, 486, 492, 501, 616, 664, 1012, 1104, 1105, 1106, 1256, 1262, 1263, 1264, 1265, 1267, 1268, 1271, 1272, 1277, 1294, 1297, 1298, 1299, 1304, 1312, 1313, 1315, 1319, 1320, 1326, 1332, 1346, 1349, 1350, 1358, 1367, 1374, 1382, 1386, 1395, 1405, 1407, 1408, 1411, 1414, 1416, 1418, 1428, 1430, 1433, 1436, 1437, 1451, 1455, 1458, 1460, 1462, 1465, 1468, 1474], "stub": 1326, "student": [1051, 1240, 1241], "studi": [1313, 1437], "studio": [1329, 1339, 1356], "stuff": [1339, 1350], "style": [298, 301, 321, 348, 359, 381, 416, 417, 418, 429, 440, 441, 442, 443, 445, 446, 448, 449, 457, 480, 591, 612, 613, 614, 784, 787, 793, 804, 806, 807, 878, 895, 896, 901, 902, 907, 987, 993, 1013, 1063, 1068, 1069, 1070, 1077, 1078, 1083, 1085, 1086, 1089, 1319, 1326, 1328, 1331, 1355, 1402, 1414, 1416, 1419, 1426, 1432, 1440, 1444, 1449, 1456, 1466], "stype": 1068, "sub": [499, 503, 586, 662, 739, 937, 955, 956, 957, 958, 960, 961, 962, 988, 1328, 1346, 1354, 1411, 1425, 1430, 1438, 1455, 1457, 1465, 1474], "sub_kei": 1445, "subarrai": [387, 946], "subclass": [62, 97, 496, 1273, 1318, 1319, 1414, 1425, 1474], "subcommand": 1326, "subcomput": 503, "subcub": [136, 137], "subdiagon": [399, 409, 1075], "subdirectori": [1339, 1427], "subdivid": 664, "subdivis": 1452, "subdtyp": 1057, "subexpress": [67, 422, 1326, 1417, 1421, 1441], "subfunct": [1331, 1430], "subgradi": 1367, "subject": [194, 198, 244, 345, 445, 446, 1385, 1402, 1449, 1457, 1475], "subkei": [1313, 1320, 1402, 1424, 1425, 1437, 1444, 1466], "subkey1": [1313, 1437], "subkey2": [1313, 1437], "sublan": 1457, "sublanguag": 1424, "sublevel": 1326, "submesh": 132, "submiss": 1413, "submit": [1329, 1339, 1358], "submodul": [264, 285, 1326, 1349, 1350, 1409, 1414, 1418, 1427, 1447], "subnorm": [697, 1432], "subpackag": 1474, "subplot": [1426, 1439], "subproblem": 1455, "subroutin": 1421, "subscrib": 1464, "subscriber_": 1464, "subscript": [666, 667], "subsequ": [1267, 1315, 1324, 1326, 1339, 1348, 1349, 1354, 1412, 1429, 1432, 1438, 1455, 1457, 1458, 1463, 1469], "subset": [244, 305, 306, 506, 998, 1313, 1326, 1343, 1350, 1414, 1415, 1431, 1443, 1455, 1457], "subset_by_index": [398, 406, 807], "subspac": [234, 235, 240, 1106], "substanti": [1339, 1455], "substitut": 844, "substitute_vars_in_output_ti": 1326, "substrat": 1449, "subsum": [1326, 1410, 1417, 1426], "subtl": [1326, 1331, 1349, 1412, 1414, 1422, 1425, 1448, 1452, 1455, 1458], "subtleti": [1319, 1342], "subtli": 1349, "subtract": [10, 480, 860, 1346], "subtrahend": 886, "subtre": [194, 1256, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1367, 1382], "subtree_def": 1367, "subtyp": [602, 780, 910], "subunit": 1457, "subval": 1326, "succe": [1346, 1360], "succeed": 1092, "success": [1017, 1031, 1092, 1350, 1418, 1449, 1469], "successfulli": [1328, 1356, 1431, 1458], "succinctli": [673, 1360, 1414], "sudo": [1326, 1464], "suffer": 1443, "suffic": [1313, 1416, 1433], "suffici": [397, 404, 1313, 1326, 1328, 1356, 1414, 1427, 1433, 1439, 1448, 1452, 1455, 1458, 1460], "suffix": [1395, 1457, 1471], "sugar": [987, 1326, 1432], "suggest": [378, 726, 1326, 1358, 1373, 1414, 1418, 1419, 1440, 1448, 1463], "suit": [1326, 1350, 1356, 1414, 1418, 1452, 1473], "suitabl": [99, 132, 953, 1066, 1079, 1326, 1414, 1418], "sum": [20, 58, 113, 195, 206, 211, 216, 301, 311, 355, 433, 445, 446, 457, 458, 460, 461, 462, 475, 534, 545, 566, 567, 598, 600, 645, 647, 656, 665, 666, 735, 736, 738, 794, 801, 809, 822, 832, 834, 838, 848, 849, 850, 852, 854, 857, 880, 882, 883, 885, 886, 892, 906, 950, 952, 954, 965, 997, 998, 1063, 1135, 1138, 1147, 1313, 1318, 1319, 1320, 1321, 1326, 1342, 1346, 1350, 1354, 1385, 1409, 1411, 1418, 1419, 1431, 1432, 1433, 1434, 1437, 1438, 1440, 1441, 1443, 1444, 1445, 1455, 1457, 1460, 1462, 1466, 1468], "sum_": [641, 742, 1024, 1129, 1130, 1132, 1135, 1152, 1153, 1235, 1350], "sum_i": [534, 1138, 1219, 1220], "sum_in_shard": 1468, "sum_j": [533, 545, 633, 637, 1136, 1147], "sum_k": 1460, "sum_logist": 1444, "sum_of_posit": 1342, "summar": [1313, 1318, 1339, 1402, 1414, 1417, 1426, 1437], "summari": [1333, 1334, 1335, 1336, 1349, 1356, 1402, 1405, 1418, 1427, 1428, 1440, 1443, 1468], "summat": [446, 666, 871, 1385, 1468], "summed_chunk": 1443, "summer": [1313, 1437], "sumpool": 1368, "supercomput": 1457, "superdiagon": 409, "superset": 253, "supplement": 1449, "suppli": [77, 80, 878, 1104, 1105, 1149, 1315, 1325, 1418, 1440, 1455, 1461, 1468], "support": [73, 75, 99, 102, 153, 202, 205, 218, 235, 236, 248, 249, 262, 265, 283, 286, 290, 301, 337, 359, 363, 378, 404, 418, 457, 480, 492, 499, 506, 539, 540, 558, 579, 582, 588, 601, 606, 608, 616, 617, 657, 666, 667, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 716, 734, 741, 742, 765, 768, 769, 797, 804, 823, 825, 826, 836, 843, 873, 888, 895, 901, 907, 918, 927, 934, 943, 978, 987, 994, 995, 996, 997, 998, 1059, 1060, 1061, 1062, 1071, 1081, 1082, 1083, 1088, 1091, 1093, 1095, 1097, 1099, 1115, 1116, 1117, 1122, 1123, 1124, 1127, 1144, 1218, 1221, 1222, 1238, 1239, 1305, 1312, 1313, 1318, 1321, 1322, 1323, 1326, 1327, 1328, 1334, 1339, 1342, 1344, 1348, 1349, 1353, 1360, 1382, 1383, 1385, 1386, 1395, 1399, 1402, 1405, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1418, 1419, 1421, 1423, 1425, 1426, 1428, 1430, 1431, 1432, 1437, 1441, 1444, 1446, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1469, 1473, 1474, 1475], "supported_lhs_typ": 1395, "supported_output_typ": 1395, "supported_rhs_typ": 1395, "supported_shard": 1373, "supportsdtyp": [582, 588, 660, 666, 668, 669, 723, 724, 727, 749, 815, 827, 829, 869, 870, 950, 984, 985, 991, 992, 1301], "supportsjaxarrai": 1422, "supportsndim": 861, "supportss": 933, "supportsshap": [925, 933, 958, 962], "suppos": [99, 433, 800, 1315, 1319, 1321, 1341, 1348, 1429, 1440, 1455, 1456, 1458, 1460, 1465, 1469], "suppress": [337, 563, 569, 570, 571, 572, 573, 574, 575, 585, 587, 599, 609, 617, 619, 638, 639, 671, 674, 678, 679, 681, 683, 684, 685, 686, 689, 690, 691, 692, 693, 695, 698, 710, 727, 729, 732, 733, 741, 776, 818, 827, 856, 858, 883, 929, 930, 932, 938, 942, 948, 949, 964, 983, 1059, 1060, 1061, 1062, 1075, 1082, 1084, 1088, 1099, 1239, 1328, 1349, 1417], "suppress_smal": [585, 587], "supremum": 1426, "sure": [1022, 1313, 1320, 1328, 1329, 1332, 1339, 1341, 1349, 1353, 1356, 1358, 1360, 1382, 1417, 1419, 1429, 1434, 1437, 1448, 1455, 1458, 1460, 1464, 1465], "surfac": [1414, 1415, 1418, 1449], "surnam": 664, "surpris": [363, 1317, 1336, 1349, 1350, 1354, 1417, 1426, 1429, 1432, 1438, 1443, 1452, 1467], "surprisingli": [1317, 1421], "surround": [246, 247, 1312], "survei": 1439, "surviv": [1160, 1162, 1168, 1171, 1174, 1178, 1180, 1186, 1188, 1189, 1193, 1195, 1213, 1217, 1226, 1229, 1232, 1245, 1247], "sussman": [1320, 1437], "sustain": 1418, "svc": 1431, "svd": [394, 798, 808, 1041, 1082, 1326], "svdalgorithm": 406, "svdresult": 807, "svg": 1452, "swap": [55, 146, 346, 401, 402, 435, 842, 913, 945, 953, 1149, 1318, 1425, 1443], "swap_thread_local_state_disable_jit": 1430, "swapax": [842, 913, 953, 1460], "sweep": 1460, "swiglu": 1415, "swish": [512, 513, 543], "swish2": 1415, "switch": [424, 621, 877, 883, 1313, 1323, 1326, 1331, 1339, 1341, 1354, 1385, 1411, 1413, 1415, 1417, 1420, 1425, 1432, 1434, 1437, 1438, 1448, 1452], "swizzl": [165, 1452], "swizzle_byt": 1452, "swizzle_elem": 1452, "swizzle_in_byt": 1452, "swizzletransform": 1452, "sy": [1317, 1326, 1431], "sylvest": 1088, "sym": 1086, "sym_po": 1326, "symamd": 236, "symbol": [78, 81, 241, 245, 250, 251, 1129, 1144, 1326, 1328, 1339, 1416, 1419, 1422, 1464], "symbol_t": [1318, 1360], "symbolic_args_spec": [1326, 1346], "symbolic_constraint": 1326, "symbolic_equal_dim": 1326, "symbolic_scop": 1326, "symbolic_shap": [250, 1326, 1346], "symbolic_zero": [78, 81], "symbolicscop": [250, 251, 1346], "symbolt": [1318, 1360], "symmetr": [356, 395, 398, 407, 409, 506, 637, 784, 789, 790, 791, 792, 873, 1071, 1081, 1085, 1086, 1106, 1313, 1326, 1437, 1458], "symmetri": [683, 688, 1106], "symmetrize_input": [395, 398, 784, 790, 792], "symmetrize_output": 407, "sympi": 1435, "symptom": 1458, "symrcm": 236, "sync": [1329, 1332, 1358, 1448, 1458, 1465], "sync_copi": 1461, "synchron": [158, 160, 182, 189, 1326, 1336, 1348, 1349, 1377, 1424, 1447, 1451, 1464, 1466], "synonym": 1431, "syntact": [987, 1319, 1326, 1432], "syntax": [10, 85, 362, 364, 381, 457, 458, 459, 460, 461, 462, 471, 746, 747, 836, 860, 878, 895, 917, 946, 947, 1318, 1328, 1411, 1414, 1417, 1430, 1444, 1449, 1461], "synthet": 1439, "system": [82, 91, 99, 100, 236, 357, 410, 539, 806, 1006, 1067, 1079, 1080, 1086, 1087, 1104, 1105, 1106, 1312, 1313, 1318, 1320, 1326, 1328, 1339, 1343, 1346, 1349, 1350, 1356, 1402, 1412, 1414, 1416, 1419, 1420, 1426, 1431, 1432, 1433, 1436, 1437, 1440, 1441, 1443, 1449, 1463, 1465, 1471, 1473], "sz": [1415, 1443], "t": [67, 68, 75, 77, 78, 83, 84, 85, 96, 119, 127, 132, 133, 160, 174, 235, 238, 248, 249, 306, 337, 396, 402, 407, 456, 479, 486, 506, 673, 784, 804, 807, 830, 842, 901, 907, 913, 940, 942, 945, 953, 983, 998, 1004, 1005, 1009, 1010, 1011, 1041, 1068, 1070, 1075, 1082, 1083, 1084, 1085, 1087, 1089, 1090, 1101, 1102, 1111, 1115, 1116, 1118, 1119, 1121, 1123, 1124, 1125, 1126, 1142, 1148, 1221, 1222, 1269, 1273, 1275, 1280, 1282, 1293, 1303, 1313, 1317, 1318, 1319, 1320, 1323, 1326, 1329, 1331, 1333, 1334, 1336, 1339, 1341, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1357, 1358, 1360, 1385, 1395, 1410, 1412, 1413, 1416, 1417, 1418, 1419, 1421, 1423, 1424, 1425, 1426, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1449, 1450, 1452, 1455, 1456, 1460, 1462, 1463, 1464, 1465, 1466, 1469, 1474, 1475], "t0": 1412, "t1": [1318, 1412, 1426], "t10k": 1435, "t2": [1318, 1426], "t2v": 1318, "t5x": 1413, "t_jaxpr1": 1318, "t_jaxpr2": 1318, "t_new": 1343, "t_nre": 1318, "t_out_uk": 1318, "t_ref": 1318, "ta": 1419, "tab": 1340, "tabl": [719, 1333, 1354, 1356, 1415, 1417, 1436, 1438, 1440, 1443, 1461, 1468, 1473], "tag": [276, 1318, 1339, 1343], "taggeddualnumb": 1319, "tagless": 1318, "take": [67, 69, 79, 81, 84, 99, 120, 127, 128, 137, 194, 234, 240, 244, 249, 268, 357, 408, 498, 499, 502, 506, 537, 538, 539, 566, 578, 655, 719, 721, 786, 796, 801, 812, 814, 828, 874, 895, 896, 947, 952, 972, 987, 1011, 1074, 1135, 1196, 1256, 1267, 1268, 1280, 1282, 1312, 1315, 1316, 1318, 1319, 1323, 1326, 1331, 1339, 1340, 1341, 1343, 1346, 1348, 1349, 1350, 1351, 1354, 1360, 1366, 1368, 1371, 1373, 1386, 1398, 1399, 1411, 1412, 1414, 1415, 1417, 1418, 1422, 1423, 1426, 1429, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1447, 1448, 1449, 1453, 1455, 1456, 1457, 1458, 1460, 1464, 1465, 1467, 1468, 1471, 1474], "take_along_axi": [579, 896, 946, 1326], "taken": [362, 364, 365, 367, 381, 449, 464, 475, 718, 720, 814, 990, 1267, 1315, 1326, 1340, 1350, 1449, 1465, 1466], "talk": [1412, 1457, 1461], "tall": [1313, 1437], "tan": [312, 313, 337, 349, 469, 573, 574, 638, 929, 949, 1360], "tandem": 1349, "tangent": [67, 77, 78, 79, 188, 297, 299, 300, 309, 310, 312, 313, 314, 337, 349, 350, 357, 469, 470, 482, 483, 493, 569, 570, 571, 572, 573, 574, 575, 638, 639, 929, 932, 948, 949, 1313, 1318, 1319, 1326, 1348, 1350, 1354, 1360, 1419, 1433, 1437, 1438, 1440], "tangent_out": [77, 78, 1313, 1318, 1433], "tangent_pvals_in": 1318, "tangent_solv": 357, "tangenti": 1318, "tangentof": 1440, "tangents_flat": 1318, "tangents_in": 1318, "tangents_in_flat": 1318, "tangents_out": [297, 1318], "tangents_out_flat": 1318, "tanh": [114, 188, 289, 314, 350, 470, 508, 514, 535, 575, 639, 932, 1313, 1320, 1326, 1385, 1436, 1437, 1457], "tanh_p": 1436, "tao": [1313, 1433], "tap": 1326, "taper": [1098, 1101, 1102, 1103], "tar": 1339, "tarbal": 1339, "target": [61, 69, 201, 211, 262, 263, 265, 283, 284, 286, 287, 305, 306, 327, 348, 499, 506, 1305, 1312, 1313, 1315, 1320, 1326, 1339, 1341, 1343, 1350, 1351, 1379, 1386, 1415, 1417, 1426, 1431, 1432, 1434, 1435, 1437, 1442, 1443, 1448, 1449, 1452, 1458, 1475], "target_class": [1435, 1442], "target_cpu_featur": 1326, "target_devic": 1458, "target_info": 1350, "target_nam": [262, 283, 1350, 1386], "target_shap": 1318, "task": [1318, 1353, 1419, 1431, 1457, 1463, 1464], "tast": 1444, "tau": [399, 400, 409], "taylor": 1374, "tb": [1339, 1360, 1464], "tbp": 1464, "tc": [158, 1084], "td": 1313, "td_loss": 1313, "td_updat": 1313, "teach": 1349, "team": [1312, 1356, 1414, 1418, 1420, 1424], "teardown": 1455, "technic": [311, 1312, 1412, 1427, 1431, 1443, 1452, 1460], "techniqu": [1135, 1313, 1351, 1353, 1415, 1437, 1441, 1444, 1455, 1459, 1468], "technologi": 1312, "ted": [84, 1318, 1335, 1412, 1434, 1460], "tediou": [1319, 1350, 1426], "tee": 1464, "teeth": [1333, 1432], "tell": [503, 504, 1319, 1331, 1342, 1350, 1353, 1371, 1410, 1417, 1424, 1429, 1432, 1440, 1448, 1449, 1458, 1460, 1462, 1465], "temp": 1411, "tempfil": [918, 919], "templat": [1350, 1431, 1459], "tempor": 1313, "temporari": [182, 1326, 1328, 1358, 1414, 1424, 1429, 1444, 1447, 1464], "temporarili": [129, 130, 1318, 1319, 1326, 1339, 1353, 1357, 1410, 1415, 1424, 1440, 1461], "temporaryfil": [918, 919], "tempt": [574, 1319, 1349, 1418], "ten": [1349, 1452, 1457], "tend": [920, 1337, 1349, 1354, 1418, 1438, 1452], "tendenc": [1426, 1432], "tensor": [101, 102, 158, 499, 506, 529, 536, 539, 666, 716, 749, 795, 809, 810, 811, 813, 829, 950, 1315, 1343, 1350, 1351, 1360, 1435, 1439, 1442, 1452, 1458], "tensorboard": [503, 504, 1003, 1005, 1008, 1009, 1011, 1326, 1340], "tensorcor": [1451, 1456, 1461, 1475], "tensordot": [361, 666, 749, 795, 810, 811, 813, 829, 1313, 1437], "tensorfloat32": [92, 1328, 1395], "tensorflow": [76, 343, 344, 345, 346, 452, 503, 504, 994, 995, 996, 997, 1008, 1314, 1326, 1341, 1343, 1344, 1349, 1351, 1352, 1355, 1439, 1464], "tensorflow_dataset": 1442, "tensorflow_prob": 1418, "tensorinv": 811, "tensorsolv": 810, "term": [312, 313, 373, 378, 415, 424, 482, 493, 568, 800, 807, 830, 842, 877, 901, 907, 921, 945, 946, 947, 953, 987, 990, 1109, 1279, 1284, 1313, 1318, 1319, 1326, 1331, 1339, 1341, 1342, 1343, 1348, 1360, 1402, 1411, 1414, 1416, 1418, 1419, 1420, 1421, 1422, 1424, 1426, 1429, 1430, 1431, 1433, 1437, 1443, 1444, 1452, 1455, 1456, 1457, 1458, 1462, 1465], "termcolor": [1358, 1434], "termin": [403, 1082, 1093, 1106], "terminologi": [1318, 1343, 1449], "test": [3, 4, 559, 564, 765, 918, 1036, 1276, 1313, 1316, 1318, 1326, 1343, 1346, 1350, 1353, 1356, 1358, 1402, 1412, 1413, 1414, 1419, 1422, 1424, 1425, 1427, 1431, 1435, 1442, 1444, 1449, 1455, 1456, 1460, 1461], "test2": 1358, "test_acc": [1435, 1442], "test_bas": 1343, "test_computation_follows_data": 1357, "test_data": [1435, 1442], "test_el": 765, "test_env": 1339, "test_imag": [1435, 1442], "test_label": [1435, 1442], "test_runn": 1358, "test_runner2": 1358, "test_simple_unari": 1346, "test_tag_filt": 1339, "test_target": 1339, "test_undeclared_outputs_dir": 1328, "test_util": [1316, 1320, 1326, 1354, 1359, 1437], "testcas": 1326, "testlogsumexp": 1329, "testpad": 1339, "text": [333, 585, 587, 717, 722, 919, 1315, 1328, 1339, 1354, 1405, 1426, 1429, 1438], "textrm": 1331, "texttt": 1374, "textwrap": 1434, "tf": [76, 1313, 1326, 1328, 1331, 1341, 1352, 1386, 1426, 1437, 1439, 1442, 1464], "tf1": [1352, 1419], "tf2": 1352, "tf32_tf32_f32": [1328, 1395], "tf32_tf32_f32_x3": [1328, 1395], "tf_cpp_min_log_level": 1353, "tf_cpp_vmodul": 1346, "tf_cuda_malloc_async_supported_prealloc": 1352, "tf_dtype": 1426, "tf_dtype_to_cod": 1426, "tf_gpu_alloc": 1352, "tf_xla_call_module_disabled_check": 1386, "tf_xla_flag": 1386, "tfd": 1442, "tflop": 1460, "tfrt": 1326, "tfrt_cpu_0": [1343, 1431, 1443], "tfrt_cpu_1": [1343, 1431, 1443], "tfrt_cpu_131072": 1431, "tfrt_cpu_131073": 1431, "tfrt_cpu_2": [1343, 1431, 1443], "tfrt_cpu_262144": 1431, "tfrt_cpu_262145": 1431, "tfrt_cpu_3": [1343, 1431, 1443], "tfrt_cpu_393216": 1431, "tfrt_cpu_393217": 1431, "tfrt_cpu_4": 1431, "tfrt_cpu_5": 1431, "tfrt_cpu_6": 1431, "tfrt_cpu_7": 1431, "tgz": 1339, "th": [218, 233, 311, 656, 665, 1374, 1455], "than": [9, 10, 67, 99, 160, 177, 179, 194, 197, 199, 216, 219, 244, 263, 284, 303, 346, 356, 368, 382, 383, 392, 397, 402, 414, 419, 434, 449, 547, 548, 566, 578, 585, 587, 591, 600, 619, 622, 660, 673, 674, 697, 710, 746, 749, 758, 762, 771, 773, 794, 798, 819, 830, 842, 860, 864, 874, 875, 901, 906, 907, 908, 913, 917, 923, 924, 940, 945, 947, 953, 971, 972, 973, 974, 975, 976, 981, 987, 998, 999, 1019, 1022, 1052, 1059, 1061, 1091, 1104, 1105, 1256, 1275, 1278, 1304, 1313, 1316, 1317, 1318, 1319, 1323, 1324, 1326, 1328, 1329, 1331, 1333, 1334, 1336, 1337, 1338, 1341, 1342, 1343, 1348, 1350, 1353, 1354, 1357, 1395, 1408, 1410, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1424, 1425, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1469, 1470, 1473], "thank": [1412, 1448], "the_one_and_only_axi": 1353, "theano": 1313, "thei": [10, 67, 69, 99, 127, 193, 250, 251, 296, 363, 366, 457, 527, 636, 641, 660, 860, 877, 878, 895, 910, 919, 965, 972, 987, 990, 998, 1087, 1104, 1105, 1273, 1312, 1313, 1315, 1316, 1318, 1319, 1320, 1324, 1325, 1326, 1328, 1329, 1336, 1337, 1339, 1343, 1346, 1348, 1349, 1354, 1356, 1357, 1360, 1371, 1382, 1386, 1395, 1399, 1402, 1404, 1408, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1440, 1441, 1443, 1447, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1461, 1462, 1465, 1466, 1469, 1470, 1474, 1475], "them": [67, 69, 83, 101, 102, 171, 182, 193, 238, 296, 304, 479, 568, 610, 716, 815, 847, 848, 853, 855, 919, 990, 998, 1019, 1302, 1312, 1313, 1316, 1318, 1319, 1322, 1326, 1332, 1333, 1334, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1360, 1366, 1367, 1382, 1385, 1399, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1429, 1431, 1432, 1434, 1435, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1465, 1468, 1469, 1470, 1474, 1475], "theme": [1339, 1452], "themselv": [527, 919, 1313, 1318, 1320, 1325, 1360, 1426, 1428, 1431, 1433, 1444, 1453, 1458, 1470], "then_valu": 1353, "theorem": [357, 1313, 1433], "theoret": [667, 1072, 1123, 1462], "therefor": [83, 345, 919, 998, 1106, 1341, 1350, 1354, 1360, 1395, 1414, 1426, 1429, 1432, 1448, 1455, 1456, 1458, 1460, 1461, 1462], "thereof": [67, 69, 78, 81, 95, 96, 290, 296, 339, 456, 486, 493, 501, 666, 998, 1303, 1304, 1382, 1418, 1456], "theta": [235, 574, 981, 1140, 1149, 1313], "theta_out": 981, "thi": [9, 10, 14, 18, 21, 29, 30, 61, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 94, 96, 97, 98, 99, 102, 106, 107, 111, 112, 113, 114, 119, 120, 121, 127, 128, 132, 133, 136, 137, 155, 158, 160, 172, 173, 178, 182, 187, 194, 197, 199, 212, 216, 219, 235, 246, 247, 248, 249, 251, 262, 263, 264, 267, 283, 284, 285, 287, 291, 292, 296, 298, 299, 300, 301, 303, 304, 305, 306, 309, 310, 312, 313, 314, 321, 322, 323, 324, 325, 328, 331, 332, 334, 336, 337, 339, 340, 345, 346, 348, 349, 350, 356, 357, 359, 360, 361, 362, 363, 364, 368, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 386, 387, 389, 391, 392, 397, 403, 404, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 435, 437, 449, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 472, 475, 476, 479, 480, 481, 482, 483, 486, 487, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 527, 529, 533, 539, 540, 545, 547, 548, 553, 555, 558, 560, 566, 567, 568, 574, 578, 580, 582, 584, 587, 588, 591, 600, 601, 606, 608, 610, 616, 621, 623, 628, 629, 630, 634, 636, 641, 642, 646, 647, 650, 651, 654, 655, 660, 663, 664, 666, 667, 670, 671, 673, 675, 683, 696, 697, 699, 711, 717, 718, 720, 726, 729, 740, 746, 749, 757, 758, 759, 760, 772, 773, 779, 784, 789, 790, 791, 792, 794, 795, 797, 800, 801, 806, 810, 816, 823, 824, 825, 826, 828, 830, 837, 842, 843, 845, 846, 860, 861, 864, 865, 868, 874, 878, 893, 895, 896, 901, 902, 906, 907, 910, 913, 914, 917, 918, 919, 920, 921, 923, 924, 925, 927, 930, 933, 940, 943, 945, 946, 947, 953, 965, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 984, 987, 989, 990, 998, 999, 1001, 1002, 1003, 1004, 1005, 1009, 1011, 1012, 1013, 1019, 1022, 1023, 1029, 1032, 1033, 1036, 1040, 1043, 1066, 1067, 1072, 1073, 1074, 1079, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1093, 1098, 1099, 1101, 1103, 1106, 1116, 1122, 1128, 1129, 1135, 1136, 1140, 1143, 1147, 1148, 1149, 1150, 1151, 1240, 1241, 1257, 1258, 1259, 1268, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1304, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1360, 1367, 1368, 1371, 1373, 1375, 1382, 1385, 1386, 1387, 1395, 1398, 1399, 1402, 1404, 1405, 1408, 1409, 1410, 1411, 1412, 1414, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475], "thin": [85, 1281, 1283, 1336, 1350, 1395, 1452], "thing": [110, 1313, 1318, 1319, 1320, 1323, 1328, 1329, 1331, 1336, 1339, 1341, 1350, 1354, 1356, 1385, 1414, 1415, 1416, 1417, 1419, 1420, 1423, 1424, 1426, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1444, 1448, 1449, 1457, 1460, 1468, 1469], "think": [434, 1313, 1318, 1319, 1322, 1324, 1339, 1341, 1399, 1411, 1412, 1414, 1415, 1419, 1420, 1423, 1424, 1426, 1427, 1430, 1432, 1433, 1434, 1437, 1440, 1443, 1448, 1449, 1452, 1456, 1457, 1458, 1460, 1461, 1469], "thinking_in_jax": [1323, 1339], "third": [663, 1312, 1319, 1326, 1350, 1360, 1414, 1426, 1432, 1443, 1457], "third_parti": 1410, "thorough": [1313, 1354, 1433, 1438], "those": [67, 98, 99, 113, 114, 182, 378, 492, 499, 501, 529, 539, 772, 798, 958, 962, 998, 1090, 1091, 1256, 1304, 1313, 1318, 1319, 1324, 1326, 1329, 1334, 1336, 1339, 1343, 1346, 1349, 1350, 1354, 1356, 1358, 1360, 1382, 1386, 1395, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1423, 1424, 1426, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1443, 1448, 1452, 1456, 1457, 1458, 1461, 1463, 1468, 1470, 1473], "though": [99, 499, 566, 610, 836, 907, 1001, 1312, 1313, 1315, 1318, 1319, 1326, 1341, 1346, 1348, 1354, 1399, 1411, 1412, 1414, 1415, 1417, 1419, 1421, 1426, 1428, 1429, 1433, 1434, 1437, 1438, 1440, 1443, 1449, 1452, 1457, 1460, 1462, 1470], "thought": [998, 1313, 1414, 1415, 1416, 1422, 1426, 1437, 1458, 1468, 1473], "thousand": 1349, "thread": [96, 160, 187, 188, 1260, 1326, 1327, 1334, 1336, 1412, 1421, 1444, 1448, 1456, 1458, 1461, 1469, 1471], "thread0_bodi": 1452, "thread1_bodi": 1452, "threadid": 1449, "three": [337, 345, 423, 484, 568, 610, 663, 738, 786, 800, 937, 990, 1078, 1313, 1316, 1319, 1326, 1331, 1339, 1342, 1348, 1349, 1360, 1398, 1410, 1414, 1416, 1418, 1420, 1426, 1431, 1432, 1437, 1440, 1441, 1448, 1449, 1452, 1457, 1458, 1466, 1473], "threefri": [280, 1326, 1395, 1402, 1421, 1466], "threefry2x32": [279, 281, 1013, 1033, 1326, 1328, 1402, 1425, 1457], "threefry2x32_kei": 1326, "threefry2x32_p": 1326, "threefry_2x32": [1326, 1416], "threefry_fold_in": 281, "threefry_partition": 1360, "threefry_random_bit": 281, "threefry_se": 281, "threefry_split": 281, "threshold": [1328, 1353, 1475], "thrive": 1312, "through": [74, 99, 120, 121, 239, 244, 263, 284, 345, 356, 566, 1104, 1105, 1279, 1312, 1318, 1320, 1325, 1326, 1328, 1329, 1331, 1334, 1336, 1339, 1341, 1342, 1346, 1349, 1350, 1353, 1354, 1357, 1373, 1374, 1385, 1410, 1411, 1413, 1415, 1419, 1421, 1422, 1423, 1424, 1429, 1431, 1432, 1433, 1436, 1437, 1440, 1441, 1444, 1448, 1449, 1452, 1455, 1458, 1465, 1468, 1474, 1475], "throughout": [506, 1335, 1350, 1414, 1418, 1452], "throw": [119, 120, 121, 1326, 1334, 1335, 1341, 1432, 1440, 1462], "thrown": [506, 1326, 1334, 1432], "thu": [67, 120, 290, 380, 434, 499, 718, 720, 1082, 1313, 1318, 1320, 1331, 1343, 1346, 1348, 1374, 1412, 1414, 1415, 1417, 1419, 1421, 1432, 1433, 1436, 1443, 1449, 1455, 1456, 1460, 1461, 1474], "thumb": [1333, 1353, 1444, 1448, 1455, 1457, 1458, 1466], "thunk": [1318, 1419], "ti": [920, 1238, 1448], "tickl": 1440, "tid": 1452, "tie_in": 1326, "tier": 1416, "tight": [1413, 1424], "tighten": [1326, 1423], "tile": [138, 166, 167, 172, 303, 304, 434, 873, 906, 1012, 1326, 1340, 1414, 1449, 1452, 1457, 1458, 1464], "tile_shap": 1452, "tiletransform": 1452, "tilingtransform": 1452, "time": [67, 84, 93, 99, 113, 119, 121, 143, 182, 296, 378, 396, 418, 424, 453, 456, 486, 493, 497, 503, 504, 641, 642, 656, 666, 697, 786, 800, 887, 906, 915, 920, 998, 1009, 1011, 1012, 1033, 1082, 1098, 1101, 1102, 1103, 1106, 1108, 1218, 1304, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1326, 1331, 1333, 1334, 1336, 1338, 1339, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1358, 1382, 1386, 1399, 1405, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1425, 1426, 1427, 1430, 1432, 1434, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1468, 1472, 1475], "time_axi": 1101, "timedelta": 1108, "timeit": [1313, 1323, 1429, 1434, 1437, 1444, 1460, 1462], "timelin": [1003, 1004, 1005, 1464], "timeout": 99, "timeslot": 1455, "timestamp": 1420, "tini": [421, 697, 1350, 1435], "tip": [1314, 1356, 1427, 1430, 1462, 1475], "titl": [1360, 1426, 1428, 1460, 1461], "tl": 1354, "tldr": [1402, 1421], "tma": [171, 1452], "tmem": 1452, "tmp": [1313, 1331, 1343, 1346, 1350, 1353, 1354, 1358, 1360, 1429, 1430, 1431, 1432, 1435, 1437, 1442, 1463, 1464, 1470], "tnh": 506, "to_begin": 665, "to_devic": 1326, "to_dlpack": 1326, "to_end": 665, "to_html": 1426, "to_it": 1318, "to_iter": 1318, "to_lojax": 1430, "to_nearest_even": [454, 1395], "to_pi": [1326, 1432], "to_str": 1373, "todai": [1312, 1415, 1416, 1418], "todens": [195, 219, 1385], "todo": [1318, 1425, 1452], "toeplitz": 1326, "togeth": [79, 85, 121, 253, 439, 493, 610, 813, 829, 985, 1041, 1078, 1304, 1313, 1318, 1319, 1323, 1326, 1329, 1333, 1334, 1339, 1341, 1346, 1374, 1405, 1415, 1421, 1426, 1427, 1433, 1434, 1437, 1438, 1440, 1443, 1444, 1455, 1456, 1457, 1460, 1462, 1468], "toi": [1313, 1320, 1348, 1354, 1413, 1437, 1438, 1469], "token": [82, 262, 283, 302, 506, 1326, 1343], "token_in": 1343, "token_out": 1343, "tokens_in": 1360, "tokens_out": 1360, "tokenset": 1360, "tol": [235, 236, 798, 1071, 1093, 1104, 1105, 1106, 1326], "told": [1360, 1414], "toler": [235, 236, 331, 349, 372, 373, 375, 411, 412, 455, 469, 476, 482, 483, 560, 760, 798, 1036, 1071, 1093, 1104, 1105, 1106, 1257, 1258, 1259, 1329, 1413, 1424, 1441], "too": [98, 235, 357, 366, 367, 696, 878, 923, 971, 1312, 1313, 1318, 1320, 1338, 1339, 1349, 1350, 1353, 1413, 1415, 1417, 1418, 1419, 1421, 1426, 1431, 1433, 1434, 1436, 1437, 1440, 1443, 1449, 1452, 1455, 1457, 1460, 1468, 1473], "took": [1313, 1434, 1437, 1469], "tool": [800, 1006, 1312, 1322, 1326, 1333, 1335, 1336, 1337, 1339, 1340, 1342, 1355, 1366, 1396, 1399, 1412, 1414, 1415, 1418, 1419, 1425, 1447, 1449, 1458, 1464, 1474, 1475], "toolbox": [1353, 1356, 1358, 1431], "toolchain": [1339, 1427], "toolkit": 1356, "top": [235, 305, 306, 484, 578, 874, 1019, 1312, 1313, 1318, 1319, 1326, 1329, 1335, 1337, 1339, 1346, 1350, 1353, 1394, 1410, 1411, 1418, 1419, 1421, 1424, 1432, 1440, 1452, 1458, 1463, 1464], "top_k": [578, 874, 1326, 1346], "top_main": 1318, "top_trac": 1318, "topic": [1313, 1314, 1320, 1418, 1437, 1446], "topk": 1326, "topolog": 1318, "topologi": [99, 502, 1326, 1415, 1434, 1459, 1463], "toposort": [1318, 1326], "torch": [1426, 1435, 1449], "torch_dtyp": 1426, "torch_dtype_to_cod": 1426, "torch_result_cod": 1426, "torchvis": 1435, "tornado": 1360, "toru": 1458, "tot": 1443, "total": [37, 50, 67, 94, 800, 933, 1313, 1317, 1326, 1328, 1341, 1343, 1346, 1350, 1352, 1353, 1360, 1382, 1415, 1417, 1431, 1433, 1443, 1445, 1452, 1455, 1458, 1460, 1462], "total_ord": 1326, "total_repeat_length": [44, 906], "total_shap": 1455, "totals": 1350, "touch": [1329, 1414, 1424, 1427, 1455, 1462], "toward": [160, 246, 247, 332, 377, 454, 619, 697, 698, 710, 711, 863, 898, 913, 916, 964, 1326, 1418, 1419, 1422, 1426], "toy_": 1431, "tpu": [18, 92, 94, 97, 99, 153, 182, 242, 244, 296, 424, 425, 426, 427, 496, 502, 807, 920, 998, 1001, 1002, 1008, 1009, 1011, 1312, 1315, 1325, 1326, 1328, 1329, 1336, 1339, 1341, 1343, 1348, 1349, 1351, 1355, 1357, 1378, 1382, 1386, 1395, 1402, 1410, 1413, 1426, 1427, 1429, 1432, 1434, 1443, 1444, 1447, 1450, 1453, 1455, 1456, 1460, 1462, 1464, 1468, 1473], "tpu_cod": 424, "tpu_nam": 1431, "tpu_num_chips_to_profile_per_task": 1464, "tpu_num_sparse_core_tiles_to_trac": 1464, "tpu_num_sparse_cores_to_trac": 1464, "tpu_test": 1339, "tpu_trace_mod": 1464, "tpucompilerparam": 1447, "tpudevic": 1431, "tpumemoryspac": 1447, "tpuv2": 1457, "tpuv3": 1457, "tpuv4i": 1457, "tpuv5p": 1326, "tr": 1084, "trace": [0, 65, 66, 67, 72, 77, 80, 98, 113, 119, 127, 143, 160, 296, 339, 378, 380, 415, 424, 501, 552, 650, 666, 864, 890, 923, 971, 972, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1275, 1313, 1319, 1321, 1322, 1326, 1327, 1331, 1333, 1335, 1336, 1342, 1343, 1346, 1348, 1349, 1351, 1353, 1360, 1382, 1399, 1405, 1411, 1413, 1416, 1419, 1422, 1424, 1426, 1429, 1432, 1433, 1437, 1440, 1441, 1444, 1447, 1449, 1454, 1463, 1468, 1469, 1472], "trace_comput": 1464, "trace_compute_and_sync": 1464, "trace_ctx": 1430, "trace_func": 1360, "trace_funct": 1326, "trace_mod": 1464, "trace_only_host": 1464, "trace_only_xla": 1464, "trace_stack": 1318, "trace_typ": 1318, "trace_view": 1464, "traceabl": [877, 1318, 1331, 1360], "traceannot": [1326, 1464], "traceback": [82, 119, 120, 121, 328, 613, 634, 650, 864, 880, 886, 923, 940, 971, 972, 987, 1280, 1315, 1326, 1331, 1332, 1342, 1343, 1346, 1349, 1360, 1375, 1424, 1425, 1430, 1432, 1470, 1473], "traceback_cach": 1360, "traceback_util": [1326, 1360], "tracebackcach": 1360, "tracebackhid": 1328, "tracecontext": 1326, "tracem": 1464, "tracer": [0, 65, 66, 98, 650, 864, 923, 971, 972, 1313, 1315, 1318, 1326, 1331, 1333, 1334, 1342, 1351, 1409, 1414, 1415, 1416, 1419, 1422, 1423, 1424, 1429, 1430, 1433, 1470], "tracer_leak_debugger_warn": 1326, "tracer_out": 1318, "tracer_par": 1318, "tracer_refs_out": 1318, "tracer_to_var": 1318, "tracerarrayconversionerror": [1326, 1342], "tracerboolconversionerror": [1331, 1342, 1429, 1470], "tracerintegerconversionerror": [1326, 1342], "tracers_in": 1318, "tracers_out": 1318, "tracers_to_jaxpr": 1318, "traceview": 1326, "track": [119, 172, 504, 574, 1313, 1318, 1319, 1325, 1326, 1328, 1334, 1339, 1340, 1342, 1346, 1350, 1367, 1414, 1425, 1433, 1444, 1448, 1461, 1466, 1469], "tracker": [1312, 1326, 1350, 1356, 1413, 1414, 1458], "trade": [67, 92, 1328, 1352, 1353, 1354, 1438], "tradeoff": [1313, 1318, 1331, 1354, 1395, 1412, 1413, 1414, 1426, 1433, 1438, 1448, 1455], "tradit": [1319, 1333, 1335, 1440, 1458], "tradition": [1313, 1437], "trail": [565, 673, 956, 959, 960, 1057, 1346, 1395, 1402, 1425, 1434, 1457], "train": [1003, 1313, 1314, 1320, 1322, 1326, 1337, 1341, 1353, 1354, 1355, 1368, 1417, 1421, 1437, 1438, 1443, 1457, 1464, 1473, 1474], "train_acc": [1435, 1442], "train_data": [1435, 1442], "train_imag": [1435, 1442], "train_label": [1435, 1442], "train_step": [1003, 1353], "train_step_compil": 1353, "training_gener": 1435, "trait": 1305, "traitlet": 1360, "tran": [1080, 1087], "trans1d": [615, 898], "trans_a": 154, "trans_b": 154, "trans_jaxpr": 1318, "transact": 1457, "transfer": [95, 96, 101, 296, 716, 1260, 1310, 1314, 1317, 1318, 1323, 1326, 1341, 1348, 1382, 1424, 1431, 1441, 1448, 1452, 1455, 1457, 1458, 1460], "transfer_guard": 1471, "transfer_guard_host_to_devic": 1471, "transfer_s": 172, "transfertomemorykind": 96, "transform": [73, 77, 80, 83, 84, 120, 127, 159, 161, 164, 166, 197, 199, 216, 238, 262, 267, 268, 283, 292, 339, 415, 424, 450, 481, 492, 498, 580, 600, 621, 628, 650, 675, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 718, 719, 720, 758, 816, 864, 873, 902, 906, 914, 923, 924, 971, 972, 973, 974, 975, 976, 987, 998, 1012, 1059, 1060, 1061, 1062, 1084, 1085, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1271, 1275, 1279, 1281, 1312, 1319, 1320, 1322, 1326, 1331, 1332, 1333, 1342, 1343, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1360, 1367, 1373, 1395, 1405, 1408, 1409, 1411, 1415, 1416, 1418, 1422, 1423, 1424, 1426, 1428, 1432, 1433, 1435, 1436, 1437, 1438, 1441, 1442, 1444, 1451, 1455, 1458, 1465, 1468, 1469, 1470, 1475], "transform_func": 1449, "transform_funct": 1449, "transformed_flat": 1465, "transformed_structur": 1465, "transient": [111, 112, 1316], "transit": [69, 136, 137, 1313, 1326, 1339, 1410], "translat": [292, 1313, 1318, 1326, 1360, 1405, 1426, 1430, 1437, 1443, 1449], "translationcontext": 1326, "translationrul": 1326, "transpar": [127, 1326, 1350, 1408, 1419, 1444, 1465, 1470, 1474], "transparent_hugepag": 1326, "transpos": [1, 33, 167, 218, 225, 226, 229, 230, 305, 306, 343, 344, 345, 346, 347, 356, 407, 408, 456, 492, 666, 784, 799, 807, 830, 842, 876, 913, 945, 1043, 1087, 1089, 1295, 1304, 1313, 1318, 1321, 1326, 1360, 1368, 1385, 1395, 1399, 1415, 1419, 1433, 1436, 1437, 1441, 1443, 1445, 1449, 1456, 1457], "transpose_a": 408, "transpose_input": 1318, "transpose_jaxpr": 1318, "transpose_kernel": 346, "transpose_p": [1318, 1385], "transpose_ref": 1452, "transpose_rh": 1460, "transpose_rul": 1318, "transpose_solv": 356, "transposed_conv": 1439, "transposed_jaxpr": 1318, "transposed_pytre": 1271, "transposetransform": 1452, "transposit": [1313, 1318, 1319, 1385, 1419, 1425, 1428, 1433], "trapezoid": [1326, 1418], "trapz": [1326, 1418], "travers": [1261, 1262, 1263, 1265, 1267, 1269, 1270, 1282, 1319, 1452, 1465, 1474], "treacher": 1425, "treat": [61, 114, 127, 133, 263, 284, 296, 363, 366, 431, 473, 479, 492, 623, 629, 630, 663, 740, 772, 794, 803, 879, 893, 941, 989, 998, 1012, 1058, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1279, 1282, 1284, 1313, 1321, 1326, 1346, 1348, 1349, 1350, 1382, 1404, 1408, 1414, 1416, 1418, 1422, 1423, 1425, 1426, 1430, 1432, 1439, 1440, 1443, 1448, 1456, 1457, 1465, 1469, 1473, 1474], "treatment": [578, 774, 874, 978, 1318, 1346, 1418], "tree": [96, 134, 194, 290, 296, 297, 303, 304, 311, 357, 425, 426, 427, 431, 432, 433, 435, 1104, 1105, 1106, 1256, 1276, 1277, 1279, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1304, 1316, 1318, 1326, 1332, 1339, 1359, 1367, 1373, 1374, 1405, 1408, 1427, 1430, 1441, 1447, 1465, 1469], "tree1": 1298, "tree2": 1298, "tree_al": [1326, 1443], "tree_arg": 1304, "tree_def": 1367, "tree_flatten": [1264, 1272, 1281, 1282, 1318, 1326, 1349, 1354, 1438, 1465], "tree_flatten_with_kei": 1283, "tree_flatten_with_path": [1282, 1326, 1474], "tree_leav": [1266, 1276, 1326], "tree_leaves_with_path": [1278, 1326], "tree_map": [114, 1268, 1282, 1326, 1435, 1443], "tree_map_with_path": [1326, 1474], "tree_multimap": 1326, "tree_structur": [249, 1326, 1465], "tree_transpos": [1326, 1474], "tree_unflatten": [1277, 1281, 1283, 1318, 1326, 1332, 1349, 1354, 1438, 1465], "tree_util": [114, 248, 249, 1263, 1264, 1266, 1268, 1271, 1272, 1316, 1326, 1349, 1354, 1359, 1386, 1405, 1407, 1435, 1438, 1443, 1465], "treedef": [1263, 1264, 1270, 1272, 1277, 1279, 1280, 1282, 1296, 1297, 1298, 1299, 1318, 1326, 1465, 1474], "treedef_children": 1299, "treedef_is_leaf": 1326, "treedef_tupl": 1297, "trend": [1098, 1099, 1102, 1103], "tri": [64, 71, 956, 960, 1070, 1342, 1346, 1352, 1399, 1424, 1429, 1440, 1452], "trial": [1017, 1031, 1040, 1462], "triangl": [291, 292, 395, 398, 399, 400, 401, 407, 408, 409, 741, 784, 790, 792, 955, 956, 957, 958, 960, 961, 962, 1079, 1080, 1086, 1087], "triangular": [291, 292, 395, 396, 401, 404, 408, 784, 790, 792, 804, 1066, 1068, 1072, 1078, 1083, 1084, 1085, 1086, 1087, 1326, 1462], "trick": [1019, 1313, 1323, 1356, 1419, 1432, 1437, 1444, 1448], "tricki": [1318, 1323, 1349, 1432, 1440, 1448, 1469], "trickier": 1334, "tricub": [291, 292], "tridiagon": [410, 1071, 1326], "trifurc": 1414, "trigger": [84, 296, 998, 1326, 1329, 1339, 1349, 1358, 1360, 1382, 1422, 1458, 1460, 1464], "trigonometr": [569, 571, 573, 638, 929, 948], "tril": [828, 955, 958, 960, 1326, 1462], "tril_indic": [828, 958, 961], "tril_indices_from": [957, 961, 962], "trilinear": [291, 292], "trim": [959, 977], "trim_leading_zero": [882, 885], "trim_zero": 1326, "trimesh": 1358, "trip": [378, 1319, 1326, 1419, 1432, 1457], "tripl": [406, 1367, 1452, 1458], "tristateflag": 1475, "triton": [153, 182, 1326, 1328, 1353, 1378, 1416, 1447, 1452, 1453, 1455, 1456, 1475], "tritoncompilerparam": [1447, 1455], "triu": [828, 955, 956, 962, 1326], "triu_indic": [828, 957, 962], "triu_indices_from": [957, 958, 961], "trivial": [289, 295, 499, 1302, 1313, 1315, 1326, 1331, 1334, 1350, 1373, 1414, 1415, 1417, 1419, 1421, 1434, 1440, 1455, 1468], "troubl": [1350, 1449], "true": [0, 3, 4, 8, 10, 40, 51, 54, 61, 66, 67, 73, 76, 78, 81, 82, 83, 85, 87, 96, 98, 101, 102, 106, 107, 108, 119, 130, 132, 133, 158, 160, 173, 177, 182, 194, 197, 199, 206, 237, 262, 283, 289, 291, 292, 293, 295, 296, 297, 303, 304, 305, 306, 311, 316, 337, 339, 346, 356, 357, 359, 362, 363, 364, 365, 366, 367, 378, 381, 387, 391, 395, 397, 398, 403, 404, 405, 406, 407, 408, 409, 421, 422, 434, 456, 457, 458, 459, 460, 461, 462, 463, 473, 474, 486, 491, 493, 501, 506, 508, 534, 559, 560, 563, 564, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 582, 583, 584, 585, 588, 591, 598, 599, 609, 616, 617, 619, 623, 628, 632, 636, 638, 639, 640, 641, 646, 647, 648, 650, 657, 663, 664, 666, 667, 670, 671, 674, 675, 677, 678, 679, 681, 683, 684, 685, 686, 689, 690, 691, 692, 693, 695, 696, 697, 698, 708, 710, 712, 713, 716, 725, 727, 729, 730, 731, 732, 733, 735, 736, 738, 740, 741, 745, 746, 747, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 778, 781, 782, 784, 790, 792, 793, 794, 796, 800, 801, 803, 804, 806, 807, 810, 811, 814, 815, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 832, 834, 835, 836, 838, 841, 844, 845, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 863, 864, 865, 868, 869, 870, 875, 877, 878, 882, 883, 885, 890, 892, 894, 895, 896, 897, 903, 904, 908, 914, 917, 918, 921, 923, 924, 927, 929, 930, 932, 934, 936, 938, 942, 944, 946, 947, 948, 949, 954, 964, 972, 973, 974, 975, 976, 981, 982, 983, 989, 990, 999, 1009, 1011, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1026, 1027, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1098, 1099, 1101, 1102, 1103, 1106, 1107, 1108, 1138, 1140, 1149, 1218, 1239, 1256, 1261, 1262, 1263, 1273, 1275, 1278, 1279, 1284, 1297, 1298, 1299, 1302, 1303, 1304, 1313, 1315, 1317, 1318, 1320, 1323, 1326, 1328, 1331, 1333, 1335, 1336, 1337, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1360, 1367, 1368, 1373, 1375, 1382, 1402, 1404, 1410, 1411, 1414, 1415, 1417, 1422, 1425, 1426, 1427, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1442, 1444, 1445, 1447, 1453, 1457, 1458, 1460, 1463, 1464, 1468, 1469, 1470, 1473, 1475], "true_b": 1469, "true_beta": 1445, "true_bodi": 1411, "true_branch": 1318, "true_const": 1318, "true_divid": [658, 711, 1432], "true_fn": [1318, 1333, 1336], "true_fun": [339, 1318, 1331], "true_jaxpr": 1318, "true_w": 1469, "truli": [1084, 1085, 1466], "trunc": [619, 698, 710, 916, 1326], "truncat": [235, 246, 247, 492, 527, 529, 591, 628, 675, 696, 864, 878, 906, 923, 971, 972, 1053, 1059, 1061, 1101, 1242, 1243, 1244, 1245, 1246, 1247, 1313, 1319, 1326, 1337, 1374, 1432, 1437], "truncated_norm": [518, 520, 522, 529], "trust": 1346, "truth": [670, 730, 731, 781, 782, 865, 1312, 1331], "try": [71, 296, 397, 972, 998, 1280, 1313, 1316, 1318, 1319, 1326, 1328, 1331, 1339, 1340, 1343, 1346, 1349, 1350, 1356, 1360, 1382, 1414, 1417, 1423, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1442, 1443, 1445, 1448, 1452, 1456, 1457, 1460, 1462, 1464, 1471, 1473, 1474], "tune": [1337, 1350, 1353, 1449, 1452, 1455, 1460, 1475], "tunnel": 1464, "tup": [623, 663, 740, 989, 1414], "tupl": [39, 48, 67, 69, 74, 76, 78, 81, 102, 108, 114, 121, 127, 140, 142, 152, 161, 164, 166, 167, 168, 172, 174, 182, 184, 194, 195, 196, 197, 198, 199, 200, 203, 204, 211, 218, 220, 237, 240, 244, 251, 263, 267, 268, 276, 284, 289, 292, 296, 297, 305, 306, 328, 339, 341, 342, 343, 344, 345, 346, 347, 360, 361, 378, 397, 398, 399, 401, 403, 404, 405, 406, 409, 423, 447, 456, 473, 474, 484, 486, 492, 493, 500, 501, 502, 506, 533, 534, 539, 545, 550, 582, 588, 598, 613, 615, 652, 653, 659, 660, 664, 666, 667, 699, 715, 719, 729, 735, 736, 737, 738, 746, 747, 749, 758, 763, 772, 775, 789, 794, 795, 801, 804, 805, 807, 809, 811, 813, 814, 815, 828, 829, 835, 841, 851, 853, 855, 861, 864, 873, 875, 876, 882, 883, 897, 898, 908, 912, 915, 917, 925, 933, 950, 957, 958, 961, 962, 972, 973, 974, 975, 978, 980, 984, 985, 998, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1044, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1067, 1070, 1071, 1073, 1074, 1075, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1089, 1093, 1098, 1101, 1102, 1103, 1123, 1136, 1138, 1139, 1147, 1203, 1218, 1256, 1257, 1258, 1259, 1263, 1264, 1266, 1267, 1268, 1274, 1278, 1280, 1282, 1287, 1288, 1290, 1299, 1302, 1303, 1304, 1318, 1319, 1326, 1346, 1349, 1350, 1351, 1354, 1360, 1367, 1368, 1373, 1374, 1382, 1386, 1395, 1404, 1405, 1408, 1409, 1411, 1414, 1415, 1417, 1423, 1424, 1427, 1430, 1432, 1438, 1439, 1442, 1443, 1448, 1449, 1453, 1455, 1456, 1458, 1461, 1462, 1465, 1469, 1474], "tuple_delet": 1326, "tuple_insert": 1326, "tuplegrid": [141, 174, 182], "turbo": 1070, "turn": [65, 66, 110, 119, 120, 1313, 1317, 1318, 1326, 1328, 1329, 1335, 1337, 1342, 1346, 1349, 1353, 1360, 1386, 1411, 1417, 1421, 1422, 1426, 1432, 1433, 1436, 1440, 1449, 1455, 1456, 1468, 1469, 1474, 1475], "tutori": [77, 80, 262, 283, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1318, 1319, 1320, 1325, 1326, 1342, 1348, 1350, 1354, 1355, 1360, 1404, 1410, 1411, 1416, 1419, 1430, 1431, 1434, 1437, 1441, 1444, 1452, 1454, 1455, 1458, 1462, 1468], "tweak": [1410, 1415, 1449], "twice": [415, 906, 919, 998, 1353, 1375, 1426, 1440, 1452, 1460, 1466], "twin": [547, 548], "twist": 1460, "twister": 1466, "two": [23, 55, 76, 77, 78, 81, 99, 127, 160, 210, 233, 290, 303, 304, 305, 306, 311, 313, 336, 339, 341, 343, 344, 346, 347, 357, 360, 361, 362, 363, 364, 365, 366, 367, 387, 398, 408, 422, 423, 425, 426, 427, 431, 433, 434, 435, 450, 456, 463, 471, 472, 493, 499, 510, 539, 558, 560, 566, 568, 578, 580, 583, 584, 610, 621, 622, 623, 629, 630, 633, 636, 637, 641, 642, 654, 660, 664, 679, 685, 690, 691, 693, 695, 702, 712, 713, 715, 725, 746, 749, 758, 760, 777, 778, 786, 795, 800, 801, 802, 807, 809, 812, 813, 829, 830, 833, 839, 842, 843, 862, 864, 871, 874, 877, 880, 882, 885, 886, 895, 913, 917, 921, 923, 924, 937, 943, 945, 950, 953, 957, 958, 961, 962, 971, 974, 975, 984, 985, 989, 990, 998, 1065, 1074, 1082, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1200, 1273, 1280, 1282, 1302, 1315, 1318, 1319, 1321, 1322, 1326, 1328, 1331, 1337, 1339, 1340, 1341, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1357, 1358, 1360, 1367, 1382, 1386, 1395, 1402, 1404, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1421, 1425, 1426, 1427, 1431, 1432, 1433, 1434, 1438, 1440, 1441, 1443, 1444, 1446, 1447, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1468, 1469, 1471, 1473, 1474], "tx": [1080, 1087], "txt": [1326, 1329, 1339, 1343], "ty": 1318, "typ": [1279, 1281, 1283], "type": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 31, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 67, 69, 74, 76, 78, 79, 81, 83, 85, 90, 94, 97, 98, 104, 105, 106, 108, 109, 114, 115, 119, 120, 121, 128, 131, 132, 133, 135, 138, 140, 142, 143, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 245, 248, 249, 251, 262, 263, 265, 267, 270, 271, 272, 276, 277, 278, 281, 282, 283, 284, 286, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 428, 429, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 614, 616, 617, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 919, 920, 921, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1006, 1007, 1008, 1009, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1304, 1305, 1313, 1315, 1317, 1318, 1319, 1324, 1325, 1326, 1328, 1331, 1332, 1337, 1343, 1346, 1348, 1349, 1350, 1351, 1354, 1359, 1360, 1367, 1371, 1382, 1385, 1386, 1394, 1395, 1396, 1398, 1399, 1402, 1404, 1405, 1408, 1411, 1412, 1416, 1417, 1419, 1421, 1422, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1443, 1444, 1446, 1447, 1448, 1452, 1455, 1456, 1458, 1460, 1461, 1462, 1465, 1466, 1468, 1469, 1470, 1471, 1474, 1475], "type_index": 1462, "type_promot": [288, 1426], "type_trait": 1350, "typecast": 990, "typecheck_atom": 1318, "typecheck_jaxpr": 1318, "typecheck_partial_eval_jaxpr": 1318, "typeclass": 1425, "typecod": 106, "typecompat": 1326, "typed_data": 1350, "typed_kei": 1425, "typeerror": [861, 879, 890, 925, 933, 987, 1135, 1139, 1140, 1142, 1143, 1148, 1273, 1275, 1280, 1313, 1315, 1318, 1326, 1331, 1346, 1349, 1409, 1414, 1425, 1426, 1430, 1432, 1433, 1435, 1442, 1444, 1474], "typenam": 1350, "typeof": [1440, 1443, 1468], "typepromotionerror": 1473, "typevar": 1273, "typic": [105, 127, 174, 194, 346, 363, 366, 381, 397, 457, 567, 580, 697, 758, 773, 862, 923, 971, 972, 973, 974, 975, 976, 1258, 1259, 1313, 1315, 1325, 1328, 1329, 1339, 1342, 1346, 1349, 1350, 1354, 1356, 1395, 1402, 1414, 1415, 1416, 1417, 1420, 1432, 1437, 1438, 1443, 1444, 1455, 1457, 1458, 1460, 1461, 1463, 1466, 1470, 1474], "typing_extens": 1414, "u": [235, 401, 403, 405, 784, 790, 792, 807, 882, 1043, 1068, 1078, 1079, 1080, 1082, 1089, 1303, 1312, 1313, 1316, 1317, 1318, 1319, 1326, 1329, 1336, 1340, 1348, 1349, 1350, 1354, 1356, 1358, 1410, 1412, 1415, 1416, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1442, 1443, 1444, 1448, 1449, 1452, 1455, 1458, 1460, 1462, 1464, 1466], "u1": 664, "u16": 1426, "u1u1u1u2u4u8i2i2i4i8bff2f4f8c8c16u1f": 1473, "u1u2u4u8i1i2i4i8bff2f4f8c8c16i": 1473, "u2u2u2u2u4u8i4i4i4i8bff2f4f8c8c16u2f": 1473, "u32": [1350, 1426], "u4": 1473, "u4u4u4u4u4u8i8i8i8i8bff2f4f8c8c16u4f": 1473, "u64": 1426, "u8": [664, 1426], "u8u8u8u8u8u8f": 1473, "u_": 1082, "u_blk": 1443, "u_block": 1443, "ubuntu": 1339, "ubyt": 1435, "ucdenv": 235, "ufunc": [10, 558, 601, 606, 608, 644, 645, 646, 647, 721, 821, 822, 823, 825, 826, 833, 839, 843, 847, 848, 860, 862, 943, 1326], "ui": [1009, 1011, 1326, 1464], "uint": [277, 281, 282, 1426, 1457], "uint16": [259, 763, 909, 1426], "uint2": 259, "uint32": [259, 277, 280, 281, 282, 452, 763, 773, 862, 888, 1013, 1018, 1057, 1402, 1424, 1425, 1426, 1466, 1473], "uint4": [259, 763], "uint64": [259, 664, 763, 966, 1018, 1326], "uint8": [259, 602, 664, 717, 759, 763, 773, 872, 893, 977, 1326, 1426, 1432], "uit": 1336, "uk": 1318, "ultim": [1318, 1323, 1421, 1424, 1434], "un": [88, 89, 668, 669, 1328, 1331, 1415, 1424, 1436, 1443], "una": 1432, "unabl": 1325, "unambigu": [1313, 1318, 1433, 1437], "unansw": 1426, "unari": [459, 759, 824, 1385, 1419, 1436, 1440, 1449], "unavail": [1315, 1350, 1405], "unavoid": 1457, "unawait": 1452, "unawar": 83, "unbatch": [1012, 1313, 1318, 1449], "unblock": [1447, 1458], "unbound": [1313, 1318, 1433], "unbox": 1318, "uncaught": 1443, "unchang": [74, 82, 291, 479, 595, 596, 597, 918, 1279, 1281, 1283, 1284, 1313, 1432, 1433, 1441, 1448, 1449], "uncheck": 1431, "unclear": 1440, "uncommit": [13, 96, 173, 380, 1357, 1434], "uncommon": [1329, 1457], "uncompress": 919, "uncondition": 1326, "unconstrain": 1461, "uncov": 1329, "uncurri": [1313, 1437], "undef": 1318, "undef_prim": 1318, "undefin": [101, 102, 137, 160, 381, 439, 453, 457, 458, 459, 460, 461, 462, 716, 758, 765, 914, 923, 924, 930, 946, 1012, 1092, 1149, 1348, 1349, 1360, 1432, 1443, 1463], "undefinedprim": 1360, "undefprim": 1318, "under": [67, 73, 81, 98, 262, 283, 360, 361, 424, 479, 499, 537, 538, 650, 673, 772, 784, 790, 792, 830, 836, 842, 901, 907, 913, 919, 923, 940, 945, 953, 954, 971, 972, 1012, 1063, 1142, 1143, 1313, 1318, 1320, 1326, 1328, 1331, 1339, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1375, 1385, 1395, 1402, 1413, 1416, 1417, 1418, 1422, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1452, 1454, 1456, 1464, 1468], "underflow": [862, 1140], "underli": [73, 77, 80, 81, 268, 296, 456, 504, 981, 1034, 1038, 1099, 1315, 1318, 1336, 1350, 1382, 1416, 1419, 1425, 1434, 1448, 1449, 1455, 1456, 1457, 1458, 1462, 1467], "underneath": [1412, 1456, 1466], "underpin": 1395, "underscor": [1315, 1316, 1326, 1354, 1438], "understand": [361, 501, 1313, 1316, 1318, 1319, 1320, 1326, 1341, 1342, 1346, 1350, 1353, 1360, 1411, 1418, 1419, 1426, 1429, 1430, 1441, 1448, 1449, 1455, 1457, 1463, 1465, 1466, 1468, 1469, 1470], "understood": [1402, 1458], "undesir": [113, 1458, 1466], "undocu": 1326, "undu": [219, 1414], "unequ": 1043, "uneven": 487, "unevenli": [487, 937], "unexpect": [568, 845, 862, 1012, 1314, 1326, 1342, 1348, 1349, 1350, 1409, 1419, 1424, 1432, 1457, 1465, 1474], "unexpecteddimvar": 1346, "unexpectedli": [1348, 1425], "unexpectedtracererror": [1326, 1342, 1424], "unfamiliar": 1429, "unfilt": [1326, 1328], "unfilteredstacktrac": 1326, "unflatten": [81, 288, 1263, 1265, 1270, 1277, 1279, 1280, 1282, 1296, 1318, 1326, 1422, 1436, 1465, 1474], "unflatten_func": [249, 1280, 1282], "unfold": 344, "unfortun": [574, 1349, 1414, 1424, 1449, 1452], "unfriendli": 1420, "unhandl": 1426, "unhash": 1326, "unhind": 1312, "uni": 1346, "unifi": [1326, 1356, 1410, 1425, 1431, 1434, 1444], "uniform": [237, 311, 499, 517, 519, 521, 523, 526, 529, 619, 698, 710, 964, 1018, 1022, 1023, 1032, 1048, 1313, 1317, 1342, 1348, 1351, 1353, 1402, 1414, 1425, 1430, 1432, 1434, 1437, 1455, 1457, 1458, 1460, 1461, 1462, 1466], "uniformli": [452, 453, 526, 528, 1014, 1043, 1326, 1339, 1422], "unimpl": [718, 720, 1454], "unind": 1360, "uniniti": [168, 1371, 1462], "uninstal": 1464, "unintend": [1425, 1471], "unintent": 1326, "unintention": 1326, "uninterest": 1328, "union": [253, 758, 923, 924, 971, 1318, 1414, 1417], "union1d": [758, 923, 924, 1418], "uniqu": [10, 117, 118, 122, 123, 124, 125, 126, 237, 259, 287, 440, 441, 442, 443, 445, 446, 448, 650, 758, 765, 860, 923, 924, 946, 973, 974, 975, 976, 1082, 1319, 1326, 1341, 1399, 1414, 1415, 1418, 1426, 1443, 1448, 1466, 1474], "unique_al": [972, 974, 975, 1418], "unique_const": 1318, "unique_count": [600, 972, 973, 975, 976, 1418], "unique_index": 972, "unique_indic": [10, 56, 195, 196, 206, 208, 237, 381, 457, 458, 459, 460, 461, 462, 860, 946, 994, 995, 996, 997], "unique_invers": [972, 973, 974, 976, 1418], "unique_valu": [972, 973, 974, 975, 1418], "uniquifi": 1326, "unit": [133, 401, 408, 505, 507, 508, 510, 531, 537, 538, 541, 550, 574, 596, 597, 729, 735, 736, 738, 786, 926, 940, 1014, 1029, 1313, 1318, 1351, 1360, 1411, 1413, 1422, 1429, 1433, 1437, 1456, 1457, 1460, 1461], "unit32": 862, "unit_diagon": [408, 1087], "unitari": [400, 404, 804, 1043, 1075, 1082, 1083, 1085], "unittest": 1326, "unitvar": 1411, "unitvec": [1320, 1437], "univers": [311, 558, 601, 606, 608, 823, 825, 826, 843, 943, 965, 987], "unjitted_loop_bodi": 1429, "unk": 1318, "unk_tracers_in": 1318, "unk_tracers_out": 1318, "unknown": [1318, 1326, 1328, 1339, 1346], "unknown_trac": 1318, "unks_in": 1318, "unks_out": 1318, "unless": [219, 262, 283, 356, 415, 757, 920, 998, 1012, 1082, 1104, 1105, 1106, 1279, 1328, 1339, 1342, 1410, 1418, 1419, 1435, 1440, 1442, 1444, 1447, 1452, 1455, 1457, 1461, 1466, 1474], "unlik": [10, 120, 160, 344, 378, 424, 445, 446, 456, 464, 486, 539, 665, 673, 675, 696, 719, 749, 830, 842, 860, 861, 877, 880, 882, 883, 885, 886, 901, 907, 913, 914, 925, 933, 940, 945, 953, 978, 1074, 1124, 1129, 1140, 1148, 1318, 1336, 1341, 1348, 1350, 1356, 1387, 1395, 1402, 1412, 1413, 1415, 1417, 1421, 1423, 1425, 1432, 1434, 1443, 1444, 1448, 1449, 1452, 1456, 1458, 1469, 1474], "unlock": [1410, 1413, 1457], "unmap": [304, 435, 1304, 1318, 1334, 1415], "unmapped_av": 1318, "unment": [1415, 1443], "unmodifi": [348, 515, 844, 987], "unnam": [276, 1350], "unnatur": 1457, "unnecessari": [67, 378, 456, 486, 998, 1326, 1341, 1373, 1414, 1426, 1429, 1448], "unnecessarili": [1318, 1417], "unnorm": 1019, "unodifi": 1432, "unop": 1326, "unop_dtype_rul": 1326, "unoptim": [666, 667], "unord": [117, 118, 122, 123, 124, 125, 126, 259, 1386, 1412], "unorder": 1426, "unordered_effect": 1386, "unpack": [101, 716, 977, 1326, 1415, 1443, 1448], "unpack_optimizer_st": 1367, "unpackbit": 872, "unpad": 403, "unperturb": [78, 81], "unpickl": 1399, "unpinned_host": [1444, 1468], "unpract": 1428, "unpredict": 61, "unproblemat": 1426, "unprocess": 1346, "unpromot": 1426, "unravel": [978, 1419], "unravel_index": 902, "unravel_indic": 978, "unreach": 1471, "unrecogn": [1319, 1464], "unreduc": [1404, 1415], "unrel": 1350, "unreleas": 1427, "unrepl": 1341, "unrestrict": [1318, 1453], "unrestrictedus": 1318, "unrol": [378, 456, 486, 887, 1012, 1040, 1326, 1331, 1336, 1350, 1411, 1448, 1449, 1455, 1457], "unsaf": [616, 718, 720, 1326, 1342, 1402, 1425, 1427, 1432, 1475], "unsafe_no_auto_barri": 160, "unsafe_raw_arrai": 1326, "unsafe_rbg": [282, 1326, 1328, 1402], "unsafe_rbg_kei": 1326, "unsaid": 1418, "unsatisfi": [403, 1082], "unscal": 883, "unset": [99, 1326], "unshap": 1331, "unshar": 344, "unshard": [1341, 1440], "unshift": [682, 687], "unsign": [10, 280, 381, 420, 467, 664, 763, 860, 862, 910, 946, 979, 1018, 1326, 1425, 1466], "unsignedinteg": 773, "unsolv": 1415, "unsort": [305, 306], "unsound": 1346, "unspecifi": [101, 716, 750, 1106, 1386, 1453], "unspecifiedvalu": [296, 1382], "unsquar": 883, "unstabl": [187, 1339, 1379], "unstack": [623, 629, 630, 663, 740, 941, 989, 1326, 1415, 1443], "unsuit": 1415, "unsupport": [262, 283, 666, 871, 1315, 1326, 1395, 1416, 1425, 1474], "until": [18, 96, 102, 177, 179, 913, 1009, 1011, 1313, 1317, 1318, 1326, 1328, 1336, 1338, 1353, 1368, 1412, 1414, 1418, 1420, 1423, 1424, 1433, 1448, 1452, 1457, 1458, 1464], "untouch": 844, "untrunc": 527, "untyp": [1305, 1318, 1330], "unus": [82, 127, 128, 203, 220, 296, 403, 405, 559, 564, 576, 577, 621, 644, 645, 698, 737, 832, 834, 835, 838, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 856, 857, 858, 892, 894, 907, 916, 941, 942, 944, 972, 983, 1058, 1066, 1067, 1068, 1069, 1070, 1075, 1077, 1079, 1080, 1083, 1084, 1086, 1087, 1089, 1318, 1324, 1326, 1332, 1348, 1350, 1382, 1465], "unusu": 1402, "unvari": 1443, "unwant": 1473, "unweight": 598, "unwieldi": 1350, "unwrap": 1326, "unzip": 1318, "unzip2": [1318, 1326], "unzip_dynamic_bound": 1447, "up": [18, 77, 80, 140, 182, 219, 235, 248, 249, 296, 337, 339, 378, 403, 456, 486, 501, 503, 504, 627, 698, 701, 710, 746, 800, 915, 917, 964, 1003, 1004, 1005, 1057, 1082, 1088, 1104, 1105, 1257, 1313, 1318, 1320, 1323, 1326, 1328, 1329, 1330, 1331, 1336, 1337, 1339, 1341, 1343, 1346, 1349, 1350, 1353, 1354, 1355, 1358, 1374, 1382, 1410, 1412, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1429, 1432, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1444, 1448, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1464, 1465, 1466, 1468, 1474, 1475], "upcast": [445, 446, 935, 1123, 1326, 1457], "upcom": 1424, "updat": [10, 219, 365, 366, 367, 396, 397, 457, 458, 459, 460, 461, 462, 860, 878, 895, 896, 1313, 1316, 1318, 1324, 1326, 1328, 1329, 1332, 1333, 1335, 1337, 1340, 1343, 1348, 1350, 1352, 1353, 1356, 1358, 1367, 1373, 1375, 1395, 1399, 1410, 1412, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 1425, 1426, 1427, 1428, 1433, 1434, 1435, 1436, 1440, 1442, 1443, 1444, 1448, 1449, 1452, 1455, 1457, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1473, 1474], "update_fn": [1324, 1367], "update_fun": 1367, "update_output_token": 1412, "update_runtime_token": 1412, "update_shap": 459, "update_window_dim": [457, 1395], "updated_arrai": 1432, "updatefn": 1367, "upgrad": [111, 112, 615, 898, 1326, 1328, 1339, 1356, 1402, 1410, 1412, 1415, 1416, 1420, 1424, 1425, 1434, 1435, 1442], "uplo": [790, 792], "upload": [1009, 1011, 1339], "upon": [268, 1429, 1441, 1452, 1453, 1458], "upper": [233, 378, 395, 396, 399, 401, 404, 407, 408, 410, 517, 526, 527, 528, 676, 784, 790, 792, 804, 955, 956, 957, 958, 960, 961, 962, 1052, 1053, 1066, 1067, 1068, 1070, 1072, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1111, 1125, 1126, 1135, 1318, 1326, 1426, 1460, 1462, 1464], "upper_seg": 1135, "upper_triangular": 1072, "uppercas": 506, "upsampl": [291, 292], "upshot": [1313, 1433, 1437], "upsid": 1413, "upstream": [1329, 1424, 1449], "uptim": 1455, "upward": [619, 916, 1349], "urbg": 282, "url": [1326, 1339, 1356, 1464], "us": [0, 25, 61, 62, 63, 67, 69, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 91, 92, 93, 98, 99, 101, 102, 111, 112, 113, 114, 119, 120, 127, 128, 131, 132, 133, 135, 136, 137, 140, 144, 145, 147, 148, 149, 150, 151, 153, 155, 158, 160, 172, 173, 174, 182, 187, 194, 206, 235, 236, 244, 248, 249, 250, 251, 262, 263, 264, 265, 268, 280, 283, 284, 285, 286, 290, 291, 292, 293, 295, 296, 303, 304, 305, 306, 311, 315, 316, 331, 337, 339, 342, 343, 344, 346, 348, 349, 356, 357, 360, 361, 372, 373, 375, 378, 380, 381, 395, 397, 398, 404, 406, 408, 409, 411, 412, 415, 416, 417, 421, 422, 424, 425, 426, 427, 431, 432, 433, 434, 435, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 469, 473, 476, 479, 482, 483, 486, 487, 491, 492, 493, 498, 499, 500, 501, 502, 503, 504, 506, 508, 529, 539, 540, 550, 559, 560, 564, 566, 568, 574, 579, 580, 582, 588, 598, 600, 612, 613, 614, 615, 622, 628, 633, 634, 635, 637, 651, 655, 664, 666, 667, 675, 676, 678, 679, 680, 681, 682, 683, 687, 694, 697, 699, 716, 717, 718, 720, 722, 729, 735, 736, 738, 746, 747, 750, 757, 758, 760, 765, 779, 783, 784, 785, 790, 792, 793, 794, 795, 798, 800, 803, 805, 811, 816, 817, 819, 827, 829, 832, 834, 836, 837, 838, 841, 844, 845, 849, 850, 852, 853, 854, 855, 856, 857, 858, 864, 868, 873, 875, 878, 882, 885, 887, 892, 895, 896, 897, 898, 902, 906, 907, 917, 918, 919, 920, 923, 934, 942, 944, 946, 947, 952, 953, 954, 963, 965, 971, 972, 973, 974, 975, 976, 977, 978, 981, 983, 987, 994, 995, 996, 997, 998, 999, 1003, 1006, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1061, 1062, 1063, 1066, 1067, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1082, 1084, 1086, 1087, 1088, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1122, 1123, 1135, 1140, 1149, 1175, 1176, 1177, 1178, 1179, 1180, 1203, 1244, 1246, 1256, 1257, 1258, 1259, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1304, 1305, 1312, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1326, 1327, 1331, 1332, 1333, 1334, 1335, 1342, 1343, 1346, 1347, 1348, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1362, 1366, 1367, 1368, 1371, 1373, 1374, 1375, 1379, 1382, 1385, 1386, 1392, 1394, 1395, 1398, 1399, 1400, 1401, 1402, 1404, 1405, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1435, 1438, 1439, 1441, 1442, 1444, 1446, 1447, 1448, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475], "usabl": [113, 421, 1324, 1346], "usag": [67, 69, 119, 129, 130, 136, 137, 244, 251, 264, 285, 415, 424, 493, 773, 1273, 1275, 1280, 1319, 1326, 1328, 1340, 1342, 1343, 1352, 1353, 1354, 1367, 1375, 1386, 1413, 1415, 1418, 1422, 1438, 1441, 1446, 1458, 1460, 1466, 1472], "use_auto_spmd_partit": 491, "use_color": 87, "use_global_device_id": 1350, "use_high_dynamic_range_gumbel": [1019, 1022, 1032], "use_magma": [397, 404], "use_mesh": [1256, 1440, 1443, 1468], "use_shardy_partition": [491, 1373], "use_spmd_partit": 491, "use_trac": 238, "used_axis_names_jaxpr": 1326, "used_out": [127, 128], "user": [10, 18, 77, 80, 98, 121, 127, 193, 241, 244, 251, 262, 283, 305, 306, 361, 381, 452, 457, 499, 503, 504, 506, 527, 539, 540, 553, 696, 726, 860, 878, 895, 896, 923, 965, 971, 1312, 1316, 1317, 1319, 1326, 1328, 1332, 1336, 1337, 1338, 1343, 1348, 1349, 1350, 1353, 1356, 1373, 1386, 1395, 1399, 1402, 1408, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1426, 1427, 1440, 1443, 1445, 1448, 1449, 1452, 1453, 1455, 1456, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1471, 1473, 1474], "user_check": [121, 1333, 1334], "user_shap": 1373, "user_shard": 1373, "userwarn": [1324, 1337, 1432, 1435], "uses_global_const": [1326, 1343, 1386], "uses_shape_polymorph": [1326, 1343], "usr": 1464, "usual": [64, 71, 99, 290, 296, 360, 361, 378, 456, 463, 486, 650, 998, 1009, 1011, 1315, 1317, 1318, 1326, 1331, 1336, 1341, 1346, 1349, 1354, 1382, 1395, 1402, 1412, 1418, 1419, 1421, 1424, 1427, 1431, 1438, 1439, 1440, 1443, 1444, 1448, 1449, 1452, 1455, 1457, 1458, 1460, 1461, 1464, 1466, 1475], "util": [69, 114, 194, 503, 504, 506, 1312, 1316, 1318, 1325, 1326, 1331, 1339, 1349, 1350, 1354, 1376, 1402, 1404, 1407, 1408, 1410, 1414, 1416, 1422, 1426, 1430, 1436, 1438, 1443, 1452, 1455, 1457, 1458, 1460, 1461, 1462, 1474], "utterli": 1426, "v": [47, 105, 209, 226, 230, 235, 238, 398, 506, 633, 637, 651, 654, 789, 790, 807, 882, 895, 920, 1070, 1071, 1082, 1089, 1313, 1318, 1323, 1326, 1336, 1339, 1342, 1343, 1346, 1348, 1354, 1358, 1360, 1374, 1385, 1409, 1410, 1413, 1431, 1433, 1437, 1438, 1448, 1455, 1458, 1460, 1462, 1465, 1474], "v0": [1279, 1326, 1350, 1353, 1399, 1402, 1422, 1434], "v1": [1318, 1326, 1328], "v10": 664, "v100": 1395, "v1alpha2": 1431, "v2": [1318, 1328, 1356], "v2023": 1326, "v3": 502, "v4": [1326, 1457, 1458, 1461], "v5": [1458, 1460, 1462], "v5e": [1326, 1458, 1460, 1462], "v5e_flop": 1460, "v5e_membw": 1460, "v5e_op_intens": 1460, "v5litepod": 1431, "v5p": [1455, 1458, 1461], "v6": 1457, "v6e": 1326, "v9": 1326, "v97": 1019, "v_": [1313, 1319], "v_1": 1319, "v_2": 1319, "v_3": 1319, "v_batch": 1444, "v_blk": 1443, "v_block": 1443, "v_dot": 1348, "v_j": [633, 637], "v_tm1": 1313, "vae": 1421, "val": [144, 145, 146, 147, 148, 149, 150, 151, 185, 186, 255, 378, 486, 696, 745, 780, 815, 872, 878, 903, 910, 920, 977, 1263, 1272, 1297, 1318, 1331, 1421, 1426, 1436, 1444, 1466], "val1": 1375, "val2": 1375, "val_out": 1318, "valid": [0, 10, 194, 246, 247, 341, 343, 344, 345, 346, 347, 348, 364, 365, 407, 487, 492, 499, 539, 610, 633, 637, 772, 860, 902, 919, 946, 978, 1094, 1095, 1096, 1097, 1100, 1256, 1275, 1279, 1326, 1328, 1331, 1332, 1346, 1349, 1354, 1368, 1382, 1405, 1409, 1411, 1414, 1418, 1422, 1438, 1452, 1464, 1465], "vals_in": 1318, "vals_out": 1318, "valu": [5, 6, 10, 12, 18, 57, 64, 67, 69, 71, 76, 78, 79, 81, 82, 84, 85, 95, 97, 98, 99, 103, 108, 109, 113, 114, 119, 120, 121, 127, 128, 131, 134, 136, 137, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 162, 163, 174, 180, 182, 183, 185, 186, 194, 205, 206, 216, 221, 233, 234, 237, 240, 244, 262, 263, 265, 283, 284, 286, 288, 289, 291, 292, 295, 296, 297, 298, 302, 303, 305, 306, 321, 332, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 356, 359, 360, 361, 363, 365, 366, 367, 377, 378, 379, 380, 381, 389, 394, 403, 406, 407, 408, 415, 421, 422, 423, 424, 430, 431, 434, 449, 454, 456, 457, 458, 459, 460, 461, 462, 464, 468, 473, 474, 479, 481, 484, 486, 487, 491, 492, 493, 498, 501, 506, 507, 516, 524, 527, 528, 529, 533, 534, 536, 545, 555, 559, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585, 587, 591, 595, 596, 597, 600, 602, 616, 619, 621, 622, 623, 628, 633, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 650, 651, 654, 655, 656, 657, 660, 663, 666, 670, 674, 675, 676, 677, 683, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 708, 710, 715, 717, 719, 722, 723, 724, 725, 727, 729, 730, 731, 734, 735, 736, 737, 740, 742, 748, 749, 750, 757, 758, 760, 761, 762, 765, 770, 771, 772, 778, 779, 781, 782, 783, 785, 788, 794, 795, 798, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 813, 814, 815, 819, 827, 828, 829, 832, 837, 838, 844, 845, 846, 847, 848, 849, 852, 853, 854, 855, 856, 857, 860, 862, 863, 864, 865, 868, 872, 873, 874, 875, 877, 878, 879, 881, 882, 883, 884, 885, 887, 888, 890, 892, 893, 895, 896, 897, 898, 902, 906, 907, 909, 914, 915, 916, 918, 920, 921, 923, 924, 926, 927, 930, 932, 934, 936, 938, 939, 942, 944, 946, 947, 949, 950, 952, 954, 964, 965, 971, 972, 973, 974, 975, 976, 978, 981, 983, 984, 985, 989, 990, 994, 995, 996, 997, 998, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1063, 1064, 1071, 1074, 1082, 1083, 1084, 1085, 1086, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1267, 1268, 1269, 1274, 1275, 1280, 1281, 1282, 1283, 1302, 1303, 1304, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1325, 1326, 1327, 1328, 1329, 1331, 1334, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1357, 1360, 1367, 1373, 1374, 1382, 1386, 1394, 1395, 1399, 1402, 1405, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1421, 1423, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1436, 1440, 1441, 1444, 1446, 1447, 1448, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1474, 1475], "valuat": 1346, "value1": 1475, "value2": [1452, 1475], "value_and_grad": [67, 78, 79, 81, 1326, 1367, 1445], "value_and_grad_f": 1360, "value_and_jvp": 1360, "value_flat": 1465, "value_fn": 1313, "value_structur": 1465, "value_tre": 1465, "valueerror": [120, 121, 132, 133, 235, 328, 613, 880, 886, 902, 940, 987, 998, 1135, 1139, 1140, 1279, 1313, 1319, 1326, 1331, 1333, 1334, 1343, 1346, 1348, 1350, 1410, 1434, 1437, 1445, 1452, 1462, 1464], "van": 1019, "vandermond": 982, "vanderpla": [923, 971, 1322, 1418, 1425, 1426], "vanilla": 1449, "vanish": 1319, "var": [253, 254, 550, 858, 942, 1318, 1319, 1326, 1328, 1339, 1436], "var_str": 1318, "vararg": 729, "vari": [335, 1001, 1315, 1316, 1326, 1415, 1422, 1432, 1434, 1455, 1457], "variabl": [99, 251, 253, 357, 397, 636, 641, 919, 981, 1015, 1024, 1093, 1273, 1284, 1313, 1318, 1319, 1320, 1326, 1328, 1331, 1335, 1337, 1339, 1342, 1343, 1344, 1348, 1350, 1352, 1353, 1354, 1356, 1357, 1360, 1386, 1402, 1410, 1413, 1417, 1424, 1432, 1433, 1436, 1438, 1441, 1458, 1463, 1464, 1467, 1470, 1475], "variad": [464, 1326, 1343, 1414], "varianc": [60, 550, 856, 858, 942, 983, 1313, 1417, 1443, 1458], "variance_sc": [518, 519, 520, 521, 522, 523, 1368], "variancesc": 527, "variant": [1304, 1318, 1326, 1346, 1356, 1367, 1402, 1410, 1415, 1418, 1443, 1449, 1462, 1475], "variat": [1346, 1354, 1438], "varieti": [1312, 1418, 1426, 1427, 1449, 1455], "variou": [182, 666, 1093, 1315, 1326, 1328, 1333, 1348, 1405, 1416, 1426, 1434, 1455, 1456, 1458, 1466, 1475], "vast": 1414, "vastli": [800, 1349], "vcat": 1318, "vdot": [985, 1304, 1313, 1320, 1437, 1460], "ve": [1313, 1318, 1319, 1329, 1341, 1348, 1349, 1354, 1412, 1414, 1417, 1419, 1423, 1424, 1425, 1431, 1434, 1435, 1437, 1438, 1440, 1442, 1448, 1449, 1455, 1456, 1469], "vec": [1320, 1437], "vecdot": [666, 749, 795, 829, 831, 984, 986], "vecmat": [356, 831, 985], "vecs_in": 1318, "vector": [153, 225, 226, 229, 230, 262, 283, 288, 289, 290, 295, 297, 357, 360, 396, 400, 404, 405, 406, 410, 493, 536, 566, 642, 660, 666, 719, 749, 786, 789, 793, 795, 796, 801, 807, 808, 813, 814, 829, 831, 836, 926, 984, 985, 986, 998, 1012, 1041, 1045, 1058, 1075, 1077, 1083, 1087, 1089, 1104, 1105, 1106, 1107, 1139, 1140, 1181, 1182, 1302, 1303, 1304, 1308, 1319, 1322, 1326, 1333, 1351, 1360, 1385, 1395, 1402, 1421, 1425, 1430, 1433, 1435, 1438, 1442, 1447, 1449, 1452, 1455, 1456, 1457, 1461, 1466, 1472], "vector_arg_valu": 1360, "vector_in": 1318, "vector_norm": 796, "vector_out": 1318, "vectoris": [1313, 1466], "vectorized_unop_abstract_ev": 1318, "vectorized_unop_batching_rul": 1318, "vee": [324, 1426], "veloc": 1427, "vendor": 1338, "verbos": [1326, 1339, 1448, 1449, 1464, 1474], "veri": [160, 197, 199, 219, 424, 585, 587, 674, 773, 798, 819, 920, 1036, 1106, 1313, 1315, 1318, 1321, 1326, 1328, 1339, 1341, 1350, 1352, 1356, 1399, 1414, 1418, 1421, 1423, 1424, 1426, 1429, 1437, 1439, 1448, 1452, 1455, 1456, 1457, 1458, 1460, 1461, 1470], "verifi": [134, 1326, 1328, 1346, 1360, 1441, 1443, 1444, 1448, 1449, 1460], "versa": [296, 1326, 1382, 1417, 1432, 1458], "version": [67, 88, 89, 102, 111, 112, 208, 217, 223, 227, 231, 234, 235, 240, 262, 265, 268, 283, 286, 296, 337, 378, 415, 456, 464, 473, 486, 501, 503, 566, 568, 574, 578, 580, 600, 616, 628, 629, 630, 636, 641, 651, 655, 673, 675, 696, 746, 758, 837, 864, 868, 874, 878, 883, 893, 895, 896, 917, 918, 923, 953, 971, 972, 973, 974, 975, 976, 978, 987, 990, 998, 1045, 1074, 1098, 1113, 1115, 1116, 1117, 1123, 1124, 1129, 1144, 1149, 1256, 1275, 1304, 1305, 1313, 1315, 1318, 1319, 1326, 1329, 1331, 1340, 1341, 1342, 1344, 1348, 1349, 1350, 1353, 1354, 1356, 1360, 1375, 1382, 1385, 1386, 1399, 1405, 1409, 1410, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1424, 1425, 1426, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1452, 1456, 1462, 1463, 1464, 1469, 1475], "versu": [1323, 1343, 1354, 1413, 1438, 1455, 1462], "vertic": [586, 610, 623, 662, 663, 739, 740, 937, 941, 988, 989], "vf": 1106, "vfoo": 1304, "vgrad": [1313, 1437], "vh": [807, 1089], "vhlo": 1386, "vi": 1106, "via": [9, 10, 13, 76, 99, 114, 120, 173, 178, 277, 281, 282, 296, 322, 323, 324, 325, 337, 356, 357, 368, 382, 383, 392, 414, 419, 457, 465, 466, 467, 496, 498, 500, 527, 539, 558, 566, 568, 578, 582, 588, 591, 601, 606, 608, 623, 630, 641, 644, 645, 646, 647, 650, 663, 666, 673, 716, 717, 719, 728, 729, 740, 779, 786, 797, 798, 799, 807, 809, 811, 830, 842, 843, 847, 848, 860, 861, 874, 877, 891, 895, 896, 901, 907, 920, 922, 925, 933, 940, 941, 943, 945, 946, 947, 950, 953, 981, 989, 998, 1005, 1066, 1067, 1079, 1080, 1086, 1089, 1090, 1094, 1095, 1096, 1097, 1098, 1104, 1105, 1122, 1124, 1256, 1279, 1313, 1315, 1318, 1321, 1326, 1328, 1329, 1331, 1333, 1337, 1339, 1341, 1342, 1350, 1351, 1353, 1360, 1382, 1387, 1399, 1408, 1410, 1416, 1418, 1420, 1422, 1425, 1426, 1429, 1431, 1432, 1433, 1434, 1439, 1440, 1441, 1443, 1444, 1448, 1449, 1453, 1455, 1456, 1458, 1460, 1461, 1466, 1469, 1473], "viabl": [1418, 1448, 1449], "vice": [296, 1326, 1382, 1417, 1432, 1458], "video": [1313, 1320, 1322, 1437], "view": [321, 673, 830, 842, 901, 907, 913, 940, 945, 953, 981, 1009, 1011, 1315, 1326, 1331, 1382, 1399, 1415, 1416, 1417, 1440, 1443, 1449, 1452, 1458, 1468, 1470], "viewabl": [1326, 1329], "viewer": [1009, 1011, 1464], "violat": [439, 987, 1420, 1421, 1426], "viridi": 1439, "virtual": 1453, "virtualenv": 1339, "visibl": [69, 99, 171, 1326, 1425, 1431, 1440, 1452, 1455, 1458], "visit": [1319, 1462], "visual": [86, 87, 1006, 1319, 1329, 1339, 1340, 1356, 1362, 1405, 1434, 1449, 1456, 1458, 1464, 1468], "visualize_array_shard": [1431, 1434, 1443, 1468], "vital": 1418, "vjp": [67, 76, 80, 81, 492, 493, 1259, 1326, 1343, 1350, 1351, 1354, 1386, 1428, 1438, 1444], "vjp_a": [1313, 1433], "vjp_flat": 1318, "vjp_fn": [1313, 1437], "vjp_fun": [1313, 1437], "vjp_order": [1343, 1386], "vjp_x": [1313, 1433], "vjpfun": 1303, "vl": 397, "vm": [1326, 1356, 1431, 1463, 1464], "vma": [63, 1443], "vmap": [73, 74, 75, 236, 262, 283, 311, 339, 381, 415, 481, 493, 498, 566, 628, 675, 719, 729, 816, 873, 987, 998, 1012, 1315, 1320, 1321, 1325, 1326, 1332, 1333, 1336, 1342, 1343, 1348, 1349, 1351, 1360, 1385, 1402, 1409, 1413, 1414, 1415, 1417, 1418, 1422, 1425, 1430, 1432, 1433, 1435, 1436, 1440, 1442, 1443, 1456, 1465, 1466, 1469, 1470, 1474], "vmap_batched_apply_matrix": 1444, "vmap_batched_log_joint": 1445, "vmap_f": 1360, "vmap_flat": 1318, "vmap_jaxpr": 1318, "vmap_jmp": [1313, 1437], "vmap_method": [262, 283, 1012, 1326, 1348, 1350], "vmap_mjp": [1313, 1437], "vmap_rul": [74, 1318], "vmap_trac": 1318, "vmap_v": [1313, 1437], "vmem": [1455, 1457, 1458, 1460, 1461, 1462], "vmodul": 1346, "void": [664, 1350, 1424], "volatil": 155, "volum": 738, "volume12": 1367, "von": [1252, 1253], "vpu": 1461, "vq": [1326, 1418], "vr": 397, "vreg": [1458, 1461], "vscode": 1414, "vspace": 1318, "vsplit": [586, 662, 739, 937], "vstack": [610, 623, 636, 641, 663, 740, 941, 1313, 1326, 1437], "vt": [807, 1089], "vtype": 1360, "vv": 1304, "w": [77, 83, 85, 343, 344, 396, 397, 398, 504, 666, 789, 790, 791, 792, 883, 1313, 1318, 1320, 1321, 1324, 1326, 1336, 1339, 1343, 1354, 1358, 1360, 1402, 1413, 1417, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1443, 1448, 1464, 1469], "w1": [1354, 1434, 1438, 1441], "w2": [1354, 1434, 1438, 1441], "w3": [1354, 1434, 1438], "w4": 1434, "w_b_pair": [1354, 1438], "w_copi": 1434, "w_dirderiv_autodiff": [1320, 1437], "w_dirderiv_numer": [1320, 1437], "w_first": 1443, "w_frag": 1443, "w_grad": [1320, 1437], "w_grad_numer": [1320, 1437], "w_i": 883, "w_init": 1368, "w_kei": [1313, 1320, 1435, 1437, 1442], "w_last": 1443, "w_vector": 396, "wa": [77, 80, 101, 121, 132, 174, 249, 262, 283, 481, 918, 923, 971, 1091, 1101, 1280, 1282, 1313, 1315, 1319, 1324, 1326, 1328, 1329, 1331, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1348, 1350, 1352, 1353, 1357, 1358, 1360, 1386, 1410, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1429, 1430, 1432, 1433, 1434, 1435, 1443, 1444, 1445, 1447, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1464, 1465, 1469, 1470, 1471, 1474], "wai": [67, 69, 76, 105, 182, 235, 337, 499, 566, 650, 666, 741, 746, 794, 800, 911, 917, 981, 1012, 1074, 1140, 1149, 1275, 1312, 1313, 1315, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1328, 1331, 1333, 1336, 1339, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1354, 1356, 1360, 1386, 1399, 1404, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1444, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1460, 1464, 1466, 1467, 1468, 1469, 1470, 1474, 1475], "wait": [18, 102, 158, 160, 170, 177, 179, 1317, 1336, 1341, 1412, 1414, 1431, 1443, 1448, 1455, 1458, 1460], "wait_read_onli": 177, "wait_recv": [1448, 1458], "wait_send": [1448, 1458], "wait_smem_to_gmem": 173, "walk": [1320, 1431, 1432, 1436], "walkthrough": 1405, "wall": [1317, 1443], "want": [83, 98, 120, 160, 248, 249, 361, 433, 493, 500, 502, 553, 794, 1009, 1011, 1089, 1275, 1276, 1312, 1313, 1315, 1316, 1318, 1319, 1323, 1324, 1326, 1331, 1333, 1334, 1335, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1350, 1352, 1353, 1354, 1356, 1358, 1360, 1373, 1382, 1405, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1419, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1436, 1437, 1438, 1439, 1440, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1465, 1466, 1468, 1469, 1470, 1474], "warm": 1429, "warmup": 1443, "warn": [219, 497, 553, 666, 883, 993, 1316, 1324, 1326, 1333, 1349, 1399, 1425, 1432, 1434, 1435, 1446, 1452, 1455], "warp": [176, 178, 187, 292, 1452], "warpgroup": 1452, "warranti": [1424, 1435, 1442], "wasd": 1464, "wasn": [1341, 1423], "wast": [1354, 1417, 1424, 1438, 1452, 1457, 1458], "watch": 1431, "wave": 1452, "wb": [918, 1443], "wb_grad": [1320, 1437], "wbar": 1417, "we": [69, 76, 83, 84, 98, 132, 133, 182, 194, 235, 248, 249, 304, 305, 306, 361, 402, 423, 433, 434, 435, 493, 501, 506, 537, 538, 540, 574, 628, 634, 642, 666, 783, 800, 817, 836, 946, 947, 973, 974, 975, 976, 981, 1071, 1073, 1082, 1084, 1100, 1104, 1105, 1106, 1135, 1149, 1275, 1280, 1281, 1282, 1304, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1326, 1329, 1331, 1334, 1336, 1338, 1339, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1356, 1357, 1358, 1366, 1373, 1375, 1382, 1385, 1386, 1402, 1408, 1409, 1410, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1449, 1450, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1474], "weak": [296, 1326, 1351, 1414, 1418, 1426, 1473], "weak_typ": [63, 67, 76, 108, 316, 421, 422, 493, 563, 569, 571, 573, 582, 588, 623, 632, 639, 648, 663, 670, 708, 712, 713, 725, 730, 731, 740, 741, 745, 764, 767, 778, 781, 782, 841, 863, 865, 890, 903, 904, 908, 932, 938, 949, 989, 1275, 1284, 1304, 1313, 1315, 1331, 1333, 1342, 1343, 1346, 1348, 1360, 1411, 1426, 1429, 1430, 1432, 1433, 1436, 1437, 1470, 1473], "weakli": [296, 380, 893, 1326, 1351, 1426], "weakref": 1318, "weav": 1319, "web": [1340, 1464], "websit": [1325, 1356], "wedg": 322, "weed": [1313, 1433], "week": 1343, "weekli": 1379, "weep": 1432, "weibul": 1056, "weigh": [598, 1418], "weight": [341, 343, 344, 346, 347, 403, 517, 518, 519, 520, 521, 522, 523, 526, 529, 598, 600, 641, 735, 736, 737, 738, 834, 883, 1082, 1196, 1199, 1313, 1321, 1341, 1353, 1354, 1367, 1415, 1435, 1437, 1438, 1441, 1442, 1443, 1468, 1469, 1474, 1475], "weights_kei": 1469, "weights_shard": 1468, "weird": [1318, 1331], "welch": [1098, 1326], "welcom": [1312, 1322, 1329, 1330, 1339, 1349], "well": [61, 67, 499, 533, 545, 657, 697, 785, 817, 880, 882, 885, 886, 1013, 1019, 1033, 1073, 1136, 1147, 1150, 1151, 1268, 1273, 1313, 1315, 1318, 1319, 1320, 1322, 1326, 1330, 1336, 1339, 1341, 1346, 1348, 1349, 1350, 1356, 1358, 1360, 1385, 1402, 1409, 1411, 1412, 1414, 1415, 1416, 1418, 1420, 1422, 1425, 1426, 1428, 1430, 1431, 1433, 1437, 1443, 1444, 1448, 1449, 1452, 1457, 1460, 1461, 1462, 1464, 1469], "went": 1473, "were": [248, 363, 366, 1022, 1315, 1318, 1319, 1323, 1324, 1325, 1326, 1328, 1331, 1335, 1340, 1342, 1343, 1351, 1354, 1358, 1385, 1395, 1400, 1402, 1410, 1412, 1413, 1414, 1415, 1418, 1420, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1434, 1438, 1440, 1447, 1448, 1449, 1452, 1455, 1460, 1463, 1466, 1469, 1473, 1474], "weren": [1313, 1417, 1433], "wg_splat": 1452, "wg_stride": 1452, "wgmma": [160, 171, 174, 179], "wgmma_col": 1452, "wgmma_row": 1452, "wgmma_wait": 178, "wgmmaabstractaccumulatorref": 178, "wgmmaaccumulatorref": [157, 178], "wh1": 1441, "wh2": 1441, "what": [67, 424, 452, 501, 553, 616, 621, 664, 1086, 1087, 1313, 1315, 1318, 1319, 1320, 1325, 1326, 1328, 1331, 1333, 1336, 1339, 1341, 1342, 1343, 1348, 1349, 1350, 1352, 1355, 1395, 1411, 1412, 1415, 1416, 1417, 1419, 1421, 1422, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1440, 1443, 1444, 1448, 1449, 1451, 1455, 1456, 1458, 1459, 1460, 1461, 1463, 1468, 1469, 1470, 1473, 1475], "whatev": [1326, 1341, 1382, 1417, 1436, 1440, 1448], "wheel": [1326, 1343, 1415, 1427, 1468], "wheel_list": 1339, "when": [10, 13, 18, 61, 67, 69, 73, 75, 76, 77, 78, 80, 81, 84, 88, 89, 92, 93, 99, 101, 102, 120, 121, 127, 153, 158, 173, 174, 184, 234, 235, 240, 251, 262, 283, 290, 291, 292, 296, 303, 304, 305, 306, 328, 339, 343, 344, 360, 361, 381, 403, 415, 424, 430, 434, 435, 454, 456, 457, 458, 459, 460, 461, 462, 466, 467, 481, 497, 499, 501, 503, 504, 506, 550, 553, 569, 571, 580, 582, 588, 634, 656, 673, 678, 679, 681, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 699, 701, 716, 719, 734, 758, 772, 783, 784, 790, 792, 809, 819, 828, 830, 832, 838, 842, 849, 852, 860, 862, 864, 873, 877, 878, 879, 881, 882, 884, 885, 890, 901, 907, 913, 915, 919, 920, 921, 923, 924, 933, 940, 945, 946, 950, 953, 954, 955, 956, 958, 960, 962, 971, 972, 973, 974, 975, 976, 981, 982, 984, 990, 998, 999, 1009, 1011, 1012, 1013, 1015, 1022, 1032, 1033, 1036, 1059, 1060, 1061, 1062, 1063, 1071, 1072, 1074, 1093, 1104, 1105, 1106, 1135, 1150, 1151, 1275, 1279, 1282, 1312, 1313, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1326, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1337, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1354, 1358, 1367, 1373, 1375, 1382, 1386, 1395, 1399, 1402, 1409, 1411, 1412, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1436, 1437, 1438, 1440, 1441, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475], "whenev": [1343, 1346, 1412, 1417, 1448, 1452], "where": [3, 4, 34, 35, 36, 40, 53, 54, 60, 64, 67, 71, 75, 76, 78, 81, 94, 98, 121, 127, 132, 133, 135, 137, 155, 172, 182, 218, 219, 235, 250, 262, 265, 283, 286, 288, 289, 290, 293, 295, 296, 297, 304, 305, 306, 335, 339, 343, 344, 345, 356, 363, 389, 391, 397, 399, 400, 401, 403, 404, 407, 408, 409, 420, 424, 430, 435, 456, 457, 458, 459, 460, 461, 462, 463, 479, 484, 493, 499, 500, 501, 506, 510, 518, 519, 520, 521, 522, 523, 529, 531, 533, 534, 540, 541, 545, 550, 558, 559, 561, 562, 564, 566, 567, 574, 580, 601, 606, 608, 621, 633, 636, 637, 641, 650, 670, 683, 689, 699, 715, 735, 736, 738, 758, 761, 764, 766, 767, 768, 769, 770, 784, 788, 789, 790, 794, 804, 807, 815, 821, 822, 823, 825, 826, 828, 829, 832, 833, 834, 838, 839, 843, 844, 849, 850, 852, 854, 856, 857, 858, 862, 864, 865, 877, 883, 890, 892, 902, 919, 920, 921, 923, 927, 930, 939, 942, 943, 944, 951, 971, 972, 977, 983, 998, 1015, 1017, 1019, 1021, 1024, 1025, 1030, 1041, 1046, 1047, 1049, 1051, 1055, 1056, 1067, 1068, 1072, 1074, 1075, 1078, 1082, 1083, 1085, 1089, 1093, 1094, 1095, 1096, 1097, 1100, 1110, 1111, 1112, 1113, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1135, 1138, 1139, 1140, 1141, 1144, 1145, 1149, 1153, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1171, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1204, 1205, 1206, 1209, 1212, 1217, 1221, 1222, 1225, 1227, 1229, 1232, 1235, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1252, 1253, 1254, 1255, 1262, 1263, 1267, 1268, 1275, 1302, 1303, 1304, 1313, 1315, 1318, 1319, 1321, 1325, 1326, 1328, 1329, 1331, 1333, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1350, 1353, 1354, 1356, 1357, 1358, 1360, 1367, 1371, 1374, 1382, 1395, 1399, 1404, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1467, 1468, 1469, 1471, 1473, 1474, 1475], "wherea": [120, 262, 283, 654, 660, 879, 881, 1012, 1074, 1313, 1318, 1319, 1336, 1350, 1402, 1414, 1417, 1432, 1440, 1443, 1458, 1460, 1473], "wherev": [622, 1415, 1423, 1426, 1440], "whether": [3, 4, 13, 67, 74, 78, 81, 82, 83, 85, 101, 102, 119, 131, 133, 135, 138, 158, 173, 194, 225, 226, 229, 230, 237, 262, 283, 289, 290, 293, 295, 296, 297, 356, 357, 362, 364, 365, 367, 381, 387, 434, 456, 457, 458, 459, 460, 461, 462, 473, 491, 493, 508, 559, 560, 564, 579, 582, 583, 584, 716, 760, 763, 764, 765, 766, 767, 768, 769, 774, 790, 792, 836, 872, 873, 901, 902, 907, 920, 934, 977, 994, 995, 996, 997, 1022, 1066, 1067, 1082, 1085, 1102, 1256, 1261, 1265, 1267, 1269, 1270, 1276, 1302, 1303, 1312, 1313, 1318, 1325, 1326, 1328, 1329, 1337, 1339, 1348, 1349, 1354, 1357, 1371, 1386, 1405, 1411, 1414, 1416, 1418, 1421, 1425, 1426, 1429, 1430, 1433, 1437, 1438, 1440, 1441, 1443, 1448, 1462, 1464, 1470, 1475], "which": [9, 10, 29, 57, 67, 76, 77, 78, 80, 83, 88, 89, 92, 96, 98, 99, 101, 111, 112, 114, 120, 121, 127, 128, 131, 133, 137, 140, 155, 160, 172, 174, 183, 184, 194, 201, 202, 211, 218, 235, 244, 249, 250, 262, 267, 277, 281, 282, 283, 289, 290, 293, 295, 296, 297, 303, 305, 306, 311, 327, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 356, 357, 360, 361, 362, 364, 381, 387, 397, 398, 408, 409, 415, 421, 424, 434, 440, 441, 442, 443, 445, 446, 448, 456, 457, 458, 459, 460, 461, 462, 464, 472, 473, 475, 481, 487, 491, 493, 498, 499, 500, 501, 502, 504, 506, 510, 516, 526, 533, 534, 536, 539, 545, 550, 559, 564, 565, 566, 567, 568, 574, 576, 577, 578, 579, 580, 582, 586, 588, 591, 595, 596, 597, 598, 600, 610, 612, 613, 614, 616, 621, 628, 629, 630, 633, 636, 637, 640, 641, 642, 644, 645, 646, 647, 650, 655, 656, 660, 666, 667, 668, 669, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 701, 716, 719, 723, 724, 726, 727, 729, 747, 749, 750, 757, 758, 765, 772, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 800, 801, 805, 807, 808, 809, 812, 813, 814, 815, 824, 827, 829, 832, 834, 835, 838, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 862, 863, 864, 869, 870, 872, 873, 874, 875, 877, 878, 880, 882, 883, 885, 886, 892, 893, 894, 895, 896, 897, 898, 906, 907, 913, 915, 916, 918, 919, 923, 930, 933, 934, 937, 940, 941, 942, 944, 946, 947, 950, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 971, 972, 973, 974, 975, 976, 977, 980, 981, 983, 984, 985, 987, 991, 992, 998, 1006, 1007, 1009, 1011, 1012, 1013, 1019, 1022, 1029, 1032, 1036, 1045, 1059, 1060, 1061, 1062, 1063, 1070, 1071, 1074, 1079, 1080, 1082, 1088, 1089, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1122, 1124, 1128, 1136, 1138, 1139, 1140, 1145, 1147, 1148, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1275, 1279, 1302, 1303, 1304, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1321, 1323, 1325, 1326, 1328, 1329, 1330, 1331, 1333, 1334, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1360, 1367, 1373, 1374, 1382, 1385, 1386, 1387, 1395, 1399, 1400, 1404, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475], "whichev": [481, 1411], "while": [13, 18, 65, 66, 67, 76, 83, 98, 101, 102, 113, 120, 253, 337, 344, 378, 415, 456, 486, 499, 547, 566, 576, 577, 624, 625, 646, 647, 660, 704, 705, 706, 716, 751, 752, 753, 754, 773, 844, 845, 846, 853, 855, 873, 875, 897, 904, 923, 940, 967, 968, 969, 970, 971, 998, 1003, 1004, 1005, 1009, 1011, 1312, 1313, 1318, 1320, 1326, 1327, 1328, 1331, 1336, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1358, 1373, 1392, 1399, 1410, 1412, 1414, 1415, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1443, 1444, 1448, 1449, 1452, 1455, 1457, 1458, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1470, 1475], "while_bodi": 1353, "while_loop": [98, 356, 378, 456, 1313, 1318, 1326, 1348, 1411, 1432, 1433, 1448, 1470], "while_p": 1385, "whileop": [456, 486], "whio": 344, "whistl": 1419, "whitespac": [246, 247, 1475], "whl": [1339, 1358], "who": [262, 283, 1328, 1337, 1417, 1418, 1419, 1420, 1421, 1422], "whole": [82, 182, 407, 877, 1261, 1262, 1263, 1265, 1267, 1269, 1270, 1279, 1313, 1318, 1319, 1337, 1340, 1341, 1346, 1354, 1357, 1382, 1410, 1418, 1431, 1433, 1435, 1437, 1438, 1440, 1442, 1448, 1452, 1456, 1465, 1468], "whose": [12, 114, 131, 182, 206, 248, 249, 290, 293, 295, 361, 400, 403, 464, 501, 524, 527, 528, 635, 683, 688, 798, 812, 1012, 1033, 1057, 1279, 1319, 1324, 1331, 1339, 1343, 1346, 1351, 1382, 1402, 1404, 1426, 1440, 1444, 1453, 1465, 1466, 1468, 1469, 1474], "why": [264, 285, 296, 1313, 1319, 1340, 1342, 1382, 1417, 1421, 1423, 1425, 1430, 1437, 1450, 1452, 1455, 1458, 1462, 1463, 1464, 1466, 1469, 1470, 1474], "wi0": 1415, "wi1": 1415, "wide": [1312, 1313, 1322, 1350, 1418, 1425, 1426, 1437, 1449, 1455, 1456, 1457], "widehat": 883, "widest": [892, 944, 1337], "width": [445, 446, 873, 893, 1354, 1426, 1438, 1439], "wiki": [357, 697], "wikipedia": [357, 697], "wild": 1425, "wildcard": [1339, 1426], "willing": [1326, 1426, 1473], "win": [1313, 1413, 1437], "window": [341, 343, 344, 345, 347, 506, 599, 609, 680, 694, 732, 733, 776, 1098, 1101, 1102, 1103, 1316, 1326, 1338, 1343, 1356, 1395, 1416, 1439, 1444, 1449, 1452, 1457], "window_dil": 447, "window_dimens": 447, "window_s": 506, "window_shap": 1368, "window_strid": [114, 341, 343, 344, 345, 347, 447, 1430], "wio": 1439, "wip": 1328, "wipe": 1339, "wire": 1350, "wisdom": [1320, 1437], "wise": [209, 210, 299, 300, 309, 310, 312, 313, 314, 349, 350, 372, 373, 375, 411, 412, 413, 415, 420, 465, 466, 467, 469, 470, 482, 483, 491, 505, 507, 508, 511, 512, 513, 514, 531, 532, 535, 537, 538, 541, 542, 543, 544, 546, 549, 551, 555, 558, 560, 566, 569, 570, 571, 572, 573, 575, 583, 584, 586, 601, 606, 608, 610, 617, 622, 623, 632, 639, 659, 660, 662, 663, 670, 671, 672, 674, 677, 708, 711, 712, 713, 714, 719, 730, 731, 739, 740, 741, 745, 760, 777, 779, 780, 781, 782, 817, 818, 819, 820, 822, 823, 824, 825, 826, 833, 839, 841, 843, 862, 863, 865, 872, 888, 890, 903, 904, 905, 924, 926, 932, 937, 938, 939, 941, 943, 949, 956, 960, 963, 965, 988, 989, 1069, 1143, 1331, 1360, 1409, 1444, 1465, 1468], "wish": [527, 844, 981, 1313, 1339, 1349, 1414, 1458, 1462, 1464, 1465, 1474], "with_config": 1326, "with_info": 1442, "with_inner_jit": 120, "with_label": 1426, "with_memory_kind": [1404, 1441], "with_sharding_constraint": [296, 1326, 1341, 1434, 1440, 1443], "within": [47, 75, 98, 174, 195, 216, 287, 378, 381, 403, 456, 457, 458, 459, 460, 461, 462, 479, 481, 484, 503, 504, 560, 580, 616, 636, 640, 651, 655, 657, 718, 720, 758, 760, 780, 783, 815, 864, 906, 920, 972, 973, 975, 981, 994, 995, 996, 997, 1012, 1106, 1275, 1313, 1316, 1318, 1324, 1326, 1328, 1333, 1336, 1337, 1342, 1348, 1349, 1350, 1375, 1385, 1399, 1409, 1412, 1413, 1414, 1418, 1421, 1422, 1425, 1429, 1430, 1432, 1437, 1441, 1443, 1449, 1452, 1453, 1458, 1462, 1464, 1470, 1471, 1473, 1475], "without": [84, 96, 114, 120, 219, 337, 493, 634, 666, 667, 700, 716, 746, 847, 848, 853, 855, 917, 987, 1009, 1011, 1012, 1019, 1022, 1282, 1284, 1312, 1313, 1316, 1317, 1319, 1326, 1328, 1331, 1334, 1335, 1339, 1341, 1343, 1346, 1349, 1350, 1354, 1356, 1357, 1385, 1386, 1395, 1410, 1412, 1413, 1414, 1415, 1416, 1420, 1421, 1425, 1426, 1427, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1440, 1441, 1442, 1443, 1448, 1449, 1452, 1453, 1456, 1457, 1458, 1461, 1463, 1464, 1467, 1470], "wlast": [1354, 1438], "won": [96, 127, 1313, 1318, 1334, 1336, 1350, 1352, 1412, 1419, 1423, 1431, 1434, 1435, 1436, 1437, 1442, 1448, 1455], "wonder": [1319, 1415, 1429], "woo": 1318, "woohoo": [1423, 1431], "word": [290, 337, 357, 378, 456, 486, 1304, 1313, 1318, 1324, 1327, 1341, 1354, 1415, 1416, 1419, 1426, 1431, 1433, 1434, 1437, 1438, 1443], "work": [76, 84, 85, 99, 127, 235, 493, 499, 529, 861, 925, 933, 953, 972, 998, 1006, 1012, 1106, 1273, 1275, 1308, 1312, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1326, 1328, 1331, 1334, 1336, 1337, 1339, 1340, 1341, 1342, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1357, 1358, 1360, 1367, 1373, 1399, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1432, 1434, 1435, 1436, 1437, 1438, 1441, 1442, 1443, 1444, 1445, 1447, 1449, 1450, 1452, 1455, 1457, 1458, 1460, 1462, 1464, 1468, 1470, 1472], "workaround": [990, 1313, 1326, 1328, 1346, 1402, 1424], "worker": 1431, "workflow": [1313, 1337, 1339, 1353, 1385, 1414, 1419, 1426, 1433], "working_slot": 1458, "workload": [1341, 1353, 1421, 1431, 1449, 1455, 1457, 1463, 1475], "workon": 1339, "workspac": [1339, 1427], "world": [113, 664, 1313, 1412, 1414, 1415, 1419, 1435, 1437, 1442, 1449, 1454, 1460], "worri": [1348, 1415, 1436, 1440, 1460, 1469], "wors": 1421, "worst": [235, 1337, 1445], "worth": [1313, 1318, 1319, 1350, 1354, 1413, 1417, 1431, 1438, 1448, 1452, 1457, 1458, 1466], "worthwhil": 1425, "would": [10, 262, 283, 303, 304, 311, 337, 425, 426, 427, 433, 434, 435, 491, 499, 501, 664, 860, 919, 994, 995, 996, 997, 1123, 1275, 1313, 1316, 1318, 1319, 1320, 1321, 1326, 1331, 1334, 1337, 1339, 1341, 1342, 1343, 1346, 1350, 1353, 1354, 1356, 1357, 1358, 1360, 1382, 1385, 1410, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1448, 1449, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1466, 1469, 1470, 1473, 1474], "wouldn": [1313, 1354, 1358, 1417, 1424, 1429, 1433, 1438, 1440, 1469], "wouter": 1019, "wrangl": 499, "wrap": [73, 77, 127, 244, 264, 267, 285, 296, 302, 305, 306, 327, 338, 339, 343, 360, 361, 363, 366, 381, 390, 423, 439, 444, 447, 450, 451, 457, 458, 459, 460, 461, 462, 463, 471, 473, 479, 481, 485, 501, 503, 579, 621, 696, 721, 873, 895, 902, 934, 981, 1057, 1091, 1254, 1255, 1275, 1279, 1313, 1318, 1321, 1325, 1326, 1348, 1349, 1350, 1360, 1382, 1405, 1418, 1422, 1429, 1436, 1458, 1463, 1469, 1474], "wrap_init": [1326, 1360], "wrap_key_data": [1402, 1425], "wrap_nam": 1326, "wrappedfun": [268, 270, 271, 272], "wrapper": [61, 76, 79, 85, 322, 323, 324, 325, 330, 341, 346, 347, 362, 364, 365, 367, 368, 382, 383, 387, 392, 414, 419, 432, 465, 466, 467, 472, 718, 720, 721, 816, 837, 868, 987, 1007, 1281, 1283, 1313, 1318, 1326, 1331, 1336, 1348, 1350, 1354, 1360, 1395, 1419, 1428, 1430, 1433, 1437, 1438, 1443, 1452, 1458, 1460], "wrinkl": 1419, "write": [85, 171, 177, 365, 366, 367, 424, 987, 1007, 1082, 1308, 1312, 1313, 1317, 1318, 1319, 1322, 1326, 1328, 1329, 1339, 1340, 1346, 1347, 1348, 1349, 1350, 1353, 1354, 1360, 1367, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1426, 1428, 1430, 1431, 1432, 1433, 1435, 1437, 1438, 1440, 1442, 1443, 1447, 1448, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1473, 1474], "write_byt": 1353, "write_cotang": 1318, "write_prim": 1318, "writer": [1449, 1457, 1458], "written": [160, 918, 987, 1007, 1140, 1149, 1313, 1319, 1323, 1326, 1328, 1336, 1339, 1350, 1360, 1411, 1412, 1432, 1433, 1436, 1437, 1448, 1449, 1455, 1456, 1458, 1463, 1466, 1468], "wrong": [1319, 1326, 1341, 1356, 1414, 1417, 1423, 1455], "wrote": [1434, 1456, 1458], "wrt": 1448, "wsl2": [1339, 1356], "wst": 1321, "wu": 1443, "www": [76, 344, 345, 452, 491, 1328, 1329, 1351, 1367, 1435, 1442, 1464], "x": [0, 10, 64, 67, 71, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 95, 96, 98, 102, 109, 113, 114, 119, 120, 121, 127, 129, 130, 137, 156, 166, 175, 180, 182, 188, 234, 235, 240, 246, 247, 290, 292, 293, 295, 296, 298, 299, 300, 301, 303, 304, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 325, 329, 331, 332, 333, 334, 336, 337, 340, 349, 350, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 395, 397, 398, 401, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 449, 450, 454, 455, 456, 457, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 479, 480, 482, 483, 484, 487, 488, 489, 492, 493, 498, 499, 500, 501, 502, 504, 505, 507, 508, 510, 511, 512, 513, 514, 515, 527, 531, 532, 533, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585, 586, 589, 590, 591, 592, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 610, 612, 614, 617, 619, 623, 624, 625, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 651, 655, 657, 660, 662, 663, 664, 666, 667, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 702, 703, 704, 705, 706, 708, 710, 715, 716, 719, 721, 724, 729, 730, 731, 736, 739, 740, 742, 745, 750, 751, 752, 753, 754, 757, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 775, 779, 780, 781, 782, 784, 785, 786, 788, 793, 794, 796, 799, 800, 801, 806, 807, 808, 810, 811, 812, 814, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 828, 830, 832, 833, 834, 835, 836, 838, 839, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 870, 873, 874, 875, 877, 878, 879, 881, 883, 884, 887, 888, 890, 892, 894, 895, 897, 899, 900, 901, 902, 903, 904, 907, 908, 910, 911, 916, 918, 919, 925, 926, 927, 929, 930, 932, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 952, 953, 954, 956, 959, 960, 964, 965, 967, 968, 969, 970, 972, 973, 974, 975, 976, 978, 980, 981, 982, 983, 984, 988, 989, 990, 992, 998, 1004, 1005, 1012, 1016, 1020, 1021, 1025, 1026, 1027, 1029, 1030, 1032, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1047, 1049, 1052, 1053, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1069, 1072, 1074, 1077, 1080, 1086, 1087, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1141, 1142, 1143, 1145, 1147, 1148, 1150, 1151, 1152, 1157, 1158, 1159, 1160, 1161, 1162, 1167, 1169, 1170, 1171, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1201, 1202, 1204, 1205, 1206, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1225, 1226, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1264, 1266, 1267, 1268, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1297, 1299, 1303, 1304, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1326, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1353, 1354, 1360, 1373, 1374, 1382, 1385, 1386, 1399, 1404, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1474], "x0": [69, 1093, 1104, 1105, 1106, 1385], "x00": 717, "x01": 717, "x02": 717, "x03": 717, "x04": 717, "x0_bar": 69, "x1": [421, 555, 570, 572, 574, 575, 593, 602, 607, 633, 635, 637, 658, 659, 662, 671, 672, 674, 677, 683, 695, 697, 701, 708, 711, 712, 713, 714, 725, 730, 731, 734, 739, 741, 778, 779, 780, 781, 782, 786, 795, 802, 809, 813, 817, 818, 819, 820, 821, 822, 831, 833, 836, 839, 840, 841, 862, 880, 882, 885, 886, 888, 889, 890, 905, 910, 911, 916, 926, 937, 938, 939, 950, 956, 960, 963, 985, 986, 988, 1218, 1239, 1318, 1415, 1432, 1434, 1443, 1463], "x2": [113, 421, 555, 574, 593, 602, 607, 612, 635, 637, 658, 659, 662, 671, 672, 677, 683, 697, 701, 711, 712, 713, 714, 725, 734, 739, 741, 778, 779, 780, 786, 795, 802, 809, 813, 817, 821, 822, 831, 833, 836, 839, 840, 841, 862, 880, 882, 885, 886, 888, 889, 890, 905, 910, 911, 937, 938, 939, 950, 963, 985, 986, 988, 1239, 1318, 1432, 1434, 1448, 1463, 1470], "x3": [555, 597, 602, 712, 713, 780, 880, 885, 886, 890, 911], "x4": [712, 713, 780, 880, 885, 886, 890], "x5": [712, 713, 880, 886], "x6": [713, 880, 886], "x64": [129, 130, 348, 668, 869, 991, 1326, 1432, 1446], "x64_enabl": 104, "x7": [880, 886], "x86": 1326, "x86_64": [1339, 1356], "x_": [550, 641, 1082, 1313, 1415, 1433, 1443, 1460], "x_0": 1456, "x_1": [1040, 1456], "x_1d": 1315, "x_2d": 978, "x_3d": 566, "x_arr": 1409, "x_aval": 1318, "x_bar": [1313, 1318, 1354, 1433, 1438], "x_batch": 1348, "x_batch_shd": 1350, "x_bdim": 1318, "x_blk": 1443, "x_block": [1415, 1443, 1460, 1462], "x_data_shd": 1350, "x_dct": 1061, "x_dctn": 1062, "x_dens": 1462, "x_dot": [77, 78, 79, 1313, 1318, 1433], "x_edg": 736, "x_f": 1315, "x_fft": 678, "x_fft2": 679, "x_fftn": 681, "x_flat": 902, "x_grad": [1336, 1443], "x_grid": 836, "x_guess": [1313, 1433], "x_hbm_ref": 1461, "x_i": [533, 545, 641, 883, 1024, 1136, 1147, 1181, 1182, 1219, 1220], "x_init": [1313, 1433], "x_inv": 1072, "x_j": [533, 545, 641, 1136, 1147], "x_jax": [716, 1323], "x_jnp": 1444, "x_k": [403, 1040, 1082], "x_map": 1462, "x_n": 1350, "x_np": [1323, 1444], "x_numpi": 716, "x_numpy_round_trip": 716, "x_opt": 69, "x_partit": [578, 874], "x_plus_i": 719, "x_prev": [1313, 1433], "x_reconstruct": [807, 1089, 1101], "x_ref": [1448, 1449, 1455, 1456, 1457, 1458, 1460, 1462], "x_ref_or_view": [144, 145, 147, 148, 149, 150, 151, 155, 185, 186], "x_reg": 1455, "x_rng": 1469, "x_sa": 1416, "x_shape": [1346, 1453], "x_shard": [1434, 1468], "x_singl": 1434, "x_size": 1453, "x_small": 1444, "x_spec": 1453, "x_sram_ref": 1455, "x_star": [1313, 1433], "x_star_bar": [1313, 1433], "x_t": [1313, 1433], "x_times_i": 719, "x_tree": 1299, "x_vmem_ref": 1461, "x_vreg": 1461, "x_with_shard": 487, "x_without_nan": 1432, "xarg": 1431, "xavier": [518, 519], "xb": [1318, 1326], "xbar": [1303, 1417], "xc": [9, 57, 96, 192, 296, 491, 502, 568, 591, 676, 716, 998, 1326, 1360, 1382, 1404, 1416], "xcode": 1339, "xct": 1360, "xdist": 1339, "xdot": 1318, "xe": [1049, 1326], "xfals": 1411, "xi": 836, "xinv": 810, "xinv_x": 810, "xla": [84, 90, 94, 97, 98, 262, 263, 264, 265, 283, 284, 285, 286, 296, 302, 303, 315, 316, 327, 338, 339, 343, 344, 345, 360, 361, 363, 366, 381, 390, 423, 426, 433, 434, 439, 444, 447, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 471, 473, 481, 485, 486, 491, 496, 497, 503, 504, 506, 568, 579, 591, 629, 630, 668, 669, 673, 779, 783, 784, 790, 804, 807, 809, 934, 940, 950, 998, 1001, 1002, 1068, 1070, 1078, 1083, 1085, 1089, 1305, 1312, 1313, 1314, 1315, 1318, 1324, 1326, 1334, 1336, 1349, 1350, 1351, 1352, 1354, 1356, 1358, 1373, 1382, 1386, 1395, 1396, 1399, 1402, 1410, 1412, 1415, 1416, 1419, 1421, 1425, 1427, 1429, 1431, 1432, 1433, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1449, 1460, 1461, 1462, 1463, 1464, 1468, 1470], "xla_bridg": [1318, 1326, 1328, 1360], "xla_cal": [1318, 1326, 1419, 1436], "xla_call_abstract_eval_rul": 1318, "xla_call_impl": 1318, "xla_call_jvp_rul": 1318, "xla_call_p": [1318, 1326], "xla_call_partial_ev": 1318, "xla_call_peval_eqn": 1318, "xla_call_transl": 1318, "xla_call_transpose_rul": 1318, "xla_call_vmap_rul": 1318, "xla_client": [94, 97, 101, 102, 264, 285, 490, 491, 495, 496, 680, 694, 1000, 1001, 1002, 1326, 1416, 1427], "xla_comput": [1326, 1470], "xla_cpu_use_thunk_runtim": 1326, "xla_destructur": 1326, "xla_disable_hlo_pass": [1353, 1475], "xla_dump_to": 1475, "xla_enable_async_all_gath": 1475, "xla_enable_async_collective_permut": 1475, "xla_extens": 1326, "xla_ffi_callfram": 1350, "xla_ffi_declare_handler_symbol": 1350, "xla_ffi_define_handl": 1350, "xla_ffi_define_handler_symbol": 1350, "xla_ffi_error": 1350, "xla_flag": [1326, 1339, 1350, 1353, 1402, 1443, 1475], "xla_force_host_platform_device_count": [1328, 1339, 1350, 1443], "xla_gpu_all_gather_combine_threshold_byt": [1353, 1475], "xla_gpu_all_reduce_combine_threshold_byt": [1353, 1475], "xla_gpu_enable_all_gather_combine_by_dim": 1475, "xla_gpu_enable_command_buff": [1353, 1475], "xla_gpu_enable_latency_hiding_schedul": [1353, 1475], "xla_gpu_enable_pipelined_all_gath": 1475, "xla_gpu_enable_pipelined_all_reduc": 1475, "xla_gpu_enable_pipelined_reduce_scatt": 1475, "xla_gpu_enable_reduce_scatter_combine_by_dim": 1475, "xla_gpu_enable_triton_gemm": 1475, "xla_gpu_enable_while_loop_double_buff": 1475, "xla_gpu_experimental_pipeline_parallelism_opt_level": 1353, "xla_gpu_graph_level": 1475, "xla_gpu_kernel_cache_fil": 1463, "xla_gpu_memory_limit_slop_factor": 1353, "xla_gpu_per_fusion_autotune_cache_dir": [1328, 1463], "xla_gpu_pgle_profile_file_or_directory_path": 1353, "xla_gpu_reduce_scatter_combine_threshold_byt": [1353, 1475], "xla_gpu_triton_gemm_ani": 1353, "xla_metadata": 1360, "xla_pmap": [1326, 1436], "xla_python_client_alloc": [1339, 1352], "xla_python_client_mem_fract": [1326, 1349, 1352], "xla_python_client_prealloc": [1339, 1349, 1352], "xla_result": 1458, "xla_tpu_data_parallel_opt_different_sized_op": 1475, "xla_tpu_enable_ag_backward_pipelin": 1475, "xla_tpu_enable_async_collective_fus": 1475, "xla_tpu_enable_async_collective_fusion_fuse_all_gath": 1475, "xla_tpu_enable_async_collective_fusion_multiple_step": 1475, "xla_tpu_enable_data_parallel_all_reduce_opt": 1475, "xla_tpu_megacore_fusion_allow_ag": 1475, "xla_tpu_overlap_compute_collective_tc": 1475, "xla_tpu_spmd_rng_bit_generator_unsaf": [1402, 1475], "xlabel": 1445, "xlabuild": 1326, "xlacallmodul": [1328, 1343], "xlacallmoduleop": 1386, "xlacompatibleshard": 1326, "xlacomput": 1326, "xladot": 1326, "xlaexecut": 1326, "xlaop": [1326, 1360], "xlaopshardingproto": 1416, "xlaruntimeerror": [1326, 1342], "xlb": 1358, "xlim": 1426, "xlog1pi": 1151, "xlogi": 1150, "xlu": 1457, "xmap": [1326, 1417], "xmax": 736, "xmin": 736, "xmode": [1432, 1444], "xn": 836, "xnorm": 1415, "xor": [325, 448, 608, 758, 826, 923, 924, 971], "xp": [757, 1319], "xpx8l": 1431, "xrang": 1421, "xsp": 1385, "xst": 1321, "xt": [1319, 1360], "xtrue": 1411, "xx": [499, 1003, 1326, 1352], "xy": [836, 1415, 1456], "xy_tre": 1299, "xyz": 786, "y": [10, 67, 69, 73, 76, 77, 78, 79, 80, 81, 98, 113, 119, 121, 127, 166, 226, 230, 234, 240, 292, 301, 303, 311, 313, 315, 322, 324, 325, 336, 357, 359, 365, 366, 367, 368, 382, 383, 389, 392, 414, 415, 416, 417, 418, 419, 426, 430, 433, 434, 449, 450, 456, 465, 466, 467, 480, 492, 493, 498, 499, 500, 502, 558, 567, 574, 591, 595, 596, 597, 601, 604, 606, 608, 612, 623, 629, 630, 633, 634, 636, 637, 641, 663, 664, 666, 667, 670, 696, 708, 719, 730, 731, 736, 740, 774, 780, 781, 782, 786, 800, 823, 825, 826, 833, 836, 839, 843, 860, 861, 863, 865, 883, 890, 919, 925, 933, 939, 941, 943, 954, 981, 984, 989, 990, 998, 1012, 1063, 1066, 1067, 1079, 1080, 1094, 1095, 1096, 1097, 1098, 1100, 1150, 1151, 1157, 1158, 1167, 1169, 1175, 1176, 1183, 1184, 1190, 1191, 1204, 1209, 1212, 1225, 1227, 1242, 1243, 1248, 1267, 1273, 1279, 1280, 1281, 1282, 1283, 1284, 1299, 1303, 1304, 1313, 1315, 1316, 1318, 1319, 1324, 1326, 1331, 1333, 1334, 1335, 1336, 1340, 1342, 1343, 1346, 1348, 1349, 1350, 1354, 1360, 1373, 1374, 1385, 1399, 1404, 1410, 1412, 1415, 1416, 1417, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1430, 1431, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1452, 1455, 1456, 1460, 1461, 1462, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1474], "y1": [633, 637, 708, 730, 731, 781, 782, 833, 839], "y2": [113, 612, 637, 833, 839, 1470], "y3": [597, 1415, 1443], "y4": [1415, 1443], "y5": [1415, 1443], "y_": [1443, 1460], "y_0": 1456, "y_1": 1456, "y_1d": 1315, "y_att": 1415, "y_bar": [69, 1313, 1318, 1354, 1433, 1438], "y_bdim": 1318, "y_blk": [1415, 1443], "y_block": [1443, 1460], "y_block_spec": 1460, "y_dot": [77, 78, 79, 1313, 1318, 1433], "y_edg": 736, "y_f": 1315, "y_fuse": 1415, "y_grad": 1443, "y_grid": 836, "y_hat": 1385, "y_i": 883, "y_jnp": 1444, "y_l": 1140, "y_map": 1462, "y_mlp": 1415, "y_model": 1385, "y_n": [1149, 1350], "y_np": 1444, "y_out": 1415, "y_po": 67, "y_ref": [1448, 1449, 1455, 1456, 1460, 1462], "y_reg": 1455, "y_sa": 1416, "y_smooth": 1439, "y_sram_ref": 1455, "y_tree": 1299, "y_vmem_ref": 1461, "y_vreg": 1461, "yaml": [1339, 1431], "yank": 1326, "yann": 1435, "yashk2810": 1416, "yashkatariya": 1410, "ybar": [1303, 1318, 1417], "yc": [1360, 1416], "yct": 1360, "ydot": 1318, "ye": [1319, 1353, 1356, 1358], "year": [1414, 1415, 1420, 1457], "yellow": 1341, "yet": [235, 998, 1071, 1088, 1093, 1280, 1316, 1318, 1326, 1336, 1348, 1353, 1360, 1405, 1414, 1417, 1419, 1424, 1425, 1426, 1435, 1442, 1443, 1448, 1449, 1458], "yield": [502, 504, 697, 817, 1260, 1318, 1319, 1326, 1432, 1445, 1460], "ylabel": 1445, "ylim": 1426, "ymax": 736, "ymin": 736, "yml": 1339, "you": [0, 77, 83, 84, 85, 98, 99, 119, 120, 121, 136, 137, 160, 197, 199, 244, 248, 249, 251, 296, 357, 361, 381, 397, 415, 453, 457, 458, 459, 460, 461, 462, 493, 499, 500, 502, 559, 564, 578, 612, 613, 614, 628, 634, 640, 650, 675, 746, 793, 794, 795, 829, 830, 832, 834, 838, 844, 849, 852, 854, 856, 857, 858, 864, 874, 877, 892, 894, 907, 917, 923, 942, 944, 971, 972, 981, 983, 998, 1008, 1009, 1011, 1077, 1089, 1093, 1104, 1105, 1106, 1275, 1279, 1282, 1306, 1307, 1309, 1310, 1312, 1313, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1366, 1367, 1368, 1382, 1385, 1386, 1399, 1402, 1405, 1410, 1411, 1414, 1417, 1420, 1423, 1424, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1475], "young": 548, "your": [99, 119, 120, 137, 296, 499, 503, 504, 697, 965, 972, 998, 1313, 1322, 1323, 1324, 1326, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1366, 1379, 1382, 1409, 1410, 1414, 1420, 1424, 1425, 1428, 1429, 1431, 1432, 1437, 1440, 1441, 1443, 1444, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1464, 1465, 1466, 1467, 1468, 1474, 1475], "your_usernam": 1329, "yourself": [397, 1313, 1331, 1429, 1443, 1452], "yp": 1319, "yt": [1319, 1360], "yz": 1415, "yzx": 1415, "z": [67, 69, 113, 311, 563, 596, 597, 666, 667, 786, 800, 1025, 1084, 1085, 1107, 1113, 1124, 1139, 1140, 1144, 1148, 1304, 1313, 1315, 1318, 1319, 1324, 1333, 1334, 1336, 1340, 1342, 1348, 1354, 1360, 1374, 1410, 1415, 1416, 1417, 1418, 1421, 1426, 1427, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1443, 1448, 1449, 1452, 1455, 1456, 1460, 1467, 1471, 1473], "z1": 563, "z2": 563, "z7": 1339, "z_": 1460, "z_bar": [1313, 1318, 1354, 1437, 1438], "z_blk": 1443, "z_block": [1415, 1443], "z_dot": [1313, 1348, 1437], "z_partialsum": 1415, "z_posit": 113, "z_ref": [1448, 1456, 1460], "z_reg": 1455, "z_sa": 1416, "z_sram_ref": 1455, "z_vmem_ref": [1455, 1461], "z_vreg": 1461, "zbar": 1417, "zc": [1084, 1360, 1416], "zero": [0, 61, 73, 78, 81, 121, 219, 236, 246, 247, 292, 315, 316, 334, 357, 359, 365, 366, 367, 375, 412, 421, 423, 429, 431, 440, 441, 442, 443, 445, 446, 448, 449, 457, 472, 479, 529, 536, 547, 548, 550, 580, 585, 587, 595, 596, 597, 600, 610, 612, 619, 624, 625, 629, 630, 633, 637, 646, 647, 654, 660, 668, 669, 675, 676, 682, 687, 696, 698, 704, 705, 706, 710, 723, 751, 752, 753, 754, 762, 771, 772, 794, 797, 798, 803, 815, 848, 864, 869, 872, 873, 877, 878, 882, 885, 895, 909, 914, 916, 927, 930, 953, 955, 956, 959, 960, 964, 967, 968, 969, 970, 977, 992, 1022, 1036, 1059, 1061, 1074, 1075, 1094, 1095, 1096, 1097, 1098, 1100, 1102, 1103, 1106, 1128, 1151, 1244, 1275, 1280, 1281, 1282, 1313, 1316, 1318, 1319, 1326, 1328, 1334, 1337, 1342, 1346, 1348, 1353, 1357, 1360, 1368, 1385, 1395, 1404, 1411, 1414, 1415, 1419, 1424, 1425, 1426, 1430, 1432, 1433, 1434, 1439, 1440, 1443, 1444, 1445, 1449, 1452, 1453, 1455, 1457, 1458, 1460, 1462, 1463, 1465, 1469, 1474], "zeros_lik": [669, 724, 870, 991, 1313, 1318, 1353, 1424, 1433, 1443, 1448, 1455, 1458, 1460, 1462], "zeros_like1": 1318, "zeros_like2": 1318, "zeros_like_arrai": 1360, "zeroth": [742, 1130, 1131], "zeta": 1326, "zhangqiaorjc": 1415, "zip": [919, 1318, 1319, 1326, 1339, 1415, 1421, 1434, 1435, 1440, 1442, 1443, 1449, 1453, 1455, 1474], "zmqshell": 1360, "zone": 1431, "zoom": 1092, "zr": 1084, "zt": 1360, "zxx": [1101, 1102], "zxy": 1108, "\u00b2": 1348, "\u00b3": 1348, "\u00b5": [1317, 1323, 1434], "\u00b9": 1348, "\u00e0": 1444, "\u00e5": 1088, "\u03b1": 1455, "\u03b1n": 1346, "\u03b2": 1455, "\u03b8": 1140, "\u03bb": 1070, "\u03bc": [1313, 1429, 1437, 1444], "\u03c6": 1140}, "titles": ["jax.Array", "jax.Array.T", "jax.Array.addressable_shards", "jax.Array.all", "jax.Array.any", "jax.Array.argmax", "jax.Array.argmin", "jax.Array.argpartition", "jax.Array.argsort", "jax.Array.astype", "jax.Array.at", "jax.Array.choose", "jax.Array.clip", "jax.Array.committed", "jax.Array.compress", "jax.Array.conj", "jax.Array.conjugate", "jax.Array.copy", "jax.Array.copy_to_host_async", "jax.Array.cumprod", "jax.Array.cumsum", "jax.Array.device", "jax.Array.diagonal", "jax.Array.dot", "jax.Array.dtype", "jax.Array.flat", "jax.Array.flatten", "jax.Array.global_shards", "jax.Array.imag", "jax.Array.is_fully_addressable", "jax.Array.is_fully_replicated", "jax.Array.item", "jax.Array.itemsize", "jax.Array.mT", "jax.Array.max", "jax.Array.mean", "jax.Array.min", "jax.Array.nbytes", "jax.Array.ndim", "jax.Array.nonzero", "jax.Array.prod", "jax.Array.ptp", "jax.Array.ravel", "jax.Array.real", "jax.Array.repeat", "jax.Array.reshape", "jax.Array.round", "jax.Array.searchsorted", "jax.Array.shape", "jax.Array.sharding", "jax.Array.size", "jax.Array.sort", "jax.Array.squeeze", "jax.Array.std", "jax.Array.sum", "jax.Array.swapaxes", "jax.Array.take", "jax.Array.to_device", "jax.Array.trace", "jax.Array.transpose", "jax.Array.var", "jax.Array.view", "jax.Device", "jax.ShapeDtypeStruct", "jax.block_until_ready", "jax.check_tracer_leaks", "jax.checking_leaks", "jax.checkpoint", "jax.clear_caches", "jax.closure_convert", "jax.config", "jax.copy_to_host_async", "jax.core.Tracer", "jax.custom_batching.custom_vmap", "jax.custom_batching.custom_vmap.def_vmap", "jax.custom_batching.sequential_vmap", "jax.custom_gradient", "jax.custom_jvp", "jax.custom_jvp.defjvp", "jax.custom_jvp.defjvps", "jax.custom_vjp", "jax.custom_vjp.defvjp", "jax.debug.breakpoint", "jax.debug.callback", "jax.debug.inspect_array_sharding", "jax.debug.print", "jax.debug.visualize_array_sharding", "jax.debug.visualize_sharding", "jax.debug_infs", "jax.debug_nans", "jax.default_backend", "jax.default_device", "jax.default_matmul_precision", "jax.default_prng_impl", "jax.device_count", "jax.device_get", "jax.device_put", "jax.devices", "jax.disable_jit", "jax.distributed.initialize", "jax.distributed.shutdown", "jax.dlpack.from_dlpack", "jax.dlpack.to_dlpack", "jax.dtypes.bfloat16", "jax.dtypes.canonicalize_dtype", "jax.dtypes.float0", "jax.dtypes.issubdtype", "jax.dtypes.prng_key", "jax.dtypes.result_type", "jax.dtypes.scalar_type_of", "jax.enable_checks", "jax.enable_custom_prng", "jax.enable_custom_vjp_by_custom_transpose", "jax.ensure_compile_time_eval", "jax.eval_shape", "jax.experimental.checkify.Error", "jax.experimental.checkify.JaxRuntimeError", "jax.experimental.checkify.all_checks", "jax.experimental.checkify.automatic_checks", "jax.experimental.checkify.check", "jax.experimental.checkify.check_error", "jax.experimental.checkify.checkify", "jax.experimental.checkify.div_checks", "jax.experimental.checkify.float_checks", "jax.experimental.checkify.index_checks", "jax.experimental.checkify.nan_checks", "jax.experimental.checkify.user_checks", "jax.experimental.custom_dce.custom_dce", "jax.experimental.custom_dce.custom_dce.def_dce", "jax.experimental.disable_x64", "jax.experimental.enable_x64", "jax.experimental.io_callback", "jax.experimental.mesh_utils.create_device_mesh", "jax.experimental.mesh_utils.create_hybrid_device_mesh", "jax.experimental.multihost_utils.assert_equal", "jax.experimental.multihost_utils.broadcast_one_to_all", "jax.experimental.multihost_utils.global_array_to_host_local_array", "jax.experimental.multihost_utils.host_local_array_to_global_array", "jax.experimental.multihost_utils.process_allgather", "jax.experimental.multihost_utils.sync_global_devices", "jax.experimental.pallas.BlockSpec", "jax.experimental.pallas.GridSpec", "jax.experimental.pallas.MemoryRef", "jax.experimental.pallas.Slice", "jax.experimental.pallas.atomic_add", "jax.experimental.pallas.atomic_and", "jax.experimental.pallas.atomic_cas", "jax.experimental.pallas.atomic_max", "jax.experimental.pallas.atomic_min", "jax.experimental.pallas.atomic_or", "jax.experimental.pallas.atomic_xchg", "jax.experimental.pallas.atomic_xor", "jax.experimental.pallas.broadcast_to", "jax.experimental.pallas.debug_print", "jax.experimental.pallas.dot", "jax.experimental.pallas.load", "jax.experimental.pallas.max_contiguous", "jax.experimental.pallas.mosaic_gpu.ACC", "jax.experimental.pallas.mosaic_gpu.Barrier", "jax.experimental.pallas.mosaic_gpu.BlockSpec", "jax.experimental.pallas.mosaic_gpu.CompilerParams", "jax.experimental.pallas.mosaic_gpu.GMEM", "jax.experimental.pallas.mosaic_gpu.Layout", "jax.experimental.pallas.mosaic_gpu.MemorySpace", "jax.experimental.pallas.mosaic_gpu.SMEM", "jax.experimental.pallas.mosaic_gpu.SwizzleTransform", "jax.experimental.pallas.mosaic_gpu.TilingTransform", "jax.experimental.pallas.mosaic_gpu.TransposeTransform", "jax.experimental.pallas.mosaic_gpu.WGMMAAccumulatorRef", "jax.experimental.pallas.mosaic_gpu.barrier_arrive", "jax.experimental.pallas.mosaic_gpu.barrier_wait", "jax.experimental.pallas.mosaic_gpu.commit_smem", "jax.experimental.pallas.mosaic_gpu.copy_gmem_to_smem", "jax.experimental.pallas.mosaic_gpu.copy_smem_to_gmem", "jax.experimental.pallas.mosaic_gpu.emit_pipeline", "jax.experimental.pallas.mosaic_gpu.layout_cast", "jax.experimental.pallas.mosaic_gpu.set_max_registers", "jax.experimental.pallas.mosaic_gpu.wait_smem_to_gmem", "jax.experimental.pallas.mosaic_gpu.wgmma", "jax.experimental.pallas.mosaic_gpu.wgmma_wait", "jax.experimental.pallas.multiple_of", "jax.experimental.pallas.num_programs", "jax.experimental.pallas.pallas_call", "jax.experimental.pallas.program_id", "jax.experimental.pallas.run_scoped", "jax.experimental.pallas.store", "jax.experimental.pallas.swap", "jax.experimental.pallas.triton.CompilerParams", "jax.experimental.pallas.triton.approx_tanh", "jax.experimental.pallas.triton.debug_barrier", "jax.experimental.pallas.triton.elementwise_inline_asm", "jax.experimental.pallas.when", "jax.experimental.serialize_executable.deserialize_and_load", "jax.experimental.serialize_executable.serialize", "jax.experimental.shard_map.shard_map", "jax.experimental.sparse.BCOO", "jax.experimental.sparse.BCSR", "jax.experimental.sparse.COO", "jax.experimental.sparse.CSC", "jax.experimental.sparse.CSR", "jax.experimental.sparse.JAXSparse", "jax.experimental.sparse.bcoo_broadcast_in_dim", "jax.experimental.sparse.bcoo_concatenate", "jax.experimental.sparse.bcoo_dot_general", "jax.experimental.sparse.bcoo_dot_general_sampled", "jax.experimental.sparse.bcoo_dynamic_slice", "jax.experimental.sparse.bcoo_extract", "jax.experimental.sparse.bcoo_fromdense", "jax.experimental.sparse.bcoo_gather", "jax.experimental.sparse.bcoo_multiply_dense", "jax.experimental.sparse.bcoo_multiply_sparse", "jax.experimental.sparse.bcoo_reduce_sum", "jax.experimental.sparse.bcoo_reshape", "jax.experimental.sparse.bcoo_slice", "jax.experimental.sparse.bcoo_sort_indices", "jax.experimental.sparse.bcoo_squeeze", "jax.experimental.sparse.bcoo_sum_duplicates", "jax.experimental.sparse.bcoo_todense", "jax.experimental.sparse.bcoo_transpose", "jax.experimental.sparse.bcoo_update_layout", "jax.experimental.sparse.bcsr_dot_general", "jax.experimental.sparse.bcsr_extract", "jax.experimental.sparse.bcsr_fromdense", "jax.experimental.sparse.bcsr_todense", "jax.experimental.sparse.coo_fromdense", "jax.experimental.sparse.coo_matmat", "jax.experimental.sparse.coo_matvec", "jax.experimental.sparse.coo_todense", "jax.experimental.sparse.csr_fromdense", "jax.experimental.sparse.csr_matmat", "jax.experimental.sparse.csr_matvec", "jax.experimental.sparse.csr_todense", "jax.experimental.sparse.empty", "jax.experimental.sparse.eye", "jax.experimental.sparse.grad", "jax.experimental.sparse.linalg.lobpcg_standard", "jax.experimental.sparse.linalg.spsolve", "jax.experimental.sparse.random_bcoo", "jax.experimental.sparse.sparsify", "jax.experimental.sparse.todense", "jax.experimental.sparse.value_and_grad", "jax.export.SymbolicScope", "jax.export.default_export_platform", "jax.export.deserialize", "jax.export.export", "jax.export.is_symbolic_dim", "jax.export.maximum_supported_calling_convention_version", "jax.export.minimum_supported_calling_convention_version", "jax.export.register_namedtuple_serialization", "jax.export.register_pytree_node_serialization", "jax.export.symbolic_args_specs", "jax.export.symbolic_shape", "jax.extend.core.ClosedJaxpr", "jax.extend.core.Jaxpr", "jax.extend.core.JaxprEqn", "jax.extend.core.Literal", "jax.extend.core.Primitive", "jax.extend.core.Token", "jax.extend.core.Var", "jax.extend.core.array_types", "jax.extend.core.jaxpr_as_fun", "jax.extend.core.primitives", "jax.extend.ffi.ffi_call", "jax.extend.ffi.ffi_lowering", "jax.extend.ffi.pycapsule", "jax.extend.ffi.register_ffi_target", "jax.extend.linear_util.StoreException", "jax.extend.linear_util.WrappedFun", "jax.extend.linear_util.cache", "jax.extend.linear_util.merge_linear_aux", "jax.extend.linear_util.transformation", "jax.extend.linear_util.transformation_with_aux", "jax.extend.linear_util.wrap_init", "jax.extend.mlir.dialects", "jax.extend.mlir.ir", "jax.extend.mlir.passmanager", "jax.extend.random.define_prng_impl", "jax.extend.random.rbg_prng_impl", "jax.extend.random.seed_with_impl", "jax.extend.random.threefry2x32_p", "jax.extend.random.threefry_2x32", "jax.extend.random.threefry_prng_impl", "jax.extend.random.unsafe_rbg_prng_impl", "jax.ffi.ffi_call", "jax.ffi.ffi_lowering", "jax.ffi.pycapsule", "jax.ffi.register_ffi_target", "jax.ffi.register_ffi_type_id", "jax.flatten_util.ravel_pytree", "jax.grad", "jax.hessian", "jax.image.resize", "jax.image.scale_and_translate", "jax.jacfwd", "jax.jacobian", "jax.jacrev", "jax.jit", "jax.jvp", "jax.lax.abs", "jax.lax.acos", "jax.lax.acosh", "jax.lax.add", "jax.lax.after_all", "jax.lax.all_gather", "jax.lax.all_to_all", "jax.lax.approx_max_k", "jax.lax.approx_min_k", "jax.lax.argmax", "jax.lax.argmin", "jax.lax.asin", "jax.lax.asinh", "jax.lax.associative_scan", "jax.lax.atan", "jax.lax.atan2", "jax.lax.atanh", "jax.lax.axis_index", "jax.lax.axis_size", "jax.lax.batch_matmul", "jax.lax.bessel_i0e", "jax.lax.bessel_i1e", "jax.lax.betainc", "jax.lax.bitcast_convert_type", "jax.lax.bitwise_and", "jax.lax.bitwise_not", "jax.lax.bitwise_or", "jax.lax.bitwise_xor", "jax.lax.broadcast", "jax.lax.broadcast_in_dim", "jax.lax.broadcast_shapes", "jax.lax.broadcast_to_rank", "jax.lax.broadcasted_iota", "jax.lax.cbrt", "jax.lax.ceil", "jax.lax.clamp", "jax.lax.clz", "jax.lax.collapse", "jax.lax.complex", "jax.lax.composite", "jax.lax.concatenate", "jax.lax.cond", "jax.lax.conj", "jax.lax.conv", "jax.lax.conv_dimension_numbers", "jax.lax.conv_general_dilated", "jax.lax.conv_general_dilated_local", "jax.lax.conv_general_dilated_patches", "jax.lax.conv_transpose", "jax.lax.conv_with_general_padding", "jax.lax.convert_element_type", "jax.lax.cos", "jax.lax.cosh", "jax.lax.cumlogsumexp", "jax.lax.cummax", "jax.lax.cummin", "jax.lax.cumprod", "jax.lax.cumsum", "jax.lax.custom_linear_solve", "jax.lax.custom_root", "jax.lax.digamma", "jax.lax.div", "jax.lax.dot", "jax.lax.dot_general", "jax.lax.dynamic_index_in_dim", "jax.lax.dynamic_slice", "jax.lax.dynamic_slice_in_dim", "jax.lax.dynamic_update_index_in_dim", "jax.lax.dynamic_update_slice", "jax.lax.dynamic_update_slice_in_dim", "jax.lax.eq", "jax.lax.erf", "jax.lax.erf_inv", "jax.lax.erfc", "jax.lax.exp", "jax.lax.exp2", "jax.lax.expand_dims", "jax.lax.expm1", "jax.lax.fft", "jax.lax.floor", "jax.lax.fori_loop", "jax.lax.full", "jax.lax.full_like", "jax.lax.gather", "jax.lax.ge", "jax.lax.gt", "jax.lax.igamma", "jax.lax.igammac", "jax.lax.imag", "jax.lax.index_in_dim", "jax.lax.index_take", "jax.lax.integer_pow", "jax.lax.iota", "jax.lax.is_finite", "jax.lax.le", "jax.lax.lgamma", "jax.lax.linalg.SvdAlgorithm", "jax.lax.linalg.cholesky", "jax.lax.linalg.cholesky_update", "jax.lax.linalg.eig", "jax.lax.linalg.eigh", "jax.lax.linalg.hessenberg", "jax.lax.linalg.householder_product", "jax.lax.linalg.lu", "jax.lax.linalg.lu_pivots_to_permutation", "jax.lax.linalg.qdwh", "jax.lax.linalg.qr", "jax.lax.linalg.schur", "jax.lax.linalg.svd", "jax.lax.linalg.symmetric_product", "jax.lax.linalg.triangular_solve", "jax.lax.linalg.tridiagonal", "jax.lax.linalg.tridiagonal_solve", "jax.lax.log", "jax.lax.log1p", "jax.lax.logistic", "jax.lax.lt", "jax.lax.map", "jax.lax.max", "jax.lax.min", "jax.lax.mul", "jax.lax.ne", "jax.lax.neg", "jax.lax.nextafter", "jax.lax.optimization_barrier", "jax.lax.pad", "jax.lax.platform_dependent", "jax.lax.pmax", "jax.lax.pmean", "jax.lax.pmin", "jax.lax.polygamma", "jax.lax.population_count", "jax.lax.pow", "jax.lax.ppermute", "jax.lax.pshuffle", "jax.lax.psum", "jax.lax.psum_scatter", "jax.lax.pswapaxes", "jax.lax.random_gamma_grad", "jax.lax.real", "jax.lax.reciprocal", "jax.lax.reduce", "jax.lax.reduce_and", "jax.lax.reduce_max", "jax.lax.reduce_min", "jax.lax.reduce_or", "jax.lax.reduce_precision", "jax.lax.reduce_prod", "jax.lax.reduce_sum", "jax.lax.reduce_window", "jax.lax.reduce_xor", "jax.lax.rem", "jax.lax.reshape", "jax.lax.rev", "jax.lax.rng_bit_generator", "jax.lax.rng_uniform", "jax.lax.round", "jax.lax.rsqrt", "jax.lax.scan", "jax.lax.scatter", "jax.lax.scatter_add", "jax.lax.scatter_apply", "jax.lax.scatter_max", "jax.lax.scatter_min", "jax.lax.scatter_mul", "jax.lax.select", "jax.lax.select_n", "jax.lax.shift_left", "jax.lax.shift_right_arithmetic", "jax.lax.shift_right_logical", "jax.lax.sign", "jax.lax.sin", "jax.lax.sinh", "jax.lax.slice", "jax.lax.slice_in_dim", "jax.lax.sort", "jax.lax.sort_key_val", "jax.lax.split", "jax.lax.sqrt", "jax.lax.square", "jax.lax.squeeze", "jax.lax.stop_gradient", "jax.lax.sub", "jax.lax.switch", "jax.lax.tan", "jax.lax.tanh", "jax.lax.top_k", "jax.lax.transpose", "jax.lax.while_loop", "jax.lax.with_sharding_constraint", "jax.lax.zeros_like_array", "jax.lax.zeta", "jax.lib.xla_bridge.get_backend", "jax.lib.xla_bridge.get_compile_options", "jax.linear_transpose", "jax.linearize", "jax.live_arrays", "jax.local_device_count", "jax.local_devices", "jax.log_compiles", "jax.make_array_from_callback", "jax.make_array_from_process_local_data", "jax.make_array_from_single_device_arrays", "jax.make_jaxpr", "jax.make_mesh", "jax.named_call", "jax.named_scope", "jax.nn.celu", "jax.nn.dot_product_attention", "jax.nn.elu", "jax.nn.gelu", "jax.nn.get_scaled_dot_general_config", "jax.nn.glu", "jax.nn.hard_sigmoid", "jax.nn.hard_silu", "jax.nn.hard_swish", "jax.nn.hard_tanh", "jax.nn.identity", "jax.nn.initializers.constant", "jax.nn.initializers.delta_orthogonal", "jax.nn.initializers.glorot_normal", "jax.nn.initializers.glorot_uniform", "jax.nn.initializers.he_normal", "jax.nn.initializers.he_uniform", "jax.nn.initializers.lecun_normal", "jax.nn.initializers.lecun_uniform", "jax.nn.initializers.normal", "jax.nn.initializers.ones", "jax.nn.initializers.orthogonal", "jax.nn.initializers.truncated_normal", "jax.nn.initializers.uniform", "jax.nn.initializers.variance_scaling", "jax.nn.initializers.zeros", "jax.nn.leaky_relu", "jax.nn.log_sigmoid", "jax.nn.log_softmax", "jax.nn.logsumexp", "jax.nn.mish", "jax.nn.one_hot", "jax.nn.relu", "jax.nn.relu6", "jax.nn.scaled_dot_general", "jax.nn.scaled_matmul", "jax.nn.selu", "jax.nn.sigmoid", "jax.nn.silu", "jax.nn.soft_sign", "jax.nn.softmax", "jax.nn.softplus", "jax.nn.sparse_plus", "jax.nn.sparse_sigmoid", "jax.nn.squareplus", "jax.nn.standardize", "jax.nn.swish", "jax.no_tracing", "jax.numpy.ComplexWarning", "jax.numpy.abs", "jax.numpy.absolute", "jax.numpy.acos", "jax.numpy.acosh", "jax.numpy.add", "jax.numpy.all", "jax.numpy.allclose", "jax.numpy.amax", "jax.numpy.amin", "jax.numpy.angle", "jax.numpy.any", "jax.numpy.append", "jax.numpy.apply_along_axis", "jax.numpy.apply_over_axes", "jax.numpy.arange", "jax.numpy.arccos", "jax.numpy.arccosh", "jax.numpy.arcsin", "jax.numpy.arcsinh", "jax.numpy.arctan", "jax.numpy.arctan2", "jax.numpy.arctanh", "jax.numpy.argmax", "jax.numpy.argmin", "jax.numpy.argpartition", "jax.numpy.argsort", "jax.numpy.argwhere", "jax.numpy.around", "jax.numpy.array", "jax.numpy.array_equal", "jax.numpy.array_equiv", "jax.numpy.array_repr", "jax.numpy.array_split", "jax.numpy.array_str", "jax.numpy.asarray", "jax.numpy.asin", "jax.numpy.asinh", "jax.numpy.astype", "jax.numpy.atan", "jax.numpy.atan2", "jax.numpy.atanh", "jax.numpy.atleast_1d", "jax.numpy.atleast_2d", "jax.numpy.atleast_3d", "jax.numpy.average", "jax.numpy.bartlett", "jax.numpy.bincount", "jax.numpy.bitwise_and", "jax.numpy.bitwise_count", "jax.numpy.bitwise_invert", "jax.numpy.bitwise_left_shift", "jax.numpy.bitwise_not", "jax.numpy.bitwise_or", "jax.numpy.bitwise_right_shift", "jax.numpy.bitwise_xor", "jax.numpy.blackman", "jax.numpy.block", "jax.numpy.bool_", "jax.numpy.broadcast_arrays", "jax.numpy.broadcast_shapes", "jax.numpy.broadcast_to", "jax.numpy.c_", "jax.numpy.can_cast", "jax.numpy.cbrt", "jax.numpy.cdouble", "jax.numpy.ceil", "jax.numpy.character", "jax.numpy.choose", "jax.numpy.clip", "jax.numpy.column_stack", "jax.numpy.complex128", "jax.numpy.complex64", "jax.numpy.complex_", "jax.numpy.complexfloating", "jax.numpy.compress", "jax.numpy.concat", "jax.numpy.concatenate", "jax.numpy.conj", "jax.numpy.conjugate", "jax.numpy.convolve", "jax.numpy.copy", "jax.numpy.copysign", "jax.numpy.corrcoef", "jax.numpy.correlate", "jax.numpy.cos", "jax.numpy.cosh", "jax.numpy.count_nonzero", "jax.numpy.cov", "jax.numpy.cross", "jax.numpy.csingle", "jax.numpy.cumprod", "jax.numpy.cumsum", "jax.numpy.cumulative_prod", "jax.numpy.cumulative_sum", "jax.numpy.deg2rad", "jax.numpy.degrees", "jax.numpy.delete", "jax.numpy.diag", "jax.numpy.diag_indices", "jax.numpy.diag_indices_from", "jax.numpy.diagflat", "jax.numpy.diagonal", "jax.numpy.diff", "jax.numpy.digitize", "jax.numpy.divide", "jax.numpy.divmod", "jax.numpy.dot", "jax.numpy.double", "jax.numpy.dsplit", "jax.numpy.dstack", "jax.numpy.dtype", "jax.numpy.ediff1d", "jax.numpy.einsum", "jax.numpy.einsum_path", "jax.numpy.empty", "jax.numpy.empty_like", "jax.numpy.equal", "jax.numpy.exp", "jax.numpy.exp2", "jax.numpy.expand_dims", "jax.numpy.expm1", "jax.numpy.extract", "jax.numpy.eye", "jax.numpy.fabs", "jax.numpy.fft.fft", "jax.numpy.fft.fft2", "jax.numpy.fft.fftfreq", "jax.numpy.fft.fftn", "jax.numpy.fft.fftshift", "jax.numpy.fft.hfft", "jax.numpy.fft.ifft", "jax.numpy.fft.ifft2", "jax.numpy.fft.ifftn", "jax.numpy.fft.ifftshift", "jax.numpy.fft.ihfft", "jax.numpy.fft.irfft", "jax.numpy.fft.irfft2", "jax.numpy.fft.irfftn", "jax.numpy.fft.rfft", "jax.numpy.fft.rfft2", "jax.numpy.fft.rfftfreq", "jax.numpy.fft.rfftn", "jax.numpy.fill_diagonal", "jax.numpy.finfo", "jax.numpy.fix", "jax.numpy.flatnonzero", "jax.numpy.flexible", "jax.numpy.flip", "jax.numpy.fliplr", "jax.numpy.flipud", "jax.numpy.float16", "jax.numpy.float32", "jax.numpy.float64", "jax.numpy.float_", "jax.numpy.float_power", "jax.numpy.floating", "jax.numpy.floor", "jax.numpy.floor_divide", "jax.numpy.fmax", "jax.numpy.fmin", "jax.numpy.fmod", "jax.numpy.frexp", "jax.numpy.from_dlpack", "jax.numpy.frombuffer", "jax.numpy.fromfile", "jax.numpy.fromfunction", "jax.numpy.fromiter", "jax.numpy.frompyfunc", "jax.numpy.fromstring", "jax.numpy.full", "jax.numpy.full_like", "jax.numpy.gcd", "jax.numpy.generic", "jax.numpy.geomspace", "jax.numpy.get_printoptions", "jax.numpy.gradient", "jax.numpy.greater", "jax.numpy.greater_equal", "jax.numpy.hamming", "jax.numpy.hanning", "jax.numpy.heaviside", "jax.numpy.histogram", "jax.numpy.histogram2d", "jax.numpy.histogram_bin_edges", "jax.numpy.histogramdd", "jax.numpy.hsplit", "jax.numpy.hstack", "jax.numpy.hypot", "jax.numpy.i0", "jax.numpy.identity", "jax.numpy.iinfo", "jax.numpy.imag", "jax.numpy.index_exp", "jax.numpy.indices", "jax.numpy.inexact", "jax.numpy.inner", "jax.numpy.insert", "jax.numpy.int16", "jax.numpy.int32", "jax.numpy.int64", "jax.numpy.int8", "jax.numpy.int_", "jax.numpy.integer", "jax.numpy.interp", "jax.numpy.intersect1d", "jax.numpy.invert", "jax.numpy.isclose", "jax.numpy.iscomplex", "jax.numpy.iscomplexobj", "jax.numpy.isdtype", "jax.numpy.isfinite", "jax.numpy.isin", "jax.numpy.isinf", "jax.numpy.isnan", "jax.numpy.isneginf", "jax.numpy.isposinf", "jax.numpy.isreal", "jax.numpy.isrealobj", "jax.numpy.isscalar", "jax.numpy.issubdtype", "jax.numpy.iterable", "jax.numpy.ix_", "jax.numpy.kaiser", "jax.numpy.kron", "jax.numpy.lcm", "jax.numpy.ldexp", "jax.numpy.left_shift", "jax.numpy.less", "jax.numpy.less_equal", "jax.numpy.lexsort", "jax.numpy.linalg.cholesky", "jax.numpy.linalg.cond", "jax.numpy.linalg.cross", "jax.numpy.linalg.det", "jax.numpy.linalg.diagonal", "jax.numpy.linalg.eig", "jax.numpy.linalg.eigh", "jax.numpy.linalg.eigvals", "jax.numpy.linalg.eigvalsh", "jax.numpy.linalg.inv", "jax.numpy.linalg.lstsq", "jax.numpy.linalg.matmul", "jax.numpy.linalg.matrix_norm", "jax.numpy.linalg.matrix_power", "jax.numpy.linalg.matrix_rank", "jax.numpy.linalg.matrix_transpose", "jax.numpy.linalg.multi_dot", "jax.numpy.linalg.norm", "jax.numpy.linalg.outer", "jax.numpy.linalg.pinv", "jax.numpy.linalg.qr", "jax.numpy.linalg.slogdet", "jax.numpy.linalg.solve", "jax.numpy.linalg.svd", "jax.numpy.linalg.svdvals", "jax.numpy.linalg.tensordot", "jax.numpy.linalg.tensorinv", "jax.numpy.linalg.tensorsolve", "jax.numpy.linalg.trace", "jax.numpy.linalg.vecdot", "jax.numpy.linalg.vector_norm", "jax.numpy.linspace", "jax.numpy.load", "jax.numpy.log", "jax.numpy.log10", "jax.numpy.log1p", "jax.numpy.log2", "jax.numpy.logaddexp", "jax.numpy.logaddexp2", "jax.numpy.logical_and", "jax.numpy.logical_not", "jax.numpy.logical_or", "jax.numpy.logical_xor", "jax.numpy.logspace", "jax.numpy.mask_indices", "jax.numpy.matmul", "jax.numpy.matrix_transpose", "jax.numpy.matvec", "jax.numpy.max", "jax.numpy.maximum", "jax.numpy.mean", "jax.numpy.median", "jax.numpy.meshgrid", "jax.numpy.mgrid", "jax.numpy.min", "jax.numpy.minimum", "jax.numpy.mod", "jax.numpy.modf", "jax.numpy.moveaxis", "jax.numpy.multiply", "jax.numpy.nan_to_num", "jax.numpy.nanargmax", "jax.numpy.nanargmin", "jax.numpy.nancumprod", "jax.numpy.nancumsum", "jax.numpy.nanmax", "jax.numpy.nanmean", "jax.numpy.nanmedian", "jax.numpy.nanmin", "jax.numpy.nanpercentile", "jax.numpy.nanprod", "jax.numpy.nanquantile", "jax.numpy.nanstd", "jax.numpy.nansum", "jax.numpy.nanvar", "jax.numpy.ndarray", "jax.numpy.ndarray.at", "jax.numpy.ndim", "jax.numpy.negative", "jax.numpy.nextafter", "jax.numpy.nonzero", "jax.numpy.not_equal", "jax.numpy.number", "jax.numpy.object_", "jax.numpy.ogrid", "jax.numpy.ones", "jax.numpy.ones_like", "jax.numpy.outer", "jax.numpy.packbits", "jax.numpy.pad", "jax.numpy.partition", "jax.numpy.percentile", "jax.numpy.permute_dims", "jax.numpy.piecewise", "jax.numpy.place", "jax.numpy.poly", "jax.numpy.polyadd", "jax.numpy.polyder", "jax.numpy.polydiv", "jax.numpy.polyfit", "jax.numpy.polyint", "jax.numpy.polymul", "jax.numpy.polysub", "jax.numpy.polyval", "jax.numpy.positive", "jax.numpy.pow", "jax.numpy.power", "jax.numpy.printoptions", "jax.numpy.prod", "jax.numpy.promote_types", "jax.numpy.ptp", "jax.numpy.put", "jax.numpy.put_along_axis", "jax.numpy.quantile", "jax.numpy.r_", "jax.numpy.rad2deg", "jax.numpy.radians", "jax.numpy.ravel", "jax.numpy.ravel_multi_index", "jax.numpy.real", "jax.numpy.reciprocal", "jax.numpy.remainder", "jax.numpy.repeat", "jax.numpy.reshape", "jax.numpy.resize", "jax.numpy.result_type", "jax.numpy.right_shift", "jax.numpy.rint", "jax.numpy.roll", "jax.numpy.rollaxis", "jax.numpy.roots", "jax.numpy.rot90", "jax.numpy.round", "jax.numpy.s_", "jax.numpy.save", "jax.numpy.savez", "jax.numpy.searchsorted", "jax.numpy.select", "jax.numpy.set_printoptions", "jax.numpy.setdiff1d", "jax.numpy.setxor1d", "jax.numpy.shape", "jax.numpy.sign", "jax.numpy.signbit", "jax.numpy.signedinteger", "jax.numpy.sin", "jax.numpy.sinc", "jax.numpy.single", "jax.numpy.sinh", "jax.numpy.size", "jax.numpy.sort", "jax.numpy.sort_complex", "jax.numpy.spacing", "jax.numpy.split", "jax.numpy.sqrt", "jax.numpy.square", "jax.numpy.squeeze", "jax.numpy.stack", "jax.numpy.std", "jax.numpy.subtract", "jax.numpy.sum", "jax.numpy.swapaxes", "jax.numpy.take", "jax.numpy.take_along_axis", "jax.numpy.tan", "jax.numpy.tanh", "jax.numpy.tensordot", "jax.numpy.tile", "jax.numpy.trace", "jax.numpy.transpose", "jax.numpy.trapezoid", "jax.numpy.tri", "jax.numpy.tril", "jax.numpy.tril_indices", "jax.numpy.tril_indices_from", "jax.numpy.trim_zeros", "jax.numpy.triu", "jax.numpy.triu_indices", "jax.numpy.triu_indices_from", "jax.numpy.true_divide", "jax.numpy.trunc", "jax.numpy.ufunc", "jax.numpy.uint", "jax.numpy.uint16", "jax.numpy.uint32", "jax.numpy.uint64", "jax.numpy.uint8", "jax.numpy.union1d", "jax.numpy.unique", "jax.numpy.unique_all", "jax.numpy.unique_counts", "jax.numpy.unique_inverse", "jax.numpy.unique_values", "jax.numpy.unpackbits", "jax.numpy.unravel_index", "jax.numpy.unsignedinteger", "jax.numpy.unstack", "jax.numpy.unwrap", "jax.numpy.vander", "jax.numpy.var", "jax.numpy.vdot", "jax.numpy.vecdot", "jax.numpy.vecmat", "jax.numpy.vectorize", "jax.numpy.vsplit", "jax.numpy.vstack", "jax.numpy.where", "jax.numpy.zeros", "jax.numpy.zeros_like", "jax.numpy_rank_promotion", "jax.ops.segment_max", "jax.ops.segment_min", "jax.ops.segment_prod", "jax.ops.segment_sum", "jax.pmap", "jax.print_environment_info", "jax.process_count", "jax.process_index", "jax.process_indices", "jax.profiler.StepTraceAnnotation", "jax.profiler.TraceAnnotation", "jax.profiler.annotate_function", "jax.profiler.device_memory_profile", "jax.profiler.save_device_memory_profile", "jax.profiler.start_server", "jax.profiler.start_trace", "jax.profiler.stop_trace", "jax.profiler.trace", "jax.pure_callback", "jax.random.PRNGKey", "jax.random.ball", "jax.random.bernoulli", "jax.random.beta", "jax.random.binomial", "jax.random.bits", "jax.random.categorical", "jax.random.cauchy", "jax.random.chisquare", "jax.random.choice", "jax.random.clone", "jax.random.dirichlet", "jax.random.double_sided_maxwell", "jax.random.exponential", "jax.random.f", "jax.random.fold_in", "jax.random.gamma", "jax.random.generalized_normal", "jax.random.geometric", "jax.random.gumbel", "jax.random.key", "jax.random.key_data", "jax.random.laplace", "jax.random.loggamma", "jax.random.logistic", "jax.random.lognormal", "jax.random.maxwell", "jax.random.multinomial", "jax.random.multivariate_normal", "jax.random.normal", "jax.random.orthogonal", "jax.random.pareto", "jax.random.permutation", "jax.random.poisson", "jax.random.rademacher", "jax.random.randint", "jax.random.rayleigh", "jax.random.split", "jax.random.t", "jax.random.triangular", "jax.random.truncated_normal", "jax.random.uniform", "jax.random.wald", "jax.random.weibull_min", "jax.random.wrap_key_data", "jax.scipy.cluster.vq.vq", "jax.scipy.fft.dct", "jax.scipy.fft.dctn", "jax.scipy.fft.idct", "jax.scipy.fft.idctn", "jax.scipy.integrate.trapezoid", "jax.scipy.interpolate.RegularGridInterpolator", "jax.scipy.linalg.block_diag", "jax.scipy.linalg.cho_factor", "jax.scipy.linalg.cho_solve", "jax.scipy.linalg.cholesky", "jax.scipy.linalg.det", "jax.scipy.linalg.eigh", "jax.scipy.linalg.eigh_tridiagonal", "jax.scipy.linalg.expm", "jax.scipy.linalg.expm_frechet", "jax.scipy.linalg.funm", "jax.scipy.linalg.hessenberg", "jax.scipy.linalg.hilbert", "jax.scipy.linalg.inv", "jax.scipy.linalg.lu", "jax.scipy.linalg.lu_factor", "jax.scipy.linalg.lu_solve", "jax.scipy.linalg.pascal", "jax.scipy.linalg.polar", "jax.scipy.linalg.qr", "jax.scipy.linalg.rsf2csf", "jax.scipy.linalg.schur", "jax.scipy.linalg.solve", "jax.scipy.linalg.solve_triangular", "jax.scipy.linalg.sqrtm", "jax.scipy.linalg.svd", "jax.scipy.linalg.toeplitz", "jax.scipy.ndimage.map_coordinates", "jax.scipy.optimize.OptimizeResults", "jax.scipy.optimize.minimize", "jax.scipy.signal.convolve", "jax.scipy.signal.convolve2d", "jax.scipy.signal.correlate", "jax.scipy.signal.correlate2d", "jax.scipy.signal.csd", "jax.scipy.signal.detrend", "jax.scipy.signal.fftconvolve", "jax.scipy.signal.istft", "jax.scipy.signal.stft", "jax.scipy.signal.welch", "jax.scipy.sparse.linalg.bicgstab", "jax.scipy.sparse.linalg.cg", "jax.scipy.sparse.linalg.gmres", "jax.scipy.spatial.transform.Rotation", "jax.scipy.spatial.transform.Slerp", "jax.scipy.special.bernoulli", "jax.scipy.special.beta", "jax.scipy.special.betainc", "jax.scipy.special.betaln", "jax.scipy.special.digamma", "jax.scipy.special.entr", "jax.scipy.special.erf", "jax.scipy.special.erfc", "jax.scipy.special.erfinv", "jax.scipy.special.exp1", "jax.scipy.special.expi", "jax.scipy.special.expit", "jax.scipy.special.expn", "jax.scipy.special.factorial", "jax.scipy.special.fresnel", "jax.scipy.special.gamma", "jax.scipy.special.gammainc", "jax.scipy.special.gammaincc", "jax.scipy.special.gammaln", "jax.scipy.special.gammasgn", "jax.scipy.special.hyp1f1", "jax.scipy.special.i0", "jax.scipy.special.i0e", "jax.scipy.special.i1", "jax.scipy.special.i1e", "jax.scipy.special.kl_div", "jax.scipy.special.log_ndtr", "jax.scipy.special.log_softmax", "jax.scipy.special.logit", "jax.scipy.special.logsumexp", "jax.scipy.special.lpmn", "jax.scipy.special.lpmn_values", "jax.scipy.special.multigammaln", "jax.scipy.special.ndtr", "jax.scipy.special.ndtri", "jax.scipy.special.poch", "jax.scipy.special.polygamma", "jax.scipy.special.rel_entr", "jax.scipy.special.softmax", "jax.scipy.special.spence", "jax.scipy.special.sph_harm", "jax.scipy.special.xlog1py", "jax.scipy.special.xlogy", "jax.scipy.special.zeta", "jax.scipy.stats.bernoulli.cdf", "jax.scipy.stats.bernoulli.logpmf", "jax.scipy.stats.bernoulli.pmf", "jax.scipy.stats.bernoulli.ppf", "jax.scipy.stats.beta.cdf", "jax.scipy.stats.beta.logcdf", "jax.scipy.stats.beta.logpdf", "jax.scipy.stats.beta.logsf", "jax.scipy.stats.beta.pdf", "jax.scipy.stats.beta.sf", "jax.scipy.stats.betabinom.logpmf", "jax.scipy.stats.betabinom.pmf", "jax.scipy.stats.binom.logpmf", "jax.scipy.stats.binom.pmf", "jax.scipy.stats.cauchy.cdf", "jax.scipy.stats.cauchy.isf", "jax.scipy.stats.cauchy.logcdf", "jax.scipy.stats.cauchy.logpdf", "jax.scipy.stats.cauchy.logsf", "jax.scipy.stats.cauchy.pdf", "jax.scipy.stats.cauchy.ppf", "jax.scipy.stats.cauchy.sf", "jax.scipy.stats.chi2.cdf", "jax.scipy.stats.chi2.logcdf", "jax.scipy.stats.chi2.logpdf", "jax.scipy.stats.chi2.logsf", "jax.scipy.stats.chi2.pdf", "jax.scipy.stats.chi2.sf", "jax.scipy.stats.dirichlet.logpdf", "jax.scipy.stats.dirichlet.pdf", "jax.scipy.stats.expon.cdf", "jax.scipy.stats.expon.logcdf", "jax.scipy.stats.expon.logpdf", "jax.scipy.stats.expon.logsf", "jax.scipy.stats.expon.pdf", "jax.scipy.stats.expon.ppf", "jax.scipy.stats.expon.sf", "jax.scipy.stats.gamma.cdf", "jax.scipy.stats.gamma.logcdf", "jax.scipy.stats.gamma.logpdf", "jax.scipy.stats.gamma.logsf", "jax.scipy.stats.gamma.pdf", "jax.scipy.stats.gamma.sf", "jax.scipy.stats.gaussian_kde", "jax.scipy.stats.gaussian_kde.evaluate", "jax.scipy.stats.gaussian_kde.integrate_box_1d", "jax.scipy.stats.gaussian_kde.integrate_gaussian", "jax.scipy.stats.gaussian_kde.integrate_kde", "jax.scipy.stats.gaussian_kde.logpdf", "jax.scipy.stats.gaussian_kde.pdf", "jax.scipy.stats.gaussian_kde.resample", "jax.scipy.stats.gennorm.cdf", "jax.scipy.stats.gennorm.logpdf", "jax.scipy.stats.gennorm.pdf", "jax.scipy.stats.geom.logpmf", "jax.scipy.stats.geom.pmf", "jax.scipy.stats.laplace.cdf", "jax.scipy.stats.laplace.logpdf", "jax.scipy.stats.laplace.pdf", "jax.scipy.stats.logistic.cdf", "jax.scipy.stats.logistic.isf", "jax.scipy.stats.logistic.logpdf", "jax.scipy.stats.logistic.pdf", "jax.scipy.stats.logistic.ppf", "jax.scipy.stats.logistic.sf", "jax.scipy.stats.mode", "jax.scipy.stats.multinomial.logpmf", "jax.scipy.stats.multinomial.pmf", "jax.scipy.stats.multivariate_normal.logpdf", "jax.scipy.stats.multivariate_normal.pdf", "jax.scipy.stats.nbinom.logpmf", "jax.scipy.stats.nbinom.pmf", "jax.scipy.stats.norm.cdf", "jax.scipy.stats.norm.isf", "jax.scipy.stats.norm.logcdf", "jax.scipy.stats.norm.logpdf", "jax.scipy.stats.norm.logsf", "jax.scipy.stats.norm.pdf", "jax.scipy.stats.norm.ppf", "jax.scipy.stats.norm.sf", "jax.scipy.stats.pareto.logpdf", "jax.scipy.stats.pareto.pdf", "jax.scipy.stats.poisson.cdf", "jax.scipy.stats.poisson.logpmf", "jax.scipy.stats.poisson.pmf", "jax.scipy.stats.rankdata", "jax.scipy.stats.sem", "jax.scipy.stats.t.logpdf", "jax.scipy.stats.t.pdf", "jax.scipy.stats.truncnorm.cdf", "jax.scipy.stats.truncnorm.logcdf", "jax.scipy.stats.truncnorm.logpdf", "jax.scipy.stats.truncnorm.logsf", "jax.scipy.stats.truncnorm.pdf", "jax.scipy.stats.truncnorm.sf", "jax.scipy.stats.uniform.cdf", "jax.scipy.stats.uniform.logpdf", "jax.scipy.stats.uniform.pdf", "jax.scipy.stats.uniform.ppf", "jax.scipy.stats.vonmises.logpdf", "jax.scipy.stats.vonmises.pdf", "jax.scipy.stats.wrapcauchy.logpdf", "jax.scipy.stats.wrapcauchy.pdf", "jax.shard_map", "jax.test_util.check_grads", "jax.test_util.check_jvp", "jax.test_util.check_vjp", "jax.transfer_guard", "jax.tree.all", "jax.tree.broadcast", "jax.tree.flatten", "jax.tree.flatten_with_path", "jax.tree.leaves", "jax.tree.leaves_with_path", "jax.tree.map", "jax.tree.map_with_path", "jax.tree.reduce", "jax.tree.structure", "jax.tree.transpose", "jax.tree.unflatten", "jax.tree_util.KeyEntry", "jax.tree_util.KeyPath", "jax.tree_util.Partial", "jax.tree_util.all_leaves", "jax.tree_util.build_tree", "jax.tree_util.keystr", "jax.tree_util.register_dataclass", "jax.tree_util.register_pytree_node", "jax.tree_util.register_pytree_node_class", "jax.tree_util.register_pytree_with_keys", "jax.tree_util.register_pytree_with_keys_class", "jax.tree_util.register_static", "jax.tree_util.tree_all", "jax.tree_util.tree_broadcast", "jax.tree_util.tree_flatten", "jax.tree_util.tree_flatten_with_path", "jax.tree_util.tree_leaves", "jax.tree_util.tree_leaves_with_path", "jax.tree_util.tree_map", "jax.tree_util.tree_map_with_path", "jax.tree_util.tree_reduce", "jax.tree_util.tree_structure", "jax.tree_util.tree_transpose", "jax.tree_util.tree_unflatten", "jax.tree_util.treedef_children", "jax.tree_util.treedef_is_leaf", "jax.tree_util.treedef_tuple", "jax.typing.ArrayLike", "jax.typing.DTypeLike", "jax.value_and_grad", "jax.vjp", "jax.vmap", "jaxlib.xla_client.register_custom_call_target", "Advanced compilation", "Advanced debugging", "JAX tutorials draft", "Parallel computation", "Profiling and performance", "Example: Writing a simple neural network", "About the project", "Advanced automatic differentiation", "Resources and Advanced Guides", "Ahead-of-time lowering and compilation", "API compatibility", "Asynchronous dispatch", "Autodidax: JAX core from scratch", "Autodidax2, part 1: JAX from scratch, again", "Automatic differentiation", "Automatic vectorization", "Getting Started with JAX", "Benchmarking JAX code", "Buffer donation", "Building on JAX", "Change log", "Concurrency", "Configuration Options", "Contributing to JAX", "Developer notes", "Control flow and logical operators with JIT", "Custom pytrees and initialization with unexpected values", "Introduction to debugging", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">checkify</span></code> transformation", "JAX debugging flags", "Compiled prints and breakpoints", "Default dtypes and the X64 flag", "Python and NumPy version support policy", "Building from source", "Profiling device memory", "Distributed data loading", "Errors", "Exporting and serializing staged-out computations", "Exporting and serialization", "Interoperation with TensorFlow", "Shape polymorphism", "Extension guides", "External callbacks", "Frequently asked questions (FAQ)", "Foreign function interface (FFI)", "Glossary of terms", "GPU memory allocation", "GPU performance tips", "Gradient checkpointing with <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.checkpoint</span></code> (<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.remat</span></code>)", "JAX: High performance array computing", "Installation", "Introduction to Parallel Programming with JAX", "Investigating a regression", "Public API: <code class=\"docutils literal notranslate\"><span class=\"pre\">jax</span></code> package", "JAX Internals: primitives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.core</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.debug</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.distributed</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.dlpack</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.dtypes</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.example_libraries</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.example_libraries.optimizers</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.example_libraries.stax</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.checkify</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.compilation_cache</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.custom_dce</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.custom_partitioning</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.jet</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.key_reuse</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.mesh_utils</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.multihost_utils</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pallas</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pallas.mosaic_gpu</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pallas.tpu</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pallas.triton</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pjit</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.serialize_executable</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.shard_map</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.sparse</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.export</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.core</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.linear_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.mlir</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.random</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.ffi</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.flatten_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.image</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.lax</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.lib</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.nn</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.nn.initializers</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.numpy</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.ops</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.profiler</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.random</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.scipy</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.sharding</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.stages</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.test_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.tree</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.tree_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.typing</span></code> module", "jax.Array migration", "JAX internals: The jaxpr language", "Sequencing side-effects in JAX", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.remat</span></code> / <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.checkpoint</span></code> changes: what you need to know", "Type Annotation Roadmap for JAX", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shmap</span></code> (<code class=\"docutils literal notranslate\"><span class=\"pre\">shard_map</span></code>) for simple per-device code", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend</span></code>: a module for extensions", "Efficient transposition of replication-inducing collectives", "JEP 18137: Scope of JAX NumPy &amp; SciPy Wrappers", "Custom JVP/VJP rules for JAX-transformable functions", "JEP 25516: Effort-based versioning for JAX", "JAX PRNG Design", "JEP 28661: Supporting the <code class=\"docutils literal notranslate\"><span class=\"pre\">__jax_array__</span></code> protocol", "<code class=\"docutils literal notranslate\"><span class=\"pre\">custom_vjp</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">nondiff_argnums</span></code> update guide", "Omnistaging", "JEP 9263: Typed keys &amp; pluggable RNGs", "Design of Type Promotion Semantics for JAX", "Jax and Jaxlib versioning", "JAX Enhancement Proposals (JEPs)", "Just-in-time compilation", "Key concepts", "Introduction to multi-controller JAX (aka multi-process/multi-host JAX)", "\ud83d\udd2a JAX - The Sharp Bits \ud83d\udd2a", "Custom derivative rules", "Distributed arrays and automatic parallelization", "Training a simple neural network, with PyTorch data loading", "Writing custom Jaxpr interpreters in JAX", "The Autodiff Cookbook", "Control autodiff\u2019s saved values with <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.checkpoint</span></code> (aka <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.remat</span></code>)", "Generalized convolutions in JAX", "Explicit sharding (a.k.a. \u201csharding in types\u201d)", "JAX Memories and Host Offloading", "Training a simple neural network, with tensorflow/datasets data loading", "Manual parallelism with <code class=\"docutils literal notranslate\"><span class=\"pre\">shard_map</span></code>", "Quickstart: How to think in JAX", "Autobatching for Bayesian inference", "Notes", "Pallas Changelog", "Pallas Async Operations", "Pallas Design", "Pallas Design Notes", "Pallas:Mosaic GPU", "Writing Mosaic GPU kernels with Pallas", "Grids and BlockSpecs", "Pallas: a JAX kernel language", "Software Pipelining", "Pallas Quickstart", "Writing TPU kernels with Pallas", "Distributed Computing in Pallas for TPUs", "Pallas TPU", "Matrix Multiplication", "TPU Pipelining", "Scalar Prefetch and Block-Sparse Computation", "Persistent compilation cache", "Profiling computation", "Pytrees", "Pseudorandom numbers", "Rank promotion warning", "Introduction to parallel programming", "Stateful computations", "Tracing", "Transfer guard", "Tutorials", "Type promotion semantics", "Working with pytrees", "List of XLA compiler flags"], "titleterms": {"": [1313, 1333, 1335, 1354, 1410, 1413, 1414, 1415, 1418, 1424, 1437, 1438, 1443], "0": [1326, 1426, 1447], "1": [1318, 1319, 1320, 1326, 1341, 1349, 1414, 1418, 1422, 1426, 1436, 1443, 1447, 1468], "10": 1326, "101": 1308, "11": [1326, 1447], "12": 1326, "12ish": 1326, "13": 1326, "14": 1326, "15": 1326, "16": [1326, 1447], "17": 1326, "18": [1326, 1447], "18137": 1418, "19": 1326, "1d": 1439, "2": [1313, 1318, 1320, 1326, 1341, 1349, 1414, 1418, 1422, 1426, 1434, 1436, 1439, 1443, 1468], "20": 1326, "201": 1308, "2020": 1326, "2021": 1326, "2022": 1326, "2023": 1326, "2024": [1326, 1447], "2025": 1326, "21": 1326, "22": [1326, 1447], "23": 1326, "24": 1326, "25": 1326, "25516": 1420, "26": 1326, "27": 1326, "28": 1326, "28661": 1422, "29": [1326, 1447], "3": [1318, 1319, 1320, 1326, 1341, 1349, 1414, 1418, 1422, 1426, 1468], "30": [1326, 1447], "301": 1308, "31": [1326, 1447], "32": [1326, 1337, 1447], "33": [1326, 1447], "34": [1326, 1447], "35": [1326, 1447], "36": [1326, 1447], "37": [1326, 1447], "38": 1326, "39": 1326, "3d": 1439, "4": [1318, 1320, 1326, 1341, 1414, 1418, 1434, 1447], "40": 1326, "42": 1326, "43": 1326, "44": 1326, "45": 1326, "46": 1326, "47": 1326, "48": 1326, "49": 1326, "5": [1318, 1320, 1326, 1414, 1418, 1447], "50": 1326, "51": 1326, "52": 1326, "55": 1326, "56": 1326, "57": 1326, "58": 1326, "59": 1326, "6": [1326, 1418, 1447], "60": 1326, "61": 1326, "62": 1326, "63": 1326, "64": [1326, 1337], "64bit": 1432, "65": 1326, "66": 1326, "67": 1326, "68": 1326, "69": 1326, "7": 1326, "70": 1326, "71": 1326, "72": 1326, "73": 1326, "74": 1326, "75": 1326, "76": 1326, "77": 1326, "8": [1326, 1434, 1443], "9": 1326, "9263": 1425, "A": [1312, 1350, 1415, 1452, 1469], "By": 1328, "In": [1328, 1432, 1452], "No": [1328, 1416], "On": 1318, "The": [1313, 1334, 1337, 1411, 1413, 1419, 1432, 1437, 1453, 1469, 1475], "To": 1328, "With": 1464, "__jax_array__": 1422, "ab": [298, 554], "abil": [1413, 1417], "about": [1312, 1341], "absolut": 555, "abstract": 1360, "acc": 157, "access": [1457, 1458, 1462], "accumul": [1452, 1455], "aco": [299, 556], "acosh": [300, 557], "across": [1325, 1341, 1417, 1427, 1434, 1448], "activ": [1397, 1441, 1460, 1463], "ad": [1318, 1343, 1412, 1464], "add": [301, 558, 1449], "addit": [1339, 1463], "addressable_shard": 2, "advanc": [1306, 1307, 1313, 1314, 1339, 1350, 1354, 1402, 1437, 1438, 1458, 1464], "advantag": 1452, "after": [1410, 1413], "after_al": 302, "again": 1319, "against": [1320, 1437], "aggreg": 1328, "agreement": 1329, "ahead": [1315, 1458], "aka": [1431, 1437, 1438], "algebra": 1395, "alias": [1379, 1448], "align": 1418, "all": [3, 559, 1261, 1328, 1426, 1443, 1448, 1458], "all_check": 117, "all_gath": [303, 1417, 1443, 1458], "all_leav": 1276, "all_to_al": [304, 1443], "allclos": 560, "alloc": [1352, 1452], "allow": 1328, "alreadi": 1415, "altern": [1420, 1421], "amax": 561, "ambigu": 1440, "amd": [1339, 1356], "amin": 562, "an": [1319, 1350, 1440, 1465], "analys": 1315, "analyz": 1455, "angl": 563, "ani": [4, 564], "annot": [1414, 1425], "annotate_funct": 1005, "aot": 1315, "api": [1313, 1316, 1359, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1382, 1383, 1384, 1385, 1387, 1399, 1402, 1408, 1410, 1414, 1415, 1417, 1418, 1419, 1422, 1424, 1427, 1430, 1433, 1443, 1455], "append": 565, "appendix": [1417, 1426], "appli": 1465, "applic": 1314, "apply_along_axi": 566, "apply_over_ax": 567, "approach": [1341, 1468], "approx_max_k": 305, "approx_min_k": 306, "approx_tanh": 188, "april": 1326, "ar": [1349, 1413, 1417, 1427, 1434, 1436], "arang": 568, "arcco": 569, "arccosh": 570, "arcsin": 571, "arcsinh": 572, "arctan": 573, "arctan2": 574, "arctanh": 575, "argmax": [5, 307, 576], "argmin": [6, 308, 577], "argpartit": [7, 578], "argsort": [8, 579], "argument": [1313, 1315, 1394, 1395, 1413, 1429, 1433], "argwher": 580, "aris": [1410, 1424], "arithmet": 1425, "around": [581, 1440, 1463], "arrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 582, 1328, 1341, 1349, 1355, 1359, 1399, 1410, 1414, 1415, 1418, 1422, 1431, 1432, 1434, 1440, 1444, 1452, 1457], "array_equ": 583, "array_equiv": 584, "array_repr": 585, "array_split": 586, "array_str": 587, "array_typ": 259, "arraylik": 1300, "arriv": 1452, "asarrai": 588, "asid": 1319, "asin": [309, 589], "asinh": [310, 590], "ask": 1349, "assembl": [1415, 1443], "assert": 1346, "assert_equ": 134, "associ": 1328, "associative_scan": 311, "astyp": [9, 591], "async": [1328, 1448, 1458], "asynchron": [1317, 1336, 1452], "atan": [312, 592], "atan2": [313, 593], "atanh": [314, 594], "atleast_1d": 595, "atleast_2d": 596, "atleast_3d": 597, "atomic_add": 144, "atomic_and": 145, "atomic_ca": 146, "atomic_max": 147, "atomic_min": 148, "atomic_or": 149, "atomic_xchg": 150, "atomic_xor": 151, "atrou": 1439, "aug": 1326, "author": 1425, "auto": [1353, 1435, 1440, 1442, 1444], "auto_shard": 1440, "autobatch": 1445, "autocomplet": 1414, "autodidax": 1318, "autodidax2": 1319, "autodiff": [1313, 1318, 1331, 1437, 1438], "automat": [1313, 1314, 1319, 1320, 1321, 1359, 1434, 1468], "automatic_check": 118, "autopgl": 1353, "avail": 1315, "aval": 1417, "averag": 598, "avoid": [1414, 1426], "await": 1452, "ax": [1415, 1443], "axi": [1418, 1440], "axis_index": 315, "axis_s": 316, "b": 1452, "back": [1413, 1426], "backend": [1312, 1328, 1350, 1378, 1454], "background": [1402, 1412, 1414, 1418, 1448, 1460], "backward": [1343, 1417], "ball": 1014, "barrier": [158, 1452, 1458], "barrier_arr": 169, "barrier_wait": 170, "bartlett": 599, "base": [1349, 1420, 1424], "basic": [1313, 1402, 1415, 1433, 1434, 1439, 1443, 1455], "batch": [1318, 1350, 1360, 1385, 1410, 1434, 1435, 1442, 1443, 1445], "batch_matmul": 317, "bayesian": 1445, "bazel": 1339, "bcoo": [195, 1328, 1385], "bcoo_broadcast_in_dim": 201, "bcoo_concaten": 202, "bcoo_dot_gener": 203, "bcoo_dot_general_sampl": 204, "bcoo_dynamic_slic": 205, "bcoo_extract": 206, "bcoo_fromdens": 207, "bcoo_gath": 208, "bcoo_multiply_dens": 209, "bcoo_multiply_spars": 210, "bcoo_reduce_sum": 211, "bcoo_reshap": 212, "bcoo_slic": 213, "bcoo_sort_indic": 214, "bcoo_squeez": 215, "bcoo_sum_dupl": 216, "bcoo_todens": 217, "bcoo_transpos": 218, "bcoo_update_layout": 219, "bcsr": [196, 1385], "bcsr_dot_gener": 220, "bcsr_extract": 221, "bcsr_fromdens": 222, "bcsr_todens": 223, "behavior": [1328, 1339, 1349, 1413], "behind": 1475, "benchmark": [1314, 1323], "benefit": 1449, "bernoulli": [1015, 1109, 1153, 1154, 1155, 1156, 1403], "bessel_i0": 318, "bessel_i1": 319, "best": 1409, "beta": [1016, 1110, 1157, 1158, 1159, 1160, 1161, 1162, 1403], "betabinom": [1163, 1164, 1403], "betainc": [320, 1111], "betaln": 1112, "between": [1328, 1427], "bfloat16": [103, 1460], "bi": 1458, "bicgstab": 1104, "binari": [1328, 1445], "bincount": 600, "binom": [1165, 1166, 1403], "binomi": 1017, "bit": [1018, 1336, 1337, 1432, 1434], "bitcast_convert_typ": 321, "bitwise_and": [322, 601], "bitwise_count": 602, "bitwise_invert": 603, "bitwise_left_shift": 604, "bitwise_not": [323, 605], "bitwise_or": [324, 606], "bitwise_right_shift": 607, "bitwise_xor": [325, 608], "blackman": 609, "blackwel": 1452, "block": [610, 1412, 1415, 1441, 1443, 1456, 1458, 1460, 1462], "block_diag": 1065, "block_until_readi": 64, "blockspec": [140, 159, 1453, 1455, 1457], "bool_": 611, "both": [1313, 1437], "bound": 1432, "boundari": [1427, 1448], "break": 1410, "breakpoint": [82, 1333, 1336], "broadcast": [326, 1262, 1457], "broadcast_arrai": 612, "broadcast_in_dim": 327, "broadcast_one_to_al": 135, "broadcast_shap": [328, 613], "broadcast_to": [152, 614], "broadcast_to_rank": 329, "broadcasted_iota": 330, "broke": [1410, 1424], "buffer": [1324, 1425, 1455, 1458], "bug": [1326, 1424], "build": [1318, 1322, 1325, 1339, 1350, 1356, 1417, 1441], "build_tre": 1277, "built": 1312, "byte": 1328, "c": 1350, "c_": 615, "cach": [268, 1328, 1429, 1452, 1463], "calendar": 1420, "call": [1328, 1343, 1350, 1410, 1455], "callback": [83, 1314, 1333, 1336, 1348, 1359], "can": [1349, 1358, 1410, 1413, 1424, 1427, 1429, 1431, 1440], "can_cast": 616, "cannot": 1315, "canonic": 1328, "canonicalize_dtyp": 104, "captur": [1328, 1464], "case": 1413, "categor": 1019, "categori": 1426, "cauchi": [1020, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1403], "caus": 1352, "caveat": [1346, 1432], "cbrt": [331, 617], "cdf": [1153, 1157, 1167, 1175, 1183, 1190, 1204, 1209, 1212, 1225, 1235, 1242, 1248], "cdoubl": 618, "ceil": [332, 619], "celu": 505, "cg": 1105, "challeng": [1414, 1422], "chang": [1326, 1329, 1349, 1410, 1413, 1424, 1427], "changelog": 1447, "charact": 620, "check": [119, 1320, 1328, 1329, 1333, 1334, 1339, 1375, 1414, 1437], "check_error": 120, "check_grad": 1257, "check_jvp": 1258, "check_tracer_leak": 65, "check_vjp": 1259, "check_vma": 1443, "checkifi": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 1333, 1334, 1370], "checking_leak": 66, "checklist": 1329, "checkpoint": [67, 1328, 1354, 1413, 1438, 1441], "chi2": [1175, 1176, 1177, 1178, 1179, 1180, 1403], "chisquar": 1021, "cho_factor": 1066, "cho_solv": 1067, "choic": 1022, "choleski": [395, 784, 1068], "cholesky_upd": 396, "choos": [11, 621], "chunk": 1453, "clamp": 333, "class": [1378, 1379, 1380, 1381, 1386, 1394, 1395, 1404, 1405, 1414], "classif": 1445, "clear_cach": 68, "client": 1328, "clip": [12, 622, 1313, 1433], "clone": 1023, "closedjaxpr": [252, 1411], "closure_convert": 69, "cloud": [1356, 1463], "cluster": [1058, 1403, 1418], "clusterbarri": 1452, "clz": 334, "co": [349, 638], "code": [1313, 1323, 1325, 1329, 1350, 1353, 1410, 1415, 1424, 1434, 1437], "collaps": 335, "collect": [1328, 1353, 1417, 1443], "color": 1328, "column_stack": 623, "combin": [1321, 1426], "commit": [13, 1329], "commit_smem": [171, 1452], "common": [1328, 1352, 1474, 1475], "commun": [1353, 1356, 1458], "compar": 1468, "comparison": 1346, "compat": [1316, 1328, 1343, 1416, 1417], "compil": [1306, 1315, 1328, 1336, 1349, 1359, 1360, 1412, 1424, 1429, 1444, 1452, 1463, 1475], "compilation_cach": 1371, "compilerparam": [160, 187], "complet": 1452, "complex": [336, 1313, 1418, 1426, 1437], "complex128": 624, "complex64": 625, "complex_": 626, "complexflo": 627, "complexwarn": 553, "compos": [1313, 1325, 1437], "composit": 337, "compress": [14, 628], "comput": [1309, 1314, 1320, 1325, 1341, 1343, 1346, 1355, 1424, 1431, 1434, 1441, 1457, 1458, 1462, 1464, 1469], "concat": 629, "concaten": [338, 630, 1415, 1443], "concept": [1430, 1468], "conclus": [1448, 1460], "concret": [1413, 1440], "concurr": 1327, "cond": [339, 785, 1318, 1331, 1336, 1411], "conda": 1356, "condit": [1411, 1458], "config": 70, "configur": [1328, 1335, 1359, 1402, 1457, 1461, 1464, 1475], "conj": [15, 340, 631], "conjug": [16, 632], "consid": 1420, "consider": 1414, "consolid": 1341, "constant": [516, 1328, 1386, 1411, 1413, 1418], "constrain": 1434, "constraint": 1346, "constructor": 1457, "contain": [1313, 1349, 1356, 1433, 1445], "content": [1413, 1419, 1421, 1424], "context": [1319, 1328, 1335], "contribut": [1329, 1330], "contributor": 1329, "control": [1318, 1331, 1333, 1336, 1339, 1395, 1415, 1431, 1432, 1438, 1441, 1443, 1457], "conv": [341, 1439], "conv_dimension_numb": 342, "conv_general_dil": [343, 1439], "conv_general_dilated_loc": 344, "conv_general_dilated_patch": 345, "conv_transpos": 346, "conv_with_general_pad": [347, 1439], "conveni": [1341, 1417], "convent": [1313, 1328, 1343, 1433], "convert": 1349, "convert_element_typ": 348, "convolut": 1439, "convolv": [633, 1094], "convolve2d": 1095, "coo": 197, "coo_fromdens": 224, "coo_matmat": 225, "coo_matvec": 226, "coo_todens": 227, "cookbook": 1437, "coordin": 1385, "copi": [17, 634, 1399, 1448, 1452, 1458], "copy_gmem_to_smem": 172, "copy_smem_to_gmem": 173, "copy_to_host_async": [18, 71], "copysign": 635, "core": [72, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 1318, 1325, 1361, 1388, 1411, 1416], "core_map": 1452, "corrcoef": 636, "correct": 1346, "correl": [637, 1096], "correlate2d": 1097, "cosh": [350, 639], "cotang": 1417, "count_nonzero": 640, "counter": 1469, "cov": 641, "cover": [1316, 1432], "cpu": [1328, 1356], "creat": [1328, 1339, 1410], "create_device_mesh": 132, "create_hybrid_device_mesh": 133, "creation": [1402, 1444], "cross": [642, 786, 1343, 1452], "csc": 198, "csd": 1098, "csingl": 643, "csr": 199, "csr_fromdens": 228, "csr_matmat": 229, "csr_matvec": 230, "csr_todens": 231, "cuda": [1328, 1349, 1356], "cumlogsumexp": 351, "cummax": 352, "cummin": 353, "cumprod": [19, 354, 644], "cumsum": [20, 355, 645], "cumulative_prod": 646, "cumulative_sum": 647, "cuspars": 1328, "custom": [1313, 1314, 1328, 1332, 1339, 1343, 1350, 1354, 1359, 1395, 1419, 1425, 1433, 1436, 1438, 1464, 1465, 1474], "custom_batch": [73, 74, 75, 1359], "custom_dc": [127, 128, 1372], "custom_gradi": 76, "custom_jvp": [77, 78, 79, 1313, 1348, 1359, 1433], "custom_linear_solv": 356, "custom_partit": [1373, 1463], "custom_root": 357, "custom_vjp": [80, 81, 1313, 1359, 1423, 1433], "custom_vmap": [73, 74], "customclass": 1349, "customiz": 1413, "data": [1318, 1341, 1385, 1413, 1431, 1434, 1435, 1441, 1442, 1443, 1457, 1462, 1468], "dataset": [1418, 1442, 1445], "dct": 1059, "dctn": 1060, "debug": [82, 83, 84, 85, 86, 87, 1307, 1313, 1314, 1315, 1328, 1333, 1335, 1336, 1340, 1343, 1346, 1348, 1362, 1432, 1433], "debug_barri": 189, "debug_inf": 88, "debug_nan": 89, "debug_print": 153, "dec": 1326, "decemb": 1447, "decompos": 1448, "decomposit": 1448, "decor": [1349, 1414], "deep": 1314, "def_dc": 128, "def_vmap": 74, "default": [1328, 1337], "default_backend": 90, "default_devic": 91, "default_export_platform": 242, "default_matmul_precis": 92, "default_prng_impl": 93, "defens": 1448, "defin": [1313, 1360, 1417, 1433, 1439, 1445], "define_prng_impl": 276, "definit": 1465, "defjvp": [78, 79], "defvjp": 81, "deg2rad": 648, "degre": 649, "delet": 650, "delta_orthogon": 517, "dens": 1462, "depend": [1339, 1413, 1417, 1424], "deprec": 1392, "deriv": [1313, 1433, 1444, 1455], "describ": 1434, "descript": 1419, "deseri": 243, "deserialize_and_load": 192, "design": [1330, 1402, 1414, 1421, 1422, 1425, 1426, 1449, 1450, 1454], "det": [787, 1069], "detail": [1313, 1328, 1412, 1415, 1433], "detect": 1425, "detrend": 1099, "develop": [1312, 1330, 1343, 1414, 1416, 1465], "devic": [21, 62, 97, 1325, 1328, 1340, 1341, 1343, 1401, 1415, 1417, 1434, 1441, 1444], "device_count": 94, "device_get": 95, "device_memory_profil": 1006, "device_put": [96, 1441], "diag": 651, "diag_indic": 652, "diag_indices_from": 653, "diagflat": 654, "diagon": [22, 655, 788], "dialect": 273, "dict": [1313, 1320, 1433, 1437], "diff": 656, "differ": [1320, 1424, 1437, 1470], "differenti": [1313, 1314, 1319, 1320, 1350, 1359, 1360, 1433, 1437], "digamma": [358, 1113], "digit": 657, "dilat": 1439, "dimens": [1346, 1439], "dimension": 1439, "dir": 1328, "direct": [1325, 1328, 1458], "directori": 1463, "dirichlet": [1024, 1181, 1182, 1403], "disabl": [1328, 1410, 1413, 1424], "disable_jit": 98, "disable_x64": 129, "disagre": 1434, "disallow": 1328, "dispatch": [1317, 1328, 1473], "displai": 1445, "distribut": [99, 100, 1328, 1341, 1363, 1434, 1458], "div": 359, "div_check": 122, "dive": 1314, "diverg": 1432, "divid": [658, 1328], "divmod": 659, "dlpack": [101, 102, 1364], "dma": 1458, "do": [1349, 1410, 1413, 1424, 1427, 1436, 1448], "docker": 1356, "doctest": 1339, "document": [1339, 1343, 1414, 1451], "doe": [1334, 1425], "doesn": 1448, "domain": 1325, "don": 1415, "donat": 1324, "dot": [23, 154, 360, 660], "dot_gener": 361, "dot_product_attent": 506, "doubl": [661, 1432, 1455, 1458], "double_sided_maxwel": 1025, "down": [1415, 1443], "downstream": [1418, 1448], "dr": [1313, 1410, 1415, 1424], "draft": 1308, "dsplit": 662, "dstack": 663, "dtype": [24, 103, 104, 105, 106, 107, 108, 109, 664, 1328, 1337, 1365, 1425, 1473], "dtypelik": 1301, "duck": 1414, "dump": 1328, "dure": 1333, "dynam": [1328, 1432, 1462], "dynamic_index_in_dim": 362, "dynamic_slic": 363, "dynamic_slice_in_dim": 364, "dynamic_update_index_in_dim": 365, "dynamic_update_slic": 366, "dynamic_update_slice_in_dim": 367, "each": [1341, 1415, 1443], "eager": 1328, "easier": 1356, "ecosystem": 1355, "edg": 1455, "ediff1d": 665, "edit": 1339, "effect": [1412, 1424, 1473], "effici": 1417, "effort": [1328, 1420], "effver": 1420, "eig": [397, 789], "eigh": [398, 790, 1070], "eigh_tridiagon": 1071, "eigval": 791, "eigvalsh": 792, "einsum": 666, "einsum_path": 667, "elbo": 1445, "element": 1453, "elementwis": [1455, 1457], "elementwise_inline_asm": 190, "elu": 507, "emit_pipelin": 174, "empti": [232, 668, 1328], "empty_lik": 669, "emul": 1449, "enabl": [1328, 1337, 1410, 1413], "enable_check": 110, "enable_custom_prng": 111, "enable_custom_vjp_by_custom_transpos": 112, "enable_x64": 130, "end": 1449, "enforc": [1313, 1412, 1433], "enhanc": 1428, "ensur": 1343, "ensure_compile_time_ev": 113, "enter": 1426, "entr": 1114, "entri": 1328, "env": 1328, "eq": 368, "equal": [670, 1346], "equival": 1466, "erf": [369, 1115], "erf_inv": 370, "erfc": [371, 1116], "erfinv": 1117, "err": 1414, "error": [115, 1314, 1328, 1333, 1342, 1346, 1424, 1434], "estim": 1313, "etc": 1410, "eval_shap": 114, "evalu": [1197, 1318, 1320, 1360, 1414, 1418, 1436, 1437], "event": 1464, "everyth": 1429, "everywher": 1337, "exact": 1349, "examin": 1463, "exampl": [1311, 1313, 1314, 1316, 1335, 1336, 1339, 1341, 1348, 1350, 1385, 1415, 1417, 1421, 1424, 1426, 1431, 1433, 1434, 1443, 1445, 1449, 1455, 1456, 1458, 1462, 1469, 1474], "example_librari": [1366, 1367, 1368], "except": 1348, "excess": 1439, "exec": 1328, "execut": [1449, 1452], "exercis": 1436, "exist": [1360, 1418], "exp": [372, 671], "exp1": 1118, "exp2": [373, 672], "expand_dim": [374, 673], "expect": 1328, "experiment": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 1316, 1328, 1333, 1334, 1343, 1352, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385], "expi": 1119, "expit": 1120, "explain": 1328, "explan": [1415, 1423, 1424], "explicit": [1434, 1440, 1452, 1466, 1468, 1469, 1474], "explicitli": 1316, "explor": 1348, "expm": 1072, "expm1": [375, 674], "expm_frechet": 1073, "expn": 1121, "expon": [1183, 1184, 1185, 1186, 1187, 1188, 1189, 1403], "exponenti": 1026, "export": [241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 1328, 1343, 1344, 1386], "expos": [1325, 1424], "express": 1417, "extend": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 1316, 1387, 1388, 1389, 1390, 1391, 1392, 1416, 1425, 1449, 1465], "extens": [1347, 1416, 1422], "extern": [1314, 1348, 1431], "extract": 675, "ey": [233, 676], "f": 1027, "fab": 677, "factori": 1122, "fail": 1349, "failur": [1352, 1458], "fake": 1445, "faq": 1349, "faster": 1349, "featur": [1313, 1352, 1413, 1420, 1433, 1461], "feb": 1326, "februari": 1326, "ffi": [262, 263, 264, 265, 283, 284, 285, 286, 287, 1314, 1350, 1392], "ffi_cal": [262, 283], "ffi_low": [263, 284], "fft": [376, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 1059, 1060, 1061, 1062, 1399, 1403, 1418], "fft2": 679, "fftconvolv": 1100, "fftfreq": 680, "fftn": 681, "fftshift": 682, "file": 1328, "fill_diagon": 696, "filter": 1328, "fin": 1432, "final": [1318, 1358, 1458], "find": 1322, "finfo": 697, "first": [1436, 1460], "fit": 1328, "fix": [698, 1326, 1424], "flag": [1333, 1335, 1337, 1353, 1475], "flat": 25, "flatnonzero": 699, "flatten": [26, 1263, 1318, 1422], "flatten_util": [288, 1393], "flatten_with_path": 1264, "flavor": 1348, "flexibl": [700, 1419, 1449], "flip": 701, "fliplr": 702, "flipud": 703, "float": [709, 1426], "float0": 105, "float16": 704, "float32": 705, "float64": 706, "float_": 707, "float_check": 123, "float_pow": 708, "floor": [377, 710], "floor_divid": 711, "flow": [1318, 1331, 1395, 1432, 1457], "fly": 1318, "fmax": 712, "fmin": 713, "fmod": 714, "fold": 1328, "fold_in": 1028, "follow": [1414, 1415, 1434], "foreign": 1350, "fori_loop": [378, 1331], "forward": [1313, 1318, 1319, 1328, 1343, 1360, 1433, 1437], "foundat": [1313, 1437], "frame": 1328, "frequent": 1349, "fresnel": 1123, "frexp": 715, "friction": 1414, "from": [1318, 1319, 1325, 1328, 1339, 1343, 1346, 1356, 1414, 1431, 1432, 1449], "from_dlpack": [101, 716], "from_gda": 1410, "frombuff": 717, "fromfil": 718, "fromfunct": 719, "fromit": 720, "frompyfunc": 721, "fromstr": 722, "front": 1449, "frontend": 1350, "fsdp": 1443, "full": [379, 723, 1328, 1329, 1341, 1414, 1417], "full_lik": [380, 724], "fulli": 1443, "function": [1313, 1315, 1318, 1320, 1333, 1334, 1349, 1350, 1378, 1379, 1380, 1381, 1386, 1393, 1394, 1397, 1406, 1407, 1408, 1418, 1419, 1429, 1432, 1433, 1435, 1436, 1437, 1440, 1442, 1445, 1449, 1460, 1465, 1474], "fundament": [1354, 1438], "funm": 1074, "further": 1469, "fuse": 1460, "futur": 1448, "gamma": [1029, 1124, 1190, 1191, 1192, 1193, 1194, 1195, 1403], "gammainc": 1125, "gammaincc": 1126, "gammaln": 1127, "gammasgn": 1128, "garbag": 1328, "gather": [381, 1443, 1458], "gaussian_kd": [1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1403], "gcd": 725, "gda": 1410, "ge": 382, "gelu": 508, "gener": [726, 1341, 1353, 1418, 1434, 1439, 1445, 1457, 1464, 1469], "generalized_norm": 1030, "gennorm": [1204, 1205, 1206, 1403], "geom": [1207, 1208, 1403], "geometr": 1031, "geomspac": 727, "get": 1322, "get_backend": 490, "get_compile_opt": 491, "get_printopt": 728, "get_scaled_dot_general_config": 509, "github": 1329, "global": 1341, "global_array_to_host_local_arrai": 136, "global_shard": 27, "gloo": 1328, "glorot_norm": 518, "glorot_uniform": 519, "glossari": 1351, "glu": 510, "gmem": [161, 1452], "gmre": 1106, "go": [1410, 1413, 1424], "goal": [1419, 1426], "googl": [1329, 1356, 1463], "gotcha": 1474, "gpu": [1328, 1339, 1340, 1350, 1352, 1353, 1356, 1431, 1449, 1451, 1452, 1454, 1464, 1475], "grad": [234, 289, 1313, 1318, 1320, 1334, 1336, 1437, 1444, 1449], "gradient": [729, 1313, 1320, 1325, 1349, 1354, 1395, 1433, 1437, 1445], "granular": 1414, "greater": 730, "greater_equ": 731, "grid": [1453, 1455, 1456, 1457], "gridspec": 141, "gt": 383, "guarante": 1343, "guard": [1328, 1471], "guid": [1314, 1330, 1343, 1344, 1347, 1414, 1423, 1454, 1459], "gumbel": [1032, 1328], "ham": 732, "han": 733, "hand": 1460, "handl": [1313, 1410, 1411, 1426, 1433, 1465, 1474], "handler": 1350, "happen": 1360, "hard_sigmoid": 511, "hard_silu": 512, "hard_swish": 513, "hard_tanh": 514, "harder": 1356, "hardwar": 1452, "hbm": 1458, "he_norm": 520, "he_uniform": 521, "heavisid": 734, "hello": 1456, "help": 1322, "helper": 1349, "hermet": 1339, "hessenberg": [399, 1075], "hessian": [290, 1313, 1437], "hfft": 683, "hidden": 1325, "hierarchi": [1414, 1455], "high": [1328, 1355], "higher": [1313, 1411, 1440], "hilbert": 1076, "histogram": 735, "histogram2d": 736, "histogram_bin_edg": 737, "histogramdd": 738, "hlo": 1328, "hopper": 1452, "host": [1328, 1410, 1431, 1441], "host_local_array_to_global_arrai": 137, "hourli": 1358, "householder_product": 400, "how": [1313, 1328, 1340, 1349, 1410, 1413, 1415, 1417, 1424, 1426, 1427, 1428, 1429, 1434, 1437, 1443, 1444, 1448, 1453, 1463], "hsplit": 739, "hstack": 740, "hyp1f1": 1129, "hyperparamet": [1435, 1442], "hypot": 741, "hypothesi": 1339, "i": [1316, 1340, 1346, 1349, 1410, 1413, 1415, 1424, 1427, 1434, 1436, 1443, 1452, 1457, 1465, 1474], "i0": [742, 1130, 1131], "i1": [1132, 1133], "idct": 1061, "idctn": 1062, "idea": [1319, 1419], "ident": [515, 743], "idx": 1432, "ifft": 684, "ifft2": 685, "ifftn": 686, "ifftshift": 687, "igamma": 384, "igammac": 385, "ignor": 1328, "ihfft": 688, "iinfo": 744, "illustr": 1439, "imag": [28, 291, 292, 386, 745, 1394], "immedi": 1449, "impact": 1336, "impl": 1328, "implement": [1313, 1328, 1414, 1417, 1418, 1419, 1422, 1425, 1433, 1437, 1448], "implicit": [1313, 1433], "import": [1341, 1418], "imprecis": 1414, "improv": 1358, "in_spec": [1415, 1443], "inadvert": 1425, "includ": 1328, "incorpor": 1325, "index": [1425, 1432, 1453, 1462], "index_check": 124, "index_exp": 746, "index_in_dim": 387, "index_tak": 388, "indic": 747, "indirectli": [1313, 1433], "induc": 1417, "ineffici": 1417, "inexact": 748, "inf": 1328, "infer": 1445, "info": 1328, "inform": [1315, 1465], "inherit": 1414, "initi": [99, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 1318, 1332, 1349, 1398, 1441, 1465], "inlin": 1452, "inner": 749, "innocu": 1413, "input": [1318, 1346, 1410, 1414, 1415, 1417, 1422, 1432, 1439, 1443, 1453], "insert": 750, "insid": [1341, 1448], "inspect": [1333, 1336], "inspect_array_shard": 84, "instal": [1339, 1340, 1356, 1444, 1464], "instanc": 1414, "instruct": 1452, "int16": 751, "int32": 752, "int64": 753, "int8": 754, "int_": 755, "integ": [756, 1426], "integer_pow": 389, "integr": [1063, 1403, 1418], "integrate_box_1d": 1198, "integrate_gaussian": 1199, "integrate_kd": 1200, "intel": 1356, "intellig": 1414, "intent": 1414, "interact": [1333, 1336, 1458], "interfac": 1350, "intermedi": [1417, 1434], "intern": [1316, 1330, 1347, 1360, 1411, 1413, 1424, 1465], "interoper": 1345, "interp": 757, "interpol": [1064, 1403, 1418], "interpret": [1318, 1319, 1416, 1436], "intersect1d": 758, "intro": 1434, "introduct": [1333, 1357, 1360, 1431, 1449, 1468, 1475], "inv": [793, 1077], "invari": 1417, "invers": 1436, "invert": [759, 1436], "investig": 1358, "io": [1339, 1418], "io_callback": [131, 1348], "iota": 390, "ipynb": 1339, "ir": [274, 1319, 1328], "irfft": 689, "irfft2": 690, "irfftn": 691, "is_finit": 391, "is_fully_address": 29, "is_fully_repl": 30, "is_symbolic_dim": 245, "isclos": 760, "iscomplex": 761, "iscomplexobj": 762, "isdtyp": 763, "isf": [1168, 1213, 1226], "isfinit": 764, "isin": 765, "isinf": 766, "isnan": 767, "isneginf": 768, "isposinf": 769, "isreal": 770, "isrealobj": 771, "isscalar": 772, "issu": [1410, 1413, 1424, 1452], "issubdtyp": [106, 773], "istft": 1101, "item": 31, "items": 32, "iter": [774, 1313, 1416, 1433, 1457], "its": [1320, 1437, 1445, 1461], "ix_": 775, "jacfwd": [293, 1313, 1437], "jacobian": [294, 1313, 1437], "jacrev": [295, 1313, 1437], "jan": 1326, "januari": 1326, "jax": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1308, 1312, 1313, 1316, 1318, 1319, 1320, 1322, 1323, 1325, 1326, 1329, 1333, 1334, 1335, 1336, 1339, 1340, 1341, 1343, 1347, 1349, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1444, 1447, 1449, 1454, 1465, 1466, 1470, 1473, 1474, 1475], "jax2tf": 1328, "jax_debug_nan": 1335, "jax_disable_jit": 1335, "jaxlib": [1305, 1316, 1326, 1339, 1356, 1427], "jaxpr": [253, 1318, 1411, 1430, 1436], "jaxpr_as_fun": 260, "jaxpreqn": 254, "jaxruntimeerror": 116, "jaxspars": 200, "jep": [1418, 1420, 1422, 1425, 1428], "jet": 1374, "jit": [296, 1318, 1328, 1331, 1334, 1349, 1359, 1360, 1410, 1411, 1429, 1434, 1444, 1468], "joint": 1445, "juli": [1326, 1447], "june": [1326, 1447], "just": [1359, 1413, 1429, 1444], "jvp": [297, 1313, 1318, 1319, 1328, 1419, 1433, 1437], "k": [1313, 1417, 1440, 1453], "kaiser": 776, "kei": [1033, 1328, 1375, 1402, 1420, 1425, 1430, 1468, 1474], "kernel": [1328, 1439, 1448, 1449, 1452, 1453, 1454, 1455, 1457, 1460, 1462], "key_data": 1034, "key_reus": 1375, "keyentri": 1273, "keypath": 1274, "keystr": 1278, "kind": [1441, 1470], "kl_div": 1134, "know": [1410, 1413, 1424], "kron": 777, "kubernet": 1431, "l2": 1452, "lack": [1414, 1466], "laid": [1427, 1434], "languag": [1411, 1454], "laplac": [1035, 1209, 1210, 1211, 1403], "larg": 1458, "lattic": 1426, "lax": [298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 1336, 1395, 1426, 1430, 1439, 1458], "layer": 1430, "layout": [162, 1439, 1452, 1457], "layout_cast": 175, "lcm": 778, "ldexp": 779, "le": 392, "lead": 1414, "leak": [1328, 1340], "leaky_relu": 531, "leav": [1265, 1426, 1474], "leaves_with_path": 1266, "lecun_norm": 522, "lecun_uniform": 523, "left_shift": 780, "legaci": [1316, 1328, 1408], "less": [781, 1413, 1424], "less_equ": 782, "let": [1354, 1415, 1438, 1443], "level": [1328, 1414, 1422, 1443], "lexsort": 783, "lgamma": 393, "lh": 1439, "lib": [490, 491, 1396], "librari": [1312, 1316, 1325, 1347, 1349, 1425], "licens": 1329, "lifetim": 1448, "like": [1333, 1410], "limit": [1328, 1334, 1335, 1336, 1418, 1441], "linalg": [235, 236, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1104, 1105, 1106, 1385, 1395, 1399, 1403, 1418], "linear": [493, 1318, 1320, 1328, 1395, 1469], "linear_transpos": 492, "linear_util": [266, 267, 268, 269, 270, 271, 272, 1389], "linspac": 815, "lint": [1329, 1339], "linux": 1356, "list": [1313, 1320, 1354, 1393, 1406, 1407, 1408, 1409, 1433, 1437, 1475], "liter": 255, "live_arrai": [494, 1410], "live_buff": 1410, "load": [155, 816, 1341, 1349, 1435, 1442, 1449], "lobpcg_standard": 235, "local": [1339, 1356, 1410, 1458], "local_devic": 496, "local_device_count": 495, "locat": 1328, "log": [411, 817, 1326, 1328, 1445, 1463], "log10": 818, "log1p": [412, 819], "log2": 820, "log_compil": 497, "log_ndtr": 1135, "log_sigmoid": 532, "log_softmax": [533, 1136], "logaddexp": 821, "logaddexp2": 822, "logcdf": [1158, 1169, 1176, 1184, 1191, 1227, 1243], "loggamma": 1036, "logic": 1331, "logical_and": 823, "logical_not": 824, "logical_or": 825, "logical_xor": 826, "logist": [413, 1037, 1212, 1213, 1214, 1215, 1216, 1217, 1320, 1385, 1403], "logit": 1137, "lognorm": 1038, "logpdf": [1159, 1170, 1177, 1181, 1185, 1192, 1201, 1205, 1210, 1214, 1221, 1228, 1233, 1240, 1244, 1249, 1252, 1254], "logpmf": [1154, 1163, 1165, 1207, 1219, 1223, 1236], "logsf": [1160, 1171, 1178, 1186, 1193, 1229, 1245], "logspac": 827, "logsumexp": [534, 1138], "loop": [1435, 1442, 1448, 1453], "loss": [1426, 1435, 1442], "lower": [1315, 1328, 1449], "lpmn": 1139, "lpmn_valu": 1140, "lstsq": 794, "lt": 414, "lu": [401, 1078], "lu_factor": 1079, "lu_pivots_to_permut": 402, "lu_solv": 1080, "m": 1328, "ma": 1418, "mac": 1356, "machin": 1464, "machineri": 1318, "made": [1313, 1437], "magma": 1328, "mai": 1326, "main": [1319, 1419], "make": [1349, 1417, 1427, 1431], "make_array_from_callback": 498, "make_array_from_process_local_data": 499, "make_array_from_single_device_arrai": 500, "make_jaxpr": 501, "make_mesh": 502, "manag": [1328, 1335, 1339, 1412], "manipul": [1394, 1402], "manual": [1321, 1353, 1443, 1445, 1464, 1468], "map": [415, 1267, 1415, 1417, 1443, 1474], "map_coordin": 1091, "map_with_path": 1268, "mar": 1326, "march": 1326, "mark": [1349, 1429], "mask": 1462, "mask_indic": 828, "materi": 1336, "math": [1313, 1437], "matmul": [795, 829, 1328, 1353, 1449], "matric": 1385, "matrix": [1313, 1437, 1443, 1457, 1460, 1462], "matrix_norm": 796, "matrix_pow": 797, "matrix_rank": 798, "matrix_transpos": [799, 830], "matvec": 831, "max": [34, 416, 832, 1328], "max_contigu": 156, "maximum": 833, "maximum_supported_calling_convention_vers": 246, "maxwel": 1039, "md": 1339, "mean": [35, 834, 1425], "mechan": 1414, "median": 835, "megacor": [1458, 1461], "member": 1409, "memori": [1328, 1340, 1352, 1401, 1434, 1441, 1452, 1455, 1457, 1458, 1461], "memoryref": 142, "memoryspac": 163, "mention": 1440, "merg": 1328, "merge_linear_aux": 269, "mesh": [1328, 1431, 1440, 1443], "mesh_util": [132, 133, 1376], "meshgrid": 836, "messag": 1424, "metadata": 1328, "method": [1349, 1359], "mgrid": 837, "migrat": [1343, 1410], "min": [36, 417, 838, 1328], "minim": 1093, "minimum": 839, "minimum_supported_calling_convention_vers": 247, "miscellan": [1359, 1432], "mish": 535, "miss": [1328, 1463], "mistak": 1474, "mix": 1426, "mixtur": 1440, "ml": 1474, "mlir": [273, 274, 275, 1390], "mma": 1452, "mock": 1328, "mod": 840, "mode": [1218, 1313, 1318, 1319, 1343, 1433, 1437, 1440, 1449, 1453, 1458], "model": [1314, 1341, 1421, 1434, 1445, 1456, 1458, 1474], "modf": 841, "modifi": 1339, "modul": [1328, 1343, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1416], "modular": 1312, "more": [1313, 1333, 1336, 1412, 1415, 1421, 1433, 1437, 1449], "mosaic": [1328, 1449, 1451, 1452, 1454], "mosaic_gpu": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 1379], "most": [1328, 1426], "motiv": [1412, 1415, 1417, 1425, 1448], "moveaxi": 842, "mt": 33, "mul": 418, "multi": [1325, 1343, 1353, 1431, 1463], "multi_dot": 800, "multicor": 1457, "multigammaln": 1141, "multihost": 1377, "multihost_util": [134, 135, 136, 137, 138, 139, 1377], "multinomi": [1040, 1219, 1220, 1403], "multipl": [1325, 1350, 1431, 1452, 1457, 1460, 1462, 1463, 1464], "multiple_of": 180, "multipli": [843, 1443], "multivariate_norm": [1041, 1221, 1222, 1403], "must": 1346, "mutabl": 1328, "my": [1349, 1410, 1424], "mypi": 1414, "n": 1439, "name": [1328, 1410, 1417, 1441], "named_cal": 503, "named_scop": 504, "namedshard": [1434, 1441], "namespac": 1418, "nan": [1328, 1349, 1432], "nan_check": 125, "nan_to_num": 844, "nanargmax": 845, "nanargmin": 846, "nancumprod": 847, "nancumsum": 848, "nanmax": 849, "nanmean": 850, "nanmedian": 851, "nanmin": 852, "nanpercentil": 853, "nanprod": 854, "nanquantil": 855, "nanstd": 856, "nansum": 857, "nanvar": 858, "nativ": 1328, "nbinom": [1223, 1224, 1403], "nbyte": 37, "nccl": 1353, "ndarrai": [859, 860], "ndim": [38, 861], "ndimag": [1091, 1403, 1418], "ndtr": 1142, "ndtri": 1143, "ne": 419, "necessari": 1426, "need": [1334, 1413], "neg": [420, 862], "nest": [1320, 1437, 1458], "network": [1311, 1434, 1435, 1442, 1443], "neural": [1311, 1434, 1435, 1442, 1443], "new": [1339, 1360, 1410, 1413, 1417, 1425, 1449], "next": [1313, 1319, 1320, 1333, 1458, 1466, 1468], "nextaft": [421, 863], "nightli": [1339, 1356, 1358], "nn": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 1397, 1398], "no_trac": 552, "node": [1463, 1474], "non": [1313, 1419, 1420, 1432, 1433, 1445], "nondiff_argnum": [1313, 1423, 1433], "none": 1474, "nonzero": [39, 864], "norm": [801, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1403], "normal": [524, 1042], "not_equ": 865, "notabl": 1326, "note": [1330, 1339, 1354, 1419, 1425, 1438, 1446, 1450, 1454, 1458], "notebook": 1339, "noteworthi": 1457, "nov": 1326, "novemb": 1326, "now": [1410, 1413, 1424], "nsight": [1353, 1464], "num": 1328, "num_program": [181, 1449], "number": [866, 1313, 1432, 1434, 1437, 1439, 1444, 1457, 1466], "numer": [1313, 1316, 1320, 1349, 1413, 1424, 1433, 1437], "numpi": [553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1328, 1338, 1349, 1399, 1414, 1418, 1424, 1426, 1430, 1432, 1444, 1466], "numpy_rank_promot": 993, "nvidia": [1353, 1356], "object": [1418, 1465], "object_": 867, "oct": 1326, "octob": [1326, 1447], "odr": 1418, "offload": [1354, 1441], "offset": 1328, "ogrid": 868, "old": 1413, "older": 1356, "omnistag": 1424, "one": [1439, 1443], "one_hot": 536, "ones": [525, 869], "ones_lik": 870, "onli": [1313, 1433], "oob": 1328, "oom": 1352, "op": [994, 995, 996, 997, 1328, 1400, 1448], "open": 1312, "oper": [1331, 1395, 1400, 1413, 1430, 1432, 1440, 1448, 1452, 1457, 1458, 1473], "operand": [1452, 1457], "optim": [1092, 1093, 1313, 1314, 1328, 1367, 1403, 1418, 1424, 1445], "optimization_barri": 422, "optimizeresult": 1092, "option": [1328, 1335, 1341, 1413, 1414, 1426, 1464, 1465], "order": [1313, 1336, 1349, 1411, 1412, 1440, 1452], "orient": 1418, "orthogon": [526, 1043], "other": [1313, 1336, 1385, 1397, 1432, 1433, 1449, 1454], "out": [1343, 1427, 1432, 1434], "out_spec": [1415, 1417, 1443], "outer": [802, 871], "output": [1318, 1349, 1412, 1414, 1415, 1417, 1422, 1441, 1443, 1462], "over": [1415, 1443], "overhead": [1336, 1413], "overrid": 1414, "overview": [1412, 1416, 1425, 1443], "p": [1411, 1417], "packag": [1359, 1427], "packbit": 872, "pad": [423, 873, 1439], "palla": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 1314, 1328, 1378, 1379, 1380, 1381, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459], "pallas_cal": [182, 1449], "parallel": [1309, 1314, 1325, 1341, 1353, 1357, 1359, 1395, 1434, 1443, 1468], "paramet": [1441, 1452, 1465, 1474], "parameter": 1455, "pareto": [1044, 1233, 1234, 1403], "part": [1313, 1318, 1319], "partial": [1275, 1341, 1346, 1414, 1417], "partit": [874, 1328, 1350], "partition": 1328, "pascal": 1081, "pass": [1328, 1448], "passmanag": 275, "path": 1474, "pattern": [1458, 1462, 1474], "pdb": 1333, "pdf": [1161, 1172, 1179, 1182, 1187, 1194, 1202, 1206, 1211, 1215, 1222, 1230, 1234, 1241, 1246, 1250, 1253, 1255], "per": [1313, 1341, 1415], "percentil": [875, 1328], "perfetto": 1464, "perform": [1310, 1314, 1336, 1353, 1355, 1455, 1460], "permiss": 1414, "permut": [1045, 1458], "permute_dim": 876, "persist": [1328, 1463], "pgle": [1328, 1353], "piecewis": 877, "pinv": 803, "pip": [1339, 1356], "pipelin": [1341, 1353, 1443, 1455, 1458, 1460, 1461], "pitfal": 1463, "pjit": [1334, 1382, 1410, 1415], "pjrt": 1328, "place": [878, 1432, 1457], "placement": [1441, 1457], "plan": 1414, "platform": [1328, 1343, 1350, 1356], "platform_depend": 424, "plu": 1417, "pluggabl": [1312, 1425], "pmap": [998, 1328, 1334, 1336, 1359, 1415], "pmax": 425, "pmean": 426, "pmf": [1155, 1164, 1166, 1208, 1220, 1224, 1237], "pmin": 427, "poch": 1144, "poisson": [1046, 1235, 1236, 1237, 1403], "polar": 1082, "poli": 879, "polici": [1338, 1354, 1387, 1413, 1416, 1438, 1441], "polyadd": 880, "polyd": 881, "polydiv": 882, "polyfit": 883, "polygamma": [428, 1145], "polyint": 884, "polymorph": [1343, 1346, 1386, 1422], "polymul": 885, "polynomi": 1418, "polysub": 886, "polyv": 887, "population_count": 429, "posit": 888, "possibl": [1413, 1416], "pow": [430, 889], "power": 890, "powerhous": 1475, "pp": 1443, "ppermut": [431, 1443, 1458], "ppf": [1156, 1173, 1188, 1216, 1231, 1251], "pprint": 1328, "practic": [1354, 1409, 1438], "pre": 1463, "precis": [1328, 1353, 1426, 1432, 1457], "predict": [1435, 1442], "prefetch": 1462, "prepar": 1452, "presenc": 1346, "preserv": [1415, 1443], "primal": 1360, "primit": [256, 261, 1318, 1331, 1360, 1411, 1417, 1449, 1452], "principl": 1414, "print": [85, 1333, 1336], "print_environment_info": 999, "printopt": 891, "prioriti": 1422, "privat": 1316, "prng": [1328, 1402, 1421, 1425], "prng_kei": 107, "prngkei": 1013, "problem": [1313, 1417, 1419, 1433], "process": [1318, 1328, 1341, 1353, 1431], "process_allgath": 138, "process_count": 1000, "process_index": 1001, "process_indic": 1002, "prod": [40, 892], "product": [1313, 1437], "profil": [1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1310, 1314, 1328, 1340, 1353, 1401, 1464], "program": [1340, 1357, 1421, 1456, 1463, 1464, 1468], "program_id": [183, 1449], "programmat": 1464, "progress": 1425, "project": 1312, "promela": 1328, "promot": [1314, 1328, 1426, 1467, 1473], "promote_typ": 893, "properti": [1359, 1426, 1457], "propos": 1428, "protocol": 1422, "proxi": 1328, "pseudorandom": [1444, 1466], "pshuffl": 432, "psum": [433, 1417, 1443, 1458], "psum_scatt": [434, 1443, 1458], "pswapax": 435, "ptp": [41, 894], "ptr": 1328, "public": [1359, 1410], "pull": 1329, "pure": 1432, "pure_callback": [1012, 1348], "purpos": 1414, "put": [895, 1448, 1458], "put_along_axi": 896, "pycapsul": [264, 285], "pytest": 1339, "python": [1313, 1331, 1333, 1338, 1339, 1399, 1413, 1419, 1426, 1433, 1473], "pytorch": [1426, 1435], "pytre": [1313, 1314, 1318, 1332, 1349, 1411, 1422, 1430, 1433, 1465, 1474], "pytyp": 1414, "qdwh": 403, "qr": [404, 804, 1083], "quantil": 897, "question": 1349, "quick": [1434, 1463], "quickstart": [1444, 1456], "quo": 1420, "r_": 898, "race": 1458, "rad2deg": 899, "rademach": 1047, "radian": 900, "rais": 1328, "randint": 1048, "random": [276, 277, 278, 279, 280, 281, 282, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1316, 1328, 1391, 1402, 1416, 1418, 1432, 1434, 1457, 1466], "random_bcoo": 237, "random_gamma_grad": 436, "rang": 1328, "rank": [1328, 1415, 1443, 1467], "rankdata": 1238, "ravel": [42, 901], "ravel_multi_index": 902, "ravel_pytre": 288, "rayleigh": 1049, "rbg_prng_impl": 277, "rdma": 1458, "read": [1333, 1449], "reader": 1436, "readthedoc": 1339, "real": [43, 437, 903], "realist": [1415, 1421], "reciproc": [438, 904], "recurs": [1354, 1410, 1438], "recursionerror": 1410, "reduc": [439, 1269, 1415, 1443, 1458], "reduce_and": 440, "reduce_max": 441, "reduce_min": 442, "reduce_or": 443, "reduce_precis": 444, "reduce_prod": 445, "reduce_sum": 446, "reduce_window": 447, "reduce_xor": 448, "reduct": [1328, 1400, 1455, 1457], "ref": 1449, "refer": [1377, 1385, 1402, 1449, 1451, 1452], "regex": 1328, "regist": 1350, "register_custom_call_target": 1305, "register_dataclass": 1279, "register_ffi_target": [265, 286], "register_ffi_type_id": 287, "register_namedtuple_seri": 248, "register_pytree_nod": 1280, "register_pytree_node_class": 1281, "register_pytree_node_seri": 249, "register_pytree_with_kei": 1282, "register_pytree_with_keys_class": 1283, "register_stat": 1284, "regress": [1320, 1358, 1385, 1469], "regular": 1458, "regulargridinterpol": 1064, "rel_entr": 1146, "relat": [1386, 1395], "releas": [1427, 1447], "relu": 537, "relu6": 538, "rem": 449, "remaind": 905, "remat": [1328, 1354, 1413, 1438], "remateri": 1413, "remot": [1458, 1464], "remov": [1328, 1413, 1419], "repeat": [44, 906], "replac": 1410, "replic": [1341, 1417], "report": 1328, "repositori": 1339, "repres": 1462, "request": [1329, 1452], "resampl": 1203, "reshap": [45, 450, 907, 1457], "reshard": 1341, "residu": 1328, "resiz": [291, 908], "resourc": 1314, "respect": [1320, 1437], "restrict": [1329, 1457], "result": [1336, 1443, 1445], "result_typ": [108, 909], "reus": [1328, 1375, 1425], "rev": 451, "reveng": 1448, "revers": [1313, 1343, 1360, 1433, 1437], "revisit": 1455, "reviv": 1417, "rfft": 692, "rfft2": 693, "rfftfreq": 694, "rfftn": 695, "rh": 1439, "right": [1458, 1460], "right_shift": 910, "ring": 1458, "rint": 911, "rng": [1402, 1425], "rng_bit_gener": 452, "rng_uniform": 453, "roadmap": 1414, "robust": 1418, "rocm": [1328, 1339], "roll": 912, "rollaxi": 913, "root": 914, "rot90": 915, "rotat": 1107, "round": [46, 454, 916], "rout": 1458, "rsf2csf": 1084, "rsqrt": 455, "rubric": 1418, "rule": [1313, 1360, 1419, 1433, 1440], "run": [1328, 1339, 1458], "run_scop": 184, "runtim": [1328, 1333, 1362, 1412, 1414], "s_": 917, "safe": [1425, 1427], "same": 1439, "sampler": 1402, "save": [918, 1438], "save_device_memory_profil": 1007, "saveabl": [1354, 1438], "savez": 919, "scalar": [1426, 1462], "scalar_type_of": 109, "scale_and_transl": 292, "scaled_dot_gener": 539, "scaled_matmul": 540, "scan": [456, 1328, 1411], "scatter": [457, 1458], "scatter_add": 458, "scatter_appli": 459, "scatter_max": 460, "scatter_min": 461, "scatter_mul": 462, "schedul": 1448, "schur": [405, 1085], "scipi": [1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1403, 1418], "scope": [1346, 1418], "scratch": [1318, 1319], "searchsort": [47, 920], "sec": 1328, "see": [1415, 1443], "seed": 1328, "seed_with_impl": 278, "segment": 1400, "segment_max": 994, "segment_min": 995, "segment_prod": 996, "segment_sum": 997, "select": [463, 921], "select_n": 464, "self": [1349, 1445], "selu": 541, "sem": 1239, "semant": [1314, 1419, 1420, 1426, 1456, 1473], "semaphor": [1452, 1458], "sensit": 1319, "sep": 1326, "separ": 1427, "sept": 1326, "septemb": [1326, 1447], "sequenc": 1412, "sequenti": 1466, "sequential_vmap": 75, "serial": [193, 1328, 1343, 1344, 1399], "serialize_execut": [192, 193, 1383], "set": [1337, 1431, 1432, 1440, 1445, 1463], "set_max_regist": 176, "set_printopt": 922, "setdiff1d": 923, "setup": 1313, "setxor1d": 924, "sf": [1162, 1174, 1180, 1189, 1195, 1217, 1232, 1247], "sgd": 1445, "shape": [48, 925, 1328, 1343, 1346, 1386, 1424, 1432], "shapedtypestruct": 63, "shard": [49, 1350, 1362, 1395, 1404, 1416, 1431, 1434, 1440, 1441, 1443, 1444, 1468], "shard_map": [194, 1256, 1350, 1384, 1415, 1443, 1468], "shardi": 1328, "share": 1328, "sharp": [1336, 1432, 1434, 1455], "shift_left": 465, "shift_right_arithmet": 466, "shift_right_log": 467, "shmap": [1328, 1415], "should": [1414, 1415, 1422, 1428], "shutdown": 100, "side": [1412, 1424, 1443, 1460], "sigmoid": 542, "sign": [468, 926, 1426], "signal": [1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1403, 1418], "signbit": 927, "signedinteg": 928, "significantli": 1413, "silu": 543, "simpl": [1311, 1333, 1350, 1415, 1435, 1442, 1469], "simplic": 1414, "simplifi": [1318, 1413], "sin": [469, 929], "sinc": 930, "singl": [931, 1325, 1329, 1463], "sinh": [470, 932], "size": [50, 933, 1328], "slerp": 1108, "slice": [143, 471, 1462], "slice_in_dim": 472, "slightli": 1424, "slogdet": 805, "slow": [1349, 1415, 1443], "small": 1424, "smem": [164, 1452, 1457], "so": [1415, 1443], "soft_sign": 544, "softmax": [545, 1147, 1328], "softplu": 546, "softwar": 1455, "solut": [1417, 1419, 1424, 1469], "solv": [806, 1086, 1415, 1417], "solvabl": 1346, "solve_triangular": 1087, "some": [1341, 1349, 1412, 1413], "sort": [51, 473, 934, 1349], "sort_complex": 935, "sort_key_v": 474, "sourc": [1328, 1339, 1356, 1427], "space": [936, 1452, 1461], "span": 1431, "spars": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 1104, 1105, 1106, 1385, 1403, 1418, 1462], "sparse_plu": 547, "sparse_sigmoid": 548, "sparsifi": [238, 1385], "spatial": [1107, 1108, 1403, 1418], "spec": 1456, "special": [1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1403, 1418], "specif": [1325, 1415, 1443, 1452, 1461], "specifi": [1339, 1346], "speedup": 1325, "spenc": 1148, "sph_harm": 1149, "sphinx": 1339, "split": [475, 937, 1050, 1415, 1443], "spmd": 1443, "spsolv": 236, "sqrt": [476, 938], "sqrtm": 1088, "squar": [477, 939], "squareplu": 549, "squeez": [52, 478, 940], "stabil": [1313, 1433], "stack": [941, 1312], "stage": [1318, 1319, 1343, 1405], "stakehold": 1418, "standalon": 1464, "standard": [550, 1318, 1399], "start": [1322, 1415, 1428, 1437, 1443, 1463], "start_serv": 1008, "start_trac": 1009, "stat": [1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1403, 1418], "state": [1448, 1466, 1469], "static": [1315, 1349, 1414, 1417, 1429, 1430], "statu": 1420, "stax": 1368, "std": [53, 942], "step": [1313, 1320, 1333, 1354, 1358, 1426, 1438, 1458, 1466, 1468], "steptraceannot": 1003, "stft": 1102, "stop": 1313, "stop_gradi": [479, 1313], "stop_trac": 1010, "store": [185, 1449], "storeexcept": 266, "straight": 1313, "strategi": [1349, 1469], "strength": [1334, 1335, 1336], "strict": 1473, "strictli": 1414, "stride": 1439, "structur": [1270, 1318, 1331, 1385, 1452], "style": [1318, 1425], "sub": 480, "subclass": [1422, 1434], "subpackag": 1359, "subset": 1449, "subtract": 943, "suit": 1329, "sum": [54, 944, 1417, 1458], "summari": [1331, 1433, 1438, 1441], "support": [1338, 1343, 1346, 1350, 1356, 1422, 1457], "svd": [406, 807, 1089], "svdalgorithm": 394, "svdval": 808, "swap": 186, "swapax": [55, 945], "swish": 551, "switch": [481, 1410, 1424], "swizzletransform": 165, "symbol": 1346, "symbolic_args_spec": 250, "symbolic_shap": 251, "symbolicscop": 241, "symmetric_product": 407, "sync": 1339, "sync_global_devic": 139, "synchron": [1452, 1458], "synopsi": 1422, "system": [1353, 1417], "t": [1, 1051, 1240, 1241, 1403, 1415, 1429, 1448], "tabl": 1426, "take": [56, 946, 1313, 1320, 1444, 1452, 1469], "take_along_axi": 947, "tan": [482, 948], "tanh": [483, 949], "target": 1328, "tcgen05": 1452, "techniqu": 1458, "templat": [1449, 1460], "tensor": [1434, 1443], "tensorboard": 1464, "tensorcor": 1452, "tensordot": [809, 950], "tensorflow": [1345, 1426, 1442], "tensorinv": 810, "tensorsolv": 811, "term": 1351, "terminologi": 1431, "test": [1329, 1339, 1418], "test_util": [1257, 1258, 1259, 1406], "than": [1349, 1426], "thi": [1358, 1413, 1415, 1417, 1425, 1448], "think": [1354, 1438, 1444], "thread": 1452, "three": [1421, 1468], "threefri": 1328, "threefry2x32_p": 279, "threefry_2x32": 280, "threefry_prng_impl": 281, "threshold": 1463, "through": 1313, "throw": 1333, "tile": [951, 1415, 1443, 1460], "tilingtransform": 166, "time": [1315, 1328, 1359, 1401, 1424, 1429, 1444], "timeout": 1328, "tip": 1353, "tl": [1313, 1410, 1415, 1424], "to_devic": 57, "to_dlpack": 102, "todens": 239, "toeplitz": 1090, "togeth": [1448, 1458], "toi": [1421, 1424, 1431, 1443], "token": [257, 1412], "tool": 1441, "top": 1443, "top_k": 484, "topic": 1350, "topologi": [1328, 1458], "total": 1325, "toward": 1414, "tp": 1443, "tpu": [1340, 1356, 1380, 1431, 1448, 1449, 1454, 1457, 1458, 1459, 1461, 1475], "trace": [58, 812, 952, 1011, 1315, 1318, 1328, 1401, 1430, 1436, 1464, 1470], "traceannot": 1004, "traceback": 1328, "tracer": [72, 1328, 1349, 1436], "track": [1417, 1443], "tradeoff": 1421, "train": [1435, 1442], "transfer": [1328, 1471], "transfer_guard": 1260, "transform": [270, 1107, 1108, 1313, 1315, 1318, 1321, 1334, 1336, 1385, 1403, 1414, 1419, 1429, 1430, 1440, 1449, 1452, 1474], "transformation_with_aux": 271, "transpos": [59, 485, 953, 1271, 1328, 1417, 1425, 1439, 1452, 1460, 1474], "transposetransform": 167, "transposit": [1360, 1415, 1417, 1443, 1457], "trapezoid": [954, 1063], "tree": [1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1407, 1474], "tree_al": 1285, "tree_broadcast": 1286, "tree_flatten": 1287, "tree_flatten_with_path": 1288, "tree_leav": 1289, "tree_leaves_with_path": 1290, "tree_map": 1291, "tree_map_with_path": 1292, "tree_reduc": 1293, "tree_structur": 1294, "tree_transpos": 1295, "tree_unflatten": 1296, "tree_util": [1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1408, 1474], "treedef_children": 1297, "treedef_is_leaf": 1298, "treedef_tupl": 1299, "tri": 955, "triangular": 1052, "triangular_solv": 408, "trick": 1341, "tridiagon": 409, "tridiagonal_solv": 410, "trigger": 1424, "tril": 956, "tril_indic": 957, "tril_indices_from": 958, "trim_zero": 959, "triton": [187, 188, 189, 190, 1381, 1449], "triu": 960, "triu_indic": 961, "triu_indices_from": 962, "troubleshoot": 1464, "true": [1413, 1443], "true_divid": 963, "trunc": 964, "truncated_norm": [527, 1053], "truncnorm": [1242, 1243, 1244, 1245, 1246, 1247, 1403], "tupl": [1313, 1320, 1433, 1437], "tutori": [1308, 1322, 1432, 1443, 1472], "two": [1313, 1437], "type": [1300, 1301, 1314, 1329, 1339, 1409, 1410, 1414, 1425, 1426, 1440, 1449, 1457, 1473], "ufunc": 965, "uint": 966, "uint16": 967, "uint32": 968, "uint64": [969, 1426], "uint8": 970, "unconcaten": [1415, 1443], "undefin": 1426, "under": [1334, 1336], "understand": 1340, "unexpect": 1332, "unflatten": 1272, "unif": 1414, "unifi": 1414, "uniform": [528, 1054, 1248, 1249, 1250, 1251, 1403], "unimpl": 1440, "union1d": 971, "uniqu": 972, "unique_al": 973, "unique_count": 974, "unique_invers": 975, "unique_valu": 976, "unit": 1452, "unmap": 1417, "unnecessari": 1336, "unpackbit": 977, "unravel_index": 978, "unreleas": [1326, 1447], "unsaf": 1328, "unsafe_rbg_prng_impl": 282, "unsign": 1426, "unsignedinteg": 979, "unstabl": 1414, "unstack": 980, "until": [1415, 1443], "untyp": 1319, "unwrap": 981, "up": [1319, 1431, 1440, 1445, 1453], "updat": [1339, 1423, 1432], "upgrad": 1413, "us": [1313, 1320, 1325, 1328, 1329, 1336, 1339, 1340, 1341, 1349, 1350, 1353, 1360, 1415, 1424, 1425, 1428, 1433, 1436, 1437, 1440, 1443, 1445, 1449, 1452, 1464], "usag": [1313, 1325, 1335, 1336, 1339, 1402, 1433, 1463], "user": [1318, 1325, 1346, 1413, 1417, 1418, 1421, 1425], "user_check": 126, "util": [1362, 1377, 1435, 1442], "v": [1412, 1415, 1417, 1418, 1422, 1430, 1432, 1443, 1444], "valid": 1439, "valu": [1313, 1332, 1333, 1337, 1362, 1434, 1437, 1438, 1443, 1470, 1473], "value_and_grad": [240, 1302, 1320, 1437], "vander": 982, "var": [60, 258, 983, 1411], "vari": [1417, 1443], "variabl": [1346, 1411], "variance_sc": 529, "variat": 1445, "vdot": 984, "vecdot": [813, 985], "vecmat": 986, "vector": [987, 1313, 1318, 1321, 1359, 1437, 1444], "vector_norm": 814, "verbos": 1328, "veri": 1349, "verif": 1358, "version": [1316, 1328, 1338, 1339, 1343, 1420, 1427], "via": [1356, 1414, 1464, 1468], "view": [61, 1464, 1465], "visibl": 1328, "visualize_array_shard": 86, "visualize_shard": 87, "vjp": [1303, 1313, 1318, 1328, 1419, 1433, 1437], "vma": 1328, "vmap": [1304, 1313, 1318, 1328, 1334, 1350, 1359, 1419, 1437, 1444, 1445, 1449], "vonmis": [1252, 1253, 1403], "vq": 1058, "vsplit": 988, "vstack": 989, "wai": [1329, 1341, 1434, 1443], "wait": 1452, "wait_smem_to_gmem": 177, "wald": 1055, "warn": [1328, 1467], "we": [1413, 1427, 1429, 1448], "weakli": 1473, "weibull_min": 1056, "welch": 1103, "wgmma": [178, 1452], "wgmma_wait": 179, "wgmmaaccumulatorref": 168, "what": [1316, 1354, 1360, 1410, 1413, 1418, 1423, 1424, 1425, 1436, 1438, 1452, 1457, 1465, 1474], "wheel": [1339, 1356], "when": [191, 1315, 1336, 1353, 1360, 1410, 1415, 1424, 1428, 1434], "where": [990, 1349], "whether": 1417, "which": 1422, "while": 1411, "while_loop": [486, 1331], "why": [1334, 1336, 1348, 1349, 1410, 1413, 1414, 1415, 1418, 1424, 1427, 1429, 1436, 1448], "wider": 1426, "window": 1339, "with_sharding_constraint": 487, "within": [1339, 1341, 1426], "work": [1313, 1429, 1433, 1440, 1448, 1463, 1469, 1474], "workflow": [1314, 1325], "world": 1456, "wrap_init": 272, "wrap_key_data": 1057, "wrapcauchi": [1254, 1255, 1403], "wrappedfun": 267, "wrapper": 1418, "write": [1311, 1436, 1445, 1449, 1452, 1457], "x": 1432, "x64": [1328, 1337], "xla": [1328, 1339, 1353, 1360, 1418, 1424, 1430, 1448, 1458, 1475], "xla_bridg": [490, 491, 1396], "xla_client": [1305, 1396], "xlog1pi": 1150, "xlogi": 1151, "xmap": 1415, "xprof": 1464, "y": 1432, "you": [1360, 1413, 1415, 1428], "your": [1325, 1436, 1460], "zero": [530, 991, 1349, 1420], "zeros_lik": 992, "zeros_like_arrai": 488, "zeta": [489, 1152]}})